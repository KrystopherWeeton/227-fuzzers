; ModuleID = '../../cc/paint/paint_shader.cc'
source_filename = "../../cc/paint/paint_shader.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.sk_sp.8 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.10 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.2, i32, i32 }
%class.sk_sp.2 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.11" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.14 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.1 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.scoped_refptr = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkSize = type { float, float }
%union.anon.52 = type { i64 }
%union.anon.57 = type { %"class.gfx::ColorSpace" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%class.sk_sp.39 = type { %class.SkImage* }
%"struct.gpu::Mailbox" = type { [16 x i8] }
%union.anon.44 = type { i32 }
%class.sk_sp.45 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.46 }
%class.scoped_refptr.46 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.47", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.47" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%struct.SkCubicResampler = type { float, float }
%struct.SkRect = type { float, float, float, float }
%class.sk_sp.63 = type { %class.SkBBoxHierarchy* }
%class.SkBBoxHierarchy = type { %class.SkRefCnt.base, [4 x i8] }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %class.SkRecorder* }
%class.SkRecorder = type opaque
%class.sk_sp.68 = type { %class.SkRecord* }
%class.SkRecord = type opaque
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %class.SkMiniRecorder* }
%class.SkMiniRecorder = type opaque
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.8, i32, %"class.absl::optional.15", %"class.std::__1::vector.20", %"class.std::__1::vector.27", %class.sk_sp.34, %class.sk_sp.1, i32, [4 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkPoint = type { float, float }
%"class.cc::PaintImage" = type { %class.sk_sp.1, %class.sk_sp.8, %"class.gfx::Rect", i32, %class.sk_sp.10, %class.sk_sp.14, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.1, %class.scoped_refptr }
%"class.absl::optional.15" = type { %"class.absl::optional_internal::optional_data.16" }
%"class.absl::optional_internal::optional_data.16" = type { %"class.absl::optional_internal::optional_data_base.17" }
%"class.absl::optional_internal::optional_data_base.17" = type { %"class.absl::optional_internal::optional_data_dtor_base.18" }
%"class.absl::optional_internal::optional_data_dtor_base.18" = type { i8, %union.anon.19 }
%union.anon.19 = type { %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { i32*, i32*, %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { i32* }
%"class.std::__1::vector.27" = type { %"class.std::__1::__vector_base.28" }
%"class.std::__1::__vector_base.28" = type { float*, float*, %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { float* }
%class.sk_sp.34 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.35", [7 x i8] }>
%"struct.std::__1::atomic.35" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__cxx_atomic_impl.37" }
%"struct.std::__1::__cxx_atomic_impl.37" = type { %"struct.std::__1::__cxx_atomic_base_impl.38" }
%"struct.std::__1::__cxx_atomic_base_impl.38" = type { i8 }
%class.sk_sp = type { %"class.cc::PaintShader"* }
%"class.cc::ImageProvider" = type { i32 (...)** }
%class.SkPictureRecorder = type { i8, %struct.SkRect, %class.sk_sp.63, %"class.std::__1::unique_ptr.64", %class.sk_sp.68, %"class.std::__1::unique_ptr.69" }
%"struct.cc::PlaybackParams" = type <{ %"class.cc::ImageProvider"*, %class.SkM44, %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.89", %"class.absl::optional.90", [6 x i8] }>
%class.SkM44 = type { [16 x float] }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback.89" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.absl::optional.90" = type { %"class.absl::optional_internal::optional_data.91" }
%"class.absl::optional_internal::optional_data.91" = type { %"class.absl::optional_internal::optional_data_base.92" }
%"class.absl::optional_internal::optional_data_base.92" = type { %"class.absl::optional_internal::optional_data_dtor_base.93" }
%"class.absl::optional_internal::optional_data_dtor_base.93" = type { i8, %union.anon.94 }
%union.anon.94 = type { i8 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.75, [384 x i64], %class.sk_sp.76, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.77", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.83" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.75 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.76 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%class.SkBBHFactory = type { i32 (...)** }
%"class.cc::ImageProvider::ScopedResult" = type { %"class.cc::DecodedDrawImage", %class.sk_sp.8, %"class.base::OnceCallback" }
%"class.cc::DecodedDrawImage" = type <{ %class.sk_sp.39, %"struct.gpu::Mailbox", %"class.absl::optional.40", %class.sk_sp.45, %struct.SkSize, %struct.SkSize, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.40" = type { %"class.absl::optional_internal::optional_data.41" }
%"class.absl::optional_internal::optional_data.41" = type { %"class.absl::optional_internal::optional_data_base.42" }
%"class.absl::optional_internal::optional_data_base.42" = type { %"class.absl::optional_internal::optional_data_dtor_base.43" }
%"class.absl::optional_internal::optional_data_dtor_base.43" = type { i8, %union.anon.44 }
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional.48", %"class.absl::optional.53", float, [4 x i8] }>
%"class.absl::optional.48" = type { %"class.absl::optional_internal::optional_data.49" }
%"class.absl::optional_internal::optional_data.49" = type { %"class.absl::optional_internal::optional_data_base.50" }
%"class.absl::optional_internal::optional_data_base.50" = type { %"class.absl::optional_internal::optional_data_dtor_base.51" }
%"class.absl::optional_internal::optional_data_dtor_base.51" = type { i8, %union.anon.52 }
%"class.absl::optional.53" = type { %"class.absl::optional_internal::optional_data.54" }
%"class.absl::optional_internal::optional_data.54" = type { %"class.absl::optional_internal::optional_data_base.55" }
%"class.absl::optional_internal::optional_data_base.55" = type { %"class.absl::optional_internal::optional_data_dtor_base.56" }
%"class.absl::optional_internal::optional_data_dtor_base.56" = type { i8, %union.anon.57 }
%"class.cc::PaintImageBuilder" = type { %"class.cc::PaintImage" }
%class.sk_sp.58 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%class.SkPaint = type <{ %class.sk_sp.59, %class.sk_sp.58, %class.sk_sp.60, %class.sk_sp.45, %class.sk_sp.61, %struct.SkRGBA4f, float, float, %union.anon.62, [4 x i8] }>
%class.sk_sp.59 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.60 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.61 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon.62 = type { %struct.anon }
%struct.anon = type { i32 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPKjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_ = comdat any

$_ZNSt3__16vectorIfNS_9allocatorIfEEE6assignIPKfEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIfNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_ = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

@_ZN2cc11PaintShader22kInvalidRecordShaderIdE = hidden local_unnamed_addr constant i32 -1, align 4
@_ZTVN2cc11PaintShaderE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::PaintShader"*)* @_ZN2cc11PaintShaderD2Ev to i8*), i8* bitcast (void (%"class.cc::PaintShader"*)* @_ZN2cc11PaintShaderD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*)] }, align 8
@__const._ZNK2cc11PaintShader18CreateDecodedImageERK8SkMatrix15SkFilterQualityPNS_13ImageProviderEPjPS4_PbPN3gpu7MailboxE.draw_image = private unnamed_addr constant <{ { %class.sk_sp.1, %class.sk_sp.8, %"class.gfx::Rect", i32, [4 x i8], %class.sk_sp.10, %class.sk_sp.14, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %class.sk_sp.1, %class.scoped_refptr }, i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.52 } } } }, { { { { i8, [3 x i8], %union.anon.57 } } } }, float, [4 x i8] }> <{ { %class.sk_sp.1, %class.sk_sp.8, %"class.gfx::Rect", i32, [4 x i8], %class.sk_sp.10, %class.sk_sp.14, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %class.sk_sp.1, %class.scoped_refptr } { %class.sk_sp.1 { %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*) }, %class.sk_sp.8 { %"class.cc::PaintOpBuffer"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintOpBuffer"*) }, %"class.gfx::Rect" { %"class.gfx::Point" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.sk_sp.10 { %"class.cc::PaintImageGenerator"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintImageGenerator"*) }, %class.sk_sp.14 { %"class.cc::TextureBacking"* inttoptr (i64 -6148914691236517206 to %"class.cc::TextureBacking"*) }, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.sk_sp.1 { %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*) }, %class.scoped_refptr { %"class.cc::PaintWorkletInput"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintWorkletInput"*) } }, i8 -86, [3 x i8] c"\AA\AA\AA", %struct.SkIRect { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, i32 -1431655766, %struct.SkSize { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon.52 } } } } { { { { i8, [7 x i8], %union.anon.52 } } } { { { i8, [7 x i8], %union.anon.52 } } { { i8, [7 x i8], %union.anon.52 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.52 { i64 -6148914691236517206 } } } } }, { { { { i8, [3 x i8], %union.anon.57 } } } } { { { { i8, [3 x i8], %union.anon.57 } } } { { { i8, [3 x i8], %union.anon.57 } } { { i8, [3 x i8], %union.anon.57 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.57 { %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] } } } } } }, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@__const._ZNK2cc11PaintShader18CreateDecodedImageERK8SkMatrix15SkFilterQualityPNS_13ImageProviderEPjPS4_PbPN3gpu7MailboxE.decoded_draw_image = private unnamed_addr constant { <{ %class.sk_sp.39, %"struct.gpu::Mailbox", { { { { i8, [3 x i8], %union.anon.44 } } } }, %class.sk_sp.45, %struct.SkSize, %struct.SkSize, i32, i8, i8, [2 x i8] }>, %class.sk_sp.8, %"class.base::OnceCallback" } { <{ %class.sk_sp.39, %"struct.gpu::Mailbox", { { { { i8, [3 x i8], %union.anon.44 } } } }, %class.sk_sp.45, %struct.SkSize, %struct.SkSize, i32, i8, i8, [2 x i8] }> <{ %class.sk_sp.39 { %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*) }, %"struct.gpu::Mailbox" { [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }, { { { { i8, [3 x i8], %union.anon.44 } } } } { { { { i8, [3 x i8], %union.anon.44 } } } { { { i8, [3 x i8], %union.anon.44 } } { { i8, [3 x i8], %union.anon.44 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.44 { i32 -1431655766 } } } } }, %class.sk_sp.45 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %struct.SkSize { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkSize { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA" }>, %class.sk_sp.8 { %"class.cc::PaintOpBuffer"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintOpBuffer"*) }, %"class.base::OnceCallback" { %"class.base::internal::CallbackBase" { %class.scoped_refptr.46 { %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*) } } } }, align 8
@__const._ZNK2cc11PaintShader18CreateDecodedImageERK8SkMatrix15SkFilterQualityPNS_13ImageProviderEPjPS4_PbPN3gpu7MailboxE.decoded_image = private unnamed_addr constant <{ %class.sk_sp.39, %"struct.gpu::Mailbox", { { { { i8, [3 x i8], %union.anon.44 } } } }, %class.sk_sp.45, %struct.SkSize, %struct.SkSize, i32, i8, i8, [2 x i8] }> <{ %class.sk_sp.39 { %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*) }, %"struct.gpu::Mailbox" { [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }, { { { { i8, [3 x i8], %union.anon.44 } } } } { { { { i8, [3 x i8], %union.anon.44 } } } { { { i8, [3 x i8], %union.anon.44 } } { { i8, [3 x i8], %union.anon.44 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.44 { i32 -1431655766 } } } } }, %class.sk_sp.45 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %struct.SkSize { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkSize { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA" }>, align 8
@__const._ZNK2cc11PaintShader11GetSkShaderE15SkFilterQuality.sampling = private unnamed_addr constant { i8, [3 x i8], %struct.SkCubicResampler, i32, i32 } { i8 -86, [3 x i8] c"\AA\AA\AA", %struct.SkCubicResampler { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766, i32 -1431655766 }, align 4
@_ZN2cc12_GLOBAL__N_116g_next_shader_idE = internal global { { { i32 } } } zeroinitializer, align 4
@__const._ZN2cc12_GLOBAL__N_111ToSkPictureE5sk_spINS_13PaintOpBufferEERK6SkRectPKN3gfx5SizeFEPNS_13ImageProviderE.recorder = private unnamed_addr constant { i8, [3 x i8], %struct.SkRect, [4 x i8], %class.sk_sp.63, %"class.std::__1::unique_ptr.64", %class.sk_sp.68, %"class.std::__1::unique_ptr.69" } { i8 -86, [3 x i8] c"\AA\AA\AA", %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, [4 x i8] c"\AA\AA\AA\AA", %class.sk_sp.63 { %class.SkBBoxHierarchy* inttoptr (i64 -6148914691236517206 to %class.SkBBoxHierarchy*) }, %"class.std::__1::unique_ptr.64" { %"class.std::__1::__compressed_pair.65" { %"struct.std::__1::__compressed_pair_elem.66" { %class.SkRecorder* inttoptr (i64 -6148914691236517206 to %class.SkRecorder*) } } }, %class.sk_sp.68 { %class.SkRecord* inttoptr (i64 -6148914691236517206 to %class.SkRecord*) }, %"class.std::__1::unique_ptr.69" { %"class.std::__1::__compressed_pair.70" { %"struct.std::__1::__compressed_pair_elem.71" { %class.SkMiniRecorder* inttoptr (i64 -6148914691236517206 to %class.SkMiniRecorder*) } } } }, align 8

@_ZN2cc11PaintShaderC1ENS0_4TypeE = hidden unnamed_addr alias void (%"class.cc::PaintShader"*, i8), void (%"class.cc::PaintShader"*, i8)* @_ZN2cc11PaintShaderC2ENS0_4TypeE
@_ZN2cc11PaintShaderD1Ev = hidden unnamed_addr alias void (%"class.cc::PaintShader"*), void (%"class.cc::PaintShader"*)* @_ZN2cc11PaintShaderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc11PaintShader9MakeEmptyEv(%class.sk_sp* noalias nocapture sret) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 336) #12
  %3 = bitcast i8* %2 to %"class.cc::PaintShader"*
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = bitcast i8* %4 to i32*
  store i32 1, i32* %5, align 4
  %6 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc11PaintShaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds i8, i8* %2, i64 12
  store i8 0, i8* %7, align 4
  %8 = getelementptr inbounds i8, i8* %2, i64 16
  %9 = getelementptr inbounds i8, i8* %2, i64 44
  store i8 0, i8* %9, align 4
  %10 = getelementptr inbounds i8, i8* %2, i64 48
  %11 = getelementptr inbounds i8, i8* %2, i64 136
  %12 = bitcast i8* %11 to %"class.cc::PaintImage"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 25, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %10, i8 0, i64 88, i1 false) #13
  tail call void @_ZN2cc10PaintImageC1Ev(%"class.cc::PaintImage"* %12) #13
  %13 = getelementptr inbounds i8, i8* %2, i64 240
  %14 = bitcast i8* %13 to %"class.cc::PaintOpBuffer"**
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %14, align 8
  %15 = getelementptr inbounds i8, i8* %2, i64 248
  %16 = bitcast i8* %15 to i32*
  store i32 -1, i32* %16, align 8
  %17 = getelementptr inbounds i8, i8* %2, i64 252
  store i8 0, i8* %17, align 4
  %18 = getelementptr inbounds i8, i8* %2, i64 264
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 68, i1 false) #13
  %19 = bitcast %class.sk_sp* %0 to i8**
  store i8* %2, i8** %19, align 8
  tail call void @_ZN2cc11PaintShader16ResolveSkObjectsEPKN3gfx5SizeFEPNS_13ImageProviderE(%"class.cc::PaintShader"* nonnull %3, %"class.gfx::SizeF"* null, %"class.cc::ImageProvider"* null)
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc11PaintShader16ResolveSkObjectsEPKN3gfx5SizeFEPNS_13ImageProviderE(%"class.cc::PaintShader"*, %"class.gfx::SizeF"* readonly, %"class.cc::ImageProvider"*) local_unnamed_addr #2 align 2 {
  %4 = alloca %class.SkPictureRecorder, align 8
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = alloca %"struct.cc::PlaybackParams", align 8
  %7 = alloca %class.sk_sp.34, align 8
  %8 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 1
  %9 = load i8, i8* %8, align 4
  switch i8 %9, label %126 [
    i8 6, label %10
    i8 7, label %48
  ]

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 18
  %12 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 18, i32 15, i32 0
  %13 = load %"class.cc::PaintWorkletInput"*, %"class.cc::PaintWorkletInput"** %12, align 8
  %14 = icmp eq %"class.cc::PaintWorkletInput"* %13, null
  br i1 %14, label %15, label %126

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 18, i32 14, i32 0
  %17 = load %class.SkImage*, %class.SkImage** %16, align 8
  %18 = icmp eq %class.SkImage* %17, null
  br i1 %18, label %19, label %23

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 18, i32 5, i32 0
  %21 = load %"class.cc::TextureBacking"*, %"class.cc::TextureBacking"** %20, align 8
  %22 = icmp eq %"class.cc::TextureBacking"* %21, null
  br i1 %22, label %126, label %23

23:                                               ; preds = %19, %15
  %24 = tail call dereferenceable(8) %class.sk_sp.1* @_ZNK2cc10PaintImage10GetSkImageEv(%"class.cc::PaintImage"* %11) #13
  %25 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 25
  %26 = icmp eq %class.sk_sp.1* %25, %24
  br i1 %26, label %126, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %24, i64 0, i32 0
  %29 = load %class.SkImage*, %class.SkImage** %28, align 8
  %30 = icmp eq %class.SkImage* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %class.SkImage, %class.SkImage* %29, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 1 monotonic
  br label %34

34:                                               ; preds = %31, %27
  %35 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %25, i64 0, i32 0
  %36 = load %class.SkImage*, %class.SkImage** %35, align 8
  store %class.SkImage* %29, %class.SkImage** %35, align 8
  %37 = icmp eq %class.SkImage* %36, null
  br i1 %37, label %126, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %class.SkImage, %class.SkImage* %36, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw add i32* %39, i32 -1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %126

42:                                               ; preds = %38
  %43 = bitcast %class.SkImage* %36 to %class.SkRefCntBase*
  %44 = bitcast %class.SkImage* %36 to void (%class.SkRefCntBase*)***
  %45 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %44, align 8
  %46 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %45, i64 2
  %47 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %46, align 8
  tail call void %47(%class.SkRefCntBase* nonnull %43) #13
  br label %126

48:                                               ; preds = %3
  %49 = bitcast %class.sk_sp.34* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #13
  %50 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 19, i32 0
  %51 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %50, align 8
  %52 = icmp eq %"class.cc::PaintOpBuffer"* %51, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %51, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = atomicrmw add i32* %54, i32 1 monotonic
  br label %56

56:                                               ; preds = %48, %53
  %57 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRect*
  %58 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %58) #13, !noalias !2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %58, i8* align 8 getelementptr inbounds ({ i8, [3 x i8], %struct.SkRect, [4 x i8], %class.sk_sp.63, %"class.std::__1::unique_ptr.64", %class.sk_sp.68, %"class.std::__1::unique_ptr.69" }, { i8, [3 x i8], %struct.SkRect, [4 x i8], %class.sk_sp.63, %"class.std::__1::unique_ptr.64", %class.sk_sp.68, %"class.std::__1::unique_ptr.69" }* @__const._ZN2cc12_GLOBAL__N_111ToSkPictureE5sk_spINS_13PaintOpBufferEERK6SkRectPKN3gfx5SizeFEPNS_13ImageProviderE.recorder, i64 0, i32 0), i64 56, i1 false) #13, !noalias !2
  call void @_ZN17SkPictureRecorderC1Ev(%class.SkPictureRecorder* nonnull %4) #13, !noalias !2
  %59 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #13, !noalias !2
  %60 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 13, i32 2
  %61 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 13, i32 0
  %62 = bitcast float* %60 to <2 x float>*
  %63 = load <2 x float>, <2 x float>* %62, align 4, !noalias !2
  %64 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 13, i32 1
  %65 = bitcast float* %61 to <2 x float>*
  %66 = load <2 x float>, <2 x float>* %65, align 4, !noalias !2
  %67 = fsub <2 x float> %63, %66
  %68 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %68, align 8, !noalias !2
  %69 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  store <2 x float> %67, <2 x float>* %69, align 8, !noalias !2
  %70 = call %class.SkCanvas* @_ZN17SkPictureRecorder14beginRecordingERK6SkRectP12SkBBHFactory(%class.SkPictureRecorder* nonnull %4, %struct.SkRect* nonnull dereferenceable(16) %57, %class.SkBBHFactory* null) #13, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #13, !noalias !2
  %71 = load float, float* %61, align 4, !noalias !2
  %72 = fsub float -0.000000e+00, %71
  %73 = load float, float* %64, align 4, !noalias !2
  %74 = fsub float -0.000000e+00, %73
  call void @_ZN8SkCanvas9translateEff(%class.SkCanvas* %70, float %72, float %74) #13, !noalias !2
  %75 = icmp eq %"class.gfx::SizeF"* %1, null
  br i1 %75, label %81, label %76

76:                                               ; preds = %56
  %77 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %1, i64 0, i32 0
  %78 = load float, float* %77, align 4, !noalias !2
  %79 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %1, i64 0, i32 1
  %80 = load float, float* %79, align 4, !noalias !2
  call void @_ZN8SkCanvas5scaleEff(%class.SkCanvas* %70, float %78, float %80) #13
  br label %81

81:                                               ; preds = %56, %76
  %82 = bitcast %"struct.cc::PlaybackParams"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %82) #13, !noalias !2
  call void @_ZN2cc14PlaybackParamsC1EPNS_13ImageProviderE(%"struct.cc::PlaybackParams"* nonnull %6, %"class.cc::ImageProvider"* %2) #13, !noalias !2
  call void @_ZNK2cc13PaintOpBuffer8PlaybackEP8SkCanvasRKNS_14PlaybackParamsE(%"class.cc::PaintOpBuffer"* %51, %class.SkCanvas* %70, %"struct.cc::PlaybackParams"* nonnull dereferenceable(96) %6) #13, !noalias !2
  call void @_ZN2cc14PlaybackParamsD1Ev(%"struct.cc::PlaybackParams"* nonnull %6) #13, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %82) #13, !noalias !2
  call void @_ZN17SkPictureRecorder24finishRecordingAsPictureEv(%class.sk_sp.34* nonnull sret %7, %class.SkPictureRecorder* nonnull %4) #13
  call void @_ZN17SkPictureRecorderD1Ev(%class.SkPictureRecorder* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %58) #13, !noalias !2
  %83 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 24
  %84 = getelementptr inbounds %class.sk_sp.34, %class.sk_sp.34* %7, i64 0, i32 0
  %85 = bitcast %class.sk_sp.34* %7 to i64*
  %86 = load i64, i64* %85, align 8
  store %class.SkPicture* null, %class.SkPicture** %84, align 8
  %87 = getelementptr inbounds %class.sk_sp.34, %class.sk_sp.34* %83, i64 0, i32 0
  %88 = load %class.SkPicture*, %class.SkPicture** %87, align 8
  %89 = bitcast %class.sk_sp.34* %83 to i64*
  store i64 %86, i64* %89, align 8
  %90 = icmp eq %class.SkPicture* %88, null
  br i1 %90, label %101, label %91

91:                                               ; preds = %81
  %92 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %88, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = atomicrmw add i32* %92, i32 -1 acq_rel
  %94 = icmp eq i32 %93, 1
  br i1 %94, label %95, label %101

95:                                               ; preds = %91
  %96 = bitcast %class.SkPicture* %88 to %class.SkRefCntBase*
  %97 = bitcast %class.SkPicture* %88 to void (%class.SkRefCntBase*)***
  %98 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %97, align 8
  %99 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %98, i64 2
  %100 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %99, align 8
  call void %100(%class.SkRefCntBase* nonnull %96) #13
  br label %101

101:                                              ; preds = %81, %91, %95
  %102 = load %class.SkPicture*, %class.SkPicture** %84, align 8
  %103 = icmp eq %class.SkPicture* %102, null
  br i1 %103, label %114, label %104

104:                                              ; preds = %101
  %105 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %102, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = atomicrmw add i32* %105, i32 -1 acq_rel
  %107 = icmp eq i32 %106, 1
  br i1 %107, label %108, label %114

108:                                              ; preds = %104
  %109 = bitcast %class.SkPicture* %102 to %class.SkRefCntBase*
  %110 = bitcast %class.SkPicture* %102 to void (%class.SkRefCntBase*)***
  %111 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %110, align 8
  %112 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %111, i64 2
  %113 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %112, align 8
  call void %113(%class.SkRefCntBase* nonnull %109) #13
  br label %114

114:                                              ; preds = %101, %104, %108
  br i1 %52, label %125, label %115

115:                                              ; preds = %114
  %116 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %51, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = atomicrmw add i32* %116, i32 -1 acq_rel
  %118 = icmp eq i32 %117, 1
  br i1 %118, label %119, label %125

119:                                              ; preds = %115
  %120 = bitcast %"class.cc::PaintOpBuffer"* %51 to %class.SkRefCntBase*
  %121 = bitcast %"class.cc::PaintOpBuffer"* %51 to void (%class.SkRefCntBase*)***
  %122 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %121, align 8
  %123 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %122, i64 2
  %124 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %123, align 8
  call void %124(%class.SkRefCntBase* nonnull %120) #13
  br label %125

125:                                              ; preds = %114, %115, %119
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #13
  br label %126

126:                                              ; preds = %19, %10, %42, %38, %34, %23, %3, %125
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc11PaintShader9MakeColorEj(%class.sk_sp* noalias nocapture sret, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 336) #12
  %4 = bitcast i8* %3 to %"class.cc::PaintShader"*
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = bitcast i8* %5 to i32*
  store i32 1, i32* %6, align 4
  %7 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc11PaintShaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %3, i64 12
  store i8 1, i8* %8, align 4
  %9 = getelementptr inbounds i8, i8* %3, i64 16
  %10 = getelementptr inbounds i8, i8* %3, i64 44
  store i8 0, i8* %10, align 4
  %11 = getelementptr inbounds i8, i8* %3, i64 48
  %12 = getelementptr inbounds i8, i8* %3, i64 136
  %13 = bitcast i8* %12 to %"class.cc::PaintImage"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 25, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 88, i1 false) #13
  tail call void @_ZN2cc10PaintImageC1Ev(%"class.cc::PaintImage"* %13) #13
  %14 = getelementptr inbounds i8, i8* %3, i64 240
  %15 = bitcast i8* %14 to %"class.cc::PaintOpBuffer"**
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %15, align 8
  %16 = getelementptr inbounds i8, i8* %3, i64 248
  %17 = bitcast i8* %16 to i32*
  store i32 -1, i32* %17, align 8
  %18 = getelementptr inbounds i8, i8* %3, i64 252
  store i8 0, i8* %18, align 4
  %19 = getelementptr inbounds i8, i8* %3, i64 264
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 68, i1 false) #13
  %20 = bitcast %class.sk_sp* %0 to i8**
  store i8* %3, i8** %20, align 8
  %21 = getelementptr inbounds i8, i8* %3, i64 36
  %22 = bitcast i8* %21 to i32*
  store i32 %1, i32* %22, align 4
  tail call void @_ZN2cc11PaintShader16ResolveSkObjectsEPKN3gfx5SizeFEPNS_13ImageProviderE(%"class.cc::PaintShader"* nonnull %4, %"class.gfx::SizeF"* null, %"class.cc::ImageProvider"* null)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc11PaintShader18MakeLinearGradientEPK7SkPointPKjPKfi10SkTileModejPK8SkMatrixj(%class.sk_sp* noalias nocapture sret, %struct.SkPoint* nocapture readonly, i32*, float*, i32, i32, i32, %class.SkMatrix* readonly, i32) local_unnamed_addr #0 align 2 {
  %10 = tail call i8* @_Znwm(i64 336) #12
  %11 = bitcast i8* %10 to %"class.cc::PaintShader"*
  %12 = getelementptr inbounds i8, i8* %10, i64 8
  %13 = bitcast i8* %12 to i32*
  store i32 1, i32* %13, align 4
  %14 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc11PaintShaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds i8, i8* %10, i64 12
  store i8 2, i8* %15, align 4
  %16 = getelementptr inbounds i8, i8* %10, i64 16
  %17 = bitcast i8* %16 to i32*
  %18 = getelementptr inbounds i8, i8* %10, i64 44
  store i8 0, i8* %18, align 4
  %19 = getelementptr inbounds i8, i8* %10, i64 48
  %20 = getelementptr inbounds i8, i8* %10, i64 136
  %21 = bitcast i8* %20 to %"class.cc::PaintImage"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 25, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 0, i64 88, i1 false) #13
  tail call void @_ZN2cc10PaintImageC1Ev(%"class.cc::PaintImage"* %21) #13
  %22 = getelementptr inbounds i8, i8* %10, i64 240
  %23 = bitcast i8* %22 to %"class.cc::PaintOpBuffer"**
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %23, align 8
  %24 = getelementptr inbounds i8, i8* %10, i64 248
  %25 = bitcast i8* %24 to i32*
  store i32 -1, i32* %25, align 8
  %26 = getelementptr inbounds i8, i8* %10, i64 252
  store i8 0, i8* %26, align 4
  %27 = getelementptr inbounds i8, i8* %10, i64 264
  %28 = bitcast i8* %27 to %"class.std::__1::vector.20"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 68, i1 false) #13
  %29 = bitcast %class.sk_sp* %0 to i8**
  store i8* %10, i8** %29, align 8
  %30 = getelementptr inbounds i8, i8* %10, i64 112
  %31 = bitcast %struct.SkPoint* %1 to <2 x i64>*
  %32 = load <2 x i64>, <2 x i64>* %31, align 4
  %33 = bitcast i8* %30 to <2 x i64>*
  store <2 x i64> %32, <2 x i64>* %33, align 8
  %34 = sext i32 %4 to i64
  %35 = getelementptr inbounds i32, i32* %2, i64 %34
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPKjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.20"* %28, i32* %2, i32* %35) #13
  %36 = icmp eq float* %3, null
  br i1 %36, label %41, label %37

37:                                               ; preds = %9
  %38 = getelementptr inbounds i8, i8* %10, i64 288
  %39 = bitcast i8* %38 to %"class.std::__1::vector.27"*
  %40 = getelementptr inbounds float, float* %3, i64 %34
  tail call void @_ZNSt3__16vectorIfNS_9allocatorIfEEE6assignIPKfEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIfNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.27"* %39, float* nonnull %3, float* %40) #13
  br label %41

41:                                               ; preds = %9, %37
  %42 = icmp eq %class.SkMatrix* %7, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %41
  %44 = load i8, i8* %18, align 4, !range !5
  %45 = icmp eq i8 %44, 0
  %46 = bitcast %class.SkMatrix* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* nonnull align 4 %46, i64 40, i1 false) #13
  br i1 %45, label %47, label %48

47:                                               ; preds = %43
  store i8 1, i8* %18, align 4
  br label %48

48:                                               ; preds = %43, %41, %47
  %49 = getelementptr inbounds i8, i8* %10, i64 28
  %50 = bitcast i8* %49 to i32*
  store i32 %5, i32* %50, align 4
  %51 = getelementptr inbounds i8, i8* %10, i64 32
  %52 = bitcast i8* %51 to i32*
  store i32 %5, i32* %52, align 8
  store i32 %6, i32* %17, align 8
  %53 = getelementptr inbounds i8, i8* %10, i64 36
  %54 = bitcast i8* %53 to i32*
  store i32 %8, i32* %54, align 4
  tail call void @_ZN2cc11PaintShader16ResolveSkObjectsEPKN3gfx5SizeFEPNS_13ImageProviderE(%"class.cc::PaintShader"* nonnull %11, %"class.gfx::SizeF"* null, %"class.cc::ImageProvider"* null)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc11PaintShader21SetColorsAndPositionsEPKjPKfi(%"class.cc::PaintShader"*, i32*, float*, i32) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 22
  %6 = sext i32 %3 to i64
  %7 = getelementptr inbounds i32, i32* %1, i64 %6
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPKjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.20"* %5, i32* %1, i32* %7)
  %8 = icmp eq float* %2, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 23
  %11 = getelementptr inbounds float, float* %2, i64 %6
  tail call void @_ZNSt3__16vectorIfNS_9allocatorIfEEE6assignIPKfEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIfNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.27"* %10, float* nonnull %2, float* %11)
  br label %12

12:                                               ; preds = %4, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc11PaintShader18SetMatrixAndTilingEPK8SkMatrix10SkTileModeS4_(%"class.cc::PaintShader"* nocapture, %class.SkMatrix* readonly, i32, i32) local_unnamed_addr #2 align 2 {
  %5 = icmp eq %class.SkMatrix* %1, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 4, !range !5
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0
  %12 = bitcast %class.SkMatrix* %11 to i8*
  %13 = bitcast %class.SkMatrix* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* nonnull align 4 %13, i64 40, i1 false) #13
  br label %18

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1
  %16 = bitcast %union.anon* %15 to i8*
  %17 = bitcast %class.SkMatrix* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* nonnull align 4 %17, i64 40, i1 false) #13
  store i8 1, i8* %7, align 4
  br label %18

18:                                               ; preds = %14, %10, %4
  %19 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 6
  store i32 %2, i32* %19, align 4
  %20 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 7
  store i32 %3, i32* %20, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc11PaintShader19SetFlagsAndFallbackEjj(%"class.cc::PaintShader"* nocapture, i32, i32) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 3
  store i32 %1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 8
  store i32 %2, i32* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc11PaintShader18MakeRadialGradientERK7SkPointfPKjPKfi10SkTileModejPK8SkMatrixj(%class.sk_sp* noalias nocapture sret, %struct.SkPoint* nocapture readonly dereferenceable(8), float, i32*, float*, i32, i32, i32, %class.SkMatrix* readonly, i32) local_unnamed_addr #0 align 2 {
  %11 = tail call i8* @_Znwm(i64 336) #12
  %12 = bitcast i8* %11 to %"class.cc::PaintShader"*
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 1, i32* %14, align 4
  %15 = bitcast i8* %11 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc11PaintShaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds i8, i8* %11, i64 12
  store i8 3, i8* %16, align 4
  %17 = getelementptr inbounds i8, i8* %11, i64 16
  %18 = bitcast i8* %17 to i32*
  %19 = getelementptr inbounds i8, i8* %11, i64 44
  store i8 0, i8* %19, align 4
  %20 = getelementptr inbounds i8, i8* %11, i64 48
  %21 = getelementptr inbounds i8, i8* %11, i64 136
  %22 = bitcast i8* %21 to %"class.cc::PaintImage"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 25, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %20, i8 0, i64 88, i1 false) #13
  tail call void @_ZN2cc10PaintImageC1Ev(%"class.cc::PaintImage"* %22) #13
  %23 = getelementptr inbounds i8, i8* %11, i64 240
  %24 = bitcast i8* %23 to %"class.cc::PaintOpBuffer"**
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %24, align 8
  %25 = getelementptr inbounds i8, i8* %11, i64 248
  %26 = bitcast i8* %25 to i32*
  store i32 -1, i32* %26, align 8
  %27 = getelementptr inbounds i8, i8* %11, i64 252
  store i8 0, i8* %27, align 4
  %28 = getelementptr inbounds i8, i8* %11, i64 264
  %29 = bitcast i8* %28 to %"class.std::__1::vector.20"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 68, i1 false) #13
  %30 = bitcast %class.sk_sp* %0 to i8**
  store i8* %11, i8** %30, align 8
  %31 = getelementptr inbounds i8, i8* %11, i64 88
  %32 = bitcast %struct.SkPoint* %1 to i64*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %32, align 4
  store i64 %34, i64* %33, align 8
  %35 = getelementptr inbounds i8, i8* %11, i64 20
  %36 = bitcast i8* %35 to float*
  store float %2, float* %36, align 4
  %37 = getelementptr inbounds i8, i8* %11, i64 24
  %38 = bitcast i8* %37 to float*
  store float %2, float* %38, align 8
  %39 = sext i32 %5 to i64
  %40 = getelementptr inbounds i32, i32* %3, i64 %39
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPKjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.20"* %29, i32* %3, i32* %40) #13
  %41 = icmp eq float* %4, null
  br i1 %41, label %46, label %42

42:                                               ; preds = %10
  %43 = getelementptr inbounds i8, i8* %11, i64 288
  %44 = bitcast i8* %43 to %"class.std::__1::vector.27"*
  %45 = getelementptr inbounds float, float* %4, i64 %39
  tail call void @_ZNSt3__16vectorIfNS_9allocatorIfEEE6assignIPKfEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIfNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.27"* %44, float* nonnull %4, float* %45) #13
  br label %46

46:                                               ; preds = %10, %42
  %47 = icmp eq %class.SkMatrix* %8, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %46
  %49 = load i8, i8* %19, align 4, !range !5
  %50 = icmp eq i8 %49, 0
  %51 = bitcast %class.SkMatrix* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %20, i8* nonnull align 4 %51, i64 40, i1 false) #13
  br i1 %50, label %52, label %53

52:                                               ; preds = %48
  store i8 1, i8* %19, align 4
  br label %53

53:                                               ; preds = %48, %46, %52
  %54 = getelementptr inbounds i8, i8* %11, i64 28
  %55 = bitcast i8* %54 to i32*
  store i32 %6, i32* %55, align 4
  %56 = getelementptr inbounds i8, i8* %11, i64 32
  %57 = bitcast i8* %56 to i32*
  store i32 %6, i32* %57, align 8
  store i32 %7, i32* %18, align 8
  %58 = getelementptr inbounds i8, i8* %11, i64 36
  %59 = bitcast i8* %58 to i32*
  store i32 %9, i32* %59, align 4
  tail call void @_ZN2cc11PaintShader16ResolveSkObjectsEPKN3gfx5SizeFEPNS_13ImageProviderE(%"class.cc::PaintShader"* nonnull %12, %"class.gfx::SizeF"* null, %"class.cc::ImageProvider"* null)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc11PaintShader27MakeTwoPointConicalGradientERK7SkPointfS3_fPKjPKfi10SkTileModejPK8SkMatrixj(%class.sk_sp* noalias nocapture sret, %struct.SkPoint* nocapture readonly dereferenceable(8), float, %struct.SkPoint* nocapture readonly dereferenceable(8), float, i32*, float*, i32, i32, i32, %class.SkMatrix* readonly, i32) local_unnamed_addr #0 align 2 {
  %13 = tail call i8* @_Znwm(i64 336) #12
  %14 = bitcast i8* %13 to %"class.cc::PaintShader"*
  %15 = getelementptr inbounds i8, i8* %13, i64 8
  %16 = bitcast i8* %15 to i32*
  store i32 1, i32* %16, align 4
  %17 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc11PaintShaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds i8, i8* %13, i64 12
  store i8 4, i8* %18, align 4
  %19 = getelementptr inbounds i8, i8* %13, i64 16
  %20 = bitcast i8* %19 to i32*
  %21 = getelementptr inbounds i8, i8* %13, i64 44
  store i8 0, i8* %21, align 4
  %22 = getelementptr inbounds i8, i8* %13, i64 48
  %23 = getelementptr inbounds i8, i8* %13, i64 136
  %24 = bitcast i8* %23 to %"class.cc::PaintImage"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 25, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %22, i8 0, i64 88, i1 false) #13
  tail call void @_ZN2cc10PaintImageC1Ev(%"class.cc::PaintImage"* %24) #13
  %25 = getelementptr inbounds i8, i8* %13, i64 240
  %26 = bitcast i8* %25 to %"class.cc::PaintOpBuffer"**
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %26, align 8
  %27 = getelementptr inbounds i8, i8* %13, i64 248
  %28 = bitcast i8* %27 to i32*
  store i32 -1, i32* %28, align 8
  %29 = getelementptr inbounds i8, i8* %13, i64 252
  store i8 0, i8* %29, align 4
  %30 = getelementptr inbounds i8, i8* %13, i64 264
  %31 = bitcast i8* %30 to %"class.std::__1::vector.20"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 68, i1 false) #13
  %32 = bitcast %class.sk_sp* %0 to i8**
  store i8* %13, i8** %32, align 8
  %33 = getelementptr inbounds i8, i8* %13, i64 112
  %34 = bitcast %struct.SkPoint* %1 to i64*
  %35 = bitcast i8* %33 to i64*
  %36 = load i64, i64* %34, align 4
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds i8, i8* %13, i64 120
  %38 = bitcast %struct.SkPoint* %3 to i64*
  %39 = bitcast i8* %37 to i64*
  %40 = load i64, i64* %38, align 4
  store i64 %40, i64* %39, align 8
  %41 = getelementptr inbounds i8, i8* %13, i64 24
  %42 = bitcast i8* %41 to float*
  store float %2, float* %42, align 8
  %43 = getelementptr inbounds i8, i8* %13, i64 20
  %44 = bitcast i8* %43 to float*
  store float %4, float* %44, align 4
  %45 = sext i32 %7 to i64
  %46 = getelementptr inbounds i32, i32* %5, i64 %45
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPKjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.20"* %31, i32* %5, i32* %46) #13
  %47 = icmp eq float* %6, null
  br i1 %47, label %52, label %48

48:                                               ; preds = %12
  %49 = getelementptr inbounds i8, i8* %13, i64 288
  %50 = bitcast i8* %49 to %"class.std::__1::vector.27"*
  %51 = getelementptr inbounds float, float* %6, i64 %45
  tail call void @_ZNSt3__16vectorIfNS_9allocatorIfEEE6assignIPKfEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIfNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.27"* %50, float* nonnull %6, float* %51) #13
  br label %52

52:                                               ; preds = %12, %48
  %53 = icmp eq %class.SkMatrix* %10, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %52
  %55 = load i8, i8* %21, align 4, !range !5
  %56 = icmp eq i8 %55, 0
  %57 = bitcast %class.SkMatrix* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* nonnull align 4 %57, i64 40, i1 false) #13
  br i1 %56, label %58, label %59

58:                                               ; preds = %54
  store i8 1, i8* %21, align 4
  br label %59

59:                                               ; preds = %54, %52, %58
  %60 = getelementptr inbounds i8, i8* %13, i64 28
  %61 = bitcast i8* %60 to i32*
  store i32 %8, i32* %61, align 4
  %62 = getelementptr inbounds i8, i8* %13, i64 32
  %63 = bitcast i8* %62 to i32*
  store i32 %8, i32* %63, align 8
  store i32 %9, i32* %20, align 8
  %64 = getelementptr inbounds i8, i8* %13, i64 36
  %65 = bitcast i8* %64 to i32*
  store i32 %11, i32* %65, align 4
  tail call void @_ZN2cc11PaintShader16ResolveSkObjectsEPKN3gfx5SizeFEPNS_13ImageProviderE(%"class.cc::PaintShader"* nonnull %14, %"class.gfx::SizeF"* null, %"class.cc::ImageProvider"* null)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc11PaintShader17MakeSweepGradientEffPKjPKfi10SkTileModeffjPK8SkMatrixj(%class.sk_sp* noalias nocapture sret, float, float, i32*, float*, i32, i32, float, float, i32, %class.SkMatrix* readonly, i32) local_unnamed_addr #0 align 2 {
  %13 = tail call i8* @_Znwm(i64 336) #12
  %14 = bitcast i8* %13 to %"class.cc::PaintShader"*
  %15 = getelementptr inbounds i8, i8* %13, i64 8
  %16 = bitcast i8* %15 to i32*
  store i32 1, i32* %16, align 4
  %17 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc11PaintShaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds i8, i8* %13, i64 12
  store i8 5, i8* %18, align 4
  %19 = getelementptr inbounds i8, i8* %13, i64 16
  %20 = bitcast i8* %19 to i32*
  %21 = getelementptr inbounds i8, i8* %13, i64 44
  store i8 0, i8* %21, align 4
  %22 = getelementptr inbounds i8, i8* %13, i64 48
  %23 = getelementptr inbounds i8, i8* %13, i64 136
  %24 = bitcast i8* %23 to %"class.cc::PaintImage"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 25, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %22, i8 0, i64 88, i1 false) #13
  tail call void @_ZN2cc10PaintImageC1Ev(%"class.cc::PaintImage"* %24) #13
  %25 = getelementptr inbounds i8, i8* %13, i64 240
  %26 = bitcast i8* %25 to %"class.cc::PaintOpBuffer"**
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %26, align 8
  %27 = getelementptr inbounds i8, i8* %13, i64 248
  %28 = bitcast i8* %27 to i32*
  store i32 -1, i32* %28, align 8
  %29 = getelementptr inbounds i8, i8* %13, i64 252
  store i8 0, i8* %29, align 4
  %30 = getelementptr inbounds i8, i8* %13, i64 264
  %31 = bitcast i8* %30 to %"class.std::__1::vector.20"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 68, i1 false) #13
  %32 = bitcast %class.sk_sp* %0 to i8**
  store i8* %13, i8** %32, align 8
  %33 = insertelement <2 x float> undef, float %1, i32 0
  %34 = insertelement <2 x float> %33, float %2, i32 1
  %35 = getelementptr inbounds i8, i8* %13, i64 88
  %36 = bitcast i8* %35 to <2 x float>*
  store <2 x float> %34, <2 x float>* %36, align 8
  %37 = getelementptr inbounds i8, i8* %13, i64 128
  %38 = bitcast i8* %37 to float*
  store float %7, float* %38, align 8
  %39 = getelementptr inbounds i8, i8* %13, i64 132
  %40 = bitcast i8* %39 to float*
  store float %8, float* %40, align 4
  %41 = sext i32 %5 to i64
  %42 = getelementptr inbounds i32, i32* %3, i64 %41
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPKjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.20"* %31, i32* %3, i32* %42) #13
  %43 = icmp eq float* %4, null
  br i1 %43, label %48, label %44

44:                                               ; preds = %12
  %45 = getelementptr inbounds i8, i8* %13, i64 288
  %46 = bitcast i8* %45 to %"class.std::__1::vector.27"*
  %47 = getelementptr inbounds float, float* %4, i64 %41
  tail call void @_ZNSt3__16vectorIfNS_9allocatorIfEEE6assignIPKfEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIfNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.27"* %46, float* nonnull %4, float* %47) #13
  br label %48

48:                                               ; preds = %12, %44
  %49 = icmp eq %class.SkMatrix* %10, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %48
  %51 = load i8, i8* %21, align 4, !range !5
  %52 = icmp eq i8 %51, 0
  %53 = bitcast %class.SkMatrix* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* nonnull align 4 %53, i64 40, i1 false) #13
  br i1 %52, label %54, label %55

54:                                               ; preds = %50
  store i8 1, i8* %21, align 4
  br label %55

55:                                               ; preds = %50, %48, %54
  %56 = getelementptr inbounds i8, i8* %13, i64 28
  %57 = bitcast i8* %56 to i32*
  store i32 %6, i32* %57, align 4
  %58 = getelementptr inbounds i8, i8* %13, i64 32
  %59 = bitcast i8* %58 to i32*
  store i32 %6, i32* %59, align 8
  store i32 %9, i32* %20, align 8
  %60 = getelementptr inbounds i8, i8* %13, i64 36
  %61 = bitcast i8* %60 to i32*
  store i32 %11, i32* %61, align 4
  tail call void @_ZN2cc11PaintShader16ResolveSkObjectsEPKN3gfx5SizeFEPNS_13ImageProviderE(%"class.cc::PaintShader"* nonnull %14, %"class.gfx::SizeF"* null, %"class.cc::ImageProvider"* null)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc11PaintShader9MakeImageERKNS_10PaintImageE10SkTileModeS4_PK8SkMatrixPK6SkRect(%class.sk_sp* noalias nocapture sret, %"class.cc::PaintImage"* dereferenceable(104), i32, i32, %class.SkMatrix* readonly, %struct.SkRect* readonly) local_unnamed_addr #0 align 2 {
  %7 = tail call i8* @_Znwm(i64 336) #12
  %8 = bitcast i8* %7 to %"class.cc::PaintShader"*
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 1, i32* %10, align 4
  %11 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc11PaintShaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %7, i64 12
  store i8 6, i8* %12, align 4
  %13 = getelementptr inbounds i8, i8* %7, i64 16
  %14 = getelementptr inbounds i8, i8* %7, i64 44
  store i8 0, i8* %14, align 4
  %15 = getelementptr inbounds i8, i8* %7, i64 48
  %16 = getelementptr inbounds i8, i8* %7, i64 136
  %17 = bitcast i8* %16 to %"class.cc::PaintImage"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 25, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %15, i8 0, i64 88, i1 false) #13
  tail call void @_ZN2cc10PaintImageC1Ev(%"class.cc::PaintImage"* %17) #13
  %18 = getelementptr inbounds i8, i8* %7, i64 240
  %19 = bitcast i8* %18 to %"class.cc::PaintOpBuffer"**
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %19, align 8
  %20 = getelementptr inbounds i8, i8* %7, i64 248
  %21 = bitcast i8* %20 to i32*
  store i32 -1, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %7, i64 252
  store i8 0, i8* %22, align 4
  %23 = getelementptr inbounds i8, i8* %7, i64 264
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 68, i1 false) #13
  %24 = bitcast %class.sk_sp* %0 to i8**
  store i8* %7, i8** %24, align 8
  %25 = tail call dereferenceable(104) %"class.cc::PaintImage"* @_ZN2cc10PaintImageaSERKS0_(%"class.cc::PaintImage"* %17, %"class.cc::PaintImage"* dereferenceable(104) %1) #13
  %26 = icmp eq %class.SkMatrix* %4, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %6
  %28 = load i8, i8* %14, align 4, !range !5
  %29 = icmp eq i8 %28, 0
  %30 = bitcast %class.SkMatrix* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* nonnull align 4 %30, i64 40, i1 false) #13
  br i1 %29, label %31, label %32

31:                                               ; preds = %27
  store i8 1, i8* %14, align 4
  br label %32

32:                                               ; preds = %27, %6, %31
  %33 = getelementptr inbounds i8, i8* %7, i64 28
  %34 = bitcast i8* %33 to i32*
  store i32 %2, i32* %34, align 4
  %35 = getelementptr inbounds i8, i8* %7, i64 32
  %36 = bitcast i8* %35 to i32*
  store i32 %3, i32* %36, align 8
  %37 = icmp eq %struct.SkRect* %5, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds i8, i8* %7, i64 96
  %40 = bitcast %struct.SkRect* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* nonnull align 4 %40, i64 16, i1 false)
  br label %41

41:                                               ; preds = %32, %38
  tail call void @_ZN2cc11PaintShader16ResolveSkObjectsEPKN3gfx5SizeFEPNS_13ImageProviderE(%"class.cc::PaintShader"* nonnull %8, %"class.gfx::SizeF"* null, %"class.cc::ImageProvider"* null)
  ret void
}

declare dereferenceable(104) %"class.cc::PaintImage"* @_ZN2cc10PaintImageaSERKS0_(%"class.cc::PaintImage"*, %"class.cc::PaintImage"* dereferenceable(104)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc11PaintShader15MakePaintRecordE5sk_spINS_13PaintOpBufferEERK6SkRect10SkTileModeS7_PK8SkMatrixNS0_15ScalingBehaviorE(%class.sk_sp* noalias nocapture sret, %class.sk_sp.8* nocapture, %struct.SkRect* nocapture readonly dereferenceable(16), i32, i32, %class.SkMatrix* readonly, i8 zeroext) local_unnamed_addr #0 align 2 {
  %8 = tail call i8* @_Znwm(i64 336) #12
  %9 = getelementptr inbounds i8, i8* %8, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 1, i32* %10, align 4
  %11 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc11PaintShaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 12
  store i8 7, i8* %12, align 4
  %13 = getelementptr inbounds i8, i8* %8, i64 16
  %14 = getelementptr inbounds i8, i8* %8, i64 44
  store i8 0, i8* %14, align 4
  %15 = getelementptr inbounds i8, i8* %8, i64 48
  %16 = getelementptr inbounds i8, i8* %8, i64 136
  %17 = bitcast i8* %16 to %"class.cc::PaintImage"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 25, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %15, i8 0, i64 88, i1 false) #13
  tail call void @_ZN2cc10PaintImageC1Ev(%"class.cc::PaintImage"* %17) #13
  %18 = getelementptr inbounds i8, i8* %8, i64 240
  %19 = getelementptr inbounds i8, i8* %8, i64 252
  store i8 0, i8* %19, align 4
  %20 = getelementptr inbounds i8, i8* %8, i64 264
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 68, i1 false) #13
  %21 = bitcast %class.sk_sp* %0 to i8**
  store i8* %8, i8** %21, align 8
  %22 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %1, i64 0, i32 0
  %23 = bitcast %class.sk_sp.8* %1 to i64*
  %24 = load i64, i64* %23, align 8
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %22, align 8
  %25 = bitcast i8* %18 to i64*
  store i64 %24, i64* %25, align 8
  %26 = bitcast i8* %8 to %"class.cc::PaintShader"*
  %27 = atomicrmw add i32* getelementptr inbounds ({ { { i32 } } }, { { { i32 } } }* @_ZN2cc12_GLOBAL__N_116g_next_shader_idE, i64 0, i32 0, i32 0, i32 0), i32 1 monotonic
  %28 = getelementptr inbounds i8, i8* %8, i64 248
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 8
  %30 = getelementptr inbounds i8, i8* %8, i64 96
  %31 = bitcast %struct.SkRect* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 4 %31, i64 16, i1 false)
  %32 = getelementptr inbounds i8, i8* %8, i64 40
  store i8 %6, i8* %32, align 8
  %33 = icmp eq %class.SkMatrix* %5, null
  br i1 %33, label %41, label %34

34:                                               ; preds = %7
  %35 = getelementptr inbounds i8, i8* %8, i64 44
  %36 = load i8, i8* %35, align 4, !range !5
  %37 = icmp eq i8 %36, 0
  %38 = getelementptr inbounds i8, i8* %8, i64 48
  %39 = bitcast %class.SkMatrix* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %38, i8* nonnull align 4 %39, i64 40, i1 false) #13
  br i1 %37, label %40, label %41

40:                                               ; preds = %34
  store i8 1, i8* %35, align 4
  br label %41

41:                                               ; preds = %34, %7, %40
  %42 = getelementptr inbounds i8, i8* %8, i64 28
  %43 = bitcast i8* %42 to i32*
  store i32 %3, i32* %43, align 4
  %44 = getelementptr inbounds i8, i8* %8, i64 32
  %45 = bitcast i8* %44 to i32*
  store i32 %4, i32* %45, align 8
  tail call void @_ZN2cc11PaintShader16ResolveSkObjectsEPKN3gfx5SizeFEPNS_13ImageProviderE(%"class.cc::PaintShader"* nonnull %26, %"class.gfx::SizeF"* null, %"class.cc::ImageProvider"* null)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2cc11PaintShader17GetSerializedSizeEPKS0_(%"class.cc::PaintShader"*) local_unnamed_addr #2 align 2 {
  %2 = icmp eq %"class.cc::PaintShader"* %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 18
  %5 = tail call i64 @_ZN2cc13PaintOpWriter12GetImageSizeERKNS_10PaintImageE(%"class.cc::PaintImage"* dereferenceable(104) %4) #13
  %6 = tail call i64 @_ZN2cc13PaintOpWriter12GetImageSizeERKNS_10PaintImageE(%"class.cc::PaintImage"* dereferenceable(104) %4) #13
  %7 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 19, i32 0
  %8 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %7, align 8
  %9 = tail call i64 @_ZN2cc13PaintOpWriter13GetRecordSizeEPKNS_13PaintOpBufferE(%"class.cc::PaintOpBuffer"* %8) #13
  %10 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 22
  %11 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 22, i32 0, i32 1
  %12 = bitcast i32** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.20"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 23
  %17 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 23, i32 0, i32 1
  %18 = bitcast float** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector.27"* %16 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %5, 137
  %23 = add i64 %22, %6
  %24 = add i64 %23, %9
  %25 = add i64 %24, %13
  %26 = sub i64 %25, %15
  %27 = add i64 %26, %19
  %28 = sub i64 %27, %21
  br label %29

29:                                               ; preds = %1, %3
  %30 = phi i64 [ %28, %3 ], [ 1, %1 ]
  ret i64 %30
}

declare i64 @_ZN2cc13PaintOpWriter12GetImageSizeERKNS_10PaintImageE(%"class.cc::PaintImage"* dereferenceable(104)) local_unnamed_addr #5

declare i64 @_ZN2cc13PaintOpWriter13GetRecordSizeEPKNS_13PaintOpBufferE(%"class.cc::PaintOpBuffer"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc11PaintShaderC2ENS0_4TypeE(%"class.cc::PaintShader"*, i8 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %3, align 4
  %4 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc11PaintShaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 1
  store i8 %1, i8* %5, align 4
  %6 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %7, align 4
  %8 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 18
  %10 = bitcast i32* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 25, i1 false)
  %11 = bitcast %union.anon* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 88, i1 false)
  tail call void @_ZN2cc10PaintImageC1Ev(%"class.cc::PaintImage"* %9) #13
  %12 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 19, i32 0
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %12, align 8
  %13 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 20
  store i32 -1, i32* %13, align 8
  %14 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %14, align 4
  %15 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 22
  %16 = bitcast %"class.std::__1::vector.20"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 68, i1 false)
  ret void
}

declare void @_ZN2cc10PaintImageC1Ev(%"class.cc::PaintImage"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc11PaintShaderD2Ev(%"class.cc::PaintShader"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc11PaintShaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 25, i32 0
  %4 = load %class.SkImage*, %class.SkImage** %3, align 8
  %5 = icmp eq %class.SkImage* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkImage, %class.SkImage* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkImage* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkImage* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #13
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 24, i32 0
  %18 = load %class.SkPicture*, %class.SkPicture** %17, align 8
  %19 = icmp eq %class.SkPicture* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %18, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkPicture* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkPicture* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #13
  br label %30

30:                                               ; preds = %16, %20, %24
  %31 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 23, i32 0, i32 0
  %32 = load float*, float** %31, align 8
  %33 = icmp eq float* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %30
  %35 = ptrtoint float* %32 to i64
  %36 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 23, i32 0, i32 1
  %37 = bitcast float** %36 to i64*
  store i64 %35, i64* %37, align 8
  %38 = bitcast float* %32 to i8*
  tail call void @_ZdlPv(i8* %38) #12
  br label %39

39:                                               ; preds = %30, %34
  %40 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 22, i32 0, i32 0
  %41 = load i32*, i32** %40, align 8
  %42 = icmp eq i32* %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %39
  %44 = ptrtoint i32* %41 to i64
  %45 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 22, i32 0, i32 1
  %46 = bitcast i32** %45 to i64*
  store i64 %44, i64* %46, align 8
  %47 = bitcast i32* %41 to i8*
  tail call void @_ZdlPv(i8* %47) #12
  br label %48

48:                                               ; preds = %39, %43
  %49 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 19, i32 0
  %50 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %49, align 8
  %51 = icmp eq %"class.cc::PaintOpBuffer"* %50, null
  br i1 %51, label %62, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %50, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw add i32* %53, i32 -1 acq_rel
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %56, label %62

56:                                               ; preds = %52
  %57 = bitcast %"class.cc::PaintOpBuffer"* %50 to %class.SkRefCntBase*
  %58 = bitcast %"class.cc::PaintOpBuffer"* %50 to void (%class.SkRefCntBase*)***
  %59 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %58, align 8
  %60 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %59, i64 2
  %61 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %60, align 8
  tail call void %61(%class.SkRefCntBase* nonnull %57) #13
  br label %62

62:                                               ; preds = %48, %52, %56
  %63 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 18
  tail call void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"* %63) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc11PaintShaderD0Ev(%"class.cc::PaintShader"*) unnamed_addr #2 align 2 {
  tail call void @_ZN2cc11PaintShaderD2Ev(%"class.cc::PaintShader"* %0) #13
  %2 = bitcast %"class.cc::PaintShader"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc11PaintShader22has_discardable_imagesEv(%"class.cc::PaintShader"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 18
  %3 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 18, i32 15, i32 0
  %4 = load %"class.cc::PaintWorkletInput"*, %"class.cc::PaintWorkletInput"** %3, align 8
  %5 = icmp eq %"class.cc::PaintWorkletInput"* %4, null
  br i1 %5, label %6, label %14

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 18, i32 14, i32 0
  %8 = load %class.SkImage*, %class.SkImage** %7, align 8
  %9 = icmp eq %class.SkImage* %8, null
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 18, i32 5, i32 0
  %12 = load %"class.cc::TextureBacking"*, %"class.cc::TextureBacking"** %11, align 8
  %13 = icmp eq %"class.cc::TextureBacking"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %10, %1, %6
  %15 = tail call zeroext i1 @_ZNK2cc10PaintImage15IsTextureBackedEv(%"class.cc::PaintImage"* %2) #13
  br i1 %15, label %16, label %25

16:                                               ; preds = %10, %14
  %17 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 19, i32 0
  %18 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %17, align 8
  %19 = icmp eq %"class.cc::PaintOpBuffer"* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %18, i64 0, i32 9
  %22 = load i8, i8* %21, align 4
  %23 = and i8 %22, 2
  %24 = icmp ne i8 %23, 0
  br label %25

25:                                               ; preds = %16, %20, %14
  %26 = phi i1 [ true, %14 ], [ false, %16 ], [ %24, %20 ]
  ret i1 %26
}

declare zeroext i1 @_ZNK2cc10PaintImage15IsTextureBackedEv(%"class.cc::PaintImage"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc11PaintShader31GetClampedRasterizationTileRectERK8SkMatrixiP6SkRect(%"class.cc::PaintShader"*, %class.SkMatrix* nocapture readonly dereferenceable(40), i32, %struct.SkRect* nocapture) local_unnamed_addr #2 align 2 {
  %5 = alloca %class.SkMatrix, align 4
  %6 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 9
  %7 = load i8, i8* %6, align 8
  %8 = icmp eq i8 %7, 1
  br i1 %8, label %9, label %13

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 13
  %11 = bitcast %struct.SkRect* %3 to i8*
  %12 = bitcast %struct.SkRect* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64 16, i1 false)
  br label %40

13:                                               ; preds = %4
  %14 = bitcast %class.SkMatrix* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #13
  %15 = bitcast %class.SkMatrix* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %14, i8* align 4 %15, i64 40, i1 false)
  %16 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %17 = load i8, i8* %16, align 4, !range !5
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0
  %21 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9preConcatERKS_(%class.SkMatrix* nonnull %5, %class.SkMatrix* dereferenceable(40) %20) #13
  br label %22

22:                                               ; preds = %13, %19
  %23 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 13
  %24 = call { <2 x float>, <2 x float> } @_ZN2cc13PaintOpBuffer19GetFixedScaleBoundsERK8SkMatrixRK6SkRecti(%class.SkMatrix* nonnull dereferenceable(40) %5, %struct.SkRect* dereferenceable(16) %23, i32 %2) #13
  %25 = extractvalue { <2 x float>, <2 x float> } %24, 0
  %26 = extractvalue { <2 x float>, <2 x float> } %24, 1
  %27 = bitcast %struct.SkRect* %3 to <2 x float>*
  store <2 x float> %25, <2 x float>* %27, align 4
  %28 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 2
  %29 = bitcast float* %28 to <2 x float>*
  store <2 x float> %26, <2 x float>* %29, align 4
  %30 = extractelement <2 x float> %25, i32 0
  %31 = extractelement <2 x float> %26, i32 0
  %32 = fcmp olt float %30, %31
  br i1 %32, label %33, label %37

33:                                               ; preds = %22
  %34 = extractelement <2 x float> %26, i32 1
  %35 = extractelement <2 x float> %25, i32 1
  %36 = fcmp uge float %35, %34
  br i1 %36, label %37, label %38

37:                                               ; preds = %22, %33
  br label %38

38:                                               ; preds = %33, %37
  %39 = phi i1 [ false, %37 ], [ true, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #13
  br label %40

40:                                               ; preds = %38, %9
  %41 = phi i1 [ true, %9 ], [ %39, %38 ]
  ret i1 %41
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9preConcatERKS_(%class.SkMatrix*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #5

declare { <2 x float>, <2 x float> } @_ZN2cc13PaintOpBuffer19GetFixedScaleBoundsERK8SkMatrixRK6SkRecti(%class.SkMatrix* dereferenceable(40), %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc11PaintShader23CreateScaledPaintRecordERK8SkMatrixiPN3gfx5SizeFE(%class.sk_sp* noalias nocapture sret, %"class.cc::PaintShader"*, %class.SkMatrix* nocapture readonly dereferenceable(40), i32, %"class.gfx::SizeF"* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.SkMatrix, align 4
  %7 = alloca %class.SkMatrix, align 4
  %8 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 9
  %9 = load i8, i8* %8, align 8
  %10 = icmp eq i8 %9, 1
  br i1 %10, label %11, label %21

11:                                               ; preds = %5
  %12 = bitcast %"class.gfx::SizeF"* %4 to i32*
  store i32 1065353216, i32* %12, align 4
  %13 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %4, i64 0, i32 1
  %14 = bitcast float* %13 to i32*
  store i32 1065353216, i32* %14, align 4
  %15 = icmp eq %"class.cc::PaintShader"* %1, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 1 monotonic, !noalias !6
  br label %19

19:                                               ; preds = %11, %16
  %20 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %"class.cc::PaintShader"* %1, %"class.cc::PaintShader"** %20, align 8, !alias.scope !6
  br label %142

21:                                               ; preds = %5
  %22 = bitcast %class.SkMatrix* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %22) #13
  %23 = bitcast %class.SkMatrix* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %22, i8* align 4 %23, i64 40, i1 false) #13
  %24 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %25 = load i8, i8* %24, align 4, !range !5
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0
  %29 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9preConcatERKS_(%class.SkMatrix* nonnull %6, %class.SkMatrix* dereferenceable(40) %28) #13
  br label %30

30:                                               ; preds = %27, %21
  %31 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 13
  %32 = call { <2 x float>, <2 x float> } @_ZN2cc13PaintOpBuffer19GetFixedScaleBoundsERK8SkMatrixRK6SkRecti(%class.SkMatrix* nonnull dereferenceable(40) %6, %struct.SkRect* dereferenceable(16) %31, i32 %3) #13
  %33 = extractvalue { <2 x float>, <2 x float> } %32, 0
  %34 = extractvalue { <2 x float>, <2 x float> } %32, 1
  %35 = extractelement <2 x float> %33, i32 0
  %36 = extractelement <2 x float> %34, i32 0
  %37 = fcmp olt float %35, %36
  br i1 %37, label %38, label %42

38:                                               ; preds = %30
  %39 = extractelement <2 x float> %34, i32 1
  %40 = extractelement <2 x float> %33, i32 1
  %41 = fcmp uge float %40, %39
  br i1 %41, label %42, label %44

42:                                               ; preds = %38, %30
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %22) #13
  %43 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %"class.cc::PaintShader"* null, %"class.cc::PaintShader"** %43, align 8
  br label %142

44:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %22) #13
  %45 = call i8* @_Znwm(i64 336) #12
  %46 = getelementptr inbounds i8, i8* %45, i64 8
  %47 = bitcast i8* %46 to i32*
  store i32 1, i32* %47, align 4
  %48 = bitcast i8* %45 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc11PaintShaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %48, align 8
  %49 = getelementptr inbounds i8, i8* %45, i64 12
  store i8 7, i8* %49, align 4
  %50 = getelementptr inbounds i8, i8* %45, i64 16
  %51 = getelementptr inbounds i8, i8* %45, i64 44
  store i8 0, i8* %51, align 4
  %52 = getelementptr inbounds i8, i8* %45, i64 48
  %53 = getelementptr inbounds i8, i8* %45, i64 136
  %54 = bitcast i8* %53 to %"class.cc::PaintImage"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 25, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 4 %52, i8 0, i64 88, i1 false) #13
  call void @_ZN2cc10PaintImageC1Ev(%"class.cc::PaintImage"* %54) #13
  %55 = getelementptr inbounds i8, i8* %45, i64 240
  %56 = bitcast i8* %55 to %"class.cc::PaintOpBuffer"**
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %56, align 8
  %57 = getelementptr inbounds i8, i8* %45, i64 248
  %58 = bitcast i8* %57 to i32*
  store i32 -1, i32* %58, align 8
  %59 = getelementptr inbounds i8, i8* %45, i64 252
  store i8 0, i8* %59, align 4
  %60 = getelementptr inbounds i8, i8* %45, i64 264
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 68, i1 false) #13
  %61 = ptrtoint i8* %45 to i64
  %62 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 19
  %63 = bitcast i8* %55 to %class.sk_sp.8*
  %64 = icmp eq %class.sk_sp.8* %62, %63
  br i1 %64, label %85, label %65

65:                                               ; preds = %44
  %66 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %62, i64 0, i32 0
  %67 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %66, align 8
  %68 = icmp eq %"class.cc::PaintOpBuffer"* %67, null
  br i1 %68, label %69, label %70

69:                                               ; preds = %65
  store %"class.cc::PaintOpBuffer"* %67, %"class.cc::PaintOpBuffer"** %56, align 8
  br label %85

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %67, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = atomicrmw add i32* %71, i32 1 monotonic
  %73 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %56, align 8
  %74 = bitcast %"class.cc::PaintOpBuffer"* %73 to %class.SkRefCntBase*
  store %"class.cc::PaintOpBuffer"* %67, %"class.cc::PaintOpBuffer"** %56, align 8
  %75 = icmp eq %"class.cc::PaintOpBuffer"* %73, null
  br i1 %75, label %85, label %76

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %73, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = atomicrmw add i32* %77, i32 -1 acq_rel
  %79 = icmp eq i32 %78, 1
  br i1 %79, label %80, label %85

80:                                               ; preds = %76
  %81 = bitcast %"class.cc::PaintOpBuffer"* %73 to void (%class.SkRefCntBase*)***
  %82 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %81, align 8
  %83 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %82, i64 2
  %84 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %83, align 8
  call void %84(%class.SkRefCntBase* nonnull %74) #13
  br label %85

85:                                               ; preds = %69, %44, %70, %76, %80
  %86 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 20
  %87 = load i32, i32* %86, align 8
  store i32 %87, i32* %58, align 8
  %88 = getelementptr inbounds i8, i8* %45, i64 96
  %89 = bitcast i8* %88 to <2 x float>*
  store <2 x float> %33, <2 x float>* %89, align 8
  %90 = getelementptr inbounds i8, i8* %45, i64 104
  %91 = bitcast i8* %90 to <2 x float>*
  store <2 x float> %34, <2 x float>* %91, align 8
  %92 = getelementptr inbounds i8, i8* %45, i64 40
  store i8 1, i8* %92, align 8
  %93 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 6
  %94 = load i32, i32* %93, align 4
  %95 = getelementptr inbounds i8, i8* %45, i64 28
  %96 = bitcast i8* %95 to i32*
  store i32 %94, i32* %96, align 4
  %97 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 7
  %98 = load i32, i32* %97, align 8
  %99 = getelementptr inbounds i8, i8* %45, i64 32
  %100 = bitcast i8* %99 to i32*
  store i32 %98, i32* %100, align 8
  %101 = fsub float %36, %35
  %102 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 13, i32 2
  %103 = load float, float* %102, align 4
  %104 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 13, i32 0
  %105 = load float, float* %104, align 4
  %106 = fsub float %103, %105
  %107 = fdiv float %101, %106
  %108 = fsub float %39, %40
  %109 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 13, i32 3
  %110 = load float, float* %109, align 4
  %111 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 13, i32 1
  %112 = load float, float* %111, align 4
  %113 = fsub float %110, %112
  %114 = fdiv float %108, %113
  %115 = fcmp ogt float %107, 0x3EB0000000000000
  %116 = select i1 %115, float %107, float 0.000000e+00
  %117 = fcmp ogt float %114, 0x3EB0000000000000
  %118 = select i1 %117, float %114, float 0.000000e+00
  %119 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %4, i64 0, i32 0
  store float %116, float* %119, align 4
  %120 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %4, i64 0, i32 1
  store float %118, float* %120, align 4
  %121 = bitcast %class.SkMatrix* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %121)
  %122 = load i8, i8* %24, align 4, !range !5, !noalias !9
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %126, label %124

124:                                              ; preds = %85
  %125 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0
  br label %128

126:                                              ; preds = %85
  %127 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #13, !noalias !9
  br label %128

128:                                              ; preds = %124, %126
  %129 = phi %class.SkMatrix* [ %125, %124 ], [ %127, %126 ]
  %130 = bitcast %class.SkMatrix* %129 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %121, i8* align 4 %130, i64 40, i1 false) #13
  %131 = load i8, i8* %51, align 4, !range !5
  %132 = icmp eq i8 %131, 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %52, i8* nonnull align 4 %121, i64 40, i1 false) #13
  br i1 %132, label %133, label %134

133:                                              ; preds = %128
  store i8 1, i8* %51, align 4
  br label %134

134:                                              ; preds = %128, %133
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %121)
  %135 = bitcast i8* %52 to %class.SkMatrix*
  %136 = load float, float* %119, align 4
  %137 = fdiv float 1.000000e+00, %136
  %138 = load float, float* %120, align 4
  %139 = fdiv float 1.000000e+00, %138
  %140 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8preScaleEff(%class.SkMatrix* %135, float %137, float %139) #13
  %141 = bitcast %class.sk_sp* %0 to i64*
  store i64 %61, i64* %141, align 8
  br label %142

142:                                              ; preds = %42, %134, %19
  ret void
}

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8preScaleEff(%class.SkMatrix*, float, float) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc11PaintShader24CreatePaintWorkletRecordEPNS_13ImageProviderE(%class.sk_sp* noalias nocapture sret, %"class.cc::PaintShader"*, %"class.cc::ImageProvider"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.cc::ImageProvider::ScopedResult", align 8
  %5 = alloca %"class.cc::DrawImage", align 8
  %6 = alloca %"class.cc::PaintImage", align 8
  %7 = alloca [9 x float], align 4
  %8 = bitcast %"class.cc::ImageProvider::ScopedResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %8) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 bitcast ({ <{ %class.sk_sp.39, %"struct.gpu::Mailbox", { { { { i8, [3 x i8], %union.anon.44 } } } }, %class.sk_sp.45, %struct.SkSize, %struct.SkSize, i32, i8, i8, [2 x i8] }>, %class.sk_sp.8, %"class.base::OnceCallback" }* @__const._ZNK2cc11PaintShader18CreateDecodedImageERK8SkMatrix15SkFilterQualityPNS_13ImageProviderEPjPS4_PbPN3gpu7MailboxE.decoded_draw_image to i8*), i64 80, i1 false)
  %9 = bitcast %"class.cc::DrawImage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 18
  call void @_ZN2cc10PaintImageC1ERKS0_(%"class.cc::PaintImage"* nonnull %6, %"class.cc::PaintImage"* dereferenceable(104) %10) #13
  call void @_ZN2cc9DrawImageC1ENS_10PaintImageE(%"class.cc::DrawImage"* nonnull %5, %"class.cc::PaintImage"* nonnull %6) #13
  %11 = bitcast %"class.cc::ImageProvider"* %2 to void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider"*, %"class.cc::DrawImage"*)***
  %12 = load void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider"*, %"class.cc::DrawImage"*)**, void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider"*, %"class.cc::DrawImage"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider"*, %"class.cc::DrawImage"*)*, void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider"*, %"class.cc::DrawImage"*)** %12, i64 2
  %14 = load void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider"*, %"class.cc::DrawImage"*)*, void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider"*, %"class.cc::DrawImage"*)** %13, align 8
  call void %14(%"class.cc::ImageProvider::ScopedResult"* nonnull sret %4, %"class.cc::ImageProvider"* %2, %"class.cc::DrawImage"* nonnull dereferenceable(240) %5) #13
  call void @_ZN2cc9DrawImageD1Ev(%"class.cc::DrawImage"* nonnull %5) #13
  call void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %9) #13
  %15 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %4, i64 0, i32 0, i32 0, i32 0
  %16 = load %class.SkImage*, %class.SkImage** %15, align 8
  %17 = icmp eq %class.SkImage* %16, null
  br i1 %17, label %18, label %29

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %4, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %20 = load i8, i8* %19, align 8, !range !5
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %29

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %4, i64 0, i32 0, i32 1
  %24 = call zeroext i1 @_ZNK3gpu7Mailbox6IsZeroEv(%"struct.gpu::Mailbox"* %23) #13
  br i1 %24, label %25, label %29

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %4, i64 0, i32 1, i32 0
  %27 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %26, align 8
  %28 = icmp eq %"class.cc::PaintOpBuffer"* %27, null
  br i1 %28, label %33, label %29

29:                                               ; preds = %25, %3, %18, %22
  %30 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %4, i64 0, i32 1, i32 0
  %31 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %30, align 8
  %32 = icmp eq %"class.cc::PaintOpBuffer"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %25, %29
  %34 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %"class.cc::PaintShader"* null, %"class.cc::PaintShader"** %34, align 8
  br label %98

35:                                               ; preds = %29
  %36 = bitcast [9 x float]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %36)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %36, i8 -1, i64 36, i1 false)
  %37 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %38 = load i8, i8* %37, align 4, !range !5, !noalias !12
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0
  %42 = bitcast %class.SkMatrix* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %36, i8* align 4 %42, i64 36, i1 false)
  %43 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %44 = load i32, i32* %43, align 4
  br label %52

45:                                               ; preds = %35
  %46 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #13, !noalias !12
  %47 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %30, align 8
  %48 = bitcast %class.SkMatrix* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %36, i8* align 4 %48, i64 36, i1 false)
  %49 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %46, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq %"class.cc::PaintOpBuffer"* %47, null
  br i1 %51, label %57, label %52

52:                                               ; preds = %40, %45
  %53 = phi i32 [ %44, %40 ], [ %50, %45 ]
  %54 = phi %"class.cc::PaintOpBuffer"* [ %31, %40 ], [ %47, %45 ]
  %55 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %54, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw add i32* %55, i32 1 monotonic, !noalias !15
  br label %57

57:                                               ; preds = %45, %52
  %58 = phi i32 [ %50, %45 ], [ %53, %52 ]
  %59 = phi %"class.cc::PaintOpBuffer"* [ null, %45 ], [ %54, %52 ]
  %60 = ptrtoint %"class.cc::PaintOpBuffer"* %59 to i64
  %61 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 13
  %62 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 6
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 7
  %65 = load i32, i32* %64, align 8
  %66 = call i8* @_Znwm(i64 336) #12, !noalias !18
  %67 = getelementptr inbounds i8, i8* %66, i64 8
  %68 = bitcast i8* %67 to i32*
  store i32 1, i32* %68, align 4, !noalias !18
  %69 = bitcast i8* %66 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc11PaintShaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %69, align 8, !noalias !18
  %70 = getelementptr inbounds i8, i8* %66, i64 12
  store i8 7, i8* %70, align 4, !noalias !18
  %71 = getelementptr inbounds i8, i8* %66, i64 16
  %72 = getelementptr inbounds i8, i8* %66, i64 44
  store i8 0, i8* %72, align 4, !noalias !18
  %73 = getelementptr inbounds i8, i8* %66, i64 48
  %74 = getelementptr inbounds i8, i8* %66, i64 136
  %75 = bitcast i8* %74 to %"class.cc::PaintImage"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 25, i1 false) #13, !noalias !18
  call void @llvm.memset.p0i8.i64(i8* align 4 %73, i8 0, i64 88, i1 false) #13, !noalias !18
  call void @_ZN2cc10PaintImageC1Ev(%"class.cc::PaintImage"* %75) #13, !noalias !18
  %76 = getelementptr inbounds i8, i8* %66, i64 240
  %77 = getelementptr inbounds i8, i8* %66, i64 252
  store i8 0, i8* %77, align 4, !noalias !18
  %78 = getelementptr inbounds i8, i8* %66, i64 264
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 68, i1 false) #13, !noalias !18
  %79 = bitcast %class.sk_sp* %0 to i8**
  store i8* %66, i8** %79, align 8, !alias.scope !18
  %80 = bitcast i8* %76 to i64*
  store i64 %60, i64* %80, align 8, !noalias !18
  %81 = bitcast i8* %66 to %"class.cc::PaintShader"*
  %82 = atomicrmw add i32* getelementptr inbounds ({ { { i32 } } }, { { { i32 } } }* @_ZN2cc12_GLOBAL__N_116g_next_shader_idE, i64 0, i32 0, i32 0, i32 0), i32 1 monotonic, !noalias !18
  %83 = getelementptr inbounds i8, i8* %66, i64 248
  %84 = bitcast i8* %83 to i32*
  store i32 %82, i32* %84, align 8, !noalias !18
  %85 = getelementptr inbounds i8, i8* %66, i64 96
  %86 = bitcast %struct.SkRect* %61 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 4 %86, i64 16, i1 false) #13, !noalias !18
  %87 = getelementptr inbounds i8, i8* %66, i64 40
  store i8 0, i8* %87, align 8, !noalias !18
  %88 = load i8, i8* %72, align 4, !range !5, !noalias !18
  %89 = icmp eq i8 %88, 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %73, i8* nonnull align 4 %36, i64 36, i1 false), !noalias !18
  %90 = getelementptr inbounds i8, i8* %66, i64 84
  %91 = bitcast i8* %90 to i32*
  store i32 %58, i32* %91, align 4, !noalias !18
  br i1 %89, label %92, label %93

92:                                               ; preds = %57
  store i8 1, i8* %72, align 4, !noalias !18
  br label %93

93:                                               ; preds = %92, %57
  %94 = getelementptr inbounds i8, i8* %66, i64 28
  %95 = bitcast i8* %94 to i32*
  store i32 %63, i32* %95, align 4, !noalias !18
  %96 = getelementptr inbounds i8, i8* %66, i64 32
  %97 = bitcast i8* %96 to i32*
  store i32 %65, i32* %97, align 8, !noalias !18
  call void @_ZN2cc11PaintShader16ResolveSkObjectsEPKN3gfx5SizeFEPNS_13ImageProviderE(%"class.cc::PaintShader"* nonnull %81, %"class.gfx::SizeF"* null, %"class.cc::ImageProvider"* null) #13, !noalias !18
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %36)
  br label %98

98:                                               ; preds = %93, %33
  call void @_ZN2cc13ImageProvider12ScopedResultD1Ev(%"class.cc::ImageProvider::ScopedResult"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %8) #13
  ret void
}

declare void @_ZN2cc10PaintImageC1ERKS0_(%"class.cc::PaintImage"*, %"class.cc::PaintImage"* dereferenceable(104)) unnamed_addr #5

declare void @_ZN2cc9DrawImageC1ENS_10PaintImageE(%"class.cc::DrawImage"*, %"class.cc::PaintImage"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN2cc9DrawImageD1Ev(%"class.cc::DrawImage"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN2cc13ImageProvider12ScopedResultD1Ev(%"class.cc::ImageProvider::ScopedResult"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc11PaintShader18CreateDecodedImageERK8SkMatrix15SkFilterQualityPNS_13ImageProviderEPjPS4_PbPN3gpu7MailboxE(%class.sk_sp* noalias nocapture sret, %"class.cc::PaintShader"*, %class.SkMatrix* dereferenceable(40), i32, %"class.cc::ImageProvider"*, i32* nocapture, i32* nocapture, i8* nocapture, %"struct.gpu::Mailbox"* nocapture) local_unnamed_addr #0 align 2 {
  %10 = alloca %class.SkMatrix, align 4
  %11 = alloca %struct.SkIRect, align 4
  %12 = alloca %"class.cc::DrawImage", align 8
  %13 = alloca %"class.cc::PaintImage", align 8
  %14 = alloca %class.SkM44, align 4
  %15 = alloca %"class.absl::optional.48", align 8
  %16 = alloca %"class.absl::optional.53", align 4
  %17 = alloca %"class.cc::ImageProvider::ScopedResult", align 8
  %18 = alloca %"class.cc::DecodedDrawImage", align 8
  %19 = alloca %class.SkMatrix, align 4
  %20 = alloca %"class.cc::PaintImage", align 8
  %21 = alloca %"class.cc::PaintImage", align 8
  %22 = alloca %"class.cc::PaintImageBuilder", align 8
  %23 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 18
  %24 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 18, i32 15, i32 0
  %25 = load %"class.cc::PaintWorkletInput"*, %"class.cc::PaintWorkletInput"** %24, align 8
  %26 = icmp eq %"class.cc::PaintWorkletInput"* %25, null
  br i1 %26, label %27, label %37

27:                                               ; preds = %9
  %28 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 18, i32 14, i32 0
  %29 = load %class.SkImage*, %class.SkImage** %28, align 8
  %30 = icmp eq %class.SkImage* %29, null
  br i1 %30, label %31, label %37

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 18, i32 5, i32 0
  %33 = load %"class.cc::TextureBacking"*, %"class.cc::TextureBacking"** %32, align 8
  %34 = icmp eq %"class.cc::TextureBacking"* %33, null
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %"class.cc::PaintShader"* null, %"class.cc::PaintShader"** %36, align 8
  br label %265

37:                                               ; preds = %31, %9, %27
  %38 = bitcast %class.SkMatrix* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %38) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %38, i8 -1, i64 36, i1 false)
  %39 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %10, i64 0, i32 1
  store i32 -1431655766, i32* %39, align 4
  %40 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %41 = load i8, i8* %40, align 4, !range !5, !noalias !21
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %45, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0
  br label %47

45:                                               ; preds = %37
  %46 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #13, !noalias !21
  br label %47

47:                                               ; preds = %43, %45
  %48 = phi %class.SkMatrix* [ %44, %43 ], [ %46, %45 ]
  %49 = bitcast %class.SkMatrix* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %38, i8* align 4 %49, i64 40, i1 false) #13
  %50 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9preConcatERKS_(%class.SkMatrix* nonnull %10, %class.SkMatrix* dereferenceable(40) %2) #13
  %51 = call i32 @_ZNK2cc10PaintImage5widthEv(%"class.cc::PaintImage"* %23) #13
  %52 = call i32 @_ZNK2cc10PaintImage6heightEv(%"class.cc::PaintImage"* %23) #13
  %53 = sitofp i32 %51 to float
  %54 = sitofp i32 %52 to float
  %55 = bitcast %struct.SkIRect* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55) #13
  %56 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %11, i64 0, i32 0
  %57 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %11, i64 0, i32 1
  %58 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %11, i64 0, i32 2
  %59 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %11, i64 0, i32 3
  %60 = fcmp olt float %53, 0x41DFFFFFE0000000
  %61 = select i1 %60, float %53, float 0x41DFFFFFE0000000
  %62 = fcmp ogt float %61, 0xC1DFFFFFE0000000
  %63 = select i1 %62, float %61, float 0xC1DFFFFFE0000000
  %64 = fptosi float %63 to i32
  %65 = fcmp olt float %54, 0x41DFFFFFE0000000
  %66 = select i1 %65, float %54, float 0x41DFFFFFE0000000
  %67 = fcmp ogt float %66, 0xC1DFFFFFE0000000
  %68 = select i1 %67, float %66, float 0xC1DFFFFFE0000000
  %69 = fptosi float %68 to i32
  store i32 0, i32* %56, align 4
  store i32 0, i32* %57, align 4
  store i32 %64, i32* %58, align 4
  store i32 %69, i32* %59, align 4
  %70 = bitcast %"class.cc::DrawImage"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %70) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %70, i8* align 8 bitcast (<{ { %class.sk_sp.1, %class.sk_sp.8, %"class.gfx::Rect", i32, [4 x i8], %class.sk_sp.10, %class.sk_sp.14, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %class.sk_sp.1, %class.scoped_refptr }, i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.52 } } } }, { { { { i8, [3 x i8], %union.anon.57 } } } }, float, [4 x i8] }>* @__const._ZNK2cc11PaintShader18CreateDecodedImageERK8SkMatrix15SkFilterQualityPNS_13ImageProviderEPjPS4_PbPN3gpu7MailboxE.draw_image to i8*), i64 240, i1 false)
  call void @_ZN2cc10PaintImageC1ERKS0_(%"class.cc::PaintImage"* nonnull %13, %"class.cc::PaintImage"* dereferenceable(104) %23) #13
  %71 = bitcast %class.SkM44* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %71) #13
  %72 = bitcast %class.SkMatrix* %10 to i32*
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %10, i64 0, i32 0, i64 1
  %75 = bitcast float* %74 to i32*
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %10, i64 0, i32 0, i64 2
  %78 = bitcast float* %77 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %10, i64 0, i32 0, i64 3
  %81 = bitcast float* %80 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %10, i64 0, i32 0, i64 4
  %84 = bitcast float* %83 to i32*
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %10, i64 0, i32 0, i64 5
  %87 = bitcast float* %86 to i32*
  %88 = load i32, i32* %87, align 4
  %89 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %10, i64 0, i32 0, i64 6
  %90 = bitcast float* %89 to i32*
  %91 = load i32, i32* %90, align 4
  %92 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %10, i64 0, i32 0, i64 7
  %93 = bitcast float* %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %10, i64 0, i32 0, i64 8
  %96 = bitcast float* %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = bitcast %class.SkM44* %14 to i32*
  store i32 %73, i32* %98, align 4
  %99 = getelementptr inbounds %class.SkM44, %class.SkM44* %14, i64 0, i32 0, i64 1
  %100 = bitcast float* %99 to i32*
  store i32 %82, i32* %100, align 4
  %101 = getelementptr inbounds %class.SkM44, %class.SkM44* %14, i64 0, i32 0, i64 2
  store float 0.000000e+00, float* %101, align 4
  %102 = getelementptr inbounds %class.SkM44, %class.SkM44* %14, i64 0, i32 0, i64 3
  %103 = bitcast float* %102 to i32*
  store i32 %91, i32* %103, align 4
  %104 = getelementptr inbounds %class.SkM44, %class.SkM44* %14, i64 0, i32 0, i64 4
  %105 = bitcast float* %104 to i32*
  store i32 %76, i32* %105, align 4
  %106 = getelementptr inbounds %class.SkM44, %class.SkM44* %14, i64 0, i32 0, i64 5
  %107 = bitcast float* %106 to i32*
  store i32 %85, i32* %107, align 4
  %108 = getelementptr inbounds %class.SkM44, %class.SkM44* %14, i64 0, i32 0, i64 6
  store float 0.000000e+00, float* %108, align 4
  %109 = getelementptr inbounds %class.SkM44, %class.SkM44* %14, i64 0, i32 0, i64 7
  %110 = bitcast float* %109 to i32*
  store i32 %94, i32* %110, align 4
  %111 = getelementptr inbounds %class.SkM44, %class.SkM44* %14, i64 0, i32 0, i64 8
  %112 = bitcast float* %111 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %112, align 4
  %113 = getelementptr inbounds %class.SkM44, %class.SkM44* %14, i64 0, i32 0, i64 12
  %114 = bitcast float* %113 to i32*
  store i32 %79, i32* %114, align 4
  %115 = getelementptr inbounds %class.SkM44, %class.SkM44* %14, i64 0, i32 0, i64 13
  %116 = bitcast float* %115 to i32*
  store i32 %88, i32* %116, align 4
  %117 = getelementptr inbounds %class.SkM44, %class.SkM44* %14, i64 0, i32 0, i64 14
  store float 0.000000e+00, float* %117, align 4
  %118 = getelementptr inbounds %class.SkM44, %class.SkM44* %14, i64 0, i32 0, i64 15
  %119 = bitcast float* %118 to i32*
  store i32 %97, i32* %119, align 4
  %120 = getelementptr inbounds %"class.absl::optional.48", %"class.absl::optional.48"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %120, align 8
  %121 = getelementptr inbounds %"class.absl::optional.53", %"class.absl::optional.53"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %121) #13
  store i8 0, i8* %121, align 4
  %122 = getelementptr inbounds %"class.absl::optional.53", %"class.absl::optional.53"* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 4 %122, i8 0, i64 68, i1 false) #13
  call void @_ZN2cc9DrawImageC1ENS_10PaintImageEbRK7SkIRect15SkFilterQualityRK5SkM44N4absl8optionalImEERKNSA_IN3gfx10ColorSpaceEEEf(%"class.cc::DrawImage"* nonnull %12, %"class.cc::PaintImage"* nonnull %13, i1 zeroext false, %struct.SkIRect* nonnull dereferenceable(16) %11, i32 %3, %class.SkM44* nonnull dereferenceable(64) %14, %"class.absl::optional.48"* nonnull byval(%"class.absl::optional.48") align 8 %15, %"class.absl::optional.53"* nonnull dereferenceable(72) %16, float 1.000000e+02) #13
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %121) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %71) #13
  call void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"* nonnull %13) #13
  %123 = bitcast %"class.cc::ImageProvider::ScopedResult"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %123) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %123, i8* align 8 bitcast ({ <{ %class.sk_sp.39, %"struct.gpu::Mailbox", { { { { i8, [3 x i8], %union.anon.44 } } } }, %class.sk_sp.45, %struct.SkSize, %struct.SkSize, i32, i8, i8, [2 x i8] }>, %class.sk_sp.8, %"class.base::OnceCallback" }* @__const._ZNK2cc11PaintShader18CreateDecodedImageERK8SkMatrix15SkFilterQualityPNS_13ImageProviderEPjPS4_PbPN3gpu7MailboxE.decoded_draw_image to i8*), i64 80, i1 false)
  %124 = bitcast %"class.cc::ImageProvider"* %4 to void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider"*, %"class.cc::DrawImage"*)***
  %125 = load void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider"*, %"class.cc::DrawImage"*)**, void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider"*, %"class.cc::DrawImage"*)*** %124, align 8
  %126 = getelementptr inbounds void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider"*, %"class.cc::DrawImage"*)*, void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider"*, %"class.cc::DrawImage"*)** %125, i64 2
  %127 = load void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider"*, %"class.cc::DrawImage"*)*, void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider"*, %"class.cc::DrawImage"*)** %126, align 8
  call void %127(%"class.cc::ImageProvider::ScopedResult"* nonnull sret %17, %"class.cc::ImageProvider"* %4, %"class.cc::DrawImage"* nonnull dereferenceable(240) %12) #13
  %128 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %17, i64 0, i32 0, i32 0, i32 0
  %129 = load %class.SkImage*, %class.SkImage** %128, align 8
  %130 = icmp eq %class.SkImage* %129, null
  br i1 %130, label %131, label %144

131:                                              ; preds = %47
  %132 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %17, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %133 = load i8, i8* %132, align 8, !range !5
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %135, label %144

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %17, i64 0, i32 0, i32 1
  %137 = call zeroext i1 @_ZNK3gpu7Mailbox6IsZeroEv(%"struct.gpu::Mailbox"* %136) #13
  br i1 %137, label %138, label %144

138:                                              ; preds = %135
  %139 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %17, i64 0, i32 1, i32 0
  %140 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %139, align 8
  %141 = icmp eq %"class.cc::PaintOpBuffer"* %140, null
  br i1 %141, label %142, label %144

142:                                              ; preds = %138
  %143 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %"class.cc::PaintShader"* null, %"class.cc::PaintShader"** %143, align 8
  br label %264

144:                                              ; preds = %138, %47, %131, %135
  %145 = bitcast %"class.cc::DecodedDrawImage"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %145) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %145, i8* align 8 bitcast (<{ %class.sk_sp.39, %"struct.gpu::Mailbox", { { { { i8, [3 x i8], %union.anon.44 } } } }, %class.sk_sp.45, %struct.SkSize, %struct.SkSize, i32, i8, i8, [2 x i8] }>* @__const._ZNK2cc11PaintShader18CreateDecodedImageERK8SkMatrix15SkFilterQualityPNS_13ImageProviderEPjPS4_PbPN3gpu7MailboxE.decoded_image to i8*), i64 64, i1 false)
  %146 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %17, i64 0, i32 0
  call void @_ZN2cc16DecodedDrawImageC1ERKS0_(%"class.cc::DecodedDrawImage"* nonnull %18, %"class.cc::DecodedDrawImage"* nonnull dereferenceable(64) %146) #13
  %147 = bitcast %class.SkMatrix* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %147) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %147, i8 -1, i64 36, i1 false)
  %148 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %19, i64 0, i32 1
  store i32 -1431655766, i32* %148, align 4
  %149 = load i8, i8* %40, align 4, !range !5, !noalias !24
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %144
  %152 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0
  br label %155

153:                                              ; preds = %144
  %154 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #13, !noalias !24
  br label %155

155:                                              ; preds = %151, %153
  %156 = phi %class.SkMatrix* [ %152, %151 ], [ %154, %153 ]
  %157 = bitcast %class.SkMatrix* %156 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %147, i8* align 4 %157, i64 40, i1 false) #13
  %158 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %18, i64 0, i32 5, i32 0
  %159 = load float, float* %158, align 8
  %160 = fadd float %159, -1.000000e+00
  %161 = call float @llvm.fabs.f32(float %160) #13
  %162 = fcmp olt float %161, 0x3E80000000000000
  %163 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %18, i64 0, i32 5, i32 1
  %164 = load float, float* %163, align 4
  br i1 %162, label %165, label %169

165:                                              ; preds = %155
  %166 = fadd float %164, -1.000000e+00
  %167 = call float @llvm.fabs.f32(float %166) #13
  %168 = fcmp olt float %167, 0x3E80000000000000
  br i1 %168, label %173, label %169

169:                                              ; preds = %155, %165
  %170 = fdiv float 1.000000e+00, %159
  %171 = fdiv float 1.000000e+00, %164
  %172 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8preScaleEff(%class.SkMatrix* nonnull %19, float %170, float %171) #13
  br label %173

173:                                              ; preds = %165, %169
  %174 = bitcast %"class.cc::PaintImage"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %174) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %174, i8 -86, i64 104, i1 false)
  call void @_ZN2cc10PaintImageC1Ev(%"class.cc::PaintImage"* nonnull %20) #13
  %175 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %18, i64 0, i32 2
  %176 = bitcast %"class.absl::optional.40"* %175 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = trunc i64 %177 to i8
  %179 = icmp eq i8 %178, 0
  br i1 %179, label %189, label %180

180:                                              ; preds = %173
  %181 = call dereferenceable(104) %"class.cc::PaintImage"* @_ZN2cc10PaintImageaSERKS0_(%"class.cc::PaintImage"* nonnull %20, %"class.cc::PaintImage"* dereferenceable(104) %23) #13
  %182 = load i64, i64* %176, align 8
  %183 = trunc i64 %182 to i8
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %185, label %186, !prof !27

185:                                              ; preds = %180
  call void @llvm.trap() #13
  unreachable

186:                                              ; preds = %180
  %187 = lshr i64 %182, 32
  %188 = trunc i64 %187 to i32
  store i32 %188, i32* %5, align 4
  br label %228

189:                                              ; preds = %173
  %190 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %18, i64 0, i32 1
  %191 = call zeroext i1 @_ZNK3gpu7Mailbox6IsZeroEv(%"struct.gpu::Mailbox"* %190) #13
  br i1 %191, label %196, label %192

192:                                              ; preds = %189
  %193 = call dereferenceable(104) %"class.cc::PaintImage"* @_ZN2cc10PaintImageaSERKS0_(%"class.cc::PaintImage"* nonnull %20, %"class.cc::PaintImage"* dereferenceable(104) %23) #13
  %194 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %8, i64 0, i32 0, i64 0
  %195 = getelementptr inbounds %"struct.gpu::Mailbox", %"struct.gpu::Mailbox"* %190, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %194, i8* align 8 %195, i64 16, i1 false)
  br label %228

196:                                              ; preds = %189
  %197 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %18, i64 0, i32 0, i32 0
  %198 = load %class.SkImage*, %class.SkImage** %197, align 8
  %199 = icmp eq %class.SkImage* %198, null
  br i1 %199, label %203, label %200

200:                                              ; preds = %196
  %201 = getelementptr inbounds %class.SkImage, %class.SkImage* %198, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = atomicrmw add i32* %201, i32 1 monotonic, !noalias !28
  br label %203

203:                                              ; preds = %196, %200
  %204 = ptrtoint %class.SkImage* %198 to i64
  %205 = bitcast %"class.cc::PaintImage"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %205) #13
  %206 = bitcast %"class.cc::PaintImageBuilder"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %206) #13
  call void @_ZN2cc17PaintImageBuilder11WithDefaultEv(%"class.cc::PaintImageBuilder"* nonnull sret %22) #13
  %207 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 18, i32 6
  %208 = load i32, i32* %207, align 8
  %209 = getelementptr inbounds %"class.cc::PaintImageBuilder", %"class.cc::PaintImageBuilder"* %22, i64 0, i32 0, i32 6
  store i32 %208, i32* %209, align 8
  %210 = call i32 @_ZNK2cc10PaintImage20GetContentIdForFrameEm(%"class.cc::PaintImage"* %23, i64 0) #13
  %211 = getelementptr inbounds %"class.cc::PaintImageBuilder", %"class.cc::PaintImageBuilder"* %22, i64 0, i32 0, i32 0, i32 0
  %212 = load %class.SkImage*, %class.SkImage** %211, align 8
  %213 = bitcast %"class.cc::PaintImageBuilder"* %22 to i64*
  store i64 %204, i64* %213, align 8
  %214 = icmp eq %class.SkImage* %212, null
  br i1 %214, label %225, label %215

215:                                              ; preds = %203
  %216 = getelementptr inbounds %class.SkImage, %class.SkImage* %212, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = atomicrmw add i32* %216, i32 -1 acq_rel
  %218 = icmp eq i32 %217, 1
  br i1 %218, label %219, label %225

219:                                              ; preds = %215
  %220 = bitcast %class.SkImage* %212 to %class.SkRefCntBase*
  %221 = bitcast %class.SkImage* %212 to void (%class.SkRefCntBase*)***
  %222 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %221, align 8
  %223 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %222, i64 2
  %224 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %223, align 8
  call void %224(%class.SkRefCntBase* nonnull %220) #13
  br label %225

225:                                              ; preds = %203, %215, %219
  %226 = getelementptr inbounds %"class.cc::PaintImageBuilder", %"class.cc::PaintImageBuilder"* %22, i64 0, i32 0, i32 3
  store i32 %210, i32* %226, align 8
  call void @_ZN2cc17PaintImageBuilder14TakePaintImageEv(%"class.cc::PaintImage"* nonnull sret %21, %"class.cc::PaintImageBuilder"* nonnull %22) #13
  %227 = call dereferenceable(104) %"class.cc::PaintImage"* @_ZN2cc10PaintImageaSEOS0_(%"class.cc::PaintImage"* nonnull %20, %"class.cc::PaintImage"* nonnull dereferenceable(104) %21) #13
  call void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"* nonnull %21) #13
  call void @_ZN2cc17PaintImageBuilderD1Ev(%"class.cc::PaintImageBuilder"* nonnull %22) #13
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %206) #13
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %205) #13
  br label %228

228:                                              ; preds = %192, %225, %186
  %229 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %18, i64 0, i32 6
  %230 = load i32, i32* %229, align 8
  store i32 %230, i32* %6, align 4
  %231 = getelementptr inbounds %"class.cc::DecodedDrawImage", %"class.cc::DecodedDrawImage"* %18, i64 0, i32 7
  %232 = load i8, i8* %231, align 4, !range !5
  store i8 %232, i8* %7, align 1
  %233 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 6
  %234 = load i32, i32* %233, align 4
  %235 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 7
  %236 = load i32, i32* %235, align 8
  %237 = call i8* @_Znwm(i64 336) #12, !noalias !31
  %238 = bitcast i8* %237 to %"class.cc::PaintShader"*
  %239 = getelementptr inbounds i8, i8* %237, i64 8
  %240 = bitcast i8* %239 to i32*
  store i32 1, i32* %240, align 4, !noalias !31
  %241 = bitcast i8* %237 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc11PaintShaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %241, align 8, !noalias !31
  %242 = getelementptr inbounds i8, i8* %237, i64 12
  store i8 6, i8* %242, align 4, !noalias !31
  %243 = getelementptr inbounds i8, i8* %237, i64 16
  %244 = getelementptr inbounds i8, i8* %237, i64 44
  store i8 0, i8* %244, align 4, !noalias !31
  %245 = getelementptr inbounds i8, i8* %237, i64 48
  %246 = getelementptr inbounds i8, i8* %237, i64 136
  %247 = bitcast i8* %246 to %"class.cc::PaintImage"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %243, i8 0, i64 25, i1 false) #13, !noalias !31
  call void @llvm.memset.p0i8.i64(i8* align 4 %245, i8 0, i64 88, i1 false) #13, !noalias !31
  call void @_ZN2cc10PaintImageC1Ev(%"class.cc::PaintImage"* %247) #13, !noalias !31
  %248 = getelementptr inbounds i8, i8* %237, i64 240
  %249 = bitcast i8* %248 to %"class.cc::PaintOpBuffer"**
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %249, align 8, !noalias !31
  %250 = getelementptr inbounds i8, i8* %237, i64 248
  %251 = bitcast i8* %250 to i32*
  store i32 -1, i32* %251, align 8, !noalias !31
  %252 = getelementptr inbounds i8, i8* %237, i64 252
  store i8 0, i8* %252, align 4, !noalias !31
  %253 = getelementptr inbounds i8, i8* %237, i64 264
  call void @llvm.memset.p0i8.i64(i8* align 8 %253, i8 0, i64 68, i1 false) #13, !noalias !31
  %254 = bitcast %class.sk_sp* %0 to i8**
  store i8* %237, i8** %254, align 8, !alias.scope !31
  %255 = call dereferenceable(104) %"class.cc::PaintImage"* @_ZN2cc10PaintImageaSERKS0_(%"class.cc::PaintImage"* %247, %"class.cc::PaintImage"* nonnull dereferenceable(104) %20) #13, !noalias !31
  %256 = load i8, i8* %244, align 4, !range !5, !noalias !31
  %257 = icmp eq i8 %256, 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %245, i8* nonnull align 4 %147, i64 40, i1 false) #13, !noalias !31
  br i1 %257, label %258, label %259

258:                                              ; preds = %228
  store i8 1, i8* %244, align 4, !noalias !31
  br label %259

259:                                              ; preds = %228, %258
  %260 = getelementptr inbounds i8, i8* %237, i64 28
  %261 = bitcast i8* %260 to i32*
  store i32 %234, i32* %261, align 4, !noalias !31
  %262 = getelementptr inbounds i8, i8* %237, i64 32
  %263 = bitcast i8* %262 to i32*
  store i32 %236, i32* %263, align 8, !noalias !31
  call void @_ZN2cc11PaintShader16ResolveSkObjectsEPKN3gfx5SizeFEPNS_13ImageProviderE(%"class.cc::PaintShader"* nonnull %238, %"class.gfx::SizeF"* null, %"class.cc::ImageProvider"* null) #13, !noalias !31
  call void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"* nonnull %20) #13
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %174) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %147) #13
  call void @_ZN2cc16DecodedDrawImageD1Ev(%"class.cc::DecodedDrawImage"* nonnull %18) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %145) #13
  br label %264

264:                                              ; preds = %259, %142
  call void @_ZN2cc13ImageProvider12ScopedResultD1Ev(%"class.cc::ImageProvider::ScopedResult"* nonnull %17) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %123) #13
  call void @_ZN2cc9DrawImageD1Ev(%"class.cc::DrawImage"* nonnull %12) #13
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %70) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %38) #13
  br label %265

265:                                              ; preds = %264, %35
  ret void
}

declare i32 @_ZNK2cc10PaintImage5widthEv(%"class.cc::PaintImage"*) local_unnamed_addr #5

declare i32 @_ZNK2cc10PaintImage6heightEv(%"class.cc::PaintImage"*) local_unnamed_addr #5

declare void @_ZN2cc9DrawImageC1ENS_10PaintImageEbRK7SkIRect15SkFilterQualityRK5SkM44N4absl8optionalImEERKNSA_IN3gfx10ColorSpaceEEEf(%"class.cc::DrawImage"*, %"class.cc::PaintImage"*, i1 zeroext, %struct.SkIRect* dereferenceable(16), i32, %class.SkM44* dereferenceable(64), %"class.absl::optional.48"* byval(%"class.absl::optional.48") align 8, %"class.absl::optional.53"* dereferenceable(72), float) unnamed_addr #5

declare void @_ZN2cc16DecodedDrawImageC1ERKS0_(%"class.cc::DecodedDrawImage"*, %"class.cc::DecodedDrawImage"* dereferenceable(64)) unnamed_addr #5

declare zeroext i1 @_ZNK3gpu7Mailbox6IsZeroEv(%"struct.gpu::Mailbox"*) local_unnamed_addr #5

declare void @_ZN2cc17PaintImageBuilder11WithDefaultEv(%"class.cc::PaintImageBuilder"* sret) local_unnamed_addr #5

declare i32 @_ZNK2cc10PaintImage20GetContentIdForFrameEm(%"class.cc::PaintImage"*, i64) local_unnamed_addr #5

declare void @_ZN2cc17PaintImageBuilder14TakePaintImageEv(%"class.cc::PaintImage"* sret, %"class.cc::PaintImageBuilder"*) local_unnamed_addr #5

declare dereferenceable(104) %"class.cc::PaintImage"* @_ZN2cc10PaintImageaSEOS0_(%"class.cc::PaintImage"*, %"class.cc::PaintImage"* dereferenceable(104)) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN2cc17PaintImageBuilderD1Ev(%"class.cc::PaintImageBuilder"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN2cc16DecodedDrawImageD1Ev(%"class.cc::DecodedDrawImage"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc11PaintShader11GetSkShaderE15SkFilterQuality(%class.sk_sp.58* noalias sret, %"class.cc::PaintShader"*, i32) local_unnamed_addr #2 align 2 {
  %4 = alloca %struct.SkSamplingOptions, align 4
  %5 = alloca <2 x i64>, align 16
  %6 = alloca %class.sk_sp.1, align 8
  %7 = alloca %class.sk_sp.34, align 8
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %struct.SkISize*
  %10 = alloca %class.sk_sp.2, align 8
  %11 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %11) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %11, i8* align 4 getelementptr inbounds ({ i8, [3 x i8], %struct.SkCubicResampler, i32, i32 }, { i8, [3 x i8], %struct.SkCubicResampler, i32, i32 }* @__const._ZNK2cc11PaintShader11GetSkShaderE15SkFilterQuality.sampling, i64 0, i32 0), i64 20, i1 false)
  call void @_ZN2cc10PaintFlags32FilterQualityToSkSamplingOptionsE15SkFilterQuality(%struct.SkSamplingOptions* nonnull sret %4, i32 %2) #13
  %12 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 1
  %13 = load i8, i8* %12, align 4
  switch i8 %13, label %239 [
    i8 0, label %14
    i8 7, label %151
    i8 2, label %15
    i8 3, label %45
    i8 4, label %73
    i8 5, label %104
    i8 6, label %137
  ]

14:                                               ; preds = %3
  call void @_ZN9SkShaders5EmptyEv(%class.sk_sp.58* sret %0) #13
  br label %242

15:                                               ; preds = %3
  %16 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #13
  %17 = bitcast <2 x i64>* %5 to %struct.SkPoint*
  %18 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 14
  %19 = bitcast %struct.SkPoint* %18 to <2 x i64>*
  %20 = load <2 x i64>, <2 x i64>* %19, align 8
  store <2 x i64> %20, <2 x i64>* %5, align 16
  %21 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 22, i32 0, i32 0
  %22 = load i32*, i32** %21, align 8
  %23 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 23, i32 0, i32 0
  %24 = load float*, float** %23, align 8
  %25 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 23, i32 0, i32 1
  %26 = load float*, float** %25, align 8
  %27 = icmp eq float* %24, %26
  %28 = select i1 %27, float* null, float* %24
  %29 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 22, i32 0, i32 1
  %30 = bitcast i32** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = ptrtoint i32* %22 to i64
  %33 = sub i64 %31, %32
  %34 = lshr exact i64 %33, 2
  %35 = trunc i64 %34 to i32
  %36 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 6
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 3
  %39 = load i32, i32* %38, align 8
  %40 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %41 = load i8, i8* %40, align 4, !range !5
  %42 = icmp eq i8 %41, 0
  %43 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0
  %44 = select i1 %42, %class.SkMatrix* null, %class.SkMatrix* %43
  call void @_ZN16SkGradientShader10MakeLinearEPK7SkPointPKjPKfi10SkTileModejPK8SkMatrix(%class.sk_sp.58* sret %0, %struct.SkPoint* nonnull %17, i32* %22, float* %28, i32 %35, i32 %37, i32 %39, %class.SkMatrix* %44) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #13
  br label %242

45:                                               ; preds = %3
  %46 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 12
  %47 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 5
  %48 = load float, float* %47, align 8
  %49 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 22, i32 0, i32 0
  %50 = load i32*, i32** %49, align 8
  %51 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 23, i32 0, i32 0
  %52 = load float*, float** %51, align 8
  %53 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 23, i32 0, i32 1
  %54 = load float*, float** %53, align 8
  %55 = icmp eq float* %52, %54
  %56 = select i1 %55, float* null, float* %52
  %57 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 22, i32 0, i32 1
  %58 = bitcast i32** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = ptrtoint i32* %50 to i64
  %61 = sub i64 %59, %60
  %62 = lshr exact i64 %61, 2
  %63 = trunc i64 %62 to i32
  %64 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 6
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 3
  %67 = load i32, i32* %66, align 8
  %68 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %69 = load i8, i8* %68, align 4, !range !5
  %70 = icmp eq i8 %69, 0
  %71 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0
  %72 = select i1 %70, %class.SkMatrix* null, %class.SkMatrix* %71
  call void @_ZN16SkGradientShader10MakeRadialERK7SkPointfPKjPKfi10SkTileModejPK8SkMatrix(%class.sk_sp.58* sret %0, %struct.SkPoint* dereferenceable(8) %46, float %48, i32* %50, float* %56, i32 %63, i32 %65, i32 %67, %class.SkMatrix* %72) #13
  br label %242

73:                                               ; preds = %3
  %74 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 14
  %75 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 5
  %76 = load float, float* %75, align 8
  %77 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 15
  %78 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 4
  %79 = load float, float* %78, align 4
  %80 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 22, i32 0, i32 0
  %81 = load i32*, i32** %80, align 8
  %82 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 23, i32 0, i32 0
  %83 = load float*, float** %82, align 8
  %84 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 23, i32 0, i32 1
  %85 = load float*, float** %84, align 8
  %86 = icmp eq float* %83, %85
  %87 = select i1 %86, float* null, float* %83
  %88 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 22, i32 0, i32 1
  %89 = bitcast i32** %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = ptrtoint i32* %81 to i64
  %92 = sub i64 %90, %91
  %93 = lshr exact i64 %92, 2
  %94 = trunc i64 %93 to i32
  %95 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 6
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 3
  %98 = load i32, i32* %97, align 8
  %99 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %100 = load i8, i8* %99, align 4, !range !5
  %101 = icmp eq i8 %100, 0
  %102 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0
  %103 = select i1 %101, %class.SkMatrix* null, %class.SkMatrix* %102
  call void @_ZN16SkGradientShader19MakeTwoPointConicalERK7SkPointfS2_fPKjPKfi10SkTileModejPK8SkMatrix(%class.sk_sp.58* sret %0, %struct.SkPoint* dereferenceable(8) %74, float %76, %struct.SkPoint* dereferenceable(8) %77, float %79, i32* %81, float* %87, i32 %94, i32 %96, i32 %98, %class.SkMatrix* %103) #13
  br label %242

104:                                              ; preds = %3
  %105 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 12, i32 0
  %106 = load float, float* %105, align 4
  %107 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 12, i32 1
  %108 = load float, float* %107, align 4
  %109 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 22, i32 0, i32 0
  %110 = load i32*, i32** %109, align 8
  %111 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 23, i32 0, i32 0
  %112 = load float*, float** %111, align 8
  %113 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 23, i32 0, i32 1
  %114 = load float*, float** %113, align 8
  %115 = icmp eq float* %112, %114
  %116 = select i1 %115, float* null, float* %112
  %117 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 22, i32 0, i32 1
  %118 = bitcast i32** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = ptrtoint i32* %110 to i64
  %121 = sub i64 %119, %120
  %122 = lshr exact i64 %121, 2
  %123 = trunc i64 %122 to i32
  %124 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 6
  %125 = load i32, i32* %124, align 4
  %126 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 16
  %127 = load float, float* %126, align 8
  %128 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 17
  %129 = load float, float* %128, align 4
  %130 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 3
  %131 = load i32, i32* %130, align 8
  %132 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %133 = load i8, i8* %132, align 4, !range !5
  %134 = icmp eq i8 %133, 0
  %135 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0
  %136 = select i1 %134, %class.SkMatrix* null, %class.SkMatrix* %135
  call void @_ZN16SkGradientShader9MakeSweepEffPKjPKfi10SkTileModeffjPK8SkMatrix(%class.sk_sp.58* sret %0, float %106, float %108, i32* %110, float* %116, i32 %123, i32 %125, float %127, float %129, i32 %131, %class.SkMatrix* %136) #13
  br label %242

137:                                              ; preds = %3
  %138 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 25, i32 0
  %139 = load %class.SkImage*, %class.SkImage** %138, align 8
  %140 = icmp eq %class.SkImage* %139, null
  br i1 %140, label %239, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 6
  %143 = load i32, i32* %142, align 4
  %144 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 7
  %145 = load i32, i32* %144, align 8
  %146 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %147 = load i8, i8* %146, align 4, !range !5
  %148 = icmp eq i8 %147, 0
  %149 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0
  %150 = select i1 %148, %class.SkMatrix* null, %class.SkMatrix* %149
  call void @_ZNK7SkImage10makeShaderE10SkTileModeS0_RK17SkSamplingOptionsPK8SkMatrix(%class.sk_sp.58* sret %0, %class.SkImage* nonnull %139, i32 %143, i32 %145, %struct.SkSamplingOptions* nonnull dereferenceable(20) %4, %class.SkMatrix* %150) #13
  br label %242

151:                                              ; preds = %3
  %152 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 24, i32 0
  %153 = load %class.SkPicture*, %class.SkPicture** %152, align 8
  %154 = icmp eq %class.SkPicture* %153, null
  br i1 %154, label %239, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 9
  %157 = load i8, i8* %156, align 8
  switch i8 %157, label %239 [
    i8 0, label %158
    i8 1, label %170
  ]

158:                                              ; preds = %155
  %159 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 6
  %160 = load i32, i32* %159, align 4
  %161 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 7
  %162 = load i32, i32* %161, align 8
  %163 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %4, i64 0, i32 2
  %164 = load i32, i32* %163, align 4
  %165 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %166 = load i8, i8* %165, align 4, !range !5
  %167 = icmp eq i8 %166, 0
  %168 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0
  %169 = select i1 %167, %class.SkMatrix* null, %class.SkMatrix* %168
  call void @_ZNK9SkPicture10makeShaderE10SkTileModeS0_12SkFilterModePK8SkMatrixPK6SkRect(%class.sk_sp.58* sret %0, %class.SkPicture* nonnull %153, i32 %160, i32 %162, i32 %164, %class.SkMatrix* %169, %struct.SkRect* null) #13
  br label %242

170:                                              ; preds = %155
  %171 = bitcast %class.sk_sp.1* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %171) #13
  %172 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %6, i64 0, i32 0
  store %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*), %class.SkImage** %172, align 8
  %173 = getelementptr inbounds %class.sk_sp.34, %class.sk_sp.34* %7, i64 0, i32 0
  %174 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %153, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = atomicrmw add i32* %174, i32 1 monotonic
  store %class.SkPicture* %153, %class.SkPicture** %173, align 8
  %176 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %176) #13
  %177 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 13, i32 2
  %178 = load float, float* %177, align 4
  %179 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 13, i32 0
  %180 = load float, float* %179, align 4
  %181 = fsub float %178, %180
  %182 = fptosi float %181 to i32
  %183 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 13, i32 3
  %184 = load float, float* %183, align 4
  %185 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 13, i32 1
  %186 = load float, float* %185, align 4
  %187 = fsub float %184, %186
  %188 = fptosi float %187 to i32
  %189 = zext i32 %188 to i64
  %190 = shl nuw i64 %189, 32
  %191 = zext i32 %182 to i64
  %192 = or i64 %190, %191
  store i64 %192, i64* %8, align 8
  call void @_ZN12SkColorSpace8MakeSRGBEv(%class.sk_sp.2* nonnull sret %10) #13
  call void @_ZN7SkImage15MakeFromPictureE5sk_spI9SkPictureERK7SkISizePK8SkMatrixPK7SkPaintNS_8BitDepthES0_I12SkColorSpaceE(%class.sk_sp.1* nonnull sret %6, %class.sk_sp.34* nonnull %7, %struct.SkISize* nonnull dereferenceable(8) %9, %class.SkMatrix* null, %class.SkPaint* null, i32 0, %class.sk_sp.2* nonnull %10) #13
  %193 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %10, i64 0, i32 0
  %194 = load %class.SkColorSpace*, %class.SkColorSpace** %193, align 8
  %195 = icmp eq %class.SkColorSpace* %194, null
  br i1 %195, label %202, label %196

196:                                              ; preds = %170
  %197 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %194, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = atomicrmw add i32* %197, i32 -1 acq_rel
  %199 = icmp eq i32 %198, 1
  br i1 %199, label %200, label %202

200:                                              ; preds = %196
  %201 = bitcast %class.SkColorSpace* %194 to i8*
  call void @_ZdlPv(i8* %201) #12
  br label %202

202:                                              ; preds = %170, %196, %200
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %176) #13
  %203 = load %class.SkPicture*, %class.SkPicture** %173, align 8
  %204 = icmp eq %class.SkPicture* %203, null
  br i1 %204, label %215, label %205

205:                                              ; preds = %202
  %206 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %203, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %207 = atomicrmw add i32* %206, i32 -1 acq_rel
  %208 = icmp eq i32 %207, 1
  br i1 %208, label %209, label %215

209:                                              ; preds = %205
  %210 = bitcast %class.SkPicture* %203 to %class.SkRefCntBase*
  %211 = bitcast %class.SkPicture* %203 to void (%class.SkRefCntBase*)***
  %212 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %211, align 8
  %213 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %212, i64 2
  %214 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %213, align 8
  call void %214(%class.SkRefCntBase* nonnull %210) #13
  br label %215

215:                                              ; preds = %202, %205, %209
  %216 = load %class.SkImage*, %class.SkImage** %172, align 8
  %217 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 6
  %218 = load i32, i32* %217, align 4
  %219 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 7
  %220 = load i32, i32* %219, align 8
  %221 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %222 = load i8, i8* %221, align 4, !range !5
  %223 = icmp eq i8 %222, 0
  %224 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0
  %225 = select i1 %223, %class.SkMatrix* null, %class.SkMatrix* %224
  call void @_ZNK7SkImage10makeShaderE10SkTileModeS0_RK17SkSamplingOptionsPK8SkMatrix(%class.sk_sp.58* sret %0, %class.SkImage* %216, i32 %218, i32 %220, %struct.SkSamplingOptions* nonnull dereferenceable(20) %4, %class.SkMatrix* %225) #13
  %226 = load %class.SkImage*, %class.SkImage** %172, align 8
  %227 = icmp eq %class.SkImage* %226, null
  br i1 %227, label %238, label %228

228:                                              ; preds = %215
  %229 = getelementptr inbounds %class.SkImage, %class.SkImage* %226, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %230 = atomicrmw add i32* %229, i32 -1 acq_rel
  %231 = icmp eq i32 %230, 1
  br i1 %231, label %232, label %238

232:                                              ; preds = %228
  %233 = bitcast %class.SkImage* %226 to %class.SkRefCntBase*
  %234 = bitcast %class.SkImage* %226 to void (%class.SkRefCntBase*)***
  %235 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %234, align 8
  %236 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %235, i64 2
  %237 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %236, align 8
  call void %237(%class.SkRefCntBase* nonnull %233) #13
  br label %238

238:                                              ; preds = %215, %228, %232
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %171) #13
  br label %242

239:                                              ; preds = %151, %137, %155, %3
  %240 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 8
  %241 = load i32, i32* %240, align 4
  call void @_ZN9SkShaders5ColorEj(%class.sk_sp.58* sret %0, i32 %241) #13
  br label %242

242:                                              ; preds = %239, %238, %158, %141, %104, %73, %45, %15, %14
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %11) #13
  ret void
}

declare void @_ZN2cc10PaintFlags32FilterQualityToSkSamplingOptionsE15SkFilterQuality(%struct.SkSamplingOptions* sret, i32) local_unnamed_addr #5

declare void @_ZN9SkShaders5EmptyEv(%class.sk_sp.58* sret) local_unnamed_addr #5

declare void @_ZN16SkGradientShader10MakeLinearEPK7SkPointPKjPKfi10SkTileModejPK8SkMatrix(%class.sk_sp.58* sret, %struct.SkPoint*, i32*, float*, i32, i32, i32, %class.SkMatrix*) local_unnamed_addr #5

declare void @_ZN16SkGradientShader10MakeRadialERK7SkPointfPKjPKfi10SkTileModejPK8SkMatrix(%class.sk_sp.58* sret, %struct.SkPoint* dereferenceable(8), float, i32*, float*, i32, i32, i32, %class.SkMatrix*) local_unnamed_addr #5

declare void @_ZN16SkGradientShader19MakeTwoPointConicalERK7SkPointfS2_fPKjPKfi10SkTileModejPK8SkMatrix(%class.sk_sp.58* sret, %struct.SkPoint* dereferenceable(8), float, %struct.SkPoint* dereferenceable(8), float, i32*, float*, i32, i32, i32, %class.SkMatrix*) local_unnamed_addr #5

declare void @_ZN16SkGradientShader9MakeSweepEffPKjPKfi10SkTileModeffjPK8SkMatrix(%class.sk_sp.58* sret, float, float, i32*, float*, i32, i32, float, float, i32, %class.SkMatrix*) local_unnamed_addr #5

declare void @_ZNK7SkImage10makeShaderE10SkTileModeS0_RK17SkSamplingOptionsPK8SkMatrix(%class.sk_sp.58* sret, %class.SkImage*, i32, i32, %struct.SkSamplingOptions* dereferenceable(20), %class.SkMatrix*) local_unnamed_addr #5

declare void @_ZNK9SkPicture10makeShaderE10SkTileModeS0_12SkFilterModePK8SkMatrixPK6SkRect(%class.sk_sp.58* sret, %class.SkPicture*, i32, i32, i32, %class.SkMatrix*, %struct.SkRect*) local_unnamed_addr #5

declare void @_ZN7SkImage15MakeFromPictureE5sk_spI9SkPictureERK7SkISizePK8SkMatrixPK7SkPaintNS_8BitDepthES0_I12SkColorSpaceE(%class.sk_sp.1* sret, %class.sk_sp.34*, %struct.SkISize* dereferenceable(8), %class.SkMatrix*, %class.SkPaint*, i32, %class.sk_sp.2*) local_unnamed_addr #5

declare void @_ZN12SkColorSpace8MakeSRGBEv(%class.sk_sp.2* sret) local_unnamed_addr #5

declare void @_ZN9SkShaders5ColorEj(%class.sk_sp.58* sret, i32) local_unnamed_addr #5

declare dereferenceable(8) %class.sk_sp.1* @_ZNK2cc10PaintImage10GetSkImageEv(%"class.cc::PaintImage"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPKjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.20"*, i32*, i32*) local_unnamed_addr #2 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.20"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #13
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #13
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #12
  %55 = bitcast %"class.std::__1::vector.20"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #13
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.20"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #14
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.20"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #14
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #12
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.20"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #13
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIfNS_9allocatorIfEEE6assignIPKfEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIfNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.27"*, float*, float*) local_unnamed_addr #2 comdat align 2 {
  %4 = ptrtoint float* %2 to i64
  %5 = ptrtoint float* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.27", %"class.std::__1::vector.27"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast float** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.27"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to float*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.27", %"class.std::__1::vector.27"* %0, i64 0, i32 0, i32 1
  %19 = bitcast float** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds float, float* %1, i64 %22
  %25 = select i1 %23, float* %24, float* %2
  %26 = ptrtoint float* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast float* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #13
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast float* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #13
  %42 = inttoptr i64 %35 to float*
  %43 = getelementptr inbounds float, float* %42, i64 %39
  %44 = ptrtoint float* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds float, float* %16, i64 %28
  store float* %48, float** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.27", %"class.std::__1::vector.27"* %0, i64 0, i32 0, i32 1
  %53 = bitcast float** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #12
  %55 = bitcast %"class.std::__1::vector.27"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #13
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.27"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #14
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.27"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #14
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #12
  %75 = bitcast i8* %74 to float*
  %76 = getelementptr inbounds %"class.std::__1::vector.27", %"class.std::__1::vector.27"* %0, i64 0, i32 0, i32 1
  %77 = bitcast float** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.27"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds float, float* %75, i64 %72
  store float* %79, float** %8, align 8
  %80 = bitcast float** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast float* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #13
  %86 = getelementptr inbounds float, float* %75, i64 %84
  %87 = ptrtoint float* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc11PaintShader8IsOpaqueEv(%"class.cc::PaintShader"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 4
  switch i8 %3, label %38 [
    i8 0, label %21
    i8 7, label %21
    i8 2, label %4
    i8 3, label %4
    i8 5, label %4
    i8 4, label %21
    i8 6, label %23
  ]

4:                                                ; preds = %1, %1, %1
  %5 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 6
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 3
  br i1 %7, label %21, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 22, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 22, i32 0, i32 1
  %12 = load i32*, i32** %11, align 8
  %13 = icmp eq i32* %10, %12
  br i1 %13, label %21, label %16

14:                                               ; preds = %16
  %15 = icmp eq i32* %20, %12
  br i1 %15, label %21, label %16

16:                                               ; preds = %8, %14
  %17 = phi i32* [ %20, %14 ], [ %10, %8 ]
  %18 = load i32, i32* %17, align 4
  %19 = icmp ugt i32 %18, -16777217
  %20 = getelementptr inbounds i32, i32* %17, i64 1
  br i1 %19, label %14, label %21

21:                                               ; preds = %16, %14, %8, %31, %35, %38, %1, %4, %1, %27, %23, %1
  %22 = phi i1 [ %41, %38 ], [ %37, %35 ], [ false, %1 ], [ false, %4 ], [ false, %1 ], [ false, %27 ], [ false, %23 ], [ false, %31 ], [ false, %1 ], [ true, %8 ], [ false, %16 ], [ true, %14 ]
  ret i1 %22

23:                                               ; preds = %1
  %24 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 6
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 3
  br i1 %26, label %21, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 7
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 3
  br i1 %30, label %21, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 25, i32 0
  %33 = load %class.SkImage*, %class.SkImage** %32, align 8
  %34 = icmp eq %class.SkImage* %33, null
  br i1 %34, label %21, label %35

35:                                               ; preds = %31
  %36 = tail call i32 @_ZNK7SkImage9alphaTypeEv(%class.SkImage* nonnull %33) #13
  %37 = icmp eq i32 %36, 1
  br label %21

38:                                               ; preds = %1
  %39 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 8
  %40 = load i32, i32* %39, align 4
  %41 = icmp ugt i32 %40, -16777217
  br label %21
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc11PaintShader7IsValidEv(%"class.cc::PaintShader"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 4
  switch i8 %3, label %43 [
    i8 0, label %44
    i8 1, label %44
    i8 5, label %4
    i8 2, label %16
    i8 3, label %16
    i8 4, label %16
    i8 6, label %44
    i8 7, label %38
    i8 8, label %42
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 16
  %6 = load float, float* %5, align 8
  %7 = tail call float @llvm.fabs.f32(float %6) #15
  %8 = fcmp ueq float %7, 0x7FF0000000000000
  br i1 %8, label %44, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 17
  %11 = load float, float* %10, align 4
  %12 = tail call float @llvm.fabs.f32(float %11) #15
  %13 = fcmp one float %12, 0x7FF0000000000000
  %14 = fcmp ult float %6, %11
  %15 = and i1 %14, %13
  br i1 %15, label %16, label %44

16:                                               ; preds = %9, %1, %1, %1
  %17 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 22
  %18 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 22, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::vector.20"* %17 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %20, %22
  %24 = ashr exact i64 %23, 2
  %25 = icmp ugt i64 %24, 1
  br i1 %25, label %26, label %44

26:                                               ; preds = %16
  %27 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 23, i32 0, i32 0
  %28 = load float*, float** %27, align 8
  %29 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 23, i32 0, i32 1
  %30 = load float*, float** %29, align 8
  %31 = icmp eq float* %28, %30
  br i1 %31, label %44, label %32

32:                                               ; preds = %26
  %33 = ptrtoint float* %28 to i64
  %34 = ptrtoint float* %30 to i64
  %35 = sub i64 %34, %33
  %36 = ashr exact i64 %35, 2
  %37 = icmp eq i64 %36, %24
  br label %44

38:                                               ; preds = %1
  %39 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 19, i32 0
  %40 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %39, align 8
  %41 = icmp ne %"class.cc::PaintOpBuffer"* %40, null
  br label %44

42:                                               ; preds = %1
  br label %44

43:                                               ; preds = %1
  br label %44

44:                                               ; preds = %4, %1, %16, %32, %26, %9, %1, %1, %43, %42, %38
  %45 = phi i1 [ false, %43 ], [ false, %42 ], [ %41, %38 ], [ true, %1 ], [ true, %1 ], [ false, %9 ], [ false, %4 ], [ false, %16 ], [ true, %26 ], [ %37, %32 ], [ true, %1 ]
  ret i1 %45
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc11PaintShadereqERKS0_(%"class.cc::PaintShader"*, %"class.cc::PaintShader"* dereferenceable(336)) local_unnamed_addr #2 align 2 {
  %3 = alloca %struct.SkSize, align 4
  %4 = alloca %class.SkMatrix, align 16
  %5 = alloca %class.SkMatrix, align 16
  %6 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 1
  %7 = load i8, i8* %6, align 4
  %8 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 1
  %9 = load i8, i8* %8, align 4
  %10 = icmp eq i8 %7, %9
  br i1 %10, label %11, label %220

11:                                               ; preds = %2
  %12 = or i8 %7, 1
  %13 = icmp eq i8 %12, 7
  %14 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %15 = load i8, i8* %14, align 4, !range !5
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0
  br label %21

19:                                               ; preds = %11
  %20 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #13
  br label %21

21:                                               ; preds = %19, %17
  %22 = phi %class.SkMatrix* [ %18, %17 ], [ %20, %19 ]
  %23 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %24 = load i8, i8* %23, align 4, !range !5
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0
  br label %30

28:                                               ; preds = %21
  %29 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #13
  br label %30

30:                                               ; preds = %28, %26
  %31 = phi %class.SkMatrix* [ %27, %26 ], [ %29, %28 ]
  br i1 %13, label %32, label %56

32:                                               ; preds = %30
  %33 = bitcast %struct.SkSize* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  %34 = getelementptr inbounds %struct.SkSize, %struct.SkSize* %3, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %34, align 4
  %35 = getelementptr inbounds %struct.SkSize, %struct.SkSize* %3, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %35, align 4
  %36 = bitcast %class.SkMatrix* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %36) #13
  %37 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 1
  %38 = bitcast %class.SkMatrix* %4 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %38, align 16
  %39 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 4
  %40 = bitcast float* %39 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %40, align 16
  %41 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %41, align 16
  store i32 16, i32* %37, align 4
  %42 = bitcast %class.SkMatrix* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %42) #13
  %43 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 1
  %44 = bitcast %class.SkMatrix* %5 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %44, align 16
  %45 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 4
  %46 = bitcast float* %45 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %46, align 16
  %47 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %47, align 16
  store i32 16, i32* %43, align 4
  %48 = call zeroext i1 @_ZNK8SkMatrix14decomposeScaleEP6SkSizePS_(%class.SkMatrix* %22, %struct.SkSize* nonnull %3, %class.SkMatrix* nonnull %4) #13
  %49 = call zeroext i1 @_ZNK8SkMatrix14decomposeScaleEP6SkSizePS_(%class.SkMatrix* %31, %struct.SkSize* nonnull %3, %class.SkMatrix* nonnull %5) #13
  %50 = xor i1 %48, %49
  %51 = xor i1 %48, true
  %52 = or i1 %50, %51
  br i1 %52, label %55, label %53

53:                                               ; preds = %32
  %54 = call zeroext i1 @_ZN2cc7PaintOp18AreSkMatricesEqualERK8SkMatrixS3_(%class.SkMatrix* nonnull dereferenceable(40) %4, %class.SkMatrix* nonnull dereferenceable(40) %5) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %42) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %36) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  br i1 %54, label %58, label %220

55:                                               ; preds = %32
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %42) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %36) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  br i1 %50, label %220, label %58

56:                                               ; preds = %30
  %57 = tail call zeroext i1 @_ZN2cc7PaintOp18AreSkMatricesEqualERK8SkMatrixS3_(%class.SkMatrix* dereferenceable(40) %22, %class.SkMatrix* dereferenceable(40) %31) #13
  br i1 %57, label %58, label %220

58:                                               ; preds = %55, %53, %56
  %59 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 8
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 8
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %60, %62
  br i1 %63, label %64, label %220

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 3
  %66 = load i32, i32* %65, align 8
  %67 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 3
  %68 = load i32, i32* %67, align 8
  %69 = icmp eq i32 %66, %68
  br i1 %69, label %70, label %220

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 6
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 6
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %72, %74
  br i1 %75, label %76, label %220

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 7
  %78 = load i32, i32* %77, align 8
  %79 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 7
  %80 = load i32, i32* %79, align 8
  %81 = icmp eq i32 %78, %80
  br i1 %81, label %82, label %220

82:                                               ; preds = %76
  br i1 %13, label %89, label %83

83:                                               ; preds = %82
  %84 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 9
  %85 = load i8, i8* %84, align 8
  %86 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 9
  %87 = load i8, i8* %86, align 8
  %88 = icmp eq i8 %85, %87
  br i1 %88, label %89, label %220

89:                                               ; preds = %83, %82
  %90 = load i8, i8* %6, align 4
  switch i8 %90, label %219 [
    i8 7, label %211
    i8 4, label %111
    i8 5, label %91
    i8 2, label %111
    i8 3, label %111
  ]

91:                                               ; preds = %89
  %92 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 16
  %93 = load float, float* %92, align 8
  %94 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 16
  %95 = load float, float* %94, align 8
  %96 = fcmp uno float %93, 0.000000e+00
  %97 = fcmp uno float %95, 0.000000e+00
  %98 = and i1 %96, %97
  %99 = fcmp oeq float %93, %95
  %100 = or i1 %99, %98
  br i1 %100, label %101, label %220

101:                                              ; preds = %91
  %102 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 17
  %103 = load float, float* %102, align 4
  %104 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 17
  %105 = load float, float* %104, align 4
  %106 = fcmp uno float %103, 0.000000e+00
  %107 = fcmp uno float %105, 0.000000e+00
  %108 = and i1 %106, %107
  %109 = fcmp oeq float %103, %105
  %110 = or i1 %109, %108
  br i1 %110, label %111, label %220

111:                                              ; preds = %89, %101, %89, %89
  %112 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 5
  %113 = load float, float* %112, align 8
  %114 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 5
  %115 = load float, float* %114, align 8
  %116 = fcmp uno float %113, 0.000000e+00
  %117 = fcmp uno float %115, 0.000000e+00
  %118 = and i1 %116, %117
  %119 = fcmp oeq float %113, %115
  %120 = or i1 %119, %118
  br i1 %120, label %121, label %220

121:                                              ; preds = %111
  %122 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 4
  %123 = load float, float* %122, align 4
  %124 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 4
  %125 = load float, float* %124, align 4
  %126 = fcmp uno float %123, 0.000000e+00
  %127 = fcmp uno float %125, 0.000000e+00
  %128 = and i1 %126, %127
  %129 = fcmp oeq float %123, %125
  %130 = or i1 %129, %128
  br i1 %130, label %131, label %220

131:                                              ; preds = %121
  %132 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 12
  %133 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 12
  %134 = call zeroext i1 @_ZN2cc7PaintOp16AreSkPointsEqualERK7SkPointS3_(%struct.SkPoint* dereferenceable(8) %132, %struct.SkPoint* dereferenceable(8) %133) #13
  br i1 %134, label %135, label %220

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 14
  %137 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 14
  %138 = call zeroext i1 @_ZN2cc7PaintOp16AreSkPointsEqualERK7SkPointS3_(%struct.SkPoint* dereferenceable(8) %136, %struct.SkPoint* dereferenceable(8) %137) #13
  br i1 %138, label %139, label %220

139:                                              ; preds = %135
  %140 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 15
  %141 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 15
  %142 = call zeroext i1 @_ZN2cc7PaintOp16AreSkPointsEqualERK7SkPointS3_(%struct.SkPoint* dereferenceable(8) %140, %struct.SkPoint* dereferenceable(8) %141) #13
  br i1 %142, label %143, label %220

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 22
  %145 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 22
  %146 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 22, i32 0, i32 1
  %147 = bitcast i32** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast %"class.std::__1::vector.20"* %144 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = sub i64 %148, %150
  %152 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 22, i32 0, i32 1
  %153 = bitcast i32** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"class.std::__1::vector.20"* %145 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = sub i64 %154, %156
  %158 = icmp eq i64 %151, %157
  %159 = inttoptr i64 %150 to i32*
  %160 = inttoptr i64 %148 to i32*
  br i1 %158, label %161, label %220

161:                                              ; preds = %143
  %162 = icmp eq i32* %159, %160
  br i1 %162, label %175, label %163

163:                                              ; preds = %161
  %164 = inttoptr i64 %156 to i32*
  br label %165

165:                                              ; preds = %171, %163
  %166 = phi i32* [ %173, %171 ], [ %164, %163 ]
  %167 = phi i32* [ %172, %171 ], [ %159, %163 ]
  %168 = load i32, i32* %167, align 4
  %169 = load i32, i32* %166, align 4
  %170 = icmp eq i32 %168, %169
  br i1 %170, label %171, label %220

171:                                              ; preds = %165
  %172 = getelementptr inbounds i32, i32* %167, i64 1
  %173 = getelementptr inbounds i32, i32* %166, i64 1
  %174 = icmp eq i32* %172, %160
  br i1 %174, label %175, label %165

175:                                              ; preds = %171, %161
  %176 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 23
  %177 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 23, i32 0, i32 1
  %178 = bitcast float** %177 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = bitcast %"class.std::__1::vector.27"* %176 to i64*
  %181 = load i64, i64* %180, align 8
  %182 = sub i64 %179, %181
  %183 = ashr exact i64 %182, 2
  %184 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 23
  %185 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 23, i32 0, i32 1
  %186 = bitcast float** %185 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = bitcast %"class.std::__1::vector.27"* %184 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = sub i64 %187, %189
  %191 = ashr exact i64 %190, 2
  %192 = icmp eq i64 %183, %191
  %193 = inttoptr i64 %181 to float*
  %194 = inttoptr i64 %189 to float*
  br i1 %192, label %195, label %220

195:                                              ; preds = %175
  %196 = icmp eq i64 %182, 0
  br i1 %196, label %219, label %199

197:                                              ; preds = %199
  %198 = icmp ult i64 %210, %183
  br i1 %198, label %199, label %219

199:                                              ; preds = %195, %197
  %200 = phi i64 [ %210, %197 ], [ 0, %195 ]
  %201 = getelementptr inbounds float, float* %193, i64 %200
  %202 = load float, float* %201, align 4
  %203 = getelementptr inbounds float, float* %194, i64 %200
  %204 = load float, float* %203, align 4
  %205 = fcmp uno float %202, 0.000000e+00
  %206 = fcmp uno float %204, 0.000000e+00
  %207 = and i1 %205, %206
  %208 = fcmp oeq float %202, %204
  %209 = or i1 %208, %207
  %210 = add nuw i64 %200, 1
  br i1 %209, label %197, label %220

211:                                              ; preds = %89
  %212 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %0, i64 0, i32 19, i32 0
  %213 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %212, align 8
  %214 = icmp ne %"class.cc::PaintOpBuffer"* %213, null
  %215 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %1, i64 0, i32 19, i32 0
  %216 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %215, align 8
  %217 = icmp ne %"class.cc::PaintOpBuffer"* %216, null
  %218 = xor i1 %214, %217
  br i1 %218, label %220, label %219

219:                                              ; preds = %197, %195, %211, %89
  br label %220

220:                                              ; preds = %165, %199, %55, %143, %53, %219, %56, %58, %64, %70, %76, %83, %91, %101, %111, %121, %131, %135, %139, %175, %211, %2
  %221 = phi i1 [ false, %2 ], [ true, %219 ], [ false, %56 ], [ false, %58 ], [ false, %64 ], [ false, %70 ], [ false, %76 ], [ false, %83 ], [ false, %91 ], [ false, %101 ], [ false, %111 ], [ false, %121 ], [ false, %131 ], [ false, %135 ], [ false, %139 ], [ false, %175 ], [ false, %211 ], [ false, %55 ], [ false, %53 ], [ false, %143 ], [ false, %199 ], [ false, %165 ]
  ret i1 %221
}

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #5

declare zeroext i1 @_ZN2cc7PaintOp16AreSkPointsEqualERK7SkPointS3_(%struct.SkPoint* dereferenceable(8), %struct.SkPoint* dereferenceable(8)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #2 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #13
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #9

declare void @_ZN17SkPictureRecorderC1Ev(%class.SkPictureRecorder*) unnamed_addr #5

declare %class.SkCanvas* @_ZN17SkPictureRecorder14beginRecordingERK6SkRectP12SkBBHFactory(%class.SkPictureRecorder*, %struct.SkRect* dereferenceable(16), %class.SkBBHFactory*) local_unnamed_addr #5

declare void @_ZN8SkCanvas9translateEff(%class.SkCanvas*, float, float) local_unnamed_addr #5

declare void @_ZN8SkCanvas5scaleEff(%class.SkCanvas*, float, float) local_unnamed_addr #5

declare void @_ZNK2cc13PaintOpBuffer8PlaybackEP8SkCanvasRKNS_14PlaybackParamsE(%"class.cc::PaintOpBuffer"*, %class.SkCanvas*, %"struct.cc::PlaybackParams"* dereferenceable(96)) local_unnamed_addr #5

declare void @_ZN2cc14PlaybackParamsC1EPNS_13ImageProviderE(%"struct.cc::PlaybackParams"*, %"class.cc::ImageProvider"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN2cc14PlaybackParamsD1Ev(%"struct.cc::PlaybackParams"*) unnamed_addr #6

declare void @_ZN17SkPictureRecorder24finishRecordingAsPictureEv(%class.sk_sp.34* sret, %class.SkPictureRecorder*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN17SkPictureRecorderD1Ev(%class.SkPictureRecorder*) unnamed_addr #6

declare i32 @_ZNK7SkImage9alphaTypeEv(%class.SkImage*) local_unnamed_addr #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

declare zeroext i1 @_ZN2cc7PaintOp18AreSkMatricesEqualERK8SkMatrixS3_(%class.SkMatrix* dereferenceable(40), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #5

declare zeroext i1 @_ZNK8SkMatrix14decomposeScaleEP6SkSizePS_(%class.SkMatrix*, %struct.SkSize*, %class.SkMatrix*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }
attributes #15 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN2cc12_GLOBAL__N_111ToSkPictureE5sk_spINS_13PaintOpBufferEERK6SkRectPKN3gfx5SizeFEPNS_13ImageProviderE: argument 0"}
!4 = distinct !{!4, !"_ZN2cc12_GLOBAL__N_111ToSkPictureE5sk_spINS_13PaintOpBufferEERK6SkRectPKN3gfx5SizeFEPNS_13ImageProviderE"}
!5 = !{i8 0, i8 2}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_Z9sk_ref_spIN2cc11PaintShaderEE5sk_spIT_EPKS3_: argument 0"}
!8 = distinct !{!8, !"_Z9sk_ref_spIN2cc11PaintShaderEE5sk_spIT_EPKS3_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK2cc11PaintShader14GetLocalMatrixEv: argument 0"}
!11 = distinct !{!11, !"_ZNK2cc11PaintShader14GetLocalMatrixEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK2cc11PaintShader14GetLocalMatrixEv: argument 0"}
!14 = distinct !{!14, !"_ZNK2cc11PaintShader14GetLocalMatrixEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_Z9sk_ref_spIN2cc13PaintOpBufferEE5sk_spIT_EPKS3_: argument 0"}
!17 = distinct !{!17, !"_Z9sk_ref_spIN2cc13PaintOpBufferEE5sk_spIT_EPKS3_"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN2cc11PaintShader15MakePaintRecordE5sk_spINS_13PaintOpBufferEERK6SkRect10SkTileModeS7_PK8SkMatrixNS0_15ScalingBehaviorE: argument 0"}
!20 = distinct !{!20, !"_ZN2cc11PaintShader15MakePaintRecordE5sk_spINS_13PaintOpBufferEERK6SkRect10SkTileModeS7_PK8SkMatrixNS0_15ScalingBehaviorE"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNK2cc11PaintShader14GetLocalMatrixEv: argument 0"}
!23 = distinct !{!23, !"_ZNK2cc11PaintShader14GetLocalMatrixEv"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNK2cc11PaintShader14GetLocalMatrixEv: argument 0"}
!26 = distinct !{!26, !"_ZNK2cc11PaintShader14GetLocalMatrixEv"}
!27 = !{!"branch_weights", i32 1, i32 2000}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_Z9sk_ref_spI7SkImageE5sk_spIT_EPS2_: argument 0"}
!30 = distinct !{!30, !"_Z9sk_ref_spI7SkImageE5sk_spIT_EPS2_"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZN2cc11PaintShader9MakeImageERKNS_10PaintImageE10SkTileModeS4_PK8SkMatrixPK6SkRect: argument 0"}
!33 = distinct !{!33, !"_ZN2cc11PaintShader9MakeImageERKNS_10PaintImageE10SkTileModeS4_PK8SkMatrixPK6SkRect"}
