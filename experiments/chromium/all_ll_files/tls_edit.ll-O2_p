; ModuleID = '../../native_client/src/tools/tls_edit/tls_edit.c'
source_filename = "../../native_client/src/tools/tls_edit/tls_edit.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.cpu_feature_struct_X86 = type { [39 x i8] }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.Elf32_Phdr = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.Elf64_Phdr = type { i32, i32, i64, i64, i64, i64, i64, i64 }

@.str = private unnamed_addr constant [10 x i8] c"--verbose\00", align 1
@g_verbose = internal unnamed_addr global i1 false, align 4
@stderr = external local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.1 = private unnamed_addr constant [19 x i8] c"Invalid option: %s\00", align 1
@.str.2 = private unnamed_addr constant [36 x i8] c"Usage: %s [OPTIONS] INFILE OUTFILE\0A\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"\0AOPTIONS:\0A\00", align 1
@.str.4 = private unnamed_addr constant [45 x i8] c"\09--verbose: Display verbose output messages\0A\00", align 1
@g_contents_size = internal unnamed_addr global i64 0, align 8
@.str.5 = private unnamed_addr constant [33 x i8] c"%s: too short to be an ELF file\0A\00", align 1
@g_contents = internal unnamed_addr global i8* null, align 8
@.str.6 = private unnamed_addr constant [5 x i8] c"\7FELF\00", align 1
@.str.7 = private unnamed_addr constant [21 x i8] c"%s: not an ELF file\0A\00", align 1
@.str.8 = private unnamed_addr constant [39 x i8] c"%s: Could not process 32 bit ELF file\0A\00", align 1
@.str.9 = private unnamed_addr constant [39 x i8] c"%s: Could not process 64 bit ELF file\0A\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"%s: Invalid ELF file!\0A\00", align 1
@g_errors = internal unnamed_addr global i32 0, align 4
@.str.11 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.12 = private unnamed_addr constant [15 x i8] c"fopen: %s: %s\0A\00", align 1
@.str.13 = private unnamed_addr constant [15 x i8] c"fstat: %s: %s\0A\00", align 1
@.str.14 = private unnamed_addr constant [30 x i8] c"Cannot allocate %u bytes: %s\0A\00", align 1
@.str.15 = private unnamed_addr constant [15 x i8] c"fread: %s: %s\0A\00", align 1
@.str.16 = private unnamed_addr constant [26 x i8] c"fread: %s: premature EOF\0A\00", align 1
@.str.17 = private unnamed_addr constant [45 x i8] c"fread: %s: unexpected read count - %u != %u\0A\00", align 1
@.str.18 = private unnamed_addr constant [19 x i8] c"%s: bogus e_phoff\0A\00", align 1
@.str.20 = private unnamed_addr constant [27 x i8] c"%s: wrong e_phentsize: %u\0A\00", align 1
@.str.21 = private unnamed_addr constant [25 x i8] c"%s: bogus elf32 e_phnum\0A\00", align 1
@.str.22 = private unnamed_addr constant [29 x i8] c"%s: not an ELFDATA2LSB file\0A\00", align 1
@.str.23 = private unnamed_addr constant [45 x i8] c"%s: Could not find executable load segment!\0A\00", align 1
@.str.24 = private unnamed_addr constant [51 x i8] c"%s: Program header %d has invalid offset or size!\0A\00", align 1
@g_code_addr = internal unnamed_addr global i32 0, align 4
@g_code_start = internal unnamed_addr global i8* null, align 8
@.str.25 = private unnamed_addr constant [50 x i8] c"%s: x86-64 ELF detected, no instructions changed\0A\00", align 1
@.str.26 = private unnamed_addr constant [30 x i8] c"%s: Unsupported e_machine %d\0A\00", align 1
@g_changes = internal unnamed_addr global i32 0, align 4
@.str.27 = private unnamed_addr constant [30 x i8] c"%s: Found no changes to make\0A\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"%s: %d instructions changed\0A\00", align 1
@.str.29 = private unnamed_addr constant [33 x i8] c"Roadblock not at start of bundle\00", align 1
@.str.30 = private unnamed_addr constant [9 x i8] c"%#x: %s\0A\00", align 1
@kFullCPUIDFeatures = external constant %struct.cpu_feature_struct_X86, align 1
@.str.31 = private unnamed_addr constant [18 x i8] c"Validation failed\00", align 1
@.str.32 = private unnamed_addr constant [21 x i8] c"Unexpected GS prefix\00", align 1
@.str.33 = private unnamed_addr constant [58 x i8] c"%#x: %%gs address already pointing to correct offset (4)\0A\00", align 1
@.str.34 = private unnamed_addr constant [23 x i8] c"Unexpected %gs address\00", align 1
@.str.36 = private unnamed_addr constant [25 x i8] c"%s: bogus elf64 e_phnum\0A\00", align 1
@.str.37 = private unnamed_addr constant [4 x i8] c"wb+\00", align 1
@.str.38 = private unnamed_addr constant [16 x i8] c"fwrite: %s: %s\0A\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @main(i32, i8** nocapture readonly) local_unnamed_addr #0 {
  %3 = alloca %struct.stat, align 8
  %4 = icmp sgt i32 %0, 1
  br i1 %4, label %5, label %26

5:                                                ; preds = %2
  %6 = zext i32 %0 to i64
  br label %7

7:                                                ; preds = %17, %5
  %8 = phi i64 [ 1, %5 ], [ %18, %17 ]
  %9 = phi i32 [ 1, %5 ], [ %19, %17 ]
  %10 = getelementptr inbounds i8*, i8** %1, i64 %8
  %11 = load i8*, i8** %10, align 8
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %12, 45
  br i1 %13, label %14, label %24

14:                                               ; preds = %7
  %15 = tail call i32 @strcmp(i8* %11, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0)) #9
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %14
  store i1 true, i1* @g_verbose, align 4
  %18 = add nuw nsw i64 %8, 1
  %19 = add nuw nsw i32 %9, 1
  %20 = icmp eq i64 %18, %6
  br i1 %20, label %26, label %7

21:                                               ; preds = %14
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %23 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %22, i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0), i8* %11) #10
  br label %336

24:                                               ; preds = %7
  %25 = trunc i64 %8 to i32
  br label %26

26:                                               ; preds = %17, %24, %2
  %27 = phi i32 [ 1, %2 ], [ %25, %24 ], [ %19, %17 ]
  %28 = sub nsw i32 %0, %27
  %29 = icmp eq i32 %28, 2
  br i1 %29, label %38, label %30

30:                                               ; preds = %26
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %32 = load i8*, i8** %1, align 8
  %33 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %31, i32 1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2, i64 0, i64 0), i8* %32) #10
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %35 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %34, i32 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0)) #10
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %37 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %36, i32 1, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4, i64 0, i64 0)) #10
  br label %336

38:                                               ; preds = %26
  %39 = zext i32 %27 to i64
  %40 = getelementptr inbounds i8*, i8** %1, i64 %39
  %41 = load i8*, i8** %40, align 8
  %42 = add nuw nsw i32 %27, 1
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds i8*, i8** %1, i64 %43
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast %struct.stat* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %46) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 144, i1 false) #10
  %47 = tail call %struct._IO_FILE* @fopen64(i8* %41, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0)) #10
  %48 = icmp eq %struct._IO_FILE* %47, null
  br i1 %48, label %49, label %55

49:                                               ; preds = %38
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %51 = tail call i32* @__errno_location() #11
  %52 = load i32, i32* %51, align 4
  %53 = tail call i8* @strerror(i32 %52) #10
  %54 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %50, i32 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i64 0, i64 0), i8* %41, i8* %53) #10
  tail call void @exit(i32 1) #12
  unreachable

55:                                               ; preds = %38
  %56 = tail call i32 @fileno(%struct._IO_FILE* nonnull %47) #10
  %57 = bitcast %struct.stat* %3 to %struct.stat64*
  %58 = call i32 @__fxstat64(i32 1, i32 %56, %struct.stat64* nonnull %57) #10
  %59 = icmp slt i32 %58, 0
  br i1 %59, label %60, label %66

60:                                               ; preds = %55
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %62 = tail call i32* @__errno_location() #11
  %63 = load i32, i32* %62, align 4
  %64 = call i8* @strerror(i32 %63) #10
  %65 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %61, i32 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i64 0, i64 0), i8* %41, i8* %64) #10
  call void @exit(i32 1) #12
  unreachable

66:                                               ; preds = %55
  %67 = getelementptr inbounds %struct.stat, %struct.stat* %3, i64 0, i32 8
  %68 = load i64, i64* %67, align 8
  store i64 %68, i64* @g_contents_size, align 8
  %69 = call noalias i8* @malloc(i64 %68) #10
  store i8* %69, i8** @g_contents, align 8
  %70 = icmp eq i8* %69, null
  br i1 %70, label %71, label %78

71:                                               ; preds = %66
  %72 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %73 = trunc i64 %68 to i32
  %74 = tail call i32* @__errno_location() #11
  %75 = load i32, i32* %74, align 4
  %76 = call i8* @strerror(i32 %75) #10
  %77 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %72, i32 1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14, i64 0, i64 0), i32 %73, i8* %76) #10
  call void @exit(i32 1) #12
  unreachable

78:                                               ; preds = %66
  %79 = call i64 @fread(i8* nonnull %69, i64 1, i64 %68, %struct._IO_FILE* nonnull %47) #10
  %80 = load i64, i64* @g_contents_size, align 8
  %81 = icmp eq i64 %79, %80
  br i1 %81, label %103, label %82

82:                                               ; preds = %78
  %83 = call i32 @ferror(%struct._IO_FILE* nonnull %47) #10
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %91, label %85

85:                                               ; preds = %82
  %86 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %87 = tail call i32* @__errno_location() #11
  %88 = load i32, i32* %87, align 4
  %89 = call i8* @strerror(i32 %88) #10
  %90 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %86, i32 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i64 0, i64 0), i8* %41, i8* %89) #10
  br label %102

91:                                               ; preds = %82
  %92 = call i32 @feof(%struct._IO_FILE* nonnull %47) #10
  %93 = icmp eq i32 %92, 0
  %94 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  br i1 %93, label %97, label %95

95:                                               ; preds = %91
  %96 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %94, i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i64 0, i64 0), i8* %41) #10
  br label %102

97:                                               ; preds = %91
  %98 = trunc i64 %79 to i32
  %99 = load i64, i64* @g_contents_size, align 8
  %100 = trunc i64 %99 to i32
  %101 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %94, i32 1, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.17, i64 0, i64 0), i8* %41, i32 %98, i32 %100) #10
  br label %102

102:                                              ; preds = %97, %95, %85
  call void @exit(i32 1) #12
  unreachable

103:                                              ; preds = %78
  %104 = call i32 @fclose(%struct._IO_FILE* nonnull %47) #10
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %46) #10
  %105 = load i64, i64* @g_contents_size, align 8
  %106 = icmp ult i64 %105, 4
  br i1 %106, label %107, label %110

107:                                              ; preds = %103
  %108 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %109 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %108, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i64 0, i64 0), i8* %41) #10
  br label %336

110:                                              ; preds = %103
  %111 = load i8*, i8** @g_contents, align 8
  %112 = call i32 @bcmp(i8* %111, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i64 4)
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %117, label %114

114:                                              ; preds = %110
  %115 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %116 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %115, i32 1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i64 0, i64 0), i8* %41) #10
  br label %336

117:                                              ; preds = %110
  %118 = icmp ugt i64 %105, 51
  br i1 %118, label %119, label %307

119:                                              ; preds = %117
  %120 = getelementptr inbounds i8, i8* %111, i64 4
  %121 = load i8, i8* %120, align 4
  %122 = icmp eq i8 %121, 1
  br i1 %122, label %123, label %214

123:                                              ; preds = %119
  %124 = getelementptr inbounds i8, i8* %111, i64 28
  %125 = bitcast i8* %124 to i32*
  %126 = load i32, i32* %125, align 4
  %127 = zext i32 %126 to i64
  %128 = icmp ult i64 %105, %127
  br i1 %128, label %129, label %132

129:                                              ; preds = %123
  %130 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %131 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %130, i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.18, i64 0, i64 0), i8* %41) #10
  br label %211

132:                                              ; preds = %123
  %133 = getelementptr inbounds i8, i8* %111, i64 42
  %134 = bitcast i8* %133 to i16*
  %135 = load i16, i16* %134, align 2
  %136 = icmp eq i16 %135, 32
  br i1 %136, label %141, label %137

137:                                              ; preds = %132
  %138 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %139 = zext i16 %135 to i32
  %140 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %138, i32 1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.20, i64 0, i64 0), i8* %41, i32 %139) #10
  br label %211

141:                                              ; preds = %132
  %142 = sub i64 %105, %127
  %143 = getelementptr inbounds i8, i8* %111, i64 44
  %144 = bitcast i8* %143 to i16*
  %145 = load i16, i16* %144, align 4
  %146 = zext i16 %145 to i64
  %147 = shl nuw nsw i64 %146, 5
  %148 = icmp ult i64 %142, %147
  br i1 %148, label %149, label %152

149:                                              ; preds = %141
  %150 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %151 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %150, i32 1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.21, i64 0, i64 0), i8* %41) #10
  br label %211

152:                                              ; preds = %141
  %153 = getelementptr inbounds i8, i8* %111, i64 5
  %154 = load i8, i8* %153, align 1
  %155 = icmp eq i8 %154, 1
  br i1 %155, label %159, label %156

156:                                              ; preds = %152
  %157 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %158 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %157, i32 1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22, i64 0, i64 0), i8* %41) #10
  br label %211

159:                                              ; preds = %152
  %160 = getelementptr inbounds i8, i8* %111, i64 %127
  %161 = bitcast i8* %160 to %struct.Elf32_Phdr*
  %162 = zext i16 %145 to i32
  %163 = icmp eq i16 %145, 0
  br i1 %163, label %181, label %164

164:                                              ; preds = %159, %175
  %165 = phi i64 [ %176, %175 ], [ 0, %159 ]
  %166 = phi i32 [ %177, %175 ], [ 0, %159 ]
  %167 = getelementptr inbounds %struct.Elf32_Phdr, %struct.Elf32_Phdr* %161, i64 %165, i32 0
  %168 = load i32, i32* %167, align 4
  %169 = icmp eq i32 %168, 1
  br i1 %169, label %170, label %175

170:                                              ; preds = %164
  %171 = getelementptr inbounds %struct.Elf32_Phdr, %struct.Elf32_Phdr* %161, i64 %165, i32 6
  %172 = load i32, i32* %171, align 4
  %173 = and i32 %172, 1
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %179

175:                                              ; preds = %170, %164
  %176 = add nuw nsw i64 %165, 1
  %177 = add nuw nsw i32 %166, 1
  %178 = icmp eq i64 %176, %146
  br i1 %178, label %181, label %164

179:                                              ; preds = %170
  %180 = trunc i64 %165 to i32
  br label %181

181:                                              ; preds = %175, %179, %159
  %182 = phi i32 [ 0, %159 ], [ %180, %179 ], [ %177, %175 ]
  %183 = icmp eq i32 %182, %162
  br i1 %183, label %184, label %187

184:                                              ; preds = %181
  %185 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %186 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %185, i32 1, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.23, i64 0, i64 0), i8* %41) #10
  br label %211

187:                                              ; preds = %181
  %188 = zext i32 %182 to i64
  %189 = getelementptr inbounds %struct.Elf32_Phdr, %struct.Elf32_Phdr* %161, i64 %188, i32 1
  %190 = load i32, i32* %189, align 4
  %191 = zext i32 %190 to i64
  %192 = icmp ult i64 %105, %191
  br i1 %192, label %199, label %193

193:                                              ; preds = %187
  %194 = sub i64 %105, %191
  %195 = getelementptr inbounds %struct.Elf32_Phdr, %struct.Elf32_Phdr* %161, i64 %188, i32 4
  %196 = load i32, i32* %195, align 4
  %197 = zext i32 %196 to i64
  %198 = icmp ult i64 %194, %197
  br i1 %198, label %199, label %202

199:                                              ; preds = %193, %187
  %200 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %201 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %200, i32 1, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.24, i64 0, i64 0), i8* %41, i32 %182) #10
  br label %211

202:                                              ; preds = %193
  %203 = getelementptr inbounds %struct.Elf32_Phdr, %struct.Elf32_Phdr* %161, i64 %188, i32 2
  %204 = load i32, i32* %203, align 4
  %205 = getelementptr inbounds i8, i8* %111, i64 %191
  %206 = getelementptr inbounds i8, i8* %111, i64 18
  %207 = bitcast i8* %206 to i16*
  %208 = load i16, i16* %207, align 2
  %209 = call fastcc i32 @EditTLSCode(i8* %41, i32 %204, i8* %205, i64 %197, i16 zeroext %208) #10
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %310

211:                                              ; preds = %199, %184, %156, %149, %137, %129, %202
  %212 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %213 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %212, i32 1, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8, i64 0, i64 0), i8* %41) #10
  br label %336

214:                                              ; preds = %119
  %215 = icmp ugt i64 %105, 63
  %216 = icmp eq i8 %121, 2
  %217 = and i1 %215, %216
  br i1 %217, label %218, label %307

218:                                              ; preds = %214
  %219 = getelementptr inbounds i8, i8* %111, i64 32
  %220 = bitcast i8* %219 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = icmp ult i64 %105, %221
  br i1 %222, label %223, label %226

223:                                              ; preds = %218
  %224 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %225 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %224, i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.18, i64 0, i64 0), i8* %41) #10
  br label %304

226:                                              ; preds = %218
  %227 = getelementptr inbounds i8, i8* %111, i64 54
  %228 = bitcast i8* %227 to i16*
  %229 = load i16, i16* %228, align 2
  %230 = icmp eq i16 %229, 56
  br i1 %230, label %235, label %231

231:                                              ; preds = %226
  %232 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %233 = zext i16 %229 to i32
  %234 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %232, i32 1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.20, i64 0, i64 0), i8* %41, i32 %233) #10
  br label %304

235:                                              ; preds = %226
  %236 = sub i64 %105, %221
  %237 = getelementptr inbounds i8, i8* %111, i64 56
  %238 = bitcast i8* %237 to i16*
  %239 = load i16, i16* %238, align 8
  %240 = zext i16 %239 to i64
  %241 = mul nuw nsw i64 %240, 56
  %242 = icmp ult i64 %236, %241
  br i1 %242, label %243, label %246

243:                                              ; preds = %235
  %244 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %245 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %244, i32 1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.36, i64 0, i64 0), i8* %41) #10
  br label %304

246:                                              ; preds = %235
  %247 = getelementptr inbounds i8, i8* %111, i64 5
  %248 = load i8, i8* %247, align 1
  %249 = icmp eq i8 %248, 1
  br i1 %249, label %253, label %250

250:                                              ; preds = %246
  %251 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %252 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %251, i32 1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22, i64 0, i64 0), i8* %41) #10
  br label %304

253:                                              ; preds = %246
  %254 = getelementptr inbounds i8, i8* %111, i64 %221
  %255 = bitcast i8* %254 to %struct.Elf64_Phdr*
  %256 = zext i16 %239 to i32
  %257 = icmp eq i16 %239, 0
  br i1 %257, label %275, label %258

258:                                              ; preds = %253, %269
  %259 = phi i64 [ %270, %269 ], [ 0, %253 ]
  %260 = phi i32 [ %271, %269 ], [ 0, %253 ]
  %261 = getelementptr inbounds %struct.Elf64_Phdr, %struct.Elf64_Phdr* %255, i64 %259, i32 0
  %262 = load i32, i32* %261, align 8
  %263 = icmp eq i32 %262, 1
  br i1 %263, label %264, label %269

264:                                              ; preds = %258
  %265 = getelementptr inbounds %struct.Elf64_Phdr, %struct.Elf64_Phdr* %255, i64 %259, i32 1
  %266 = load i32, i32* %265, align 4
  %267 = and i32 %266, 1
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %269, label %273

269:                                              ; preds = %264, %258
  %270 = add nuw nsw i64 %259, 1
  %271 = add nuw nsw i32 %260, 1
  %272 = icmp eq i64 %270, %240
  br i1 %272, label %275, label %258

273:                                              ; preds = %264
  %274 = trunc i64 %259 to i32
  br label %275

275:                                              ; preds = %269, %273, %253
  %276 = phi i32 [ 0, %253 ], [ %274, %273 ], [ %271, %269 ]
  %277 = icmp eq i32 %276, %256
  br i1 %277, label %278, label %281

278:                                              ; preds = %275
  %279 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %280 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %279, i32 1, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.23, i64 0, i64 0), i8* %41) #10
  br label %304

281:                                              ; preds = %275
  %282 = zext i32 %276 to i64
  %283 = getelementptr inbounds %struct.Elf64_Phdr, %struct.Elf64_Phdr* %255, i64 %282, i32 2
  %284 = load i64, i64* %283, align 8
  %285 = icmp ult i64 %105, %284
  br i1 %285, label %291, label %286

286:                                              ; preds = %281
  %287 = sub i64 %105, %284
  %288 = getelementptr inbounds %struct.Elf64_Phdr, %struct.Elf64_Phdr* %255, i64 %282, i32 5
  %289 = load i64, i64* %288, align 8
  %290 = icmp ult i64 %287, %289
  br i1 %290, label %291, label %294

291:                                              ; preds = %286, %281
  %292 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %293 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %292, i32 1, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.24, i64 0, i64 0), i8* %41, i32 %276) #10
  br label %304

294:                                              ; preds = %286
  %295 = getelementptr inbounds %struct.Elf64_Phdr, %struct.Elf64_Phdr* %255, i64 %282, i32 3
  %296 = load i64, i64* %295, align 8
  %297 = trunc i64 %296 to i32
  %298 = getelementptr inbounds i8, i8* %111, i64 %284
  %299 = getelementptr inbounds i8, i8* %111, i64 18
  %300 = bitcast i8* %299 to i16*
  %301 = load i16, i16* %300, align 2
  %302 = call fastcc i32 @EditTLSCode(i8* %41, i32 %297, i8* %298, i64 %289, i16 zeroext %301) #10
  %303 = icmp eq i32 %302, 0
  br i1 %303, label %304, label %310

304:                                              ; preds = %291, %278, %250, %243, %231, %223, %294
  %305 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %306 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %305, i32 1, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.9, i64 0, i64 0), i8* %41) #10
  br label %336

307:                                              ; preds = %117, %214
  %308 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %309 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %308, i32 1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i8* %41) #10
  br label %336

310:                                              ; preds = %202, %294
  %311 = load i32, i32* @g_errors, align 4
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %313, label %336

313:                                              ; preds = %310
  %314 = call %struct._IO_FILE* @fopen64(i8* %45, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i64 0, i64 0)) #10
  %315 = icmp eq %struct._IO_FILE* %314, null
  br i1 %315, label %316, label %322

316:                                              ; preds = %313
  %317 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %318 = tail call i32* @__errno_location() #11
  %319 = load i32, i32* %318, align 4
  %320 = call i8* @strerror(i32 %319) #10
  %321 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %317, i32 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i64 0, i64 0), i8* %45, i8* %320) #10
  call void @exit(i32 1) #12
  unreachable

322:                                              ; preds = %313
  %323 = load i8*, i8** @g_contents, align 8
  %324 = load i64, i64* @g_contents_size, align 8
  %325 = call i64 @fwrite(i8* %323, i64 1, i64 %324, %struct._IO_FILE* nonnull %314) #10
  %326 = load i64, i64* @g_contents_size, align 8
  %327 = icmp eq i64 %325, %326
  br i1 %327, label %334, label %328

328:                                              ; preds = %322
  %329 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %330 = tail call i32* @__errno_location() #11
  %331 = load i32, i32* %330, align 4
  %332 = call i8* @strerror(i32 %331) #10
  %333 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %329, i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i64 0, i64 0), i8* %45, i8* %332) #10
  call void @exit(i32 1) #12
  unreachable

334:                                              ; preds = %322
  %335 = call i32 @fclose(%struct._IO_FILE* nonnull %314) #10
  br label %336

336:                                              ; preds = %310, %334, %307, %304, %211, %114, %107, %30, %21
  %337 = phi i32 [ 1, %30 ], [ 1, %107 ], [ 1, %114 ], [ 0, %334 ], [ 1, %211 ], [ 1, %304 ], [ 1, %307 ], [ 1, %21 ], [ 1, %310 ]
  ret i32 %337
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #2

declare i32 @__fprintf_chk(%struct._IO_FILE*, i32, i8*, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree nounwind
declare noalias %struct._IO_FILE* @fopen64(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #4

; Function Attrs: nounwind
declare i8* @strerror(i32) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @exit(i32) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare i32 @fileno(%struct._IO_FILE* nocapture) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare i64 @fread(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i32 @ferror(%struct._IO_FILE* nocapture) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @feof(%struct._IO_FILE* nocapture) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare i32 @fclose(%struct._IO_FILE* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @EditTLSCode(i8*, i32, i8*, i64, i16 zeroext) unnamed_addr #0 {
  store i32 %1, i32* @g_code_addr, align 4
  store i8* %2, i8** @g_code_start, align 8
  switch i16 %4, label %81 [
    i16 40, label %6
    i16 3, label %45
    i16 62, label %59
    i16 8, label %63
  ]

6:                                                ; preds = %5
  %7 = getelementptr inbounds i8, i8* %2, i64 %3
  %8 = bitcast i8* %7 to i32*
  %9 = icmp sgt i64 %3, 0
  br i1 %9, label %10, label %85

10:                                               ; preds = %6
  %11 = bitcast i8* %2 to i32*
  %12 = ptrtoint i8* %2 to i64
  br label %13

13:                                               ; preds = %41, %10
  %14 = phi i32* [ %11, %10 ], [ %43, %41 ]
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, -517620112
  br i1 %16, label %17, label %34

17:                                               ; preds = %13
  %18 = ptrtoint i32* %14 to i64
  %19 = sub i64 %18, %12
  %20 = and i64 %19, 12
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %32, label %22

22:                                               ; preds = %17
  %23 = load i64, i64* bitcast (i8** @g_code_start to i64*), align 8
  %24 = sub i64 %18, %23
  %25 = trunc i64 %24 to i32
  %26 = load i32, i32* @g_code_addr, align 4
  %27 = add i32 %26, %25
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %29 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %28, i32 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i64 0, i64 0), i32 %27, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.29, i64 0, i64 0)) #10
  %30 = load i32, i32* @g_errors, align 4
  %31 = add nsw i32 %30, 1
  store i32 %31, i32* @g_errors, align 4
  br label %41

32:                                               ; preds = %17
  %33 = getelementptr inbounds i32, i32* %14, i64 3
  br label %41

34:                                               ; preds = %13
  %35 = and i32 %15, 268374015
  %36 = icmp eq i32 %35, 93913088
  br i1 %36, label %37, label %41

37:                                               ; preds = %34
  %38 = or i32 %15, 4
  store i32 %38, i32* %14, align 4
  %39 = load i32, i32* @g_changes, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* @g_changes, align 4
  br label %41

41:                                               ; preds = %37, %34, %32, %22
  %42 = phi i32* [ %14, %22 ], [ %33, %32 ], [ %14, %37 ], [ %14, %34 ]
  %43 = getelementptr inbounds i32, i32* %42, i64 1
  %44 = icmp ult i32* %43, %8
  br i1 %44, label %13, label %85

45:                                               ; preds = %5
  %46 = tail call i32 @ValidateChunkIA32(i8* %2, i64 %3, i32 256, %struct.cpu_feature_struct_X86* nonnull @kFullCPUIDFeatures, i32 (i8*, i8*, i32, i8*)* nonnull @ConsiderOneInsn, i8* null) #10
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %85

48:                                               ; preds = %45
  %49 = load i64, i64* bitcast (i8** @g_code_start to i64*), align 8
  %50 = ptrtoint i8* %2 to i64
  %51 = sub i64 %50, %49
  %52 = trunc i64 %51 to i32
  %53 = load i32, i32* @g_code_addr, align 4
  %54 = add i32 %53, %52
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %56 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %55, i32 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i64 0, i64 0), i32 %54, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.31, i64 0, i64 0)) #10
  %57 = load i32, i32* @g_errors, align 4
  %58 = add nsw i32 %57, 1
  store i32 %58, i32* @g_errors, align 4
  br label %85

59:                                               ; preds = %5
  %60 = load i1, i1* @g_verbose, align 4
  br i1 %60, label %61, label %94

61:                                               ; preds = %59
  %62 = tail call i32 (i32, i8*, ...) @__printf_chk(i32 1, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.25, i64 0, i64 0), i8* %0) #10
  br label %94

63:                                               ; preds = %5
  %64 = getelementptr inbounds i8, i8* %2, i64 %3
  %65 = bitcast i8* %64 to i32*
  %66 = icmp sgt i64 %3, 0
  br i1 %66, label %67, label %94

67:                                               ; preds = %63
  %68 = bitcast i8* %2 to i32*
  br label %69

69:                                               ; preds = %78, %67
  %70 = phi i32* [ %79, %78 ], [ %68, %67 ]
  %71 = load i32, i32* %70, align 4
  %72 = and i32 %71, -2031617
  %73 = icmp eq i32 %72, -1895825408
  br i1 %73, label %74, label %78

74:                                               ; preds = %69
  %75 = or i32 %71, 4
  store i32 %75, i32* %70, align 4
  %76 = load i32, i32* @g_changes, align 4
  %77 = add nsw i32 %76, 1
  store i32 %77, i32* @g_changes, align 4
  br label %78

78:                                               ; preds = %74, %69
  %79 = getelementptr inbounds i32, i32* %70, i64 1
  %80 = icmp ult i32* %79, %65
  br i1 %80, label %69, label %94

81:                                               ; preds = %5
  %82 = zext i16 %4 to i32
  %83 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %84 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %83, i32 1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.26, i64 0, i64 0), i8* %0, i32 %82) #10
  br label %94

85:                                               ; preds = %41, %48, %45, %6
  %86 = load i1, i1* @g_verbose, align 4
  br i1 %86, label %87, label %94

87:                                               ; preds = %85
  %88 = load i32, i32* @g_changes, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %92

90:                                               ; preds = %87
  %91 = tail call i32 (i32, i8*, ...) @__printf_chk(i32 1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.27, i64 0, i64 0), i8* %0) #10
  br label %94

92:                                               ; preds = %87
  %93 = tail call i32 (i32, i8*, ...) @__printf_chk(i32 1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i8* %0, i32 %88) #10
  br label %94

94:                                               ; preds = %78, %63, %85, %92, %90, %59, %61, %81
  %95 = phi i32 [ 0, %81 ], [ 1, %61 ], [ 1, %59 ], [ 1, %90 ], [ 1, %92 ], [ 1, %85 ], [ 1, %63 ], [ 1, %78 ]
  ret i32 %95
}

declare i32 @__printf_chk(i32, i8*, ...) local_unnamed_addr #3

declare i32 @ValidateChunkIA32(i8*, i64, i32, %struct.cpu_feature_struct_X86*, i32 (i8*, i8*, i32, i8*)*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal i32 @ConsiderOneInsn(i8*, i8*, i32, i8* nocapture readnone) #0 {
  %5 = load i8, i8* %0, align 1
  %6 = icmp eq i8 %5, 101
  br i1 %6, label %7, label %68

7:                                                ; preds = %4
  %8 = ptrtoint i8* %1 to i64
  %9 = ptrtoint i8* %0 to i64
  %10 = sub i64 %8, %9
  %11 = icmp slt i64 %10, 6
  br i1 %11, label %12, label %22

12:                                               ; preds = %7
  %13 = load i64, i64* bitcast (i8** @g_code_start to i64*), align 8
  %14 = sub i64 %9, %13
  %15 = trunc i64 %14 to i32
  %16 = load i32, i32* @g_code_addr, align 4
  %17 = add i32 %16, %15
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %19 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %18, i32 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i64 0, i64 0), i32 %17, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.32, i64 0, i64 0)) #10
  %20 = load i32, i32* @g_errors, align 4
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* @g_errors, align 4
  br label %68

22:                                               ; preds = %7
  %23 = getelementptr inbounds i8, i8* %1, i64 -1
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %58

26:                                               ; preds = %22
  %27 = getelementptr inbounds i8, i8* %1, i64 -2
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %58

30:                                               ; preds = %26
  %31 = getelementptr inbounds i8, i8* %1, i64 -3
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %41

34:                                               ; preds = %30
  %35 = getelementptr inbounds i8, i8* %1, i64 -4
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %34
  store i8 4, i8* %35, align 1
  %39 = load i32, i32* @g_changes, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* @g_changes, align 4
  br label %68

41:                                               ; preds = %34, %30
  %42 = getelementptr inbounds i8, i8* %1, i64 -3
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %58

45:                                               ; preds = %41
  %46 = getelementptr inbounds i8, i8* %1, i64 -4
  %47 = load i8, i8* %46, align 1
  %48 = icmp eq i8 %47, 4
  br i1 %48, label %49, label %58

49:                                               ; preds = %45
  %50 = load i1, i1* @g_verbose, align 4
  br i1 %50, label %51, label %68

51:                                               ; preds = %49
  %52 = load i32, i32* @g_code_addr, align 4
  %53 = load i64, i64* bitcast (i8** @g_code_start to i64*), align 8
  %54 = sub i64 %9, %53
  %55 = trunc i64 %54 to i32
  %56 = add i32 %52, %55
  %57 = tail call i32 (i32, i8*, ...) @__printf_chk(i32 1, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.33, i64 0, i64 0), i32 %56) #10
  br label %68

58:                                               ; preds = %26, %22, %45, %41
  %59 = load i64, i64* bitcast (i8** @g_code_start to i64*), align 8
  %60 = sub i64 %9, %59
  %61 = trunc i64 %60 to i32
  %62 = load i32, i32* @g_code_addr, align 4
  %63 = add i32 %62, %61
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %65 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %64, i32 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i64 0, i64 0), i32 %63, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34, i64 0, i64 0)) #10
  %66 = load i32, i32* @g_errors, align 4
  %67 = add nsw i32 %66, 1
  store i32 %67, i32* @g_errors, align 4
  br label %68

68:                                               ; preds = %49, %51, %12, %58, %38, %4
  %69 = and i32 %2, 1174388736
  %70 = icmp eq i32 %69, 0
  %71 = zext i1 %70 to i32
  ret i32 %71
}

; Function Attrs: nofree nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly }
attributes #9 = { nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { nounwind readnone }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
