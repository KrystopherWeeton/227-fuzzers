; ModuleID = '../../content/browser/cache_storage/cache_storage_operation.cc'
source_filename = "../../content/browser/cache_storage/cache_storage_operation.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.content::CacheStorageOperation" = type { %"class.base::OnceCallback", %"class.base::TimeTicks", %"class.base::TimeTicks", i64, i32, i32, i32, i32, %class.scoped_refptr.1, %"class.base::WeakPtrFactory" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr.1 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2" }>
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.3 }
%class.scoped_refptr.3 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.4", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.4" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.5" }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i8 }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2", [4 x i8] }>

@_ZN7content21CacheStorageOperationC1EN4base12OnceCallbackIFvvEEElNS_27CacheStorageSchedulerClientENS_25CacheStorageSchedulerModeENS_23CacheStorageSchedulerOpENS_29CacheStorageSchedulerPriorityE13scoped_refptrINS1_19SequencedTaskRunnerEE = hidden unnamed_addr alias void (%"class.content::CacheStorageOperation"*, %"class.base::OnceCallback"*, i64, i32, i32, i32, i32, i64), void (%"class.content::CacheStorageOperation"*, %"class.base::OnceCallback"*, i64, i32, i32, i32, i32, i64)* @_ZN7content21CacheStorageOperationC2EN4base12OnceCallbackIFvvEEElNS_27CacheStorageSchedulerClientENS_25CacheStorageSchedulerModeENS_23CacheStorageSchedulerOpENS_29CacheStorageSchedulerPriorityE13scoped_refptrINS1_19SequencedTaskRunnerEE
@_ZN7content21CacheStorageOperationD1Ev = hidden unnamed_addr alias void (%"class.content::CacheStorageOperation"*), void (%"class.content::CacheStorageOperation"*)* @_ZN7content21CacheStorageOperationD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content21CacheStorageOperationC2EN4base12OnceCallbackIFvvEEElNS_27CacheStorageSchedulerClientENS_25CacheStorageSchedulerModeENS_23CacheStorageSchedulerOpENS_29CacheStorageSchedulerPriorityE13scoped_refptrINS1_19SequencedTaskRunnerEE(%"class.content::CacheStorageOperation"*, %"class.base::OnceCallback"* nocapture, i64, i32, i32, i32, i32, i64) unnamed_addr #0 align 2 {
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.content::CacheStorageOperation"* %0 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = tail call i64 @_ZN4base9TimeTicks3NowEv() #4
  %14 = getelementptr inbounds %"class.content::CacheStorageOperation", %"class.content::CacheStorageOperation"* %0, i64 0, i32 1, i32 0, i32 0
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.content::CacheStorageOperation", %"class.content::CacheStorageOperation"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds %"class.content::CacheStorageOperation", %"class.content::CacheStorageOperation"* %0, i64 0, i32 3
  store i64 %2, i64* %16, align 8
  %17 = getelementptr inbounds %"class.content::CacheStorageOperation", %"class.content::CacheStorageOperation"* %0, i64 0, i32 4
  store i32 %3, i32* %17, align 8
  %18 = getelementptr inbounds %"class.content::CacheStorageOperation", %"class.content::CacheStorageOperation"* %0, i64 0, i32 5
  store i32 %4, i32* %18, align 4
  %19 = getelementptr inbounds %"class.content::CacheStorageOperation", %"class.content::CacheStorageOperation"* %0, i64 0, i32 6
  store i32 %5, i32* %19, align 8
  %20 = getelementptr inbounds %"class.content::CacheStorageOperation", %"class.content::CacheStorageOperation"* %0, i64 0, i32 7
  store i32 %6, i32* %20, align 4
  %21 = getelementptr inbounds %"class.content::CacheStorageOperation", %"class.content::CacheStorageOperation"* %0, i64 0, i32 8
  %22 = bitcast %class.scoped_refptr.1* %21 to i64*
  store i64 %7, i64* %22, align 8
  %23 = getelementptr inbounds %"class.content::CacheStorageOperation", %"class.content::CacheStorageOperation"* %0, i64 0, i32 9, i32 0
  %24 = ptrtoint %"class.content::CacheStorageOperation"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %23, i64 %24) #4
  ret void
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content21CacheStorageOperationD2Ev(%"class.content::CacheStorageOperation"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::CacheStorageOperation", %"class.content::CacheStorageOperation"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.content::CacheStorageOperation", %"class.content::CacheStorageOperation"* %0, i64 0, i32 6
  %5 = load i32, i32* %4, align 8
  %6 = tail call i64 @_ZN4base9TimeTicks3NowEv() #4
  %7 = getelementptr inbounds %"class.content::CacheStorageOperation", %"class.content::CacheStorageOperation"* %0, i64 0, i32 2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = sub nsw i64 %6, %8
  tail call void @_ZN7content30RecordCacheStorageSchedulerUMAENS_24CacheStorageSchedulerUMAENS_27CacheStorageSchedulerClientENS_23CacheStorageSchedulerOpEN4base9TimeDeltaE(i32 0, i32 %3, i32 %5, i64 %9) #4
  %10 = getelementptr inbounds %"class.content::CacheStorageOperation", %"class.content::CacheStorageOperation"* %0, i64 0, i32 9, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %10) #4
  %11 = getelementptr inbounds %"class.content::CacheStorageOperation", %"class.content::CacheStorageOperation"* %0, i64 0, i32 8, i32 0
  %12 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %11, align 8
  %13 = icmp eq %"class.base::SequencedTaskRunner"* %12, null
  br i1 %13, label %22, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %12, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw sub i32* %16, i32 1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %22

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %15, i64 -2
  %21 = bitcast %"class.base::RefCountedThreadSafe.2"* %20 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %21) #4
  br label %22

22:                                               ; preds = %1, %14, %19
  %23 = getelementptr inbounds %"class.content::CacheStorageOperation", %"class.content::CacheStorageOperation"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %23) #4
  ret void
}

declare void @_ZN7content30RecordCacheStorageSchedulerUMAENS_24CacheStorageSchedulerUMAENS_27CacheStorageSchedulerClientENS_23CacheStorageSchedulerOpEN4base9TimeDeltaE(i32, i32, i32, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content21CacheStorageOperation3RunEv(%"class.content::CacheStorageOperation"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = tail call i64 @_ZN4base9TimeTicks3NowEv() #4
  %4 = getelementptr inbounds %"class.content::CacheStorageOperation", %"class.content::CacheStorageOperation"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %3, i64* %4, align 8
  %5 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #4
  %6 = getelementptr inbounds %"class.content::CacheStorageOperation", %"class.content::CacheStorageOperation"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.content::CacheStorageOperation"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %8, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %11 = inttoptr i64 %8 to %"class.base::internal::BindStateBase"*
  %12 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %11, i64 0, i32 1
  %13 = bitcast void ()** %12 to void (%"class.base::internal::BindStateBase"*)**
  %14 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %13, align 8
  tail call void %14(%"class.base::internal::BindStateBase"* %11) #4
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %10) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #4
  ret void
}

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
