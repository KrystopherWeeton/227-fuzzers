; ModuleID = '../../third_party/blink/renderer/core/html/forms/text_control_element.cc'
source_filename = "../../third_party/blink/renderer/core/html/forms/text_control_element.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1740", i64 }
%"class.std::__1::vector.1740" = type { %"class.std::__1::__vector_base.1741" }
%"class.std::__1::__vector_base.1741" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1742" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1742" = type { %"struct.std::__1::__compressed_pair_elem.1743" }
%"struct.std::__1::__compressed_pair_elem.1743" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<const WTF::AtomicString>::InstanceStorage" }
%"class.WTF::StaticSingleton<const WTF::AtomicString>::InstanceStorage" = type { [8 x i8] }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.41" }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::TextControlElement" = type { %"class.blink::HTMLFormControlElementWithState.base", %"class.blink::Member.1771", %"class.WTF::String", i8, i32, i32, i32, %"class.WTF::String", %"class.WTF::String" }
%"class.blink::HTMLFormControlElementWithState.base" = type { %"class.blink::HTMLFormControlElement.base", i8 }
%"class.blink::HTMLFormControlElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8 }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1340", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1342", %"class.blink::HeapVector.1344", %"class.std::__1::unique_ptr.1352", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1358", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1371", %"class.WTF::Vector.1373", i8, i8, %"class.std::__1::unique_ptr.1378", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1384", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1392", i8, i32, %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::Member.1398", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1400", %"class.WTF::HashMap.1402", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.1413", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1415", i8, i32, %"class.blink::Member.1422", %"class.blink::Member.1424", i32, %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.blink::Member.1430", %"class.std::__1::unique_ptr.1432", i64, %"class.std::__1::unique_ptr.1438", i32, i32, %"class.blink::Member.1449", %"class.blink::Member.1451", %"class.blink::Member.1453", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1455", %"class.WTF::Vector.1457", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1462", %"class.blink::Member.1469", %"class.std::__1::unique_ptr.1471", %"class.blink::Member.1477", i8, i8, %"class.WTF::String", %"class.blink::Member.1479", i8, [7 x i8], %"class.blink::HeapHashMap.1481", %"class.blink::HeapObserverSet", %"class.blink::Member.1495", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1497", i32, i8, i8, %"class.blink::WeakMember.1499", %"class.blink::Member.1500" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1524", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1591", i32, i8, [3 x i8], %"class.blink::HeapVector.1593", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1601", %"class.blink::Member.1603", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1612", %"class.blink::Member.1735", %"class.blink::Member.1737", i8, [7 x i8] }>
%"class.blink::Supplementable.1524" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1525" }
%"class.blink::HeapHashMap.1525" = type { %"class.WTF::HashMap.1528" }
%"class.WTF::HashMap.1528" = type { %"class.WTF::HashTable.1529" }
%"class.WTF::HashTable.1529" = type <{ %"struct.WTF::KeyValuePair.1531"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1531" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1540" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1532" }
%"class.blink::HeapObserverSet.1532" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1533" }
%"class.blink::HeapHashSet.1533" = type { %"class.WTF::HashSet.1536" }
%"class.WTF::HashSet.1536" = type { %"class.WTF::HashTable.1537" }
%"class.WTF::HashTable.1537" = type <{ %"class.blink::WeakMember.1539"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1539" = type opaque
%"class.blink::Supplementable.1540" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1541" }
%"class.blink::HeapHashMap.1541" = type { %"class.WTF::HashMap.1544" }
%"class.WTF::HashMap.1544" = type { %"class.WTF::HashTable.1545" }
%"class.WTF::HashTable.1545" = type <{ %"struct.WTF::KeyValuePair.1547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1547" = type { i8*, %"class.blink::Member.3212" }
%"class.blink::Member.3212" = type { %"class.blink::MemberBase.3213" }
%"class.blink::MemberBase.3213" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.3214" }
%"class.blink::Member.3214" = type { %"class.blink::MemberBase.3215" }
%"class.blink::MemberBase.3215" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1548, %"class.std::__1::unique_ptr.1557", %"class.std::__1::unique_ptr.1557", %"class.std::__1::unique_ptr.1581", %"class.std::__1::unique_ptr.1581", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1587", i32, i32 }
%class.scoped_refptr.1548 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1549", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1551", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1556 }
%"class.WTF::RefCounted.1549" = type { %"class.base::RefCounted.1550" }
%"class.base::RefCounted.1550" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1551" = type { %"class.absl::optional_internal::optional_data.1552" }
%"class.absl::optional_internal::optional_data.1552" = type { %"class.absl::optional_internal::optional_data_base.1553" }
%"class.absl::optional_internal::optional_data_base.1553" = type { %"class.absl::optional_internal::optional_data_dtor_base.1554" }
%"class.absl::optional_internal::optional_data_dtor_base.1554" = type { i8, %union.anon.1555 }
%union.anon.1555 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1556 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1557" = type { %"class.std::__1::__compressed_pair.1558" }
%"class.std::__1::__compressed_pair.1558" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"struct.std::__1::__compressed_pair_elem.1559" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.1568", %"class.std::__1::map.1577"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1551" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1560", %"class.std::__1::__compressed_pair.1565" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1560" = type { %"struct.std::__1::__compressed_pair_elem.1561" }
%"struct.std::__1::__compressed_pair_elem.1561" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1565" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1568" = type { %"class.std::__1::__tree.1569" }
%"class.std::__1::__tree.1569" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1570", %"class.std::__1::__compressed_pair.1574" }
%"class.std::__1::__compressed_pair.1570" = type { %"struct.std::__1::__compressed_pair_elem.1561" }
%"class.std::__1::__compressed_pair.1574" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1577" = type opaque
%"class.std::__1::unique_ptr.1581" = type { %"class.std::__1::__compressed_pair.1582" }
%"class.std::__1::__compressed_pair.1582" = type { %"struct.std::__1::__compressed_pair_elem.1583" }
%"struct.std::__1::__compressed_pair_elem.1583" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1587" = type { %"class.WTF::HashTable.1588" }
%"class.WTF::HashTable.1588" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1591" = type { %"class.blink::MemberBase.1592" }
%"class.blink::MemberBase.1592" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1593" = type { %"class.WTF::Vector.1596" }
%"class.WTF::Vector.1596" = type { %"class.WTF::VectorBuffer.1597" }
%"class.WTF::VectorBuffer.1597" = type { %"class.WTF::VectorBufferBase.1598" }
%"class.WTF::VectorBufferBase.1598" = type { %"class.blink::Member.1599"*, i32, i32 }
%"class.blink::Member.1599" = type opaque
%"class.blink::Member.1601" = type { %"class.blink::MemberBase.1602" }
%"class.blink::MemberBase.1602" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1603" = type { %"class.blink::MemberBase.1604" }
%"class.blink::MemberBase.1604" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1605", i32, i32 }
%"class.blink::HeapHashMap.1605" = type { %"class.WTF::HashMap.1608" }
%"class.WTF::HashMap.1608" = type { %"class.WTF::HashTable.1609" }
%"class.WTF::HashTable.1609" = type <{ %"struct.WTF::KeyValuePair.1611"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1611" = type opaque
%"class.std::__1::unique_ptr.1612" = type { %"class.std::__1::__compressed_pair.1613" }
%"class.std::__1::__compressed_pair.1613" = type { %"struct.std::__1::__compressed_pair_elem.1614" }
%"struct.std::__1::__compressed_pair_elem.1614" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.1615" }
%"class.std::__1::unique_ptr.1615" = type { %"class.std::__1::__compressed_pair.1616" }
%"class.std::__1::__compressed_pair.1616" = type { %"struct.std::__1::__compressed_pair_elem.1617" }
%"struct.std::__1::__compressed_pair_elem.1617" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1618" }
%"class.WTF::Vector.1618" = type { %"class.WTF::VectorBuffer.1619" }
%"class.WTF::VectorBuffer.1619" = type { %"class.WTF::VectorBufferBase.1620" }
%"class.WTF::VectorBufferBase.1620" = type { %"class.mojo::StructPtr.1621"*, i32, i32 }
%"class.mojo::StructPtr.1621" = type { %"class.std::__1::unique_ptr.1622" }
%"class.std::__1::unique_ptr.1622" = type { %"class.std::__1::__compressed_pair.1623" }
%"class.std::__1::__compressed_pair.1623" = type { %"struct.std::__1::__compressed_pair_elem.1624" }
%"struct.std::__1::__compressed_pair_elem.1624" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1625", %"class.WTF::HashMap.1632", %"class.WTF::HashMap.1637", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.630", i32, %"class.mojo::StructPtr.1642", %"class.WTF::Vector.630" }
%"class.mojo::StructPtr.1625" = type { %"class.std::__1::unique_ptr.1626" }
%"class.std::__1::unique_ptr.1626" = type { %"class.std::__1::__compressed_pair.1627" }
%"class.std::__1::__compressed_pair.1627" = type { %"struct.std::__1::__compressed_pair_elem.1628" }
%"struct.std::__1::__compressed_pair_elem.1628" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1632" = type { %"class.WTF::HashTable.1633" }
%"class.WTF::HashTable.1633" = type <{ %"struct.WTF::KeyValuePair.1636"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1636" = type opaque
%"class.WTF::HashMap.1637" = type { %"class.WTF::HashTable.1638" }
%"class.WTF::HashTable.1638" = type <{ %"struct.WTF::KeyValuePair.1641"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1641" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1642" = type { %"class.std::__1::unique_ptr.1643" }
%"class.std::__1::unique_ptr.1643" = type { %"class.std::__1::__compressed_pair.1644" }
%"class.std::__1::__compressed_pair.1644" = type { %"struct.std::__1::__compressed_pair_elem.1645" }
%"struct.std::__1::__compressed_pair_elem.1645" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.630", i8, i8, [6 x i8] }>
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1726" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.1657", i32 }>
%"class.std::__1::unique_ptr.1657" = type { %"class.std::__1::__compressed_pair.1658" }
%"class.std::__1::__compressed_pair.1658" = type { %"struct.std::__1::__compressed_pair_elem.1659" }
%"struct.std::__1::__compressed_pair_elem.1659" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.1660", %"class.absl::optional.1661", %"class.absl::optional.1666", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1679", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1701", %"class.std::__1::map.1712", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.1721", i8, %class.scoped_refptr.1671, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1722" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.1660" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.1661" = type { %"class.absl::optional_internal::optional_data.1662" }
%"class.absl::optional_internal::optional_data.1662" = type { %"class.absl::optional_internal::optional_data_base.1663" }
%"class.absl::optional_internal::optional_data_base.1663" = type { %"class.absl::optional_internal::optional_data_dtor_base.1664" }
%"class.absl::optional_internal::optional_data_dtor_base.1664" = type { i8, %union.anon.1665 }
%union.anon.1665 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.1666" = type { %"class.absl::optional_internal::optional_data.1667" }
%"class.absl::optional_internal::optional_data.1667" = type { %"class.absl::optional_internal::optional_data_base.1668" }
%"class.absl::optional_internal::optional_data_base.1668" = type { %"class.absl::optional_internal::optional_data_dtor_base.1669" }
%"class.absl::optional_internal::optional_data_dtor_base.1669" = type { i8, %union.anon.1670 }
%union.anon.1670 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.1671, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.1672" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1672" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.1677 }
%class.scoped_refptr.1677 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1739", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.1671, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1739" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1678 }
%class.scoped_refptr.1678 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1679" = type { %"class.std::__1::__compressed_pair.1680" }
%"class.std::__1::__compressed_pair.1680" = type { %"struct.std::__1::__compressed_pair_elem.1681" }
%"struct.std::__1::__compressed_pair_elem.1681" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1682", %class.scoped_refptr.1683 }
%"class.base::RepeatingCallback.1682" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1683 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1684", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1684" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.1688", %"class.std::__1::unique_ptr.1694", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.1700" }
%"class.std::__1::unique_ptr.1688" = type { %"class.std::__1::__compressed_pair.1689" }
%"class.std::__1::__compressed_pair.1689" = type { %"struct.std::__1::__compressed_pair_elem.1690" }
%"struct.std::__1::__compressed_pair_elem.1690" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.1694" = type { %"class.std::__1::__compressed_pair.1695" }
%"class.std::__1::__compressed_pair.1695" = type { %"struct.std::__1::__compressed_pair_elem.1696" }
%"struct.std::__1::__compressed_pair_elem.1696" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1700" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.1701" = type { %"class.std::__1::__tree.1702" }
%"class.std::__1::__tree.1702" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1703", %"class.std::__1::__compressed_pair.1707" }
%"class.std::__1::__compressed_pair.1703" = type { %"struct.std::__1::__compressed_pair_elem.1561" }
%"class.std::__1::__compressed_pair.1707" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1712" = type { %"class.std::__1::__tree.1713" }
%"class.std::__1::__tree.1713" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1714", %"class.std::__1::__compressed_pair.1718" }
%"class.std::__1::__compressed_pair.1714" = type { %"struct.std::__1::__compressed_pair_elem.1561" }
%"class.std::__1::__compressed_pair.1718" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::OnceCallback.1721" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.1671 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1722" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1726" = type { %"class.std::__1::__compressed_pair.1727" }
%"class.std::__1::__compressed_pair.1727" = type { %"struct.std::__1::__compressed_pair_elem.1728" }
%"struct.std::__1::__compressed_pair_elem.1728" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1735" = type { %"class.blink::MemberBase.1736" }
%"class.blink::MemberBase.1736" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1737" = type { %"class.blink::MemberBase.1738" }
%"class.blink::MemberBase.1738" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1515", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1515" = type { %"class.WTF::Vector.1518" }
%"class.WTF::Vector.1518" = type { %"class.WTF::VectorBuffer.1519" }
%"class.WTF::VectorBuffer.1519" = type { %"class.WTF::VectorBufferBase.1520" }
%"class.WTF::VectorBufferBase.1520" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1747", [4 x i8] }>
%"class.WTF::RefCounted.1747" = type { %"class.base::RefCounted.1748" }
%"class.base::RefCounted.1748" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.3216" }
%"class.WTF::Vector.3216" = type { %"class.WTF::VectorBuffer.3217" }
%"class.WTF::VectorBuffer.3217" = type { %"class.WTF::VectorBufferBase.3218" }
%"class.WTF::VectorBufferBase.3218" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2885", %"class.absl::optional.2885", %"class.absl::optional.2885" }
%"class.absl::optional.2885" = type { %"class.absl::optional_internal::optional_data.2886" }
%"class.absl::optional_internal::optional_data.2886" = type { %"class.absl::optional_internal::optional_data_base.2887" }
%"class.absl::optional_internal::optional_data_base.2887" = type { %"class.absl::optional_internal::optional_data_dtor_base.2888" }
%"class.absl::optional_internal::optional_data_dtor_base.2888" = type { i8, %union.anon.2889 }
%union.anon.2889 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3221 }
%class.scoped_refptr.3221 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.3222", %"class.WTF::Vector.630", %"class.WTF::Vector.3224", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.3222" = type { %"class.base::RefCounted.3223" }
%"class.base::RefCounted.3223" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.3224" = type { %"class.WTF::VectorBuffer.3225" }
%"class.WTF::VectorBuffer.3225" = type { %"class.WTF::VectorBufferBase.3226" }
%"class.WTF::VectorBufferBase.3226" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.3227 }
%union.anon.3227 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.3231" }
%"class.WTF::VectorBuffer.3231" = type { %"class.WTF::VectorBufferBase.3232", [32 x i8] }
%"class.WTF::VectorBufferBase.3232" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3302 }
%class.scoped_refptr.3302 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.3312" }
%"class.blink::Member.3312" = type { %"class.blink::MemberBase.3313" }
%"class.blink::MemberBase.3313" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.3308" }
%"class.blink::MemberBase.3308" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.3309" }
%"class.blink::MemberBase.3309" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.3310" }
%"class.blink::MemberBase.3310" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.3311" }
%"class.blink::MemberBase.3311" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.3303", %"class.WTF::Vector.3303" }
%"class.WTF::Vector.3303" = type { %"class.WTF::VectorBuffer.3304" }
%"class.WTF::VectorBuffer.3304" = type { %"class.WTF::VectorBufferBase.3305" }
%"class.WTF::VectorBufferBase.3305" = type { %class.scoped_refptr.3302*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1342" = type { %"class.blink::MemberBase.1343" }
%"class.blink::MemberBase.1343" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1344" = type { %"class.WTF::Vector.1347" }
%"class.WTF::Vector.1347" = type { %"class.WTF::VectorBuffer.1348" }
%"class.WTF::VectorBuffer.1348" = type { %"class.WTF::VectorBufferBase.1349" }
%"class.WTF::VectorBufferBase.1349" = type { %"class.blink::Member.1350"*, i32, i32 }
%"class.blink::Member.1350" = type opaque
%"class.std::__1::unique_ptr.1352" = type { %"class.std::__1::__compressed_pair.1353" }
%"class.std::__1::__compressed_pair.1353" = type { %"struct.std::__1::__compressed_pair_elem.1354" }
%"struct.std::__1::__compressed_pair_elem.1354" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1358" = type { %"class.WTF::HashSet.1361" }
%"class.WTF::HashSet.1361" = type { %"class.WTF::HashTable.1362" }
%"class.WTF::HashTable.1362" = type <{ %"class.blink::WeakMember.1364"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1364" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1365", i32, [4 x i8] }>
%"class.WTF::Vector.1365" = type { %"class.WTF::VectorBuffer.1366" }
%"class.WTF::VectorBuffer.1366" = type { %"class.WTF::VectorBufferBase.1367" }
%"class.WTF::VectorBufferBase.1367" = type { %"struct.std::__1::pair.1368"*, i32, i32 }
%"struct.std::__1::pair.1368" = type opaque
%"class.blink::Member.1371" = type { %"class.blink::MemberBase.1372" }
%"class.blink::MemberBase.1372" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1373" = type { %"class.WTF::VectorBuffer.1374" }
%"class.WTF::VectorBuffer.1374" = type { %"class.WTF::VectorBufferBase.1375" }
%"class.WTF::VectorBufferBase.1375" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1378" = type { %"class.std::__1::__compressed_pair.1379" }
%"class.std::__1::__compressed_pair.1379" = type { %"struct.std::__1::__compressed_pair_elem.1380" }
%"struct.std::__1::__compressed_pair_elem.1380" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1384" = type { %"class.WTF::Vector.1387" }
%"class.WTF::Vector.1387" = type { %"class.WTF::VectorBuffer.1388" }
%"class.WTF::VectorBuffer.1388" = type { %"class.WTF::VectorBufferBase.1389" }
%"class.WTF::VectorBufferBase.1389" = type { %"class.blink::Member.1390"*, i32, i32 }
%"class.blink::Member.1390" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1400" = type { %"class.blink::MemberBase.1401" }
%"class.blink::MemberBase.1401" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1402" = type { %"class.WTF::HashTable.1403" }
%"class.WTF::HashTable.1403" = type <{ %"struct.WTF::KeyValuePair.1406"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1406" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1413" = type { %"class.blink::MemberBase.1414" }
%"class.blink::MemberBase.1414" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1415" = type { %"class.WTF::HashSet.1418" }
%"class.WTF::HashSet.1418" = type { %"class.WTF::HashTable.1419" }
%"class.WTF::HashTable.1419" = type <{ %"class.blink::Member.1421"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1421" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1430" = type { %"class.blink::MemberBase.1431" }
%"class.blink::MemberBase.1431" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1432" = type { %"class.std::__1::__compressed_pair.1433" }
%"class.std::__1::__compressed_pair.1433" = type { %"struct.std::__1::__compressed_pair_elem.1434" }
%"struct.std::__1::__compressed_pair_elem.1434" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1438" = type { %"class.std::__1::__compressed_pair.1439" }
%"class.std::__1::__compressed_pair.1439" = type { %"struct.std::__1::__compressed_pair_elem.1440" }
%"struct.std::__1::__compressed_pair_elem.1440" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1441", %"class.WTF::HashMap.1441", %"class.WTF::HashMap.1441", %"class.WTF::HashMap.1441", %"class.WTF::HashMap.1441", %"class.WTF::HashMap.1441", %"class.WTF::HashMap.1441", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1441" = type { %"class.WTF::HashTable.1442" }
%"class.WTF::HashTable.1442" = type <{ %"struct.WTF::KeyValuePair.1445"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1445" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1455" = type { %"class.blink::MemberBase.1456" }
%"class.blink::MemberBase.1456" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1457" = type { %"class.WTF::VectorBuffer.1458" }
%"class.WTF::VectorBuffer.1458" = type { %"class.WTF::VectorBufferBase.1459" }
%"class.WTF::VectorBufferBase.1459" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1462" = type { %"class.WTF::HashMap.1465" }
%"class.WTF::HashMap.1465" = type { %"class.WTF::HashTable.1466" }
%"class.WTF::HashTable.1466" = type <{ %"struct.WTF::KeyValuePair.1468"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1468" = type opaque
%"class.blink::Member.1469" = type { %"class.blink::MemberBase.1470" }
%"class.blink::MemberBase.1470" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1471" = type { %"class.std::__1::__compressed_pair.1472" }
%"class.std::__1::__compressed_pair.1472" = type { %"struct.std::__1::__compressed_pair_elem.1473" }
%"struct.std::__1::__compressed_pair_elem.1473" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1479" = type { %"class.blink::MemberBase.1480" }
%"class.blink::MemberBase.1480" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1481" = type { %"class.WTF::HashMap.1484" }
%"class.WTF::HashMap.1484" = type { %"class.WTF::HashTable.1485" }
%"class.WTF::HashTable.1485" = type <{ %"struct.WTF::KeyValuePair.1487"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1487" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1488" }
%"class.blink::HeapHashSet.1488" = type { %"class.WTF::HashSet.1491" }
%"class.WTF::HashSet.1491" = type { %"class.WTF::HashTable.1492" }
%"class.WTF::HashTable.1492" = type <{ %"class.blink::WeakMember.1494"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1494" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1497" = type { %"class.blink::MemberBase.1498" }
%"class.blink::MemberBase.1498" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1504", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1511", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1504" = type { %"class.WTF::HashSet.1507" }
%"class.WTF::HashSet.1507" = type { %"class.WTF::HashTable.1508" }
%"class.WTF::HashTable.1508" = type <{ %"class.blink::Member.1510"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1510" = type opaque
%"class.blink::HeapTaskRunnerTimer.1511" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1512", { i64, i64 } }
%"class.blink::WeakMember.1512" = type { %"class.blink::MemberBase.1498" }
%"class.blink::WeakMember.1499" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.1500" = type { %"class.blink::MemberBase.1501" }
%"class.blink::MemberBase.1501" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.1765", %"class.blink::Member.1767", %"class.blink::Member.1769", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.1765" = type { %"class.blink::MemberBase.1766" }
%"class.blink::MemberBase.1766" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.1767" = type { %"class.blink::MemberBase.1768" }
%"class.blink::MemberBase.1768" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::Member.1769" = type { %"class.blink::MemberBase.1770" }
%"class.blink::MemberBase.1770" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"class.blink::Member.1771" = type { %"class.blink::MemberBase.1772" }
%"class.blink::MemberBase.1772" = type { %"class.blink::TextControlInnerEditorElement"* }
%"class.blink::TextControlInnerEditorElement" = type <{ %"class.blink::HTMLDivElement", i8, [7 x i8] }>
%"class.blink::HTMLDivElement" = type { %"class.blink::HTMLElement" }
%"class.blink::HTMLFormControlElementWithState" = type { %"class.blink::HTMLFormControlElement.base", i8, [2 x i8] }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1946", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1954", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1968", %"class.blink::FrameLoader", %"class.blink::Member.1989", %"class.blink::Member.343", %"class.blink::Member.1991", %"class.blink::Member.2021", %"class.blink::Member.2037", %"class.blink::Member.2039", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.2041", %class.scoped_refptr.2265, %"class.blink::Member.2266", %"class.blink::Member.2268", %"class.blink::Member.2270", %"class.blink::Member.2272", %"class.blink::Member.2274", %"class.blink::Member.2278", %"class.blink::Member.2280", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2284", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2305", %"class.std::__1::unique_ptr.2306", %"class.absl::optional.1934", i32, [4 x i8], %"class.std::__1::unique_ptr.2312", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2320", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2325", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2330", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2333", %"class.blink::Member.2335", %"class.blink::Member.2337", %"class.blink::Member.2339", %"class.mojo::StructPtr.2342", %"class.blink::Member.2351", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2353", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1777", %"class.blink::Member.1779", %"class.blink::Member.1781", i8, i32, i8, i32, %"class.blink::Member.1914", %"class.blink::Member.1804", %"class.blink::FrameLifecycle", %"class.blink::Member.1775", %"class.blink::Member.1775", %"class.blink::Member.1775", %"class.blink::Member.1775", %"class.blink::Member.1775", %"class.blink::Member.1775", %"class.blink::Member.1916", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.1927", i8, %"class.base::UnguessableToken", %"class.absl::optional.1929", %"class.absl::optional.1934", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.1775", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1777" = type { %"class.blink::MemberBase.1778" }
%"class.blink::MemberBase.1778" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable.2662", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.1775", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.2676", %"class.blink::Member.2680", %"class.blink::Member.2682", %"class.blink::Member.2684", %"class.blink::Member.2686", %"class.blink::Member.2688", %"class.blink::Member.2699", %"class.blink::Member.2701", %"class.blink::HeapObserverSet.2703", %"class.blink::Member.2711", %"class.blink::Member.2713", %"class.blink::Member.2715", %"class.blink::Member.2717", %"class.blink::Member.2719", %"class.blink::Member.2721", %"class.blink::Member.2723", %"class.blink::Member.2725", %"class.blink::Member.2727", %"class.blink::Member.2729", %"class.blink::Member.2731", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr.2756", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.2763", %"class.blink::Member.1777", %"class.blink::Member.1777", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.2771", %"class.std::__1::unique_ptr.2777", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable.2662" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2663" }
%"class.blink::HeapHashMap.2663" = type { %"class.WTF::HashMap.2666" }
%"class.WTF::HashMap.2666" = type { %"class.WTF::HashTable.2667" }
%"class.WTF::HashTable.2667" = type <{ %"struct.WTF::KeyValuePair.2669"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2669" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.2670" }
%"class.std::__1::unique_ptr.2670" = type { %"class.std::__1::__compressed_pair.2671" }
%"class.std::__1::__compressed_pair.2671" = type { %"struct.std::__1::__compressed_pair_elem.2672" }
%"struct.std::__1::__compressed_pair_elem.2672" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.2676" = type { %"class.blink::MemberBase.2677" }
%"class.blink::MemberBase.2677" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.1777", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.blink::Member.2680" = type { %"class.blink::MemberBase.2681" }
%"class.blink::MemberBase.2681" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.2682" = type { %"class.blink::MemberBase.2683" }
%"class.blink::MemberBase.2683" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type opaque
%"class.blink::Member.2684" = type { %"class.blink::MemberBase.2685" }
%"class.blink::MemberBase.2685" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.2686" = type { %"class.blink::MemberBase.2687" }
%"class.blink::MemberBase.2687" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.2688" = type { %"class.blink::MemberBase.2689" }
%"class.blink::MemberBase.2689" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type { %"class.blink::Member.1777", %"class.blink::Member.1775", i8, i8, i8, i8, [4 x i8], %"class.blink::HeapHashSet.2692" }
%"class.blink::HeapHashSet.2692" = type { %"class.WTF::HashSet.2695" }
%"class.WTF::HashSet.2695" = type { %"class.WTF::HashTable.2696" }
%"class.WTF::HashTable.2696" = type <{ %"class.blink::WeakMember.2698"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2698" = type opaque
%"class.blink::Member.2699" = type { %"class.blink::MemberBase.2700" }
%"class.blink::MemberBase.2700" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.2701" = type { %"class.blink::MemberBase.2702" }
%"class.blink::MemberBase.2702" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.2703" = type { i32, [4 x i8], %"class.blink::HeapHashSet.2704" }
%"class.blink::HeapHashSet.2704" = type { %"class.WTF::HashSet.2707" }
%"class.WTF::HashSet.2707" = type { %"class.WTF::HashTable.2708" }
%"class.WTF::HashTable.2708" = type <{ %"class.blink::WeakMember.2710"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2710" = type opaque
%"class.blink::Member.2711" = type { %"class.blink::MemberBase.2712" }
%"class.blink::MemberBase.2712" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.2713" = type { %"class.blink::MemberBase.2714" }
%"class.blink::MemberBase.2714" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.2715" = type { %"class.blink::MemberBase.2716" }
%"class.blink::MemberBase.2716" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.2717" = type { %"class.blink::MemberBase.2718" }
%"class.blink::MemberBase.2718" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.2719" = type { %"class.blink::MemberBase.2720" }
%"class.blink::MemberBase.2720" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.2721" = type { %"class.blink::MemberBase.2722" }
%"class.blink::MemberBase.2722" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.2723" = type { %"class.blink::MemberBase.2724" }
%"class.blink::MemberBase.2724" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.2725" = type { %"class.blink::MemberBase.2726" }
%"class.blink::MemberBase.2726" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.2727" = type { %"class.blink::MemberBase.2728" }
%"class.blink::MemberBase.2728" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.2729" = type { %"class.blink::MemberBase.2730" }
%"class.blink::MemberBase.2730" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.2731" = type { %"class.blink::MemberBase.2732" }
%"class.blink::MemberBase.2732" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.2733" }
%"class.WTF::Deque.2733" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.2736" }
%"class.WTF::VectorBuffer.2736" = type { %"class.WTF::VectorBufferBase.2737" }
%"class.WTF::VectorBufferBase.2737" = type { %"class.std::__1::unique_ptr.2738"*, i32, i32 }
%"class.std::__1::unique_ptr.2738" = type { %"class.std::__1::__compressed_pair.2739" }
%"class.std::__1::__compressed_pair.2739" = type { %"struct.std::__1::__compressed_pair_elem.2740" }
%"struct.std::__1::__compressed_pair_elem.2740" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.2744", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.2744" = type { %"class.std::__1::__bitset.2745" }
%"class.std::__1::__bitset.2745" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.2746" }
%"class.absl::optional.2746" = type { %"class.absl::optional_internal::optional_data.2747" }
%"class.absl::optional_internal::optional_data.2747" = type { %"class.absl::optional_internal::optional_data_base.2748" }
%"class.absl::optional_internal::optional_data_base.2748" = type { %"class.absl::optional_internal::optional_data_dtor_base.2749" }
%"class.absl::optional_internal::optional_data_dtor_base.2749" = type { i8, %union.anon.2750 }
%union.anon.2750 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.2751", i64, %"class.absl::optional.1661", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.2751" = type { %"class.absl::optional_internal::optional_data.2752" }
%"class.absl::optional_internal::optional_data.2752" = type { %"class.absl::optional_internal::optional_data_base.2753" }
%"class.absl::optional_internal::optional_data_base.2753" = type { %"class.absl::optional_internal::optional_data_dtor_base.2754" }
%"class.absl::optional_internal::optional_data_dtor_base.2754" = type { i8, %union.anon.2755 }
%union.anon.2755 = type { %"class.blink::WebSecurityOrigin" }
%"class.mojo::StructPtr.2756" = type { %"class.std::__1::unique_ptr.2757" }
%"class.std::__1::unique_ptr.2757" = type { %"class.std::__1::__compressed_pair.2758" }
%"class.std::__1::__compressed_pair.2758" = type { %"struct.std::__1::__compressed_pair_elem.2759" }
%"struct.std::__1::__compressed_pair_elem.2759" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.2763" = type { %"class.WTF::HashSet.2766" }
%"class.WTF::HashSet.2766" = type { %"class.WTF::HashTable.2767" }
%"class.WTF::HashTable.2767" = type <{ %"class.blink::WeakMember.2769"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2769" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.2770" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr.2770" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.2771" = type { %"class.std::__1::__compressed_pair.2772" }
%"class.std::__1::__compressed_pair.2772" = type { %"struct.std::__1::__compressed_pair_elem.2773" }
%"struct.std::__1::__compressed_pair_elem.2773" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2777" = type { %"class.std::__1::__compressed_pair.2778" }
%"class.std::__1::__compressed_pair.2778" = type { %"struct.std::__1::__compressed_pair_elem.2779" }
%"struct.std::__1::__compressed_pair_elem.2779" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::Member.1779" = type { %"class.blink::MemberBase.1780" }
%"class.blink::MemberBase.1780" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.1781" = type { %"class.blink::MemberBase.1782" }
%"class.blink::MemberBase.1782" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.1775", %"class.blink::Member.1804", %"class.blink::Member.1806", %"class.blink::Member.1808", i8, %"class.WTF::Vector.1810" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.1797" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.1785" }
%"class.blink::HeapVector.1785" = type { %"class.WTF::Vector.1788" }
%"class.WTF::Vector.1788" = type { %"class.WTF::VectorBuffer.1789" }
%"class.WTF::VectorBuffer.1789" = type { %"class.WTF::VectorBufferBase.1790", [32 x i8] }
%"class.WTF::VectorBufferBase.1790" = type { %"struct.std::__1::pair.1791"*, i32, i32 }
%"struct.std::__1::pair.1791" = type { %"class.WTF::AtomicString", %"class.blink::Member.1792" }
%"class.blink::Member.1792" = type { %"class.blink::MemberBase.1793" }
%"class.blink::MemberBase.1793" = type { %"class.blink::HeapVector.1794"* }
%"class.blink::HeapVector.1794" = type opaque
%"class.std::__1::unique_ptr.1797" = type { %"class.std::__1::__compressed_pair.1798" }
%"class.std::__1::__compressed_pair.1798" = type { %"struct.std::__1::__compressed_pair_elem.1799" }
%"struct.std::__1::__compressed_pair_elem.1799" = type { %"class.WTF::Vector.1800"* }
%"class.WTF::Vector.1800" = type opaque
%"class.blink::Member.1806" = type { %"class.blink::MemberBase.1807" }
%"class.blink::MemberBase.1807" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.1808" = type { %"class.blink::MemberBase.1809" }
%"class.blink::MemberBase.1809" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.1810" = type { %"class.WTF::VectorBuffer.1811" }
%"class.WTF::VectorBuffer.1811" = type { %"class.WTF::VectorBufferBase.1812" }
%"class.WTF::VectorBufferBase.1812" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1906" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.1813, %"class.std::__1::unique_ptr.1657", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.1671, i32 }>
%class.scoped_refptr.1813 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.1671, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.1872", %"class.absl::optional.1877", %"class.absl::optional.1830", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.1897", i8, [7 x i8], %class.scoped_refptr.1671, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1684" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.1671, %"class.std::__1::unique_ptr.1814", %"class.absl::optional.1824", %"struct.std::__1::atomic.238", i8, i8, i8, i8, i32, i32, %"class.absl::optional.1830", %"class.std::__1::unique_ptr.1835", i8, i64, %class.scoped_refptr.1869, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.1870", %"class.base::WeakPtrFactory.1871" }
%"class.std::__1::unique_ptr.1814" = type { %"class.std::__1::__compressed_pair.1815" }
%"class.std::__1::__compressed_pair.1815" = type { %"struct.std::__1::__compressed_pair_elem.1816" }
%"struct.std::__1::__compressed_pair_elem.1816" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.1671, i8, %"class.mojo::ScopedHandleBase.1817", %class.scoped_refptr.1818, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1819", i8*, %"class.base::WeakPtrFactory.1820" }
%"class.mojo::ScopedHandleBase.1817" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.1818 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.1819" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.1820" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1824" = type { %"class.absl::optional_internal::optional_data.1825" }
%"class.absl::optional_internal::optional_data.1825" = type { %"class.absl::optional_internal::optional_data_base.1826" }
%"class.absl::optional_internal::optional_data_base.1826" = type { %"class.absl::optional_internal::optional_data_dtor_base.1827" }
%"class.absl::optional_internal::optional_data_dtor_base.1827" = type { i8, %union.anon.1828 }
%union.anon.1828 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.1829", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.1829" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.1835" = type { %"class.std::__1::__compressed_pair.1836" }
%"class.std::__1::__compressed_pair.1836" = type { %"struct.std::__1::__compressed_pair_elem.1837" }
%"struct.std::__1::__compressed_pair_elem.1837" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1838", i8, i64, %class.scoped_refptr.1839, %class.scoped_refptr.1864 }
%"class.base::RepeatingCallback.1838" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1839 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.1840", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.1842", %"class.std::__1::map.1853", i8, [7 x i8] }>
%"class.base::RefCounted.1840" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.1841 }
%class.scoped_refptr.1841 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.1842" = type { %"class.std::__1::__tree.1843" }
%"class.std::__1::__tree.1843" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1844", %"class.std::__1::__compressed_pair.1848" }
%"class.std::__1::__compressed_pair.1844" = type { %"struct.std::__1::__compressed_pair_elem.1561" }
%"class.std::__1::__compressed_pair.1848" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1853" = type { %"class.std::__1::__tree.1854" }
%"class.std::__1::__tree.1854" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1855", %"class.std::__1::__compressed_pair.1859" }
%"class.std::__1::__compressed_pair.1855" = type { %"struct.std::__1::__compressed_pair_elem.1561" }
%"class.std::__1::__compressed_pair.1859" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%class.scoped_refptr.1864 = type { %"class.base::RefCountedData.1865"* }
%"class.base::RefCountedData.1865" = type opaque
%class.scoped_refptr.1869 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.1870" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.1871" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1872" = type { %"class.absl::optional_internal::optional_data.1873" }
%"class.absl::optional_internal::optional_data.1873" = type { %"class.absl::optional_internal::optional_data_base.1874" }
%"class.absl::optional_internal::optional_data_base.1874" = type { %"class.absl::optional_internal::optional_data_dtor_base.1875" }
%"class.absl::optional_internal::optional_data_dtor_base.1875" = type { i8, %union.anon.1876 }
%union.anon.1876 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.1877" = type { %"class.absl::optional_internal::optional_data.1878" }
%"class.absl::optional_internal::optional_data.1878" = type { %"class.absl::optional_internal::optional_data_base.1879" }
%"class.absl::optional_internal::optional_data_base.1879" = type { %"class.absl::optional_internal::optional_data_dtor_base.1880" }
%"class.absl::optional_internal::optional_data_dtor_base.1880" = type { i8, [7 x i8], %union.anon.1881 }
%union.anon.1881 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.1830" = type { %"class.absl::optional_internal::optional_data.1831" }
%"class.absl::optional_internal::optional_data.1831" = type { %"class.absl::optional_internal::optional_data_base.1832" }
%"class.absl::optional_internal::optional_data_base.1832" = type { %"class.absl::optional_internal::optional_data_dtor_base.1833" }
%"class.absl::optional_internal::optional_data_dtor_base.1833" = type { i8, %union.anon.1834 }
%union.anon.1834 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.1882 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.1882 = type { %"class.std::__1::map.1885" }
%"class.std::__1::map.1885" = type { %"class.std::__1::__tree.1886" }
%"class.std::__1::__tree.1886" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1887", %"class.std::__1::__compressed_pair.1891" }
%"class.std::__1::__compressed_pair.1887" = type { %"struct.std::__1::__compressed_pair_elem.1561" }
%"class.std::__1::__compressed_pair.1891" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.1896"*, i64 }
%"class.std::__1::unique_ptr.1896" = type opaque
%"class.std::__1::map.1897" = type { %"class.std::__1::__tree.1898" }
%"class.std::__1::__tree.1898" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1899", %"class.std::__1::__compressed_pair.1903" }
%"class.std::__1::__compressed_pair.1899" = type { %"struct.std::__1::__compressed_pair_elem.1561" }
%"class.std::__1::__compressed_pair.1903" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.1906" = type { %"class.std::__1::__compressed_pair.1907" }
%"class.std::__1::__compressed_pair.1907" = type { %"struct.std::__1::__compressed_pair_elem.1908" }
%"struct.std::__1::__compressed_pair_elem.1908" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.1914" = type { %"class.blink::MemberBase.1915" }
%"class.blink::MemberBase.1915" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.1804" = type { %"class.blink::MemberBase.1805" }
%"class.blink::MemberBase.1805" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.1775" = type { %"class.blink::MemberBase.1776" }
%"class.blink::MemberBase.1776" = type { %"class.blink::Frame"* }
%"class.blink::Member.1916" = type { %"class.blink::MemberBase.1917" }
%"class.blink::MemberBase.1917" = type { %"class.blink::LocalFrame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.1775", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.1918" }
%"class.base::internal::flat_tree.1918" = type { %"class.std::__1::vector.1919" }
%"class.std::__1::vector.1919" = type { %"class.std::__1::__vector_base.1920" }
%"class.std::__1::__vector_base.1920" = type { %"struct.std::__1::pair.1921"*, %"struct.std::__1::pair.1921"*, %"class.std::__1::__compressed_pair.1922" }
%"struct.std::__1::pair.1921" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1922" = type { %"struct.std::__1::__compressed_pair_elem.1923" }
%"struct.std::__1::__compressed_pair_elem.1923" = type { %"struct.std::__1::pair.1921"* }
%"class.blink::Member.1927" = type { %"class.blink::MemberBase.1928" }
%"class.blink::MemberBase.1928" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.1929" = type { %"class.absl::optional_internal::optional_data.1930" }
%"class.absl::optional_internal::optional_data.1930" = type { %"class.absl::optional_internal::optional_data_base.1931" }
%"class.absl::optional_internal::optional_data_base.1931" = type { %"class.absl::optional_internal::optional_data_dtor_base.1932" }
%"class.absl::optional_internal::optional_data_dtor_base.1932" = type { i8, %union.anon.1933 }
%union.anon.1933 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1939" }
%"class.blink::HeapHashSet.1939" = type { %"class.WTF::HashSet.1942" }
%"class.WTF::HashSet.1942" = type { %"class.WTF::HashTable.1943" }
%"class.WTF::HashTable.1943" = type <{ %"class.blink::WeakMember.1945"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1945" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1946" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1947" }
%"class.blink::HeapHashMap.1947" = type { %"class.WTF::HashMap.1950" }
%"class.WTF::HashMap.1950" = type { %"class.WTF::HashTable.1951" }
%"class.WTF::HashTable.1951" = type <{ %"struct.WTF::KeyValuePair.1953"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1953" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1954" = type { %"class.std::__1::__compressed_pair.1955" }
%"class.std::__1::__compressed_pair.1955" = type { %"struct.std::__1::__compressed_pair_elem.1956" }
%"struct.std::__1::__compressed_pair_elem.1956" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.1957", %"class.base::WeakPtrFactory.1962" }
%"class.WTF::HashMap.1957" = type { %"class.WTF::HashTable.1958" }
%"class.WTF::HashTable.1958" = type <{ %"struct.WTF::KeyValuePair.1961"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1961" = type opaque
%"class.base::WeakPtrFactory.1962" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1966" }
%"class.blink::Member.1966" = type { %"class.blink::MemberBase.1967" }
%"class.blink::MemberBase.1967" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.3191" }
%"class.blink::WeakMember.3191" = type { %"class.blink::MemberBase.3192" }
%"class.blink::MemberBase.3192" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.3243", i64, %"class.std::__1::map.3244", i8*, i64, %"class.base::WeakPtrFactory.3253" }
%"class.base::RepeatingCallback.3243" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.3244" = type { %"class.std::__1::__tree.3245" }
%"class.std::__1::__tree.3245" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3246", %"class.std::__1::__compressed_pair.3250" }
%"class.std::__1::__compressed_pair.3246" = type { %"struct.std::__1::__compressed_pair_elem.1561" }
%"class.std::__1::__compressed_pair.3250" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::WeakPtrFactory.3253" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1968" = type { %"class.WTF::HashSet.1971" }
%"class.WTF::HashSet.1971" = type { %"class.WTF::HashTable.1972" }
%"class.WTF::HashTable.1972" = type <{ %"class.blink::WeakMember.1974"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1974" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1916", %"class.blink::Member.1975", %"class.blink::Member.1977", %"class.std::__1::unique_ptr.1979", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1985" }
%"class.blink::Member.1975" = type { %"class.blink::MemberBase.1976" }
%"class.blink::MemberBase.1976" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1977" = type { %"class.blink::MemberBase.1978" }
%"class.blink::MemberBase.1978" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.1979" = type { %"class.std::__1::__compressed_pair.1980" }
%"class.std::__1::__compressed_pair.1980" = type { %"struct.std::__1::__compressed_pair_elem.1981" }
%"struct.std::__1::__compressed_pair_elem.1981" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.WTF::HashSet.1985" = type { %"class.WTF::HashTable.1986" }
%"class.WTF::HashTable.1986" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1989" = type { %"class.blink::MemberBase.1990" }
%"class.blink::MemberBase.1990" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.2433", %"class.blink::Member.1916", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.2438", i8, i32, %"class.blink::Color", %"class.absl::optional.2440", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.2445", %"class.blink::Member.2447", %"class.blink::Member.2447", %"class.std::__1::unique_ptr.2450", i32, [4 x i8], %"class.WTF::HashSet.2453", %"class.blink::Member.2460", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2462", %"class.blink::HeapHashSet.2469", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.2477", i8, %"class.blink::Member.2483", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.2495", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.2509", i8, %"class.std::__1::unique_ptr.2515", %"class.std::__1::unique_ptr.2596", %"class.WTF::Vector.2602", i32, %class.scoped_refptr.2607, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2608", %"class.blink::Member.2610", %"class.blink::Member.2612", %"class.blink::HeapHashSet.2614", %"class.blink::HeapHashSet.2621", %"class.std::__1::unique_ptr.2628", %"class.std::__1::unique_ptr.2635", %"class.WTF::Vector.906" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.2433" = type { %"class.WTF::HashTable.2434" }
%"class.WTF::HashTable.2434" = type <{ %class.scoped_refptr.2437*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.2437 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.2438" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2439", { i64, i64 } }
%"class.blink::WeakMember.2439" = type { %"class.blink::MemberBase.1990" }
%"class.absl::optional.2440" = type { %"class.absl::optional_internal::optional_data.2441" }
%"class.absl::optional_internal::optional_data.2441" = type { %"class.absl::optional_internal::optional_data_base.2442" }
%"class.absl::optional_internal::optional_data_base.2442" = type { %"class.absl::optional_internal::optional_data_dtor_base.2443" }
%"class.absl::optional_internal::optional_data_dtor_base.2443" = type { i8, %union.anon.2444 }
%union.anon.2444 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.2445" = type { %"class.blink::MemberBase.2446" }
%"class.blink::MemberBase.2446" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.2447" = type { %"class.blink::MemberBase.2448" }
%"class.blink::MemberBase.2448" = type { %"class.blink::HeapHashSet.2449"* }
%"class.blink::HeapHashSet.2449" = type opaque
%"class.std::__1::unique_ptr.2450" = type { %"class.std::__1::__compressed_pair.2451" }
%"class.std::__1::__compressed_pair.2451" = type { %"struct.std::__1::__compressed_pair_elem.2452" }
%"struct.std::__1::__compressed_pair_elem.2452" = type { %"class.WTF::HashSet.2453"* }
%"class.WTF::HashSet.2453" = type { %"class.WTF::HashTable.2454" }
%"class.WTF::HashTable.2454" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::Member.2460" = type { %"class.blink::MemberBase.2461" }
%"class.blink::MemberBase.2461" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.2462" = type { %"class.WTF::HashSet.2465" }
%"class.WTF::HashSet.2465" = type { %"class.WTF::HashTable.2466" }
%"class.WTF::HashTable.2466" = type <{ %"class.blink::Member.2468"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2468" = type opaque
%"class.blink::HeapHashSet.2469" = type { %"class.WTF::HashSet.2472" }
%"class.WTF::HashSet.2472" = type { %"class.WTF::HashTable.2473" }
%"class.WTF::HashTable.2473" = type <{ %"class.blink::Member.2475"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2475" = type { %"class.blink::MemberBase.2476" }
%"class.blink::MemberBase.2476" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2648", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2658", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.2648" = type { %"class.blink::MemberBase.2649" }
%"class.blink::MemberBase.2649" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.2650", %"class.blink::Member.2652", %"class.blink::Member.2654", %"class.blink::Member.2656", %"class.WTF::Vector.906", i16, %class.scoped_refptr.963 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.2650" = type { %"class.blink::MemberBase.2651" }
%"class.blink::MemberBase.2651" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.2652" = type { %"class.blink::MemberBase.2653" }
%"class.blink::MemberBase.2653" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.2654" = type { %"class.blink::MemberBase.2655" }
%"class.blink::MemberBase.2655" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.2656" = type { %"class.blink::MemberBase.2657" }
%"class.blink::MemberBase.2657" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.2658" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2659", { i64, i64 } }
%"class.blink::WeakMember.2659" = type { %"class.blink::MemberBase.2476" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.2477" = type { %"class.std::__1::__compressed_pair.2478" }
%"class.std::__1::__compressed_pair.2478" = type { %"struct.std::__1::__compressed_pair_elem.2479" }
%"struct.std::__1::__compressed_pair_elem.2479" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.2483" = type { %"class.blink::MemberBase.2484" }
%"class.blink::MemberBase.2484" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.2487", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.2487" = type { %"class.WTF::HashTable.2488" }
%"class.WTF::HashTable.2488" = type <{ %"struct.WTF::KeyValuePair.2490"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2490" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.2491", i32, i32 }
%"class.WTF::Vector.2491" = type { %"class.WTF::VectorBuffer.2492" }
%"class.WTF::VectorBuffer.2492" = type { %"class.WTF::VectorBufferBase.2493" }
%"class.WTF::VectorBufferBase.2493" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.2495" = type { %"class.WTF::LinkedHashSet.2498" }
%"class.WTF::LinkedHashSet.2498" = type { %"class.WTF::HashMap.2499", %"class.WTF::VectorBackedLinkedList.2503" }
%"class.WTF::HashMap.2499" = type { %"class.WTF::HashTable.2500" }
%"class.WTF::HashTable.2500" = type <{ %"struct.WTF::KeyValuePair.2502"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2502" = type opaque
%"class.WTF::VectorBackedLinkedList.2503" = type { %"class.WTF::Vector.2504", i32, i32 }
%"class.WTF::Vector.2504" = type { %"class.WTF::VectorBuffer.2505" }
%"class.WTF::VectorBuffer.2505" = type { %"class.WTF::VectorBufferBase.2506" }
%"class.WTF::VectorBufferBase.2506" = type { %"class.WTF::VectorBackedLinkedListNode.2507"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2507" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2509" = type { %"class.std::__1::__compressed_pair.2510" }
%"class.std::__1::__compressed_pair.2510" = type { %"struct.std::__1::__compressed_pair_elem.2511" }
%"struct.std::__1::__compressed_pair_elem.2511" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.2515" = type { %"class.std::__1::__compressed_pair.2516" }
%"class.std::__1::__compressed_pair.2516" = type { %"struct.std::__1::__compressed_pair_elem.2517" }
%"struct.std::__1::__compressed_pair_elem.2517" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.2518, %class.scoped_refptr.2518, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2573", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2578", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.2518 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.2519", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.2526" }
%"class.WTF::RefCounted.2519" = type { %"class.base::RefCounted.2520" }
%"class.base::RefCounted.2520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.2521", i32, [4 x i8] }>
%"class.WTF::Vector.2521" = type { %"class.WTF::VectorBuffer.2522" }
%"class.WTF::VectorBuffer.2522" = type { %"class.WTF::VectorBufferBase.2523" }
%"class.WTF::VectorBufferBase.2523" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.2526" = type { %"class.WTF::VectorBuffer.2527" }
%"class.WTF::VectorBuffer.2527" = type { %"class.WTF::VectorBufferBase.2528" }
%"class.WTF::VectorBufferBase.2528" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.2529", %"class.std::__1::unique_ptr.2545", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2529" = type { %"class.std::__1::__compressed_pair.2530" }
%"class.std::__1::__compressed_pair.2530" = type { %"struct.std::__1::__compressed_pair_elem.2531" }
%"struct.std::__1::__compressed_pair_elem.2531" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2532", %"class.WTF::Vector.2537", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2532" = type { %"class.WTF::VectorBuffer.2533" }
%"class.WTF::VectorBuffer.2533" = type { %"class.WTF::VectorBufferBase.2534" }
%"class.WTF::VectorBufferBase.2534" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.2537" = type { %"class.WTF::VectorBuffer.2538" }
%"class.WTF::VectorBuffer.2538" = type { %"class.WTF::VectorBufferBase.2539" }
%"class.WTF::VectorBufferBase.2539" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.std::__1::unique_ptr.2545" = type { %"class.std::__1::__compressed_pair.2546" }
%"class.std::__1::__compressed_pair.2546" = type { %"struct.std::__1::__compressed_pair_elem.2547" }
%"struct.std::__1::__compressed_pair_elem.2547" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2548", %"class.absl::optional.2548" }
%"class.absl::optional.2548" = type { %"class.absl::optional_internal::optional_data.2549" }
%"class.absl::optional_internal::optional_data.2549" = type { %"class.absl::optional_internal::optional_data_base.2550" }
%"class.absl::optional_internal::optional_data_base.2550" = type { %"class.absl::optional_internal::optional_data_dtor_base.2551" }
%"class.absl::optional_internal::optional_data_dtor_base.2551" = type { i8, [3 x i8], %union.anon.2552 }
%union.anon.2552 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.2526"*, %"class.absl::optional.2558", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2558" = type { %"class.absl::optional_internal::optional_data.2559" }
%"class.absl::optional_internal::optional_data.2559" = type { %"class.absl::optional_internal::optional_data_base.2560" }
%"class.absl::optional_internal::optional_data_base.2560" = type { %"class.absl::optional_internal::optional_data_dtor_base.2561" }
%"class.absl::optional_internal::optional_data_dtor_base.2561" = type { i8, %union.anon.2562 }
%union.anon.2562 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2563", %"class.WTF::Vector.2568" }
%"class.WTF::Vector.2563" = type { %"class.WTF::VectorBuffer.2564" }
%"class.WTF::VectorBuffer.2564" = type { %"class.WTF::VectorBufferBase.2565", [128 x i8] }
%"class.WTF::VectorBufferBase.2565" = type { i32*, i32, i32 }
%"class.WTF::Vector.2568" = type { %"class.WTF::VectorBuffer.2569" }
%"class.WTF::VectorBuffer.2569" = type { %"class.WTF::VectorBufferBase.2570", [128 x i8] }
%"class.WTF::VectorBufferBase.2570" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2573" = type { %"class.WTF::VectorBuffer.2574" }
%"class.WTF::VectorBuffer.2574" = type { %"class.WTF::VectorBufferBase.2575" }
%"class.WTF::VectorBufferBase.2575" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2578" = type { %"class.WTF::HashTable.2579" }
%"class.WTF::HashTable.2579" = type <{ %"struct.WTF::KeyValuePair.2582"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2582" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2583", %"class.WTF::Vector.2588" }
%"class.WTF::HashMap.2583" = type { %"class.WTF::HashTable.2584" }
%"class.WTF::HashTable.2584" = type <{ %"struct.WTF::KeyValuePair.2587"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2587" = type opaque
%"class.WTF::Vector.2588" = type { %"class.WTF::VectorBuffer.2589" }
%"class.WTF::VectorBuffer.2589" = type { %"class.WTF::VectorBufferBase.2590" }
%"class.WTF::VectorBufferBase.2590" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2596" = type { %"class.std::__1::__compressed_pair.2597" }
%"class.std::__1::__compressed_pair.2597" = type { %"struct.std::__1::__compressed_pair_elem.2598" }
%"struct.std::__1::__compressed_pair_elem.2598" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2602" = type { %"class.WTF::VectorBuffer.2603" }
%"class.WTF::VectorBuffer.2603" = type { %"class.WTF::VectorBufferBase.2604" }
%"class.WTF::VectorBufferBase.2604" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2607 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2608" = type { %"class.blink::MemberBase.2609" }
%"class.blink::MemberBase.2609" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2610" = type { %"class.blink::MemberBase.2611" }
%"class.blink::MemberBase.2611" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2612" = type { %"class.blink::MemberBase.2613" }
%"class.blink::MemberBase.2613" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2614" = type { %"class.WTF::HashSet.2617" }
%"class.WTF::HashSet.2617" = type { %"class.WTF::HashTable.2618" }
%"class.WTF::HashTable.2618" = type <{ %"class.blink::WeakMember.2620"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2620" = type opaque
%"class.blink::HeapHashSet.2621" = type { %"class.WTF::HashSet.2624" }
%"class.WTF::HashSet.2624" = type { %"class.WTF::HashTable.2625" }
%"class.WTF::HashTable.2625" = type <{ %"class.blink::WeakMember.2627"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2627" = type opaque
%"class.std::__1::unique_ptr.2628" = type { %"class.std::__1::__compressed_pair.2629" }
%"class.std::__1::__compressed_pair.2629" = type { %"struct.std::__1::__compressed_pair_elem.2630" }
%"struct.std::__1::__compressed_pair_elem.2630" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2631" }
%"class.base::time_internal::TimeBase.2631" = type { i64 }
%"class.std::__1::unique_ptr.2635" = type { %"class.std::__1::__compressed_pair.2636" }
%"class.std::__1::__compressed_pair.2636" = type { %"struct.std::__1::__compressed_pair_elem.2637" }
%"struct.std::__1::__compressed_pair_elem.2637" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2638", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.2638" = type { %"class.absl::optional_internal::optional_data.2639" }
%"class.absl::optional_internal::optional_data.2639" = type { %"class.absl::optional_internal::optional_data_base.2640" }
%"class.absl::optional_internal::optional_data_base.2640" = type { %"class.absl::optional_internal::optional_data_dtor_base.2641" }
%"class.absl::optional_internal::optional_data_dtor_base.2641" = type { i8, %union.anon.2642 }
%union.anon.2642 = type { %"class.base::Time" }
%"class.blink::Member.1991" = type { %"class.blink::MemberBase.1992" }
%"class.blink::MemberBase.1992" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type <{ %"class.blink::Member.1916", %"class.blink::Member.1995", %"class.blink::Member.1997", i32, i8, i8, [2 x i8], %"class.std::__1::unique_ptr.1999", %"class.blink::VisibleSelectionTemplate", i8, [3 x i8], i32, %"class.blink::Member.2005", i8, [7 x i8] }>
%"class.blink::Member.1995" = type { %"class.blink::MemberBase.1996" }
%"class.blink::MemberBase.1996" = type { %"class.blink::CompositeEditCommand"* }
%"class.blink::CompositeEditCommand" = type opaque
%"class.blink::Member.1997" = type { %"class.blink::MemberBase.1998" }
%"class.blink::MemberBase.1998" = type { %"class.blink::UndoStack"* }
%"class.blink::UndoStack" = type opaque
%"class.std::__1::unique_ptr.1999" = type { %"class.std::__1::__compressed_pair.2000" }
%"class.std::__1::__compressed_pair.2000" = type { %"struct.std::__1::__compressed_pair_elem.2001" }
%"struct.std::__1::__compressed_pair_elem.2001" = type { %"class.blink::KillRing"* }
%"class.blink::KillRing" = type opaque
%"class.blink::VisibleSelectionTemplate" = type <{ %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i8, [3 x i8] }>
%"class.blink::PositionTemplate" = type { %"class.blink::Member.318", i32, i32 }
%"class.blink::Member.2005" = type { %"class.blink::MemberBase.2006" }
%"class.blink::MemberBase.2006" = type { %"class.blink::EditingStyle"* }
%"class.blink::EditingStyle" = type <{ %"class.blink::Member.2009", %"class.blink::Member.318", i8, [3 x i8], float, i8, [7 x i8] }>
%"class.blink::Member.2009" = type { %"class.blink::MemberBase.2010" }
%"class.blink::MemberBase.2010" = type { %"class.blink::MutableCSSPropertyValueSet"* }
%"class.blink::MutableCSSPropertyValueSet" = type <{ %"class.blink::CSSPropertyValueSet", [4 x i8], %"class.blink::Member.2011", %"class.blink::HeapVector.2013", i8, [7 x i8] }>
%"class.blink::Member.2011" = type { %"class.blink::MemberBase.2012" }
%"class.blink::MemberBase.2012" = type { %"class.blink::PropertySetCSSStyleDeclaration"* }
%"class.blink::PropertySetCSSStyleDeclaration" = type { %"class.blink::AbstractPropertySetCSSStyleDeclaration", %"class.blink::Member.2009" }
%"class.blink::AbstractPropertySetCSSStyleDeclaration" = type { %"class.blink::CSSStyleDeclaration" }
%"class.blink::CSSStyleDeclaration" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2430" }
%"class.blink::WeakMember.2430" = type { %"class.blink::MemberBase.916" }
%"class.blink::HeapVector.2013" = type { %"class.WTF::Vector.2016" }
%"class.WTF::Vector.2016" = type { %"class.WTF::VectorBuffer.2017" }
%"class.WTF::VectorBuffer.2017" = type { %"class.WTF::VectorBufferBase.2018", [96 x i8] }
%"class.WTF::VectorBufferBase.2018" = type { %"class.blink::CSSPropertyValue"*, i32, i32 }
%"class.blink::CSSPropertyValue" = type { %"struct.blink::CSSPropertyValueMetadata", %"class.blink::Member.1215" }
%"struct.blink::CSSPropertyValueMetadata" = type <{ %"class.WTF::AtomicString", i16, [6 x i8] }>
%"class.blink::Member.2021" = type { %"class.blink::MemberBase.2022" }
%"class.blink::MemberBase.2022" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type { %"class.blink::SynchronousMutationObserver", %"class.blink::Member.1916", %"class.blink::Member.2025", %"class.blink::Member.2027", i32, %"class.blink::LayoutUnit", i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.2029", %"class.blink::Member.2035" }
%"class.blink::SynchronousMutationObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.966" }
%"class.blink::Member.2025" = type { %"class.blink::MemberBase.2026" }
%"class.blink::MemberBase.2026" = type { %"class.blink::LayoutSelection"* }
%"class.blink::LayoutSelection" = type opaque
%"class.blink::Member.2027" = type { %"class.blink::MemberBase.2028" }
%"class.blink::MemberBase.2028" = type { %"class.blink::SelectionEditor"* }
%"class.blink::SelectionEditor" = type opaque
%"class.std::__1::unique_ptr.2029" = type { %"class.std::__1::__compressed_pair.2030" }
%"class.std::__1::__compressed_pair.2030" = type { %"struct.std::__1::__compressed_pair_elem.2031" }
%"struct.std::__1::__compressed_pair_elem.2031" = type { %"class.blink::GranularityStrategy"* }
%"class.blink::GranularityStrategy" = type opaque
%"class.blink::Member.2035" = type { %"class.blink::MemberBase.2036" }
%"class.blink::MemberBase.2036" = type { %"class.blink::FrameCaret"* }
%"class.blink::FrameCaret" = type opaque
%"class.blink::Member.2037" = type { %"class.blink::MemberBase.2038" }
%"class.blink::MemberBase.2038" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.2039" = type { %"class.blink::MemberBase.2040" }
%"class.blink::MemberBase.2040" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.2041" = type { %"class.blink::MemberBase.2042" }
%"class.blink::MemberBase.2042" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet.2045", %"class.blink::HeapListHashSet.2056", %"class.blink::HeapListHashSet.2067", %"class.blink::HeapListHashSet.2078", %"class.blink::HeapListHashSet.2089", %"class.blink::HeapListHashSet.2100", %"class.blink::HeapListHashSet.2111", %"class.blink::HeapListHashSet.2122", %"class.blink::HeapListHashSet.2133", %"class.blink::HeapListHashSet.2144", %"class.blink::HeapListHashSet.2155", %"class.blink::HeapListHashSet.2166", %"class.blink::HeapListHashSet.2177", %"class.blink::HeapListHashSet.2188", %"class.blink::HeapListHashSet.2199", %"class.blink::HeapListHashSet.2210", %"class.blink::HeapListHashSet.2221", %"class.blink::HeapListHashSet.2232", %"class.blink::HeapListHashSet.2243", %"class.blink::HeapListHashSet.2254" }
%"class.blink::HeapListHashSet.2045" = type { %"class.WTF::ListHashSet.base.2055", [7 x i8] }
%"class.WTF::ListHashSet.base.2055" = type <{ %"class.WTF::HashTable.2050", %"class.blink::Member.2052", %"class.blink::Member.2052", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2050" = type <{ %"class.blink::Member.2052"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2052" = type { %"class.blink::MemberBase.2053" }
%"class.blink::MemberBase.2053" = type { %"class.blink::HeapListHashSetNode.2054"* }
%"class.blink::HeapListHashSetNode.2054" = type { %"class.blink::Member.2268", %"class.blink::Member.2052", %"class.blink::Member.2052" }
%"class.blink::HeapListHashSet.2056" = type { %"class.WTF::ListHashSet.base.2066", [7 x i8] }
%"class.WTF::ListHashSet.base.2066" = type <{ %"class.WTF::HashTable.2061", %"class.blink::Member.2063", %"class.blink::Member.2063", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2061" = type <{ %"class.blink::Member.2063"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2063" = type { %"class.blink::MemberBase.2064" }
%"class.blink::MemberBase.2064" = type { %"class.blink::HeapListHashSetNode.2065"* }
%"class.blink::HeapListHashSetNode.2065" = type { %"class.blink::Member.2426", %"class.blink::Member.2063", %"class.blink::Member.2063" }
%"class.blink::Member.2426" = type { %"class.blink::MemberBase.2427" }
%"class.blink::MemberBase.2427" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.2067" = type { %"class.WTF::ListHashSet.base.2077", [7 x i8] }
%"class.WTF::ListHashSet.base.2077" = type <{ %"class.WTF::HashTable.2072", %"class.blink::Member.2074", %"class.blink::Member.2074", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2072" = type <{ %"class.blink::Member.2074"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2074" = type { %"class.blink::MemberBase.2075" }
%"class.blink::MemberBase.2075" = type { %"class.blink::HeapListHashSetNode.2076"* }
%"class.blink::HeapListHashSetNode.2076" = type { %"class.blink::Member.2422", %"class.blink::Member.2074", %"class.blink::Member.2074" }
%"class.blink::Member.2422" = type { %"class.blink::MemberBase.2423" }
%"class.blink::MemberBase.2423" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.2078" = type { %"class.WTF::ListHashSet.base.2088", [7 x i8] }
%"class.WTF::ListHashSet.base.2088" = type <{ %"class.WTF::HashTable.2083", %"class.blink::Member.2085", %"class.blink::Member.2085", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2083" = type <{ %"class.blink::Member.2085"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2085" = type { %"class.blink::MemberBase.2086" }
%"class.blink::MemberBase.2086" = type { %"class.blink::HeapListHashSetNode.2087"* }
%"class.blink::HeapListHashSetNode.2087" = type { %"class.blink::Member.2418", %"class.blink::Member.2085", %"class.blink::Member.2085" }
%"class.blink::Member.2418" = type { %"class.blink::MemberBase.2419" }
%"class.blink::MemberBase.2419" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.2089" = type { %"class.WTF::ListHashSet.base.2099", [7 x i8] }
%"class.WTF::ListHashSet.base.2099" = type <{ %"class.WTF::HashTable.2094", %"class.blink::Member.2096", %"class.blink::Member.2096", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2094" = type <{ %"class.blink::Member.2096"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2096" = type { %"class.blink::MemberBase.2097" }
%"class.blink::MemberBase.2097" = type { %"class.blink::HeapListHashSetNode.2098"* }
%"class.blink::HeapListHashSetNode.2098" = type { %"class.blink::Member.2414", %"class.blink::Member.2096", %"class.blink::Member.2096" }
%"class.blink::Member.2414" = type { %"class.blink::MemberBase.2415" }
%"class.blink::MemberBase.2415" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.2100" = type { %"class.WTF::ListHashSet.base.2110", [7 x i8] }
%"class.WTF::ListHashSet.base.2110" = type <{ %"class.WTF::HashTable.2105", %"class.blink::Member.2107", %"class.blink::Member.2107", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2105" = type <{ %"class.blink::Member.2107"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2107" = type { %"class.blink::MemberBase.2108" }
%"class.blink::MemberBase.2108" = type { %"class.blink::HeapListHashSetNode.2109"* }
%"class.blink::HeapListHashSetNode.2109" = type { %"class.blink::Member.2410", %"class.blink::Member.2107", %"class.blink::Member.2107" }
%"class.blink::Member.2410" = type { %"class.blink::MemberBase.2411" }
%"class.blink::MemberBase.2411" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.2111" = type { %"class.WTF::ListHashSet.base.2121", [7 x i8] }
%"class.WTF::ListHashSet.base.2121" = type <{ %"class.WTF::HashTable.2116", %"class.blink::Member.2118", %"class.blink::Member.2118", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2116" = type <{ %"class.blink::Member.2118"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2118" = type { %"class.blink::MemberBase.2119" }
%"class.blink::MemberBase.2119" = type { %"class.blink::HeapListHashSetNode.2120"* }
%"class.blink::HeapListHashSetNode.2120" = type { %"class.blink::Member.2406", %"class.blink::Member.2118", %"class.blink::Member.2118" }
%"class.blink::Member.2406" = type { %"class.blink::MemberBase.2407" }
%"class.blink::MemberBase.2407" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.2122" = type { %"class.WTF::ListHashSet.base.2132", [7 x i8] }
%"class.WTF::ListHashSet.base.2132" = type <{ %"class.WTF::HashTable.2127", %"class.blink::Member.2129", %"class.blink::Member.2129", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2127" = type <{ %"class.blink::Member.2129"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2129" = type { %"class.blink::MemberBase.2130" }
%"class.blink::MemberBase.2130" = type { %"class.blink::HeapListHashSetNode.2131"* }
%"class.blink::HeapListHashSetNode.2131" = type { %"class.blink::Member.2402", %"class.blink::Member.2129", %"class.blink::Member.2129" }
%"class.blink::Member.2402" = type { %"class.blink::MemberBase.2403" }
%"class.blink::MemberBase.2403" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.2133" = type { %"class.WTF::ListHashSet.base.2143", [7 x i8] }
%"class.WTF::ListHashSet.base.2143" = type <{ %"class.WTF::HashTable.2138", %"class.blink::Member.2140", %"class.blink::Member.2140", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2138" = type <{ %"class.blink::Member.2140"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2140" = type { %"class.blink::MemberBase.2141" }
%"class.blink::MemberBase.2141" = type { %"class.blink::HeapListHashSetNode.2142"* }
%"class.blink::HeapListHashSetNode.2142" = type { %"class.blink::Member.2398", %"class.blink::Member.2140", %"class.blink::Member.2140" }
%"class.blink::Member.2398" = type { %"class.blink::MemberBase.2399" }
%"class.blink::MemberBase.2399" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.2144" = type { %"class.WTF::ListHashSet.base.2154", [7 x i8] }
%"class.WTF::ListHashSet.base.2154" = type <{ %"class.WTF::HashTable.2149", %"class.blink::Member.2151", %"class.blink::Member.2151", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2149" = type <{ %"class.blink::Member.2151"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2151" = type { %"class.blink::MemberBase.2152" }
%"class.blink::MemberBase.2152" = type { %"class.blink::HeapListHashSetNode.2153"* }
%"class.blink::HeapListHashSetNode.2153" = type { %"class.blink::Member.2394", %"class.blink::Member.2151", %"class.blink::Member.2151" }
%"class.blink::Member.2394" = type { %"class.blink::MemberBase.2395" }
%"class.blink::MemberBase.2395" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.2155" = type { %"class.WTF::ListHashSet.base.2165", [7 x i8] }
%"class.WTF::ListHashSet.base.2165" = type <{ %"class.WTF::HashTable.2160", %"class.blink::Member.2162", %"class.blink::Member.2162", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2160" = type <{ %"class.blink::Member.2162"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2162" = type { %"class.blink::MemberBase.2163" }
%"class.blink::MemberBase.2163" = type { %"class.blink::HeapListHashSetNode.2164"* }
%"class.blink::HeapListHashSetNode.2164" = type { %"class.blink::Member.2272", %"class.blink::Member.2162", %"class.blink::Member.2162" }
%"class.blink::HeapListHashSet.2166" = type { %"class.WTF::ListHashSet.base.2176", [7 x i8] }
%"class.WTF::ListHashSet.base.2176" = type <{ %"class.WTF::HashTable.2171", %"class.blink::Member.2173", %"class.blink::Member.2173", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2171" = type <{ %"class.blink::Member.2173"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2173" = type { %"class.blink::MemberBase.2174" }
%"class.blink::MemberBase.2174" = type { %"class.blink::HeapListHashSetNode.2175"* }
%"class.blink::HeapListHashSetNode.2175" = type { %"class.blink::Member.2388", %"class.blink::Member.2173", %"class.blink::Member.2173" }
%"class.blink::Member.2388" = type { %"class.blink::MemberBase.2389" }
%"class.blink::MemberBase.2389" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.2177" = type { %"class.WTF::ListHashSet.base.2187", [7 x i8] }
%"class.WTF::ListHashSet.base.2187" = type <{ %"class.WTF::HashTable.2182", %"class.blink::Member.2184", %"class.blink::Member.2184", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2182" = type <{ %"class.blink::Member.2184"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2184" = type { %"class.blink::MemberBase.2185" }
%"class.blink::MemberBase.2185" = type { %"class.blink::HeapListHashSetNode.2186"* }
%"class.blink::HeapListHashSetNode.2186" = type { %"class.blink::Member.2384", %"class.blink::Member.2184", %"class.blink::Member.2184" }
%"class.blink::Member.2384" = type { %"class.blink::MemberBase.2385" }
%"class.blink::MemberBase.2385" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.2188" = type { %"class.WTF::ListHashSet.base.2198", [7 x i8] }
%"class.WTF::ListHashSet.base.2198" = type <{ %"class.WTF::HashTable.2193", %"class.blink::Member.2195", %"class.blink::Member.2195", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2193" = type <{ %"class.blink::Member.2195"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2195" = type { %"class.blink::MemberBase.2196" }
%"class.blink::MemberBase.2196" = type { %"class.blink::HeapListHashSetNode.2197"* }
%"class.blink::HeapListHashSetNode.2197" = type { %"class.blink::Member.2380", %"class.blink::Member.2195", %"class.blink::Member.2195" }
%"class.blink::Member.2380" = type { %"class.blink::MemberBase.2381" }
%"class.blink::MemberBase.2381" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.2199" = type { %"class.WTF::ListHashSet.base.2209", [7 x i8] }
%"class.WTF::ListHashSet.base.2209" = type <{ %"class.WTF::HashTable.2204", %"class.blink::Member.2206", %"class.blink::Member.2206", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2204" = type <{ %"class.blink::Member.2206"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2206" = type { %"class.blink::MemberBase.2207" }
%"class.blink::MemberBase.2207" = type { %"class.blink::HeapListHashSetNode.2208"* }
%"class.blink::HeapListHashSetNode.2208" = type { %"class.blink::Member.2376", %"class.blink::Member.2206", %"class.blink::Member.2206" }
%"class.blink::Member.2376" = type { %"class.blink::MemberBase.2377" }
%"class.blink::MemberBase.2377" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.2210" = type { %"class.WTF::ListHashSet.base.2220", [7 x i8] }
%"class.WTF::ListHashSet.base.2220" = type <{ %"class.WTF::HashTable.2215", %"class.blink::Member.2217", %"class.blink::Member.2217", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2215" = type <{ %"class.blink::Member.2217"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2217" = type { %"class.blink::MemberBase.2218" }
%"class.blink::MemberBase.2218" = type { %"class.blink::HeapListHashSetNode.2219"* }
%"class.blink::HeapListHashSetNode.2219" = type { %"class.blink::Member.2372", %"class.blink::Member.2217", %"class.blink::Member.2217" }
%"class.blink::Member.2372" = type { %"class.blink::MemberBase.2373" }
%"class.blink::MemberBase.2373" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.2221" = type { %"class.WTF::ListHashSet.base.2231", [7 x i8] }
%"class.WTF::ListHashSet.base.2231" = type <{ %"class.WTF::HashTable.2226", %"class.blink::Member.2228", %"class.blink::Member.2228", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2226" = type <{ %"class.blink::Member.2228"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2228" = type { %"class.blink::MemberBase.2229" }
%"class.blink::MemberBase.2229" = type { %"class.blink::HeapListHashSetNode.2230"* }
%"class.blink::HeapListHashSetNode.2230" = type { %"class.blink::Member.2368", %"class.blink::Member.2228", %"class.blink::Member.2228" }
%"class.blink::Member.2368" = type { %"class.blink::MemberBase.2369" }
%"class.blink::MemberBase.2369" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.2232" = type { %"class.WTF::ListHashSet.base.2242", [7 x i8] }
%"class.WTF::ListHashSet.base.2242" = type <{ %"class.WTF::HashTable.2237", %"class.blink::Member.2239", %"class.blink::Member.2239", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2237" = type <{ %"class.blink::Member.2239"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2239" = type { %"class.blink::MemberBase.2240" }
%"class.blink::MemberBase.2240" = type { %"class.blink::HeapListHashSetNode.2241"* }
%"class.blink::HeapListHashSetNode.2241" = type { %"class.blink::Member.2364", %"class.blink::Member.2239", %"class.blink::Member.2239" }
%"class.blink::Member.2364" = type { %"class.blink::MemberBase.2365" }
%"class.blink::MemberBase.2365" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.2243" = type { %"class.WTF::ListHashSet.base.2253", [7 x i8] }
%"class.WTF::ListHashSet.base.2253" = type <{ %"class.WTF::HashTable.2248", %"class.blink::Member.2250", %"class.blink::Member.2250", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2248" = type <{ %"class.blink::Member.2250"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2250" = type { %"class.blink::MemberBase.2251" }
%"class.blink::MemberBase.2251" = type { %"class.blink::HeapListHashSetNode.2252"* }
%"class.blink::HeapListHashSetNode.2252" = type { %"class.blink::Member.2274", %"class.blink::Member.2250", %"class.blink::Member.2250" }
%"class.blink::HeapListHashSet.2254" = type { %"class.WTF::ListHashSet.base.2264", [7 x i8] }
%"class.WTF::ListHashSet.base.2264" = type <{ %"class.WTF::HashTable.2259", %"class.blink::Member.2261", %"class.blink::Member.2261", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2259" = type <{ %"class.blink::Member.2261"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2261" = type { %"class.blink::MemberBase.2262" }
%"class.blink::MemberBase.2262" = type { %"class.blink::HeapListHashSetNode.2263"* }
%"class.blink::HeapListHashSetNode.2263" = type { %"class.blink::Member.2266", %"class.blink::Member.2261", %"class.blink::Member.2261" }
%class.scoped_refptr.2265 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.2266" = type { %"class.blink::MemberBase.2267" }
%"class.blink::MemberBase.2267" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.2268" = type { %"class.blink::MemberBase.2269" }
%"class.blink::MemberBase.2269" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.2270" = type { %"class.blink::MemberBase.2271" }
%"class.blink::MemberBase.2271" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.2272" = type { %"class.blink::MemberBase.2273" }
%"class.blink::MemberBase.2273" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.2274" = type { %"class.blink::MemberBase.2275" }
%"class.blink::MemberBase.2275" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.2278" = type { %"class.blink::MemberBase.2279" }
%"class.blink::MemberBase.2279" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2280" = type { %"class.blink::MemberBase.2281" }
%"class.blink::MemberBase.2281" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.2282" }
%"class.blink::Member.2282" = type { %"class.blink::MemberBase.2283" }
%"class.blink::MemberBase.2283" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.3256" }
%"class.mojo::Remote.3256" = type { %"class.mojo::internal::InterfacePtrState.3257" }
%"class.mojo::internal::InterfacePtrState.3257" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3258" }
%"class.std::__1::unique_ptr.3258" = type { %"class.std::__1::__compressed_pair.3259" }
%"class.std::__1::__compressed_pair.3259" = type { %"struct.std::__1::__compressed_pair_elem.3260" }
%"struct.std::__1::__compressed_pair_elem.3260" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2284" = type { %"class.std::__1::__compressed_pair.2285" }
%"class.std::__1::__compressed_pair.2285" = type { %"struct.std::__1::__compressed_pair_elem.2286" }
%"struct.std::__1::__compressed_pair_elem.2286" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.2287, %"class.blink::WebVector", %"class.base::WaitableEvent"* }
%class.scoped_refptr.2287 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.2288", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.2288" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.2289" }
%"class.std::__1::vector.2289" = type { %"class.std::__1::__vector_base.2290" }
%"class.std::__1::__vector_base.2290" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.2291" }
%"class.std::__1::__compressed_pair.2291" = type { %"struct.std::__1::__compressed_pair_elem.2292" }
%"struct.std::__1::__compressed_pair_elem.2292" = type { %"class.blink::WebString"* }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.2296, i8, [7 x i8] }>
%class.scoped_refptr.2296 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.2297", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.2297" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.2298" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.2298" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.2305" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2306" = type { %"class.std::__1::__compressed_pair.2307" }
%"class.std::__1::__compressed_pair.2307" = type { %"struct.std::__1::__compressed_pair_elem.2308" }
%"struct.std::__1::__compressed_pair_elem.2308" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.1934" = type { %"class.absl::optional_internal::optional_data.1935" }
%"class.absl::optional_internal::optional_data.1935" = type { %"class.absl::optional_internal::optional_data_base.1936" }
%"class.absl::optional_internal::optional_data_base.1936" = type { %"class.absl::optional_internal::optional_data_dtor_base.1937" }
%"class.absl::optional_internal::optional_data_dtor_base.1937" = type { i8, %union.anon.1938 }
%union.anon.1938 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.2312" = type { %"class.std::__1::__compressed_pair.2313" }
%"class.std::__1::__compressed_pair.2313" = type { %"struct.std::__1::__compressed_pair_elem.2314" }
%"struct.std::__1::__compressed_pair_elem.2314" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2318" }
%"class.blink::Member.2318" = type { %"class.blink::MemberBase.2319" }
%"class.blink::MemberBase.2319" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3266" }
%"class.mojo::AssociatedRemote.3266" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3267" }
%"class.mojo::internal::AssociatedInterfacePtrState.3267" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3268" }
%"class.std::__1::unique_ptr.3268" = type { %"class.std::__1::__compressed_pair.3269" }
%"class.std::__1::__compressed_pair.3269" = type { %"struct.std::__1::__compressed_pair_elem.3270" }
%"struct.std::__1::__compressed_pair_elem.3270" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2320" = type { %"class.blink::Member.2321" }
%"class.blink::Member.2321" = type { %"class.blink::MemberBase.2322" }
%"class.blink::MemberBase.2322" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3276" }
%"class.mojo::AssociatedRemote.3276" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3277" }
%"class.mojo::internal::AssociatedInterfacePtrState.3277" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3278" }
%"class.std::__1::unique_ptr.3278" = type { %"class.std::__1::__compressed_pair.3279" }
%"class.std::__1::__compressed_pair.3279" = type { %"struct.std::__1::__compressed_pair_elem.3280" }
%"struct.std::__1::__compressed_pair_elem.3280" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2323" }
%"class.blink::Member.2323" = type { %"class.blink::MemberBase.2324" }
%"class.blink::MemberBase.2324" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3286", %"class.blink::Member.1916", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3286" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.3287" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.1657" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.3287" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2325" = type { %"class.blink::Member.2326" }
%"class.blink::Member.2326" = type { %"class.blink::MemberBase.2327" }
%"class.blink::MemberBase.2327" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3290", %"class.blink::Member.1916", %"class.mojo::AssociatedReceiver.3291" }
%"class.blink::ThreadState::PrefinalizerRegistration.3290" = type { i8 }
%"class.mojo::AssociatedReceiver.3291" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.3292" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.3292" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2328" }
%"class.blink::Member.2328" = type { %"class.blink::MemberBase.2329" }
%"class.blink::MemberBase.2329" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3295", %"class.blink::Member.1916", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3295" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.1813, %"class.std::__1::unique_ptr.1657", %"class.base::WeakPtrFactory.3296" }
%"class.base::WeakPtrFactory.3296" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2330" = type { %"class.blink::Member.2331" }
%"class.blink::Member.2331" = type { %"class.blink::MemberBase.2332" }
%"class.blink::MemberBase.2332" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3299", %"class.blink::Member.1916", %"class.mojo::AssociatedReceiver.3300" }
%"class.blink::ThreadState::PrefinalizerRegistration.3299" = type { i8 }
%"class.mojo::AssociatedReceiver.3300" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.3301" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.3301" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2333" = type { %"class.blink::MemberBase.2334" }
%"class.blink::MemberBase.2334" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2335" = type { %"class.blink::MemberBase.2336" }
%"class.blink::MemberBase.2336" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2337" = type { %"class.blink::MemberBase.2338" }
%"class.blink::MemberBase.2338" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2339" = type { %"class.blink::MemberBase.2340" }
%"class.blink::MemberBase.2340" = type { %"class.blink::HeapHashMap.2341"* }
%"class.blink::HeapHashMap.2341" = type opaque
%"class.mojo::StructPtr.2342" = type { %"class.std::__1::unique_ptr.2343" }
%"class.std::__1::unique_ptr.2343" = type { %"class.std::__1::__compressed_pair.2344" }
%"class.std::__1::__compressed_pair.2344" = type { %"struct.std::__1::__compressed_pair_elem.2345" }
%"struct.std::__1::__compressed_pair_elem.2345" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2346", %"class.mojo::InlinedStructPtr.2347" }
%"class.mojo::InlinedStructPtr.2346" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.2347" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2351" = type { %"class.blink::MemberBase.2352" }
%"class.blink::MemberBase.2352" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.2353" = type { %"class.absl::optional_internal::optional_data.2354" }
%"class.absl::optional_internal::optional_data.2354" = type { %"class.absl::optional_internal::optional_data_base.2355" }
%"class.absl::optional_internal::optional_data_base.2355" = type { %"class.absl::optional_internal::optional_data_dtor_base.2356" }
%"class.absl::optional_internal::optional_data_dtor_base.2356" = type { i8, %union.anon.2357 }
%union.anon.2357 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::InputDeviceCapabilities" = type opaque
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.2788", %"class.blink::Member.2788", %"class.blink::Member.2790", %"class.blink::Member.2792", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.2783" }
%"class.absl::optional.2783" = type { %"class.absl::optional_internal::optional_data.2784" }
%"class.absl::optional_internal::optional_data.2784" = type { %"class.absl::optional_internal::optional_data_base.2785" }
%"class.absl::optional_internal::optional_data_base.2785" = type { %"class.absl::optional_internal::optional_data_dtor_base.2786" }
%"class.absl::optional_internal::optional_data_dtor_base.2786" = type { i8, %union.anon.2787 }
%union.anon.2787 = type { i64 }
%"class.blink::Member.2788" = type { %"class.blink::MemberBase.2789" }
%"class.blink::MemberBase.2789" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.2790" = type { %"class.blink::MemberBase.2791" }
%"class.blink::MemberBase.2791" = type { %"class.blink::Event"* }
%"class.blink::Member.2792" = type { %"class.blink::MemberBase.2793" }
%"class.blink::MemberBase.2793" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::SelectionTemplate" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.3314", %"class.blink::Member.3316", %"class.blink::Member.3318", %"class.blink::Member.3337", %"class.blink::Member.3339" }
%"class.blink::Member.3314" = type { %"class.blink::MemberBase.3315" }
%"class.blink::MemberBase.3315" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr }
%"class.blink::Member.3316" = type { %"class.blink::MemberBase.3317" }
%"class.blink::MemberBase.3317" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.3318" = type { %"class.blink::MemberBase.3319" }
%"class.blink::MemberBase.3319" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.3322", %"class.blink::HeapHashSet.3331" }
%"class.blink::HeapVector.3322" = type { %"class.WTF::Vector.3325" }
%"class.WTF::Vector.3325" = type { %"class.WTF::VectorBuffer.3326" }
%"class.WTF::VectorBuffer.3326" = type { %"class.WTF::VectorBufferBase.3327" }
%"class.WTF::VectorBufferBase.3327" = type { %"class.blink::Member.3328"*, i32, i32 }
%"class.blink::Member.3328" = type { %"class.blink::MemberBase.3329" }
%"class.blink::MemberBase.3329" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.3331" = type { %"class.WTF::HashSet.3334" }
%"class.WTF::HashSet.3334" = type { %"class.WTF::HashTable.3335" }
%"class.WTF::HashTable.3335" = type <{ %"class.blink::Member.3328"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3337" = type { %"class.blink::MemberBase.3338" }
%"class.blink::MemberBase.3338" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.3339" = type { %"class.blink::MemberBase.3340" }
%"class.blink::MemberBase.3340" = type { %"class.blink::HeapHashSet.3341"* }
%"class.blink::HeapHashSet.3341" = type opaque
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.2794, i32, i8, i8, [2 x i8] }>
%union.anon.2794 = type { %"class.WTF::Vector.2795" }
%"class.WTF::Vector.2795" = type { %"class.WTF::VectorBuffer.2796" }
%"class.WTF::VectorBuffer.2796" = type { %"class.WTF::VectorBufferBase.2797", [16 x i8] }
%"class.WTF::VectorBufferBase.2797" = type { i8*, i32, i32 }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.354", %"class.WTF::Vector.3342" }
%"class.WTF::Vector.3342" = type { %"class.WTF::VectorBuffer.3343" }
%"class.WTF::VectorBuffer.3343" = type { %"class.WTF::VectorBufferBase.3344", [64 x i8] }
%"class.WTF::VectorBufferBase.3344" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.WTF::Vector.2800" = type { %"class.WTF::VectorBuffer.2801" }
%"class.WTF::VectorBuffer.2801" = type { %"class.WTF::VectorBufferBase.2802", [16 x i8] }
%"class.WTF::VectorBufferBase.2802" = type { i16*, i32, i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::ParkableString" = type { %class.scoped_refptr.2815 }
%class.scoped_refptr.2815 = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.2816", %"class.WTF::String", %"class.std::__1::unique_ptr.2818" }
%"class.WTF::RefCounted.2816" = type { %"class.base::RefCounted.2817" }
%"class.base::RefCounted.2817" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.2818" = type { %"class.std::__1::__compressed_pair.2819" }
%"class.std::__1::__compressed_pair.2819" = type { %"struct.std::__1::__compressed_pair_elem.2820" }
%"struct.std::__1::__compressed_pair_elem.2820" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.2821", %"class.std::__1::unique_ptr.2831", %"class.WTF::Vector.2837", i8, i32 }
%"class.std::__1::unique_ptr.2821" = type { %"class.std::__1::__compressed_pair.2822" }
%"class.std::__1::__compressed_pair.2822" = type { %"struct.std::__1::__compressed_pair_elem.2823" }
%"struct.std::__1::__compressed_pair_elem.2823" = type { %"class.WTF::Vector.2824"* }
%"class.WTF::Vector.2824" = type { %"class.WTF::VectorBuffer.2825" }
%"class.WTF::VectorBuffer.2825" = type { %"class.WTF::VectorBufferBase.2797" }
%"class.std::__1::unique_ptr.2831" = type { %"class.std::__1::__compressed_pair.2832" }
%"class.std::__1::__compressed_pair.2832" = type { %"struct.std::__1::__compressed_pair_elem.2833" }
%"struct.std::__1::__compressed_pair_elem.2833" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.2837" = type { %"class.WTF::VectorBuffer.2838" }
%"class.WTF::VectorBuffer.2838" = type { %"class.WTF::VectorBufferBase.2797", [32 x i8] }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::ShadowRoot" = type <{ %"class.blink::DocumentFragment", %"class.blink::TreeScope", %"class.blink::Member.1318", %"class.blink::Member.2805", i32, [4 x i8] }>
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::Member.2805" = type { %"class.blink::MemberBase.2806" }
%"class.blink::MemberBase.2806" = type { %"class.blink::SlotAssignment"* }
%"class.blink::SlotAssignment" = type opaque
%"struct.blink::FocusParams" = type <{ i32, i32, %"class.blink::InputDeviceCapabilities"*, %"class.blink::FocusOptions"*, i8, [7 x i8] }>
%"class.blink::FocusOptions" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, [6 x i8] }>
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.2809" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.2809" = type { %"class.v8::TracedReference.2810" }
%"class.v8::TracedReference.2810" = type { %"class.v8::BasicTracedReference.2811" }
%"class.v8::BasicTracedReference.2811" = type { %"class.v8::TracedReferenceBase" }
%"class.WTF::StringAppend.2812" = type { %"class.WTF::StringAppend.2813", %"class.WTF::String" }
%"class.WTF::StringAppend.2813" = type { %"class.WTF::StringAppend.2814", i8* }
%"class.WTF::StringAppend.2814" = type { i8*, %"class.WTF::String" }
%"class.WTF::IntegerToStringConverter" = type <{ [12 x i8], [4 x i8], i8*, i32, [4 x i8] }>
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.2812", i8* }
%"class.WTF::StringTypeAdapter.3387" = type <{ i8*, i32, [4 x i8] }>
%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder" = type { %"class.blink::SelectionTemplate" }
%"class.blink::SetSelectionOptions" = type <{ i32, i8, i8, [2 x i8], i32, i32, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::SetSelectionOptions::Builder" = type { %"class.blink::SetSelectionOptions" }
%"class.blink::VisiblePositionTemplate" = type { %"class.blink::PositionWithAffinityTemplate" }
%"class.blink::PositionWithAffinityTemplate" = type <{ %"class.blink::PositionTemplate", i32, [4 x i8] }>
%"class.blink::CharacterIteratorAlgorithm" = type { i32, i32, i8, %"class.blink::TextIteratorAlgorithm" }
%"class.blink::TextIteratorAlgorithm" = type { %"class.blink::Node"*, i32, %"class.blink::Node"*, i32, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::Node"*, i32, [4 x i8], %"class.blink::FullyClippedStateStackAlgorithm", i32, i8, i8, %"class.blink::Text"*, %"class.blink::TextIteratorBehavior", i8, i8, %"class.blink::TextIteratorTextState", %"class.blink::TextIteratorTextNodeHandler" }
%"class.blink::FullyClippedStateStackAlgorithm" = type { %"class.blink::BitStack" }
%"class.blink::BitStack" = type { i32, [4 x i8], %"class.WTF::Vector.2844" }
%"class.WTF::Vector.2844" = type { %"class.WTF::VectorBuffer.base.2846", [4 x i8] }
%"class.WTF::VectorBuffer.base.2846" = type <{ %"class.WTF::VectorBufferBase.1071", [4 x i8] }>
%"class.blink::Text" = type { %"class.blink::CharacterData" }
%"class.blink::CharacterData" = type { %"class.blink::Node", i8, %"class.blink::ParkableString", %"class.WTF::String" }
%"class.blink::TextIteratorBehavior" = type { %union.anon.2850 }
%union.anon.2850 = type { i32 }
%"class.blink::TextIteratorTextState" = type { %"class.blink::TextIteratorBehavior", i32, i16, %"class.WTF::String", i32, %"class.blink::Node"*, %"class.blink::Node"*, %"class.absl::optional.2852", %"class.absl::optional.2852", i32, i8, i16 }
%"class.absl::optional.2852" = type { %"class.absl::optional_internal::optional_data.2853" }
%"class.absl::optional_internal::optional_data.2853" = type { %"class.absl::optional_internal::optional_data_base.2854" }
%"class.absl::optional_internal::optional_data_base.2854" = type { %"class.absl::optional_internal::optional_data_dtor_base.2855" }
%"class.absl::optional_internal::optional_data_dtor_base.2855" = type { i8, %union.anon.2856 }
%union.anon.2856 = type { i32 }
%"class.blink::TextIteratorTextNodeHandler" = type { %"class.blink::Text"*, i32, i32, i8, %"class.WTF::Vector.2857", i32, %"class.blink::InlineTextBox"*, i8, i8, %"class.blink::InlineTextBox"*, %"class.blink::LayoutText"*, i8, %"class.WTF::Vector.2863", i32, %"class.blink::TextIteratorBehavior", %"class.blink::TextIteratorTextState"* }
%"class.WTF::Vector.2857" = type { %"class.WTF::VectorBuffer.2858" }
%"class.WTF::VectorBuffer.2858" = type { %"class.WTF::VectorBufferBase.2859" }
%"class.WTF::VectorBufferBase.2859" = type { %"class.blink::NGOffsetMappingUnit"*, i32, i32 }
%"class.blink::NGOffsetMappingUnit" = type { i32, %"class.blink::LayoutObject"*, i32, i32, i32, i32 }
%"class.blink::InlineTextBox" = type opaque
%"class.blink::LayoutText" = type { %"class.blink::LayoutObject", i16, i32, float, float, float, float, %"class.WTF::String", %"struct.blink::LogicalOffset", %union.anon.2862 }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.2862 = type { %"class.blink::InlineTextBoxList" }
%"class.blink::InlineTextBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"* }
%"class.WTF::Vector.2863" = type { %"class.WTF::VectorBuffer.2864" }
%"class.WTF::VectorBuffer.2864" = type { %"class.WTF::VectorBufferBase.2865" }
%"class.WTF::VectorBufferBase.2865" = type { %"class.blink::InlineTextBox"**, i32, i32 }
%"class.WTF::IntegerToStringConverter.3392" = type <{ [13 x i8], [3 x i8], i8*, i32, [4 x i8] }>
%"struct.blink::Element::AttributeModificationParams" = type <{ %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"*, i32, [4 x i8] }>
%"class.blink::StyleChangeReasonForTracing" = type { i8*, %"class.WTF::AtomicString" }
%"class.blink::HTMLFormControlElement" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8, [3 x i8] }>
%"class.blink::SpellChecker" = type { %"class.blink::Member.913", %"class.blink::Member.2870", %"class.blink::Member.2872" }
%"class.blink::Member.2870" = type { %"class.blink::MemberBase.2871" }
%"class.blink::MemberBase.2871" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.2872" = type { %"class.blink::MemberBase.2873" }
%"class.blink::MemberBase.2873" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::HTMLBRElement" = type { %"class.blink::HTMLElement" }
%"class.blink::DummyExceptionStateForTesting" = type { %"class.blink::ExceptionState" }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Value" = type { i8 }
%"class.blink::NGInlineCursor" = type <{ %"class.blink::NGInlineCursorPosition", %"class.base::span", %"class.blink::NGFragmentItems"*, %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGInlineCursor::CulledInlineTraversal", %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutUnit", i32, i32, [4 x i8] }>
%"class.blink::NGInlineCursorPosition" = type { %"class.blink::NGFragmentItem"*, %"class.base::CheckedContiguousIterator" }
%"class.blink::NGFragmentItem" = type <{ %"class.blink::LayoutObject"*, %union.anon.3161, %"struct.blink::PhysicalRect", %"class.blink::NGInkOverflow", i32, i32, i16, [6 x i8] }>
%union.anon.3161 = type { %"struct.blink::NGFragmentItem::TextItem" }
%"struct.blink::NGFragmentItem::TextItem" = type { %class.scoped_refptr.3162, %"struct.blink::NGTextOffset" }
%class.scoped_refptr.3162 = type { %"class.blink::ShapeResultView"* }
%"class.blink::ShapeResultView" = type { %"class.WTF::RefCounted.3163", %class.scoped_refptr.3165, i32, i32, i32, i32, float, i32, [0 x %struct.anon.3166] }
%"class.WTF::RefCounted.3163" = type { %"class.base::RefCounted.3164" }
%"class.base::RefCounted.3164" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.3165 = type { %"class.blink::SimpleFontData"* }
%struct.anon.3166 = type { i8* }
%"struct.blink::NGTextOffset" = type { i32, i32 }
%"class.blink::NGInkOverflow" = type { %union.anon.3175 }
%union.anon.3175 = type { %"struct.blink::NGSingleInkOverflow"* }
%"struct.blink::NGSingleInkOverflow" = type { %"struct.blink::PhysicalRect" }
%"class.base::CheckedContiguousIterator" = type { %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"* }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", %"class.blink::NGFragmentItem"* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.blink::NGFragmentItems" = type { %"class.WTF::String", %"class.WTF::String", i32, i32, [0 x %"class.blink::NGFragmentItem"] }
%"class.blink::NGPhysicalBoxFragment" = type opaque
%"class.blink::NGInlineCursor::CulledInlineTraversal" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutInline"*, i8, [7 x i8] }>
%"class.blink::LayoutInline" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutObjectChildList", %union.anon.3036 }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%union.anon.3036 = type { %"class.blink::LineBoxList" }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList.3037" }
%"class.blink::InlineBoxList.3037" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1749", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.std::__1::unique_ptr.1749" = type { %"class.std::__1::__compressed_pair.1750" }
%"class.std::__1::__compressed_pair.1750" = type { %"struct.std::__1::__compressed_pair_elem.1751" }
%"struct.std::__1::__compressed_pair_elem.1751" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1752", %"class.absl::optional.1757" }
%"class.absl::optional.1752" = type { %"class.absl::optional_internal::optional_data.1753" }
%"class.absl::optional_internal::optional_data.1753" = type { %"class.absl::optional_internal::optional_data_base.1754" }
%"class.absl::optional_internal::optional_data_base.1754" = type { %"class.absl::optional_internal::optional_data_dtor_base.1755" }
%"class.absl::optional_internal::optional_data_dtor_base.1755" = type { i8, %union.anon.1756 }
%union.anon.1756 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.absl::optional.1757" = type { %"class.absl::optional_internal::optional_data.1758" }
%"class.absl::optional_internal::optional_data.1758" = type { %"class.absl::optional_internal::optional_data_base.1759" }
%"class.absl::optional_internal::optional_data_base.1759" = type { %"class.absl::optional_internal::optional_data_dtor_base.1760" }
%"class.absl::optional_internal::optional_data_dtor_base.1760" = type { i8, %union.anon.1761 }
%union.anon.1761 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.3110", %"class.std::__1::unique_ptr.3125" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.2875, %"class.WTF::Vector.3067", %"class.std::__1::unique_ptr.3072", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.3093, %"class.blink::Persistent.3094" }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.2875 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type { %"class.WTF::RefCounted.2876", [4 x i8], %"class.blink::NGConstraintSpace", %class.scoped_refptr.3024, %union.anon.3043, %"class.blink::LayoutUnit", %"struct.blink::NGLayoutResult::Bitfields" }
%"class.WTF::RefCounted.2876" = type { %"class.base::RefCounted.2877" }
%"class.base::RefCounted.2877" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NGConstraintSpace" = type <{ %"struct.blink::LogicalSize", %union.anon.2878, %"class.blink::NGExclusionSpace", %"struct.blink::NGConstraintSpace::Bitfields", [4 x i8] }>
%"struct.blink::LogicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.2878 = type { %"struct.blink::NGConstraintSpace::RareData"* }
%"struct.blink::NGConstraintSpace::RareData" = type { %"struct.blink::LogicalSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, %union.anon.2879 }
%"struct.blink::NGBfcOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.2879 = type { %"struct.blink::NGConstraintSpace::RareData::CustomData", [40 x i8] }
%"struct.blink::NGConstraintSpace::RareData::CustomData" = type { %class.scoped_refptr.2913 }
%class.scoped_refptr.2913 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.2914", [4 x i8], %"class.std::__1::unique_ptr.2916", i64, %"class.WTF::Vector.2920", %"class.WTF::Vector.2925", %"class.WTF::Vector.2931", %"class.WTF::Vector.2949", %class.scoped_refptr.1548, %"class.WTF::HashMap.2955", %"class.WTF::Vector.2960", %"class.WTF::Vector.2920", %"class.WTF::Vector.2966", %"class.WTF::HashMap.2971", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.2914" = type { %"class.base::RefCountedThreadSafe.2915" }
%"class.base::RefCountedThreadSafe.2915" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.2916" = type { %"class.std::__1::__compressed_pair.2917" }
%"class.std::__1::__compressed_pair.2917" = type { %"struct.std::__1::__compressed_pair_elem.2918" }
%"struct.std::__1::__compressed_pair_elem.2918" = type { i8* }
%"class.WTF::Vector.2925" = type { %"class.WTF::VectorBuffer.2926" }
%"class.WTF::VectorBuffer.2926" = type { %"class.WTF::VectorBufferBase.2927", [8 x i8] }
%"class.WTF::VectorBufferBase.2927" = type { %class.scoped_refptr.2928*, i32, i32 }
%class.scoped_refptr.2928 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.2931" = type { %"class.WTF::VectorBuffer.2932" }
%"class.WTF::VectorBuffer.2932" = type { %"class.WTF::VectorBufferBase.2933" }
%"class.WTF::VectorBufferBase.2933" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.2935", %"class.std::__1::unique_ptr.2941" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.2934 }
%class.scoped_refptr.2934 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.2935" = type { %"class.std::__1::__compressed_pair.2936" }
%"class.std::__1::__compressed_pair.2936" = type { %"struct.std::__1::__compressed_pair_elem.2937" }
%"struct.std::__1::__compressed_pair_elem.2937" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2941" = type { %"class.std::__1::__compressed_pair.2942" }
%"class.std::__1::__compressed_pair.2942" = type { %"struct.std::__1::__compressed_pair_elem.2943" }
%"struct.std::__1::__compressed_pair_elem.2943" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.2949" = type { %"class.WTF::VectorBuffer.2950" }
%"class.WTF::VectorBuffer.2950" = type { %"class.WTF::VectorBufferBase.2951" }
%"class.WTF::VectorBufferBase.2951" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.2952", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.2952" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.2955" = type { %"class.WTF::HashTable.2956" }
%"class.WTF::HashTable.2956" = type <{ %"struct.WTF::KeyValuePair.2959"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2959" = type opaque
%"class.WTF::Vector.2960" = type { %"class.WTF::VectorBuffer.2961" }
%"class.WTF::VectorBuffer.2961" = type { %"class.WTF::VectorBufferBase.2962" }
%"class.WTF::VectorBufferBase.2962" = type { %"class.mojo::ScopedHandleBase.2963"*, i32, i32 }
%"class.mojo::ScopedHandleBase.2963" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.2920" = type { %"class.WTF::VectorBuffer.2921" }
%"class.WTF::VectorBuffer.2921" = type { %"class.WTF::VectorBufferBase.2922", [16 x i8] }
%"class.WTF::VectorBufferBase.2922" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.2966" = type { %"class.WTF::VectorBuffer.2967" }
%"class.WTF::VectorBuffer.2967" = type { %"class.WTF::VectorBufferBase.2968" }
%"class.WTF::VectorBufferBase.2968" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.2971" = type { %"class.WTF::HashTable.2972" }
%"class.WTF::HashTable.2972" = type <{ %"struct.WTF::KeyValuePair.2975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2975" = type { i8**, %"class.std::__1::unique_ptr.3235" }
%"class.std::__1::unique_ptr.3235" = type { %"class.std::__1::__compressed_pair.3236" }
%"class.std::__1::__compressed_pair.3236" = type { %"struct.std::__1::__compressed_pair_elem.3237" }
%"struct.std::__1::__compressed_pair_elem.3237" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::NGExclusionSpace" = type { %"class.std::__1::unique_ptr.2976" }
%"class.std::__1::unique_ptr.2976" = type { %"class.std::__1::__compressed_pair.2977" }
%"class.std::__1::__compressed_pair.2977" = type { %"struct.std::__1::__compressed_pair_elem.2978" }
%"struct.std::__1::__compressed_pair_elem.2978" = type { %"class.blink::NGExclusionSpaceInternal"* }
%"class.blink::NGExclusionSpaceInternal" = type { %class.scoped_refptr.2979, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.std::__1::unique_ptr.2996" }
%class.scoped_refptr.2979 = type { %"class.base::RefCountedData.2980"* }
%"class.base::RefCountedData.2980" = type { %"class.base::RefCountedThreadSafe.2981", %"class.WTF::Vector.2982" }
%"class.base::RefCountedThreadSafe.2981" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.2982" = type { %"class.WTF::VectorBuffer.2983" }
%"class.WTF::VectorBuffer.2983" = type { %"class.WTF::VectorBufferBase.2984" }
%"class.WTF::VectorBufferBase.2984" = type { %class.scoped_refptr.2985*, i32, i32 }
%class.scoped_refptr.2985 = type { %"struct.blink::NGExclusion"* }
%"struct.blink::NGExclusion" = type { %"class.WTF::RefCounted.2986", %"struct.blink::NGBfcRect", i32, i8, %"class.std::__1::unique_ptr.2988" }
%"class.WTF::RefCounted.2986" = type { %"class.base::RefCounted.2987" }
%"class.base::RefCounted.2987" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::NGBfcRect" = type { %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset" }
%"class.std::__1::unique_ptr.2988" = type { %"class.std::__1::__compressed_pair.2989" }
%"class.std::__1::__compressed_pair.2989" = type { %"struct.std::__1::__compressed_pair_elem.2990" }
%"struct.std::__1::__compressed_pair_elem.2990" = type { %"struct.blink::NGExclusionShapeData"* }
%"struct.blink::NGExclusionShapeData" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"struct.blink::NGBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.2996" = type { %"class.std::__1::__compressed_pair.2997" }
%"class.std::__1::__compressed_pair.2997" = type { %"struct.std::__1::__compressed_pair_elem.2998" }
%"struct.std::__1::__compressed_pair_elem.2998" = type { %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* }
%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry" = type <{ %"class.WTF::Vector.2999", %"class.WTF::Vector.3012", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.2999" = type { %"class.WTF::VectorBuffer.3000" }
%"class.WTF::VectorBuffer.3000" = type { %"class.WTF::VectorBufferBase.3001", [320 x i8] }
%"class.WTF::VectorBufferBase.3001" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelf" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", [4 x i8], %"class.WTF::Vector.3002", %"class.WTF::Vector.3002", %class.scoped_refptr.3007, i8, [7 x i8] }>
%"class.WTF::Vector.3002" = type { %"class.WTF::VectorBuffer.3003" }
%"class.WTF::VectorBuffer.3003" = type { %"class.WTF::VectorBufferBase.3004", [8 x i8] }
%"class.WTF::VectorBufferBase.3004" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelfEdge" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.3007 = type { %"class.blink::NGShapeExclusions"* }
%"class.blink::NGShapeExclusions" = type { %"class.WTF::RefCounted.3008", %"class.WTF::Vector.2982", %"class.WTF::Vector.2982" }
%"class.WTF::RefCounted.3008" = type { %"class.base::RefCounted.3009" }
%"class.base::RefCounted.3009" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.3012" = type { %"class.WTF::VectorBuffer.3013" }
%"class.WTF::VectorBuffer.3013" = type { %"class.WTF::VectorBufferBase.3014", [288 x i8] }
%"class.WTF::VectorBufferBase.3014" = type { %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGClosedArea" = type { %"struct.blink::NGLayoutOpportunity", %"class.WTF::Vector.3002", %"class.WTF::Vector.3002" }
%"struct.blink::NGLayoutOpportunity" = type { %"struct.blink::NGBfcRect", %class.scoped_refptr.3015 }
%class.scoped_refptr.3015 = type { %"class.blink::NGShapeExclusions"* }
%"struct.blink::NGConstraintSpace::Bitfields" = type { i32 }
%class.scoped_refptr.3024 = type { %"class.blink::NGPhysicalFragment"* }
%"class.blink::NGPhysicalFragment" = type { %"class.WTF::RefCounted.3025", %"class.blink::LayoutObject"*, %"struct.blink::PhysicalSize", i24, %class.scoped_refptr.3027, %"class.std::__1::unique_ptr.3030" }
%"class.WTF::RefCounted.3025" = type { %"class.base::RefCounted.3026" }
%"class.base::RefCounted.3026" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.3027 = type { %"class.blink::NGBreakToken"* }
%"class.blink::NGBreakToken" = type <{ i32 (...)**, %"class.WTF::RefCounted.3028", [4 x i8], %"class.blink::LayoutBox"*, i16, [6 x i8] }>
%"class.WTF::RefCounted.3028" = type { %"class.base::RefCounted.3029" }
%"class.base::RefCounted.3029" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.3030" = type { %"class.std::__1::__compressed_pair.3031" }
%"class.std::__1::__compressed_pair.3031" = type { %"struct.std::__1::__compressed_pair_elem.3032" }
%"struct.std::__1::__compressed_pair_elem.3032" = type { %"class.WTF::Vector.3033"* }
%"class.WTF::Vector.3033" = type { %"class.WTF::VectorBuffer.3034" }
%"class.WTF::VectorBuffer.3034" = type { %"class.WTF::VectorBufferBase.3035" }
%"class.WTF::VectorBufferBase.3035" = type { %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, i32, i32 }
%"struct.blink::NGPhysicalOutOfFlowPositionedNode" = type { %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset", i8, %"class.blink::LayoutInline"* }
%union.anon.3043 = type { %"struct.blink::NGLayoutResult::RareData"* }
%"struct.blink::NGLayoutResult::RareData" = type { %"class.blink::LayoutUnit", %"class.absl::optional.2880", %class.scoped_refptr.3044, i32, %"struct.blink::LogicalOffset", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGBlockNode", %union.anon.3045, %"class.blink::NGExclusionSpace", %class.scoped_refptr.2913, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i32, i32, %"class.std::__1::unique_ptr.3046", %"class.absl::optional.3062" }
%"class.absl::optional.2880" = type { %"class.absl::optional_internal::optional_data.2881" }
%"class.absl::optional_internal::optional_data.2881" = type { %"class.absl::optional_internal::optional_data_base.2882" }
%"class.absl::optional_internal::optional_data_base.2882" = type { %"class.absl::optional_internal::optional_data_dtor_base.2883" }
%"class.absl::optional_internal::optional_data_dtor_base.2883" = type { i8, %union.anon.2884 }
%union.anon.2884 = type { %"class.blink::LayoutUnit" }
%class.scoped_refptr.3044 = type { %"class.blink::NGEarlyBreak"* }
%"class.blink::NGEarlyBreak" = type <{ %"class.WTF::RefCounted.3158", [4 x i8], %union.anon.3160, %class.scoped_refptr.3044, i32, [4 x i8] }>
%"class.WTF::RefCounted.3158" = type { %"class.base::RefCounted.3159" }
%"class.base::RefCounted.3159" = type { %"class.base::subtle::RefCountedBase" }
%union.anon.3160 = type { %"class.blink::LayoutBox"* }
%"struct.blink::NGMarginStrut" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i8, [2 x i8] }>
%"class.blink::NGBlockNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%"class.blink::NGLayoutInputNode.base" = type <{ %"class.blink::LayoutBox"*, i8 }>
%union.anon.3045 = type { %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.3046" = type { %"class.std::__1::__compressed_pair.3047" }
%"class.std::__1::__compressed_pair.3047" = type { %"struct.std::__1::__compressed_pair_elem.3048" }
%"struct.std::__1::__compressed_pair_elem.3048" = type { %"struct.blink::NGGridData"* }
%"struct.blink::NGGridData" = type { i32, i32, i32, i32, %"struct.blink::NGGridData::TrackCollectionGeometry", %"struct.blink::NGGridData::TrackCollectionGeometry" }
%"struct.blink::NGGridData::TrackCollectionGeometry" = type { %"class.WTF::Vector.3049", %"class.WTF::Vector.3054", %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.3049" = type { %"class.WTF::VectorBuffer.3050" }
%"class.WTF::VectorBuffer.3050" = type { %"class.WTF::VectorBufferBase.3051" }
%"class.WTF::VectorBufferBase.3051" = type { %"struct.blink::NGGridData::SetData"*, i32, i32 }
%"struct.blink::NGGridData::SetData" = type { %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.3054" = type { %"class.WTF::VectorBuffer.3055" }
%"class.WTF::VectorBuffer.3055" = type { %"class.WTF::VectorBufferBase.3056" }
%"class.WTF::VectorBufferBase.3056" = type { %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, i32, i32 }
%"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range" = type <{ i32, i32, i32, i32, %"struct.blink::TrackSpanProperties", [3 x i8] }>
%"struct.blink::TrackSpanProperties" = type { i8 }
%"class.absl::optional.3062" = type { %"class.absl::optional_internal::optional_data.3063" }
%"class.absl::optional_internal::optional_data.3063" = type { %"class.absl::optional_internal::optional_data_base.3064" }
%"class.absl::optional_internal::optional_data_base.3064" = type { %"class.absl::optional_internal::optional_data_dtor_base.3065" }
%"class.absl::optional_internal::optional_data_dtor_base.3065" = type { i8, %union.anon.3066 }
%union.anon.3066 = type { %"struct.blink::NGLayoutResult::MathData" }
%"struct.blink::NGLayoutResult::MathData" = type { %"class.blink::LayoutUnit" }
%"struct.blink::NGLayoutResult::Bitfields" = type { i32 }
%"class.WTF::Vector.3067" = type { %"class.WTF::VectorBuffer.3068" }
%"class.WTF::VectorBuffer.3068" = type { %"class.WTF::VectorBufferBase.3069", [8 x i8] }
%"class.WTF::VectorBufferBase.3069" = type { %class.scoped_refptr.2875*, i32, i32 }
%"class.std::__1::unique_ptr.3072" = type { %"class.std::__1::__compressed_pair.3073" }
%"class.std::__1::__compressed_pair.3073" = type { %"struct.std::__1::__compressed_pair_elem.3074" }
%"struct.std::__1::__compressed_pair_elem.3074" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.3075", %"class.absl::optional.3080", %"class.absl::optional.3085" }
%"class.absl::optional.3075" = type { %"class.absl::optional_internal::optional_data.3076" }
%"class.absl::optional_internal::optional_data.3076" = type { %"class.absl::optional_internal::optional_data_base.3077" }
%"class.absl::optional_internal::optional_data_base.3077" = type { %"class.absl::optional_internal::optional_data_dtor_base.3078" }
%"class.absl::optional_internal::optional_data_dtor_base.3078" = type { i8, %union.anon.3079 }
%union.anon.3079 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.3080" = type { %"class.absl::optional_internal::optional_data.3081" }
%"class.absl::optional_internal::optional_data.3081" = type { %"class.absl::optional_internal::optional_data_base.3082" }
%"class.absl::optional_internal::optional_data_base.3082" = type { %"class.absl::optional_internal::optional_data_dtor_base.3083" }
%"class.absl::optional_internal::optional_data_dtor_base.3083" = type { i8, [3 x i8], %union.anon.3084 }
%union.anon.3084 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.3085" = type { %"class.absl::optional_internal::optional_data.3086" }
%"class.absl::optional_internal::optional_data.3086" = type { %"class.absl::optional_internal::optional_data_base.3087" }
%"class.absl::optional_internal::optional_data_base.3087" = type { %"class.absl::optional_internal::optional_data_dtor_base.3088" }
%"class.absl::optional_internal::optional_data_dtor_base.3088" = type { i8, %union.anon.3089 }
%union.anon.3089 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.3093 = type { %"class.blink::InlineBox"* }
%"class.blink::Persistent.3094" = type { %"class.blink::PersistentBase.3095" }
%"class.blink::PersistentBase.3095" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.3098", %"struct.blink::PhysicalRect", %"class.blink::Member.3108" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.3098" = type { %"class.std::__1::__compressed_pair.3099" }
%"class.std::__1::__compressed_pair.3099" = type { %"struct.std::__1::__compressed_pair_elem.3100" }
%"struct.std::__1::__compressed_pair_elem.3100" = type { %"class.WTF::HashSet.3101"* }
%"class.WTF::HashSet.3101" = type { %"class.WTF::HashTable.3102" }
%"class.WTF::HashTable.3102" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3108" = type { %"class.blink::MemberBase.3109" }
%"class.blink::MemberBase.3109" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::Persistent.3110" = type { %"class.blink::PersistentBase.3111" }
%"class.blink::PersistentBase.3111" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.3114", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.3114" = type { %"class.std::__1::__compressed_pair.3115" }
%"class.std::__1::__compressed_pair.3115" = type { %"struct.std::__1::__compressed_pair_elem.3116" }
%"struct.std::__1::__compressed_pair_elem.3116" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type { %"class.WTF::Vector.2857", %"class.WTF::HashMap.3117", %"class.WTF::String" }
%"class.WTF::HashMap.3117" = type { %"class.WTF::HashTable.3118" }
%"class.WTF::HashTable.3118" = type <{ %"struct.WTF::KeyValuePair.3121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3121" = type opaque
%"class.std::__1::unique_ptr.3125" = type { %"class.std::__1::__compressed_pair.3126" }
%"class.std::__1::__compressed_pair.3126" = type { %"struct.std::__1::__compressed_pair_elem.3127" }
%"struct.std::__1::__compressed_pair_elem.3127" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.3128", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.3128" = type { %"class.WTF::HashTable.3131", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.3131" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.3134", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.3134" = type { %"class.std::__1::__compressed_pair.3135" }
%"class.std::__1::__compressed_pair.3135" = type { %"struct.std::__1::__compressed_pair_elem.3136" }
%"struct.std::__1::__compressed_pair_elem.3136" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.3137, %"class.std::__1::unique_ptr.3138", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1749", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.3137 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.3156", i16, %class.scoped_refptr.3137 }
%"class.WTF::ThreadSafeRefCounted.3156" = type { %"class.base::RefCountedThreadSafe.3157" }
%"class.base::RefCountedThreadSafe.3157" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.3138" = type { %"class.std::__1::__compressed_pair.3139" }
%"class.std::__1::__compressed_pair.3139" = type { %"struct.std::__1::__compressed_pair_elem.3140" }
%"struct.std::__1::__compressed_pair_elem.3140" = type { %"class.WTF::Vector.3141"* }
%"class.WTF::Vector.3141" = type { %"class.WTF::VectorBuffer.3142" }
%"class.WTF::VectorBuffer.3142" = type { %"class.WTF::VectorBufferBase.3143" }
%"class.WTF::VectorBufferBase.3143" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.3152, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%class.scoped_refptr.3152 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.blink::NGPhysicalLineBoxFragment" = type { %"class.blink::NGPhysicalFragment", %"struct.blink::FontHeight" }
%"class.blink::NGInlineBreakToken" = type { %"class.blink::NGBreakToken.base", %class.scoped_refptr, i32, i32 }
%"class.blink::NGBreakToken.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.3028", [4 x i8], %"class.blink::LayoutBox"*, i16 }>
%"class.blink::PositionTemplate.3176" = type { %"class.blink::Member.318", i32, i32 }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.3184, %"class.blink::Member.3185", %"class.blink::SelfKeepAlive", %"class.util::TokenType.3189" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.3184 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.3185" = type { %"class.blink::MemberBase.3186" }
%"class.blink::MemberBase.3186" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.3187" }
%"class.blink::Persistent.3187" = type { %"class.blink::PersistentBase.3188" }
%"class.blink::PersistentBase.3188" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr.269" }
%"class.util::TokenType.3189" = type { %"class.base::StrongAlias.3190" }
%"class.base::StrongAlias.3190" = type { %"class.base::UnguessableToken" }
%"class.blink::MessagePort" = type { %"class.blink::EventTargetWithInlineData", %"class.mojo::MessageReceiver", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.std::__1::unique_ptr.3193", i8, i8, %class.scoped_refptr.963, %"class.blink::MessagePortDescriptor" }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.std::__1::unique_ptr.3193" = type { %"class.std::__1::__compressed_pair.3194" }
%"class.std::__1::__compressed_pair.3194" = type { %"struct.std::__1::__compressed_pair_elem.3195" }
%"struct.std::__1::__compressed_pair_elem.3195" = type { %"class.mojo::Connector"* }
%"class.blink::MessagePortDescriptor" = type { %"class.mojo::ScopedHandleBase", %"class.base::UnguessableToken", i64 }
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::EventListener" = type { %"class.blink::NameClient", %"class.blink::probe::AsyncTaskId" }
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.3201", i8, [7 x i8] }>
%"class.blink::Member.3201" = type { %"class.blink::MemberBase.3202" }
%"class.blink::MemberBase.3202" = type { %"class.blink::EventListener"* }
%"class.blink::V8UnionStringOrTrustedScript" = type opaque
%"struct.blink::Node::AttachContext" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::EventDispatchHandlingState" = type opaque
%"struct.blink::ContainerNode::ChildrenChange" = type { i8, i8, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::HeapVector.3203", %"class.WTF::String"* }
%"class.blink::HeapVector.3203" = type { %"class.WTF::Vector.3206" }
%"class.WTF::Vector.3206" = type { %"class.WTF::VectorBuffer.3207" }
%"class.WTF::VectorBuffer.3207" = type { %"class.WTF::VectorBufferBase.3208" }
%"class.WTF::VectorBufferBase.3208" = type { %"class.blink::Member.318"*, i32, i32 }
%"class.WTF::HashMap.3210" = type opaque
%"class.blink::Image" = type opaque
%"class.blink::StyleRecalcContext" = type { %"class.blink::ContainerQueryEvaluator"* }
%"class.blink::ContainerQueryEvaluator" = type opaque
%"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript" = type opaque
%"class.blink::ListedElement" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.1765", %"class.blink::Member.1767", %"class.blink::Member.1769", %"class.WTF::String", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.blink::FormData" = type opaque
%"class.blink::FormControlState" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::StringTypeAdapter.3389" = type { %"class.WTF::StringTypeAdapter.3390" }
%"class.WTF::StringTypeAdapter.3390" = type { %"class.WTF::StringView" }

$_ZN3WTF13StringBuilder6AppendEDs = comdat any

$_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev = comdat any

$_ZN5blink17ExceptionMessages24IndexExceedsMinimumBoundIiEEN3WTF6StringEPKcT_S6_ = comdat any

$_ZN5blink17ExceptionMessages24IndexExceedsMaximumBoundIiEEN3WTF6StringEPKcT_S6_ = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink11HTMLElement18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZNK5blink4Node11GetPseudoIdEv = comdat any

$_ZNK5blink4Node21IsMediaControlElementEv = comdat any

$_ZNK5blink4Node15IsMediaControlsEv = comdat any

$_ZNK5blink4Node14IsMediaElementEv = comdat any

$_ZNK5blink4Node20IsTextTrackContainerEv = comdat any

$_ZNK5blink4Node12IsVTTElementEv = comdat any

$_ZNK5blink4Node15IsAttributeNodeEv = comdat any

$_ZNK5blink4Node19IsCharacterDataNodeEv = comdat any

$_ZNK5blink4Node19IsFrameOwnerElementEv = comdat any

$_ZNK5blink4Node27IsMediaRemotingInterstitialEv = comdat any

$_ZNK5blink4Node30IsPictureInPictureInterstitialEv = comdat any

$_ZNK5blink31HTMLFormControlElementWithState23CanContainRangeEndPointEv = comdat any

$_ZN5blink4Node11SheetLoadedEv = comdat any

$_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE = comdat any

$_ZN5blink4Node24StartLoadingDynamicSheetEv = comdat any

$_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv = comdat any

$_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE = comdat any

$_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE = comdat any

$_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE = comdat any

$_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv = comdat any

$_ZN5blink7Element36AdditionalPresentationAttributeStyleEv = comdat any

$_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv = comdat any

$_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE = comdat any

$_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE = comdat any

$_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE = comdat any

$_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE = comdat any

$_ZNK5blink7Element10IsLiveLinkEv = comdat any

$_ZN5blink7Element13ImageContentsEv = comdat any

$_ZNK5blink7Element14DefaultToolTipEv = comdat any

$_ZNK5blink7Element25MatchesDefaultPseudoClassEv = comdat any

$_ZNK5blink7Element25ShouldAppearIndeterminateEv = comdat any

$_ZNK5blink7Element21IsDateTimeEditElementEv = comdat any

$_ZNK5blink7Element22IsDateTimeFieldElementEv = comdat any

$_ZNK5blink7Element24IsPickerIndicatorElementEv = comdat any

$_ZNK5blink22HTMLFormControlElement20IsFormControlElementEv = comdat any

$_ZNK5blink7Element19IsSpinButtonElementEv = comdat any

$_ZNK5blink7Element13IsTextControlEv = comdat any

$_ZNK5blink7Element21IsOptionalFormControlEv = comdat any

$_ZNK5blink7Element21IsRequiredFormControlEv = comdat any

$_ZNK5blink7Element9IsInRangeEv = comdat any

$_ZNK5blink7Element12IsOutOfRangeEv = comdat any

$_ZNK5blink7Element20IsClearButtonElementEv = comdat any

$_ZNK5blink7Element15IsScriptElementEv = comdat any

$_ZNK5blink7Element21IsVTTCueBackgroundBoxEv = comdat any

$_ZNK5blink7Element20IsSliderThumbElementEv = comdat any

$_ZNK5blink7Element25HasNonInBodyInsertionModeEv = comdat any

$_ZN5blink7Element20BuildPendingResourceEv = comdat any

$_ZNK5blink7Element11IsAdRelatedEv = comdat any

$_ZNK5blink7Element16GetNamedItemTypeEv = comdat any

$_ZN5blink7Element22ParserDidSetAttributesEv = comdat any

$_ZNK5blink7Element23AreAuthorShadowsAllowedEv = comdat any

$_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE = comdat any

$_ZNK5blink22HTMLFormControlElement31AlwaysCreateUserAgentShadowRootEv = comdat any

$_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv = comdat any

$_ZNK5blink11HTMLElement17IsHTMLBodyElementEv = comdat any

$_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv = comdat any

$_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv = comdat any

$_ZNK5blink11HTMLElement19IsHTMLPortalElementEv = comdat any

$_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv = comdat any

$_ZNK5blink11HTMLElement15IsPluginElementEv = comdat any

$_ZNK5blink11HTMLElement7AltTextEv = comdat any

$_ZN5blink22HTMLFormControlElement22ToFormAssociatedOrNullEv = comdat any

$_ZNK5blink22HTMLFormControlElement14IsEnumeratableEv = comdat any

$_ZNK5blink22HTMLFormControlElement28CanTriggerImplicitSubmissionEv = comdat any

$_ZN5blink22HTMLFormControlElement20IsSubmittableElementEv = comdat any

$_ZNK5blink22HTMLFormControlElement27CanBeSuccessfulSubmitButtonEv = comdat any

$_ZNK5blink22HTMLFormControlElement17IsActivatedSubmitEv = comdat any

$_ZN5blink22HTMLFormControlElement18SetActivatedSubmitEb = comdat any

$_ZNK5blink22HTMLFormControlElement21GetFormElementPiiTypeEv = comdat any

$_ZN5blink22HTMLFormControlElement21SetFormElementPiiTypeENS_18FormElementPiiTypeE = comdat any

$_ZN5blink22HTMLFormControlElement9ResetImplEv = comdat any

$_ZN5blink18TextControlElement16HandleFocusEventEPNS_7ElementENS_5mojom9FocusTypeE = comdat any

$_ZN5blink18TextControlElement15HandleBlurEventEv = comdat any

$_ZThn104_NK5blink22HTMLFormControlElement20IsFormControlElementEv = comdat any

$_ZThn104_NK5blink22HTMLFormControlElement14IsEnumeratableEv = comdat any

$_ZN5blink13ListedElement16AppendToFormDataERNS_8FormDataE = comdat any

$_ZN5blink13ListedElement27DisabledStateMightBeChangedEv = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLBRElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_29TextControlInnerEditorElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink10TraceTraitINS_29TextControlInnerEditorElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink18TextControlElementE = hidden unnamed_addr constant { [207 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] } { [207 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::TextControlElement"*)* @_ZN5blink18TextControlElementD2Ev to i8*), i8* bitcast (void (%"class.blink::TextControlElement"*)* @_ZN5blink18TextControlElementD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::TextControlElement"*, %"class.blink::Visitor"*)* @_ZNK5blink18TextControlElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Node"*)* @_ZNK5blink4Node13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::Node"*)* @_ZNK5blink4Node19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Node"*)* @_ZN5blink4Node6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node21EnsureEventTargetDataEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement8nodeNameEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Node"*)* @_ZNK5blink4Node9nodeValueEv to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node12setNodeValueERKN3WTF6StringE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element11getNodeTypeEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Element"*, %"class.blink::Document"*, i32)* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node14setTextContentERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i8 (%"class.blink::Node"*)* @_ZNK5blink4Node11GetPseudoIdEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21IsMediaControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsMediaControlsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node14IsMediaElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node20IsTextTrackContainerEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node12IsVTTElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsAttributeNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsCharacterDataNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsFrameOwnerElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node27IsMediaRemotingInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node30IsPictureInPictureInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZNK5blink31HTMLFormControlElementWithState23CanContainRangeEndPointEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node11SheetLoadedEv to i8*), i8* bitcast (void (%"class.blink::Node"*, i32)* @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node24StartLoadingDynamicSheetEv to i8*), i8* bitcast (void (%"class.blink::TextControlElement"*, i1, i32)* @_ZN5blink18TextControlElement10SetFocusedEbNS_5mojom9FocusTypeE to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1)* @_ZN5blink13ContainerNode10SetDraggedEb to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement25ShouldHaveFocusAppearanceEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode11BoundingBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i32)* @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node17CanStartSelectionEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"struct.blink::Node::AttachContext"*)* @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element16DetachLayoutTreeEb to i8*), i8* bitcast (i32 (%"class.blink::HTMLFormControlElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink22HTMLFormControlElement12InsertedIntoERNS_13ContainerNodeE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink22HTMLFormControlElement11RemovedFromERNS_13ContainerNodeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node28WillRespondToMouseMoveEventsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node29WillRespondToMouseClickEventsEv to i8*), i8* bitcast (%"class.blink::EventDispatchHandlingState"* (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*, %"class.blink::EventDispatchHandlingState"*)* @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node17HandleLocalEventsERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::TextControlElement"*, %"class.blink::Event"*)* @_ZN5blink18TextControlElement19DefaultEventHandlerERNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21HasActivationBehaviorEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Node"*)* @_ZN5blink4Node13AutoscrollBoxEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node14StopAutoscrollEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*, %"class.blink::Document"*)* @_ZN5blink22HTMLFormControlElement20DidMoveToNewDocumentERNS_8DocumentE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement13DebugNodeNameEv to i8*), i8* bitcast (%"class.blink::ComputedStyle"* (%"class.blink::Element"*, i8, %"class.WTF::AtomicString"*)* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"struct.blink::ContainerNode::ChildrenChange"*)* @_ZN5blink11HTMLElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZN5blink7Element18GetAnimationTargetEv to i8*), i8* bitcast (%"class.WTF::HashMap.3210"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetCheckedAttributeTypesEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element11scrollWidthEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element12scrollHeightEv to i8*), i8* bitcast (%"class.blink::CSSPropertyValueSet"* (%"class.blink::Element"*)* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"*)* @_ZNK5blink11HTMLElement23IsPresentationAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink11HTMLElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink22HTMLFormControlElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (void (%"class.blink::TextControlElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink18TextControlElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::QualifiedName"*)* @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (%"class.blink::QualifiedName"* (%"class.blink::Element"*)* @_ZNK5blink7Element24SubResourceAttributeNameEv to i8*), i8* bitcast (void (%"class.blink::TextControlElement"*, %"class.blink::Element"*, i32)* @_ZN5blink18TextControlElement31CloneNonAttributePropertiesFromERKNS_7ElementENS_17CloneChildrenFlagE to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::Element"*, %"class.blink::ComputedStyle"*, i32)* @_ZN5blink7Element18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink7Element20LayoutObjectIsNeededERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, i32)* @_ZN5blink11HTMLElement15AccessKeyActionENS_27SimulatedClickCreationScopeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element10IsLiveLinkEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ImageSourceURLEv to i8*), i8* bitcast (%"class.blink::Image"* (%"class.blink::Element"*)* @_ZN5blink7Element13ImageContentsEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"struct.blink::FocusParams"*)* @_ZN5blink7Element5focusERKNS_11FocusParamsE to i8*), i8* bitcast (void (%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*)* @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element4blurEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement13SupportsFocusEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement19IsKeyboardFocusableEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsMouseFocusableEv to i8*), i8* bitcast (void (%"class.blink::TextControlElement"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink18TextControlElement18DispatchFocusEventEPNS_7ElementENS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::TextControlElement"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink18TextControlElement17DispatchBlurEventEPNS_7ElementENS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.WTF::AtomicString"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement5titleEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14DefaultToolTipEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ShadowPseudoIdEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElementWithState"*)* @_ZN5blink31HTMLFormControlElementWithState21FinishParsingChildrenEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement20BeginParsingChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i8)* @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MatchesDefaultPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement25MatchesEnabledPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement26MatchesReadOnlyPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement27MatchesReadWritePseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement28MatchesValidityPseudoClassesEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement25MayTriggerVirtualKeyboardEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25ShouldAppearIndeterminateEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsDateTimeEditElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element22IsDateTimeFieldElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element24IsPickerIndicatorElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement20IsFormControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element19IsSpinButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element13IsTextControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsOptionalFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsRequiredFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement12willValidateEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZN5blink22HTMLFormControlElement14IsValidElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element9IsInRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element12IsOutOfRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsClearButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element15IsScriptElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsSliderThumbElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25HasNonInBodyInsertionModeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement21IsDisabledFormControlEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element20BuildPendingResourceEv to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element9SetActiveEb to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element10SetHoveredEb to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element11IsAdRelatedEv to i8*), i8* bitcast (void (%"class.blink::Element"*, i64)* @_ZN5blink7Element15WillRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (void (%"class.blink::Element"*, i64)* @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (%"class.blink::ComputedStyle"* (%"class.blink::Element"*, %"class.blink::StyleRecalcContext"*)* @_ZN5blink7Element26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element16GetNamedItemTypeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsFocusableStyleEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element22ParserDidSetAttributesEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element23AreAuthorShadowsAllowedEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::ShadowRoot"*)* @_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement31AlwaysCreateUserAgentShadowRootEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZNK5blink31HTMLFormControlElementWithState15DefaultTabIndexEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*, %"class.blink::Document"*)* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink11HTMLElement22setInnerTextForBindingEPKNS_50V8UnionStringTreatNullAsEmptyStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement19HasCustomFocusLogicEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement14autocapitalizeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement9draggableEv to i8*), i8* bitcast (%"class.blink::HTMLFormElement"* (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement9formOwnerEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement17IsHTMLBodyElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement19IsHTMLPortalElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement15IsPluginElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement11IsLabelableEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement20IsInteractiveContentEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement7AltTextEv to i8*), i8* bitcast (%"class.blink::FormAssociated"* (%"class.blink::HTMLFormControlElement"*)* @_ZN5blink22HTMLFormControlElement22ToFormAssociatedOrNullEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement14IsEnumeratableEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement28CanTriggerImplicitSubmissionEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZN5blink22HTMLFormControlElement20IsSubmittableElementEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLFormControlElement"*)* @_ZN5blink22HTMLFormControlElement21ResultForDialogSubmitEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement27CanBeSuccessfulSubmitButtonEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement17IsActivatedSubmitEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*, i1)* @_ZN5blink22HTMLFormControlElement18SetActivatedSubmitEb to i8*), i8* bitcast (i32 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement21GetFormElementPiiTypeEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*, i32)* @_ZN5blink22HTMLFormControlElement21SetFormElementPiiTypeENS_18FormElementPiiTypeE to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*, %"class.blink::HTMLFormElement"*)* @_ZN5blink22HTMLFormControlElement13AssociateWithEPNS_15HTMLFormElementE to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*)* @_ZN5blink22HTMLFormControlElement24RequiredAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*)* @_ZN5blink22HTMLFormControlElement24DisabledAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*)* @_ZN5blink22HTMLFormControlElement14WillChangeFormEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*)* @_ZN5blink22HTMLFormControlElement13DidChangeFormEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*)* @_ZN5blink22HTMLFormControlElement9ResetImplEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZNK5blink31HTMLFormControlElementWithState18ShouldAutocompleteEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZNK5blink31HTMLFormControlElementWithState25ClassSupportsStateRestoreEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZNK5blink31HTMLFormControlElementWithState36ShouldSaveAndRestoreFormControlStateEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZNK5blink31HTMLFormControlElementWithState29IsFormControlElementWithStateEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.blink::TextControlElement"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)* @_ZN5blink18TextControlElement12setRangeTextERKN3WTF6StringERNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::TextControlElement"*, %"class.WTF::String"*, i32, i32, %"class.WTF::String"*, %"class.blink::ExceptionState"*)* @_ZN5blink18TextControlElement12setRangeTextERKN3WTF6StringEjjS4_RNS_14ExceptionStateE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.blink::TextControlElement"*, %"class.WTF::String"*)* @_ZN5blink18TextControlElement19SetInnerEditorValueERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::TextControlElement"*, %"class.WTF::String"*)* @_ZN5blink18TextControlElement17SetSuggestedValueERKN3WTF6StringE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.blink::TextControlElement"*, %"class.blink::Element"*, i32)* @_ZN5blink18TextControlElement16HandleFocusEventEPNS_7ElementENS_5mojom9FocusTypeE to i8*), i8* bitcast (void (%"class.blink::TextControlElement"*)* @_ZN5blink18TextControlElement15HandleBlurEventEv to i8*)], [3 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZThn80_N5blink7Element18GetAnimationTargetEv to i8*)], [34 x i8*] [i8* inttoptr (i64 -104 to i8*), i8* null, i8* bitcast (void (%"class.blink::TextControlElement"*, %"class.blink::Visitor"*)* @_ZThn104_NK5blink18TextControlElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::TextControlElement"*)* @_ZThn104_N5blink18TextControlElementD1Ev to i8*), i8* bitcast (void (%"class.blink::TextControlElement"*)* @_ZThn104_N5blink18TextControlElementD0Ev to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZThn104_NK5blink22HTMLFormControlElement20IsFormControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZThn104_NK5blink31HTMLFormControlElementWithState29IsFormControlElementWithStateEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement18IsElementInternalsEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZThn104_NK5blink22HTMLFormControlElement14IsEnumeratableEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement7GetNameEv to i8*), i8* bitcast (void (%"class.blink::ListedElement"*, %"class.blink::FormData"*)* @_ZN5blink13ListedElement16AppendToFormDataERNS_8FormDataE to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement11CustomErrorEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement11HasBadInputEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement15PatternMismatchEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement13RangeOverflowEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement14RangeUnderflowEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement12StepMismatchEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement7TooLongEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement8TooShortEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement12TypeMismatchEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement12ValueMissingEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement17validationMessageEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement20ValidationSubMessageEv to i8*), i8* bitcast (void (%"class.blink::ListedElement"*, %"class.WTF::String"*)* @_ZN5blink13ListedElement17setCustomValidityERKN3WTF6StringE to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement16ValidationAnchorEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*)* @_ZThn104_N5blink22HTMLFormControlElement24DisabledAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::ListedElement"*)* @_ZN5blink13ListedElement27DisabledStateMightBeChangedEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZThn104_NK5blink31HTMLFormControlElementWithState25ClassSupportsStateRestoreEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZThn104_NK5blink31HTMLFormControlElementWithState36ShouldSaveAndRestoreFormControlStateEv to i8*), i8* bitcast (void ()* @_ZNK5blink13ListedElement20SaveFormControlStateEv to i8*), i8* bitcast (void (%"class.blink::ListedElement"*, %"class.blink::FormControlState"*)* @_ZN5blink13ListedElement23RestoreFormControlStateERKNS_16FormControlStateE to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*)* @_ZThn104_N5blink22HTMLFormControlElement14WillChangeFormEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*)* @_ZThn104_N5blink22HTMLFormControlElement13DidChangeFormEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement18RecalcWillValidateEv to i8*)], [3 x i8*] [i8* inttoptr (i64 -168 to i8*), i8* null, i8* bitcast (void (%"class.blink::HTMLFormControlElement"*, %"class.blink::HTMLFormElement"*)* @_ZThn168_N5blink22HTMLFormControlElement13AssociateWithEPNS_15HTMLFormElementE to i8*)] }, align 8
@_ZN5blink16event_type_names29kWebkitEditableContentChangedE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names5kBlurE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names6kFocusE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names16kPlaceholderAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink20shadow_element_names14kIdPlaceholderE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str = private unnamed_addr constant [73 x i8] c"../../third_party/blink/renderer/core/html/forms/text_control_element.cc\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"!element || IsA<HTMLElement>(element)\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@_ZN5blink16event_type_names7kChangeE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.3 = private unnamed_addr constant [9 x i8] c"preserve\00", align 1
@.str.4 = private unnamed_addr constant [27 x i8] c"The provided start value (\00", align 1
@.str.5 = private unnamed_addr constant [42 x i8] c") is larger than the provided end value (\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c").\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"select\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"start\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"end\00", align 1
@.str.10 = private unnamed_addr constant [8 x i8] c"forward\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"backward\00", align 1
@_ZN5blink10html_names6kBrTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names14kMaxlengthAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names14kMinlengthAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.12 = private unnamed_addr constant [21 x i8] c"The value provided (\00", align 1
@.str.13 = private unnamed_addr constant [24 x i8] c") is not positive or 0.\00", align 1
@.str.14 = private unnamed_addr constant [10 x i8] c"maxLength\00", align 1
@.str.15 = private unnamed_addr constant [10 x i8] c"minLength\00", align 1
@_ZN5blink16event_type_names7kSelectE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names13kReadonlyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names13kDisabledAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names8kDirAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.16 = private unnamed_addr constant [4 x i8] c"rtl\00", align 1
@.str.17 = private unnamed_addr constant [4 x i8] c"ltr\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c"auto\00", align 1
@_ZN5blink20shadow_element_names23kPseudoInputPlaceholderE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink20shadow_element_names29kPseudoInternalInputSuggestedE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.19 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.20 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.22 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.23 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::IDLDictionaryBase]\00", align 1
@.str.24 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.25 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.26 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZZN5blinkL15DirectionStringENS_27TextFieldSelectionDirectionEE6s_none = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blinkL15DirectionStringENS_27TextFieldSelectionDirectionEE6s_none = internal global i64 0, align 8
@_ZZN5blinkL15DirectionStringENS_27TextFieldSelectionDirectionEE9s_forward = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blinkL15DirectionStringENS_27TextFieldSelectionDirectionEE9s_forward = internal global i64 0, align 8
@_ZZN5blinkL15DirectionStringENS_27TextFieldSelectionDirectionEE10s_backward = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blinkL15DirectionStringENS_27TextFieldSelectionDirectionEE10s_backward = internal global i64 0, align 8
@_ZN5blink19style_change_reason10kAttributeE = external constant [0 x i8], align 1
@_ZTVN5blink29DummyExceptionStateForTestingE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink11HTMLElement18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@.str.27 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.28 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.29 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@.str.30 = private unnamed_addr constant [5 x i8] c"The \00", align 1
@.str.31 = private unnamed_addr constant [12 x i8] c" provided (\00", align 1
@.str.32 = private unnamed_addr constant [16 x i8] c") is less than \00", align 1
@.str.33 = private unnamed_addr constant [13 x i8] c"or equal to \00", align 1
@.str.34 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.35 = private unnamed_addr constant [20 x i8] c"the minimum bound (\00", align 1
@.str.37 = private unnamed_addr constant [19 x i8] c") is greater than \00", align 1
@.str.38 = private unnamed_addr constant [20 x i8] c"the maximum bound (\00", align 1
@_ZN5blink11ThreadState26main_thread_state_storage_E = external local_unnamed_addr global [0 x i8], align 1
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16

@_ZN5blink18TextControlElementD1Ev = hidden unnamed_addr alias void (%"class.blink::TextControlElement"*), void (%"class.blink::TextControlElement"*)* @_ZN5blink18TextControlElementD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18TextControlElementC2ERKNS_13QualifiedNameERNS_8DocumentE(%"class.blink::TextControlElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::TextControlElement"* %0 to %"class.blink::HTMLFormControlElementWithState"*
  tail call void @_ZN5blink31HTMLFormControlElementWithStateC2ERKNS_13QualifiedNameERNS_8DocumentE(%"class.blink::HTMLFormControlElementWithState"* %4, %"class.blink::QualifiedName"* dereferenceable(8) %1, %"class.blink::Document"* dereferenceable(2848) %2) #15
  %5 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [207 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }, { [207 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink18TextControlElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [207 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }, { [207 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink18TextControlElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [207 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }, { [207 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink18TextControlElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [207 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }, { [207 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink18TextControlElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 4
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 5
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 7, i32 0, i32 0
  %13 = bitcast %"class.blink::TextControlInnerEditorElement"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 17, i1 false)
  %14 = bitcast %"class.WTF::StringImpl"** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false)
  %15 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %2) #15
  %16 = icmp eq %"class.blink::LocalFrame"* %15, null
  br i1 %16, label %24, label %17

17:                                               ; preds = %3
  %18 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %2) #15
  %19 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %18, i64 0, i32 13, i32 0, i32 0
  %20 = load %"class.blink::Editor"*, %"class.blink::Editor"** %19, align 8
  %21 = tail call i32 @_ZNK5blink6Editor8BehaviorEv(%"class.blink::Editor"* %20) #15
  %22 = icmp ne i32 %21, 0
  %23 = zext i1 %22 to i32
  br label %24

24:                                               ; preds = %3, %17
  %25 = phi i32 [ 0, %3 ], [ %23, %17 ]
  %26 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 6
  store i32 %25, i32* %26, align 4
  ret void
}

declare void @_ZN5blink31HTMLFormControlElementWithStateC2ERKNS_13QualifiedNameERNS_8DocumentE(%"class.blink::HTMLFormControlElementWithState"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i32 @_ZNK5blink6Editor8BehaviorEv(%"class.blink::Editor"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18TextControlElementD2Ev(%"class.blink::TextControlElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [207 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }, { [207 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink18TextControlElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [207 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }, { [207 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink18TextControlElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [207 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }, { [207 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink18TextControlElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 3, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [207 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }, { [207 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink18TextControlElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 8, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #15
  br label %22

22:                                               ; preds = %1, %18, %21
  %23 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 7, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #15
  br label %39

39:                                               ; preds = %22, %35, %38
  %40 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 2, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #15
  br label %56

56:                                               ; preds = %39, %52, %55
  %57 = bitcast %"class.blink::TextControlElement"* %0 to %"class.blink::HTMLFormControlElementWithState"*
  tail call void @_ZN5blink31HTMLFormControlElementWithStateD2Ev(%"class.blink::HTMLFormControlElementWithState"* %57) #15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink31HTMLFormControlElementWithStateD2Ev(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink18TextControlElementD1Ev(%"class.blink::TextControlElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 -1, i32 0, i32 0, i32 1, i32 6
  %3 = bitcast %"class.WTF::String"* %2 to %"class.blink::TextControlElement"*
  tail call void @_ZN5blink18TextControlElementD2Ev(%"class.blink::TextControlElement"* %3) #15
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5blink18TextControlElementD0Ev(%"class.blink::TextControlElement"* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZThn104_N5blink18TextControlElementD0Ev(%"class.blink::TextControlElement"* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18TextControlElement18DispatchFocusEventEPNS_7ElementENS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::TextControlElement"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.blink::TextControlElement"* %0 to i1 (%"class.blink::TextControlElement"*)***
  %6 = load i1 (%"class.blink::TextControlElement"*)**, i1 (%"class.blink::TextControlElement"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.blink::TextControlElement"*)*, i1 (%"class.blink::TextControlElement"*)** %6, i64 192
  %8 = load i1 (%"class.blink::TextControlElement"*)*, i1 (%"class.blink::TextControlElement"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.blink::TextControlElement"* %0) #15
  br i1 %9, label %10, label %11

10:                                               ; preds = %4
  tail call void @_ZN5blink18TextControlElement27UpdatePlaceholderVisibilityEv(%"class.blink::TextControlElement"* %0)
  br label %11

11:                                               ; preds = %10, %4
  %12 = bitcast %"class.blink::TextControlElement"* %0 to void (%"class.blink::TextControlElement"*, %"class.blink::Element"*, i32)***
  %13 = load void (%"class.blink::TextControlElement"*, %"class.blink::Element"*, i32)**, void (%"class.blink::TextControlElement"*, %"class.blink::Element"*, i32)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::TextControlElement"*, %"class.blink::Element"*, i32)*, void (%"class.blink::TextControlElement"*, %"class.blink::Element"*, i32)** %13, i64 203
  %15 = load void (%"class.blink::TextControlElement"*, %"class.blink::Element"*, i32)*, void (%"class.blink::TextControlElement"*, %"class.blink::Element"*, i32)** %14, align 8
  tail call void %15(%"class.blink::TextControlElement"* %0, %"class.blink::Element"* %1, i32 %2) #15
  %16 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"* %16, %"class.blink::Element"* %1, i32 %2, %"class.blink::InputDeviceCapabilities"* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18TextControlElement27UpdatePlaceholderVisibilityEv(%"class.blink::TextControlElement"*) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.blink::HTMLElement"* @_ZNK5blink18TextControlElement18PlaceholderElementEv(%"class.blink::TextControlElement"* %0)
  %3 = icmp eq %"class.blink::HTMLElement"* %2, null
  br i1 %3, label %4, label %14

4:                                                ; preds = %1
  %5 = bitcast %"class.blink::TextControlElement"* %0 to void (%"class.blink::TextControlElement"*)***
  %6 = load void (%"class.blink::TextControlElement"*)**, void (%"class.blink::TextControlElement"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.blink::TextControlElement"*)*, void (%"class.blink::TextControlElement"*)** %6, i64 199
  %8 = load void (%"class.blink::TextControlElement"*)*, void (%"class.blink::TextControlElement"*)** %7, align 8
  tail call void %8(%"class.blink::TextControlElement"* %0) #15
  %9 = tail call zeroext i1 @_ZNK5blink18TextControlElement26PlaceholderShouldBeVisibleEv(%"class.blink::TextControlElement"* %0)
  %10 = bitcast %"class.blink::TextControlElement"* %0 to void (%"class.blink::TextControlElement"*, i1)***
  %11 = load void (%"class.blink::TextControlElement"*, i1)**, void (%"class.blink::TextControlElement"*, i1)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::TextControlElement"*, i1)*, void (%"class.blink::TextControlElement"*, i1)** %11, i64 191
  %13 = load void (%"class.blink::TextControlElement"*, i1)*, void (%"class.blink::TextControlElement"*, i1)** %12, align 8
  tail call void %13(%"class.blink::TextControlElement"* %0, i1 zeroext %9) #15
  br label %56

14:                                               ; preds = %1
  %15 = bitcast %"class.blink::TextControlElement"* %0 to i1 (%"class.blink::TextControlElement"*)***
  %16 = load i1 (%"class.blink::TextControlElement"*)**, i1 (%"class.blink::TextControlElement"*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.blink::TextControlElement"*)*, i1 (%"class.blink::TextControlElement"*)** %16, i64 190
  %18 = load i1 (%"class.blink::TextControlElement"*)*, i1 (%"class.blink::TextControlElement"*)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.blink::TextControlElement"* %0) #15
  %20 = tail call zeroext i1 @_ZNK5blink18TextControlElement26PlaceholderShouldBeVisibleEv(%"class.blink::TextControlElement"* %0)
  %21 = bitcast %"class.blink::TextControlElement"* %0 to void (%"class.blink::TextControlElement"*, i1)***
  %22 = load void (%"class.blink::TextControlElement"*, i1)**, void (%"class.blink::TextControlElement"*, i1)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::TextControlElement"*, i1)*, void (%"class.blink::TextControlElement"*, i1)** %22, i64 191
  %24 = load void (%"class.blink::TextControlElement"*, i1)*, void (%"class.blink::TextControlElement"*, i1)** %23, align 8
  tail call void %24(%"class.blink::TextControlElement"* %0, i1 zeroext %20) #15
  %25 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %2, i64 0, i32 0
  %26 = load i1 (%"class.blink::TextControlElement"*)**, i1 (%"class.blink::TextControlElement"*)*** %15, align 8
  %27 = getelementptr inbounds i1 (%"class.blink::TextControlElement"*)*, i1 (%"class.blink::TextControlElement"*)** %26, i64 190
  %28 = load i1 (%"class.blink::TextControlElement"*)*, i1 (%"class.blink::TextControlElement"*)** %27, align 8
  %29 = tail call zeroext i1 %28(%"class.blink::TextControlElement"* %0) #15
  br i1 %29, label %39, label %30

30:                                               ; preds = %14
  %31 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 7, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %38, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %30, %34
  br label %39

39:                                               ; preds = %38, %34, %14
  %40 = phi i32 [ 379, %14 ], [ 3, %38 ], [ 379, %34 ]
  tail call void @_ZN5blink7Element22SetInlineStylePropertyENS_13CSSPropertyIDENS_10CSSValueIDEb(%"class.blink::Element"* %25, i32 137, i32 %40, i1 zeroext true) #15
  %41 = load i1 (%"class.blink::TextControlElement"*)**, i1 (%"class.blink::TextControlElement"*)*** %15, align 8
  %42 = getelementptr inbounds i1 (%"class.blink::TextControlElement"*)*, i1 (%"class.blink::TextControlElement"*)** %41, i64 190
  %43 = load i1 (%"class.blink::TextControlElement"*)*, i1 (%"class.blink::TextControlElement"*)** %42, align 8
  %44 = tail call zeroext i1 %43(%"class.blink::TextControlElement"* %0) #15
  %45 = xor i1 %19, %44
  br i1 %45, label %46, label %56

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 7, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %54, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %46, %50
  %55 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %55, i32 38) #15
  br label %56

56:                                               ; preds = %39, %50, %54, %4
  ret void
}

declare void @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18TextControlElement17DispatchBlurEventEPNS_7ElementENS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::TextControlElement"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.blink::TextControlElement"* %0 to i1 (%"class.blink::TextControlElement"*)***
  %6 = load i1 (%"class.blink::TextControlElement"*)**, i1 (%"class.blink::TextControlElement"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.blink::TextControlElement"*)*, i1 (%"class.blink::TextControlElement"*)** %6, i64 192
  %8 = load i1 (%"class.blink::TextControlElement"*)*, i1 (%"class.blink::TextControlElement"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.blink::TextControlElement"* %0) #15
  br i1 %9, label %10, label %11

10:                                               ; preds = %4
  tail call void @_ZN5blink18TextControlElement27UpdatePlaceholderVisibilityEv(%"class.blink::TextControlElement"* %0)
  br label %11

11:                                               ; preds = %10, %4
  %12 = bitcast %"class.blink::TextControlElement"* %0 to void (%"class.blink::TextControlElement"*)***
  %13 = load void (%"class.blink::TextControlElement"*)**, void (%"class.blink::TextControlElement"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::TextControlElement"*)*, void (%"class.blink::TextControlElement"*)** %13, i64 204
  %15 = load void (%"class.blink::TextControlElement"*)*, void (%"class.blink::TextControlElement"*)** %14, align 8
  tail call void %15(%"class.blink::TextControlElement"* %0) #15
  %16 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"* %16, %"class.blink::Element"* %1, i32 %2, %"class.blink::InputDeviceCapabilities"* %3) #15
  ret void
}

declare void @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18TextControlElement19DefaultEventHandlerERNS_5EventE(%"class.blink::TextControlElement"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::SelectionTemplate", align 8
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.blink::SelectionTemplate", align 8
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names29kWebkitEditableContentChangedE, align 8
  %8 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %9, %11
  br i1 %12, label %13, label %134

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %18, label %24, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.blink::NodeData"** %19 to %"class.blink::NodeRareData"**
  %22 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %22, i64 0, i32 1, i32 0, i32 0
  br label %26

24:                                               ; preds = %13
  %25 = bitcast %"class.blink::NodeData"** %19 to %"class.blink::NodeRenderingData"**
  br label %26

26:                                               ; preds = %20, %24
  %27 = phi %"class.blink::NodeRenderingData"** [ %23, %20 ], [ %25, %24 ]
  %28 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %28, i64 0, i32 1
  %30 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %29, align 8
  %31 = icmp eq %"class.blink::LayoutObject"* %30, null
  br i1 %31, label %134, label %32

32:                                               ; preds = %26
  br i1 %18, label %37, label %33

33:                                               ; preds = %32
  %34 = bitcast %"class.blink::NodeData"** %19 to %"class.blink::NodeRareData"**
  %35 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %35, i64 0, i32 1, i32 0, i32 0
  br label %39

37:                                               ; preds = %32
  %38 = bitcast %"class.blink::NodeData"** %19 to %"class.blink::NodeRenderingData"**
  br label %39

39:                                               ; preds = %33, %37
  %40 = phi %"class.blink::NodeRenderingData"** [ %36, %33 ], [ %38, %37 ]
  %41 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %41, i64 0, i32 1
  %43 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %42, align 8
  %44 = bitcast %"class.blink::LayoutObject"* %43 to i1 (%"class.blink::LayoutObject"*, i32)***
  %45 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %44, align 8
  %46 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %45, i64 92
  %47 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %46, align 8
  %48 = tail call zeroext i1 %47(%"class.blink::LayoutObject"* %43, i32 51) #15
  br i1 %48, label %59, label %49

49:                                               ; preds = %39
  %50 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %44, align 8
  %51 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %50, i64 92
  %52 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %51, align 8
  %53 = tail call zeroext i1 %52(%"class.blink::LayoutObject"* %43, i32 34) #15
  br i1 %53, label %59, label %54

54:                                               ; preds = %49
  %55 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %44, align 8
  %56 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %55, i64 92
  %57 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %56, align 8
  %58 = tail call zeroext i1 %57(%"class.blink::LayoutObject"* %43, i32 35) #15
  br i1 %58, label %59, label %134

59:                                               ; preds = %39, %49, %54
  %60 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %61 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %61, i64 0, i32 2, i32 0, i32 0
  %63 = load %"class.blink::Document"*, %"class.blink::Document"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %63, i64 0, i32 97
  %65 = load i8, i8* %64, align 1, !range !2
  %66 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 3
  %67 = xor i8 %65, 1
  store i8 %67, i8* %66, align 8
  %68 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 1
  %69 = load i8, i8* %68, align 1, !range !2
  %70 = or i8 %69, %67
  store i8 %70, i8* %68, align 1
  %71 = load i32, i32* %15, align 8
  %72 = trunc i32 %71 to i8
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %129

74:                                               ; preds = %59
  %75 = tail call zeroext i1 @_ZNK5blink4Node26IsUserActionElementFocusedEv(%"class.blink::Node"* %14) #15
  br i1 %75, label %76, label %129

76:                                               ; preds = %74
  %77 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %60, align 8
  %78 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %77, i64 0, i32 2, i32 0, i32 0
  %79 = load %"class.blink::Document"*, %"class.blink::Document"** %78, align 8
  %80 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %79) #15
  %81 = icmp eq %"class.blink::LocalFrame"* %80, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %76
  %83 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %60, align 8
  %84 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %83, i64 0, i32 2, i32 0, i32 0
  %85 = load %"class.blink::Document"*, %"class.blink::Document"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %85, i64 0, i32 5, i32 2
  %87 = load i32, i32* %86, align 4
  %88 = add nsw i32 %87, 1
  store i32 %88, i32* %86, align 4
  %89 = bitcast %"class.blink::SelectionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %89) #15
  %90 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %80, i64 0, i32 14, i32 0, i32 0
  %91 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %90, align 8
  call void @_ZNK5blink14FrameSelection21GetSelectionInDOMTreeEv(%"class.blink::SelectionTemplate"* nonnull sret %3, %"class.blink::FrameSelection"* %91) #15
  %92 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 1, i32 0, i32 0
  %93 = load %"class.blink::TextControlInnerEditorElement"*, %"class.blink::TextControlInnerEditorElement"** %92, align 8
  %94 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %93, i64 0, i32 0, i32 0
  %95 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %95) #15
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeStartPositionEv(%"class.blink::PositionTemplate"* nonnull sret %4, %"class.blink::SelectionTemplate"* nonnull %3) #15
  %96 = call i32 @_ZN5blink18TextControlElement16IndexForPositionEPNS_11HTMLElementERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::HTMLElement"* %94, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %95) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %89) #15
  %97 = load i32, i32* %86, align 4
  %98 = add nsw i32 %97, -1
  store i32 %98, i32* %86, align 4
  br label %99

99:                                               ; preds = %76, %82
  %100 = phi i32 [ %96, %82 ], [ 0, %76 ]
  %101 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %60, align 8
  %102 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %101, i64 0, i32 2, i32 0, i32 0
  %103 = load %"class.blink::Document"*, %"class.blink::Document"** %102, align 8
  %104 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %103) #15
  %105 = icmp eq %"class.blink::LocalFrame"* %104, null
  br i1 %105, label %123, label %106

106:                                              ; preds = %99
  %107 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %60, align 8
  %108 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %107, i64 0, i32 2, i32 0, i32 0
  %109 = load %"class.blink::Document"*, %"class.blink::Document"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %109, i64 0, i32 5, i32 2
  %111 = load i32, i32* %110, align 4
  %112 = add nsw i32 %111, 1
  store i32 %112, i32* %110, align 4
  %113 = bitcast %"class.blink::SelectionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %113) #15
  %114 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %104, i64 0, i32 14, i32 0, i32 0
  %115 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %114, align 8
  call void @_ZNK5blink14FrameSelection21GetSelectionInDOMTreeEv(%"class.blink::SelectionTemplate"* nonnull sret %5, %"class.blink::FrameSelection"* %115) #15
  %116 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 1, i32 0, i32 0
  %117 = load %"class.blink::TextControlInnerEditorElement"*, %"class.blink::TextControlInnerEditorElement"** %116, align 8
  %118 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %117, i64 0, i32 0, i32 0
  %119 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %119) #15
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18ComputeEndPositionEv(%"class.blink::PositionTemplate"* nonnull sret %6, %"class.blink::SelectionTemplate"* nonnull %5) #15
  %120 = call i32 @_ZN5blink18TextControlElement16IndexForPositionEPNS_11HTMLElementERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::HTMLElement"* %118, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %119) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %113) #15
  %121 = load i32, i32* %110, align 4
  %122 = add nsw i32 %121, -1
  store i32 %122, i32* %110, align 4
  br label %123

123:                                              ; preds = %99, %106
  %124 = phi i32 [ %120, %106 ], [ 0, %99 ]
  %125 = call i32 @_ZNK5blink18TextControlElement25ComputeSelectionDirectionEv(%"class.blink::TextControlElement"* %0)
  %126 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 4
  store i32 %100, i32* %126, align 4
  %127 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 5
  store i32 %124, i32* %127, align 8
  %128 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 6
  store i32 %125, i32* %128, align 4
  br label %129

129:                                              ; preds = %59, %123, %74
  %130 = bitcast %"class.blink::TextControlElement"* %0 to void (%"class.blink::TextControlElement"*)***
  %131 = load void (%"class.blink::TextControlElement"*)**, void (%"class.blink::TextControlElement"*)*** %130, align 8
  %132 = getelementptr inbounds void (%"class.blink::TextControlElement"*)*, void (%"class.blink::TextControlElement"*)** %131, i64 201
  %133 = load void (%"class.blink::TextControlElement"*)*, void (%"class.blink::TextControlElement"*)** %132, align 8
  call void %133(%"class.blink::TextControlElement"* %0) #15
  br label %136

134:                                              ; preds = %26, %54, %2
  %135 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink11HTMLElement19DefaultEventHandlerERNS_5EventE(%"class.blink::HTMLElement"* %135, %"class.blink::Event"* dereferenceable(104) %1) #15
  br label %136

136:                                              ; preds = %134, %129
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink18TextControlElement14CacheSelectionEjjNS_27TextFieldSelectionDirectionE(%"class.blink::TextControlElement"* nocapture, i32, i32, i32) local_unnamed_addr #6 align 2 {
  %5 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 4
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, %1
  br i1 %7, label %8, label %16

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 5
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, %2
  br i1 %11, label %12, label %16

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 6
  %14 = load i32, i32* %13, align 4
  %15 = icmp ne i32 %14, %3
  br label %16

16:                                               ; preds = %8, %4, %12
  %17 = phi i1 [ true, %8 ], [ true, %4 ], [ %15, %12 ]
  store i32 %1, i32* %5, align 4
  %18 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 5
  store i32 %2, i32* %18, align 8
  %19 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 6
  store i32 %3, i32* %19, align 4
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink18TextControlElement21ComputeSelectionStartEv(%"class.blink::TextControlElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::SelectionTemplate", align 8
  %3 = alloca %"class.blink::PositionTemplate", align 8
  %4 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %5, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::Document"*, %"class.blink::Document"** %6, align 8
  %8 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %7) #15
  %9 = icmp eq %"class.blink::LocalFrame"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %1
  %11 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %12 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %11, i64 0, i32 2, i32 0, i32 0
  %13 = load %"class.blink::Document"*, %"class.blink::Document"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %13, i64 0, i32 5, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = add nsw i32 %15, 1
  store i32 %16, i32* %14, align 4
  %17 = bitcast %"class.blink::SelectionTemplate"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %17) #15
  %18 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %8, i64 0, i32 14, i32 0, i32 0
  %19 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %18, align 8
  call void @_ZNK5blink14FrameSelection21GetSelectionInDOMTreeEv(%"class.blink::SelectionTemplate"* nonnull sret %2, %"class.blink::FrameSelection"* %19) #15
  %20 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.blink::TextControlInnerEditorElement"*, %"class.blink::TextControlInnerEditorElement"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %21, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #15
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeStartPositionEv(%"class.blink::PositionTemplate"* nonnull sret %3, %"class.blink::SelectionTemplate"* nonnull %2) #15
  %24 = call i32 @_ZN5blink18TextControlElement16IndexForPositionEPNS_11HTMLElementERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::HTMLElement"* %22, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %3)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %17) #15
  %25 = load i32, i32* %14, align 4
  %26 = add nsw i32 %25, -1
  store i32 %26, i32* %14, align 4
  br label %27

27:                                               ; preds = %1, %10
  %28 = phi i32 [ %24, %10 ], [ 0, %1 ]
  ret i32 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink18TextControlElement19ComputeSelectionEndEv(%"class.blink::TextControlElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::SelectionTemplate", align 8
  %3 = alloca %"class.blink::PositionTemplate", align 8
  %4 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %5, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::Document"*, %"class.blink::Document"** %6, align 8
  %8 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %7) #15
  %9 = icmp eq %"class.blink::LocalFrame"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %1
  %11 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %12 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %11, i64 0, i32 2, i32 0, i32 0
  %13 = load %"class.blink::Document"*, %"class.blink::Document"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %13, i64 0, i32 5, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = add nsw i32 %15, 1
  store i32 %16, i32* %14, align 4
  %17 = bitcast %"class.blink::SelectionTemplate"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %17) #15
  %18 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %8, i64 0, i32 14, i32 0, i32 0
  %19 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %18, align 8
  call void @_ZNK5blink14FrameSelection21GetSelectionInDOMTreeEv(%"class.blink::SelectionTemplate"* nonnull sret %2, %"class.blink::FrameSelection"* %19) #15
  %20 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.blink::TextControlInnerEditorElement"*, %"class.blink::TextControlInnerEditorElement"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %21, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #15
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18ComputeEndPositionEv(%"class.blink::PositionTemplate"* nonnull sret %3, %"class.blink::SelectionTemplate"* nonnull %2) #15
  %24 = call i32 @_ZN5blink18TextControlElement16IndexForPositionEPNS_11HTMLElementERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::HTMLElement"* %22, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %3)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %17) #15
  %25 = load i32, i32* %14, align 4
  %26 = add nsw i32 %25, -1
  store i32 %26, i32* %14, align 4
  br label %27

27:                                               ; preds = %1, %10
  %28 = phi i32 [ %24, %10 ], [ 0, %1 ]
  ret i32 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink18TextControlElement25ComputeSelectionDirectionEv(%"class.blink::TextControlElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::SelectionTemplate", align 8
  %3 = alloca %"class.blink::PositionTemplate", align 8
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %6, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::Document"*, %"class.blink::Document"** %7, align 8
  %9 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %8) #15
  %10 = icmp eq %"class.blink::LocalFrame"* %9, null
  br i1 %10, label %54, label %11

11:                                               ; preds = %1
  %12 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %5, align 8
  %13 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %12, i64 0, i32 2, i32 0, i32 0
  %14 = load %"class.blink::Document"*, %"class.blink::Document"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %14, i64 0, i32 5, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %15, align 4
  %18 = bitcast %"class.blink::SelectionTemplate"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #15
  %19 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %9, i64 0, i32 14, i32 0, i32 0
  %20 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %19, align 8
  call void @_ZNK5blink14FrameSelection21GetSelectionInDOMTreeEv(%"class.blink::SelectionTemplate"* nonnull sret %2, %"class.blink::FrameSelection"* %20) #15
  %21 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #15
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeStartPositionEv(%"class.blink::PositionTemplate"* nonnull sret %3, %"class.blink::SelectionTemplate"* nonnull %2) #15
  %22 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %19, align 8
  %23 = call zeroext i1 @_ZNK5blink14FrameSelection13IsDirectionalEv(%"class.blink::FrameSelection"* %22) #15
  %24 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #15
  br i1 %23, label %25, label %50

25:                                               ; preds = %11
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE4BaseEv(%"class.blink::PositionTemplate"* nonnull sret %4, %"class.blink::SelectionTemplate"* nonnull %2) #15
  %26 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %4, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.blink::Node"*, %"class.blink::Node"** %26, align 8
  %28 = icmp eq %"class.blink::Node"* %27, null
  %29 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %3, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::Node"*, %"class.blink::Node"** %29, align 8
  br i1 %28, label %31, label %33

31:                                               ; preds = %25
  %32 = icmp eq %"class.blink::Node"* %30, null
  br i1 %32, label %49, label %50

33:                                               ; preds = %25
  %34 = icmp eq %"class.blink::Node"* %27, %30
  br i1 %34, label %35, label %50

35:                                               ; preds = %33
  %36 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %4, i64 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %3, i64 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %37, %39
  br i1 %40, label %41, label %50

41:                                               ; preds = %35
  %42 = icmp eq i32 %37, 0
  br i1 %42, label %43, label %49

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %4, i64 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %3, i64 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %45, %47
  br i1 %48, label %49, label %50

49:                                               ; preds = %41, %31, %43
  br label %50

50:                                               ; preds = %33, %35, %49, %43, %31, %11
  %51 = phi i32 [ 0, %11 ], [ 1, %49 ], [ 2, %43 ], [ 2, %31 ], [ 2, %35 ], [ 2, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #15
  %52 = load i32, i32* %15, align 4
  %53 = add nsw i32 %52, -1
  store i32 %53, i32* %15, align 4
  br label %54

54:                                               ; preds = %1, %50
  %55 = phi i32 [ %51, %50 ], [ 0, %1 ]
  ret i32 %55
}

declare void @_ZN5blink11HTMLElement19DefaultEventHandlerERNS_5EventE(%"class.blink::HTMLElement"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18TextControlElement12ForwardEventERNS_5EventE(%"class.blink::TextControlElement"* nocapture readonly, %"class.blink::Event"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names5kBlurE, align 8
  %4 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %5, %7
  br i1 %8, label %17, label %9

9:                                                ; preds = %2
  %10 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kFocusE, align 8
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %5, %12
  br i1 %13, label %17, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 1, i32 0, i32 0
  %16 = load %"class.blink::TextControlInnerEditorElement"*, %"class.blink::TextControlInnerEditorElement"** %15, align 8
  tail call void @_ZN5blink29TextControlInnerEditorElement19DefaultEventHandlerERNS_5EventE(%"class.blink::TextControlInnerEditorElement"* %16, %"class.blink::Event"* dereferenceable(104) %1) #15
  br label %17

17:                                               ; preds = %2, %9, %14
  ret void
}

declare void @_ZN5blink29TextControlInnerEditorElement19DefaultEventHandlerERNS_5EventE(%"class.blink::TextControlInnerEditorElement"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink18TextControlElement19StrippedPlaceholderEv(%"class.blink::TextControlElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringBuilder", align 8
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kPlaceholderAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %4, align 8
  %6 = icmp eq %"class.blink::ElementData"* %5, null
  br i1 %6, label %57, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %5, i64 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %19, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.blink::ElementData"* %5 to %"class.blink::UniqueElementData"*
  %14 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %5, i64 1, i32 1
  %15 = bitcast %"class.blink::Member.354"* %14 to %"class.blink::Attribute"**
  %16 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %13, i64 0, i32 2, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  br label %24

19:                                               ; preds = %7
  %20 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %5, i64 1
  %21 = bitcast %"class.blink::ElementData"* %20 to %"class.blink::Attribute"*
  %22 = lshr i32 %9, 1
  %23 = and i32 %22, 268435455
  br label %24

24:                                               ; preds = %19, %12
  %25 = phi %"class.blink::Attribute"* [ %21, %19 ], [ %16, %12 ]
  %26 = phi i32 [ %23, %19 ], [ %18, %12 ]
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %25, i64 %27
  %29 = icmp eq i32 %26, 0
  br i1 %29, label %57, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %35

35:                                               ; preds = %50, %30
  %36 = phi %"class.blink::Attribute"* [ %25, %30 ], [ %51, %50 ]
  %37 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %39 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %38, %32
  br i1 %39, label %53, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %42, %43
  br i1 %44, label %45, label %50

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 4, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %47, %48
  br i1 %49, label %53, label %50

50:                                               ; preds = %45, %40
  %51 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %36, i64 1
  %52 = icmp eq %"class.blink::Attribute"* %51, %28
  br i1 %52, label %57, label %35

53:                                               ; preds = %45, %35
  %54 = icmp eq %"class.blink::Attribute"* %36, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %36, i64 0, i32 1
  br label %59

57:                                               ; preds = %50, %53, %24, %1
  %58 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %59

59:                                               ; preds = %55, %57
  %60 = phi %"class.WTF::AtomicString"* [ %58, %57 ], [ %56, %55 ]
  %61 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %60, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %218, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 1
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 1
  br i1 %68, label %82, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %102, label %74

74:                                               ; preds = %70
  %75 = bitcast %"class.WTF::StringImpl"* %69 to i8*
  %76 = zext i32 %72 to i64
  %77 = tail call i8* @memchr(i8* %75, i32 10, i64 %76) #17
  %78 = icmp eq i8* %77, null
  %79 = ptrtoint i8* %77 to i64
  %80 = ptrtoint %"class.WTF::StringImpl"* %69 to i64
  %81 = sub i64 %79, %80
  br i1 %78, label %102, label %97

82:                                               ; preds = %64
  %83 = bitcast %"class.WTF::StringImpl"* %69 to i16*
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %102, label %87

87:                                               ; preds = %82
  %88 = zext i32 %85 to i64
  br label %89

89:                                               ; preds = %94, %87
  %90 = phi i64 [ %95, %94 ], [ 0, %87 ]
  %91 = getelementptr inbounds i16, i16* %83, i64 %90
  %92 = load i16, i16* %91, align 2
  %93 = icmp eq i16 %92, 10
  br i1 %93, label %97, label %94

94:                                               ; preds = %89
  %95 = add nuw nsw i64 %90, 1
  %96 = icmp eq i64 %95, %88
  br i1 %96, label %102, label %89

97:                                               ; preds = %89, %74
  %98 = phi i32 [ %72, %74 ], [ %85, %89 ]
  %99 = phi i64 [ %81, %74 ], [ %90, %89 ]
  %100 = trunc i64 %99 to i32
  %101 = icmp eq i32 %100, -1
  br i1 %101, label %102, label %152

102:                                              ; preds = %94, %97, %70, %82, %74
  %103 = phi i32 [ 0, %70 ], [ 0, %82 ], [ %72, %74 ], [ %98, %97 ], [ %85, %94 ]
  %104 = load atomic i32, i32* %65 monotonic, align 4
  %105 = and i32 %104, 1
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %117, label %107

107:                                              ; preds = %102
  %108 = icmp eq i32 %103, 0
  br i1 %108, label %134, label %109

109:                                              ; preds = %107
  %110 = bitcast %"class.WTF::StringImpl"* %69 to i8*
  %111 = zext i32 %103 to i64
  %112 = tail call i8* @memchr(i8* %110, i32 13, i64 %111) #17
  %113 = icmp eq i8* %112, null
  %114 = ptrtoint i8* %112 to i64
  %115 = ptrtoint %"class.WTF::StringImpl"* %69 to i64
  %116 = sub i64 %114, %115
  br i1 %113, label %134, label %130

117:                                              ; preds = %102
  %118 = bitcast %"class.WTF::StringImpl"* %69 to i16*
  %119 = icmp eq i32 %103, 0
  br i1 %119, label %134, label %120

120:                                              ; preds = %117
  %121 = zext i32 %103 to i64
  br label %122

122:                                              ; preds = %127, %120
  %123 = phi i64 [ %128, %127 ], [ 0, %120 ]
  %124 = getelementptr inbounds i16, i16* %118, i64 %123
  %125 = load i16, i16* %124, align 2
  %126 = icmp eq i16 %125, 13
  br i1 %126, label %130, label %127

127:                                              ; preds = %122
  %128 = add nuw nsw i64 %123, 1
  %129 = icmp eq i64 %128, %121
  br i1 %129, label %134, label %122

130:                                              ; preds = %122, %109
  %131 = phi i64 [ %116, %109 ], [ %123, %122 ]
  %132 = trunc i64 %131 to i32
  %133 = icmp eq i32 %132, -1
  br i1 %133, label %134, label %152

134:                                              ; preds = %127, %130, %109, %117, %107
  br i1 %63, label %218, label %135

135:                                              ; preds = %134
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %218

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  %143 = zext i32 %142 to i33
  %144 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %143, i33 1) #15
  %145 = extractvalue { i33, i1 } %144, 1
  %146 = extractvalue { i33, i1 } %144, 0
  %147 = icmp slt i33 %146, 0
  %148 = or i1 %145, %147
  br i1 %148, label %149, label %150, !prof !3

149:                                              ; preds = %140
  tail call void @llvm.trap() #15
  unreachable

150:                                              ; preds = %140
  %151 = trunc i33 %146 to i32
  store i32 %151, i32* %141, align 4
  br label %218

152:                                              ; preds = %130, %97
  %153 = bitcast %"class.WTF::StringBuilder"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %153) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %153, i8 -86, i64 48, i1 false)
  %154 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %154, align 8
  %155 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 1
  %156 = bitcast %union.anon.2794* %155 to i8*
  store i8 0, i8* %156, align 8
  %157 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 2
  store i32 0, i32* %157, align 8
  %158 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 3
  store i8 1, i8* %158, align 4
  %159 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 4
  store i8 0, i8* %159, align 1
  %160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %161 = icmp eq %"class.WTF::StringImpl"* %160, null
  br i1 %161, label %162, label %163

162:                                              ; preds = %152
  call void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"* nonnull %2, i32 0) #15
  br label %169

163:                                              ; preds = %152
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 1
  %165 = load i32, i32* %164, align 4
  call void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"* nonnull %2, i32 %165) #15
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %169, label %167

167:                                              ; preds = %163
  %168 = zext i32 %165 to i64
  br label %187

169:                                              ; preds = %215, %162, %163
  %170 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %2) #15
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %2) #15
  %171 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %154, align 8
  %172 = icmp eq %"class.WTF::StringImpl"* %171, null
  br i1 %172, label %186, label %173

173:                                              ; preds = %169
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load atomic i32, i32* %174 monotonic, align 4
  %176 = and i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 0
  %179 = load i32, i32* %178, align 4
  br i1 %177, label %180, label %182

180:                                              ; preds = %173
  %181 = add i32 %179, -1
  store i32 %181, i32* %178, align 4
  br label %182

182:                                              ; preds = %180, %173
  %183 = phi i32 [ %181, %180 ], [ %179, %173 ]
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %186

185:                                              ; preds = %182
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %171) #15
  br label %186

186:                                              ; preds = %169, %182, %185
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %153) #15
  br label %218

187:                                              ; preds = %215, %167
  %188 = phi i64 [ 0, %167 ], [ %216, %215 ]
  %189 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %190 = icmp eq %"class.WTF::StringImpl"* %189, null
  br i1 %190, label %213, label %191

191:                                              ; preds = %187
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %189, i64 0, i32 1
  %193 = load i32, i32* %192, align 4
  %194 = zext i32 %193 to i64
  %195 = icmp ult i64 %188, %194
  br i1 %195, label %196, label %213

196:                                              ; preds = %191
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %189, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = load atomic i32, i32* %197 monotonic, align 4
  %199 = and i32 %198, 1
  %200 = icmp eq i32 %199, 0
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %189, i64 1
  br i1 %200, label %207, label %202

202:                                              ; preds = %196
  %203 = bitcast %"class.WTF::StringImpl"* %201 to i8*
  %204 = getelementptr inbounds i8, i8* %203, i64 %188
  %205 = load i8, i8* %204, align 1
  %206 = zext i8 %205 to i16
  br label %211

207:                                              ; preds = %196
  %208 = bitcast %"class.WTF::StringImpl"* %201 to i16*
  %209 = getelementptr inbounds i16, i16* %208, i64 %188
  %210 = load i16, i16* %209, align 2
  br label %211

211:                                              ; preds = %202, %207
  %212 = phi i16 [ %206, %202 ], [ %210, %207 ]
  switch i16 %212, label %213 [
    i16 10, label %215
    i16 13, label %215
  ]

213:                                              ; preds = %187, %191, %211
  %214 = phi i16 [ %212, %211 ], [ 0, %191 ], [ 0, %187 ]
  call void @_ZN3WTF13StringBuilder6AppendEDs(%"class.WTF::StringBuilder"* nonnull %2, i16 zeroext %214)
  br label %215

215:                                              ; preds = %211, %211, %213
  %216 = add nuw nsw i64 %188, 1
  %217 = icmp eq i64 %216, %168
  br i1 %217, label %169, label %187

218:                                              ; preds = %59, %150, %135, %134, %186
  %219 = phi %"class.WTF::StringImpl"* [ %170, %186 ], [ null, %134 ], [ %62, %135 ], [ %62, %150 ], [ null, %59 ]
  ret %"class.WTF::StringImpl"* %219
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEDs(%"class.WTF::StringBuilder"*, i16 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = alloca i16, align 2
  store i16 %1, i16* %4, align 2
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp ult i16 %1, 256
  %9 = and i1 %8, %7
  br i1 %9, label %10, label %35

10:                                               ; preds = %2
  %11 = trunc i16 %1 to i8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3)
  store i8 %11, i8* %3, align 1
  %12 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %13 = load i8, i8* %12, align 1, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %10
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #15
  br label %16

16:                                               ; preds = %15, %10
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %19, %21
  br i1 %22, label %30, label %23, !prof !3

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.WTF::Vector.2795", %"class.WTF::Vector.2795"* %17, i64 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = zext i32 %19 to i64
  %27 = getelementptr inbounds i8, i8* %25, i64 %26
  store i8 %11, i8* %27, align 1
  %28 = load i32, i32* %18, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %18, align 4
  br label %31

30:                                               ; preds = %16
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.2795"* %17, i8* nonnull dereferenceable(1) %3) #15
  br label %31

31:                                               ; preds = %23, %30
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3)
  br label %62

35:                                               ; preds = %2
  %36 = icmp eq i8 %6, 0
  br i1 %36, label %37, label %41

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %39 = load i8, i8* %38, align 1, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %37, %35
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #15
  br label %42

42:                                               ; preds = %37, %41
  %43 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %45, %47
  br i1 %48, label %56, label %49, !prof !3

49:                                               ; preds = %42
  %50 = bitcast %union.anon.2794* %43 to i16**
  %51 = load i16*, i16** %50, align 8
  %52 = zext i32 %45 to i64
  %53 = getelementptr inbounds i16, i16* %51, i64 %52
  store i16 %1, i16* %53, align 2
  %54 = load i32, i32* %44, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %44, align 4
  br label %58

56:                                               ; preds = %42
  %57 = bitcast %union.anon.2794* %43 to %"class.WTF::Vector.2800"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.2800"* %57, i16* nonnull dereferenceable(2) %4) #15
  br label %58

58:                                               ; preds = %49, %56
  %59 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %60 = load i32, i32* %59, align 8
  %61 = add i32 %60, 1
  store i32 %61, i32* %59, align 8
  br label %62

62:                                               ; preds = %58, %31
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink18TextControlElement18IsPlaceholderEmptyEv(%"class.blink::TextControlElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kPlaceholderAttrE, align 8
  %3 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %3, align 8
  %5 = icmp eq %"class.blink::ElementData"* %4, null
  br i1 %5, label %56, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %6
  %12 = bitcast %"class.blink::ElementData"* %4 to %"class.blink::UniqueElementData"*
  %13 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1, i32 1
  %14 = bitcast %"class.blink::Member.354"* %13 to %"class.blink::Attribute"**
  %15 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %12, i64 0, i32 2, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  br label %23

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %4, i64 1
  %20 = bitcast %"class.blink::ElementData"* %19 to %"class.blink::Attribute"*
  %21 = lshr i32 %8, 1
  %22 = and i32 %21, 268435455
  br label %23

23:                                               ; preds = %18, %11
  %24 = phi %"class.blink::Attribute"* [ %20, %18 ], [ %15, %11 ]
  %25 = phi i32 [ %22, %18 ], [ %17, %11 ]
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %24, i64 %26
  %28 = icmp eq i32 %25, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %34

34:                                               ; preds = %49, %29
  %35 = phi %"class.blink::Attribute"* [ %24, %29 ], [ %50, %49 ]
  %36 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %37, %31
  br i1 %38, label %52, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %41, %42
  br i1 %43, label %44, label %49

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 4, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %46, %47
  br i1 %48, label %52, label %49

49:                                               ; preds = %44, %39
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 1
  %51 = icmp eq %"class.blink::Attribute"* %50, %27
  br i1 %51, label %56, label %34

52:                                               ; preds = %44, %34
  %53 = icmp eq %"class.blink::Attribute"* %35, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 0, i32 1
  br label %58

56:                                               ; preds = %49, %52, %23, %1
  %57 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %58

58:                                               ; preds = %54, %56
  %59 = phi %"class.WTF::AtomicString"* [ %57, %56 ], [ %55, %54 ]
  %60 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %59, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %66, label %63

63:                                               ; preds = %58
  %64 = tail call i32 @_ZN3WTF10StringImpl4FindEPFbDsEj(%"class.WTF::StringImpl"* nonnull %61, i1 (i16)* nonnull @_ZN5blinkL14IsNotLineBreakEDs, i32 0) #15
  %65 = icmp eq i32 %64, -1
  br label %66

66:                                               ; preds = %58, %63
  %67 = phi i1 [ %65, %63 ], [ true, %58 ]
  ret i1 %67
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN5blinkL14IsNotLineBreakEDs(i16 zeroext) #7 {
  %2 = icmp ne i16 %0, 10
  %3 = icmp ne i16 %0, 13
  %4 = and i1 %2, %3
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink18TextControlElement26PlaceholderShouldBeVisibleEv(%"class.blink::TextControlElement"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::TextControlElement"* %0 to i1 (%"class.blink::TextControlElement"*)***
  %3 = load i1 (%"class.blink::TextControlElement"*)**, i1 (%"class.blink::TextControlElement"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.blink::TextControlElement"*)*, i1 (%"class.blink::TextControlElement"*)** %3, i64 192
  %5 = load i1 (%"class.blink::TextControlElement"*)*, i1 (%"class.blink::TextControlElement"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.blink::TextControlElement"* %0) #15
  br i1 %6, label %7, label %103

7:                                                ; preds = %1
  %8 = tail call %"class.WTF::StringImpl"* @_ZNK5blink18TextControlElement16InnerEditorValueEv(%"class.blink::TextControlElement"* %0)
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %89

14:                                               ; preds = %7, %10
  %15 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kPlaceholderAttrE, align 8
  %16 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %16, align 8
  %18 = icmp eq %"class.blink::ElementData"* %17, null
  br i1 %18, label %69, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %17, i64 0, i32 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.blink::ElementData"* %17 to %"class.blink::UniqueElementData"*
  %26 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %17, i64 1, i32 1
  %27 = bitcast %"class.blink::Member.354"* %26 to %"class.blink::Attribute"**
  %28 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %25, i64 0, i32 2, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  br label %36

31:                                               ; preds = %19
  %32 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %17, i64 1
  %33 = bitcast %"class.blink::ElementData"* %32 to %"class.blink::Attribute"*
  %34 = lshr i32 %21, 1
  %35 = and i32 %34, 268435455
  br label %36

36:                                               ; preds = %31, %24
  %37 = phi %"class.blink::Attribute"* [ %33, %31 ], [ %28, %24 ]
  %38 = phi i32 [ %35, %31 ], [ %30, %24 ]
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 %39
  %41 = icmp eq i32 %38, 0
  br i1 %41, label %69, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %15, i64 0, i32 0, i32 0
  %44 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %47

47:                                               ; preds = %62, %42
  %48 = phi %"class.blink::Attribute"* [ %37, %42 ], [ %63, %62 ]
  %49 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %48, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %49, align 8
  %51 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %50, %44
  br i1 %51, label %65, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %50, i64 0, i32 3, i32 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %54, %55
  br i1 %56, label %57, label %62

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %50, i64 0, i32 4, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %59, %60
  br i1 %61, label %65, label %62

62:                                               ; preds = %57, %52
  %63 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %48, i64 1
  %64 = icmp eq %"class.blink::Attribute"* %63, %40
  br i1 %64, label %69, label %47

65:                                               ; preds = %57, %47
  %66 = icmp eq %"class.blink::Attribute"* %48, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %48, i64 0, i32 1
  br label %71

69:                                               ; preds = %62, %65, %36, %14
  %70 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %71

71:                                               ; preds = %69, %67
  %72 = phi %"class.WTF::AtomicString"* [ %70, %69 ], [ %68, %67 ]
  %73 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %87, label %76

76:                                               ; preds = %71
  %77 = tail call i32 @_ZN3WTF10StringImpl4FindEPFbDsEj(%"class.WTF::StringImpl"* nonnull %74, i1 (i16)* nonnull @_ZN5blinkL14IsNotLineBreakEDs, i32 0) #15
  %78 = icmp eq i32 %77, -1
  br i1 %78, label %87, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 7, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %87, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %85, 0
  br label %87

87:                                               ; preds = %71, %76, %79, %83
  %88 = phi i1 [ %86, %83 ], [ true, %79 ], [ false, %76 ], [ false, %71 ]
  br i1 %9, label %103, label %89

89:                                               ; preds = %10, %87
  %90 = phi i1 [ %88, %87 ], [ false, %10 ]
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %89
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %89
  %100 = phi i32 [ %98, %97 ], [ %96, %89 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #15
  br label %103

103:                                              ; preds = %102, %99, %87, %1
  %104 = phi i1 [ false, %1 ], [ %88, %87 ], [ %90, %99 ], [ %90, %102 ]
  ret i1 %104
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink18TextControlElement16InnerEditorValueEv(%"class.blink::TextControlElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringBuilder", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::TextControlInnerEditorElement"*, %"class.blink::TextControlInnerEditorElement"** %4, align 8
  %6 = icmp eq %"class.blink::TextControlInnerEditorElement"* %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.blink::TextControlElement"* %0 to i1 (%"class.blink::Element"*)***
  %10 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %10, i64 126
  %12 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::Element"* %8) #15
  br i1 %13, label %36, label %14

14:                                               ; preds = %1, %7
  %15 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %269, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %269

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i33
  %28 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %27, i33 1) #15
  %29 = extractvalue { i33, i1 } %28, 1
  %30 = extractvalue { i33, i1 } %28, 0
  %31 = icmp slt i33 %30, 0
  %32 = or i1 %29, %31
  br i1 %32, label %33, label %34, !prof !3

33:                                               ; preds = %24
  tail call void @llvm.trap() #15
  unreachable

34:                                               ; preds = %24
  %35 = trunc i33 %30 to i32
  store i32 %35, i32* %25, align 4
  br label %269

36:                                               ; preds = %7
  %37 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %38 = load %"class.blink::Node"*, %"class.blink::Node"** %37, align 8
  %39 = icmp eq %"class.blink::Node"* %38, null
  br i1 %39, label %40, label %62

40:                                               ; preds = %36
  %41 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %41, i64 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %269, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %269

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = zext i32 %52 to i33
  %54 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %53, i33 1) #15
  %55 = extractvalue { i33, i1 } %54, 1
  %56 = extractvalue { i33, i1 } %54, 0
  %57 = icmp slt i33 %56, 0
  %58 = or i1 %55, %57
  br i1 %58, label %59, label %60, !prof !3

59:                                               ; preds = %50
  tail call void @llvm.trap() #15
  unreachable

60:                                               ; preds = %50
  %61 = trunc i33 %56 to i32
  store i32 %61, i32* %51, align 4
  br label %269

62:                                               ; preds = %36
  %63 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %38, i64 0, i32 1
  %64 = load i32, i32* %63, align 8
  %65 = and i32 %64, 12
  %66 = icmp eq i32 %65, 4
  %67 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %38, i64 0, i32 5, i32 0, i32 0
  %68 = load %"class.blink::Node"*, %"class.blink::Node"** %67, align 8
  %69 = icmp eq %"class.blink::Node"* %68, null
  br i1 %66, label %70, label %126

70:                                               ; preds = %62
  br i1 %69, label %92, label %71

71:                                               ; preds = %70
  %72 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %68, i64 0, i32 5, i32 0, i32 0
  %73 = load %"class.blink::Node"*, %"class.blink::Node"** %72, align 8
  %74 = icmp eq %"class.blink::Node"* %73, null
  br i1 %74, label %75, label %165

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %68, i64 0, i32 1
  %77 = load i32, i32* %76, align 8
  %78 = and i32 %77, 48
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %165

80:                                               ; preds = %75
  %81 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kBrTagE, align 8
  %82 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %81, i64 0, i32 0, i32 0, i32 0
  %83 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %68, i64 1, i32 2
  %85 = bitcast %"class.blink::Member.318"* %84 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %86 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %86, i64 0, i32 3, i32 0, i32 0, i32 0
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %83, i64 0, i32 3, i32 0, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %88, %90
  br i1 %91, label %92, label %165

92:                                               ; preds = %70, %80
  %93 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %38, i64 1
  %94 = bitcast %"class.blink::Node"* %93 to i8*
  %95 = load i8, i8* %94, align 8, !range !2
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %101, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %38, i64 1, i32 0, i32 0, i32 1
  %99 = bitcast %"class.blink::TraceWrapperV8Reference"* %98 to %"class.blink::ParkableString"*
  %100 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %99) #15
  br label %104

101:                                              ; preds = %92
  %102 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %38, i64 1, i32 1
  %103 = bitcast i32* %102 to %"class.WTF::String"*
  br label %104

104:                                              ; preds = %97, %101
  %105 = phi %"class.WTF::String"* [ %100, %97 ], [ %103, %101 ]
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %105, i64 0, i32 0, i32 0
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  %108 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %108, label %269, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %269

114:                                              ; preds = %109
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  %117 = zext i32 %116 to i33
  %118 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %117, i33 1) #15
  %119 = extractvalue { i33, i1 } %118, 1
  %120 = extractvalue { i33, i1 } %118, 0
  %121 = icmp slt i33 %120, 0
  %122 = or i1 %119, %121
  br i1 %122, label %123, label %124, !prof !3

123:                                              ; preds = %114
  tail call void @llvm.trap() #15
  unreachable

124:                                              ; preds = %114
  %125 = trunc i33 %120 to i32
  store i32 %125, i32* %115, align 4
  br label %269

126:                                              ; preds = %62
  %127 = xor i1 %69, true
  %128 = and i32 %64, 48
  %129 = icmp ne i32 %128, 0
  %130 = or i1 %129, %127
  br i1 %130, label %165, label %131

131:                                              ; preds = %126
  %132 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kBrTagE, align 8
  %133 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %132, i64 0, i32 0, i32 0, i32 0
  %134 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %133, align 8
  %135 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %38, i64 1, i32 2
  %136 = bitcast %"class.blink::Member.318"* %135 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %137 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %136, align 8
  %138 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %137, i64 0, i32 3, i32 0, i32 0, i32 0
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  %140 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %134, i64 0, i32 3, i32 0, i32 0, i32 0
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %139, %141
  br i1 %142, label %143, label %165

143:                                              ; preds = %131
  %144 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %145 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %144, i64 0, i32 0, i32 0
  %146 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %145, align 8
  %147 = icmp eq %"class.WTF::StringImpl"* %146, null
  br i1 %147, label %269, label %148

148:                                              ; preds = %143
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load atomic i32, i32* %149 monotonic, align 4
  %151 = and i32 %150, 2
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %269

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 0
  %155 = load i32, i32* %154, align 4
  %156 = zext i32 %155 to i33
  %157 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %156, i33 1) #15
  %158 = extractvalue { i33, i1 } %157, 1
  %159 = extractvalue { i33, i1 } %157, 0
  %160 = icmp slt i33 %159, 0
  %161 = or i1 %158, %160
  br i1 %161, label %162, label %163, !prof !3

162:                                              ; preds = %153
  tail call void @llvm.trap() #15
  unreachable

163:                                              ; preds = %153
  %164 = trunc i33 %159 to i32
  store i32 %164, i32* %154, align 4
  br label %269

165:                                              ; preds = %131, %71, %80, %126, %75
  %166 = bitcast %"class.WTF::StringBuilder"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %166) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %166, i8 -86, i64 48, i1 false)
  %167 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %167, align 8
  %168 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 1
  %169 = bitcast %union.anon.2794* %168 to i8*
  store i8 0, i8* %169, align 8
  %170 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 2
  store i32 0, i32* %170, align 8
  %171 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 3
  store i8 1, i8* %171, align 4
  %172 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 4
  store i8 0, i8* %172, align 1
  %173 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kBrTagE, align 8
  %175 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %174, i64 0, i32 0, i32 0, i32 0
  %176 = bitcast %"class.WTF::StringView"* %3 to i8*
  %177 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %178 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %179 = bitcast i8** %178 to %"class.WTF::StringImpl"**
  %180 = bitcast %"class.WTF::StringView"* %3 to i64*
  %181 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %182 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %201

183:                                              ; preds = %258, %266
  %184 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %2) #15
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %2) #15
  %185 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %167, align 8
  %186 = icmp eq %"class.WTF::StringImpl"* %185, null
  br i1 %186, label %200, label %187

187:                                              ; preds = %183
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %185, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = load atomic i32, i32* %188 monotonic, align 4
  %190 = and i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %185, i64 0, i32 0
  %193 = load i32, i32* %192, align 4
  br i1 %191, label %194, label %196

194:                                              ; preds = %187
  %195 = add i32 %193, -1
  store i32 %195, i32* %192, align 4
  br label %196

196:                                              ; preds = %194, %187
  %197 = phi i32 [ %195, %194 ], [ %193, %187 ]
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %200

199:                                              ; preds = %196
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %185) #15
  br label %200

200:                                              ; preds = %183, %196, %199
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %166) #15
  br label %269

201:                                              ; preds = %165, %266
  %202 = phi %"class.blink::Node"* [ %173, %165 ], [ %267, %266 ]
  %203 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %202, i64 0, i32 1
  %204 = load i32, i32* %203, align 8
  %205 = and i32 %204, 48
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %221

207:                                              ; preds = %201
  %208 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %175, align 8
  %209 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %202, i64 1, i32 2
  %210 = bitcast %"class.blink::Member.318"* %209 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %211 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %210, align 8
  %212 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %211, i64 0, i32 3, i32 0, i32 0, i32 0
  %213 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %212, align 8
  %214 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %208, i64 0, i32 3, i32 0, i32 0, i32 0
  %215 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %214, align 8
  %216 = icmp eq %"class.WTF::StringImpl"* %213, %215
  br i1 %216, label %217, label %221

217:                                              ; preds = %207
  %218 = load %"class.blink::Node"*, %"class.blink::Node"** %182, align 8
  %219 = icmp eq %"class.blink::Node"* %202, %218
  br i1 %219, label %249, label %220

220:                                              ; preds = %217
  call void @_ZN3WTF13StringBuilder6AppendEDs(%"class.WTF::StringBuilder"* nonnull %2, i16 zeroext 10)
  br label %249

221:                                              ; preds = %201, %207
  %222 = and i32 %204, 12
  %223 = icmp eq i32 %222, 4
  br i1 %223, label %224, label %249

224:                                              ; preds = %221
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %176) #15
  %225 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %202, i64 1
  %226 = bitcast %"class.blink::Node"* %225 to i8*
  %227 = load i8, i8* %226, align 8, !range !2
  %228 = icmp eq i8 %227, 0
  br i1 %228, label %233, label %229

229:                                              ; preds = %224
  %230 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %202, i64 1, i32 0, i32 0, i32 1
  %231 = bitcast %"class.blink::TraceWrapperV8Reference"* %230 to %"class.blink::ParkableString"*
  %232 = call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %231) #15
  br label %236

233:                                              ; preds = %224
  %234 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %202, i64 1, i32 1
  %235 = bitcast i32* %234 to %"class.WTF::String"*
  br label %236

236:                                              ; preds = %229, %233
  %237 = phi %"class.WTF::String"* [ %232, %229 ], [ %235, %233 ]
  %238 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %237, i64 0, i32 0, i32 0
  %239 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %238, align 8
  %240 = icmp eq %"class.WTF::StringImpl"* %239, null
  br i1 %240, label %241, label %243

241:                                              ; preds = %236
  store i8* null, i8** %178, align 8
  %242 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %242, i64* %180, align 8
  br label %247

243:                                              ; preds = %236
  store %"class.WTF::StringImpl"* %239, %"class.WTF::StringImpl"** %177, align 8
  %244 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 1
  %245 = load i32, i32* %244, align 4
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 1
  store %"class.WTF::StringImpl"* %246, %"class.WTF::StringImpl"** %179, align 8
  br label %247

247:                                              ; preds = %241, %243
  %248 = phi i32 [ %245, %243 ], [ 0, %241 ]
  store i32 %248, i32* %181, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %176) #15
  br label %249

249:                                              ; preds = %221, %220, %217, %247
  %250 = load i32, i32* %203, align 8
  %251 = and i32 %250, 2
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %258, label %253

253:                                              ; preds = %249
  %254 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %202, i64 1
  %255 = bitcast %"class.blink::Node"* %254 to %"class.blink::Node"**
  %256 = load %"class.blink::Node"*, %"class.blink::Node"** %255, align 8
  %257 = icmp eq %"class.blink::Node"* %256, null
  br i1 %257, label %258, label %266

258:                                              ; preds = %253, %249
  %259 = icmp eq %"class.blink::Node"* %202, %173
  br i1 %259, label %183, label %260

260:                                              ; preds = %258
  %261 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %202, i64 0, i32 5, i32 0, i32 0
  %262 = load %"class.blink::Node"*, %"class.blink::Node"** %261, align 8
  %263 = icmp eq %"class.blink::Node"* %262, null
  br i1 %263, label %264, label %266

264:                                              ; preds = %260
  %265 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %202, %"class.blink::Node"* %173) #15
  br label %266

266:                                              ; preds = %253, %260, %264
  %267 = phi %"class.blink::Node"* [ %265, %264 ], [ %262, %260 ], [ %256, %253 ]
  %268 = icmp eq %"class.blink::Node"* %267, null
  br i1 %268, label %183, label %201

269:                                              ; preds = %163, %148, %143, %124, %109, %104, %60, %45, %40, %34, %19, %14, %200
  %270 = phi %"class.WTF::StringImpl"* [ %184, %200 ], [ null, %14 ], [ %17, %19 ], [ %17, %34 ], [ null, %40 ], [ %43, %45 ], [ %43, %60 ], [ %146, %163 ], [ %146, %148 ], [ null, %143 ], [ %107, %124 ], [ %107, %109 ], [ null, %104 ]
  ret %"class.WTF::StringImpl"* %270
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.WTF::String"* @_ZNK5blink18TextControlElement14SuggestedValueEv(%"class.blink::TextControlElement"* readnone) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 7
  ret %"class.WTF::String"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLElement"* @_ZNK5blink18TextControlElement18PlaceholderElementEv(%"class.blink::TextControlElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = bitcast %"class.blink::TextControlElement"* %0 to i1 (%"class.blink::TextControlElement"*)***
  %4 = load i1 (%"class.blink::TextControlElement"*)**, i1 (%"class.blink::TextControlElement"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.blink::TextControlElement"*)*, i1 (%"class.blink::TextControlElement"*)** %4, i64 192
  %6 = load i1 (%"class.blink::TextControlElement"*)*, i1 (%"class.blink::TextControlElement"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.blink::TextControlElement"* %0) #15
  br i1 %7, label %8, label %25

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink7Element19UserAgentShadowRootEv(%"class.blink::Element"* %9) #15
  %11 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %10, i64 0, i32 1
  %12 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink20shadow_element_names14kIdPlaceholderE, align 8
  %13 = tail call %"class.blink::Element"* @_ZNK5blink9TreeScope14getElementByIdERKN3WTF12AtomicStringE(%"class.blink::TreeScope"* %11, %"class.WTF::AtomicString"* dereferenceable(8) %12) #15
  %14 = icmp eq %"class.blink::Element"* %13, null
  br i1 %14, label %23, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %13, i64 0, i32 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 48
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str, i64 0, i64 0), i32 203, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #15
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #15
  br label %23

23:                                               ; preds = %15, %8, %20
  %24 = bitcast %"class.blink::Element"* %13 to %"class.blink::HTMLElement"*
  br label %25

25:                                               ; preds = %1, %23
  %26 = phi %"class.blink::HTMLElement"* [ %24, %23 ], [ null, %1 ]
  ret %"class.blink::HTMLElement"* %26
}

declare %"class.blink::ShadowRoot"* @_ZNK5blink7Element19UserAgentShadowRootEv(%"class.blink::Element"*) local_unnamed_addr #1

declare %"class.blink::Element"* @_ZNK5blink9TreeScope14getElementByIdERKN3WTF12AtomicStringE(%"class.blink::TreeScope"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare void @_ZN5blink7Element22SetInlineStylePropertyENS_13CSSPropertyIDENS_10CSSValueIDEb(%"class.blink::Element"*, i32, i32, i1 zeroext) local_unnamed_addr #1

declare void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18TextControlElement17setSelectionStartEj(%"class.blink::TextControlElement"*, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call i32 @_ZNK5blink18TextControlElement12selectionEndEv(%"class.blink::TextControlElement"* %0)
  %4 = icmp ugt i32 %3, %1
  %5 = select i1 %4, i32 %3, i32 %1
  %6 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::Document"*, %"class.blink::Document"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %9, i64 0, i32 43, i32 0, i32 0
  %11 = load %"class.blink::Element"*, %"class.blink::Element"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = icmp eq %"class.blink::Element"* %11, %12
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = tail call zeroext i1 @_ZNK5blink8Document25WillUpdateFocusAppearanceEv(%"class.blink::Document"* %9) #15
  br i1 %15, label %16, label %19

16:                                               ; preds = %14, %2
  %17 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 6
  %18 = load i32, i32* %17, align 4
  br label %21

19:                                               ; preds = %14
  %20 = tail call i32 @_ZNK5blink18TextControlElement25ComputeSelectionDirectionEv(%"class.blink::TextControlElement"* %0) #15
  br label %21

21:                                               ; preds = %16, %19
  %22 = phi i32 [ %18, %16 ], [ %20, %19 ]
  %23 = tail call fastcc dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blinkL15DirectionStringENS_27TextFieldSelectionDirectionE(i32 %22) #15
  %24 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %23, i64 0, i32 0
  tail call void @_ZN5blink18TextControlElement27setSelectionRangeForBindingEjjRKN3WTF6StringE(%"class.blink::TextControlElement"* %0, i32 %1, i32 %5, %"class.WTF::String"* dereferenceable(8) %24)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18TextControlElement27setSelectionRangeForBindingEjjRKN3WTF6StringE(%"class.blink::TextControlElement"*, i32, i32, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %13, label %17

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %14, align 8
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %16 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %15, i64* %16, align 8
  br label %25

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %18, align 8
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 1
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %23 = bitcast i8** %22 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"** %23, align 8
  %24 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

25:                                               ; preds = %17, %13
  %26 = phi i64 [ %24, %17 ], [ %15, %13 ]
  %27 = phi i32 [ %20, %17 ], [ 0, %13 ]
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %27, i32* %28, align 8
  %29 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #15
  %30 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %26, i64* %30, align 8
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0), i8** %31, align 8
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 7, i32* %32, align 8
  %33 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #15
  br i1 %33, label %60, label %34

34:                                               ; preds = %25
  %35 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #15
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %38, label %42

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %39, align 8
  %40 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %41 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %40, i64* %41, align 8
  br label %50

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %43, align 8
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 1
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %48 = bitcast i8** %47 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %46, %"class.WTF::StringImpl"** %48, align 8
  %49 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %50

50:                                               ; preds = %42, %38
  %51 = phi i64 [ %49, %42 ], [ %40, %38 ]
  %52 = phi i32 [ %45, %42 ], [ 0, %38 ]
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %52, i32* %53, align 8
  %54 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #15
  %55 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %51, i64* %55, align 8
  %56 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i64 0, i64 0), i8** %56, align 8
  %57 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 8, i32* %57, align 8
  %58 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #15
  %59 = select i1 %58, i32 2, i32 0
  br label %60

60:                                               ; preds = %50, %25
  %61 = phi i32 [ 1, %25 ], [ %59, %50 ]
  %62 = call zeroext i1 @_ZN5blink18TextControlElement17SetSelectionRangeEjjNS_27TextFieldSelectionDirectionE(%"class.blink::TextControlElement"* %0, i32 %1, i32 %2, i32 %61)
  br i1 %62, label %63, label %76

63:                                               ; preds = %60
  %64 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names7kSelectE, align 8
  %65 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #15
  %66 = bitcast i8* %65 to %"class.blink::Event"*
  call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %66, %"class.WTF::AtomicString"* dereferenceable(8) %64, i32 0, i32 1, i32 1) #15
  %67 = getelementptr inbounds i8, i8* %65, i64 -4
  %68 = bitcast i8* %67 to i16*
  %69 = load atomic i16, i16* %68 monotonic, align 2
  %70 = or i16 %69, 1
  store atomic i16 %70, i16* %68 release, align 2
  %71 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink5Event9SetTargetEPNS_11EventTargetE(%"class.blink::Event"* %66, %"class.blink::EventTarget"* %71) #15
  %72 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %73 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %73, i64 0, i32 2, i32 0, i32 0
  %75 = load %"class.blink::Document"*, %"class.blink::Document"** %74, align 8
  call void @_ZN5blink8Document26EnqueueAnimationFrameEventEPNS_5EventE(%"class.blink::Document"* %75, %"class.blink::Event"* %66) #15
  br label %76

76:                                               ; preds = %63, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink18TextControlElement12selectionEndEv(%"class.blink::TextControlElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::SelectionTemplate", align 8
  %3 = alloca %"class.blink::PositionTemplate", align 8
  %4 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.blink::TextControlElement"* %0 to i1 (%"class.blink::Element"*)***
  %6 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %6, i64 126
  %8 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.blink::Element"* %4) #15
  br i1 %9, label %10, label %46

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %12, i64 0, i32 2, i32 0, i32 0
  %14 = load %"class.blink::Document"*, %"class.blink::Document"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %14, i64 0, i32 43, i32 0, i32 0
  %16 = load %"class.blink::Element"*, %"class.blink::Element"** %15, align 8
  %17 = icmp eq %"class.blink::Element"* %16, %4
  br i1 %17, label %18, label %20

18:                                               ; preds = %10
  %19 = tail call zeroext i1 @_ZNK5blink8Document25WillUpdateFocusAppearanceEv(%"class.blink::Document"* %14) #15
  br i1 %19, label %20, label %23

20:                                               ; preds = %10, %18
  %21 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 5
  %22 = load i32, i32* %21, align 8
  br label %46

23:                                               ; preds = %18
  %24 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %11, align 8
  %25 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %24, i64 0, i32 2, i32 0, i32 0
  %26 = load %"class.blink::Document"*, %"class.blink::Document"** %25, align 8
  %27 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %26) #15
  %28 = icmp eq %"class.blink::LocalFrame"* %27, null
  br i1 %28, label %46, label %29

29:                                               ; preds = %23
  %30 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %11, align 8
  %31 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %30, i64 0, i32 2, i32 0, i32 0
  %32 = load %"class.blink::Document"*, %"class.blink::Document"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %32, i64 0, i32 5, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = add nsw i32 %34, 1
  store i32 %35, i32* %33, align 4
  %36 = bitcast %"class.blink::SelectionTemplate"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %36) #15
  %37 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %27, i64 0, i32 14, i32 0, i32 0
  %38 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %37, align 8
  call void @_ZNK5blink14FrameSelection21GetSelectionInDOMTreeEv(%"class.blink::SelectionTemplate"* nonnull sret %2, %"class.blink::FrameSelection"* %38) #15
  %39 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 1, i32 0, i32 0
  %40 = load %"class.blink::TextControlInnerEditorElement"*, %"class.blink::TextControlInnerEditorElement"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %40, i64 0, i32 0, i32 0
  %42 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #15
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18ComputeEndPositionEv(%"class.blink::PositionTemplate"* nonnull sret %3, %"class.blink::SelectionTemplate"* nonnull %2) #15
  %43 = call i32 @_ZN5blink18TextControlElement16IndexForPositionEPNS_11HTMLElementERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::HTMLElement"* %41, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %36) #15
  %44 = load i32, i32* %33, align 4
  %45 = add nsw i32 %44, -1
  store i32 %45, i32* %33, align 4
  br label %46

46:                                               ; preds = %29, %23, %1, %20
  %47 = phi i32 [ %22, %20 ], [ 0, %1 ], [ %43, %29 ], [ 0, %23 ]
  ret i32 %47
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink18TextControlElement18selectionDirectionEv(%"class.blink::TextControlElement"* readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %3, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %5, i64 0, i32 43, i32 0, i32 0
  %7 = load %"class.blink::Element"*, %"class.blink::Element"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = icmp eq %"class.blink::Element"* %7, %8
  br i1 %9, label %10, label %12

10:                                               ; preds = %1
  %11 = tail call zeroext i1 @_ZNK5blink8Document25WillUpdateFocusAppearanceEv(%"class.blink::Document"* %5) #15
  br i1 %11, label %12, label %15

12:                                               ; preds = %1, %10
  %13 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 6
  %14 = load i32, i32* %13, align 4
  br label %17

15:                                               ; preds = %10
  %16 = tail call i32 @_ZNK5blink18TextControlElement25ComputeSelectionDirectionEv(%"class.blink::TextControlElement"* %0)
  br label %17

17:                                               ; preds = %15, %12
  %18 = phi i32 [ %16, %15 ], [ %14, %12 ]
  %19 = tail call fastcc dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blinkL15DirectionStringENS_27TextFieldSelectionDirectionE(i32 %18)
  ret %"class.WTF::AtomicString"* %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18TextControlElement15setSelectionEndEj(%"class.blink::TextControlElement"*, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call i32 @_ZNK5blink18TextControlElement14selectionStartEv(%"class.blink::TextControlElement"* %0)
  %4 = icmp ult i32 %3, %1
  %5 = select i1 %4, i32 %3, i32 %1
  %6 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::Document"*, %"class.blink::Document"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %9, i64 0, i32 43, i32 0, i32 0
  %11 = load %"class.blink::Element"*, %"class.blink::Element"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = icmp eq %"class.blink::Element"* %11, %12
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = tail call zeroext i1 @_ZNK5blink8Document25WillUpdateFocusAppearanceEv(%"class.blink::Document"* %9) #15
  br i1 %15, label %16, label %19

16:                                               ; preds = %14, %2
  %17 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 6
  %18 = load i32, i32* %17, align 4
  br label %21

19:                                               ; preds = %14
  %20 = tail call i32 @_ZNK5blink18TextControlElement25ComputeSelectionDirectionEv(%"class.blink::TextControlElement"* %0) #15
  br label %21

21:                                               ; preds = %16, %19
  %22 = phi i32 [ %18, %16 ], [ %20, %19 ]
  %23 = tail call fastcc dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blinkL15DirectionStringENS_27TextFieldSelectionDirectionE(i32 %22) #15
  %24 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %23, i64 0, i32 0
  tail call void @_ZN5blink18TextControlElement27setSelectionRangeForBindingEjjRKN3WTF6StringE(%"class.blink::TextControlElement"* %0, i32 %5, i32 %1, %"class.WTF::String"* dereferenceable(8) %24)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink18TextControlElement14selectionStartEv(%"class.blink::TextControlElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::SelectionTemplate", align 8
  %3 = alloca %"class.blink::PositionTemplate", align 8
  %4 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.blink::TextControlElement"* %0 to i1 (%"class.blink::Element"*)***
  %6 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %6, i64 126
  %8 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.blink::Element"* %4) #15
  br i1 %9, label %10, label %46

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %12, i64 0, i32 2, i32 0, i32 0
  %14 = load %"class.blink::Document"*, %"class.blink::Document"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %14, i64 0, i32 43, i32 0, i32 0
  %16 = load %"class.blink::Element"*, %"class.blink::Element"** %15, align 8
  %17 = icmp eq %"class.blink::Element"* %16, %4
  br i1 %17, label %18, label %20

18:                                               ; preds = %10
  %19 = tail call zeroext i1 @_ZNK5blink8Document25WillUpdateFocusAppearanceEv(%"class.blink::Document"* %14) #15
  br i1 %19, label %20, label %23

20:                                               ; preds = %10, %18
  %21 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 4
  %22 = load i32, i32* %21, align 4
  br label %46

23:                                               ; preds = %18
  %24 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %11, align 8
  %25 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %24, i64 0, i32 2, i32 0, i32 0
  %26 = load %"class.blink::Document"*, %"class.blink::Document"** %25, align 8
  %27 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %26) #15
  %28 = icmp eq %"class.blink::LocalFrame"* %27, null
  br i1 %28, label %46, label %29

29:                                               ; preds = %23
  %30 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %11, align 8
  %31 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %30, i64 0, i32 2, i32 0, i32 0
  %32 = load %"class.blink::Document"*, %"class.blink::Document"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %32, i64 0, i32 5, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = add nsw i32 %34, 1
  store i32 %35, i32* %33, align 4
  %36 = bitcast %"class.blink::SelectionTemplate"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %36) #15
  %37 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %27, i64 0, i32 14, i32 0, i32 0
  %38 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %37, align 8
  call void @_ZNK5blink14FrameSelection21GetSelectionInDOMTreeEv(%"class.blink::SelectionTemplate"* nonnull sret %2, %"class.blink::FrameSelection"* %38) #15
  %39 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 1, i32 0, i32 0
  %40 = load %"class.blink::TextControlInnerEditorElement"*, %"class.blink::TextControlInnerEditorElement"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %40, i64 0, i32 0, i32 0
  %42 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #15
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeStartPositionEv(%"class.blink::PositionTemplate"* nonnull sret %3, %"class.blink::SelectionTemplate"* nonnull %2) #15
  %43 = call i32 @_ZN5blink18TextControlElement16IndexForPositionEPNS_11HTMLElementERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::HTMLElement"* %41, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %36) #15
  %44 = load i32, i32* %33, align 4
  %45 = add nsw i32 %44, -1
  store i32 %45, i32* %33, align 4
  br label %46

46:                                               ; preds = %29, %23, %1, %20
  %47 = phi i32 [ %22, %20 ], [ 0, %1 ], [ %43, %29 ], [ 0, %23 ]
  ret i32 %47
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18TextControlElement21setSelectionDirectionERKN3WTF6StringE(%"class.blink::TextControlElement"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = tail call i32 @_ZNK5blink18TextControlElement14selectionStartEv(%"class.blink::TextControlElement"* %0)
  %4 = tail call i32 @_ZNK5blink18TextControlElement12selectionEndEv(%"class.blink::TextControlElement"* %0)
  tail call void @_ZN5blink18TextControlElement27setSelectionRangeForBindingEjjRKN3WTF6StringE(%"class.blink::TextControlElement"* %0, i32 %3, i32 %4, %"class.WTF::String"* dereferenceable(8) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18TextControlElement6selectEv(%"class.blink::TextControlElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"struct.blink::FocusParams", align 8
  %4 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64 4) #15
  call void @_ZN5blink18TextControlElement27setSelectionRangeForBindingEjjRKN3WTF6StringE(%"class.blink::TextControlElement"* %0, i32 0, i32 -1, %"class.WTF::String"* nonnull dereferenceable(8) %2)
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  br i1 %12, label %15, label %17

15:                                               ; preds = %8
  %16 = add i32 %14, -1
  store i32 %16, i32* %13, align 4
  br label %17

17:                                               ; preds = %15, %8
  %18 = phi i32 [ %16, %15 ], [ %14, %8 ]
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #15
  br label %21

21:                                               ; preds = %1, %17, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #15
  %22 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = bitcast %"struct.blink::FocusParams"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #15
  %24 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 16) #15
  %25 = bitcast i8* %24 to %"class.blink::FocusOptions"*
  call void @_ZN5blink12FocusOptionsC1Ev(%"class.blink::FocusOptions"* %25) #15
  %26 = getelementptr inbounds i8, i8* %24, i64 -4
  %27 = bitcast i8* %26 to i16*
  %28 = load atomic i16, i16* %27 monotonic, align 2
  %29 = or i16 %28, 1
  store atomic i16 %29, i16* %27 release, align 2
  %30 = getelementptr inbounds %"struct.blink::FocusParams", %"struct.blink::FocusParams"* %3, i64 0, i32 0
  store i32 2, i32* %30, align 8
  %31 = getelementptr inbounds %"struct.blink::FocusParams", %"struct.blink::FocusParams"* %3, i64 0, i32 1
  store i32 0, i32* %31, align 4
  %32 = getelementptr inbounds %"struct.blink::FocusParams", %"struct.blink::FocusParams"* %3, i64 0, i32 2
  store %"class.blink::InputDeviceCapabilities"* null, %"class.blink::InputDeviceCapabilities"** %32, align 8
  %33 = getelementptr inbounds %"struct.blink::FocusParams", %"struct.blink::FocusParams"* %3, i64 0, i32 3
  %34 = bitcast %"class.blink::FocusOptions"** %33 to i8**
  store i8* %24, i8** %34, align 8
  %35 = getelementptr inbounds %"struct.blink::FocusParams", %"struct.blink::FocusParams"* %3, i64 0, i32 4
  store i8 0, i8* %35, align 8
  %36 = bitcast %"class.blink::TextControlElement"* %0 to void (%"class.blink::Element"*, %"struct.blink::FocusParams"*)***
  %37 = load void (%"class.blink::Element"*, %"struct.blink::FocusParams"*)**, void (%"class.blink::Element"*, %"struct.blink::FocusParams"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::Element"*, %"struct.blink::FocusParams"*)*, void (%"class.blink::Element"*, %"struct.blink::FocusParams"*)** %37, i64 99
  %39 = load void (%"class.blink::Element"*, %"struct.blink::FocusParams"*)*, void (%"class.blink::Element"*, %"struct.blink::FocusParams"*)** %38, align 8
  call void %39(%"class.blink::Element"* %22, %"struct.blink::FocusParams"* nonnull dereferenceable(32) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #15
  call void @_ZN5blink18TextControlElement22RestoreCachedSelectionEv(%"class.blink::TextControlElement"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18TextControlElement22RestoreCachedSelectionEv(%"class.blink::TextControlElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 5
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 6
  %7 = load i32, i32* %6, align 4
  %8 = tail call zeroext i1 @_ZN5blink18TextControlElement17SetSelectionRangeEjjNS_27TextFieldSelectionDirectionE(%"class.blink::TextControlElement"* %0, i32 %3, i32 %5, i32 %7)
  br i1 %8, label %9, label %22

9:                                                ; preds = %1
  %10 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names7kSelectE, align 8
  %11 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #15
  %12 = bitcast i8* %11 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %12, %"class.WTF::AtomicString"* dereferenceable(8) %10, i32 0, i32 1, i32 1) #15
  %13 = getelementptr inbounds i8, i8* %11, i64 -4
  %14 = bitcast i8* %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = or i16 %15, 1
  store atomic i16 %16, i16* %14 release, align 2
  %17 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink5Event9SetTargetEPNS_11EventTargetE(%"class.blink::Event"* %12, %"class.blink::EventTarget"* %17) #15
  %18 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %19, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::Document"*, %"class.blink::Document"** %20, align 8
  tail call void @_ZN5blink8Document26EnqueueAnimationFrameEventEPNS_5EventE(%"class.blink::Document"* %21, %"class.blink::Event"* %12) #15
  br label %22

22:                                               ; preds = %9, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18TextControlElement35SetValueBeforeFirstUserEditIfNotSetEv(%"class.blink::TextControlElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringImpl"*, align 8
  %3 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %7, label %71

7:                                                ; preds = %1
  %8 = bitcast %"class.WTF::StringImpl"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8)
  %9 = bitcast %"class.blink::TextControlElement"* %0 to %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)***
  %10 = load %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)** %10, i64 195
  %12 = load %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)** %11, align 8
  %13 = tail call %"class.WTF::StringImpl"* %12(%"class.blink::TextControlElement"* %0) #15
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %2, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %16 = bitcast %"class.WTF::StringImpl"** %2 to %"class.WTF::String"*
  %17 = select i1 %14, %"class.WTF::String"* %15, %"class.WTF::String"* %16
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %38, label %21

21:                                               ; preds = %7
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i33
  %30 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %29, i33 1) #15
  %31 = extractvalue { i33, i1 } %30, 1
  %32 = extractvalue { i33, i1 } %30, 0
  %33 = icmp slt i33 %32, 0
  %34 = or i1 %31, %33
  br i1 %34, label %35, label %36, !prof !3

35:                                               ; preds = %26
  tail call void @llvm.trap() #15
  unreachable

36:                                               ; preds = %26
  %37 = trunc i33 %32 to i32
  store i32 %37, i32* %27, align 4
  br label %38

38:                                               ; preds = %36, %21, %7
  %39 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %40 = bitcast %"class.WTF::String"* %3 to i64*
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  store i64 %39, i64* %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #15
  br label %56

56:                                               ; preds = %38, %52, %55
  br i1 %14, label %70, label %57

57:                                               ; preds = %56
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #15
  br label %70

70:                                               ; preds = %56, %66, %69
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8)
  br label %71

71:                                               ; preds = %1, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18TextControlElement23CheckIfValueWasRevertedERKN3WTF6StringE(%"class.blink::TextControlElement"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  %6 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %7 = select i1 %5, %"class.WTF::String"* %6, %"class.WTF::String"* %1
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #15
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !3

25:                                               ; preds = %16
  tail call void @llvm.trap() #15
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %2, %11, %26
  %29 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"* %9) #15
  br i1 %32, label %33, label %50

33:                                               ; preds = %28
  %34 = bitcast %"class.WTF::String"* %29 to i64*
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  store i64 0, i64* %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %46

44:                                               ; preds = %37
  %45 = add i32 %43, -1
  store i32 %45, i32* %42, align 4
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi i32 [ %45, %44 ], [ %43, %37 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #15
  br label %50

50:                                               ; preds = %49, %46, %33, %28
  br i1 %10, label %64, label %51

51:                                               ; preds = %50
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #15
  br label %64

64:                                               ; preds = %50, %60, %63
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18TextControlElement29ClearValueBeforeFirstUserEditEv(%"class.blink::TextControlElement"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 2
  %3 = bitcast %"class.WTF::String"* %2 to i64*
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  store i64 0, i64* %3, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  br i1 %11, label %14, label %16

14:                                               ; preds = %7
  %15 = add i32 %13, -1
  store i32 %15, i32* %12, align 4
  br label %16

16:                                               ; preds = %14, %7
  %17 = phi i32 [ %15, %14 ], [ %13, %7 ]
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #15
  br label %20

20:                                               ; preds = %19, %16, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18TextControlElement10SetFocusedEbNS_5mojom9FocusTypeE(%"class.blink::TextControlElement"*, i1 zeroext, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE(%"class.blink::ContainerNode"* %4, i1 zeroext %1, i32 %2) #15
  br i1 %1, label %6, label %5

5:                                                ; preds = %3
  tail call void @_ZN5blink18TextControlElement30DispatchFormControlChangeEventEv(%"class.blink::TextControlElement"* %0)
  br label %6

6:                                                ; preds = %5, %3
  %7 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::TextControlInnerEditorElement"*, %"class.blink::TextControlInnerEditorElement"** %7, align 8
  %9 = icmp eq %"class.blink::TextControlInnerEditorElement"* %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZN5blink29TextControlInnerEditorElement12FocusChangedEv(%"class.blink::TextControlInnerEditorElement"* nonnull %8) #15
  br label %11

11:                                               ; preds = %6, %10
  ret void
}

declare void @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE(%"class.blink::ContainerNode"*, i1 zeroext, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18TextControlElement30DispatchFormControlChangeEventEv(%"class.blink::TextControlElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %1
  %7 = bitcast %"class.WTF::String"* %2 to i64*
  store i64 0, i64* %7, align 8
  br label %50

8:                                                ; preds = %1
  %9 = bitcast %"class.blink::TextControlElement"* %0 to %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)***
  %10 = load %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)** %10, i64 195
  %12 = load %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)** %11, align 8
  %13 = tail call %"class.WTF::StringImpl"* %12(%"class.blink::TextControlElement"* %0) #15
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %15 = tail call zeroext i1 @_ZN3WTF20EqualIgnoringNullityEPNS_10StringImplES1_(%"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"* %13) #15
  %16 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #15
  br label %30

30:                                               ; preds = %29, %26, %8
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %32 = bitcast %"class.WTF::String"* %2 to i64*
  store i64 0, i64* %32, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #15
  br i1 %15, label %50, label %48

47:                                               ; preds = %30, %43
  br i1 %15, label %50, label %48

48:                                               ; preds = %46, %47
  %49 = bitcast %"class.blink::TextControlElement"* %0 to %"class.blink::HTMLFormControlElementWithState"*
  tail call void @_ZN5blink31HTMLFormControlElementWithState19DispatchChangeEventEv(%"class.blink::HTMLFormControlElementWithState"* %49) #15
  br label %50

50:                                               ; preds = %46, %47, %6, %48
  ret void
}

declare void @_ZN5blink29TextControlInnerEditorElement12FocusChangedEv(%"class.blink::TextControlInnerEditorElement"*) local_unnamed_addr #1

declare void @_ZN5blink31HTMLFormControlElementWithState19DispatchChangeEventEv(%"class.blink::HTMLFormControlElementWithState"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18TextControlElement18EnqueueChangeEventEv(%"class.blink::TextControlElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %1
  %7 = bitcast %"class.WTF::String"* %2 to i64*
  store i64 0, i64* %7, align 8
  br label %61

8:                                                ; preds = %1
  %9 = bitcast %"class.blink::TextControlElement"* %0 to %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)***
  %10 = load %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)** %10, i64 195
  %12 = load %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)** %11, align 8
  %13 = tail call %"class.WTF::StringImpl"* %12(%"class.blink::TextControlElement"* %0) #15
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %15 = tail call zeroext i1 @_ZN3WTF20EqualIgnoringNullityEPNS_10StringImplES1_(%"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"* %13) #15
  %16 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #15
  br i1 %15, label %44, label %31

30:                                               ; preds = %26, %8
  br i1 %15, label %44, label %31

31:                                               ; preds = %29, %30
  %32 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names7kChangeE, align 8
  %33 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #15
  %34 = bitcast i8* %33 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %34, %"class.WTF::AtomicString"* dereferenceable(8) %32, i32 0, i32 1, i32 1) #15
  %35 = getelementptr inbounds i8, i8* %33, i64 -4
  %36 = bitcast i8* %35 to i16*
  %37 = load atomic i16, i16* %36 monotonic, align 2
  %38 = or i16 %37, 1
  store atomic i16 %38, i16* %36 release, align 2
  %39 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink5Event9SetTargetEPNS_11EventTargetE(%"class.blink::Event"* %34, %"class.blink::EventTarget"* %39) #15
  %40 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %41 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %41, i64 0, i32 2, i32 0, i32 0
  %43 = load %"class.blink::Document"*, %"class.blink::Document"** %42, align 8
  tail call void @_ZN5blink8Document26EnqueueAnimationFrameEventEPNS_5EventE(%"class.blink::Document"* %43, %"class.blink::Event"* %34) #15
  br label %44

44:                                               ; preds = %29, %30, %31
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %46 = bitcast %"class.WTF::String"* %2 to i64*
  store i64 0, i64* %46, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #15
  br label %61

61:                                               ; preds = %6, %44, %57, %60
  ret void
}

declare void @_ZN5blink5Event9SetTargetEPNS_11EventTargetE(%"class.blink::Event"*, %"class.blink::EventTarget"*) local_unnamed_addr #1

declare void @_ZN5blink8Document26EnqueueAnimationFrameEventEPNS_5EventE(%"class.blink::Document"*, %"class.blink::Event"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18TextControlElement12setRangeTextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::TextControlElement"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i32 @_ZNK5blink18TextControlElement14selectionStartEv(%"class.blink::TextControlElement"* %0)
  %6 = tail call i32 @_ZNK5blink18TextControlElement12selectionEndEv(%"class.blink::TextControlElement"* %0)
  %7 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i64 8) #15
  %8 = bitcast %"class.blink::TextControlElement"* %0 to void (%"class.blink::TextControlElement"*, %"class.WTF::String"*, i32, i32, %"class.WTF::String"*, %"class.blink::ExceptionState"*)***
  %9 = load void (%"class.blink::TextControlElement"*, %"class.WTF::String"*, i32, i32, %"class.WTF::String"*, %"class.blink::ExceptionState"*)**, void (%"class.blink::TextControlElement"*, %"class.WTF::String"*, i32, i32, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::TextControlElement"*, %"class.WTF::String"*, i32, i32, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::TextControlElement"*, %"class.WTF::String"*, i32, i32, %"class.WTF::String"*, %"class.blink::ExceptionState"*)** %9, i64 194
  %11 = load void (%"class.blink::TextControlElement"*, %"class.WTF::String"*, i32, i32, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::TextControlElement"*, %"class.WTF::String"*, i32, i32, %"class.WTF::String"*, %"class.blink::ExceptionState"*)** %10, align 8
  call void %11(%"class.blink::TextControlElement"* %0, %"class.WTF::String"* dereferenceable(8) %1, i32 %5, i32 %6, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::ExceptionState"* dereferenceable(72) %2) #15
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #15
  br label %28

28:                                               ; preds = %3, %24, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18TextControlElement12setRangeTextERKN3WTF6StringEjjS4_RNS_14ExceptionStateE(%"class.blink::TextControlElement"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), i32, i32, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringAppend.2812", align 8
  %14 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %15 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.WTF::StringAppend", align 8
  %18 = alloca %"class.WTF::StringAppend.2812", align 8
  %19 = alloca %"class.WTF::StringAppend.2813", align 8
  %20 = alloca %"class.WTF::StringBuilder", align 8
  %21 = alloca %"class.WTF::StringView", align 8
  %22 = alloca %"class.WTF::StringView", align 8
  %23 = alloca %"class.WTF::StringView", align 8
  %24 = alloca %"class.WTF::String", align 8
  %25 = alloca %"class.WTF::String", align 8
  %26 = icmp ugt i32 %2, %3
  br i1 %26, label %27, label %400

27:                                               ; preds = %6
  %28 = bitcast %"class.WTF::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  %29 = bitcast %"class.WTF::StringAppend"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %29) #15
  %30 = bitcast %"class.WTF::StringAppend.2812"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #15
  %31 = bitcast %"class.WTF::StringAppend.2813"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #15
  %32 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %15, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #15
  %33 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %15, i64 0, i32 0, i64 11
  %34 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %15, i64 0, i32 2
  %35 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %15, i64 0, i32 3
  %36 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %15, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 32, i1 false) #15
  store i8* %33, i8** %34, align 8
  %37 = urem i32 %2, 10
  %38 = udiv i32 %2, 10
  %39 = trunc i32 %37 to i8
  %40 = or i8 %39, 48
  store i8 %40, i8* %33, align 1
  %41 = icmp ugt i32 %2, 9
  br i1 %41, label %42, label %57

42:                                               ; preds = %27
  %43 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %15, i64 0, i32 0, i64 10
  store i8* %43, i8** %34, align 8
  %44 = urem i32 %38, 10
  %45 = trunc i32 %44 to i8
  %46 = or i8 %45, 48
  store i8 %46, i8* %43, align 2
  %47 = icmp ugt i32 %2, 99
  br i1 %47, label %48, label %55

48:                                               ; preds = %42
  %49 = udiv i32 %2, 100
  %50 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %15, i64 0, i32 0, i64 9
  store i8* %50, i8** %34, align 8
  %51 = urem i32 %49, 10
  %52 = trunc i32 %51 to i8
  %53 = or i8 %52, 48
  store i8 %53, i8* %50, align 1
  %54 = icmp ugt i32 %2, 999
  br i1 %54, label %59, label %68

55:                                               ; preds = %42
  %56 = ptrtoint i8* %43 to i64
  br label %71

57:                                               ; preds = %27
  %58 = ptrtoint i8* %33 to i64
  br label %71

59:                                               ; preds = %48, %59
  %60 = phi i32 [ %62, %59 ], [ %49, %48 ]
  %61 = load i8*, i8** %34, align 8
  %62 = udiv i32 %60, 10
  %63 = getelementptr inbounds i8, i8* %61, i64 -1
  store i8* %63, i8** %34, align 8
  %64 = urem i32 %62, 10
  %65 = trunc i32 %64 to i8
  %66 = or i8 %65, 48
  store i8 %66, i8* %63, align 1
  %67 = icmp ugt i32 %60, 99
  br i1 %67, label %59, label %68

68:                                               ; preds = %59, %48
  %69 = bitcast i8** %34 to i64*
  %70 = load i64, i64* %69, align 8
  br label %71

71:                                               ; preds = %68, %55, %57
  %72 = phi i64 [ %58, %57 ], [ %70, %68 ], [ %56, %55 ]
  %73 = ptrtoint i8* %36 to i64
  %74 = sub i64 %73, %72
  %75 = trunc i64 %74 to i32
  store i32 %75, i32* %35, align 8
  %76 = inttoptr i64 %72 to i8*
  %77 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %76, i32 %75) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #15
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %154, label %79

79:                                               ; preds = %71
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %96

86:                                               ; preds = %79
  %87 = zext i32 %85 to i33
  %88 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %87, i33 1) #15
  %89 = extractvalue { i33, i1 } %88, 1
  %90 = extractvalue { i33, i1 } %88, 0
  %91 = icmp slt i33 %90, 0
  %92 = or i1 %89, %91
  br i1 %92, label %93, label %94, !prof !3

93:                                               ; preds = %86
  call void @llvm.trap() #15
  unreachable

94:                                               ; preds = %86
  %95 = trunc i33 %90 to i32
  store i32 %95, i32* %84, align 4
  br label %96

96:                                               ; preds = %94, %79
  %97 = phi i32 [ %95, %94 ], [ %85, %79 ]
  %98 = load atomic i32, i32* %80 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %111

101:                                              ; preds = %96
  %102 = zext i32 %97 to i33
  %103 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %102, i33 1) #15
  %104 = extractvalue { i33, i1 } %103, 1
  %105 = extractvalue { i33, i1 } %103, 0
  %106 = icmp slt i33 %105, 0
  %107 = or i1 %104, %106
  br i1 %107, label %108, label %109, !prof !3

108:                                              ; preds = %101
  call void @llvm.trap() #15
  unreachable

109:                                              ; preds = %101
  %110 = trunc i33 %105 to i32
  store i32 %110, i32* %84, align 4
  br label %111

111:                                              ; preds = %109, %96
  %112 = phi i32 [ %110, %109 ], [ %97, %96 ]
  %113 = load atomic i32, i32* %80 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %118

116:                                              ; preds = %111
  %117 = add i32 %112, -1
  store i32 %117, i32* %84, align 4
  br label %118

118:                                              ; preds = %116, %111
  %119 = phi i32 [ %117, %116 ], [ %112, %111 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #15
  br label %122

122:                                              ; preds = %118, %121
  %123 = load atomic i32, i32* %80 monotonic, align 4, !noalias !4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = load i32, i32* %84, align 4
  br i1 %125, label %127, label %137

127:                                              ; preds = %122
  %128 = zext i32 %126 to i33
  %129 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %128, i33 1) #15
  %130 = extractvalue { i33, i1 } %129, 1
  %131 = extractvalue { i33, i1 } %129, 0
  %132 = icmp slt i33 %131, 0
  %133 = or i1 %130, %132
  br i1 %133, label %134, label %135, !prof !3

134:                                              ; preds = %127
  call void @llvm.trap() #15, !noalias !4
  unreachable

135:                                              ; preds = %127
  %136 = trunc i33 %131 to i32
  store i32 %136, i32* %84, align 4, !noalias !4
  br label %137

137:                                              ; preds = %122, %135
  %138 = phi i32 [ %136, %135 ], [ %126, %122 ]
  %139 = bitcast %"class.WTF::StringAppend.2813"* %19 to i64*
  store i64 ptrtoint ([27 x i8]* @.str.4 to i64), i64* %139, align 8, !alias.scope !4
  %140 = getelementptr inbounds %"class.WTF::StringAppend.2813", %"class.WTF::StringAppend.2813"* %19, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %77, %"class.WTF::StringImpl"** %140, align 8, !alias.scope !4
  %141 = load atomic i32, i32* %80 monotonic, align 4, !noalias !4
  %142 = and i32 %141, 2
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %158

144:                                              ; preds = %137
  %145 = zext i32 %138 to i33
  %146 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %145, i33 1) #15
  %147 = extractvalue { i33, i1 } %146, 1
  %148 = extractvalue { i33, i1 } %146, 0
  %149 = icmp slt i33 %148, 0
  %150 = or i1 %147, %149
  br i1 %150, label %151, label %152, !prof !3

151:                                              ; preds = %144
  call void @llvm.trap() #15, !noalias !4
  unreachable

152:                                              ; preds = %144
  %153 = trunc i33 %148 to i32
  store i32 %153, i32* %84, align 4, !noalias !4
  br label %158

154:                                              ; preds = %71
  %155 = bitcast %"class.WTF::StringAppend.2813"* %19 to i64*
  store i64 ptrtoint ([27 x i8]* @.str.4 to i64), i64* %155, align 8, !alias.scope !4
  %156 = getelementptr inbounds %"class.WTF::StringAppend.2813", %"class.WTF::StringAppend.2813"* %19, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %156, align 8, !alias.scope !4
  %157 = getelementptr inbounds %"class.WTF::StringAppend.2813", %"class.WTF::StringAppend.2813"* %19, i64 0, i32 1
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i8** %157, align 8, !alias.scope !4
  br label %170

158:                                              ; preds = %152, %137
  %159 = phi i32 [ %153, %152 ], [ %138, %137 ]
  %160 = getelementptr inbounds %"class.WTF::StringAppend.2813", %"class.WTF::StringAppend.2813"* %19, i64 0, i32 1
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i8** %160, align 8, !alias.scope !4
  %161 = load atomic i32, i32* %80 monotonic, align 4, !noalias !4
  %162 = and i32 %161, 2
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %166

164:                                              ; preds = %158
  %165 = add i32 %159, -1
  store i32 %165, i32* %84, align 4, !noalias !4
  br label %166

166:                                              ; preds = %164, %158
  %167 = phi i32 [ %165, %164 ], [ %159, %158 ]
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %170

169:                                              ; preds = %166
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #15, !noalias !4
  br label %170

170:                                              ; preds = %154, %166, %169
  %171 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %14, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %171) #15
  %172 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %14, i64 0, i32 0, i64 11
  %173 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %14, i64 0, i32 2
  %174 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %14, i64 0, i32 3
  %175 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %14, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %171, i8 -86, i64 32, i1 false) #15
  store i8* %172, i8** %173, align 8
  %176 = urem i32 %3, 10
  %177 = udiv i32 %3, 10
  %178 = trunc i32 %176 to i8
  %179 = or i8 %178, 48
  store i8 %179, i8* %172, align 1
  %180 = icmp ugt i32 %3, 9
  br i1 %180, label %181, label %196

181:                                              ; preds = %170
  %182 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %14, i64 0, i32 0, i64 10
  store i8* %182, i8** %173, align 8
  %183 = urem i32 %177, 10
  %184 = trunc i32 %183 to i8
  %185 = or i8 %184, 48
  store i8 %185, i8* %182, align 2
  %186 = icmp ugt i32 %3, 99
  br i1 %186, label %187, label %194

187:                                              ; preds = %181
  %188 = udiv i32 %3, 100
  %189 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %14, i64 0, i32 0, i64 9
  store i8* %189, i8** %173, align 8
  %190 = urem i32 %188, 10
  %191 = trunc i32 %190 to i8
  %192 = or i8 %191, 48
  store i8 %192, i8* %189, align 1
  %193 = icmp ugt i32 %3, 999
  br i1 %193, label %198, label %207

194:                                              ; preds = %181
  %195 = ptrtoint i8* %182 to i64
  br label %210

196:                                              ; preds = %170
  %197 = ptrtoint i8* %172 to i64
  br label %210

198:                                              ; preds = %187, %198
  %199 = phi i32 [ %201, %198 ], [ %188, %187 ]
  %200 = load i8*, i8** %173, align 8
  %201 = udiv i32 %199, 10
  %202 = getelementptr inbounds i8, i8* %200, i64 -1
  store i8* %202, i8** %173, align 8
  %203 = urem i32 %201, 10
  %204 = trunc i32 %203 to i8
  %205 = or i8 %204, 48
  store i8 %205, i8* %202, align 1
  %206 = icmp ugt i32 %199, 99
  br i1 %206, label %198, label %207

207:                                              ; preds = %198, %187
  %208 = bitcast i8** %173 to i64*
  %209 = load i64, i64* %208, align 8
  br label %210

210:                                              ; preds = %207, %194, %196
  %211 = phi i64 [ %197, %196 ], [ %209, %207 ], [ %195, %194 ]
  %212 = ptrtoint i8* %175 to i64
  %213 = sub i64 %212, %211
  %214 = trunc i64 %213 to i32
  store i32 %214, i32* %174, align 8
  %215 = inttoptr i64 %211 to i8*
  %216 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %215, i32 %214) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %171) #15
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.2812"* nonnull sret %18, %"class.WTF::StringAppend.2813"* nonnull dereferenceable(24) %19, %"class.WTF::StringImpl"* %216)
  %217 = bitcast %"class.WTF::StringAppend.2812"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %217)
  %218 = bitcast %"class.WTF::StringAppend.2812"* %18 to i64*
  %219 = load i64, i64* %218, align 8, !noalias !7
  %220 = bitcast %"class.WTF::StringAppend.2812"* %13 to i64*
  store i64 %219, i64* %220, align 8, !noalias !7
  %221 = getelementptr inbounds %"class.WTF::StringAppend.2812", %"class.WTF::StringAppend.2812"* %18, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %222 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %221, align 8, !noalias !7
  %223 = getelementptr inbounds %"class.WTF::StringAppend.2812", %"class.WTF::StringAppend.2812"* %13, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %222, %"class.WTF::StringImpl"** %223, align 8, !noalias !7
  %224 = icmp eq %"class.WTF::StringImpl"* %222, null
  br i1 %224, label %242, label %225

225:                                              ; preds = %210
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %227 = load atomic i32, i32* %226 monotonic, align 4
  %228 = and i32 %227, 2
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %230, label %242

230:                                              ; preds = %225
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 0
  %232 = load i32, i32* %231, align 4
  %233 = zext i32 %232 to i33
  %234 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %233, i33 1) #15
  %235 = extractvalue { i33, i1 } %234, 1
  %236 = extractvalue { i33, i1 } %234, 0
  %237 = icmp slt i33 %236, 0
  %238 = or i1 %235, %237
  br i1 %238, label %239, label %240, !prof !3

239:                                              ; preds = %230
  call void @llvm.trap() #15
  unreachable

240:                                              ; preds = %230
  %241 = trunc i33 %236 to i32
  store i32 %241, i32* %231, align 4
  br label %242

242:                                              ; preds = %240, %225, %210
  %243 = getelementptr inbounds %"class.WTF::StringAppend.2812", %"class.WTF::StringAppend.2812"* %13, i64 0, i32 0, i32 1
  %244 = getelementptr inbounds %"class.WTF::StringAppend.2812", %"class.WTF::StringAppend.2812"* %18, i64 0, i32 0, i32 1
  %245 = bitcast i8** %244 to i64*
  %246 = load i64, i64* %245, align 8, !noalias !7
  %247 = bitcast i8** %243 to i64*
  store i64 %246, i64* %247, align 8, !noalias !7
  %248 = getelementptr inbounds %"class.WTF::StringAppend.2812", %"class.WTF::StringAppend.2812"* %18, i64 0, i32 1, i32 0, i32 0
  %249 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %248, align 8, !noalias !7
  %250 = getelementptr inbounds %"class.WTF::StringAppend.2812", %"class.WTF::StringAppend.2812"* %13, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %249, %"class.WTF::StringImpl"** %250, align 8, !noalias !7
  %251 = icmp eq %"class.WTF::StringImpl"* %249, null
  br i1 %251, label %269, label %252

252:                                              ; preds = %242
  %253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %254 = load atomic i32, i32* %253 monotonic, align 4
  %255 = and i32 %254, 2
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %269

257:                                              ; preds = %252
  %258 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 0
  %259 = load i32, i32* %258, align 4
  %260 = zext i32 %259 to i33
  %261 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %260, i33 1) #15
  %262 = extractvalue { i33, i1 } %261, 1
  %263 = extractvalue { i33, i1 } %261, 0
  %264 = icmp slt i33 %263, 0
  %265 = or i1 %262, %264
  br i1 %265, label %266, label %267, !prof !3

266:                                              ; preds = %257
  call void @llvm.trap() #15
  unreachable

267:                                              ; preds = %257
  %268 = trunc i33 %263 to i32
  store i32 %268, i32* %258, align 4
  br label %269

269:                                              ; preds = %242, %252, %267
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend"* nonnull %17, %"class.WTF::StringAppend.2812"* nonnull byval(%"class.WTF::StringAppend.2812") align 8 %13, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0)) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %217)
  %270 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %17)
  %271 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %270, %"class.WTF::StringImpl"** %271, align 8
  %272 = bitcast %"class.blink::ExceptionState"* %5 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %273 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %272, align 8
  %274 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %273, align 8
  call void %274(%"class.blink::ExceptionState"* %5, i32 1, %"class.WTF::String"* nonnull dereferenceable(8) %16) #15
  %275 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %271, align 8
  %276 = icmp eq %"class.WTF::StringImpl"* %275, null
  br i1 %276, label %290, label %277

277:                                              ; preds = %269
  %278 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %279 = load atomic i32, i32* %278 monotonic, align 4
  %280 = and i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 0
  %283 = load i32, i32* %282, align 4
  br i1 %281, label %284, label %286

284:                                              ; preds = %277
  %285 = add i32 %283, -1
  store i32 %285, i32* %282, align 4
  br label %286

286:                                              ; preds = %284, %277
  %287 = phi i32 [ %285, %284 ], [ %283, %277 ]
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %290

289:                                              ; preds = %286
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %275) #15
  br label %290

290:                                              ; preds = %269, %286, %289
  %291 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %17, i64 0, i32 0, i32 1, i32 0, i32 0
  %292 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %291, align 8
  %293 = icmp eq %"class.WTF::StringImpl"* %292, null
  br i1 %293, label %307, label %294

294:                                              ; preds = %290
  %295 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %292, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %296 = load atomic i32, i32* %295 monotonic, align 4
  %297 = and i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %292, i64 0, i32 0
  %300 = load i32, i32* %299, align 4
  br i1 %298, label %301, label %303

301:                                              ; preds = %294
  %302 = add i32 %300, -1
  store i32 %302, i32* %299, align 4
  br label %303

303:                                              ; preds = %301, %294
  %304 = phi i32 [ %302, %301 ], [ %300, %294 ]
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %306, label %307

306:                                              ; preds = %303
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %292) #15
  br label %307

307:                                              ; preds = %306, %303, %290
  %308 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %309 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %308, align 8
  %310 = icmp eq %"class.WTF::StringImpl"* %309, null
  br i1 %310, label %324, label %311

311:                                              ; preds = %307
  %312 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %309, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %313 = load atomic i32, i32* %312 monotonic, align 4
  %314 = and i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %309, i64 0, i32 0
  %317 = load i32, i32* %316, align 4
  br i1 %315, label %318, label %320

318:                                              ; preds = %311
  %319 = add i32 %317, -1
  store i32 %319, i32* %316, align 4
  br label %320

320:                                              ; preds = %318, %311
  %321 = phi i32 [ %319, %318 ], [ %317, %311 ]
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %323, label %324

323:                                              ; preds = %320
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %309) #15
  br label %324

324:                                              ; preds = %307, %320, %323
  %325 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %248, align 8
  %326 = icmp eq %"class.WTF::StringImpl"* %325, null
  br i1 %326, label %340, label %327

327:                                              ; preds = %324
  %328 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %325, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %329 = load atomic i32, i32* %328 monotonic, align 4
  %330 = and i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %325, i64 0, i32 0
  %333 = load i32, i32* %332, align 4
  br i1 %331, label %334, label %336

334:                                              ; preds = %327
  %335 = add i32 %333, -1
  store i32 %335, i32* %332, align 4
  br label %336

336:                                              ; preds = %334, %327
  %337 = phi i32 [ %335, %334 ], [ %333, %327 ]
  %338 = icmp eq i32 %337, 0
  br i1 %338, label %339, label %340

339:                                              ; preds = %336
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %325) #15
  br label %340

340:                                              ; preds = %339, %336, %324
  %341 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %221, align 8
  %342 = icmp eq %"class.WTF::StringImpl"* %341, null
  br i1 %342, label %356, label %343

343:                                              ; preds = %340
  %344 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %341, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %345 = load atomic i32, i32* %344 monotonic, align 4
  %346 = and i32 %345, 2
  %347 = icmp eq i32 %346, 0
  %348 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %341, i64 0, i32 0
  %349 = load i32, i32* %348, align 4
  br i1 %347, label %350, label %352

350:                                              ; preds = %343
  %351 = add i32 %349, -1
  store i32 %351, i32* %348, align 4
  br label %352

352:                                              ; preds = %350, %343
  %353 = phi i32 [ %351, %350 ], [ %349, %343 ]
  %354 = icmp eq i32 %353, 0
  br i1 %354, label %355, label %356

355:                                              ; preds = %352
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %341) #15
  br label %356

356:                                              ; preds = %340, %352, %355
  %357 = getelementptr inbounds %"class.WTF::StringAppend.2813", %"class.WTF::StringAppend.2813"* %19, i64 0, i32 0, i32 1, i32 0, i32 0
  %358 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %357, align 8
  %359 = icmp eq %"class.WTF::StringImpl"* %358, null
  br i1 %359, label %373, label %360

360:                                              ; preds = %356
  %361 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %358, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %362 = load atomic i32, i32* %361 monotonic, align 4
  %363 = and i32 %362, 2
  %364 = icmp eq i32 %363, 0
  %365 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %358, i64 0, i32 0
  %366 = load i32, i32* %365, align 4
  br i1 %364, label %367, label %369

367:                                              ; preds = %360
  %368 = add i32 %366, -1
  store i32 %368, i32* %365, align 4
  br label %369

369:                                              ; preds = %367, %360
  %370 = phi i32 [ %368, %367 ], [ %366, %360 ]
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %372, label %373

372:                                              ; preds = %369
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %358) #15
  br label %373

373:                                              ; preds = %356, %369, %372
  br i1 %78, label %399, label %374

374:                                              ; preds = %373
  %375 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %376 = load atomic i32, i32* %375 monotonic, align 4
  %377 = and i32 %376, 2
  %378 = icmp eq i32 %377, 0
  %379 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %380 = load i32, i32* %379, align 4
  br i1 %378, label %381, label %383

381:                                              ; preds = %374
  %382 = add i32 %380, -1
  store i32 %382, i32* %379, align 4
  br label %383

383:                                              ; preds = %381, %374
  %384 = phi i32 [ %382, %381 ], [ %380, %374 ]
  %385 = icmp eq i32 %384, 0
  br i1 %385, label %386, label %388

386:                                              ; preds = %383
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #15
  %387 = load i32, i32* %379, align 4
  br label %388

388:                                              ; preds = %383, %386
  %389 = phi i32 [ %384, %383 ], [ %387, %386 ]
  %390 = load atomic i32, i32* %375 monotonic, align 4
  %391 = and i32 %390, 2
  %392 = icmp eq i32 %391, 0
  br i1 %392, label %393, label %395

393:                                              ; preds = %388
  %394 = add i32 %389, -1
  store i32 %394, i32* %379, align 4
  br label %395

395:                                              ; preds = %393, %388
  %396 = phi i32 [ %394, %393 ], [ %389, %388 ]
  %397 = icmp eq i32 %396, 0
  br i1 %397, label %398, label %399

398:                                              ; preds = %395
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #15
  br label %399

399:                                              ; preds = %373, %395, %398
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %29) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  br label %660

400:                                              ; preds = %6
  %401 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %402 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink7Element14OpenShadowRootEv(%"class.blink::Element"* %401) #15
  %403 = icmp eq %"class.blink::ShadowRoot"* %402, null
  br i1 %403, label %404, label %660

404:                                              ; preds = %400
  %405 = tail call %"class.WTF::StringImpl"* @_ZNK5blink18TextControlElement16InnerEditorValueEv(%"class.blink::TextControlElement"* %0)
  %406 = icmp eq %"class.WTF::StringImpl"* %405, null
  br i1 %406, label %410, label %407

407:                                              ; preds = %404
  %408 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %405, i64 0, i32 1
  %409 = load i32, i32* %408, align 4
  br label %410

410:                                              ; preds = %404, %407
  %411 = phi i32 [ %409, %407 ], [ 0, %404 ]
  %412 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %413 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %412, align 8
  %414 = icmp eq %"class.WTF::StringImpl"* %413, null
  br i1 %414, label %418, label %415

415:                                              ; preds = %410
  %416 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %413, i64 0, i32 1
  %417 = load i32, i32* %416, align 4
  br label %418

418:                                              ; preds = %410, %415
  %419 = phi i32 [ %417, %415 ], [ 0, %410 ]
  %420 = tail call i32 @_ZNK5blink18TextControlElement14selectionStartEv(%"class.blink::TextControlElement"* %0)
  %421 = tail call i32 @_ZNK5blink18TextControlElement12selectionEndEv(%"class.blink::TextControlElement"* %0)
  %422 = icmp ult i32 %411, %2
  %423 = select i1 %422, i32 %411, i32 %2
  %424 = icmp ult i32 %411, %3
  %425 = select i1 %424, i32 %411, i32 %3
  %426 = bitcast %"class.WTF::StringBuilder"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %426) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %426, i8 -86, i64 48, i1 false)
  %427 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %20, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %427, align 8
  %428 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %20, i64 0, i32 1
  %429 = bitcast %union.anon.2794* %428 to i8*
  store i8 0, i8* %429, align 8
  %430 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %20, i64 0, i32 2
  store i32 0, i32* %430, align 8
  %431 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %20, i64 0, i32 3
  store i8 1, i8* %431, align 4
  %432 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %20, i64 0, i32 4
  store i8 0, i8* %432, align 1
  %433 = bitcast %"class.WTF::StringView"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %433) #15
  %434 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 2
  br i1 %406, label %442, label %435

435:                                              ; preds = %418
  store i32 %423, i32* %434, align 8
  %436 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 0
  store %"class.WTF::StringImpl"* %405, %"class.WTF::StringImpl"** %436, align 8
  %437 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %405, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %438 = load atomic i32, i32* %437 monotonic, align 4
  %439 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %405, i64 1
  %440 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 1
  %441 = bitcast i8** %440 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %439, %"class.WTF::StringImpl"** %441, align 8
  br label %446

442:                                              ; preds = %418
  store i32 0, i32* %434, align 8
  %443 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 1
  store i8* null, i8** %443, align 8
  %444 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %445 = bitcast %"class.WTF::StringView"* %21 to i64*
  store i64 %444, i64* %445, align 8
  br label %446

446:                                              ; preds = %435, %442
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %20, %"class.WTF::StringView"* nonnull dereferenceable(24) %21)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %433) #15
  %447 = bitcast %"class.WTF::StringView"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %447) #15
  %448 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %412, align 8
  %449 = icmp eq %"class.WTF::StringImpl"* %448, null
  br i1 %449, label %450, label %454

450:                                              ; preds = %446
  %451 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 1
  store i8* null, i8** %451, align 8
  %452 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %453 = bitcast %"class.WTF::StringView"* %22 to i64*
  store i64 %452, i64* %453, align 8
  br label %461

454:                                              ; preds = %446
  %455 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 0
  store %"class.WTF::StringImpl"* %448, %"class.WTF::StringImpl"** %455, align 8
  %456 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %448, i64 0, i32 1
  %457 = load i32, i32* %456, align 4
  %458 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %448, i64 1
  %459 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 1
  %460 = bitcast i8** %459 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %458, %"class.WTF::StringImpl"** %460, align 8
  br label %461

461:                                              ; preds = %450, %454
  %462 = phi i32 [ %457, %454 ], [ 0, %450 ]
  %463 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 2
  store i32 %462, i32* %463, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %20, %"class.WTF::StringView"* nonnull dereferenceable(24) %22)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %447) #15
  %464 = bitcast %"class.WTF::StringView"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %464) #15
  br i1 %406, label %487, label %465

465:                                              ; preds = %461
  %466 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %405, i64 0, i32 1
  %467 = load i32, i32* %466, align 4
  %468 = sub i32 %467, %425
  %469 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 2
  store i32 %468, i32* %469, align 8
  %470 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 0
  store %"class.WTF::StringImpl"* %405, %"class.WTF::StringImpl"** %470, align 8
  %471 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %405, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %472 = load atomic i32, i32* %471 monotonic, align 4
  %473 = and i32 %472, 1
  %474 = icmp eq i32 %473, 0
  %475 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %405, i64 1
  br i1 %474, label %481, label %476

476:                                              ; preds = %465
  %477 = bitcast %"class.WTF::StringImpl"* %475 to i8*
  %478 = zext i32 %425 to i64
  %479 = getelementptr inbounds i8, i8* %477, i64 %478
  %480 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 1
  store i8* %479, i8** %480, align 8
  br label %492

481:                                              ; preds = %465
  %482 = bitcast %"class.WTF::StringImpl"* %475 to i16*
  %483 = zext i32 %425 to i64
  %484 = getelementptr inbounds i16, i16* %482, i64 %483
  %485 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 1
  %486 = bitcast i8** %485 to i16**
  store i16* %484, i16** %486, align 8
  br label %492

487:                                              ; preds = %461
  %488 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 2
  store i32 0, i32* %488, align 8
  %489 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 1
  store i8* null, i8** %489, align 8
  %490 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %491 = bitcast %"class.WTF::StringView"* %23 to i64*
  store i64 %490, i64* %491, align 8
  br label %492

492:                                              ; preds = %476, %481, %487
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %20, %"class.WTF::StringView"* nonnull dereferenceable(24) %23)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %464) #15
  %493 = bitcast %"class.WTF::String"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %493) #15
  %494 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %20) #15
  %495 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %494, %"class.WTF::StringImpl"** %495, align 8
  %496 = bitcast %"class.blink::TextControlElement"* %0 to void (%"class.blink::TextControlElement"*, %"class.WTF::String"*, i32, i32)***
  %497 = load void (%"class.blink::TextControlElement"*, %"class.WTF::String"*, i32, i32)**, void (%"class.blink::TextControlElement"*, %"class.WTF::String"*, i32, i32)*** %496, align 8
  %498 = getelementptr inbounds void (%"class.blink::TextControlElement"*, %"class.WTF::String"*, i32, i32)*, void (%"class.blink::TextControlElement"*, %"class.WTF::String"*, i32, i32)** %497, i64 196
  %499 = load void (%"class.blink::TextControlElement"*, %"class.WTF::String"*, i32, i32)*, void (%"class.blink::TextControlElement"*, %"class.WTF::String"*, i32, i32)** %498, align 8
  call void %499(%"class.blink::TextControlElement"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %24, i32 0, i32 2) #15
  %500 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %495, align 8
  %501 = icmp eq %"class.WTF::StringImpl"* %500, null
  br i1 %501, label %515, label %502

502:                                              ; preds = %492
  %503 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %500, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %504 = load atomic i32, i32* %503 monotonic, align 4
  %505 = and i32 %504, 2
  %506 = icmp eq i32 %505, 0
  %507 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %500, i64 0, i32 0
  %508 = load i32, i32* %507, align 4
  br i1 %506, label %509, label %511

509:                                              ; preds = %502
  %510 = add i32 %508, -1
  store i32 %510, i32* %507, align 4
  br label %511

511:                                              ; preds = %509, %502
  %512 = phi i32 [ %510, %509 ], [ %508, %502 ]
  %513 = icmp eq i32 %512, 0
  br i1 %513, label %514, label %515

514:                                              ; preds = %511
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %500) #15
  br label %515

515:                                              ; preds = %492, %511, %514
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %493) #15
  %516 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %516) #15
  %517 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %518 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %517, align 8
  %519 = icmp eq %"class.WTF::StringImpl"* %518, null
  br i1 %519, label %520, label %524

520:                                              ; preds = %515
  %521 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* null, i8** %521, align 8
  %522 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %523 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %522, i64* %523, align 8
  br label %532

524:                                              ; preds = %515
  %525 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 0
  store %"class.WTF::StringImpl"* %518, %"class.WTF::StringImpl"** %525, align 8
  %526 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %518, i64 0, i32 1
  %527 = load i32, i32* %526, align 4
  %528 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %518, i64 1
  %529 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %530 = bitcast i8** %529 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %528, %"class.WTF::StringImpl"** %530, align 8
  %531 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %532

532:                                              ; preds = %524, %520
  %533 = phi i64 [ %531, %524 ], [ %522, %520 ]
  %534 = phi i32 [ %527, %524 ], [ 0, %520 ]
  %535 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 %534, i32* %535, align 8
  %536 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %536) #15
  %537 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %533, i64* %537, align 8
  %538 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i64 0, i64 0), i8** %538, align 8
  %539 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 6, i32* %539, align 8
  %540 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %11, %"class.WTF::StringView"* nonnull dereferenceable(24) %12) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %536) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %516) #15
  br i1 %540, label %541, label %543

541:                                              ; preds = %532
  %542 = add i32 %419, %423
  br label %610

543:                                              ; preds = %532
  %544 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %544) #15
  %545 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %517, align 8
  %546 = icmp eq %"class.WTF::StringImpl"* %545, null
  br i1 %546, label %547, label %551

547:                                              ; preds = %543
  %548 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* null, i8** %548, align 8
  %549 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %550 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %549, i64* %550, align 8
  br label %559

551:                                              ; preds = %543
  %552 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %545, %"class.WTF::StringImpl"** %552, align 8
  %553 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %545, i64 0, i32 1
  %554 = load i32, i32* %553, align 4
  %555 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %545, i64 1
  %556 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %557 = bitcast i8** %556 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %555, %"class.WTF::StringImpl"** %557, align 8
  %558 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %559

559:                                              ; preds = %551, %547
  %560 = phi i64 [ %558, %551 ], [ %549, %547 ]
  %561 = phi i32 [ %554, %551 ], [ 0, %547 ]
  %562 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %561, i32* %562, align 8
  %563 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %563) #15
  %564 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %560, i64* %564, align 8
  %565 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i8** %565, align 8
  %566 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 5, i32* %566, align 8
  %567 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %9, %"class.WTF::StringView"* nonnull dereferenceable(24) %10) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %563) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %544) #15
  br i1 %567, label %610, label %568

568:                                              ; preds = %559
  %569 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %569) #15
  %570 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %517, align 8
  %571 = icmp eq %"class.WTF::StringImpl"* %570, null
  br i1 %571, label %572, label %576

572:                                              ; preds = %568
  %573 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %573, align 8
  %574 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %575 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %574, i64* %575, align 8
  br label %584

576:                                              ; preds = %568
  %577 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %570, %"class.WTF::StringImpl"** %577, align 8
  %578 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %570, i64 0, i32 1
  %579 = load i32, i32* %578, align 4
  %580 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %570, i64 1
  %581 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %582 = bitcast i8** %581 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %580, %"class.WTF::StringImpl"** %582, align 8
  %583 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %584

584:                                              ; preds = %576, %572
  %585 = phi i64 [ %583, %576 ], [ %574, %572 ]
  %586 = phi i32 [ %579, %576 ], [ 0, %572 ]
  %587 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %586, i32* %587, align 8
  %588 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %588) #15
  %589 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %585, i64* %589, align 8
  %590 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), i8** %590, align 8
  %591 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 3, i32* %591, align 8
  %592 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %588) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %569) #15
  br i1 %592, label %593, label %595

593:                                              ; preds = %584
  %594 = add i32 %419, %423
  br label %610

595:                                              ; preds = %584
  %596 = sub i32 %423, %425
  %597 = add i32 %419, %596
  %598 = icmp ugt i32 %420, %425
  %599 = add i32 %420, %597
  %600 = icmp ugt i32 %420, %423
  %601 = select i1 %600, i32 %423, i32 %420
  %602 = select i1 %598, i32 %599, i32 %601
  %603 = icmp ugt i32 %421, %425
  br i1 %603, label %604, label %606

604:                                              ; preds = %595
  %605 = add i32 %421, %597
  br label %610

606:                                              ; preds = %595
  %607 = icmp ugt i32 %421, %423
  %608 = add i32 %419, %423
  %609 = select i1 %607, i32 %608, i32 %421
  br label %610

610:                                              ; preds = %559, %606, %604, %593, %541
  %611 = phi i32 [ %423, %541 ], [ %594, %593 ], [ %602, %606 ], [ %602, %604 ], [ %423, %559 ]
  %612 = phi i32 [ %542, %541 ], [ %594, %593 ], [ %609, %606 ], [ %605, %604 ], [ %423, %559 ]
  %613 = bitcast %"class.WTF::String"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %613) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64 4) #15
  call void @_ZN5blink18TextControlElement27setSelectionRangeForBindingEjjRKN3WTF6StringE(%"class.blink::TextControlElement"* %0, i32 %611, i32 %612, %"class.WTF::String"* nonnull dereferenceable(8) %25)
  %614 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 0, i32 0, i32 0
  %615 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %614, align 8
  %616 = icmp eq %"class.WTF::StringImpl"* %615, null
  br i1 %616, label %630, label %617

617:                                              ; preds = %610
  %618 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %615, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %619 = load atomic i32, i32* %618 monotonic, align 4
  %620 = and i32 %619, 2
  %621 = icmp eq i32 %620, 0
  %622 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %615, i64 0, i32 0
  %623 = load i32, i32* %622, align 4
  br i1 %621, label %624, label %626

624:                                              ; preds = %617
  %625 = add i32 %623, -1
  store i32 %625, i32* %622, align 4
  br label %626

626:                                              ; preds = %624, %617
  %627 = phi i32 [ %625, %624 ], [ %623, %617 ]
  %628 = icmp eq i32 %627, 0
  br i1 %628, label %629, label %630

629:                                              ; preds = %626
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %615) #15
  br label %630

630:                                              ; preds = %610, %626, %629
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %613) #15
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %20) #15
  %631 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %427, align 8
  %632 = icmp eq %"class.WTF::StringImpl"* %631, null
  br i1 %632, label %646, label %633

633:                                              ; preds = %630
  %634 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %631, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %635 = load atomic i32, i32* %634 monotonic, align 4
  %636 = and i32 %635, 2
  %637 = icmp eq i32 %636, 0
  %638 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %631, i64 0, i32 0
  %639 = load i32, i32* %638, align 4
  br i1 %637, label %640, label %642

640:                                              ; preds = %633
  %641 = add i32 %639, -1
  store i32 %641, i32* %638, align 4
  br label %642

642:                                              ; preds = %640, %633
  %643 = phi i32 [ %641, %640 ], [ %639, %633 ]
  %644 = icmp eq i32 %643, 0
  br i1 %644, label %645, label %646

645:                                              ; preds = %642
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %631) #15
  br label %646

646:                                              ; preds = %630, %642, %645
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %426) #15
  br i1 %406, label %660, label %647

647:                                              ; preds = %646
  %648 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %405, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %649 = load atomic i32, i32* %648 monotonic, align 4
  %650 = and i32 %649, 2
  %651 = icmp eq i32 %650, 0
  %652 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %405, i64 0, i32 0
  %653 = load i32, i32* %652, align 4
  br i1 %651, label %654, label %656

654:                                              ; preds = %647
  %655 = add i32 %653, -1
  store i32 %655, i32* %652, align 4
  br label %656

656:                                              ; preds = %654, %647
  %657 = phi i32 [ %655, %654 ], [ %653, %647 ]
  %658 = icmp eq i32 %657, 0
  br i1 %658, label %659, label %660

659:                                              ; preds = %656
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %405) #15
  br label %660

660:                                              ; preds = %659, %656, %646, %400, %399
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.2812"* noalias sret, %"class.WTF::StringAppend.2813"* dereferenceable(24), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend.2813", align 8
  %5 = bitcast %"class.WTF::StringAppend.2813"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.WTF::StringAppend.2813"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2813", %"class.WTF::StringAppend.2813"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2813", %"class.WTF::StringAppend.2813"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #15
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !3

26:                                               ; preds = %17
  tail call void @llvm.trap() #15
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %3, %12, %27
  %30 = getelementptr inbounds %"class.WTF::StringAppend.2813", %"class.WTF::StringAppend.2813"* %4, i64 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend.2813", %"class.WTF::StringAppend.2813"* %1, i64 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8** %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %54

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #15
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !3

50:                                               ; preds = %41
  tail call void @llvm.trap() #15
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %54

53:                                               ; preds = %29
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.2812"* %0, %"class.WTF::StringAppend.2813"* nonnull byval(%"class.WTF::StringAppend.2813") align 8 %4, %"class.WTF::StringImpl"* null)
  br label %66

54:                                               ; preds = %36, %51
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.2812"* %0, %"class.WTF::StringAppend.2813"* nonnull byval(%"class.WTF::StringAppend.2813") align 8 %4, %"class.WTF::StringImpl"* nonnull %2)
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %54
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %54
  %63 = phi i32 [ %61, %60 ], [ %59, %54 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #15
  br label %66

66:                                               ; preds = %53, %62, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.3387", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.3387", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3387", align 8
  %5 = alloca i8*, align 8
  %6 = alloca i16*, align 8
  %7 = bitcast %"class.WTF::StringTypeAdapter.3387"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false) #15
  %9 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3387"* nonnull %4, i8* %9) #15
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = bitcast %"class.WTF::StringTypeAdapter.3387"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #15
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false) #15
  %15 = load i8*, i8** %14, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3387"* nonnull %3, i8* %15) #15
  %16 = bitcast %"class.WTF::StringTypeAdapter.3387"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #15
  %17 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false) #15
  %18 = load i8*, i8** %17, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3387"* nonnull %2, i8* %18) #15
  %19 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %23 = select i1 %21, %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"* %20
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #15
  br i1 %27, label %28, label %29

28:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #15
  br label %72

29:                                               ; preds = %1
  %30 = icmp eq %"class.WTF::StringImpl"* %11, null
  %31 = select i1 %30, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %11
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #15
  br i1 %35, label %72, label %36

36:                                               ; preds = %29
  %37 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #15
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %38 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %39 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %38, i8** nonnull dereferenceable(8) %5) #15
  %40 = load i8*, i8** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %40)
  %41 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %41, label %108, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %59

49:                                               ; preds = %42
  %50 = zext i32 %48 to i33
  %51 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %50, i33 1) #15
  %52 = extractvalue { i33, i1 } %51, 1
  %53 = extractvalue { i33, i1 } %51, 0
  %54 = icmp slt i33 %53, 0
  %55 = or i1 %52, %54
  br i1 %55, label %56, label %57, !prof !3

56:                                               ; preds = %49
  call void @llvm.trap() #15
  unreachable

57:                                               ; preds = %49
  %58 = trunc i33 %53 to i32
  store i32 %58, i32* %47, align 4
  br label %59

59:                                               ; preds = %42, %57
  %60 = phi i32 [ %58, %57 ], [ %48, %42 ]
  %61 = ptrtoint %"class.WTF::StringImpl"* %39 to i64
  %62 = load atomic i32, i32* %43 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %67 = add i32 %60, -1
  store i32 %67, i32* %66, align 4
  br label %68

68:                                               ; preds = %65, %59
  %69 = phi i32 [ %67, %65 ], [ %60, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %108

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #15
  br label %108

72:                                               ; preds = %29, %28
  %73 = bitcast i16** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #15
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %6, align 8
  %74 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %75 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %74, i16** nonnull dereferenceable(8) %6) #15
  %76 = load i16*, i16** %6, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %76)
  %77 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %77, label %108, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %95

85:                                               ; preds = %78
  %86 = zext i32 %84 to i33
  %87 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #15
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !3

92:                                               ; preds = %85
  call void @llvm.trap() #15
  unreachable

93:                                               ; preds = %85
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %83, align 4
  br label %95

95:                                               ; preds = %78, %93
  %96 = phi i32 [ %94, %93 ], [ %84, %78 ]
  %97 = ptrtoint %"class.WTF::StringImpl"* %75 to i64
  %98 = load atomic i32, i32* %79 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %103 = add i32 %96, -1
  store i32 %103, i32* %102, align 4
  br label %104

104:                                              ; preds = %101, %95
  %105 = phi i32 [ %103, %101 ], [ %96, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #15
  br label %108

108:                                              ; preds = %107, %104, %72, %71, %68, %36
  %109 = phi i8* [ %37, %36 ], [ %37, %68 ], [ %37, %71 ], [ %73, %72 ], [ %73, %104 ], [ %73, %107 ]
  %110 = phi i64 [ 0, %36 ], [ %61, %68 ], [ %61, %71 ], [ 0, %72 ], [ %97, %104 ], [ %97, %107 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #15
  %111 = inttoptr i64 %110 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %111
}

declare %"class.blink::ShadowRoot"* @_ZNK5blink7Element14OpenShadowRootEv(%"class.blink::Element"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #15
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %37
  tail call void @llvm.trap() #15
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #15
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #15
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #15
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink18TextControlElement17SetSelectionRangeEjjNS_27TextFieldSelectionDirectionE(%"class.blink::TextControlElement"*, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = alloca %"class.blink::SelectionTemplate", align 8
  %8 = alloca %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder", align 8
  %9 = alloca %"class.blink::SetSelectionOptions", align 4
  %10 = alloca %"class.blink::SetSelectionOptions::Builder", align 4
  %11 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink7Element14OpenShadowRootEv(%"class.blink::Element"* %11) #15
  %13 = icmp eq %"class.blink::ShadowRoot"* %12, null
  br i1 %13, label %14, label %119

14:                                               ; preds = %4
  %15 = bitcast %"class.blink::TextControlElement"* %0 to i1 (%"class.blink::Element"*)***
  %16 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %16, i64 126
  %18 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.blink::Element"* %11) #15
  br i1 %19, label %20, label %119

20:                                               ; preds = %14
  %21 = tail call %"class.WTF::StringImpl"* @_ZNK5blink18TextControlElement16InnerEditorValueEv(%"class.blink::TextControlElement"* %0)
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %38, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %34

32:                                               ; preds = %23
  %33 = add i32 %31, -1
  store i32 %33, i32* %30, align 4
  br label %34

34:                                               ; preds = %32, %23
  %35 = phi i32 [ %33, %32 ], [ %31, %23 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #15
  br label %38

38:                                               ; preds = %20, %34, %37
  %39 = phi i32 [ %25, %34 ], [ %25, %37 ], [ 0, %20 ]
  %40 = icmp ult i32 %39, %2
  %41 = select i1 %40, i32 %39, i32 %2
  %42 = icmp ult i32 %41, %1
  %43 = select i1 %42, i32 %41, i32 %1
  %44 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %45 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %45, i64 0, i32 2, i32 0, i32 0
  %47 = load %"class.blink::Document"*, %"class.blink::Document"** %46, align 8
  %48 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %47) #15
  %49 = icmp eq i32 %3, 0
  %50 = icmp ne %"class.blink::LocalFrame"* %48, null
  %51 = and i1 %49, %50
  br i1 %51, label %52, label %58

52:                                               ; preds = %38
  %53 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %48, i64 0, i32 13, i32 0, i32 0
  %54 = load %"class.blink::Editor"*, %"class.blink::Editor"** %53, align 8
  %55 = tail call i32 @_ZNK5blink6Editor8BehaviorEv(%"class.blink::Editor"* %54) #15
  %56 = icmp ne i32 %55, 0
  %57 = zext i1 %56 to i32
  br label %58

58:                                               ; preds = %38, %52
  %59 = phi i32 [ %57, %52 ], [ %3, %38 ]
  %60 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 4
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, %43
  br i1 %62, label %63, label %71

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 5
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %65, %41
  br i1 %66, label %67, label %71

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 6
  %69 = load i32, i32* %68, align 4
  %70 = icmp ne i32 %69, %59
  br label %71

71:                                               ; preds = %58, %63, %67
  %72 = phi i1 [ true, %63 ], [ true, %58 ], [ %70, %67 ]
  store i32 %43, i32* %60, align 4
  %73 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 5
  store i32 %41, i32* %73, align 8
  %74 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 6
  store i32 %59, i32* %74, align 4
  %75 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %44, align 8
  %76 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %75, i64 0, i32 2, i32 0, i32 0
  %77 = load %"class.blink::Document"*, %"class.blink::Document"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %77, i64 0, i32 43, i32 0, i32 0
  %79 = load %"class.blink::Element"*, %"class.blink::Element"** %78, align 8
  %80 = icmp eq %"class.blink::Element"* %79, %11
  br i1 %80, label %81, label %119

81:                                               ; preds = %71
  %82 = tail call zeroext i1 @_ZNK5blink8Document25WillUpdateFocusAppearanceEv(%"class.blink::Document"* %77) #15
  br i1 %82, label %119, label %83

83:                                               ; preds = %81
  %84 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i32, i32* %84, align 8
  %86 = and i32 %85, 256
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %119, label %88

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 1, i32 0, i32 0
  %90 = load %"class.blink::TextControlInnerEditorElement"*, %"class.blink::TextControlInnerEditorElement"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %90, i64 0, i32 0, i32 0
  %92 = icmp ne %"class.blink::TextControlInnerEditorElement"* %90, null
  %93 = and i1 %50, %92
  br i1 %93, label %94, label %119

94:                                               ; preds = %88
  %95 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %95) #15
  %96 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %96, i8 -86, i64 16, i1 false)
  call fastcc void @_ZN5blinkL16PositionForIndexEPNS_11HTMLElementEj(%"class.blink::PositionTemplate"* nonnull sret %5, %"class.blink::HTMLElement"* %91, i32 %43)
  %97 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %97) #15
  %98 = icmp ugt i32 %41, %1
  %99 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %99, i8 -86, i64 16, i1 false)
  br i1 %98, label %101, label %100

100:                                              ; preds = %94
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %6, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5) #15
  br label %102

101:                                              ; preds = %94
  call fastcc void @_ZN5blinkL16PositionForIndexEPNS_11HTMLElementEj(%"class.blink::PositionTemplate"* nonnull sret %6, %"class.blink::HTMLElement"* %91, i32 %41)
  br label %102

102:                                              ; preds = %101, %100
  %103 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %48, i64 0, i32 14, i32 0, i32 0
  %104 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %103, align 8
  %105 = bitcast %"class.blink::SelectionTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %105) #15
  %106 = bitcast %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %106) #15
  call void @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7BuilderC1Ev(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %8) #15
  %107 = icmp eq i32 %59, 2
  %108 = select i1 %107, %"class.blink::PositionTemplate"* %6, %"class.blink::PositionTemplate"* %5
  %109 = call dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder8CollapseERKNS_16PositionTemplateIS3_EE(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %8, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %108) #15
  %110 = select i1 %107, %"class.blink::PositionTemplate"* %5, %"class.blink::PositionTemplate"* %6
  %111 = call dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder6ExtendERKNS_16PositionTemplateIS3_EE(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %109, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %110) #15
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder5BuildEv(%"class.blink::SelectionTemplate"* nonnull sret %7, %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %111) #15
  %112 = bitcast %"class.blink::SetSelectionOptions"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %112) #15
  %113 = bitcast %"class.blink::SetSelectionOptions::Builder"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %113) #15
  call void @_ZN5blink19SetSelectionOptions7BuilderC1Ev(%"class.blink::SetSelectionOptions::Builder"* nonnull %10) #15
  %114 = call dereferenceable(24) %"class.blink::SetSelectionOptions::Builder"* @_ZN5blink19SetSelectionOptions7Builder20SetShouldCloseTypingEb(%"class.blink::SetSelectionOptions::Builder"* nonnull %10, i1 zeroext true) #15
  %115 = call dereferenceable(24) %"class.blink::SetSelectionOptions::Builder"* @_ZN5blink19SetSelectionOptions7Builder25SetShouldClearTypingStyleEb(%"class.blink::SetSelectionOptions::Builder"* %114, i1 zeroext true) #15
  %116 = call dereferenceable(24) %"class.blink::SetSelectionOptions::Builder"* @_ZN5blink19SetSelectionOptions7Builder16SetDoNotSetFocusEb(%"class.blink::SetSelectionOptions::Builder"* %115, i1 zeroext true) #15
  %117 = icmp ne i32 %59, 0
  %118 = call dereferenceable(24) %"class.blink::SetSelectionOptions::Builder"* @_ZN5blink19SetSelectionOptions7Builder16SetIsDirectionalEb(%"class.blink::SetSelectionOptions::Builder"* %116, i1 zeroext %117) #15
  call void @_ZNK5blink19SetSelectionOptions7Builder5BuildEv(%"class.blink::SetSelectionOptions"* nonnull sret %9, %"class.blink::SetSelectionOptions::Builder"* %118) #15
  call void @_ZN5blink14FrameSelection12SetSelectionERKNS_17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_19SetSelectionOptionsE(%"class.blink::FrameSelection"* %104, %"class.blink::SelectionTemplate"* nonnull dereferenceable(40) %7, %"class.blink::SetSelectionOptions"* nonnull dereferenceable(24) %9) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %113) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %112) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %106) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %105) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %95) #15
  br label %119

119:                                              ; preds = %83, %71, %81, %88, %102, %14, %4
  %120 = phi i1 [ false, %4 ], [ false, %14 ], [ %72, %102 ], [ %72, %88 ], [ %72, %81 ], [ %72, %83 ], [ %72, %71 ]
  ret i1 %120
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18TextControlElement19ScheduleSelectEventEv(%"class.blink::TextControlElement"*) local_unnamed_addr #0 align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names7kSelectE, align 8
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #15
  %4 = bitcast i8* %3 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %4, %"class.WTF::AtomicString"* dereferenceable(8) %2, i32 0, i32 1, i32 1) #15
  %5 = getelementptr inbounds i8, i8* %3, i64 -4
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = or i16 %7, 1
  store atomic i16 %8, i16* %6 release, align 2
  %9 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink5Event9SetTargetEPNS_11EventTargetE(%"class.blink::Event"* %4, %"class.blink::EventTarget"* %9) #15
  %10 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %11, i64 0, i32 2, i32 0, i32 0
  %13 = load %"class.blink::Document"*, %"class.blink::Document"** %12, align 8
  tail call void @_ZN5blink8Document26EnqueueAnimationFrameEventEPNS_5EventE(%"class.blink::Document"* %13, %"class.blink::Event"* %4) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink18TextControlElement16IndexForPositionEPNS_11HTMLElementERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::HTMLElement"*, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::PositionTemplate", align 8
  %4 = icmp eq %"class.blink::HTMLElement"* %0, null
  br i1 %4, label %135, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = tail call zeroext i1 @_ZNK5blink4Node8containsEPKS0_(%"class.blink::Node"* %6, %"class.blink::Node"* %8) #15
  %10 = xor i1 %9, true
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %12 = icmp eq %"class.blink::Node"* %11, null
  %13 = or i1 %12, %10
  br i1 %13, label %135, label %14

14:                                               ; preds = %5
  %15 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #15
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10BeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %3, %"class.blink::Node"* dereferenceable(64) %6) #15
  %16 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %3, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::Node"*, %"class.blink::Node"** %16, align 8
  %18 = icmp eq %"class.blink::Node"* %17, null
  %19 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  br i1 %18, label %20, label %22

20:                                               ; preds = %14
  %21 = icmp eq %"class.blink::Node"* %19, null
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #15
  br i1 %21, label %135, label %40

22:                                               ; preds = %14
  %23 = icmp eq %"class.blink::Node"* %17, %19
  br i1 %23, label %24, label %33

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %3, i64 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %26, %28
  br i1 %29, label %30, label %33

30:                                               ; preds = %24
  %31 = icmp eq i32 %26, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %30
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #15
  br label %135

33:                                               ; preds = %24, %22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #15
  br label %40

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %3, i64 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %36, %38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #15
  br i1 %39, label %135, label %40

40:                                               ; preds = %20, %33, %34
  %41 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE25ComputeNodeBeforePositionEv(%"class.blink::PositionTemplate"* %1) #15
  %42 = icmp eq %"class.blink::Node"* %41, null
  br i1 %42, label %43, label %45

43:                                               ; preds = %40
  %44 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %1) #15
  br label %45

45:                                               ; preds = %40, %43
  %46 = phi %"class.blink::Node"* [ %41, %40 ], [ %44, %43 ]
  %47 = icmp eq %"class.blink::Node"* %46, %6
  br i1 %47, label %48, label %55

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 2
  br i1 %51, label %52, label %55

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %54 = load %"class.blink::Node"*, %"class.blink::Node"** %53, align 8
  br label %55

55:                                               ; preds = %52, %48, %45
  %56 = phi %"class.blink::Node"* [ %54, %52 ], [ %6, %48 ], [ %46, %45 ]
  %57 = icmp eq %"class.blink::Node"* %56, null
  br i1 %57, label %135, label %58

58:                                               ; preds = %55
  %59 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kBrTagE, align 8
  %60 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %59, i64 0, i32 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %62 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 1
  br label %63

63:                                               ; preds = %58, %131
  %64 = phi %"class.blink::Node"* [ %56, %58 ], [ %133, %131 ]
  %65 = phi i32 [ 0, %58 ], [ %132, %131 ]
  %66 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %64, i64 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = and i32 %67, 12
  %69 = icmp eq i32 %68, 4
  br i1 %69, label %70, label %113

70:                                               ; preds = %63
  %71 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %64, i64 1
  %72 = bitcast %"class.blink::Node"* %71 to i8*
  %73 = load i8, i8* %72, align 8, !range !2
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %94, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %64, i64 1, i32 0, i32 0, i32 1
  %77 = bitcast %"class.blink::TraceWrapperV8Reference"* %76 to %"class.blink::ParkableStringImpl"**
  %78 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %77, align 8
  %79 = icmp eq %"class.blink::ParkableStringImpl"* %78, null
  br i1 %79, label %102, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0
  %82 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %81, align 8
  %83 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %82, null
  br i1 %83, label %84, label %91

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %78, i64 0, i32 1, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %102, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 1
  %90 = load i32, i32* %89, align 4
  br label %102

91:                                               ; preds = %80
  %92 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %82, i64 0, i32 8
  %93 = load i32, i32* %92, align 4
  br label %102

94:                                               ; preds = %70
  %95 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %64, i64 1, i32 1
  %96 = bitcast i32* %95 to %"class.WTF::StringImpl"**
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %102, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 1
  %101 = load i32, i32* %100, align 4
  br label %102

102:                                              ; preds = %75, %84, %88, %91, %94, %99
  %103 = phi i32 [ 0, %75 ], [ %93, %91 ], [ %90, %88 ], [ 0, %84 ], [ %101, %99 ], [ 0, %94 ]
  %104 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %1) #15
  %105 = icmp eq %"class.blink::Node"* %64, %104
  br i1 %105, label %106, label %110

106:                                              ; preds = %102
  %107 = load i32, i32* %62, align 8
  %108 = icmp slt i32 %107, %103
  %109 = select i1 %108, i32 %107, i32 %103
  br label %110

110:                                              ; preds = %102, %106
  %111 = phi i32 [ %109, %106 ], [ %103, %102 ]
  %112 = add i32 %111, %65
  br label %131

113:                                              ; preds = %63
  %114 = and i32 %67, 48
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %131

116:                                              ; preds = %113
  %117 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %60, align 8
  %118 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %64, i64 1, i32 2
  %119 = bitcast %"class.blink::Member.318"* %118 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %120 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %119, align 8
  %121 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %120, i64 0, i32 3, i32 0, i32 0, i32 0
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %123 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %117, i64 0, i32 3, i32 0, i32 0, i32 0
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %122, %124
  br i1 %125, label %126, label %131

126:                                              ; preds = %116
  %127 = load %"class.blink::Node"*, %"class.blink::Node"** %61, align 8
  %128 = icmp ne %"class.blink::Node"* %64, %127
  %129 = zext i1 %128 to i32
  %130 = add i32 %65, %129
  br label %131

131:                                              ; preds = %113, %126, %116, %110
  %132 = phi i32 [ %112, %110 ], [ %65, %116 ], [ %130, %126 ], [ %65, %113 ]
  %133 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal8PreviousERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %64, %"class.blink::Node"* %6) #15
  %134 = icmp eq %"class.blink::Node"* %133, null
  br i1 %134, label %135, label %63

135:                                              ; preds = %131, %55, %5, %20, %32, %34, %2
  %136 = phi i32 [ 0, %2 ], [ 0, %5 ], [ 0, %34 ], [ 0, %32 ], [ 0, %20 ], [ 0, %55 ], [ %132, %131 ]
  ret i32 %136
}

declare zeroext i1 @_ZNK5blink4Node8containsEPKS0_(%"class.blink::Node"*, %"class.blink::Node"*) local_unnamed_addr #1

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10BeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE25ComputeNodeBeforePositionEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal8PreviousERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink18TextControlElement25ShouldApplySelectionCacheEv(%"class.blink::TextControlElement"* readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %3, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %5, i64 0, i32 43, i32 0, i32 0
  %7 = load %"class.blink::Element"*, %"class.blink::Element"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = icmp eq %"class.blink::Element"* %7, %8
  br i1 %9, label %10, label %12

10:                                               ; preds = %1
  %11 = tail call zeroext i1 @_ZNK5blink8Document25WillUpdateFocusAppearanceEv(%"class.blink::Document"* %5) #15
  br label %12

12:                                               ; preds = %1, %10
  %13 = phi i1 [ true, %1 ], [ %11, %10 ]
  ret i1 %13
}

declare zeroext i1 @_ZNK5blink8Document25WillUpdateFocusAppearanceEv(%"class.blink::Document"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL16PositionForIndexEPNS_11HTMLElementEj(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::HTMLElement"*, i32) unnamed_addr #0 {
  %4 = icmp eq i32 %2, 0
  %5 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %1, i64 0, i32 0, i32 0, i32 0
  br i1 %4, label %6, label %17

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 12
  %14 = icmp eq i32 %13, 4
  br i1 %14, label %15, label %16

15:                                               ; preds = %10
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* %0, %"class.blink::Node"* nonnull %8, i32 0) #15
  br label %148

16:                                               ; preds = %6, %10
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* %0, %"class.blink::Node"* %5, i32 0) #15
  br label %148

17:                                               ; preds = %3
  %18 = icmp eq %"class.blink::HTMLElement"* %1, null
  br i1 %18, label %146, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %146, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 1
  %26 = bitcast %"class.blink::Node"* %25 to %"class.blink::Node"**
  %27 = load %"class.blink::Node"*, %"class.blink::Node"** %26, align 8
  %28 = icmp eq %"class.blink::Node"* %27, null
  br i1 %28, label %146, label %29

29:                                               ; preds = %24
  %30 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kBrTagE, align 8
  %31 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %30, i64 0, i32 0, i32 0, i32 0
  br label %32

32:                                               ; preds = %29, %143
  %33 = phi %"class.blink::Node"* [ %5, %29 ], [ %126, %143 ]
  %34 = phi i32 [ %2, %29 ], [ %127, %143 ]
  %35 = phi %"class.blink::Node"* [ %27, %29 ], [ %144, %143 ]
  %36 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %35, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = and i32 %37, 48
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %55

40:                                               ; preds = %32
  %41 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %42 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %35, i64 1, i32 2
  %43 = bitcast %"class.blink::Member.318"* %42 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %44 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %46, %48
  br i1 %49, label %50, label %55

50:                                               ; preds = %40
  %51 = icmp eq i32 %34, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %50
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10BeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret %0, %"class.blink::Node"* nonnull dereferenceable(64) %35) #15
  br label %148

53:                                               ; preds = %50
  %54 = add i32 %34, -1
  br label %125

55:                                               ; preds = %32, %40
  %56 = and i32 %37, 12
  %57 = icmp eq i32 %56, 4
  br i1 %57, label %58, label %125

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %35, i64 1
  %60 = bitcast %"class.blink::Node"* %59 to i8*
  %61 = load i8, i8* %60, align 8, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %82, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %35, i64 1, i32 0, i32 0, i32 1
  %65 = bitcast %"class.blink::TraceWrapperV8Reference"* %64 to %"class.blink::ParkableStringImpl"**
  %66 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %65, align 8
  %67 = icmp eq %"class.blink::ParkableStringImpl"* %66, null
  br i1 %67, label %90, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0
  %70 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %69, align 8
  %71 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %70, null
  br i1 %71, label %72, label %79

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %66, i64 0, i32 1, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %90, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 1
  %78 = load i32, i32* %77, align 4
  br label %90

79:                                               ; preds = %68
  %80 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %70, i64 0, i32 8
  %81 = load i32, i32* %80, align 4
  br label %90

82:                                               ; preds = %58
  %83 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %35, i64 1, i32 1
  %84 = bitcast i32* %83 to %"class.WTF::StringImpl"**
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %86, label %90, label %87

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 1
  %89 = load i32, i32* %88, align 4
  br label %90

90:                                               ; preds = %63, %72, %76, %79, %82, %87
  %91 = phi i32 [ 0, %63 ], [ %81, %79 ], [ %78, %76 ], [ 0, %72 ], [ %89, %87 ], [ 0, %82 ]
  %92 = icmp ult i32 %34, %91
  br i1 %92, label %124, label %93

93:                                               ; preds = %90
  br i1 %62, label %113, label %94

94:                                               ; preds = %93
  %95 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %35, i64 1, i32 0, i32 0, i32 1
  %96 = bitcast %"class.blink::TraceWrapperV8Reference"* %95 to %"class.blink::ParkableStringImpl"**
  %97 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %96, align 8
  %98 = icmp eq %"class.blink::ParkableStringImpl"* %97, null
  br i1 %98, label %121, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0
  %101 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %100, align 8
  %102 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %101, null
  br i1 %102, label %103, label %110

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %97, i64 0, i32 1, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %121, label %107

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 1
  %109 = load i32, i32* %108, align 4
  br label %121

110:                                              ; preds = %99
  %111 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %101, i64 0, i32 8
  %112 = load i32, i32* %111, align 4
  br label %121

113:                                              ; preds = %93
  %114 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %35, i64 1, i32 1
  %115 = bitcast i32* %114 to %"class.WTF::StringImpl"**
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %121, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 1
  %120 = load i32, i32* %119, align 4
  br label %121

121:                                              ; preds = %94, %103, %107, %110, %113, %118
  %122 = phi i32 [ 0, %94 ], [ %112, %110 ], [ %109, %107 ], [ 0, %103 ], [ %120, %118 ], [ 0, %113 ]
  %123 = sub i32 %34, %122
  br label %125

124:                                              ; preds = %90
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* %0, %"class.blink::Node"* nonnull %35, i32 %34) #15
  br label %148

125:                                              ; preds = %55, %121, %53
  %126 = phi %"class.blink::Node"* [ %35, %53 ], [ %33, %55 ], [ %35, %121 ]
  %127 = phi i32 [ %54, %53 ], [ %34, %55 ], [ %123, %121 ]
  %128 = and i32 %37, 2
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %135, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %35, i64 1
  %132 = bitcast %"class.blink::Node"* %131 to %"class.blink::Node"**
  %133 = load %"class.blink::Node"*, %"class.blink::Node"** %132, align 8
  %134 = icmp eq %"class.blink::Node"* %133, null
  br i1 %134, label %135, label %143

135:                                              ; preds = %130, %125
  %136 = icmp eq %"class.blink::Node"* %35, %5
  br i1 %136, label %146, label %137

137:                                              ; preds = %135
  %138 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %35, i64 0, i32 5, i32 0, i32 0
  %139 = load %"class.blink::Node"*, %"class.blink::Node"** %138, align 8
  %140 = icmp eq %"class.blink::Node"* %139, null
  br i1 %140, label %141, label %143

141:                                              ; preds = %137
  %142 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %35, %"class.blink::Node"* %5) #15
  br label %143

143:                                              ; preds = %130, %137, %141
  %144 = phi %"class.blink::Node"* [ %142, %141 ], [ %139, %137 ], [ %133, %130 ]
  %145 = icmp eq %"class.blink::Node"* %144, null
  br i1 %145, label %146, label %32

146:                                              ; preds = %135, %143, %19, %17, %24
  %147 = phi %"class.blink::Node"* [ %5, %24 ], [ %5, %17 ], [ %5, %19 ], [ %126, %143 ], [ %126, %135 ]
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE25LastPositionInOrAfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret %0, %"class.blink::Node"* dereferenceable(64) %147) #15
  br label %148

148:                                              ; preds = %52, %124, %146, %15, %16
  ret void
}

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"*, %"class.blink::PositionTemplate"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN5blink14FrameSelection12SetSelectionERKNS_17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_19SetSelectionOptionsE(%"class.blink::FrameSelection"*, %"class.blink::SelectionTemplate"* dereferenceable(40), %"class.blink::SetSelectionOptions"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7BuilderC1Ev(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"*) unnamed_addr #1

declare dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder8CollapseERKNS_16PositionTemplateIS3_EE(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"*, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #1

declare dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder6ExtendERKNS_16PositionTemplateIS3_EE(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"*, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder5BuildEv(%"class.blink::SelectionTemplate"* sret, %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"*) local_unnamed_addr #1

declare void @_ZN5blink19SetSelectionOptions7BuilderC1Ev(%"class.blink::SetSelectionOptions::Builder"*) unnamed_addr #1

declare dereferenceable(24) %"class.blink::SetSelectionOptions::Builder"* @_ZN5blink19SetSelectionOptions7Builder20SetShouldCloseTypingEb(%"class.blink::SetSelectionOptions::Builder"*, i1 zeroext) local_unnamed_addr #1

declare dereferenceable(24) %"class.blink::SetSelectionOptions::Builder"* @_ZN5blink19SetSelectionOptions7Builder25SetShouldClearTypingStyleEb(%"class.blink::SetSelectionOptions::Builder"*, i1 zeroext) local_unnamed_addr #1

declare dereferenceable(24) %"class.blink::SetSelectionOptions::Builder"* @_ZN5blink19SetSelectionOptions7Builder16SetDoNotSetFocusEb(%"class.blink::SetSelectionOptions::Builder"*, i1 zeroext) local_unnamed_addr #1

declare dereferenceable(24) %"class.blink::SetSelectionOptions::Builder"* @_ZN5blink19SetSelectionOptions7Builder16SetIsDirectionalEb(%"class.blink::SetSelectionOptions::Builder"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZNK5blink19SetSelectionOptions7Builder5BuildEv(%"class.blink::SetSelectionOptions"* sret, %"class.blink::SetSelectionOptions::Builder"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink18TextControlElement23VisiblePositionForIndexEi(%"class.blink::VisiblePositionTemplate"* noalias sret, %"class.blink::TextControlElement"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = alloca %"class.blink::CharacterIteratorAlgorithm", align 8
  %7 = alloca %"class.blink::TextIteratorBehavior", align 4
  %8 = alloca %"class.blink::PositionTemplate", align 8
  %9 = icmp slt i32 %2, 1
  br i1 %9, label %10, label %14

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %1, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.blink::TextControlInnerEditorElement"*, %"class.blink::TextControlInnerEditorElement"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE(%"class.blink::VisiblePositionTemplate"* sret %0, %"class.blink::Node"* dereferenceable(64) %13) #15
  br label %29

14:                                               ; preds = %3
  %15 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 16, i1 false) #15
  %16 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 16, i1 false) #15
  %17 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %1, i64 0, i32 1, i32 0, i32 0
  %18 = load %"class.blink::TextControlInnerEditorElement"*, %"class.blink::TextControlInnerEditorElement"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = call zeroext i1 @_ZN5blink5Range18selectNodeContentsEPNS_4NodeERNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES8_(%"class.blink::Node"* %19, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5) #15
  br i1 %20, label %22, label %21

21:                                               ; preds = %14
  call void @_ZN5blink23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1Ev(%"class.blink::VisiblePositionTemplate"* %0) #15
  br label %28

22:                                               ; preds = %14
  %23 = bitcast %"class.blink::CharacterIteratorAlgorithm"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 328, i8* nonnull %23) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 328, i1 false)
  %24 = bitcast %"class.blink::TextIteratorBehavior"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #15
  call void @_ZN5blink20TextIteratorBehaviorC1Ev(%"class.blink::TextIteratorBehavior"* nonnull %7) #15
  call void @_ZN5blink26CharacterIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_RKNS_20TextIteratorBehaviorE(%"class.blink::CharacterIteratorAlgorithm"* nonnull %6, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5, %"class.blink::TextIteratorBehavior"* nonnull dereferenceable(4) %7) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #15
  %25 = add nsw i32 %2, -1
  call void @_ZN5blink26CharacterIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE7AdvanceEi(%"class.blink::CharacterIteratorAlgorithm"* nonnull %6, i32 %25) #15
  %26 = bitcast %"class.blink::PositionTemplate"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #15
  call void @_ZNK5blink26CharacterIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE11EndPositionEv(%"class.blink::PositionTemplate"* nonnull sret %8, %"class.blink::CharacterIteratorAlgorithm"* nonnull %6) #15
  call void @_ZN5blink21CreateVisiblePositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_12TextAffinityE(%"class.blink::VisiblePositionTemplate"* sret %0, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %8, i32 0) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #15
  %27 = getelementptr inbounds %"class.blink::CharacterIteratorAlgorithm", %"class.blink::CharacterIteratorAlgorithm"* %6, i64 0, i32 3
  call void @_ZN5blink21TextIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::TextIteratorAlgorithm"* %27) #15
  call void @llvm.lifetime.end.p0i8(i64 328, i8* nonnull %23) #15
  br label %28

28:                                               ; preds = %22, %21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #15
  br label %29

29:                                               ; preds = %28, %10
  ret void
}

declare void @_ZN5blink23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE(%"class.blink::VisiblePositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink5Range18selectNodeContentsEPNS_4NodeERNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES8_(%"class.blink::Node"*, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN5blink23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1Ev(%"class.blink::VisiblePositionTemplate"*) unnamed_addr #1

declare void @_ZN5blink20TextIteratorBehaviorC1Ev(%"class.blink::TextIteratorBehavior"*) unnamed_addr #1

declare void @_ZN5blink26CharacterIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_RKNS_20TextIteratorBehaviorE(%"class.blink::CharacterIteratorAlgorithm"*, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::TextIteratorBehavior"* dereferenceable(4)) unnamed_addr #1

declare void @_ZN5blink26CharacterIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE7AdvanceEi(%"class.blink::CharacterIteratorAlgorithm"*, i32) local_unnamed_addr #1

declare void @_ZN5blink21CreateVisiblePositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_12TextAffinityE(%"class.blink::VisiblePositionTemplate"* sret, %"class.blink::PositionTemplate"* dereferenceable(16), i32) local_unnamed_addr #1

declare void @_ZNK5blink26CharacterIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE11EndPositionEv(%"class.blink::PositionTemplate"* sret, %"class.blink::CharacterIteratorAlgorithm"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink18TextControlElement23IndexForVisiblePositionERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::TextControlElement"* readonly, %"class.blink::VisiblePositionTemplate"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::PositionTemplate", align 8
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = alloca %"class.blink::TextIteratorBehavior", align 4
  %7 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #15
  %8 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  %9 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #15
  %10 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %1, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %4, %"class.blink::PositionTemplate"* dereferenceable(16) %10) #15
  call void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE24ParentAnchoredEquivalentEv(%"class.blink::PositionTemplate"* nonnull sret %3, %"class.blink::PositionTemplate"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #15
  %11 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %3) #15
  %12 = icmp eq %"class.blink::Node"* %11, null
  br i1 %12, label %35, label %13

13:                                               ; preds = %2
  %14 = call %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"* nonnull %11) #15
  %15 = icmp eq %"class.blink::Element"* %14, null
  br i1 %15, label %35, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %14, i64 0, i32 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 12
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %35

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::Element"* %14 to i1 (%"class.blink::Element"*)***
  %23 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %22, align 8
  %24 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %23, i64 126
  %25 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %24, align 8
  %26 = call zeroext i1 %25(%"class.blink::Element"* nonnull %14) #15
  br i1 %26, label %27, label %35

27:                                               ; preds = %21
  %28 = call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* nonnull %11) #15
  %29 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %28, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = and i32 %30, 196608
  %32 = icmp eq i32 %31, 131072
  %33 = bitcast %"class.blink::Element"* %14 to %"class.blink::TextControlElement"*
  %34 = select i1 %32, %"class.blink::TextControlElement"* %33, %"class.blink::TextControlElement"* null
  br label %35

35:                                               ; preds = %2, %13, %16, %21, %27
  %36 = phi %"class.blink::TextControlElement"* [ %34, %27 ], [ null, %21 ], [ null, %16 ], [ null, %13 ], [ null, %2 ]
  %37 = icmp eq %"class.blink::TextControlElement"* %36, %0
  br i1 %37, label %38, label %45

38:                                               ; preds = %35
  %39 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #15
  %40 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 1, i32 0, i32 0
  %41 = load %"class.blink::TextControlInnerEditorElement"*, %"class.blink::TextControlInnerEditorElement"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %5, %"class.blink::Node"* %42, i32 0) #15
  %43 = bitcast %"class.blink::TextIteratorBehavior"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %43) #15
  call void @_ZN5blink20TextIteratorBehavior26DefaultRangeLengthBehaviorEv(%"class.blink::TextIteratorBehavior"* nonnull sret %6) #15
  %44 = call i32 @_ZN5blink21TextIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE11RangeLengthERKNS_16PositionTemplateIS3_EES8_RKNS_20TextIteratorBehaviorE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %3, %"class.blink::TextIteratorBehavior"* nonnull dereferenceable(4) %6) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #15
  br label %45

45:                                               ; preds = %35, %38
  %46 = phi i32 [ %44, %38 ], [ 0, %35 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #15
  ret i32 %46
}

declare void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE24ParentAnchoredEquivalentEv(%"class.blink::PositionTemplate"* sret, %"class.blink::PositionTemplate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::TextControlElement"* @_ZN5blink20EnclosingTextControlERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 {
  %2 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %0) #15
  %3 = icmp eq %"class.blink::Node"* %2, null
  br i1 %3, label %26, label %4

4:                                                ; preds = %1
  %5 = tail call %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"* nonnull %2) #15
  %6 = icmp eq %"class.blink::Element"* %5, null
  br i1 %6, label %26, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 12
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %26

12:                                               ; preds = %7
  %13 = bitcast %"class.blink::Element"* %5 to i1 (%"class.blink::Element"*)***
  %14 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %14, i64 126
  %16 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.blink::Element"* nonnull %5) #15
  br i1 %17, label %18, label %26

18:                                               ; preds = %12
  %19 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* nonnull %2) #15
  %20 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %19, i64 0, i32 4
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 196608
  %23 = icmp eq i32 %22, 131072
  %24 = bitcast %"class.blink::Element"* %5 to %"class.blink::TextControlElement"*
  %25 = select i1 %23, %"class.blink::TextControlElement"* %24, %"class.blink::TextControlElement"* null
  br label %26

26:                                               ; preds = %1, %4, %7, %12, %18
  %27 = phi %"class.blink::TextControlElement"* [ %25, %18 ], [ null, %12 ], [ null, %7 ], [ null, %4 ], [ null, %1 ]
  ret %"class.blink::TextControlElement"* %27
}

declare i32 @_ZN5blink21TextIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEE11RangeLengthERKNS_16PositionTemplateIS3_EES8_RKNS_20TextIteratorBehaviorE(%"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::TextIteratorBehavior"* dereferenceable(4)) local_unnamed_addr #1

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"*, %"class.blink::Node"*, i32) unnamed_addr #1

declare void @_ZN5blink20TextIteratorBehavior26DefaultRangeLengthBehaviorEv(%"class.blink::TextIteratorBehavior"* sret) local_unnamed_addr #1

declare void @_ZNK5blink14FrameSelection21GetSelectionInDOMTreeEv(%"class.blink::SelectionTemplate"* sret, %"class.blink::FrameSelection"*) local_unnamed_addr #1

declare void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeStartPositionEv(%"class.blink::PositionTemplate"* sret, %"class.blink::SelectionTemplate"*) local_unnamed_addr #1

declare void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18ComputeEndPositionEv(%"class.blink::PositionTemplate"* sret, %"class.blink::SelectionTemplate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blinkL15DirectionStringENS_27TextFieldSelectionDirectionE(i32) unnamed_addr #0 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL15DirectionStringENS_27TextFieldSelectionDirectionEE6s_none to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !10

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL15DirectionStringENS_27TextFieldSelectionDirectionEE6s_none) #15
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL15DirectionStringENS_27TextFieldSelectionDirectionEE6s_none to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64 4) #15
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL15DirectionStringENS_27TextFieldSelectionDirectionEE6s_none) #15
  br label %8

8:                                                ; preds = %4, %7, %1
  %9 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL15DirectionStringENS_27TextFieldSelectionDirectionEE9s_forward to i8*) acquire, align 8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %15, !prof !10

11:                                               ; preds = %8
  %12 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL15DirectionStringENS_27TextFieldSelectionDirectionEE9s_forward) #15
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %11
  tail call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL15DirectionStringENS_27TextFieldSelectionDirectionEE9s_forward to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0), i64 7) #15
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL15DirectionStringENS_27TextFieldSelectionDirectionEE9s_forward) #15
  br label %15

15:                                               ; preds = %11, %14, %8
  %16 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL15DirectionStringENS_27TextFieldSelectionDirectionEE10s_backward to i8*) acquire, align 8
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %22, !prof !10

18:                                               ; preds = %15
  %19 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL15DirectionStringENS_27TextFieldSelectionDirectionEE10s_backward) #15
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %18
  tail call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL15DirectionStringENS_27TextFieldSelectionDirectionEE10s_backward to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i64 0, i64 0), i64 8) #15
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL15DirectionStringENS_27TextFieldSelectionDirectionEE10s_backward) #15
  br label %22

22:                                               ; preds = %18, %21, %15
  switch i32 %0, label %25 [
    i32 2, label %24
    i32 1, label %23
  ]

23:                                               ; preds = %22
  br label %25

24:                                               ; preds = %22
  br label %25

25:                                               ; preds = %22, %24, %23
  %26 = phi %"class.WTF::AtomicString"* [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL15DirectionStringENS_27TextFieldSelectionDirectionEE10s_backward to %"class.WTF::AtomicString"*), %24 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL15DirectionStringENS_27TextFieldSelectionDirectionEE9s_forward to %"class.WTF::AtomicString"*), %23 ], [ bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL15DirectionStringENS_27TextFieldSelectionDirectionEE6s_none to %"class.WTF::AtomicString"*), %22 ]
  ret %"class.WTF::AtomicString"* %26
}

declare zeroext i1 @_ZNK5blink14FrameSelection13IsDirectionalEv(%"class.blink::FrameSelection"*) local_unnamed_addr #1

declare void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE4BaseEv(%"class.blink::PositionTemplate"* sret, %"class.blink::SelectionTemplate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink18TextControlElement9SelectionEv(%"class.blink::SelectionTemplate"* noalias sret, %"class.blink::TextControlElement"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder", align 8
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.blink::SelectionTemplate", align 8
  %6 = alloca %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder", align 8
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = alloca %"class.blink::PositionTemplate", align 8
  %9 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %12, label %18, label %14

14:                                               ; preds = %2
  %15 = bitcast %"class.blink::NodeData"** %13 to %"class.blink::NodeRareData"**
  %16 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %16, i64 0, i32 1, i32 0, i32 0
  br label %20

18:                                               ; preds = %2
  %19 = bitcast %"class.blink::NodeData"** %13 to %"class.blink::NodeRenderingData"**
  br label %20

20:                                               ; preds = %14, %18
  %21 = phi %"class.blink::NodeRenderingData"** [ %17, %14 ], [ %19, %18 ]
  %22 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %22, i64 0, i32 1
  %24 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %23, align 8
  %25 = icmp eq %"class.blink::LayoutObject"* %24, null
  br i1 %25, label %33, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.blink::TextControlElement"* %1 to i1 (%"class.blink::Element"*)***
  %29 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %28, align 8
  %30 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %29, i64 126
  %31 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %30, align 8
  %32 = tail call zeroext i1 %31(%"class.blink::Element"* %27) #15
  br i1 %32, label %34, label %33

33:                                               ; preds = %20, %26
  tail call void @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1Ev(%"class.blink::SelectionTemplate"* %0) #15
  br label %156

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %1, i64 0, i32 4
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %1, i64 0, i32 5
  %38 = load i32, i32* %37, align 8
  %39 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %1, i64 0, i32 1, i32 0, i32 0
  %40 = load %"class.blink::TextControlInnerEditorElement"*, %"class.blink::TextControlInnerEditorElement"** %39, align 8
  %41 = icmp eq %"class.blink::TextControlInnerEditorElement"* %40, null
  br i1 %41, label %42, label %43

42:                                               ; preds = %34
  tail call void @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1Ev(%"class.blink::SelectionTemplate"* %0) #15
  br label %156

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %45 = load %"class.blink::Node"*, %"class.blink::Node"** %44, align 8
  %46 = icmp eq %"class.blink::Node"* %45, null
  br i1 %46, label %47, label %52

47:                                               ; preds = %43
  %48 = bitcast %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %48) #15
  call void @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7BuilderC1Ev(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %3) #15
  %49 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #15
  %50 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %4, %"class.blink::Node"* %50, i32 0) #15
  %51 = call dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder8CollapseERKNS_16PositionTemplateIS3_EE(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %3, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4) #15
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder5BuildEv(%"class.blink::SelectionTemplate"* sret %0, %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %51) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %48) #15
  br label %156

52:                                               ; preds = %43
  %53 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %127, label %58

58:                                               ; preds = %52, %118
  %59 = phi i32 [ %72, %118 ], [ 0, %52 ]
  %60 = phi i32 [ %87, %118 ], [ %36, %52 ]
  %61 = phi %"class.blink::Node"* [ %119, %118 ], [ %45, %52 ]
  %62 = phi %"class.blink::Node"* [ %86, %118 ], [ null, %52 ]
  %63 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %61, i64 0, i32 1
  %64 = load i32, i32* %63, align 8
  %65 = and i32 %64, 12
  %66 = icmp eq i32 %65, 4
  br i1 %66, label %67, label %69

67:                                               ; preds = %58
  %68 = tail call i32 @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE16LastOffsetInNodeERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %61) #15
  br label %69

69:                                               ; preds = %58, %67
  %70 = phi i32 [ %68, %67 ], [ 1, %58 ]
  %71 = icmp slt i32 %60, %59
  %72 = add nsw i32 %70, %59
  %73 = icmp sgt i32 %60, %72
  %74 = or i1 %71, %73
  br i1 %74, label %85, label %75

75:                                               ; preds = %69
  %76 = sub nsw i32 %60, %59
  %77 = load i32, i32* %63, align 8
  %78 = and i32 %77, 12
  %79 = icmp eq i32 %78, 4
  br i1 %79, label %85, label %80

80:                                               ; preds = %75
  %81 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %61) #15
  %82 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %81, i64 0, i32 0
  %83 = tail call i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"* nonnull %61) #15
  %84 = add i32 %83, %76
  br label %85

85:                                               ; preds = %80, %75, %69
  %86 = phi %"class.blink::Node"* [ %62, %69 ], [ %82, %80 ], [ %61, %75 ]
  %87 = phi i32 [ %60, %69 ], [ %84, %80 ], [ %76, %75 ]
  %88 = icmp slt i32 %38, %59
  %89 = icmp sgt i32 %38, %72
  %90 = or i1 %88, %89
  br i1 %90, label %101, label %91

91:                                               ; preds = %85
  %92 = sub nsw i32 %38, %59
  %93 = load i32, i32* %63, align 8
  %94 = and i32 %93, 12
  %95 = icmp eq i32 %94, 4
  br i1 %95, label %121, label %96

96:                                               ; preds = %91
  %97 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %61) #15
  %98 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %97, i64 0, i32 0
  %99 = tail call i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"* nonnull %61) #15
  %100 = add i32 %99, %92
  br label %121

101:                                              ; preds = %85
  %102 = load i32, i32* %63, align 8
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %110, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %61, i64 1
  %107 = bitcast %"class.blink::Node"* %106 to %"class.blink::Node"**
  %108 = load %"class.blink::Node"*, %"class.blink::Node"** %107, align 8
  %109 = icmp eq %"class.blink::Node"* %108, null
  br i1 %109, label %110, label %118

110:                                              ; preds = %105, %101
  %111 = icmp eq %"class.blink::Node"* %61, %53
  br i1 %111, label %127, label %112

112:                                              ; preds = %110
  %113 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %61, i64 0, i32 5, i32 0, i32 0
  %114 = load %"class.blink::Node"*, %"class.blink::Node"** %113, align 8
  %115 = icmp eq %"class.blink::Node"* %114, null
  br i1 %115, label %116, label %118

116:                                              ; preds = %112
  %117 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %61, %"class.blink::Node"* %53) #15
  br label %118

118:                                              ; preds = %105, %112, %116
  %119 = phi %"class.blink::Node"* [ %117, %116 ], [ %114, %112 ], [ %108, %105 ]
  %120 = icmp eq %"class.blink::Node"* %119, null
  br i1 %120, label %127, label %58

121:                                              ; preds = %96, %91
  %122 = phi %"class.blink::Node"* [ %61, %91 ], [ %98, %96 ]
  %123 = phi i32 [ %92, %91 ], [ %100, %96 ]
  %124 = icmp ne %"class.blink::Node"* %86, null
  %125 = icmp ne %"class.blink::Node"* %122, null
  %126 = and i1 %124, %125
  br i1 %126, label %128, label %127

127:                                              ; preds = %110, %118, %52, %121
  tail call void @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1Ev(%"class.blink::SelectionTemplate"* %0) #15
  br label %156

128:                                              ; preds = %121
  %129 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %130 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %129, align 8
  %131 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %130, i64 0, i32 2, i32 0, i32 0
  %132 = load %"class.blink::Document"*, %"class.blink::Document"** %131, align 8
  %133 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %132, i64 0, i32 43, i32 0, i32 0
  %134 = load %"class.blink::Element"*, %"class.blink::Element"** %133, align 8
  %135 = icmp eq %"class.blink::Element"* %134, %27
  br i1 %135, label %136, label %149

136:                                              ; preds = %128
  %137 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %132) #15
  %138 = icmp eq %"class.blink::LocalFrame"* %137, null
  br i1 %138, label %149, label %139

139:                                              ; preds = %136
  %140 = bitcast %"class.blink::SelectionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %140) #15
  %141 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %129, align 8
  %142 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %141, i64 0, i32 2, i32 0, i32 0
  %143 = load %"class.blink::Document"*, %"class.blink::Document"** %142, align 8
  %144 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %143) #15
  %145 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %144, i64 0, i32 14, i32 0, i32 0
  %146 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %145, align 8
  call void @_ZNK5blink14FrameSelection21GetSelectionInDOMTreeEv(%"class.blink::SelectionTemplate"* nonnull sret %5, %"class.blink::FrameSelection"* %146) #15
  %147 = getelementptr inbounds %"class.blink::SelectionTemplate", %"class.blink::SelectionTemplate"* %5, i64 0, i32 2
  %148 = load i32, i32* %147, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %140) #15
  br label %149

149:                                              ; preds = %136, %139, %128
  %150 = phi i32 [ %148, %139 ], [ 1, %136 ], [ 1, %128 ]
  %151 = bitcast %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %151) #15
  call void @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7BuilderC1Ev(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %6) #15
  %152 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %152) #15
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %7, %"class.blink::Node"* nonnull %86, i32 %87) #15
  %153 = bitcast %"class.blink::PositionTemplate"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %153) #15
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %8, %"class.blink::Node"* nonnull %122, i32 %123) #15
  %154 = call dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder16SetBaseAndExtentERKNS_16PositionTemplateIS3_EES9_(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %6, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %7, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %8) #15
  %155 = call dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder11SetAffinityENS_12TextAffinityE(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %154, i32 %150) #15
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder5BuildEv(%"class.blink::SelectionTemplate"* sret %0, %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %155) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %153) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %152) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %151) #15
  br label %156

156:                                              ; preds = %42, %47, %149, %127, %33
  ret void
}

declare void @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1Ev(%"class.blink::SelectionTemplate"*) unnamed_addr #1

declare i32 @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE16LastOffsetInNodeERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

declare dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder16SetBaseAndExtentERKNS_16PositionTemplateIS3_EES9_(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"*, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #1

declare dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder11SetAffinityENS_12TextAffinityE(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink18TextControlElement9maxLengthEv(%"class.blink::TextControlElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #15
  store i32 -1431655766, i32* %2, align 4
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kMaxlengthAttrE, align 8
  %5 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %5, align 8
  %7 = icmp eq %"class.blink::ElementData"* %6, null
  br i1 %7, label %58, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 0, i32 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.blink::ElementData"* %6 to %"class.blink::UniqueElementData"*
  %15 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 1, i32 1
  %16 = bitcast %"class.blink::Member.354"* %15 to %"class.blink::Attribute"**
  %17 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %14, i64 0, i32 2, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  br label %25

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 1
  %22 = bitcast %"class.blink::ElementData"* %21 to %"class.blink::Attribute"*
  %23 = lshr i32 %10, 1
  %24 = and i32 %23, 268435455
  br label %25

25:                                               ; preds = %20, %13
  %26 = phi %"class.blink::Attribute"* [ %22, %20 ], [ %17, %13 ]
  %27 = phi i32 [ %24, %20 ], [ %19, %13 ]
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %26, i64 %28
  %30 = icmp eq i32 %27, 0
  br i1 %30, label %58, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 0, i32 0, i32 0
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %36

36:                                               ; preds = %51, %31
  %37 = phi %"class.blink::Attribute"* [ %26, %31 ], [ %52, %51 ]
  %38 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %39, %33
  br i1 %40, label %54, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %43, %44
  br i1 %45, label %46, label %51

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 4, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %48, %49
  br i1 %50, label %54, label %51

51:                                               ; preds = %46, %41
  %52 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 1
  %53 = icmp eq %"class.blink::Attribute"* %52, %29
  br i1 %53, label %58, label %36

54:                                               ; preds = %46, %36
  %55 = icmp eq %"class.blink::Attribute"* %37, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 0, i32 1
  br label %60

58:                                               ; preds = %51, %54, %25, %1
  %59 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %60

60:                                               ; preds = %56, %58
  %61 = phi %"class.WTF::AtomicString"* [ %59, %58 ], [ %57, %56 ]
  %62 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %61, i64 0, i32 0
  %63 = call zeroext i1 @_ZN5blink16ParseHTMLIntegerERKN3WTF6StringERi(%"class.WTF::String"* dereferenceable(8) %62, i32* nonnull dereferenceable(4) %2) #15
  br i1 %63, label %64, label %68

64:                                               ; preds = %60
  %65 = load i32, i32* %2, align 4
  %66 = icmp sgt i32 %65, -1
  %67 = select i1 %66, i32 %65, i32 -1
  br label %68

68:                                               ; preds = %60, %64
  %69 = phi i32 [ %67, %64 ], [ -1, %60 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #15
  ret i32 %69
}

declare zeroext i1 @_ZN5blink16ParseHTMLIntegerERKN3WTF6StringERi(%"class.WTF::String"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink18TextControlElement9minLengthEv(%"class.blink::TextControlElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #15
  store i32 -1431655766, i32* %2, align 4
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kMinlengthAttrE, align 8
  %5 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %5, align 8
  %7 = icmp eq %"class.blink::ElementData"* %6, null
  br i1 %7, label %58, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 0, i32 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.blink::ElementData"* %6 to %"class.blink::UniqueElementData"*
  %15 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 1, i32 1
  %16 = bitcast %"class.blink::Member.354"* %15 to %"class.blink::Attribute"**
  %17 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %14, i64 0, i32 2, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  br label %25

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 1
  %22 = bitcast %"class.blink::ElementData"* %21 to %"class.blink::Attribute"*
  %23 = lshr i32 %10, 1
  %24 = and i32 %23, 268435455
  br label %25

25:                                               ; preds = %20, %13
  %26 = phi %"class.blink::Attribute"* [ %22, %20 ], [ %17, %13 ]
  %27 = phi i32 [ %24, %20 ], [ %19, %13 ]
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %26, i64 %28
  %30 = icmp eq i32 %27, 0
  br i1 %30, label %58, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 0, i32 0, i32 0
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %36

36:                                               ; preds = %51, %31
  %37 = phi %"class.blink::Attribute"* [ %26, %31 ], [ %52, %51 ]
  %38 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %39, %33
  br i1 %40, label %54, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %43, %44
  br i1 %45, label %46, label %51

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 4, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %48, %49
  br i1 %50, label %54, label %51

51:                                               ; preds = %46, %41
  %52 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 1
  %53 = icmp eq %"class.blink::Attribute"* %52, %29
  br i1 %53, label %58, label %36

54:                                               ; preds = %46, %36
  %55 = icmp eq %"class.blink::Attribute"* %37, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 0, i32 1
  br label %60

58:                                               ; preds = %51, %54, %25, %1
  %59 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %60

60:                                               ; preds = %56, %58
  %61 = phi %"class.WTF::AtomicString"* [ %59, %58 ], [ %57, %56 ]
  %62 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %61, i64 0, i32 0
  %63 = call zeroext i1 @_ZN5blink16ParseHTMLIntegerERKN3WTF6StringERi(%"class.WTF::String"* dereferenceable(8) %62, i32* nonnull dereferenceable(4) %2) #15
  br i1 %63, label %64, label %68

64:                                               ; preds = %60
  %65 = load i32, i32* %2, align 4
  %66 = icmp sgt i32 %65, -1
  %67 = select i1 %66, i32 %65, i32 -1
  br label %68

68:                                               ; preds = %60, %64
  %69 = phi i32 [ %67, %64 ], [ -1, %60 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #15
  ret i32 %69
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18TextControlElement12setMaxLengthEiRNS_14ExceptionStateE(%"class.blink::TextControlElement"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::IntegerToStringConverter.3392", align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::StringAppend.2813", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #15
  store i32 -1431655766, i32* %5, align 4
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kMinlengthAttrE, align 8
  %11 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %11, align 8
  %13 = icmp eq %"class.blink::ElementData"* %12, null
  br i1 %13, label %64, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %12, i64 0, i32 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %14
  %20 = bitcast %"class.blink::ElementData"* %12 to %"class.blink::UniqueElementData"*
  %21 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %12, i64 1, i32 1
  %22 = bitcast %"class.blink::Member.354"* %21 to %"class.blink::Attribute"**
  %23 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %20, i64 0, i32 2, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  br label %31

26:                                               ; preds = %14
  %27 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %12, i64 1
  %28 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::Attribute"*
  %29 = lshr i32 %16, 1
  %30 = and i32 %29, 268435455
  br label %31

31:                                               ; preds = %26, %19
  %32 = phi %"class.blink::Attribute"* [ %28, %26 ], [ %23, %19 ]
  %33 = phi i32 [ %30, %26 ], [ %25, %19 ]
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %32, i64 %34
  %36 = icmp eq i32 %33, 0
  br i1 %36, label %64, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %10, i64 0, i32 0, i32 0
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %42

42:                                               ; preds = %57, %37
  %43 = phi %"class.blink::Attribute"* [ %32, %37 ], [ %58, %57 ]
  %44 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %44, align 8
  %46 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %45, %39
  br i1 %46, label %60, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %45, i64 0, i32 3, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %49, %50
  br i1 %51, label %52, label %57

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %45, i64 0, i32 4, i32 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %54, %55
  br i1 %56, label %60, label %57

57:                                               ; preds = %52, %47
  %58 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %43, i64 1
  %59 = icmp eq %"class.blink::Attribute"* %58, %35
  br i1 %59, label %64, label %42

60:                                               ; preds = %52, %42
  %61 = icmp eq %"class.blink::Attribute"* %43, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %43, i64 0, i32 1
  br label %66

64:                                               ; preds = %57, %60, %31, %3
  %65 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %66

66:                                               ; preds = %64, %62
  %67 = phi %"class.WTF::AtomicString"* [ %65, %64 ], [ %63, %62 ]
  %68 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %67, i64 0, i32 0
  %69 = call zeroext i1 @_ZN5blink16ParseHTMLIntegerERKN3WTF6StringERi(%"class.WTF::String"* dereferenceable(8) %68, i32* nonnull dereferenceable(4) %5) #15
  br i1 %69, label %70, label %74

70:                                               ; preds = %66
  %71 = load i32, i32* %5, align 4
  %72 = icmp sgt i32 %71, -1
  %73 = select i1 %72, i32 %71, i32 -1
  br label %74

74:                                               ; preds = %66, %70
  %75 = phi i32 [ %73, %70 ], [ -1, %66 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #15
  %76 = icmp slt i32 %1, 0
  br i1 %76, label %77, label %274

77:                                               ; preds = %74
  %78 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #15
  %79 = bitcast %"class.WTF::StringAppend.2813"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %79) #15
  %80 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %4, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %80) #15
  %81 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %4, i64 0, i32 0, i64 12
  %82 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %4, i64 0, i32 2
  %83 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %4, i64 0, i32 3
  %84 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %4, i64 0, i32 0, i64 13
  %85 = sub i32 0, %1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 -86, i64 32, i1 false) #15
  store i8* %81, i8** %82, align 8
  %86 = urem i32 %85, 10
  %87 = udiv i32 %85, 10
  %88 = trunc i32 %86 to i8
  %89 = or i8 %88, 48
  store i8 %89, i8* %81, align 4
  %90 = icmp ugt i32 %85, 9
  br i1 %90, label %91, label %107

91:                                               ; preds = %77
  %92 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %4, i64 0, i32 0, i64 11
  store i8* %92, i8** %82, align 8
  %93 = urem i32 %87, 10
  %94 = trunc i32 %93 to i8
  %95 = or i8 %94, 48
  store i8 %95, i8* %92, align 1
  %96 = icmp ugt i32 %85, 99
  br i1 %96, label %97, label %107

97:                                               ; preds = %91, %97
  %98 = phi i8* [ %106, %97 ], [ %92, %91 ]
  %99 = phi i32 [ %100, %97 ], [ %87, %91 ]
  %100 = udiv i32 %99, 10
  %101 = getelementptr inbounds i8, i8* %98, i64 -1
  store i8* %101, i8** %82, align 8
  %102 = urem i32 %100, 10
  %103 = trunc i32 %102 to i8
  %104 = or i8 %103, 48
  store i8 %104, i8* %101, align 1
  %105 = icmp ugt i32 %99, 99
  %106 = load i8*, i8** %82, align 8
  br i1 %105, label %97, label %107

107:                                              ; preds = %97, %91, %77
  %108 = phi i8* [ %92, %91 ], [ %81, %77 ], [ %106, %97 ]
  %109 = getelementptr inbounds i8, i8* %108, i64 -1
  store i8* %109, i8** %82, align 8
  store i8 45, i8* %109, align 1
  %110 = bitcast i8** %82 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = ptrtoint i8* %84 to i64
  %113 = sub i64 %112, %111
  %114 = trunc i64 %113 to i32
  store i32 %114, i32* %83, align 8
  %115 = inttoptr i64 %111 to i8*
  %116 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %115, i32 %114) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %80) #15
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %193, label %118

118:                                              ; preds = %107
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %135

125:                                              ; preds = %118
  %126 = zext i32 %124 to i33
  %127 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %126, i33 1) #15
  %128 = extractvalue { i33, i1 } %127, 1
  %129 = extractvalue { i33, i1 } %127, 0
  %130 = icmp slt i33 %129, 0
  %131 = or i1 %128, %130
  br i1 %131, label %132, label %133, !prof !3

132:                                              ; preds = %125
  call void @llvm.trap() #15
  unreachable

133:                                              ; preds = %125
  %134 = trunc i33 %129 to i32
  store i32 %134, i32* %123, align 4
  br label %135

135:                                              ; preds = %133, %118
  %136 = phi i32 [ %134, %133 ], [ %124, %118 ]
  %137 = load atomic i32, i32* %119 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %150

140:                                              ; preds = %135
  %141 = zext i32 %136 to i33
  %142 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %141, i33 1) #15
  %143 = extractvalue { i33, i1 } %142, 1
  %144 = extractvalue { i33, i1 } %142, 0
  %145 = icmp slt i33 %144, 0
  %146 = or i1 %143, %145
  br i1 %146, label %147, label %148, !prof !3

147:                                              ; preds = %140
  call void @llvm.trap() #15
  unreachable

148:                                              ; preds = %140
  %149 = trunc i33 %144 to i32
  store i32 %149, i32* %123, align 4
  br label %150

150:                                              ; preds = %148, %135
  %151 = phi i32 [ %149, %148 ], [ %136, %135 ]
  %152 = load atomic i32, i32* %119 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %157

155:                                              ; preds = %150
  %156 = add i32 %151, -1
  store i32 %156, i32* %123, align 4
  br label %157

157:                                              ; preds = %155, %150
  %158 = phi i32 [ %156, %155 ], [ %151, %150 ]
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %157
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #15
  br label %161

161:                                              ; preds = %157, %160
  %162 = load atomic i32, i32* %119 monotonic, align 4, !noalias !11
  %163 = and i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = load i32, i32* %123, align 4
  br i1 %164, label %166, label %176

166:                                              ; preds = %161
  %167 = zext i32 %165 to i33
  %168 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %167, i33 1) #15
  %169 = extractvalue { i33, i1 } %168, 1
  %170 = extractvalue { i33, i1 } %168, 0
  %171 = icmp slt i33 %170, 0
  %172 = or i1 %169, %171
  br i1 %172, label %173, label %174, !prof !3

173:                                              ; preds = %166
  call void @llvm.trap() #15, !noalias !11
  unreachable

174:                                              ; preds = %166
  %175 = trunc i33 %170 to i32
  store i32 %175, i32* %123, align 4, !noalias !11
  br label %176

176:                                              ; preds = %161, %174
  %177 = phi i32 [ %175, %174 ], [ %165, %161 ]
  %178 = bitcast %"class.WTF::StringAppend.2813"* %7 to i64*
  store i64 ptrtoint ([21 x i8]* @.str.12 to i64), i64* %178, align 8, !alias.scope !11
  %179 = getelementptr inbounds %"class.WTF::StringAppend.2813", %"class.WTF::StringAppend.2813"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %116, %"class.WTF::StringImpl"** %179, align 8, !alias.scope !11
  %180 = load atomic i32, i32* %119 monotonic, align 4, !noalias !11
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %197

183:                                              ; preds = %176
  %184 = zext i32 %177 to i33
  %185 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %184, i33 1) #15
  %186 = extractvalue { i33, i1 } %185, 1
  %187 = extractvalue { i33, i1 } %185, 0
  %188 = icmp slt i33 %187, 0
  %189 = or i1 %186, %188
  br i1 %189, label %190, label %191, !prof !3

190:                                              ; preds = %183
  call void @llvm.trap() #15, !noalias !11
  unreachable

191:                                              ; preds = %183
  %192 = trunc i33 %187 to i32
  store i32 %192, i32* %123, align 4, !noalias !11
  br label %197

193:                                              ; preds = %107
  %194 = bitcast %"class.WTF::StringAppend.2813"* %7 to i64*
  store i64 ptrtoint ([21 x i8]* @.str.12 to i64), i64* %194, align 8, !alias.scope !11
  %195 = getelementptr inbounds %"class.WTF::StringAppend.2813", %"class.WTF::StringAppend.2813"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %195, align 8, !alias.scope !11
  %196 = getelementptr inbounds %"class.WTF::StringAppend.2813", %"class.WTF::StringAppend.2813"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.13, i64 0, i64 0), i8** %196, align 8, !alias.scope !11
  br label %209

197:                                              ; preds = %191, %176
  %198 = phi i32 [ %192, %191 ], [ %177, %176 ]
  %199 = getelementptr inbounds %"class.WTF::StringAppend.2813", %"class.WTF::StringAppend.2813"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.13, i64 0, i64 0), i8** %199, align 8, !alias.scope !11
  %200 = load atomic i32, i32* %119 monotonic, align 4, !noalias !11
  %201 = and i32 %200, 2
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %205

203:                                              ; preds = %197
  %204 = add i32 %198, -1
  store i32 %204, i32* %123, align 4, !noalias !11
  br label %205

205:                                              ; preds = %203, %197
  %206 = phi i32 [ %204, %203 ], [ %198, %197 ]
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %209

208:                                              ; preds = %205
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #15, !noalias !11
  br label %209

209:                                              ; preds = %193, %205, %208
  %210 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.2813"* nonnull %7)
  %211 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %210, %"class.WTF::StringImpl"** %211, align 8
  %212 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %213 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %212, align 8
  %214 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %213, align 8
  call void %214(%"class.blink::ExceptionState"* %2, i32 1, %"class.WTF::String"* nonnull dereferenceable(8) %6) #15
  %215 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %211, align 8
  %216 = icmp eq %"class.WTF::StringImpl"* %215, null
  br i1 %216, label %230, label %217

217:                                              ; preds = %209
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = load atomic i32, i32* %218 monotonic, align 4
  %220 = and i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 0
  %223 = load i32, i32* %222, align 4
  br i1 %221, label %224, label %226

224:                                              ; preds = %217
  %225 = add i32 %223, -1
  store i32 %225, i32* %222, align 4
  br label %226

226:                                              ; preds = %224, %217
  %227 = phi i32 [ %225, %224 ], [ %223, %217 ]
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %230

229:                                              ; preds = %226
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %215) #15
  br label %230

230:                                              ; preds = %209, %226, %229
  %231 = getelementptr inbounds %"class.WTF::StringAppend.2813", %"class.WTF::StringAppend.2813"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  %232 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %231, align 8
  %233 = icmp eq %"class.WTF::StringImpl"* %232, null
  br i1 %233, label %247, label %234

234:                                              ; preds = %230
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %236 = load atomic i32, i32* %235 monotonic, align 4
  %237 = and i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 0
  %240 = load i32, i32* %239, align 4
  br i1 %238, label %241, label %243

241:                                              ; preds = %234
  %242 = add i32 %240, -1
  store i32 %242, i32* %239, align 4
  br label %243

243:                                              ; preds = %241, %234
  %244 = phi i32 [ %242, %241 ], [ %240, %234 ]
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %246, label %247

246:                                              ; preds = %243
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %232) #15
  br label %247

247:                                              ; preds = %230, %243, %246
  br i1 %117, label %273, label %248

248:                                              ; preds = %247
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %250 = load atomic i32, i32* %249 monotonic, align 4
  %251 = and i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %254 = load i32, i32* %253, align 4
  br i1 %252, label %255, label %257

255:                                              ; preds = %248
  %256 = add i32 %254, -1
  store i32 %256, i32* %253, align 4
  br label %257

257:                                              ; preds = %255, %248
  %258 = phi i32 [ %256, %255 ], [ %254, %248 ]
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %262

260:                                              ; preds = %257
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #15
  %261 = load i32, i32* %253, align 4
  br label %262

262:                                              ; preds = %257, %260
  %263 = phi i32 [ %258, %257 ], [ %261, %260 ]
  %264 = load atomic i32, i32* %249 monotonic, align 4
  %265 = and i32 %264, 2
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %267, label %269

267:                                              ; preds = %262
  %268 = add i32 %263, -1
  store i32 %268, i32* %253, align 4
  br label %269

269:                                              ; preds = %267, %262
  %270 = phi i32 [ %268, %267 ], [ %263, %262 ]
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %272, label %273

272:                                              ; preds = %269
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #15
  br label %273

273:                                              ; preds = %247, %269, %272
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %79) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #15
  br label %304

274:                                              ; preds = %74
  %275 = icmp sgt i32 %75, -1
  %276 = icmp sgt i32 %75, %1
  %277 = and i1 %275, %276
  br i1 %277, label %278, label %301

278:                                              ; preds = %274
  %279 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %279) #15
  %280 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages24IndexExceedsMinimumBoundIiEEN3WTF6StringEPKcT_S6_(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i64 0, i64 0), i32 %1, i32 %75)
  %281 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %280, %"class.WTF::StringImpl"** %281, align 8
  %282 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %283 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %282, align 8
  %284 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %283, align 8
  call void %284(%"class.blink::ExceptionState"* %2, i32 1, %"class.WTF::String"* nonnull dereferenceable(8) %8) #15
  %285 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %281, align 8
  %286 = icmp eq %"class.WTF::StringImpl"* %285, null
  br i1 %286, label %300, label %287

287:                                              ; preds = %278
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = load atomic i32, i32* %288 monotonic, align 4
  %290 = and i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 0
  %293 = load i32, i32* %292, align 4
  br i1 %291, label %294, label %296

294:                                              ; preds = %287
  %295 = add i32 %293, -1
  store i32 %295, i32* %292, align 4
  br label %296

296:                                              ; preds = %294, %287
  %297 = phi i32 [ %295, %294 ], [ %293, %287 ]
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %296
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %285) #15
  br label %300

300:                                              ; preds = %278, %296, %299
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %279) #15
  br label %304

301:                                              ; preds = %274
  %302 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %303 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kMaxlengthAttrE, align 8
  call void @_ZN5blink7Element20SetIntegralAttributeERKNS_13QualifiedNameEi(%"class.blink::Element"* %302, %"class.blink::QualifiedName"* dereferenceable(8) %303, i32 %1) #15
  br label %304

304:                                              ; preds = %300, %301, %273
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.2813"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.3387", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.3387", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.3387"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.WTF::StringAppend.2813", %"class.WTF::StringAppend.2813"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #15
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3387"* nonnull %3, i8* %8) #15
  %9 = bitcast %"class.WTF::StringTypeAdapter.3387"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2813", %"class.WTF::StringAppend.2813"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #15
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3387"* nonnull %2, i8* %11) #15
  %12 = getelementptr inbounds %"class.WTF::StringAppend.2813", %"class.WTF::StringAppend.2813"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #15
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #15
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2813"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #15
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.2813"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #15
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !3

41:                                               ; preds = %34
  call void @llvm.trap() #15
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #15
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #15
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2813"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #15
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.2813"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #15
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !3

77:                                               ; preds = %70
  call void @llvm.trap() #15
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #15
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #15
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages24IndexExceedsMinimumBoundIiEEN3WTF6StringEPKcT_S6_(i8*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::IntegerToStringConverter.3392", align 8
  %5 = alloca %"class.WTF::IntegerToStringConverter.3392", align 8
  %6 = alloca %"class.WTF::StringBuilder", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = icmp eq i32 %1, %2
  %17 = bitcast %"class.WTF::StringBuilder"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %17) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 48, i1 false)
  %18 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %18, align 8
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 1
  %20 = bitcast %union.anon.2794* %19 to i8*
  store i8 0, i8* %20, align 8
  %21 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 2
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 3
  store i8 1, i8* %22, align 4
  %23 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 4
  store i8 0, i8* %23, align 1
  %24 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #15
  %25 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %26 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i64 0, i64 0), i8** %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 4, i32* %28, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #15
  %29 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #15
  %30 = icmp eq i8* %0, null
  br i1 %30, label %37, label %31

31:                                               ; preds = %3
  %32 = call i64 @strlen(i8* nonnull %0) #17
  %33 = icmp ult i64 %32, 4294967296
  br i1 %33, label %35, label %34, !prof !14

34:                                               ; preds = %31
  call void @llvm.trap() #15
  unreachable

35:                                               ; preds = %31
  %36 = trunc i64 %32 to i32
  br label %37

37:                                               ; preds = %3, %35
  %38 = phi i32 [ %36, %35 ], [ 0, %3 ]
  %39 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %40 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* %0, i8** %41, align 8
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %38, i32* %42, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #15
  %43 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #15
  %44 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %45 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31, i64 0, i64 0), i8** %46, align 8
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 11, i32* %47, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #15
  %48 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #15
  %49 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %5, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %49) #15
  %50 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %5, i64 0, i32 0, i64 12
  %51 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %5, i64 0, i32 2
  %52 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %5, i64 0, i32 3
  %53 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %5, i64 0, i32 0, i64 13
  %54 = icmp slt i32 %1, 0
  %55 = sub i32 0, %1
  %56 = select i1 %54, i32 %55, i32 %1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 32, i1 false) #15
  store i8* %50, i8** %51, align 8
  %57 = urem i32 %56, 10
  %58 = udiv i32 %56, 10
  %59 = trunc i32 %57 to i8
  %60 = or i8 %59, 48
  store i8 %60, i8* %50, align 4
  %61 = icmp ugt i32 %56, 9
  br i1 %61, label %62, label %98

62:                                               ; preds = %37
  %63 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %5, i64 0, i32 0, i64 11
  store i8* %63, i8** %51, align 8
  %64 = urem i32 %58, 10
  %65 = trunc i32 %64 to i8
  %66 = or i8 %65, 48
  store i8 %66, i8* %63, align 1
  %67 = icmp ugt i32 %56, 99
  br i1 %67, label %68, label %98

68:                                               ; preds = %62
  %69 = udiv i32 %56, 100
  %70 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %5, i64 0, i32 0, i64 10
  store i8* %70, i8** %51, align 8
  %71 = urem i32 %69, 10
  %72 = trunc i32 %71 to i8
  %73 = or i8 %72, 48
  store i8 %73, i8* %70, align 2
  %74 = icmp ugt i32 %56, 999
  br i1 %74, label %75, label %98

75:                                               ; preds = %68
  %76 = udiv i32 %56, 1000
  %77 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %5, i64 0, i32 0, i64 9
  store i8* %77, i8** %51, align 8
  %78 = urem i32 %76, 10
  %79 = trunc i32 %78 to i8
  %80 = or i8 %79, 48
  store i8 %80, i8* %77, align 1
  %81 = icmp ugt i32 %56, 9999
  br i1 %81, label %82, label %98

82:                                               ; preds = %75
  %83 = udiv i32 %56, 10000
  %84 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %5, i64 0, i32 0, i64 8
  store i8* %84, i8** %51, align 8
  %85 = urem i32 %83, 10
  %86 = trunc i32 %85 to i8
  %87 = or i8 %86, 48
  store i8 %87, i8* %84, align 8
  %88 = icmp ugt i32 %56, 99999
  br i1 %88, label %89, label %98

89:                                               ; preds = %82, %89
  %90 = phi i32 [ %92, %89 ], [ %83, %82 ]
  %91 = load i8*, i8** %51, align 8
  %92 = udiv i32 %90, 10
  %93 = getelementptr inbounds i8, i8* %91, i64 -1
  store i8* %93, i8** %51, align 8
  %94 = urem i32 %92, 10
  %95 = trunc i32 %94 to i8
  %96 = or i8 %95, 48
  store i8 %96, i8* %93, align 1
  %97 = icmp ugt i32 %90, 99
  br i1 %97, label %89, label %98

98:                                               ; preds = %89, %82, %75, %68, %62, %37
  br i1 %54, label %99, label %102

99:                                               ; preds = %98
  %100 = load i8*, i8** %51, align 8
  %101 = getelementptr inbounds i8, i8* %100, i64 -1
  store i8* %101, i8** %51, align 8
  store i8 45, i8* %101, align 1
  br label %102

102:                                              ; preds = %98, %99
  %103 = bitcast i8** %51 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = ptrtoint i8* %53 to i64
  %106 = sub i64 %105, %104
  %107 = trunc i64 %106 to i32
  store i32 %107, i32* %52, align 8
  %108 = inttoptr i64 %104 to i8*
  %109 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %108, i32 %107) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %49) #15
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %111, label %116

111:                                              ; preds = %102
  %112 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* null, i8** %112, align 8
  %113 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %114 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 0, i32* %115, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %10)
  br label %136

116:                                              ; preds = %102
  %117 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %109, %"class.WTF::StringImpl"** %117, align 8
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 1
  %119 = load i32, i32* %118, align 4
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 1
  %121 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %122 = bitcast i8** %121 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %120, %"class.WTF::StringImpl"** %122, align 8
  %123 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %119, i32* %123, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %10)
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  br i1 %127, label %130, label %132

130:                                              ; preds = %116
  %131 = add i32 %129, -1
  store i32 %131, i32* %128, align 4
  br label %132

132:                                              ; preds = %130, %116
  %133 = phi i32 [ %131, %130 ], [ %129, %116 ]
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %132
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %109) #15
  br label %136

136:                                              ; preds = %111, %132, %135
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #15
  %137 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %137) #15
  %138 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %139 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.32, i64 0, i64 0), i8** %140, align 8
  %141 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 15, i32* %141, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %11)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %137) #15
  %142 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %142) #15
  %143 = select i1 %16, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.34, i64 0, i64 0)
  %144 = select i1 %16, i32 12, i32 0
  %145 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %146 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %145, i64* %146, align 8
  %147 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* %143, i8** %147, align 8
  %148 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %144, i32* %148, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %12)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %142) #15
  %149 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %149) #15
  %150 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %151 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.35, i64 0, i64 0), i8** %152, align 8
  %153 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 19, i32* %153, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %13)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %149) #15
  %154 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %154) #15
  %155 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %4, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %155) #15
  %156 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %4, i64 0, i32 0, i64 12
  %157 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %4, i64 0, i32 2
  %158 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %4, i64 0, i32 3
  %159 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %4, i64 0, i32 0, i64 13
  %160 = icmp slt i32 %2, 0
  %161 = sub i32 0, %2
  %162 = select i1 %160, i32 %161, i32 %2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %155, i8 -86, i64 32, i1 false) #15
  store i8* %156, i8** %157, align 8
  %163 = urem i32 %162, 10
  %164 = udiv i32 %162, 10
  %165 = trunc i32 %163 to i8
  %166 = or i8 %165, 48
  store i8 %166, i8* %156, align 4
  %167 = icmp ugt i32 %162, 9
  br i1 %167, label %168, label %204

168:                                              ; preds = %136
  %169 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %4, i64 0, i32 0, i64 11
  store i8* %169, i8** %157, align 8
  %170 = urem i32 %164, 10
  %171 = trunc i32 %170 to i8
  %172 = or i8 %171, 48
  store i8 %172, i8* %169, align 1
  %173 = icmp ugt i32 %162, 99
  br i1 %173, label %174, label %204

174:                                              ; preds = %168
  %175 = udiv i32 %162, 100
  %176 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %4, i64 0, i32 0, i64 10
  store i8* %176, i8** %157, align 8
  %177 = urem i32 %175, 10
  %178 = trunc i32 %177 to i8
  %179 = or i8 %178, 48
  store i8 %179, i8* %176, align 2
  %180 = icmp ugt i32 %162, 999
  br i1 %180, label %181, label %204

181:                                              ; preds = %174
  %182 = udiv i32 %162, 1000
  %183 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %4, i64 0, i32 0, i64 9
  store i8* %183, i8** %157, align 8
  %184 = urem i32 %182, 10
  %185 = trunc i32 %184 to i8
  %186 = or i8 %185, 48
  store i8 %186, i8* %183, align 1
  %187 = icmp ugt i32 %162, 9999
  br i1 %187, label %188, label %204

188:                                              ; preds = %181
  %189 = udiv i32 %162, 10000
  %190 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %4, i64 0, i32 0, i64 8
  store i8* %190, i8** %157, align 8
  %191 = urem i32 %189, 10
  %192 = trunc i32 %191 to i8
  %193 = or i8 %192, 48
  store i8 %193, i8* %190, align 8
  %194 = icmp ugt i32 %162, 99999
  br i1 %194, label %195, label %204

195:                                              ; preds = %188, %195
  %196 = phi i32 [ %198, %195 ], [ %189, %188 ]
  %197 = load i8*, i8** %157, align 8
  %198 = udiv i32 %196, 10
  %199 = getelementptr inbounds i8, i8* %197, i64 -1
  store i8* %199, i8** %157, align 8
  %200 = urem i32 %198, 10
  %201 = trunc i32 %200 to i8
  %202 = or i8 %201, 48
  store i8 %202, i8* %199, align 1
  %203 = icmp ugt i32 %196, 99
  br i1 %203, label %195, label %204

204:                                              ; preds = %195, %188, %181, %174, %168, %136
  br i1 %160, label %205, label %208

205:                                              ; preds = %204
  %206 = load i8*, i8** %157, align 8
  %207 = getelementptr inbounds i8, i8* %206, i64 -1
  store i8* %207, i8** %157, align 8
  store i8 45, i8* %207, align 1
  br label %208

208:                                              ; preds = %204, %205
  %209 = bitcast i8** %157 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = ptrtoint i8* %159 to i64
  %212 = sub i64 %211, %210
  %213 = trunc i64 %212 to i32
  store i32 %213, i32* %158, align 8
  %214 = inttoptr i64 %210 to i8*
  %215 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %214, i32 %213) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %155) #15
  %216 = icmp eq %"class.WTF::StringImpl"* %215, null
  br i1 %216, label %217, label %222

217:                                              ; preds = %208
  %218 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* null, i8** %218, align 8
  %219 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %220 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %219, i64* %220, align 8
  %221 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 0, i32* %221, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %14)
  br label %242

222:                                              ; preds = %208
  %223 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 0
  store %"class.WTF::StringImpl"* %215, %"class.WTF::StringImpl"** %223, align 8
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 1
  %225 = load i32, i32* %224, align 4
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 1
  %227 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %228 = bitcast i8** %227 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %226, %"class.WTF::StringImpl"** %228, align 8
  %229 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 %225, i32* %229, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %14)
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  br i1 %233, label %236, label %238

236:                                              ; preds = %222
  %237 = add i32 %235, -1
  store i32 %237, i32* %234, align 4
  br label %238

238:                                              ; preds = %236, %222
  %239 = phi i32 [ %237, %236 ], [ %235, %222 ]
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %242

241:                                              ; preds = %238
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %215) #15
  br label %242

242:                                              ; preds = %217, %238, %241
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %154) #15
  %243 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %243) #15
  %244 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %245 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %244, i64* %245, align 8
  %246 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i8** %246, align 8
  %247 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 2, i32* %247, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %15)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %243) #15
  %248 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %6) #15
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %6) #15
  %249 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %250 = icmp eq %"class.WTF::StringImpl"* %249, null
  br i1 %250, label %264, label %251

251:                                              ; preds = %242
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %253 = load atomic i32, i32* %252 monotonic, align 4
  %254 = and i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 0
  %257 = load i32, i32* %256, align 4
  br i1 %255, label %258, label %260

258:                                              ; preds = %251
  %259 = add i32 %257, -1
  store i32 %259, i32* %256, align 4
  br label %260

260:                                              ; preds = %258, %251
  %261 = phi i32 [ %259, %258 ], [ %257, %251 ]
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %264

263:                                              ; preds = %260
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %249) #15
  br label %264

264:                                              ; preds = %242, %260, %263
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %17) #15
  ret %"class.WTF::StringImpl"* %248
}

declare void @_ZN5blink7Element20SetIntegralAttributeERKNS_13QualifiedNameEi(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18TextControlElement12setMinLengthEiRNS_14ExceptionStateE(%"class.blink::TextControlElement"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::IntegerToStringConverter.3392", align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::StringAppend.2813", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #15
  store i32 -1431655766, i32* %5, align 4
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kMaxlengthAttrE, align 8
  %11 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %11, align 8
  %13 = icmp eq %"class.blink::ElementData"* %12, null
  br i1 %13, label %64, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %12, i64 0, i32 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %14
  %20 = bitcast %"class.blink::ElementData"* %12 to %"class.blink::UniqueElementData"*
  %21 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %12, i64 1, i32 1
  %22 = bitcast %"class.blink::Member.354"* %21 to %"class.blink::Attribute"**
  %23 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %20, i64 0, i32 2, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  br label %31

26:                                               ; preds = %14
  %27 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %12, i64 1
  %28 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::Attribute"*
  %29 = lshr i32 %16, 1
  %30 = and i32 %29, 268435455
  br label %31

31:                                               ; preds = %26, %19
  %32 = phi %"class.blink::Attribute"* [ %28, %26 ], [ %23, %19 ]
  %33 = phi i32 [ %30, %26 ], [ %25, %19 ]
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %32, i64 %34
  %36 = icmp eq i32 %33, 0
  br i1 %36, label %64, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %10, i64 0, i32 0, i32 0
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %42

42:                                               ; preds = %57, %37
  %43 = phi %"class.blink::Attribute"* [ %32, %37 ], [ %58, %57 ]
  %44 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %44, align 8
  %46 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %45, %39
  br i1 %46, label %60, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %45, i64 0, i32 3, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %49, %50
  br i1 %51, label %52, label %57

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %45, i64 0, i32 4, i32 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %54, %55
  br i1 %56, label %60, label %57

57:                                               ; preds = %52, %47
  %58 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %43, i64 1
  %59 = icmp eq %"class.blink::Attribute"* %58, %35
  br i1 %59, label %64, label %42

60:                                               ; preds = %52, %42
  %61 = icmp eq %"class.blink::Attribute"* %43, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %43, i64 0, i32 1
  br label %66

64:                                               ; preds = %57, %60, %31, %3
  %65 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %66

66:                                               ; preds = %64, %62
  %67 = phi %"class.WTF::AtomicString"* [ %65, %64 ], [ %63, %62 ]
  %68 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %67, i64 0, i32 0
  %69 = call zeroext i1 @_ZN5blink16ParseHTMLIntegerERKN3WTF6StringERi(%"class.WTF::String"* dereferenceable(8) %68, i32* nonnull dereferenceable(4) %5) #15
  br i1 %69, label %70, label %74

70:                                               ; preds = %66
  %71 = load i32, i32* %5, align 4
  %72 = icmp sgt i32 %71, -1
  %73 = select i1 %72, i32 %71, i32 -1
  br label %74

74:                                               ; preds = %66, %70
  %75 = phi i32 [ %73, %70 ], [ -1, %66 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #15
  %76 = icmp slt i32 %1, 0
  br i1 %76, label %77, label %274

77:                                               ; preds = %74
  %78 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #15
  %79 = bitcast %"class.WTF::StringAppend.2813"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %79) #15
  %80 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %4, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %80) #15
  %81 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %4, i64 0, i32 0, i64 12
  %82 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %4, i64 0, i32 2
  %83 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %4, i64 0, i32 3
  %84 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %4, i64 0, i32 0, i64 13
  %85 = sub i32 0, %1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 -86, i64 32, i1 false) #15
  store i8* %81, i8** %82, align 8
  %86 = urem i32 %85, 10
  %87 = udiv i32 %85, 10
  %88 = trunc i32 %86 to i8
  %89 = or i8 %88, 48
  store i8 %89, i8* %81, align 4
  %90 = icmp ugt i32 %85, 9
  br i1 %90, label %91, label %107

91:                                               ; preds = %77
  %92 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %4, i64 0, i32 0, i64 11
  store i8* %92, i8** %82, align 8
  %93 = urem i32 %87, 10
  %94 = trunc i32 %93 to i8
  %95 = or i8 %94, 48
  store i8 %95, i8* %92, align 1
  %96 = icmp ugt i32 %85, 99
  br i1 %96, label %97, label %107

97:                                               ; preds = %91, %97
  %98 = phi i8* [ %106, %97 ], [ %92, %91 ]
  %99 = phi i32 [ %100, %97 ], [ %87, %91 ]
  %100 = udiv i32 %99, 10
  %101 = getelementptr inbounds i8, i8* %98, i64 -1
  store i8* %101, i8** %82, align 8
  %102 = urem i32 %100, 10
  %103 = trunc i32 %102 to i8
  %104 = or i8 %103, 48
  store i8 %104, i8* %101, align 1
  %105 = icmp ugt i32 %99, 99
  %106 = load i8*, i8** %82, align 8
  br i1 %105, label %97, label %107

107:                                              ; preds = %97, %91, %77
  %108 = phi i8* [ %92, %91 ], [ %81, %77 ], [ %106, %97 ]
  %109 = getelementptr inbounds i8, i8* %108, i64 -1
  store i8* %109, i8** %82, align 8
  store i8 45, i8* %109, align 1
  %110 = bitcast i8** %82 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = ptrtoint i8* %84 to i64
  %113 = sub i64 %112, %111
  %114 = trunc i64 %113 to i32
  store i32 %114, i32* %83, align 8
  %115 = inttoptr i64 %111 to i8*
  %116 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %115, i32 %114) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %80) #15
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %193, label %118

118:                                              ; preds = %107
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %135

125:                                              ; preds = %118
  %126 = zext i32 %124 to i33
  %127 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %126, i33 1) #15
  %128 = extractvalue { i33, i1 } %127, 1
  %129 = extractvalue { i33, i1 } %127, 0
  %130 = icmp slt i33 %129, 0
  %131 = or i1 %128, %130
  br i1 %131, label %132, label %133, !prof !3

132:                                              ; preds = %125
  call void @llvm.trap() #15
  unreachable

133:                                              ; preds = %125
  %134 = trunc i33 %129 to i32
  store i32 %134, i32* %123, align 4
  br label %135

135:                                              ; preds = %133, %118
  %136 = phi i32 [ %134, %133 ], [ %124, %118 ]
  %137 = load atomic i32, i32* %119 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %150

140:                                              ; preds = %135
  %141 = zext i32 %136 to i33
  %142 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %141, i33 1) #15
  %143 = extractvalue { i33, i1 } %142, 1
  %144 = extractvalue { i33, i1 } %142, 0
  %145 = icmp slt i33 %144, 0
  %146 = or i1 %143, %145
  br i1 %146, label %147, label %148, !prof !3

147:                                              ; preds = %140
  call void @llvm.trap() #15
  unreachable

148:                                              ; preds = %140
  %149 = trunc i33 %144 to i32
  store i32 %149, i32* %123, align 4
  br label %150

150:                                              ; preds = %148, %135
  %151 = phi i32 [ %149, %148 ], [ %136, %135 ]
  %152 = load atomic i32, i32* %119 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %157

155:                                              ; preds = %150
  %156 = add i32 %151, -1
  store i32 %156, i32* %123, align 4
  br label %157

157:                                              ; preds = %155, %150
  %158 = phi i32 [ %156, %155 ], [ %151, %150 ]
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %157
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #15
  br label %161

161:                                              ; preds = %157, %160
  %162 = load atomic i32, i32* %119 monotonic, align 4, !noalias !15
  %163 = and i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = load i32, i32* %123, align 4
  br i1 %164, label %166, label %176

166:                                              ; preds = %161
  %167 = zext i32 %165 to i33
  %168 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %167, i33 1) #15
  %169 = extractvalue { i33, i1 } %168, 1
  %170 = extractvalue { i33, i1 } %168, 0
  %171 = icmp slt i33 %170, 0
  %172 = or i1 %169, %171
  br i1 %172, label %173, label %174, !prof !3

173:                                              ; preds = %166
  call void @llvm.trap() #15, !noalias !15
  unreachable

174:                                              ; preds = %166
  %175 = trunc i33 %170 to i32
  store i32 %175, i32* %123, align 4, !noalias !15
  br label %176

176:                                              ; preds = %161, %174
  %177 = phi i32 [ %175, %174 ], [ %165, %161 ]
  %178 = bitcast %"class.WTF::StringAppend.2813"* %7 to i64*
  store i64 ptrtoint ([21 x i8]* @.str.12 to i64), i64* %178, align 8, !alias.scope !15
  %179 = getelementptr inbounds %"class.WTF::StringAppend.2813", %"class.WTF::StringAppend.2813"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %116, %"class.WTF::StringImpl"** %179, align 8, !alias.scope !15
  %180 = load atomic i32, i32* %119 monotonic, align 4, !noalias !15
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %197

183:                                              ; preds = %176
  %184 = zext i32 %177 to i33
  %185 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %184, i33 1) #15
  %186 = extractvalue { i33, i1 } %185, 1
  %187 = extractvalue { i33, i1 } %185, 0
  %188 = icmp slt i33 %187, 0
  %189 = or i1 %186, %188
  br i1 %189, label %190, label %191, !prof !3

190:                                              ; preds = %183
  call void @llvm.trap() #15, !noalias !15
  unreachable

191:                                              ; preds = %183
  %192 = trunc i33 %187 to i32
  store i32 %192, i32* %123, align 4, !noalias !15
  br label %197

193:                                              ; preds = %107
  %194 = bitcast %"class.WTF::StringAppend.2813"* %7 to i64*
  store i64 ptrtoint ([21 x i8]* @.str.12 to i64), i64* %194, align 8, !alias.scope !15
  %195 = getelementptr inbounds %"class.WTF::StringAppend.2813", %"class.WTF::StringAppend.2813"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %195, align 8, !alias.scope !15
  %196 = getelementptr inbounds %"class.WTF::StringAppend.2813", %"class.WTF::StringAppend.2813"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.13, i64 0, i64 0), i8** %196, align 8, !alias.scope !15
  br label %209

197:                                              ; preds = %191, %176
  %198 = phi i32 [ %192, %191 ], [ %177, %176 ]
  %199 = getelementptr inbounds %"class.WTF::StringAppend.2813", %"class.WTF::StringAppend.2813"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.13, i64 0, i64 0), i8** %199, align 8, !alias.scope !15
  %200 = load atomic i32, i32* %119 monotonic, align 4, !noalias !15
  %201 = and i32 %200, 2
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %205

203:                                              ; preds = %197
  %204 = add i32 %198, -1
  store i32 %204, i32* %123, align 4, !noalias !15
  br label %205

205:                                              ; preds = %203, %197
  %206 = phi i32 [ %204, %203 ], [ %198, %197 ]
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %209

208:                                              ; preds = %205
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #15, !noalias !15
  br label %209

209:                                              ; preds = %193, %205, %208
  %210 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.2813"* nonnull %7)
  %211 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %210, %"class.WTF::StringImpl"** %211, align 8
  %212 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %213 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %212, align 8
  %214 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %213, align 8
  call void %214(%"class.blink::ExceptionState"* %2, i32 1, %"class.WTF::String"* nonnull dereferenceable(8) %6) #15
  %215 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %211, align 8
  %216 = icmp eq %"class.WTF::StringImpl"* %215, null
  br i1 %216, label %230, label %217

217:                                              ; preds = %209
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = load atomic i32, i32* %218 monotonic, align 4
  %220 = and i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 0
  %223 = load i32, i32* %222, align 4
  br i1 %221, label %224, label %226

224:                                              ; preds = %217
  %225 = add i32 %223, -1
  store i32 %225, i32* %222, align 4
  br label %226

226:                                              ; preds = %224, %217
  %227 = phi i32 [ %225, %224 ], [ %223, %217 ]
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %230

229:                                              ; preds = %226
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %215) #15
  br label %230

230:                                              ; preds = %209, %226, %229
  %231 = getelementptr inbounds %"class.WTF::StringAppend.2813", %"class.WTF::StringAppend.2813"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  %232 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %231, align 8
  %233 = icmp eq %"class.WTF::StringImpl"* %232, null
  br i1 %233, label %247, label %234

234:                                              ; preds = %230
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %236 = load atomic i32, i32* %235 monotonic, align 4
  %237 = and i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 0
  %240 = load i32, i32* %239, align 4
  br i1 %238, label %241, label %243

241:                                              ; preds = %234
  %242 = add i32 %240, -1
  store i32 %242, i32* %239, align 4
  br label %243

243:                                              ; preds = %241, %234
  %244 = phi i32 [ %242, %241 ], [ %240, %234 ]
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %246, label %247

246:                                              ; preds = %243
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %232) #15
  br label %247

247:                                              ; preds = %230, %243, %246
  br i1 %117, label %273, label %248

248:                                              ; preds = %247
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %250 = load atomic i32, i32* %249 monotonic, align 4
  %251 = and i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %254 = load i32, i32* %253, align 4
  br i1 %252, label %255, label %257

255:                                              ; preds = %248
  %256 = add i32 %254, -1
  store i32 %256, i32* %253, align 4
  br label %257

257:                                              ; preds = %255, %248
  %258 = phi i32 [ %256, %255 ], [ %254, %248 ]
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %262

260:                                              ; preds = %257
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #15
  %261 = load i32, i32* %253, align 4
  br label %262

262:                                              ; preds = %257, %260
  %263 = phi i32 [ %258, %257 ], [ %261, %260 ]
  %264 = load atomic i32, i32* %249 monotonic, align 4
  %265 = and i32 %264, 2
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %267, label %269

267:                                              ; preds = %262
  %268 = add i32 %263, -1
  store i32 %268, i32* %253, align 4
  br label %269

269:                                              ; preds = %267, %262
  %270 = phi i32 [ %268, %267 ], [ %263, %262 ]
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %272, label %273

272:                                              ; preds = %269
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #15
  br label %273

273:                                              ; preds = %247, %269, %272
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %79) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #15
  br label %304

274:                                              ; preds = %74
  %275 = icmp sgt i32 %75, -1
  %276 = icmp slt i32 %75, %1
  %277 = and i1 %275, %276
  br i1 %277, label %278, label %301

278:                                              ; preds = %274
  %279 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %279) #15
  %280 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages24IndexExceedsMaximumBoundIiEEN3WTF6StringEPKcT_S6_(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i64 0, i64 0), i32 %1, i32 %75)
  %281 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %280, %"class.WTF::StringImpl"** %281, align 8
  %282 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %283 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %282, align 8
  %284 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %283, align 8
  call void %284(%"class.blink::ExceptionState"* %2, i32 1, %"class.WTF::String"* nonnull dereferenceable(8) %8) #15
  %285 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %281, align 8
  %286 = icmp eq %"class.WTF::StringImpl"* %285, null
  br i1 %286, label %300, label %287

287:                                              ; preds = %278
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = load atomic i32, i32* %288 monotonic, align 4
  %290 = and i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 0
  %293 = load i32, i32* %292, align 4
  br i1 %291, label %294, label %296

294:                                              ; preds = %287
  %295 = add i32 %293, -1
  store i32 %295, i32* %292, align 4
  br label %296

296:                                              ; preds = %294, %287
  %297 = phi i32 [ %295, %294 ], [ %293, %287 ]
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %296
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %285) #15
  br label %300

300:                                              ; preds = %278, %296, %299
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %279) #15
  br label %304

301:                                              ; preds = %274
  %302 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %303 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kMinlengthAttrE, align 8
  call void @_ZN5blink7Element20SetIntegralAttributeERKNS_13QualifiedNameEi(%"class.blink::Element"* %302, %"class.blink::QualifiedName"* dereferenceable(8) %303, i32 %1) #15
  br label %304

304:                                              ; preds = %300, %301, %273
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages24IndexExceedsMaximumBoundIiEEN3WTF6StringEPKcT_S6_(i8*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::IntegerToStringConverter.3392", align 8
  %5 = alloca %"class.WTF::IntegerToStringConverter.3392", align 8
  %6 = alloca %"class.WTF::StringBuilder", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = icmp eq i32 %1, %2
  %17 = bitcast %"class.WTF::StringBuilder"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %17) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 48, i1 false)
  %18 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %18, align 8
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 1
  %20 = bitcast %union.anon.2794* %19 to i8*
  store i8 0, i8* %20, align 8
  %21 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 2
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 3
  store i8 1, i8* %22, align 4
  %23 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 4
  store i8 0, i8* %23, align 1
  %24 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #15
  %25 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %26 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i64 0, i64 0), i8** %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 4, i32* %28, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #15
  %29 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #15
  %30 = icmp eq i8* %0, null
  br i1 %30, label %37, label %31

31:                                               ; preds = %3
  %32 = call i64 @strlen(i8* nonnull %0) #17
  %33 = icmp ult i64 %32, 4294967296
  br i1 %33, label %35, label %34, !prof !14

34:                                               ; preds = %31
  call void @llvm.trap() #15
  unreachable

35:                                               ; preds = %31
  %36 = trunc i64 %32 to i32
  br label %37

37:                                               ; preds = %3, %35
  %38 = phi i32 [ %36, %35 ], [ 0, %3 ]
  %39 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %40 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* %0, i8** %41, align 8
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %38, i32* %42, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #15
  %43 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #15
  %44 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %45 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31, i64 0, i64 0), i8** %46, align 8
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 11, i32* %47, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #15
  %48 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #15
  %49 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %5, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %49) #15
  %50 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %5, i64 0, i32 0, i64 12
  %51 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %5, i64 0, i32 2
  %52 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %5, i64 0, i32 3
  %53 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %5, i64 0, i32 0, i64 13
  %54 = icmp slt i32 %1, 0
  %55 = sub i32 0, %1
  %56 = select i1 %54, i32 %55, i32 %1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 32, i1 false) #15
  store i8* %50, i8** %51, align 8
  %57 = urem i32 %56, 10
  %58 = udiv i32 %56, 10
  %59 = trunc i32 %57 to i8
  %60 = or i8 %59, 48
  store i8 %60, i8* %50, align 4
  %61 = icmp ugt i32 %56, 9
  br i1 %61, label %62, label %98

62:                                               ; preds = %37
  %63 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %5, i64 0, i32 0, i64 11
  store i8* %63, i8** %51, align 8
  %64 = urem i32 %58, 10
  %65 = trunc i32 %64 to i8
  %66 = or i8 %65, 48
  store i8 %66, i8* %63, align 1
  %67 = icmp ugt i32 %56, 99
  br i1 %67, label %68, label %98

68:                                               ; preds = %62
  %69 = udiv i32 %56, 100
  %70 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %5, i64 0, i32 0, i64 10
  store i8* %70, i8** %51, align 8
  %71 = urem i32 %69, 10
  %72 = trunc i32 %71 to i8
  %73 = or i8 %72, 48
  store i8 %73, i8* %70, align 2
  %74 = icmp ugt i32 %56, 999
  br i1 %74, label %75, label %98

75:                                               ; preds = %68
  %76 = udiv i32 %56, 1000
  %77 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %5, i64 0, i32 0, i64 9
  store i8* %77, i8** %51, align 8
  %78 = urem i32 %76, 10
  %79 = trunc i32 %78 to i8
  %80 = or i8 %79, 48
  store i8 %80, i8* %77, align 1
  %81 = icmp ugt i32 %56, 9999
  br i1 %81, label %82, label %98

82:                                               ; preds = %75
  %83 = udiv i32 %56, 10000
  %84 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %5, i64 0, i32 0, i64 8
  store i8* %84, i8** %51, align 8
  %85 = urem i32 %83, 10
  %86 = trunc i32 %85 to i8
  %87 = or i8 %86, 48
  store i8 %87, i8* %84, align 8
  %88 = icmp ugt i32 %56, 99999
  br i1 %88, label %89, label %98

89:                                               ; preds = %82, %89
  %90 = phi i32 [ %92, %89 ], [ %83, %82 ]
  %91 = load i8*, i8** %51, align 8
  %92 = udiv i32 %90, 10
  %93 = getelementptr inbounds i8, i8* %91, i64 -1
  store i8* %93, i8** %51, align 8
  %94 = urem i32 %92, 10
  %95 = trunc i32 %94 to i8
  %96 = or i8 %95, 48
  store i8 %96, i8* %93, align 1
  %97 = icmp ugt i32 %90, 99
  br i1 %97, label %89, label %98

98:                                               ; preds = %89, %82, %75, %68, %62, %37
  br i1 %54, label %99, label %102

99:                                               ; preds = %98
  %100 = load i8*, i8** %51, align 8
  %101 = getelementptr inbounds i8, i8* %100, i64 -1
  store i8* %101, i8** %51, align 8
  store i8 45, i8* %101, align 1
  br label %102

102:                                              ; preds = %98, %99
  %103 = bitcast i8** %51 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = ptrtoint i8* %53 to i64
  %106 = sub i64 %105, %104
  %107 = trunc i64 %106 to i32
  store i32 %107, i32* %52, align 8
  %108 = inttoptr i64 %104 to i8*
  %109 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %108, i32 %107) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %49) #15
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %111, label %116

111:                                              ; preds = %102
  %112 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* null, i8** %112, align 8
  %113 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %114 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 0, i32* %115, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %10)
  br label %136

116:                                              ; preds = %102
  %117 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %109, %"class.WTF::StringImpl"** %117, align 8
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 1
  %119 = load i32, i32* %118, align 4
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 1
  %121 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %122 = bitcast i8** %121 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %120, %"class.WTF::StringImpl"** %122, align 8
  %123 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %119, i32* %123, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %10)
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  br i1 %127, label %130, label %132

130:                                              ; preds = %116
  %131 = add i32 %129, -1
  store i32 %131, i32* %128, align 4
  br label %132

132:                                              ; preds = %130, %116
  %133 = phi i32 [ %131, %130 ], [ %129, %116 ]
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %132
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %109) #15
  br label %136

136:                                              ; preds = %111, %132, %135
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #15
  %137 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %137) #15
  %138 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %139 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.37, i64 0, i64 0), i8** %140, align 8
  %141 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 18, i32* %141, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %11)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %137) #15
  %142 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %142) #15
  %143 = select i1 %16, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.34, i64 0, i64 0)
  %144 = select i1 %16, i32 12, i32 0
  %145 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %146 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %145, i64* %146, align 8
  %147 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* %143, i8** %147, align 8
  %148 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %144, i32* %148, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %12)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %142) #15
  %149 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %149) #15
  %150 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %151 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.38, i64 0, i64 0), i8** %152, align 8
  %153 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 19, i32* %153, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %13)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %149) #15
  %154 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %154) #15
  %155 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %4, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %155) #15
  %156 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %4, i64 0, i32 0, i64 12
  %157 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %4, i64 0, i32 2
  %158 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %4, i64 0, i32 3
  %159 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %4, i64 0, i32 0, i64 13
  %160 = icmp slt i32 %2, 0
  %161 = sub i32 0, %2
  %162 = select i1 %160, i32 %161, i32 %2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %155, i8 -86, i64 32, i1 false) #15
  store i8* %156, i8** %157, align 8
  %163 = urem i32 %162, 10
  %164 = udiv i32 %162, 10
  %165 = trunc i32 %163 to i8
  %166 = or i8 %165, 48
  store i8 %166, i8* %156, align 4
  %167 = icmp ugt i32 %162, 9
  br i1 %167, label %168, label %204

168:                                              ; preds = %136
  %169 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %4, i64 0, i32 0, i64 11
  store i8* %169, i8** %157, align 8
  %170 = urem i32 %164, 10
  %171 = trunc i32 %170 to i8
  %172 = or i8 %171, 48
  store i8 %172, i8* %169, align 1
  %173 = icmp ugt i32 %162, 99
  br i1 %173, label %174, label %204

174:                                              ; preds = %168
  %175 = udiv i32 %162, 100
  %176 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %4, i64 0, i32 0, i64 10
  store i8* %176, i8** %157, align 8
  %177 = urem i32 %175, 10
  %178 = trunc i32 %177 to i8
  %179 = or i8 %178, 48
  store i8 %179, i8* %176, align 2
  %180 = icmp ugt i32 %162, 999
  br i1 %180, label %181, label %204

181:                                              ; preds = %174
  %182 = udiv i32 %162, 1000
  %183 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %4, i64 0, i32 0, i64 9
  store i8* %183, i8** %157, align 8
  %184 = urem i32 %182, 10
  %185 = trunc i32 %184 to i8
  %186 = or i8 %185, 48
  store i8 %186, i8* %183, align 1
  %187 = icmp ugt i32 %162, 9999
  br i1 %187, label %188, label %204

188:                                              ; preds = %181
  %189 = udiv i32 %162, 10000
  %190 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.3392", %"class.WTF::IntegerToStringConverter.3392"* %4, i64 0, i32 0, i64 8
  store i8* %190, i8** %157, align 8
  %191 = urem i32 %189, 10
  %192 = trunc i32 %191 to i8
  %193 = or i8 %192, 48
  store i8 %193, i8* %190, align 8
  %194 = icmp ugt i32 %162, 99999
  br i1 %194, label %195, label %204

195:                                              ; preds = %188, %195
  %196 = phi i32 [ %198, %195 ], [ %189, %188 ]
  %197 = load i8*, i8** %157, align 8
  %198 = udiv i32 %196, 10
  %199 = getelementptr inbounds i8, i8* %197, i64 -1
  store i8* %199, i8** %157, align 8
  %200 = urem i32 %198, 10
  %201 = trunc i32 %200 to i8
  %202 = or i8 %201, 48
  store i8 %202, i8* %199, align 1
  %203 = icmp ugt i32 %196, 99
  br i1 %203, label %195, label %204

204:                                              ; preds = %195, %188, %181, %174, %168, %136
  br i1 %160, label %205, label %208

205:                                              ; preds = %204
  %206 = load i8*, i8** %157, align 8
  %207 = getelementptr inbounds i8, i8* %206, i64 -1
  store i8* %207, i8** %157, align 8
  store i8 45, i8* %207, align 1
  br label %208

208:                                              ; preds = %204, %205
  %209 = bitcast i8** %157 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = ptrtoint i8* %159 to i64
  %212 = sub i64 %211, %210
  %213 = trunc i64 %212 to i32
  store i32 %213, i32* %158, align 8
  %214 = inttoptr i64 %210 to i8*
  %215 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %214, i32 %213) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %155) #15
  %216 = icmp eq %"class.WTF::StringImpl"* %215, null
  br i1 %216, label %217, label %222

217:                                              ; preds = %208
  %218 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* null, i8** %218, align 8
  %219 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %220 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %219, i64* %220, align 8
  %221 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 0, i32* %221, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %14)
  br label %242

222:                                              ; preds = %208
  %223 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 0
  store %"class.WTF::StringImpl"* %215, %"class.WTF::StringImpl"** %223, align 8
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 1
  %225 = load i32, i32* %224, align 4
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 1
  %227 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %228 = bitcast i8** %227 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %226, %"class.WTF::StringImpl"** %228, align 8
  %229 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 %225, i32* %229, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %14)
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  br i1 %233, label %236, label %238

236:                                              ; preds = %222
  %237 = add i32 %235, -1
  store i32 %237, i32* %234, align 4
  br label %238

238:                                              ; preds = %236, %222
  %239 = phi i32 [ %237, %236 ], [ %235, %222 ]
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %242

241:                                              ; preds = %238
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %215) #15
  br label %242

242:                                              ; preds = %217, %238, %241
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %154) #15
  %243 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %243) #15
  %244 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %245 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %244, i64* %245, align 8
  %246 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i8** %246, align 8
  %247 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 2, i32* %247, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %15)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %243) #15
  %248 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %6) #15
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %6) #15
  %249 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %250 = icmp eq %"class.WTF::StringImpl"* %249, null
  br i1 %250, label %264, label %251

251:                                              ; preds = %242
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %253 = load atomic i32, i32* %252 monotonic, align 4
  %254 = and i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 0
  %257 = load i32, i32* %256, align 4
  br i1 %255, label %258, label %260

258:                                              ; preds = %251
  %259 = add i32 %257, -1
  store i32 %259, i32* %256, align 4
  br label %260

260:                                              ; preds = %258, %251
  %261 = phi i32 [ %259, %258 ], [ %257, %251 ]
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %264

263:                                              ; preds = %260
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %249) #15
  br label %264

264:                                              ; preds = %242, %260, %263
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %17) #15
  ret %"class.WTF::StringImpl"* %248
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18TextControlElement16SelectionChangedEb(%"class.blink::TextControlElement"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::SelectionTemplate", align 8
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.blink::SelectionTemplate", align 8
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = alloca %"class.blink::SelectionTemplate", align 8
  %8 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %11, label %17, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.blink::NodeData"** %12 to %"class.blink::NodeRareData"**
  %15 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %15, i64 0, i32 1, i32 0, i32 0
  br label %19

17:                                               ; preds = %2
  %18 = bitcast %"class.blink::NodeData"** %12 to %"class.blink::NodeRenderingData"**
  br label %19

19:                                               ; preds = %13, %17
  %20 = phi %"class.blink::NodeRenderingData"** [ %16, %13 ], [ %18, %17 ]
  %21 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %21, i64 0, i32 1
  %23 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %22, align 8
  %24 = icmp eq %"class.blink::LayoutObject"* %23, null
  br i1 %24, label %109, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = bitcast %"class.blink::TextControlElement"* %0 to i1 (%"class.blink::Element"*)***
  %28 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %27, align 8
  %29 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %28, i64 126
  %30 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %29, align 8
  %31 = tail call zeroext i1 %30(%"class.blink::Element"* %26) #15
  br i1 %31, label %32, label %109

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %34 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %34, i64 0, i32 2, i32 0, i32 0
  %36 = load %"class.blink::Document"*, %"class.blink::Document"** %35, align 8
  %37 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %36) #15
  %38 = icmp eq %"class.blink::LocalFrame"* %37, null
  br i1 %38, label %56, label %39

39:                                               ; preds = %32
  %40 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %33, align 8
  %41 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %40, i64 0, i32 2, i32 0, i32 0
  %42 = load %"class.blink::Document"*, %"class.blink::Document"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %42, i64 0, i32 5, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %43, align 4
  %46 = bitcast %"class.blink::SelectionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %46) #15
  %47 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %37, i64 0, i32 14, i32 0, i32 0
  %48 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %47, align 8
  call void @_ZNK5blink14FrameSelection21GetSelectionInDOMTreeEv(%"class.blink::SelectionTemplate"* nonnull sret %5, %"class.blink::FrameSelection"* %48) #15
  %49 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 1, i32 0, i32 0
  %50 = load %"class.blink::TextControlInnerEditorElement"*, %"class.blink::TextControlInnerEditorElement"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %50, i64 0, i32 0, i32 0
  %52 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #15
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeStartPositionEv(%"class.blink::PositionTemplate"* nonnull sret %6, %"class.blink::SelectionTemplate"* nonnull %5) #15
  %53 = call i32 @_ZN5blink18TextControlElement16IndexForPositionEPNS_11HTMLElementERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::HTMLElement"* %51, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %46) #15
  %54 = load i32, i32* %43, align 4
  %55 = add nsw i32 %54, -1
  store i32 %55, i32* %43, align 4
  br label %56

56:                                               ; preds = %32, %39
  %57 = phi i32 [ %53, %39 ], [ 0, %32 ]
  %58 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %33, align 8
  %59 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %58, i64 0, i32 2, i32 0, i32 0
  %60 = load %"class.blink::Document"*, %"class.blink::Document"** %59, align 8
  %61 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %60) #15
  %62 = icmp eq %"class.blink::LocalFrame"* %61, null
  br i1 %62, label %80, label %63

63:                                               ; preds = %56
  %64 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %33, align 8
  %65 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %64, i64 0, i32 2, i32 0, i32 0
  %66 = load %"class.blink::Document"*, %"class.blink::Document"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %66, i64 0, i32 5, i32 2
  %68 = load i32, i32* %67, align 4
  %69 = add nsw i32 %68, 1
  store i32 %69, i32* %67, align 4
  %70 = bitcast %"class.blink::SelectionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %70) #15
  %71 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %61, i64 0, i32 14, i32 0, i32 0
  %72 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %71, align 8
  call void @_ZNK5blink14FrameSelection21GetSelectionInDOMTreeEv(%"class.blink::SelectionTemplate"* nonnull sret %3, %"class.blink::FrameSelection"* %72) #15
  %73 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 1, i32 0, i32 0
  %74 = load %"class.blink::TextControlInnerEditorElement"*, %"class.blink::TextControlInnerEditorElement"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %74, i64 0, i32 0, i32 0
  %76 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #15
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18ComputeEndPositionEv(%"class.blink::PositionTemplate"* nonnull sret %4, %"class.blink::SelectionTemplate"* nonnull %3) #15
  %77 = call i32 @_ZN5blink18TextControlElement16IndexForPositionEPNS_11HTMLElementERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::HTMLElement"* %75, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %70) #15
  %78 = load i32, i32* %67, align 4
  %79 = add nsw i32 %78, -1
  store i32 %79, i32* %67, align 4
  br label %80

80:                                               ; preds = %56, %63
  %81 = phi i32 [ %77, %63 ], [ 0, %56 ]
  %82 = call i32 @_ZNK5blink18TextControlElement25ComputeSelectionDirectionEv(%"class.blink::TextControlElement"* %0)
  %83 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 4
  store i32 %57, i32* %83, align 4
  %84 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 5
  store i32 %81, i32* %84, align 8
  %85 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 6
  store i32 %82, i32* %85, align 4
  %86 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %33, align 8
  %87 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %86, i64 0, i32 2, i32 0, i32 0
  %88 = load %"class.blink::Document"*, %"class.blink::Document"** %87, align 8
  %89 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %88) #15
  %90 = icmp eq %"class.blink::LocalFrame"* %89, null
  %91 = xor i1 %1, true
  %92 = or i1 %90, %91
  br i1 %92, label %109, label %93

93:                                               ; preds = %80
  %94 = bitcast %"class.blink::SelectionTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %94) #15
  %95 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %89, i64 0, i32 14, i32 0, i32 0
  %96 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %95, align 8
  call void @_ZNK5blink14FrameSelection21GetSelectionInDOMTreeEv(%"class.blink::SelectionTemplate"* nonnull sret %7, %"class.blink::FrameSelection"* %96) #15
  %97 = call zeroext i1 @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7IsRangeEv(%"class.blink::SelectionTemplate"* nonnull %7) #15
  br i1 %97, label %98, label %108

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names7kSelectE, align 8
  %101 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #15
  %102 = bitcast i8* %101 to %"class.blink::Event"*
  call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %102, %"class.WTF::AtomicString"* dereferenceable(8) %100, i32 0, i32 1, i32 1) #15
  %103 = getelementptr inbounds i8, i8* %101, i64 -4
  %104 = bitcast i8* %103 to i16*
  %105 = load atomic i16, i16* %104 monotonic, align 2
  %106 = or i16 %105, 1
  store atomic i16 %106, i16* %104 release, align 2
  %107 = call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %99, %"class.blink::Event"* dereferenceable(104) %102) #15
  br label %108

108:                                              ; preds = %93, %98
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %94) #15
  br label %109

109:                                              ; preds = %108, %80, %19, %25
  ret void
}

declare zeroext i1 @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7IsRangeEv(%"class.blink::SelectionTemplate"*) local_unnamed_addr #1

declare i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18TextControlElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::TextControlElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::StyleChangeReasonForTracing", align 8
  %4 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 0
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %4, align 8
  %6 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kPlaceholderAttrE, align 8
  %7 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %5, i64 0, i32 0, i32 0
  %8 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %6, i64 0, i32 0, i32 0
  %10 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %11 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %8, %10
  br i1 %11, label %12, label %26

12:                                               ; preds = %2
  %13 = bitcast %"class.blink::TextControlElement"* %0 to void (%"class.blink::TextControlElement"*)***
  %14 = load void (%"class.blink::TextControlElement"*)**, void (%"class.blink::TextControlElement"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::TextControlElement"*)*, void (%"class.blink::TextControlElement"*)** %14, i64 199
  %16 = load void (%"class.blink::TextControlElement"*)*, void (%"class.blink::TextControlElement"*)** %15, align 8
  tail call void %16(%"class.blink::TextControlElement"* %0) #15
  tail call void @_ZN5blink18TextControlElement27UpdatePlaceholderVisibilityEv(%"class.blink::TextControlElement"* %0)
  %17 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %18, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::Document"*, %"class.blink::Document"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %20, i64 0, i32 2
  %22 = bitcast %"class.blink::UseCounter"* %21 to void (%"class.blink::UseCounter"*, i32)***
  %23 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %23, i64 3
  %25 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %24, align 8
  tail call void %25(%"class.blink::UseCounter"* %21, i32 45) #15
  br label %104

26:                                               ; preds = %2
  %27 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kReadonlyAttrE, align 8
  %28 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %28, align 8
  %30 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %8, %29
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kDisabledAttrE, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %33, align 8
  %35 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %8, %34
  br i1 %35, label %36, label %102

36:                                               ; preds = %31, %26
  %37 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 1, i32 0, i32 0
  %38 = load %"class.blink::TextControlInnerEditorElement"*, %"class.blink::TextControlInnerEditorElement"** %37, align 8
  %39 = icmp eq %"class.blink::TextControlInnerEditorElement"* %38, null
  br i1 %39, label %82, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = bitcast %"class.blink::StyleChangeReasonForTracing"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #15
  %43 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %8, i64 0, i32 3, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %63, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %63

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = zext i32 %53 to i33
  %55 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %54, i33 1) #15
  %56 = extractvalue { i33, i1 } %55, 1
  %57 = extractvalue { i33, i1 } %55, 0
  %58 = icmp slt i33 %57, 0
  %59 = or i1 %56, %58
  br i1 %59, label %60, label %61, !prof !3

60:                                               ; preds = %51
  tail call void @llvm.trap() #15
  unreachable

61:                                               ; preds = %51
  %62 = trunc i33 %57 to i32
  store i32 %62, i32* %52, align 4
  br label %63

63:                                               ; preds = %61, %46, %40
  %64 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %3, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19style_change_reason10kAttributeE, i64 0, i64 0), i8** %64, align 8
  %65 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"** %65, align 8
  call void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"* %41, i32 32768, %"class.blink::StyleChangeReasonForTracing"* nonnull dereferenceable(16) %3) #15
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #15
  br label %81

81:                                               ; preds = %80, %77, %63
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #15
  br label %82

82:                                               ; preds = %36, %81
  %83 = bitcast %"class.blink::TextControlElement"* %0 to %"class.blink::HTMLFormControlElement"*
  call void @_ZN5blink22HTMLFormControlElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLFormControlElement"* %83, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32) %1) #15
  %84 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 2
  %85 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %84, align 8
  %86 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %104, label %89

89:                                               ; preds = %82
  %90 = load %"class.blink::TextControlInnerEditorElement"*, %"class.blink::TextControlInnerEditorElement"** %37, align 8
  %91 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %90, i64 0, i32 0, i32 0
  %92 = icmp eq %"class.blink::TextControlInnerEditorElement"* %90, null
  br i1 %92, label %104, label %93

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %95 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %94, align 8
  %96 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %95, i64 0, i32 2, i32 0, i32 0
  %97 = load %"class.blink::Document"*, %"class.blink::Document"** %96, align 8
  %98 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %97) #15
  %99 = icmp eq %"class.blink::LocalFrame"* %98, null
  br i1 %99, label %104, label %100

100:                                              ; preds = %93
  %101 = call dereferenceable(24) %"class.blink::SpellChecker"* @_ZNK5blink10LocalFrame15GetSpellCheckerEv(%"class.blink::LocalFrame"* nonnull %98) #15
  call void @_ZN5blink12SpellChecker31RemoveSpellingAndGrammarMarkersERKNS_11HTMLElementENS0_12ElementsTypeE(%"class.blink::SpellChecker"* %101, %"class.blink::HTMLElement"* dereferenceable(104) %91, i32 0) #15
  br label %104

102:                                              ; preds = %31
  %103 = bitcast %"class.blink::TextControlElement"* %0 to %"class.blink::HTMLFormControlElement"*
  tail call void @_ZN5blink22HTMLFormControlElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLFormControlElement"* %103, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32) %1) #15
  br label %104

104:                                              ; preds = %89, %93, %100, %102, %82, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18TextControlElement34DisabledOrReadonlyAttributeChangedERKNS_13QualifiedNameE(%"class.blink::TextControlElement"* nocapture readonly, %"class.blink::QualifiedName"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::StyleChangeReasonForTracing", align 8
  %4 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::TextControlInnerEditorElement"*, %"class.blink::TextControlInnerEditorElement"** %4, align 8
  %6 = icmp eq %"class.blink::TextControlInnerEditorElement"* %5, null
  br i1 %6, label %51, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.blink::StyleChangeReasonForTracing"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %11 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %11, i64 0, i32 3, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #15
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %20
  tail call void @llvm.trap() #15
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %7, %15, %30
  %33 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %3, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19style_change_reason10kAttributeE, i64 0, i64 0), i8** %33, align 8
  %34 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %34, align 8
  call void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"* %8, i32 32768, %"class.blink::StyleChangeReasonForTracing"* nonnull dereferenceable(16) %3) #15
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %46

44:                                               ; preds = %37
  %45 = add i32 %43, -1
  store i32 %45, i32* %42, align 4
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi i32 [ %45, %44 ], [ %43, %37 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #15
  br label %50

50:                                               ; preds = %32, %46, %49
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #15
  br label %51

51:                                               ; preds = %2, %50
  ret void
}

declare void @_ZN5blink22HTMLFormControlElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLFormControlElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #1

declare dereferenceable(24) %"class.blink::SpellChecker"* @_ZNK5blink10LocalFrame15GetSpellCheckerEv(%"class.blink::LocalFrame"*) local_unnamed_addr #1

declare void @_ZN5blink12SpellChecker31RemoveSpellingAndGrammarMarkersERKNS_11HTMLElementENS0_12ElementsTypeE(%"class.blink::SpellChecker"*, %"class.blink::HTMLElement"* dereferenceable(104), i32) local_unnamed_addr #1

declare void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"*, i32, %"class.blink::StyleChangeReasonForTracing"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink18TextControlElement21LastChangeWasUserEditEv(%"class.blink::TextControlElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = bitcast %"class.blink::TextControlElement"* %0 to i1 (%"class.blink::Element"*)***
  %4 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %4, i64 126
  %6 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.blink::Element"* %2) #15
  br i1 %7, label %8, label %12

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 3
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp ne i8 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZNK5blink18TextControlElement29CreatePlaceholderBreakElementEv(%"class.blink::TextControlElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %3, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = tail call %"class.blink::HTMLBRElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLBRElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %5) #15
  %7 = getelementptr inbounds %"class.blink::HTMLBRElement", %"class.blink::HTMLBRElement"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  ret %"class.blink::Node"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18TextControlElement37AddPlaceholderBreakElementIfNecessaryEv(%"class.blink::TextControlElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::TextControlInnerEditorElement"*, %"class.blink::TextControlInnerEditorElement"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 1
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %7, label %13, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRareData"**
  %11 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %11, i64 0, i32 1, i32 0, i32 0
  br label %15

13:                                               ; preds = %1
  %14 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRenderingData"**
  br label %15

15:                                               ; preds = %9, %13
  %16 = phi %"class.blink::NodeRenderingData"** [ %12, %9 ], [ %14, %13 ]
  %17 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %17, i64 0, i32 1
  %19 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %18, align 8
  %20 = icmp eq %"class.blink::LayoutObject"* %19, null
  br i1 %20, label %41, label %21

21:                                               ; preds = %15
  br i1 %7, label %26, label %22

22:                                               ; preds = %21
  %23 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRareData"**
  %24 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %24, i64 0, i32 1, i32 0, i32 0
  br label %28

26:                                               ; preds = %21
  %27 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRenderingData"**
  br label %28

28:                                               ; preds = %22, %26
  %29 = phi %"class.blink::NodeRenderingData"** [ %25, %22 ], [ %27, %26 ]
  %30 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %30, i64 0, i32 1
  %32 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %32, i64 0, i32 5, i32 0
  %34 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %34, i64 0, i32 0, i32 9
  %36 = bitcast [20 x i8]* %35 to i160*
  %37 = load i160, i160* %36, align 8
  %38 = lshr i160 %37, 12
  %39 = trunc i160 %38 to i32
  %40 = and i32 %39, 127
  switch i32 %40, label %41 [
    i32 16, label %95
    i32 1, label %95
  ]

41:                                               ; preds = %28, %15
  %42 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %44 = load %"class.blink::Node"*, %"class.blink::Node"** %43, align 8
  %45 = icmp eq %"class.blink::Node"* %44, null
  br i1 %45, label %95, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %44, i64 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = and i32 %48, 12
  %50 = icmp eq i32 %49, 4
  br i1 %50, label %51, label %95

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %44, i64 1
  %53 = bitcast %"class.blink::Node"* %52 to i8*
  %54 = load i8, i8* %53, align 8, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %44, i64 1, i32 0, i32 0, i32 1
  %58 = bitcast %"class.blink::TraceWrapperV8Reference"* %57 to %"class.blink::ParkableString"*
  %59 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %58) #15
  br label %63

60:                                               ; preds = %51
  %61 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %44, i64 1, i32 1
  %62 = bitcast i32* %61 to %"class.WTF::String"*
  br label %63

63:                                               ; preds = %56, %60
  %64 = phi %"class.WTF::String"* [ %59, %56 ], [ %62, %60 ]
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %63
  %69 = tail call zeroext i1 @_ZNK3WTF10StringImpl8EndsWithEDs(%"class.WTF::StringImpl"* nonnull %66, i16 zeroext 10) #15
  br i1 %69, label %87, label %70

70:                                               ; preds = %63, %68
  %71 = load i8, i8* %53, align 8, !range !2
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %77, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %44, i64 1, i32 0, i32 0, i32 1
  %75 = bitcast %"class.blink::TraceWrapperV8Reference"* %74 to %"class.blink::ParkableString"*
  %76 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %75) #15
  br label %80

77:                                               ; preds = %70
  %78 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %44, i64 1, i32 1
  %79 = bitcast i32* %78 to %"class.WTF::String"*
  br label %80

80:                                               ; preds = %73, %77
  %81 = phi %"class.WTF::String"* [ %76, %73 ], [ %79, %77 ]
  %82 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %81, i64 0, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %95, label %85

85:                                               ; preds = %80
  %86 = tail call zeroext i1 @_ZNK3WTF10StringImpl8EndsWithEDs(%"class.WTF::StringImpl"* nonnull %83, i16 zeroext 13) #15
  br i1 %86, label %87, label %95

87:                                               ; preds = %85, %68
  %88 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %89 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %89, i64 0, i32 2, i32 0, i32 0
  %91 = load %"class.blink::Document"*, %"class.blink::Document"** %90, align 8
  %92 = tail call %"class.blink::HTMLBRElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLBRElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %91) #15
  %93 = getelementptr inbounds %"class.blink::HTMLBRElement", %"class.blink::HTMLBRElement"* %92, i64 0, i32 0, i32 0, i32 0, i32 0
  %94 = tail call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %42, %"class.blink::Node"* %93) #15
  br label %95

95:                                               ; preds = %46, %28, %28, %80, %41, %87, %85
  ret void
}

declare %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"*, %"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18TextControlElement19SetInnerEditorValueERKN3WTF6StringE(%"class.blink::TextControlElement"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %4 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %5 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.blink::TextControlElement"* %0 to i1 (%"class.blink::Element"*)***
  %7 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %7, i64 126
  %9 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::Element"* %5) #15
  br i1 %10, label %11, label %193

11:                                               ; preds = %2
  %12 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink7Element14OpenShadowRootEv(%"class.blink::Element"* %5) #15
  %13 = icmp eq %"class.blink::ShadowRoot"* %12, null
  br i1 %13, label %14, label %193

14:                                               ; preds = %11
  %15 = tail call %"class.WTF::StringImpl"* @_ZNK5blink18TextControlElement16InnerEditorValueEv(%"class.blink::TextControlElement"* %0)
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"* %15) #15
  %19 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #15
  br label %33

33:                                               ; preds = %14, %29, %32
  %34 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.blink::TextControlInnerEditorElement"*, %"class.blink::TextControlInnerEditorElement"** %34, align 8
  br i1 %18, label %36, label %40

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %38 = load %"class.blink::Node"*, %"class.blink::Node"** %37, align 8
  %39 = icmp eq %"class.blink::Node"* %38, null
  br i1 %39, label %40, label %193

40:                                               ; preds = %36, %33
  %41 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %35, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %43 = load %"class.blink::Node"*, %"class.blink::Node"** %42, align 8
  %44 = icmp eq %"class.blink::Node"* %43, null
  br i1 %44, label %108, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %43, i64 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = and i32 %47, 48
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %108

50:                                               ; preds = %45
  %51 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kBrTagE, align 8
  %52 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %51, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %43, i64 1, i32 2
  %55 = bitcast %"class.blink::Member.318"* %54 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %56 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %56, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %53, i64 0, i32 3, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %58, %60
  br i1 %61, label %62, label %108

62:                                               ; preds = %50
  %63 = bitcast %"class.blink::DummyExceptionStateForTesting"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %63) #15
  %64 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 0
  %65 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %65, align 8
  %66 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %66, align 2
  %67 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 2
  %68 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 5, i32 0, i32 0
  %69 = bitcast %"class.WTF::StringImpl"** %68 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false) #15
  %70 = bitcast i8** %67 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 36, i1 false) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %64, align 8
  %71 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0
  %72 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11RemoveChildEPNS_4NodeERNS_14ExceptionStateE(%"class.blink::ContainerNode"* %41, %"class.blink::Node"* nonnull %43, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %71) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %64, align 8
  %73 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 4
  %74 = load i32, i32* %73, align 8
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %77, label %76

76:                                               ; preds = %62
  call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* nonnull %71) #15
  br label %77

77:                                               ; preds = %62, %76
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %64, align 8
  %78 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %79 = load i64*, i64** %78, align 8
  %80 = icmp eq i64* %79, null
  br i1 %80, label %91, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 3
  %83 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %82, align 8
  %84 = bitcast %"class.v8::Isolate"* %83 to %"class.v8::internal::Isolate"*
  %85 = load i64, i64* %79, align 8
  %86 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %84, i64 %85) #15
  %87 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %83) #15
  br i1 %87, label %91, label %88

88:                                               ; preds = %81
  %89 = bitcast i64* %86 to %"class.v8::Value"*
  %90 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %83, %"class.v8::Value"* %89) #15
  br label %91

91:                                               ; preds = %88, %81, %77
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %107, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  br i1 %98, label %101, label %103

101:                                              ; preds = %94
  %102 = add i32 %100, -1
  store i32 %102, i32* %99, align 4
  br label %103

103:                                              ; preds = %101, %94
  %104 = phi i32 [ %102, %101 ], [ %100, %94 ]
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #15
  br label %107

107:                                              ; preds = %91, %103, %106
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %63) #15
  br label %108

108:                                              ; preds = %45, %40, %107, %50
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %115, label %111

111:                                              ; preds = %108
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 1
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %108, %111
  call void @_ZN5blink13ContainerNode14RemoveChildrenENS_25SubtreeModificationActionE(%"class.blink::ContainerNode"* %41, i32 0) #15
  br label %161

116:                                              ; preds = %111
  %117 = bitcast %"class.blink::DummyExceptionStateForTesting"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %117) #15
  %118 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 0
  %119 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %119, align 8
  %120 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %120, align 2
  %121 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 2
  %122 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 5, i32 0, i32 0
  %123 = bitcast %"class.WTF::StringImpl"** %122 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %123, i8 0, i64 16, i1 false) #15
  %124 = bitcast i8** %121 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %124, i8 0, i64 36, i1 false) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %118, align 8
  %125 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0
  call void @_ZN5blink23ReplaceChildrenWithTextEPNS_13ContainerNodeERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::ContainerNode"* %41, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %125) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %118, align 8
  %126 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 4
  %127 = load i32, i32* %126, align 8
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %130, label %129

129:                                              ; preds = %116
  call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* nonnull %125) #15
  br label %130

130:                                              ; preds = %116, %129
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %118, align 8
  %131 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %132 = load i64*, i64** %131, align 8
  %133 = icmp eq i64* %132, null
  br i1 %133, label %144, label %134

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 3
  %136 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %135, align 8
  %137 = bitcast %"class.v8::Isolate"* %136 to %"class.v8::internal::Isolate"*
  %138 = load i64, i64* %132, align 8
  %139 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %137, i64 %138) #15
  %140 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %136) #15
  br i1 %140, label %144, label %141

141:                                              ; preds = %134
  %142 = bitcast i64* %139 to %"class.v8::Value"*
  %143 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %136, %"class.v8::Value"* %142) #15
  br label %144

144:                                              ; preds = %141, %134, %130
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %145, null
  br i1 %146, label %160, label %147

147:                                              ; preds = %144
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %153 = load i32, i32* %152, align 4
  br i1 %151, label %154, label %156

154:                                              ; preds = %147
  %155 = add i32 %153, -1
  store i32 %155, i32* %152, align 4
  br label %156

156:                                              ; preds = %154, %147
  %157 = phi i32 [ %155, %154 ], [ %153, %147 ]
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %156
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %145) #15
  br label %160

160:                                              ; preds = %144, %156, %159
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %117) #15
  br label %161

161:                                              ; preds = %160, %115
  call void @_ZN5blink18TextControlElement37AddPlaceholderBreakElementIfNecessaryEv(%"class.blink::TextControlElement"* %0)
  br i1 %18, label %193, label %162

162:                                              ; preds = %161
  %163 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %165 = load i32, i32* %164, align 8
  %166 = and i32 %165, 1
  %167 = icmp eq i32 %166, 0
  %168 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %167, label %173, label %169

169:                                              ; preds = %162
  %170 = bitcast %"class.blink::NodeData"** %168 to %"class.blink::NodeRareData"**
  %171 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %170, align 8
  %172 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %171, i64 0, i32 1, i32 0, i32 0
  br label %175

173:                                              ; preds = %162
  %174 = bitcast %"class.blink::NodeData"** %168 to %"class.blink::NodeRenderingData"**
  br label %175

175:                                              ; preds = %169, %173
  %176 = phi %"class.blink::NodeRenderingData"** [ %172, %169 ], [ %174, %173 ]
  %177 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %176, align 8
  %178 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %177, i64 0, i32 1
  %179 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %178, align 8
  %180 = icmp eq %"class.blink::LayoutObject"* %179, null
  br i1 %180, label %193, label %181

181:                                              ; preds = %175
  %182 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %183 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %182, align 8
  %184 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %183, i64 0, i32 2, i32 0, i32 0
  %185 = load %"class.blink::Document"*, %"class.blink::Document"** %184, align 8
  %186 = call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %185) #15
  %187 = icmp eq %"class.blink::AXObjectCache"* %186, null
  br i1 %187, label %193, label %188

188:                                              ; preds = %181
  %189 = bitcast %"class.blink::AXObjectCache"* %186 to void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)***
  %190 = load void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)*** %189, align 8
  %191 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)** %190, i64 36
  %192 = load void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::Node"*)** %191, align 8
  call void %192(%"class.blink::AXObjectCache"* nonnull %186, %"class.blink::Node"* %163) #15
  br label %193

193:                                              ; preds = %161, %36, %188, %181, %175, %11, %2
  ret void
}

declare %"class.blink::Node"* @_ZN5blink13ContainerNode11RemoveChildEPNS_4NodeERNS_14ExceptionStateE(%"class.blink::ContainerNode"*, %"class.blink::Node"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare void @_ZN5blink13ContainerNode14RemoveChildrenENS_25SubtreeModificationActionE(%"class.blink::ContainerNode"*, i32) local_unnamed_addr #1

declare void @_ZN5blink23ReplaceChildrenWithTextEPNS_13ContainerNodeERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::ContainerNode"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink18TextControlElement23ValueWithHardLineBreaksEv(%"class.blink::TextControlElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.blink::NGInlineCursor", align 8
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = alloca %"class.WTF::StringBuilder", align 8
  %9 = alloca %"class.blink::PositionTemplate", align 8
  %10 = alloca %"class.blink::PositionTemplate", align 8
  %11 = alloca %"class.WTF::StringBuilder", align 8
  %12 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.blink::TextControlInnerEditorElement"*, %"class.blink::TextControlInnerEditorElement"** %12, align 8
  %14 = icmp eq %"class.blink::TextControlInnerEditorElement"* %13, null
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.blink::TextControlElement"* %0 to i1 (%"class.blink::Element"*)***
  %18 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %17, align 8
  %19 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %18, i64 126
  %20 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.blink::Element"* %16) #15
  br i1 %21, label %28, label %22

22:                                               ; preds = %1, %15
  %23 = bitcast %"class.blink::TextControlElement"* %0 to %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)***
  %24 = load %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)*** %23, align 8
  %25 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)** %24, i64 195
  %26 = load %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)** %25, align 8
  %27 = tail call %"class.WTF::StringImpl"* %26(%"class.blink::TextControlElement"* %0) #15
  br label %783

28:                                               ; preds = %15
  %29 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %33, label %39, label %35

35:                                               ; preds = %28
  %36 = bitcast %"class.blink::NodeData"** %34 to %"class.blink::NodeRareData"**
  %37 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %37, i64 0, i32 1, i32 0, i32 0
  br label %41

39:                                               ; preds = %28
  %40 = bitcast %"class.blink::NodeData"** %34 to %"class.blink::NodeRenderingData"**
  br label %41

41:                                               ; preds = %35, %39
  %42 = phi %"class.blink::NodeRenderingData"** [ %38, %35 ], [ %40, %39 ]
  %43 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %43, i64 0, i32 1
  %45 = bitcast %"class.blink::LayoutObject"** %44 to %"class.blink::LayoutBlockFlow"**
  %46 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %45, align 8
  %47 = icmp eq %"class.blink::LayoutBlockFlow"* %46, null
  br i1 %47, label %48, label %54

48:                                               ; preds = %41
  %49 = bitcast %"class.blink::TextControlElement"* %0 to %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)***
  %50 = load %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)*** %49, align 8
  %51 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)** %50, i64 195
  %52 = load %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)** %51, align 8
  %53 = tail call %"class.WTF::StringImpl"* %52(%"class.blink::TextControlElement"* %0) #15
  br label %783

54:                                               ; preds = %41
  %55 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %46, i64 0, i32 0, i32 0, i32 0, i32 0
  %56 = bitcast %"class.blink::LayoutBlockFlow"* %46 to i1 (%"class.blink::LayoutObject"*)***
  %57 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %56, align 8
  %58 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %57, i64 28
  %59 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %58, align 8
  %60 = tail call zeroext i1 %59(%"class.blink::LayoutObject"* %55) #15
  br i1 %60, label %61, label %448

61:                                               ; preds = %54
  %62 = bitcast %"class.blink::NGInlineCursor"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %62) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 -86, i64 112, i1 false)
  call void @_ZN5blink14NGInlineCursorC1ERKNS_15LayoutBlockFlowE(%"class.blink::NGInlineCursor"* nonnull %6, %"class.blink::LayoutBlockFlow"* nonnull dereferenceable(280) %46) #15
  %63 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %6, i64 0, i32 0, i32 0
  %64 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %63, align 8
  %65 = icmp eq %"class.blink::NGFragmentItem"* %64, null
  br i1 %65, label %66, label %72

66:                                               ; preds = %61
  %67 = bitcast %"class.blink::TextControlElement"* %0 to %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)***
  %68 = load %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)*** %67, align 8
  %69 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)** %68, i64 195
  %70 = load %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)** %69, align 8
  %71 = call %"class.WTF::StringImpl"* %70(%"class.blink::TextControlElement"* %0) #15
  br label %446

72:                                               ; preds = %61
  %73 = call %"class.blink::NGOffsetMapping"* @_ZN5blink12NGInlineNode16GetOffsetMappingEPNS_15LayoutBlockFlowE(%"class.blink::LayoutBlockFlow"* nonnull %46) #15
  %74 = icmp eq %"class.blink::NGOffsetMapping"* %73, null
  br i1 %74, label %75, label %81

75:                                               ; preds = %72
  %76 = bitcast %"class.blink::TextControlElement"* %0 to %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)***
  %77 = load %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)*** %76, align 8
  %78 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)** %77, i64 195
  %79 = load %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)** %78, align 8
  %80 = call %"class.WTF::StringImpl"* %79(%"class.blink::TextControlElement"* %0) #15
  br label %446

81:                                               ; preds = %72
  %82 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %82) #15
  %83 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %7, i64 0, i32 0, i32 0, i32 0
  %84 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %7, i64 0, i32 1
  %85 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 -86, i64 16, i1 false)
  %86 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %63, align 8, !noalias !18
  %87 = icmp eq %"class.blink::NGFragmentItem"* %86, null
  br i1 %87, label %119, label %88

88:                                               ; preds = %81, %115
  %89 = phi %"class.blink::NGFragmentItem"* [ %105, %115 ], [ %86, %81 ]
  %90 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %89, i64 0, i32 6
  %91 = load i16, i16* %90, align 8, !noalias !18
  %92 = and i16 %91, 7
  %93 = icmp eq i16 %92, 3
  br i1 %93, label %94, label %103

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %89, i64 0, i32 1
  %96 = bitcast %union.anon.3161* %95 to %"class.blink::NGPhysicalLineBoxFragment"**
  %97 = load %"class.blink::NGPhysicalLineBoxFragment"*, %"class.blink::NGPhysicalLineBoxFragment"** %96, align 8
  %98 = icmp eq %"class.blink::NGPhysicalLineBoxFragment"* %97, null
  br i1 %98, label %103, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.blink::NGPhysicalLineBoxFragment", %"class.blink::NGPhysicalLineBoxFragment"* %97, i64 0, i32 0, i32 4, i32 0
  %101 = bitcast %"class.blink::NGBreakToken"** %100 to %"class.blink::NGInlineBreakToken"**
  %102 = load %"class.blink::NGInlineBreakToken"*, %"class.blink::NGInlineBreakToken"** %101, align 8
  br label %103

103:                                              ; preds = %99, %94, %88
  %104 = phi %"class.blink::NGInlineBreakToken"* [ %102, %99 ], [ null, %94 ], [ null, %88 ]
  call void @_ZN5blink14NGInlineCursor14MoveToNextLineEv(%"class.blink::NGInlineCursor"* nonnull %6) #15, !noalias !18
  %105 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %63, align 8, !noalias !18
  %106 = icmp eq %"class.blink::NGFragmentItem"* %105, null
  br i1 %106, label %107, label %108

107:                                              ; preds = %103
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 0, i64 16, i1 false) #15, !alias.scope !18
  br label %120

108:                                              ; preds = %103
  %109 = icmp eq %"class.blink::NGInlineBreakToken"* %104, null
  br i1 %109, label %115, label %110

110:                                              ; preds = %108
  %111 = getelementptr inbounds %"class.blink::NGInlineBreakToken", %"class.blink::NGInlineBreakToken"* %104, i64 0, i32 0, i32 4
  %112 = load i16, i16* %111, align 8, !noalias !18
  %113 = and i16 %112, 4
  %114 = icmp eq i16 %113, 0
  br i1 %114, label %116, label %115

115:                                              ; preds = %110, %108
  br label %88

116:                                              ; preds = %110
  %117 = getelementptr inbounds %"class.blink::NGInlineBreakToken", %"class.blink::NGInlineBreakToken"* %104, i64 0, i32 3
  %118 = load i32, i32* %117, align 4, !noalias !18
  call void @_ZNK5blink15NGOffsetMapping16GetFirstPositionEj(%"class.blink::PositionTemplate"* nonnull sret %7, %"class.blink::NGOffsetMapping"* nonnull %73, i32 %118) #15
  br label %120

119:                                              ; preds = %81
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 0, i64 16, i1 false) #15, !alias.scope !18
  br label %120

120:                                              ; preds = %107, %116, %119
  %121 = bitcast %"class.WTF::StringBuilder"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %121) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %121, i8 -86, i64 48, i1 false)
  %122 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %122, align 8
  %123 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %8, i64 0, i32 1
  %124 = bitcast %union.anon.2794* %123 to i8*
  store i8 0, i8* %124, align 8
  %125 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %8, i64 0, i32 2
  store i32 0, i32* %125, align 8
  %126 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %8, i64 0, i32 3
  store i8 1, i8* %126, align 4
  %127 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %8, i64 0, i32 4
  store i8 0, i8* %127, align 1
  %128 = load i32, i32* %30, align 8
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %159, label %131

131:                                              ; preds = %120
  %132 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %29, i64 1
  %133 = bitcast %"class.blink::Node"* %132 to %"class.blink::Node"**
  %134 = load %"class.blink::Node"*, %"class.blink::Node"** %133, align 8
  %135 = icmp eq %"class.blink::Node"* %134, null
  br i1 %135, label %159, label %136

136:                                              ; preds = %131
  %137 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kBrTagE, align 8
  %138 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %137, i64 0, i32 0, i32 0, i32 0
  %139 = bitcast %"class.WTF::StringView"* %2 to i8*
  %140 = bitcast %"class.WTF::StringView"* %2 to i64*
  %141 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  %142 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %143 = bitcast i8** %142 to i16**
  %144 = bitcast %"class.blink::PositionTemplate"* %9 to i8*
  %145 = bitcast %"class.blink::PositionTemplate"* %9 to i64*
  %146 = bitcast %"class.blink::PositionTemplate"* %7 to i64*
  %147 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %9, i64 0, i32 1
  %148 = bitcast i32* %147 to i64*
  %149 = bitcast i32* %84 to i64*
  %150 = bitcast %"class.WTF::StringView"* %3 to i8*
  %151 = bitcast %"class.WTF::StringView"* %3 to i64*
  %152 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %153 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %154 = bitcast i8** %153 to i16**
  %155 = bitcast %"class.blink::PositionTemplate"* %10 to i8*
  %156 = bitcast %"class.blink::PositionTemplate"* %10 to i64*
  %157 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %10, i64 0, i32 1
  %158 = bitcast i32* %157 to i64*
  br label %177

159:                                              ; preds = %435, %443, %120, %131
  %160 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %8) #15
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %8) #15
  %161 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  %162 = icmp eq %"class.WTF::StringImpl"* %161, null
  br i1 %162, label %176, label %163

163:                                              ; preds = %159
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load atomic i32, i32* %164 monotonic, align 4
  %166 = and i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 0
  %169 = load i32, i32* %168, align 4
  br i1 %167, label %170, label %172

170:                                              ; preds = %163
  %171 = add i32 %169, -1
  store i32 %171, i32* %168, align 4
  br label %172

172:                                              ; preds = %170, %163
  %173 = phi i32 [ %171, %170 ], [ %169, %163 ]
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %172
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %161) #15
  br label %176

176:                                              ; preds = %159, %172, %175
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %121) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %82) #15
  br label %446

177:                                              ; preds = %136, %443
  %178 = phi %"class.blink::Node"* [ %134, %136 ], [ %444, %443 ]
  %179 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %178, i64 0, i32 1
  %180 = load i32, i32* %179, align 8
  %181 = and i32 %180, 48
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %193

183:                                              ; preds = %177
  %184 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %138, align 8
  %185 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %178, i64 1, i32 2
  %186 = bitcast %"class.blink::Member.318"* %185 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %187 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %186, align 8
  %188 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %187, i64 0, i32 3, i32 0, i32 0, i32 0
  %189 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %188, align 8
  %190 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %184, i64 0, i32 3, i32 0, i32 0, i32 0
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %190, align 8
  %192 = icmp eq %"class.WTF::StringImpl"* %189, %191
  br i1 %192, label %374, label %193

193:                                              ; preds = %177, %183
  %194 = and i32 %180, 12
  %195 = icmp eq i32 %194, 4
  br i1 %195, label %196, label %374

196:                                              ; preds = %193
  %197 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %178, i64 1
  %198 = bitcast %"class.blink::Node"* %197 to i8*
  %199 = load i8, i8* %198, align 8, !range !2
  %200 = icmp eq i8 %199, 0
  br i1 %200, label %205, label %201

201:                                              ; preds = %196
  %202 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %178, i64 1, i32 0, i32 0, i32 1
  %203 = bitcast %"class.blink::TraceWrapperV8Reference"* %202 to %"class.blink::ParkableString"*
  %204 = call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %203) #15
  br label %208

205:                                              ; preds = %196
  %206 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %178, i64 1, i32 1
  %207 = bitcast i32* %206 to %"class.WTF::String"*
  br label %208

208:                                              ; preds = %201, %205
  %209 = phi %"class.WTF::String"* [ %204, %201 ], [ %207, %205 ]
  %210 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %209, i64 0, i32 0, i32 0
  %211 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %210, align 8
  %212 = icmp eq %"class.WTF::StringImpl"* %211, null
  br i1 %212, label %233, label %213

213:                                              ; preds = %208
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load atomic i32, i32* %214 monotonic, align 4
  %216 = and i32 %215, 2
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %230

218:                                              ; preds = %213
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 0
  %220 = load i32, i32* %219, align 4
  %221 = zext i32 %220 to i33
  %222 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %221, i33 1) #15
  %223 = extractvalue { i33, i1 } %222, 1
  %224 = extractvalue { i33, i1 } %222, 0
  %225 = icmp slt i33 %224, 0
  %226 = or i1 %223, %225
  br i1 %226, label %227, label %228, !prof !3

227:                                              ; preds = %218
  call void @llvm.trap() #15
  unreachable

228:                                              ; preds = %218
  %229 = trunc i33 %224 to i32
  store i32 %229, i32* %219, align 4
  br label %230

230:                                              ; preds = %213, %228
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 1
  %232 = load i32, i32* %231, align 4
  br label %233

233:                                              ; preds = %208, %230
  %234 = phi i32 [ %232, %230 ], [ 0, %208 ]
  %235 = load %"class.blink::Node"*, %"class.blink::Node"** %83, align 8
  %236 = icmp eq %"class.blink::Node"* %235, %178
  br i1 %236, label %237, label %328

237:                                              ; preds = %233
  %238 = ptrtoint %"class.WTF::StringImpl"* %211 to i64
  %239 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 1
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 1
  %241 = bitcast %"class.WTF::StringImpl"* %240 to i8*
  %242 = load i32, i32* %84, align 8
  br label %243

243:                                              ; preds = %237, %323
  %244 = phi i32 [ %242, %237 ], [ %327, %323 ]
  %245 = phi i32 [ 0, %237 ], [ %278, %323 ]
  %246 = icmp ugt i32 %244, %234
  br i1 %246, label %328, label %247

247:                                              ; preds = %243
  %248 = icmp ugt i32 %244, %245
  br i1 %248, label %249, label %277

249:                                              ; preds = %247
  br i1 %212, label %250, label %252

250:                                              ; preds = %249
  %251 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %254

252:                                              ; preds = %249
  %253 = load i32, i32* %239, align 4
  br label %254

254:                                              ; preds = %250, %252
  %255 = phi i64 [ %251, %250 ], [ %238, %252 ]
  %256 = phi i8* [ null, %250 ], [ %241, %252 ]
  %257 = phi i32 [ 0, %250 ], [ %253, %252 ]
  %258 = icmp ult i32 %244, %245
  %259 = icmp ugt i32 %244, %257
  %260 = or i1 %258, %259
  br i1 %260, label %276, label %261

261:                                              ; preds = %254
  %262 = sub i32 %244, %245
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %139) #15
  store i64 %255, i64* %140, align 8
  store i32 %262, i32* %141, align 8
  %263 = inttoptr i64 %255 to %"class.WTF::StringImpl"*
  %264 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %263, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %265 = load atomic i32, i32* %264 monotonic, align 4
  %266 = and i32 %265, 1
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %271, label %268

268:                                              ; preds = %261
  %269 = zext i32 %245 to i64
  %270 = getelementptr inbounds i8, i8* %256, i64 %269
  store i8* %270, i8** %142, align 8
  br label %275

271:                                              ; preds = %261
  %272 = bitcast i8* %256 to i16*
  %273 = zext i32 %245 to i64
  %274 = getelementptr inbounds i16, i16* %272, i64 %273
  store i16* %274, i16** %143, align 8
  br label %275

275:                                              ; preds = %271, %268
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %2) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %139) #15
  br label %276

276:                                              ; preds = %254, %275
  call void @_ZN3WTF13StringBuilder6AppendEDs(%"class.WTF::StringBuilder"* nonnull %8, i16 zeroext 10)
  br label %277

277:                                              ; preds = %276, %247
  %278 = phi i32 [ %244, %276 ], [ %245, %247 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %144) #15
  %279 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %63, align 8, !noalias !21
  %280 = icmp eq %"class.blink::NGFragmentItem"* %279, null
  br i1 %280, label %313, label %281

281:                                              ; preds = %277, %308
  %282 = phi %"class.blink::NGFragmentItem"* [ %298, %308 ], [ %279, %277 ]
  %283 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %282, i64 0, i32 6
  %284 = load i16, i16* %283, align 8, !noalias !21
  %285 = and i16 %284, 7
  %286 = icmp eq i16 %285, 3
  br i1 %286, label %287, label %296

287:                                              ; preds = %281
  %288 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %282, i64 0, i32 1
  %289 = bitcast %union.anon.3161* %288 to %"class.blink::NGPhysicalLineBoxFragment"**
  %290 = load %"class.blink::NGPhysicalLineBoxFragment"*, %"class.blink::NGPhysicalLineBoxFragment"** %289, align 8
  %291 = icmp eq %"class.blink::NGPhysicalLineBoxFragment"* %290, null
  br i1 %291, label %296, label %292

292:                                              ; preds = %287
  %293 = getelementptr inbounds %"class.blink::NGPhysicalLineBoxFragment", %"class.blink::NGPhysicalLineBoxFragment"* %290, i64 0, i32 0, i32 4, i32 0
  %294 = bitcast %"class.blink::NGBreakToken"** %293 to %"class.blink::NGInlineBreakToken"**
  %295 = load %"class.blink::NGInlineBreakToken"*, %"class.blink::NGInlineBreakToken"** %294, align 8
  br label %296

296:                                              ; preds = %292, %287, %281
  %297 = phi %"class.blink::NGInlineBreakToken"* [ %295, %292 ], [ null, %287 ], [ null, %281 ]
  call void @_ZN5blink14NGInlineCursor14MoveToNextLineEv(%"class.blink::NGInlineCursor"* nonnull %6) #15, !noalias !21
  %298 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %63, align 8, !noalias !21
  %299 = icmp eq %"class.blink::NGFragmentItem"* %298, null
  br i1 %299, label %300, label %301

300:                                              ; preds = %296
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %144, i8 0, i64 16, i1 false) #15, !alias.scope !21
  br label %314

301:                                              ; preds = %296
  %302 = icmp eq %"class.blink::NGInlineBreakToken"* %297, null
  br i1 %302, label %308, label %303

303:                                              ; preds = %301
  %304 = getelementptr inbounds %"class.blink::NGInlineBreakToken", %"class.blink::NGInlineBreakToken"* %297, i64 0, i32 0, i32 4
  %305 = load i16, i16* %304, align 8, !noalias !21
  %306 = and i16 %305, 4
  %307 = icmp eq i16 %306, 0
  br i1 %307, label %309, label %308

308:                                              ; preds = %303, %301
  br label %281

309:                                              ; preds = %303
  %310 = getelementptr inbounds %"class.blink::NGInlineBreakToken", %"class.blink::NGInlineBreakToken"* %297, i64 0, i32 3
  %311 = load i32, i32* %310, align 4, !noalias !21
  call void @_ZNK5blink15NGOffsetMapping16GetFirstPositionEj(%"class.blink::PositionTemplate"* nonnull sret %9, %"class.blink::NGOffsetMapping"* nonnull %73, i32 %311) #15
  %312 = load i64, i64* %145, align 8
  br label %314

313:                                              ; preds = %277
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %144, i8 0, i64 16, i1 false) #15, !alias.scope !21
  br label %314

314:                                              ; preds = %300, %309, %313
  %315 = phi i64 [ 0, %300 ], [ %312, %309 ], [ 0, %313 ]
  store atomic i64 %315, i64* %146 monotonic, align 8
  %316 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %317 = icmp eq i32 %316, 0
  %318 = inttoptr i64 %315 to %"class.blink::Node"*
  br i1 %317, label %323, label %319

319:                                              ; preds = %314
  %320 = inttoptr i64 %315 to i8*
  %321 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %320) #15
  %322 = load %"class.blink::Node"*, %"class.blink::Node"** %83, align 8
  br label %323

323:                                              ; preds = %314, %319
  %324 = phi %"class.blink::Node"* [ %318, %314 ], [ %322, %319 ]
  %325 = load i64, i64* %148, align 8
  store i64 %325, i64* %149, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %144) #15
  %326 = icmp eq %"class.blink::Node"* %324, %178
  %327 = trunc i64 %325 to i32
  br i1 %326, label %243, label %328

328:                                              ; preds = %323, %243, %233
  %329 = phi i32 [ 0, %233 ], [ %245, %243 ], [ %278, %323 ]
  br i1 %212, label %330, label %332

330:                                              ; preds = %328
  %331 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %338

332:                                              ; preds = %328
  %333 = ptrtoint %"class.WTF::StringImpl"* %211 to i64
  %334 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 1
  %335 = load i32, i32* %334, align 4
  %336 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 1
  %337 = bitcast %"class.WTF::StringImpl"* %336 to i8*
  br label %338

338:                                              ; preds = %330, %332
  %339 = phi i8* [ null, %330 ], [ %337, %332 ]
  %340 = phi i64 [ %331, %330 ], [ %333, %332 ]
  %341 = phi i32 [ 0, %330 ], [ %335, %332 ]
  %342 = icmp ult i32 %234, %329
  %343 = icmp ugt i32 %234, %341
  %344 = or i1 %342, %343
  br i1 %344, label %360, label %345

345:                                              ; preds = %338
  %346 = sub i32 %234, %329
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %150) #15
  store i64 %340, i64* %151, align 8
  store i32 %346, i32* %152, align 8
  %347 = inttoptr i64 %340 to %"class.WTF::StringImpl"*
  %348 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %347, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %349 = load atomic i32, i32* %348 monotonic, align 4
  %350 = and i32 %349, 1
  %351 = icmp eq i32 %350, 0
  br i1 %351, label %355, label %352

352:                                              ; preds = %345
  %353 = zext i32 %329 to i64
  %354 = getelementptr inbounds i8, i8* %339, i64 %353
  store i8* %354, i8** %153, align 8
  br label %359

355:                                              ; preds = %345
  %356 = bitcast i8* %339 to i16*
  %357 = zext i32 %329 to i64
  %358 = getelementptr inbounds i16, i16* %356, i64 %357
  store i16* %358, i16** %154, align 8
  br label %359

359:                                              ; preds = %355, %352
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %150) #15
  br label %360

360:                                              ; preds = %338, %359
  br i1 %212, label %374, label %361

361:                                              ; preds = %360
  %362 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %363 = load atomic i32, i32* %362 monotonic, align 4
  %364 = and i32 %363, 2
  %365 = icmp eq i32 %364, 0
  %366 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 0
  %367 = load i32, i32* %366, align 4
  br i1 %365, label %368, label %370

368:                                              ; preds = %361
  %369 = add i32 %367, -1
  store i32 %369, i32* %366, align 4
  br label %370

370:                                              ; preds = %368, %361
  %371 = phi i32 [ %369, %368 ], [ %367, %361 ]
  %372 = icmp eq i32 %371, 0
  br i1 %372, label %373, label %374

373:                                              ; preds = %370
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %211) #15
  br label %374

374:                                              ; preds = %193, %373, %370, %360, %183
  %375 = load %"class.blink::Node"*, %"class.blink::Node"** %83, align 8
  %376 = icmp eq %"class.blink::Node"* %375, %178
  br i1 %376, label %377, label %426

377:                                              ; preds = %374, %422
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %155) #15
  %378 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %63, align 8, !noalias !24
  %379 = icmp eq %"class.blink::NGFragmentItem"* %378, null
  br i1 %379, label %412, label %380

380:                                              ; preds = %377, %407
  %381 = phi %"class.blink::NGFragmentItem"* [ %397, %407 ], [ %378, %377 ]
  %382 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %381, i64 0, i32 6
  %383 = load i16, i16* %382, align 8, !noalias !24
  %384 = and i16 %383, 7
  %385 = icmp eq i16 %384, 3
  br i1 %385, label %386, label %395

386:                                              ; preds = %380
  %387 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %381, i64 0, i32 1
  %388 = bitcast %union.anon.3161* %387 to %"class.blink::NGPhysicalLineBoxFragment"**
  %389 = load %"class.blink::NGPhysicalLineBoxFragment"*, %"class.blink::NGPhysicalLineBoxFragment"** %388, align 8
  %390 = icmp eq %"class.blink::NGPhysicalLineBoxFragment"* %389, null
  br i1 %390, label %395, label %391

391:                                              ; preds = %386
  %392 = getelementptr inbounds %"class.blink::NGPhysicalLineBoxFragment", %"class.blink::NGPhysicalLineBoxFragment"* %389, i64 0, i32 0, i32 4, i32 0
  %393 = bitcast %"class.blink::NGBreakToken"** %392 to %"class.blink::NGInlineBreakToken"**
  %394 = load %"class.blink::NGInlineBreakToken"*, %"class.blink::NGInlineBreakToken"** %393, align 8
  br label %395

395:                                              ; preds = %391, %386, %380
  %396 = phi %"class.blink::NGInlineBreakToken"* [ %394, %391 ], [ null, %386 ], [ null, %380 ]
  call void @_ZN5blink14NGInlineCursor14MoveToNextLineEv(%"class.blink::NGInlineCursor"* nonnull %6) #15, !noalias !24
  %397 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %63, align 8, !noalias !24
  %398 = icmp eq %"class.blink::NGFragmentItem"* %397, null
  br i1 %398, label %399, label %400

399:                                              ; preds = %395
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %155, i8 0, i64 16, i1 false) #15, !alias.scope !24
  br label %413

400:                                              ; preds = %395
  %401 = icmp eq %"class.blink::NGInlineBreakToken"* %396, null
  br i1 %401, label %407, label %402

402:                                              ; preds = %400
  %403 = getelementptr inbounds %"class.blink::NGInlineBreakToken", %"class.blink::NGInlineBreakToken"* %396, i64 0, i32 0, i32 4
  %404 = load i16, i16* %403, align 8, !noalias !24
  %405 = and i16 %404, 4
  %406 = icmp eq i16 %405, 0
  br i1 %406, label %408, label %407

407:                                              ; preds = %402, %400
  br label %380

408:                                              ; preds = %402
  %409 = getelementptr inbounds %"class.blink::NGInlineBreakToken", %"class.blink::NGInlineBreakToken"* %396, i64 0, i32 3
  %410 = load i32, i32* %409, align 4, !noalias !24
  call void @_ZNK5blink15NGOffsetMapping16GetFirstPositionEj(%"class.blink::PositionTemplate"* nonnull sret %10, %"class.blink::NGOffsetMapping"* nonnull %73, i32 %410) #15
  %411 = load i64, i64* %156, align 8
  br label %413

412:                                              ; preds = %377
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %155, i8 0, i64 16, i1 false) #15, !alias.scope !24
  br label %413

413:                                              ; preds = %399, %408, %412
  %414 = phi i64 [ 0, %399 ], [ %411, %408 ], [ 0, %412 ]
  store atomic i64 %414, i64* %146 monotonic, align 8
  %415 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %416 = icmp eq i32 %415, 0
  %417 = inttoptr i64 %414 to %"class.blink::Node"*
  br i1 %416, label %422, label %418

418:                                              ; preds = %413
  %419 = inttoptr i64 %414 to i8*
  %420 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %419) #15
  %421 = load %"class.blink::Node"*, %"class.blink::Node"** %83, align 8
  br label %422

422:                                              ; preds = %413, %418
  %423 = phi %"class.blink::Node"* [ %417, %413 ], [ %421, %418 ]
  %424 = load i64, i64* %158, align 8
  store i64 %424, i64* %149, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %155) #15
  %425 = icmp eq %"class.blink::Node"* %423, %178
  br i1 %425, label %377, label %426

426:                                              ; preds = %422, %374
  %427 = load i32, i32* %179, align 8
  %428 = and i32 %427, 2
  %429 = icmp eq i32 %428, 0
  br i1 %429, label %435, label %430

430:                                              ; preds = %426
  %431 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %178, i64 1
  %432 = bitcast %"class.blink::Node"* %431 to %"class.blink::Node"**
  %433 = load %"class.blink::Node"*, %"class.blink::Node"** %432, align 8
  %434 = icmp eq %"class.blink::Node"* %433, null
  br i1 %434, label %435, label %443

435:                                              ; preds = %430, %426
  %436 = icmp eq %"class.blink::Node"* %178, %29
  br i1 %436, label %159, label %437

437:                                              ; preds = %435
  %438 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %178, i64 0, i32 5, i32 0, i32 0
  %439 = load %"class.blink::Node"*, %"class.blink::Node"** %438, align 8
  %440 = icmp eq %"class.blink::Node"* %439, null
  br i1 %440, label %441, label %443

441:                                              ; preds = %437
  %442 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %178, %"class.blink::Node"* %29) #15
  br label %443

443:                                              ; preds = %430, %437, %441
  %444 = phi %"class.blink::Node"* [ %442, %441 ], [ %439, %437 ], [ %433, %430 ]
  %445 = icmp eq %"class.blink::Node"* %444, null
  br i1 %445, label %159, label %177

446:                                              ; preds = %75, %176, %66
  %447 = phi %"class.WTF::StringImpl"* [ %71, %66 ], [ %160, %176 ], [ %80, %75 ]
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %62) #15
  br label %783

448:                                              ; preds = %54
  %449 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %46, i64 0, i32 1, i32 0, i32 0
  %450 = bitcast %"class.blink::InlineFlowBox"** %449 to %"class.blink::RootInlineBox"**
  %451 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %450, align 8
  %452 = icmp eq %"class.blink::RootInlineBox"* %451, null
  br i1 %452, label %453, label %459

453:                                              ; preds = %448
  %454 = bitcast %"class.blink::TextControlElement"* %0 to %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)***
  %455 = load %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)*** %454, align 8
  %456 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)** %455, i64 195
  %457 = load %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::TextControlElement"*)** %456, align 8
  %458 = tail call %"class.WTF::StringImpl"* %457(%"class.blink::TextControlElement"* %0) #15
  br label %783

459:                                              ; preds = %448, %465
  %460 = phi %"class.blink::RootInlineBox"* [ %463, %465 ], [ %451, %448 ]
  %461 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %460, i64 0, i32 0, i32 5
  %462 = bitcast %"class.blink::InlineFlowBox"** %461 to %"class.blink::RootInlineBox"**
  %463 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %462, align 8
  %464 = icmp eq %"class.blink::RootInlineBox"* %463, null
  br i1 %464, label %485, label %465

465:                                              ; preds = %459
  %466 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %460, i64 0, i32 0, i32 0, i32 7, i32 0
  %467 = load i32, i32* %466, align 4
  %468 = and i32 %467, 4096
  %469 = icmp eq i32 %468, 0
  br i1 %469, label %470, label %459

470:                                              ; preds = %465
  %471 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %460, i64 0, i32 2, i32 0
  %472 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %471, align 8
  %473 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %472, i64 0, i32 4
  %474 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %473 to i96*
  %475 = load i96, i96* %474, align 4
  %476 = and i96 %475, 16777216
  %477 = icmp eq i96 %476, 0
  br i1 %477, label %478, label %481

478:                                              ; preds = %470
  %479 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %472, i64 0, i32 6, i32 0, i32 0
  %480 = load %"class.blink::Node"*, %"class.blink::Node"** %479, align 8
  br label %481

481:                                              ; preds = %478, %470
  %482 = phi %"class.blink::Node"* [ %480, %478 ], [ null, %470 ]
  %483 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %460, i64 0, i32 1
  %484 = load i32, i32* %483, align 4
  br label %485

485:                                              ; preds = %459, %481
  %486 = phi %"class.blink::Node"* [ %482, %481 ], [ null, %459 ]
  %487 = phi i32 [ %484, %481 ], [ 0, %459 ]
  %488 = bitcast %"class.WTF::StringBuilder"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %488) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %488, i8 -86, i64 48, i1 false)
  %489 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %11, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %489, align 8
  %490 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %11, i64 0, i32 1
  %491 = bitcast %union.anon.2794* %490 to i8*
  store i8 0, i8* %491, align 8
  %492 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %11, i64 0, i32 2
  store i32 0, i32* %492, align 8
  %493 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %11, i64 0, i32 3
  store i8 1, i8* %493, align 4
  %494 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %11, i64 0, i32 4
  store i8 0, i8* %494, align 1
  %495 = load i32, i32* %30, align 8
  %496 = and i32 %495, 2
  %497 = icmp eq i32 %496, 0
  br i1 %497, label %516, label %498

498:                                              ; preds = %485
  %499 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %29, i64 1
  %500 = bitcast %"class.blink::Node"* %499 to %"class.blink::Node"**
  %501 = load %"class.blink::Node"*, %"class.blink::Node"** %500, align 8
  %502 = icmp eq %"class.blink::Node"* %501, null
  br i1 %502, label %516, label %503

503:                                              ; preds = %498
  %504 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kBrTagE, align 8
  %505 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %504, i64 0, i32 0, i32 0, i32 0
  %506 = bitcast %"class.WTF::StringView"* %4 to i8*
  %507 = bitcast %"class.WTF::StringView"* %4 to i64*
  %508 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %509 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %510 = bitcast i8** %509 to i16**
  %511 = bitcast %"class.WTF::StringView"* %5 to i8*
  %512 = bitcast %"class.WTF::StringView"* %5 to i64*
  %513 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %514 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %515 = bitcast i8** %514 to i16**
  br label %534

516:                                              ; preds = %772, %780, %485, %498
  %517 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %11) #15
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %11) #15
  %518 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %489, align 8
  %519 = icmp eq %"class.WTF::StringImpl"* %518, null
  br i1 %519, label %533, label %520

520:                                              ; preds = %516
  %521 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %518, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %522 = load atomic i32, i32* %521 monotonic, align 4
  %523 = and i32 %522, 2
  %524 = icmp eq i32 %523, 0
  %525 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %518, i64 0, i32 0
  %526 = load i32, i32* %525, align 4
  br i1 %524, label %527, label %529

527:                                              ; preds = %520
  %528 = add i32 %526, -1
  store i32 %528, i32* %525, align 4
  br label %529

529:                                              ; preds = %527, %520
  %530 = phi i32 [ %528, %527 ], [ %526, %520 ]
  %531 = icmp eq i32 %530, 0
  br i1 %531, label %532, label %533

532:                                              ; preds = %529
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %518) #15
  br label %533

533:                                              ; preds = %516, %529, %532
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %488) #15
  br label %783

534:                                              ; preds = %503, %780
  %535 = phi %"class.blink::Node"* [ %501, %503 ], [ %781, %780 ]
  %536 = phi %"class.blink::RootInlineBox"* [ %463, %503 ], [ %763, %780 ]
  %537 = phi i32 [ %487, %503 ], [ %762, %780 ]
  %538 = phi %"class.blink::Node"* [ %486, %503 ], [ %761, %780 ]
  %539 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %535, i64 0, i32 1
  %540 = load i32, i32* %539, align 8
  %541 = and i32 %540, 48
  %542 = icmp eq i32 %541, 0
  br i1 %542, label %543, label %553

543:                                              ; preds = %534
  %544 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %505, align 8
  %545 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %535, i64 1, i32 2
  %546 = bitcast %"class.blink::Member.318"* %545 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %547 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %546, align 8
  %548 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %547, i64 0, i32 3, i32 0, i32 0, i32 0
  %549 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %548, align 8
  %550 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %544, i64 0, i32 3, i32 0, i32 0, i32 0
  %551 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %550, align 8
  %552 = icmp eq %"class.WTF::StringImpl"* %549, %551
  br i1 %552, label %721, label %553

553:                                              ; preds = %534, %543
  %554 = and i32 %540, 12
  %555 = icmp eq i32 %554, 4
  br i1 %555, label %556, label %721

556:                                              ; preds = %553
  %557 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %535, i64 1
  %558 = bitcast %"class.blink::Node"* %557 to i8*
  %559 = load i8, i8* %558, align 8, !range !2
  %560 = icmp eq i8 %559, 0
  br i1 %560, label %565, label %561

561:                                              ; preds = %556
  %562 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %535, i64 1, i32 0, i32 0, i32 1
  %563 = bitcast %"class.blink::TraceWrapperV8Reference"* %562 to %"class.blink::ParkableString"*
  %564 = call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %563) #15
  br label %568

565:                                              ; preds = %556
  %566 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %535, i64 1, i32 1
  %567 = bitcast i32* %566 to %"class.WTF::String"*
  br label %568

568:                                              ; preds = %561, %565
  %569 = phi %"class.WTF::String"* [ %564, %561 ], [ %567, %565 ]
  %570 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %569, i64 0, i32 0, i32 0
  %571 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %570, align 8
  %572 = icmp eq %"class.WTF::StringImpl"* %571, null
  br i1 %572, label %593, label %573

573:                                              ; preds = %568
  %574 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %571, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %575 = load atomic i32, i32* %574 monotonic, align 4
  %576 = and i32 %575, 2
  %577 = icmp eq i32 %576, 0
  br i1 %577, label %578, label %590

578:                                              ; preds = %573
  %579 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %571, i64 0, i32 0
  %580 = load i32, i32* %579, align 4
  %581 = zext i32 %580 to i33
  %582 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %581, i33 1) #15
  %583 = extractvalue { i33, i1 } %582, 1
  %584 = extractvalue { i33, i1 } %582, 0
  %585 = icmp slt i33 %584, 0
  %586 = or i1 %583, %585
  br i1 %586, label %587, label %588, !prof !3

587:                                              ; preds = %578
  call void @llvm.trap() #15
  unreachable

588:                                              ; preds = %578
  %589 = trunc i33 %584 to i32
  store i32 %589, i32* %579, align 4
  br label %590

590:                                              ; preds = %573, %588
  %591 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %571, i64 0, i32 1
  %592 = load i32, i32* %591, align 4
  br label %593

593:                                              ; preds = %568, %590
  %594 = phi i32 [ %592, %590 ], [ 0, %568 ]
  %595 = icmp ne %"class.blink::Node"* %538, %535
  %596 = icmp ugt i32 %537, %594
  %597 = or i1 %595, %596
  br i1 %597, label %672, label %598

598:                                              ; preds = %593
  %599 = ptrtoint %"class.WTF::StringImpl"* %571 to i64
  %600 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %571, i64 0, i32 1
  %601 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %571, i64 1
  %602 = bitcast %"class.WTF::StringImpl"* %601 to i8*
  br label %603

603:                                              ; preds = %598, %665
  %604 = phi i32 [ 0, %598 ], [ %637, %665 ]
  %605 = phi %"class.blink::RootInlineBox"* [ %536, %598 ], [ %668, %665 ]
  %606 = phi i32 [ %537, %598 ], [ %667, %665 ]
  %607 = icmp ugt i32 %606, %604
  br i1 %607, label %608, label %636

608:                                              ; preds = %603
  br i1 %572, label %609, label %611

609:                                              ; preds = %608
  %610 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %613

611:                                              ; preds = %608
  %612 = load i32, i32* %600, align 4
  br label %613

613:                                              ; preds = %609, %611
  %614 = phi i8* [ null, %609 ], [ %602, %611 ]
  %615 = phi i64 [ %610, %609 ], [ %599, %611 ]
  %616 = phi i32 [ 0, %609 ], [ %612, %611 ]
  %617 = icmp ult i32 %606, %604
  %618 = icmp ugt i32 %606, %616
  %619 = or i1 %617, %618
  br i1 %619, label %635, label %620

620:                                              ; preds = %613
  %621 = sub i32 %606, %604
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %506) #15
  store i64 %615, i64* %507, align 8
  store i32 %621, i32* %508, align 8
  %622 = inttoptr i64 %615 to %"class.WTF::StringImpl"*
  %623 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %622, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %624 = load atomic i32, i32* %623 monotonic, align 4
  %625 = and i32 %624, 1
  %626 = icmp eq i32 %625, 0
  br i1 %626, label %630, label %627

627:                                              ; preds = %620
  %628 = zext i32 %604 to i64
  %629 = getelementptr inbounds i8, i8* %614, i64 %628
  store i8* %629, i8** %509, align 8
  br label %634

630:                                              ; preds = %620
  %631 = bitcast i8* %614 to i16*
  %632 = zext i32 %604 to i64
  %633 = getelementptr inbounds i16, i16* %631, i64 %632
  store i16* %633, i16** %510, align 8
  br label %634

634:                                              ; preds = %630, %627
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %11, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %506) #15
  br label %635

635:                                              ; preds = %613, %634
  call void @_ZN3WTF13StringBuilder6AppendEDs(%"class.WTF::StringBuilder"* nonnull %11, i16 zeroext 10)
  br label %636

636:                                              ; preds = %635, %603
  %637 = phi i32 [ %606, %635 ], [ %604, %603 ]
  %638 = icmp eq %"class.blink::RootInlineBox"* %605, null
  br i1 %638, label %665, label %639

639:                                              ; preds = %636, %645
  %640 = phi %"class.blink::RootInlineBox"* [ %643, %645 ], [ %605, %636 ]
  %641 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %640, i64 0, i32 0, i32 5
  %642 = bitcast %"class.blink::InlineFlowBox"** %641 to %"class.blink::RootInlineBox"**
  %643 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %642, align 8
  %644 = icmp eq %"class.blink::RootInlineBox"* %643, null
  br i1 %644, label %665, label %645

645:                                              ; preds = %639
  %646 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %640, i64 0, i32 0, i32 0, i32 7, i32 0
  %647 = load i32, i32* %646, align 4
  %648 = and i32 %647, 4096
  %649 = icmp eq i32 %648, 0
  br i1 %649, label %650, label %639

650:                                              ; preds = %645
  %651 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %640, i64 0, i32 2, i32 0
  %652 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %651, align 8
  %653 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %652, i64 0, i32 4
  %654 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %653 to i96*
  %655 = load i96, i96* %654, align 4
  %656 = and i96 %655, 16777216
  %657 = icmp eq i96 %656, 0
  br i1 %657, label %658, label %661

658:                                              ; preds = %650
  %659 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %652, i64 0, i32 6, i32 0, i32 0
  %660 = load %"class.blink::Node"*, %"class.blink::Node"** %659, align 8
  br label %661

661:                                              ; preds = %658, %650
  %662 = phi %"class.blink::Node"* [ %660, %658 ], [ null, %650 ]
  %663 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %640, i64 0, i32 1
  %664 = load i32, i32* %663, align 4
  br label %665

665:                                              ; preds = %639, %636, %661
  %666 = phi %"class.blink::Node"* [ %662, %661 ], [ null, %636 ], [ null, %639 ]
  %667 = phi i32 [ %664, %661 ], [ 0, %636 ], [ 0, %639 ]
  %668 = phi %"class.blink::RootInlineBox"* [ %643, %661 ], [ null, %636 ], [ null, %639 ]
  %669 = icmp ne %"class.blink::Node"* %666, %535
  %670 = icmp ugt i32 %667, %594
  %671 = or i1 %669, %670
  br i1 %671, label %672, label %603

672:                                              ; preds = %665, %593
  %673 = phi %"class.blink::Node"* [ %538, %593 ], [ %666, %665 ]
  %674 = phi i32 [ %537, %593 ], [ %667, %665 ]
  %675 = phi %"class.blink::RootInlineBox"* [ %536, %593 ], [ %668, %665 ]
  %676 = phi i32 [ 0, %593 ], [ %637, %665 ]
  br i1 %572, label %677, label %679

677:                                              ; preds = %672
  %678 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %685

679:                                              ; preds = %672
  %680 = ptrtoint %"class.WTF::StringImpl"* %571 to i64
  %681 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %571, i64 0, i32 1
  %682 = load i32, i32* %681, align 4
  %683 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %571, i64 1
  %684 = bitcast %"class.WTF::StringImpl"* %683 to i8*
  br label %685

685:                                              ; preds = %677, %679
  %686 = phi i8* [ null, %677 ], [ %684, %679 ]
  %687 = phi i64 [ %678, %677 ], [ %680, %679 ]
  %688 = phi i32 [ 0, %677 ], [ %682, %679 ]
  %689 = icmp ult i32 %594, %676
  %690 = icmp ugt i32 %594, %688
  %691 = or i1 %689, %690
  br i1 %691, label %707, label %692

692:                                              ; preds = %685
  %693 = sub i32 %594, %676
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %511) #15
  store i64 %687, i64* %512, align 8
  store i32 %693, i32* %513, align 8
  %694 = inttoptr i64 %687 to %"class.WTF::StringImpl"*
  %695 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %694, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %696 = load atomic i32, i32* %695 monotonic, align 4
  %697 = and i32 %696, 1
  %698 = icmp eq i32 %697, 0
  br i1 %698, label %702, label %699

699:                                              ; preds = %692
  %700 = zext i32 %676 to i64
  %701 = getelementptr inbounds i8, i8* %686, i64 %700
  store i8* %701, i8** %514, align 8
  br label %706

702:                                              ; preds = %692
  %703 = bitcast i8* %686 to i16*
  %704 = zext i32 %676 to i64
  %705 = getelementptr inbounds i16, i16* %703, i64 %704
  store i16* %705, i16** %515, align 8
  br label %706

706:                                              ; preds = %702, %699
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %11, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %511) #15
  br label %707

707:                                              ; preds = %685, %706
  br i1 %572, label %721, label %708

708:                                              ; preds = %707
  %709 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %571, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %710 = load atomic i32, i32* %709 monotonic, align 4
  %711 = and i32 %710, 2
  %712 = icmp eq i32 %711, 0
  %713 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %571, i64 0, i32 0
  %714 = load i32, i32* %713, align 4
  br i1 %712, label %715, label %717

715:                                              ; preds = %708
  %716 = add i32 %714, -1
  store i32 %716, i32* %713, align 4
  br label %717

717:                                              ; preds = %715, %708
  %718 = phi i32 [ %716, %715 ], [ %714, %708 ]
  %719 = icmp eq i32 %718, 0
  br i1 %719, label %720, label %721

720:                                              ; preds = %717
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %571) #15
  br label %721

721:                                              ; preds = %553, %720, %717, %707, %543
  %722 = phi %"class.blink::Node"* [ %538, %543 ], [ %538, %553 ], [ %673, %707 ], [ %673, %717 ], [ %673, %720 ]
  %723 = phi i32 [ %537, %543 ], [ %537, %553 ], [ %674, %707 ], [ %674, %717 ], [ %674, %720 ]
  %724 = phi %"class.blink::RootInlineBox"* [ %536, %543 ], [ %536, %553 ], [ %675, %707 ], [ %675, %717 ], [ %675, %720 ]
  %725 = icmp eq %"class.blink::Node"* %722, %535
  br i1 %725, label %726, label %760

726:                                              ; preds = %721, %755
  %727 = phi %"class.blink::RootInlineBox"* [ %758, %755 ], [ %724, %721 ]
  %728 = icmp eq %"class.blink::RootInlineBox"* %727, null
  br i1 %728, label %755, label %729

729:                                              ; preds = %726, %735
  %730 = phi %"class.blink::RootInlineBox"* [ %733, %735 ], [ %727, %726 ]
  %731 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %730, i64 0, i32 0, i32 5
  %732 = bitcast %"class.blink::InlineFlowBox"** %731 to %"class.blink::RootInlineBox"**
  %733 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %732, align 8
  %734 = icmp eq %"class.blink::RootInlineBox"* %733, null
  br i1 %734, label %755, label %735

735:                                              ; preds = %729
  %736 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %730, i64 0, i32 0, i32 0, i32 7, i32 0
  %737 = load i32, i32* %736, align 4
  %738 = and i32 %737, 4096
  %739 = icmp eq i32 %738, 0
  br i1 %739, label %740, label %729

740:                                              ; preds = %735
  %741 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %730, i64 0, i32 2, i32 0
  %742 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %741, align 8
  %743 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %742, i64 0, i32 4
  %744 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %743 to i96*
  %745 = load i96, i96* %744, align 4
  %746 = and i96 %745, 16777216
  %747 = icmp eq i96 %746, 0
  br i1 %747, label %748, label %751

748:                                              ; preds = %740
  %749 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %742, i64 0, i32 6, i32 0, i32 0
  %750 = load %"class.blink::Node"*, %"class.blink::Node"** %749, align 8
  br label %751

751:                                              ; preds = %748, %740
  %752 = phi %"class.blink::Node"* [ %750, %748 ], [ null, %740 ]
  %753 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %730, i64 0, i32 1
  %754 = load i32, i32* %753, align 4
  br label %755

755:                                              ; preds = %729, %726, %751
  %756 = phi %"class.blink::Node"* [ %752, %751 ], [ null, %726 ], [ null, %729 ]
  %757 = phi i32 [ %754, %751 ], [ 0, %726 ], [ 0, %729 ]
  %758 = phi %"class.blink::RootInlineBox"* [ %733, %751 ], [ null, %726 ], [ null, %729 ]
  %759 = icmp eq %"class.blink::Node"* %756, %535
  br i1 %759, label %726, label %760

760:                                              ; preds = %755, %721
  %761 = phi %"class.blink::Node"* [ %722, %721 ], [ %756, %755 ]
  %762 = phi i32 [ %723, %721 ], [ %757, %755 ]
  %763 = phi %"class.blink::RootInlineBox"* [ %724, %721 ], [ %758, %755 ]
  %764 = load i32, i32* %539, align 8
  %765 = and i32 %764, 2
  %766 = icmp eq i32 %765, 0
  br i1 %766, label %772, label %767

767:                                              ; preds = %760
  %768 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %535, i64 1
  %769 = bitcast %"class.blink::Node"* %768 to %"class.blink::Node"**
  %770 = load %"class.blink::Node"*, %"class.blink::Node"** %769, align 8
  %771 = icmp eq %"class.blink::Node"* %770, null
  br i1 %771, label %772, label %780

772:                                              ; preds = %767, %760
  %773 = icmp eq %"class.blink::Node"* %535, %29
  br i1 %773, label %516, label %774

774:                                              ; preds = %772
  %775 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %535, i64 0, i32 5, i32 0, i32 0
  %776 = load %"class.blink::Node"*, %"class.blink::Node"** %775, align 8
  %777 = icmp eq %"class.blink::Node"* %776, null
  br i1 %777, label %778, label %780

778:                                              ; preds = %774
  %779 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %535, %"class.blink::Node"* %29) #15
  br label %780

780:                                              ; preds = %767, %774, %778
  %781 = phi %"class.blink::Node"* [ %779, %778 ], [ %776, %774 ], [ %770, %767 ]
  %782 = icmp eq %"class.blink::Node"* %781, null
  br i1 %782, label %516, label %534

783:                                              ; preds = %453, %533, %48, %446, %22
  %784 = phi %"class.WTF::StringImpl"* [ %27, %22 ], [ %447, %446 ], [ %53, %48 ], [ %517, %533 ], [ %458, %453 ]
  ret %"class.WTF::StringImpl"* %784
}

declare void @_ZN5blink14NGInlineCursorC1ERKNS_15LayoutBlockFlowE(%"class.blink::NGInlineCursor"*, %"class.blink::LayoutBlockFlow"* dereferenceable(280)) unnamed_addr #1

declare %"class.blink::NGOffsetMapping"* @_ZN5blink12NGInlineNode16GetOffsetMappingEPNS_15LayoutBlockFlowE(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::TextControlElement"* @_ZN5blink20EnclosingTextControlEPKNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #0 {
  %2 = icmp eq %"class.blink::Node"* %0, null
  br i1 %2, label %25, label %3

3:                                                ; preds = %1
  %4 = tail call %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"* nonnull %0) #15
  %5 = icmp eq %"class.blink::Element"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 12
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %25

11:                                               ; preds = %6
  %12 = bitcast %"class.blink::Element"* %4 to i1 (%"class.blink::Element"*)***
  %13 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %13, i64 126
  %15 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.blink::Element"* nonnull %4) #15
  br i1 %16, label %17, label %25

17:                                               ; preds = %11
  %18 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* nonnull %0) #15
  %19 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %18, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 196608
  %22 = icmp eq i32 %21, 131072
  %23 = bitcast %"class.blink::Element"* %4 to %"class.blink::TextControlElement"*
  %24 = select i1 %22, %"class.blink::TextControlElement"* %23, %"class.blink::TextControlElement"* null
  ret %"class.blink::TextControlElement"* %24

25:                                               ; preds = %6, %11, %3, %1
  ret %"class.blink::TextControlElement"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::TextControlElement"* @_ZN5blink20EnclosingTextControlERKNS_16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEE(%"class.blink::PositionTemplate.3176"* dereferenceable(16)) local_unnamed_addr #0 {
  %2 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate.3176"* %0) #15
  %3 = icmp eq %"class.blink::Node"* %2, null
  br i1 %3, label %40, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 12
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %18

9:                                                ; preds = %4
  %10 = bitcast %"class.blink::Node"* %2 to %"class.blink::Element"*
  %11 = bitcast %"class.blink::Node"* %2 to i1 (%"class.blink::Element"*)***
  %12 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %12, i64 126
  %14 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.blink::Element"* nonnull %10) #15
  br i1 %15, label %16, label %18

16:                                               ; preds = %9
  %17 = bitcast %"class.blink::Node"* %2 to %"class.blink::TextControlElement"*
  br label %40

18:                                               ; preds = %9, %4
  %19 = tail call %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"* nonnull %2) #15
  %20 = icmp eq %"class.blink::Element"* %19, null
  br i1 %20, label %40, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %19, i64 0, i32 0, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 12
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %40

26:                                               ; preds = %21
  %27 = bitcast %"class.blink::Element"* %19 to i1 (%"class.blink::Element"*)***
  %28 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %27, align 8
  %29 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %28, i64 126
  %30 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %29, align 8
  %31 = tail call zeroext i1 %30(%"class.blink::Element"* nonnull %19) #15
  br i1 %31, label %32, label %40

32:                                               ; preds = %26
  %33 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* nonnull %2) #15
  %34 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %33, i64 0, i32 4
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, 196608
  %37 = icmp eq i32 %36, 131072
  %38 = bitcast %"class.blink::Element"* %19 to %"class.blink::TextControlElement"*
  %39 = select i1 %37, %"class.blink::TextControlElement"* %38, %"class.blink::TextControlElement"* null
  br label %40

40:                                               ; preds = %1, %32, %26, %21, %18, %16
  %41 = phi %"class.blink::TextControlElement"* [ %17, %16 ], [ %39, %32 ], [ null, %26 ], [ null, %21 ], [ null, %18 ], [ null, %1 ]
  ret %"class.blink::TextControlElement"* %41
}

declare %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate.3176"*) local_unnamed_addr #1

declare %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"*) local_unnamed_addr #1

declare %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink18TextControlElement20DirectionForFormDataEv(%"class.blink::TextControlElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = icmp eq %"class.blink::TextControlElement"* %0, null
  br i1 %4, label %248, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kDirAttrE, align 8
  %8 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %10 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %11 = sext i8 %10 to i32
  %12 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %13 = sext i8 %12 to i32
  %14 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %15 = sext i8 %14 to i32
  %16 = bitcast %"class.WTF::StringView"* %3 to i8*
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %19 = bitcast i8** %18 to %"class.WTF::StringImpl"**
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  br label %21

21:                                               ; preds = %246, %5
  %22 = phi %"class.blink::HTMLElement"* [ %6, %5 ], [ %247, %246 ]
  %23 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %22, i64 0, i32 0, i32 3, i32 0, i32 0
  %24 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %23, align 8
  %25 = icmp eq %"class.blink::ElementData"* %24, null
  br i1 %25, label %75, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %24, i64 0, i32 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = and i32 %28, 1
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %26
  %32 = bitcast %"class.blink::ElementData"* %24 to %"class.blink::UniqueElementData"*
  %33 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %24, i64 1, i32 1
  %34 = bitcast %"class.blink::Member.354"* %33 to %"class.blink::Attribute"**
  %35 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %32, i64 0, i32 2, i32 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  br label %43

38:                                               ; preds = %26
  %39 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %24, i64 1
  %40 = bitcast %"class.blink::ElementData"* %39 to %"class.blink::Attribute"*
  %41 = lshr i32 %28, 1
  %42 = and i32 %41, 268435455
  br label %43

43:                                               ; preds = %38, %31
  %44 = phi %"class.blink::Attribute"* [ %40, %38 ], [ %35, %31 ]
  %45 = phi i32 [ %42, %38 ], [ %37, %31 ]
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %44, i64 %46
  %48 = icmp eq i32 %45, 0
  br i1 %48, label %75, label %49

49:                                               ; preds = %43
  %50 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %8, align 8
  %51 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %50, i64 0, i32 3, i32 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %50, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %53

53:                                               ; preds = %68, %49
  %54 = phi %"class.blink::Attribute"* [ %44, %49 ], [ %69, %68 ]
  %55 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %54, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %55, align 8
  %57 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %56, %50
  br i1 %57, label %71, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %56, i64 0, i32 3, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %60, %61
  br i1 %62, label %63, label %68

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %56, i64 0, i32 4, i32 0, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %65, %66
  br i1 %67, label %71, label %68

68:                                               ; preds = %63, %58
  %69 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %54, i64 1
  %70 = icmp eq %"class.blink::Attribute"* %69, %47
  br i1 %70, label %75, label %53

71:                                               ; preds = %63, %53
  %72 = icmp eq %"class.blink::Attribute"* %54, null
  %73 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %54, i64 0, i32 1
  %74 = select i1 %72, %"class.WTF::AtomicString"* %9, %"class.WTF::AtomicString"* %73
  br label %75

75:                                               ; preds = %68, %71, %21, %43
  %76 = phi %"class.WTF::AtomicString"* [ %9, %43 ], [ %9, %21 ], [ %74, %71 ], [ %9, %68 ]
  %77 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %76, i64 0, i32 0, i32 0, i32 0
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %232, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 1
  %84 = bitcast %"class.WTF::StringImpl"* %83 to i8*
  %85 = icmp eq i32 %82, 3
  br i1 %85, label %86, label %222

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 1
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %106, label %91

91:                                               ; preds = %86
  %92 = load i8, i8* %84, align 1
  %93 = zext i8 %92 to i64
  %94 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %93
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i32
  %97 = icmp eq i32 %96, %11
  br i1 %97, label %98, label %145

98:                                               ; preds = %91
  %99 = getelementptr inbounds i8, i8* %84, i64 1
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i64
  %102 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %101
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i32
  %105 = icmp eq i32 %104, %13
  br i1 %105, label %137, label %145

106:                                              ; preds = %86
  %107 = bitcast %"class.WTF::StringImpl"* %83 to i16*
  %108 = load i16, i16* %107, align 2
  %109 = add i16 %108, -65
  %110 = icmp ult i16 %109, 26
  %111 = zext i1 %110 to i16
  %112 = shl nuw nsw i16 %111, 5
  %113 = or i16 %112, %108
  %114 = zext i16 %113 to i32
  %115 = icmp eq i32 %114, %11
  br i1 %115, label %116, label %145

116:                                              ; preds = %106
  %117 = getelementptr inbounds i16, i16* %107, i64 1
  %118 = load i16, i16* %117, align 2
  %119 = add i16 %118, -65
  %120 = icmp ult i16 %119, 26
  %121 = zext i1 %120 to i16
  %122 = shl nuw nsw i16 %121, 5
  %123 = or i16 %122, %118
  %124 = zext i16 %123 to i32
  %125 = icmp eq i32 %124, %13
  br i1 %125, label %126, label %145

126:                                              ; preds = %116
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 1, i32 1
  %128 = bitcast i32* %127 to i16*
  %129 = load i16, i16* %128, align 2
  %130 = add i16 %129, -65
  %131 = icmp ult i16 %130, 26
  %132 = zext i1 %131 to i16
  %133 = shl nuw nsw i16 %132, 5
  %134 = or i16 %133, %129
  %135 = zext i16 %134 to i32
  %136 = icmp eq i32 %135, %15
  br i1 %136, label %204, label %145

137:                                              ; preds = %98
  %138 = getelementptr inbounds i8, i8* %84, i64 2
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i64
  %141 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %140
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i32
  %144 = icmp eq i32 %143, %15
  br i1 %144, label %204, label %145

145:                                              ; preds = %98, %91, %116, %106, %126, %137
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 1
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %165, label %150

150:                                              ; preds = %145
  %151 = load i8, i8* %84, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i32
  %156 = icmp eq i32 %155, %15
  br i1 %156, label %157, label %222

157:                                              ; preds = %150
  %158 = getelementptr inbounds i8, i8* %84, i64 1
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i64
  %161 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %160
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i32
  %164 = icmp eq i32 %163, %13
  br i1 %164, label %196, label %222

165:                                              ; preds = %145
  %166 = bitcast %"class.WTF::StringImpl"* %83 to i16*
  %167 = load i16, i16* %166, align 2
  %168 = add i16 %167, -65
  %169 = icmp ult i16 %168, 26
  %170 = zext i1 %169 to i16
  %171 = shl nuw nsw i16 %170, 5
  %172 = or i16 %171, %167
  %173 = zext i16 %172 to i32
  %174 = icmp eq i32 %173, %15
  br i1 %174, label %175, label %222

175:                                              ; preds = %165
  %176 = getelementptr inbounds i16, i16* %166, i64 1
  %177 = load i16, i16* %176, align 2
  %178 = add i16 %177, -65
  %179 = icmp ult i16 %178, 26
  %180 = zext i1 %179 to i16
  %181 = shl nuw nsw i16 %180, 5
  %182 = or i16 %181, %177
  %183 = zext i16 %182 to i32
  %184 = icmp eq i32 %183, %13
  br i1 %184, label %185, label %222

185:                                              ; preds = %175
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 1, i32 1
  %187 = bitcast i32* %186 to i16*
  %188 = load i16, i16* %187, align 2
  %189 = add i16 %188, -65
  %190 = icmp ult i16 %189, 26
  %191 = zext i1 %190 to i16
  %192 = shl nuw nsw i16 %191, 5
  %193 = or i16 %192, %188
  %194 = zext i16 %193 to i32
  %195 = icmp eq i32 %194, %11
  br i1 %195, label %204, label %222

196:                                              ; preds = %157
  %197 = getelementptr inbounds i8, i8* %84, i64 2
  %198 = load i8, i8* %197, align 1
  %199 = zext i8 %198 to i64
  %200 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %199
  %201 = load i8, i8* %200, align 1
  %202 = zext i8 %201 to i32
  %203 = icmp eq i32 %202, %11
  br i1 %203, label %204, label %222

204:                                              ; preds = %196, %185, %126, %137
  %205 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %78, %"class.WTF::StringImpl"** %205, align 8
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %207 = load atomic i32, i32* %206 monotonic, align 4
  %208 = and i32 %207, 2
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %249

210:                                              ; preds = %204
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %212 = load i32, i32* %211, align 4
  %213 = zext i32 %212 to i33
  %214 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %213, i33 1) #15
  %215 = extractvalue { i33, i1 } %214, 1
  %216 = extractvalue { i33, i1 } %214, 0
  %217 = icmp slt i33 %216, 0
  %218 = or i1 %215, %217
  br i1 %218, label %219, label %220, !prof !3

219:                                              ; preds = %210
  call void @llvm.trap() #15
  unreachable

220:                                              ; preds = %210
  %221 = trunc i33 %216 to i32
  store i32 %221, i32* %211, align 4
  br label %249

222:                                              ; preds = %80, %157, %150, %175, %165, %185, %196
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #15
  store %"class.WTF::StringImpl"* %78, %"class.WTF::StringImpl"** %17, align 8
  %223 = load i32, i32* %81, align 4
  store %"class.WTF::StringImpl"* %83, %"class.WTF::StringImpl"** %19, align 8
  store i32 %223, i32* %20, align 8
  %224 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, [5 x i8]* nonnull dereferenceable(5) @.str.18)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #15
  br i1 %224, label %225, label %232

225:                                              ; preds = %222
  %226 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %22, i64 0, i32 0, i32 0, i32 0, i32 1
  %227 = load i32, i32* %226, align 8
  %228 = and i32 %227, 268435456
  %229 = icmp eq i32 %228, 0
  %230 = select i1 %229, [4 x i8]* @.str.17, [4 x i8]* @.str.16
  %231 = getelementptr inbounds [4 x i8], [4 x i8]* %230, i64 0, i64 0
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* nonnull %231, i64 3) #15
  br label %249

232:                                              ; preds = %75, %222
  %233 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %22, i64 0, i32 0, i32 0, i32 0
  %234 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %233) #15
  %235 = icmp eq %"class.blink::ContainerNode"* %234, null
  br i1 %235, label %248, label %236

236:                                              ; preds = %232, %242
  %237 = phi %"class.blink::ContainerNode"* [ %244, %242 ], [ %234, %232 ]
  %238 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %237, i64 0, i32 0, i32 1
  %239 = load i32, i32* %238, align 8
  %240 = and i32 %239, 48
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %246, label %242

242:                                              ; preds = %236
  %243 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %237, i64 0, i32 0
  %244 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %243) #15
  %245 = icmp eq %"class.blink::ContainerNode"* %244, null
  br i1 %245, label %248, label %236

246:                                              ; preds = %236
  %247 = bitcast %"class.blink::ContainerNode"* %237 to %"class.blink::HTMLElement"*
  br label %21

248:                                              ; preds = %232, %242, %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17, i64 0, i64 0), i64 3) #15
  br label %249

249:                                              ; preds = %220, %204, %225, %248
  %250 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %251 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %250, align 8
  ret %"class.WTF::StringImpl"* %251
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [5 x i8]* dereferenceable(5)) local_unnamed_addr #8 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 4
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %109, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %123, %14, %28, %109, %42, %59, %77, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %14 ], [ false, %28 ], [ false, %109 ], [ %136, %123 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  ret i1 %108

109:                                              ; preds = %28
  %110 = getelementptr inbounds i8, i8* %15, i64 2
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i64
  %113 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 2
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i64
  %119 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = sext i8 %120 to i32
  %122 = icmp eq i32 %115, %121
  br i1 %122, label %123, label %75

123:                                              ; preds = %109
  %124 = getelementptr inbounds i8, i8* %15, i64 3
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i64
  %127 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 3
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i64
  %133 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = sext i8 %134 to i32
  %136 = icmp eq i32 %129, %135
  br label %75
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18TextControlElement16SetAutofillValueERKN3WTF6StringE(%"class.blink::TextControlElement"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #15
  store i32 -1431655766, i32* %3, align 4
  %7 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kMaxlengthAttrE, align 8
  %8 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %8, align 8
  %10 = icmp eq %"class.blink::ElementData"* %9, null
  br i1 %10, label %61, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %9, i64 0, i32 0, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %11
  %17 = bitcast %"class.blink::ElementData"* %9 to %"class.blink::UniqueElementData"*
  %18 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %9, i64 1, i32 1
  %19 = bitcast %"class.blink::Member.354"* %18 to %"class.blink::Attribute"**
  %20 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %17, i64 0, i32 2, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  br label %28

23:                                               ; preds = %11
  %24 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %9, i64 1
  %25 = bitcast %"class.blink::ElementData"* %24 to %"class.blink::Attribute"*
  %26 = lshr i32 %13, 1
  %27 = and i32 %26, 268435455
  br label %28

28:                                               ; preds = %23, %16
  %29 = phi %"class.blink::Attribute"* [ %25, %23 ], [ %20, %16 ]
  %30 = phi i32 [ %27, %23 ], [ %22, %16 ]
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %29, i64 %31
  %33 = icmp eq i32 %30, 0
  br i1 %33, label %61, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %7, i64 0, i32 0, i32 0
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %39

39:                                               ; preds = %54, %34
  %40 = phi %"class.blink::Attribute"* [ %29, %34 ], [ %55, %54 ]
  %41 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %40, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %41, align 8
  %43 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %42, %36
  br i1 %43, label %57, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %42, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %46, %47
  br i1 %48, label %49, label %54

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %42, i64 0, i32 4, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %51, %52
  br i1 %53, label %57, label %54

54:                                               ; preds = %49, %44
  %55 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %40, i64 1
  %56 = icmp eq %"class.blink::Attribute"* %55, %32
  br i1 %56, label %61, label %39

57:                                               ; preds = %49, %39
  %58 = icmp eq %"class.blink::Attribute"* %40, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %40, i64 0, i32 1
  br label %63

61:                                               ; preds = %54, %57, %28, %2
  %62 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %63

63:                                               ; preds = %61, %59
  %64 = phi %"class.WTF::AtomicString"* [ %62, %61 ], [ %60, %59 ]
  %65 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %64, i64 0, i32 0
  %66 = call zeroext i1 @_ZN5blink16ParseHTMLIntegerERKN3WTF6StringERi(%"class.WTF::String"* dereferenceable(8) %65, i32* nonnull dereferenceable(4) %3) #15
  br i1 %66, label %67, label %71

67:                                               ; preds = %63
  %68 = load i32, i32* %3, align 4
  %69 = icmp sgt i32 %68, -1
  %70 = select i1 %69, i32 %68, i32 -1
  br label %71

71:                                               ; preds = %63, %67
  %72 = phi i32 [ %70, %67 ], [ -1, %63 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #15
  %73 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %1, i32 0, i32 %72) #15
  %74 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %73, %"class.WTF::StringImpl"** %74, align 8
  %75 = bitcast %"class.blink::TextControlElement"* %0 to void (%"class.blink::TextControlElement"*, %"class.WTF::String"*, i32, i32)***
  %76 = load void (%"class.blink::TextControlElement"*, %"class.WTF::String"*, i32, i32)**, void (%"class.blink::TextControlElement"*, %"class.WTF::String"*, i32, i32)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.blink::TextControlElement"*, %"class.WTF::String"*, i32, i32)*, void (%"class.blink::TextControlElement"*, %"class.WTF::String"*, i32, i32)** %76, i64 196
  %78 = load void (%"class.blink::TextControlElement"*, %"class.WTF::String"*, i32, i32)*, void (%"class.blink::TextControlElement"*, %"class.WTF::String"*, i32, i32)** %77, align 8
  call void %78(%"class.blink::TextControlElement"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %4, i32 3, i32 0) #15
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %94, label %81

81:                                               ; preds = %71
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %81
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %81
  %91 = phi i32 [ %89, %88 ], [ %87, %81 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %79) #15
  br label %94

94:                                               ; preds = %71, %90, %93
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18TextControlElement17SetSuggestedValueERKN3WTF6StringE(%"class.blink::TextControlElement"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #15
  store i32 -1431655766, i32* %3, align 4
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kMaxlengthAttrE, align 8
  %6 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %6, align 8
  %8 = icmp eq %"class.blink::ElementData"* %7, null
  br i1 %8, label %59, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %7, i64 0, i32 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %21, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.blink::ElementData"* %7 to %"class.blink::UniqueElementData"*
  %16 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %7, i64 1, i32 1
  %17 = bitcast %"class.blink::Member.354"* %16 to %"class.blink::Attribute"**
  %18 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %15, i64 0, i32 2, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  br label %26

21:                                               ; preds = %9
  %22 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %7, i64 1
  %23 = bitcast %"class.blink::ElementData"* %22 to %"class.blink::Attribute"*
  %24 = lshr i32 %11, 1
  %25 = and i32 %24, 268435455
  br label %26

26:                                               ; preds = %21, %14
  %27 = phi %"class.blink::Attribute"* [ %23, %21 ], [ %18, %14 ]
  %28 = phi i32 [ %25, %21 ], [ %20, %14 ]
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %27, i64 %29
  %31 = icmp eq i32 %28, 0
  br i1 %31, label %59, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %5, i64 0, i32 0, i32 0
  %34 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %34, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %34, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %37

37:                                               ; preds = %52, %32
  %38 = phi %"class.blink::Attribute"* [ %27, %32 ], [ %53, %52 ]
  %39 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %39, align 8
  %41 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %40, %34
  br i1 %41, label %55, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %40, i64 0, i32 3, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %44, %45
  br i1 %46, label %47, label %52

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %49, %50
  br i1 %51, label %55, label %52

52:                                               ; preds = %47, %42
  %53 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %38, i64 1
  %54 = icmp eq %"class.blink::Attribute"* %53, %30
  br i1 %54, label %59, label %37

55:                                               ; preds = %47, %37
  %56 = icmp eq %"class.blink::Attribute"* %38, null
  br i1 %56, label %59, label %57

57:                                               ; preds = %55
  %58 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %38, i64 0, i32 1
  br label %61

59:                                               ; preds = %52, %55, %26, %2
  %60 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %61

61:                                               ; preds = %59, %57
  %62 = phi %"class.WTF::AtomicString"* [ %60, %59 ], [ %58, %57 ]
  %63 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %62, i64 0, i32 0
  %64 = call zeroext i1 @_ZN5blink16ParseHTMLIntegerERKN3WTF6StringERi(%"class.WTF::String"* dereferenceable(8) %63, i32* nonnull dereferenceable(4) %3) #15
  br i1 %64, label %65, label %69

65:                                               ; preds = %61
  %66 = load i32, i32* %3, align 4
  %67 = icmp sgt i32 %66, -1
  %68 = select i1 %67, i32 %66, i32 -1
  br label %69

69:                                               ; preds = %61, %65
  %70 = phi i32 [ %68, %65 ], [ -1, %61 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #15
  %71 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %1, i32 0, i32 %70) #15
  %72 = ptrtoint %"class.WTF::StringImpl"* %71 to i64
  %73 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 7
  %74 = bitcast %"class.WTF::String"* %73 to i64*
  %75 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %73, i64 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  store i64 %72, i64* %74, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %93, label %78

78:                                               ; preds = %69
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #15
  br label %91

91:                                               ; preds = %87, %90
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  br label %93

93:                                               ; preds = %91, %69
  %94 = phi %"class.WTF::StringImpl"* [ %92, %91 ], [ %71, %69 ]
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %123, label %96

96:                                               ; preds = %93
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %123, label %100

100:                                              ; preds = %96
  %101 = call %"class.WTF::StringImpl"* @_ZNK5blink18TextControlElement16InnerEditorValueEv(%"class.blink::TextControlElement"* %0)
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %123, label %103

103:                                              ; preds = %100
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = icmp ne i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %103
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %103
  %116 = phi i32 [ %114, %113 ], [ %112, %103 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %101) #15
  br i1 %106, label %120, label %123

119:                                              ; preds = %115
  br i1 %106, label %120, label %123

120:                                              ; preds = %118, %119
  %121 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 1, i32 0, i32 0
  %122 = load %"class.blink::TextControlInnerEditorElement"*, %"class.blink::TextControlInnerEditorElement"** %121, align 8
  call void @_ZN5blink29TextControlInnerEditorElement13SetVisibilityEb(%"class.blink::TextControlInnerEditorElement"* %122, i1 zeroext false) #15
  br label %135

123:                                              ; preds = %93, %96, %100, %118, %119
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %130, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 1
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %135

130:                                              ; preds = %123, %126
  %131 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 1, i32 0, i32 0
  %132 = load %"class.blink::TextControlInnerEditorElement"*, %"class.blink::TextControlInnerEditorElement"** %131, align 8
  %133 = icmp eq %"class.blink::TextControlInnerEditorElement"* %132, null
  br i1 %133, label %135, label %134

134:                                              ; preds = %130
  call void @_ZN5blink29TextControlInnerEditorElement13SetVisibilityEb(%"class.blink::TextControlInnerEditorElement"* nonnull %132, i1 zeroext true) #15
  br label %135

135:                                              ; preds = %130, %126, %134, %120
  %136 = bitcast %"class.blink::TextControlElement"* %0 to void (%"class.blink::TextControlElement"*)***
  %137 = load void (%"class.blink::TextControlElement"*)**, void (%"class.blink::TextControlElement"*)*** %136, align 8
  %138 = getelementptr inbounds void (%"class.blink::TextControlElement"*)*, void (%"class.blink::TextControlElement"*)** %137, i64 199
  %139 = load void (%"class.blink::TextControlElement"*)*, void (%"class.blink::TextControlElement"*)** %138, align 8
  call void %139(%"class.blink::TextControlElement"* %0) #15
  %140 = call %"class.blink::HTMLElement"* @_ZNK5blink18TextControlElement18PlaceholderElementEv(%"class.blink::TextControlElement"* %0)
  %141 = icmp eq %"class.blink::HTMLElement"* %140, null
  br i1 %141, label %154, label %142

142:                                              ; preds = %135
  call void @_ZN5blink18TextControlElement27UpdatePlaceholderVisibilityEv(%"class.blink::TextControlElement"* %0)
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %142
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 1
  %147 = load i32, i32* %146, align 4
  %148 = icmp eq i32 %147, 0
  %149 = select i1 %148, %"class.WTF::AtomicString"** @_ZN5blink20shadow_element_names23kPseudoInputPlaceholderE, %"class.WTF::AtomicString"** @_ZN5blink20shadow_element_names29kPseudoInternalInputSuggestedE
  br label %150

150:                                              ; preds = %142, %145
  %151 = phi %"class.WTF::AtomicString"** [ %149, %145 ], [ @_ZN5blink20shadow_element_names23kPseudoInputPlaceholderE, %142 ]
  %152 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %140, i64 0, i32 0
  %153 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %151, align 8
  call void @_ZN5blink7Element17SetShadowPseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"* %152, %"class.WTF::AtomicString"* dereferenceable(8) %153) #15
  br label %154

154:                                              ; preds = %150, %135
  ret void
}

declare void @_ZN5blink29TextControlInnerEditorElement13SetVisibilityEb(%"class.blink::TextControlInnerEditorElement"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN5blink7Element17SetShadowPseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLElement"* @_ZN5blink18TextControlElement24CreateInnerEditorElementEv(%"class.blink::TextControlElement"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %3, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = tail call %"class.blink::TextControlInnerEditorElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_29TextControlInnerEditorElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %5) #15
  %7 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 1
  %8 = ptrtoint %"class.blink::TextControlInnerEditorElement"* %6 to i64
  %9 = bitcast %"class.blink::Member.1771"* %7 to i64*
  store atomic i64 %8, i64* %9 monotonic, align 8
  %10 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.blink::TextControlInnerEditorElement"* %6 to i8*
  %14 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %13) #15
  %15 = getelementptr inbounds %"class.blink::Member.1771", %"class.blink::Member.1771"* %7, i64 0, i32 0, i32 0
  %16 = load %"class.blink::TextControlInnerEditorElement"*, %"class.blink::TextControlInnerEditorElement"** %15, align 8
  br label %17

17:                                               ; preds = %1, %12
  %18 = phi %"class.blink::TextControlInnerEditorElement"* [ %6, %1 ], [ %16, %12 ]
  %19 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %18, i64 0, i32 0, i32 0
  ret %"class.blink::HTMLElement"* %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink18TextControlElement5TraceEPNS_7VisitorE(%"class.blink::TextControlElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.1771"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_29TextControlInnerEditorElementEE5TraceEPNS_7VisitorEPKv) #15
  br label %13

13:                                               ; preds = %2, %7
  %14 = bitcast %"class.blink::TextControlElement"* %0 to %"class.blink::HTMLFormControlElement"*
  tail call void @_ZNK5blink22HTMLFormControlElement5TraceEPNS_7VisitorE(%"class.blink::HTMLFormControlElement"* %14, %"class.blink::Visitor"* %1) #15
  ret void
}

declare void @_ZNK5blink22HTMLFormControlElement5TraceEPNS_7VisitorE(%"class.blink::HTMLFormControlElement"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_NK5blink18TextControlElement5TraceEPNS_7VisitorE(%"class.blink::TextControlElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 -1, i32 0, i32 0, i32 1, i32 6
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 25
  %5 = bitcast %"class.WTF::String"* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_29TextControlInnerEditorElementEE5TraceEPNS_7VisitorEPKv) #15
  br label %14

14:                                               ; preds = %2, %8
  %15 = bitcast %"class.WTF::String"* %3 to %"class.blink::HTMLFormControlElement"*
  tail call void @_ZNK5blink22HTMLFormControlElement5TraceEPNS_7VisitorE(%"class.blink::HTMLFormControlElement"* %15, %"class.blink::Visitor"* %1) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18TextControlElement31CloneNonAttributePropertiesFromERKNS_7ElementENS_17CloneChildrenFlagE(%"class.blink::TextControlElement"*, %"class.blink::Element"* dereferenceable(104), i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = bitcast %"class.blink::TraceWrapperV8Reference"* %4 to i8*
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 3
  store i8 %6, i8* %7, align 8
  %8 = bitcast %"class.blink::Element"* %1 to %"class.blink::HTMLFormControlElementWithState"*
  %9 = getelementptr inbounds %"class.blink::HTMLFormControlElementWithState", %"class.blink::HTMLFormControlElementWithState"* %8, i64 0, i32 1
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 1
  store i8 %10, i8* %11, align 1
  %12 = bitcast %"class.blink::TextControlElement"* %0 to %"class.blink::HTMLFormControlElement"*
  tail call void @_ZN5blink22HTMLFormControlElement31CloneNonAttributePropertiesFromERKNS_7ElementENS_17CloneChildrenFlagE(%"class.blink::HTMLFormControlElement"* %12, %"class.blink::Element"* dereferenceable(104) %1, i32 %2) #15
  ret void
}

declare void @_ZN5blink22HTMLFormControlElement31CloneNonAttributePropertiesFromERKNS_7ElementENS_17CloneChildrenFlagE(%"class.blink::HTMLFormControlElement"*, %"class.blink::Element"* dereferenceable(104), i32) unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink18TextControlElement20ValueForTextOverflowEv(%"class.blink::TextControlElement"* readonly) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %3, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %5, i64 0, i32 43, i32 0, i32 0
  %7 = load %"class.blink::Element"*, %"class.blink::Element"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = icmp eq %"class.blink::Element"* %7, %8
  br i1 %9, label %57, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 12
  %14 = icmp eq i32 %13, 0
  %15 = and i32 %12, 1
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %14, label %18, label %29

18:                                               ; preds = %10
  br i1 %16, label %25, label %19

19:                                               ; preds = %18
  %20 = bitcast %"class.blink::NodeData"** %17 to %"class.blink::NodeRareData"**
  %21 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %21, i64 0, i32 1, i32 0, i32 0
  %23 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %23, i64 0, i32 2, i32 0
  br label %44

25:                                               ; preds = %18
  %26 = bitcast %"class.blink::NodeData"** %17 to %"class.blink::NodeRenderingData"**
  %27 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %27, i64 0, i32 2, i32 0
  br label %44

29:                                               ; preds = %10
  br i1 %16, label %34, label %30

30:                                               ; preds = %29
  %31 = bitcast %"class.blink::NodeData"** %17 to %"class.blink::NodeRareData"**
  %32 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %32, i64 0, i32 1, i32 0, i32 0
  br label %36

34:                                               ; preds = %29
  %35 = bitcast %"class.blink::NodeData"** %17 to %"class.blink::NodeRenderingData"**
  br label %36

36:                                               ; preds = %34, %30
  %37 = phi %"class.blink::NodeRenderingData"** [ %33, %30 ], [ %35, %34 ]
  %38 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %38, i64 0, i32 1
  %40 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %39, align 8
  %41 = icmp eq %"class.blink::LayoutObject"* %40, null
  br i1 %41, label %48, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %40, i64 0, i32 5, i32 0
  br label %44

44:                                               ; preds = %42, %25, %19
  %45 = phi %"class.blink::ComputedStyle"** [ %24, %19 ], [ %28, %25 ], [ %43, %42 ]
  %46 = bitcast %"class.blink::ComputedStyle"** %45 to %"class.blink::ComputedStyleBase"**
  %47 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %46, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi %"class.blink::ComputedStyleBase"* [ null, %36 ], [ %47, %44 ]
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %49, i64 0, i32 3, i32 0, i32 0
  %51 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %51, i64 0, i32 12
  %53 = load i16, i16* %52, align 4
  %54 = lshr i16 %53, 9
  %55 = and i16 %54, 1
  %56 = zext i16 %55 to i32
  br label %57

57:                                               ; preds = %1, %48
  %58 = phi i32 [ %56, %48 ], [ 0, %1 ]
  ret i32 %58
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #8 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #15
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink11HTMLElement18GetWrapperTypeInfoEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink11HTMLElement18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink4Node13InterfaceNameEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink4Node6ToNodeEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare void @_ZN5blink4Node23RemoveAllEventListenersEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #1

declare void @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare i32 @_ZN5blink4Node21DispatchEventInternalERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare %"class.blink::EventTargetData"* @_ZN5blink4Node18GetEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #1

declare dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink4Node21EnsureEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement8nodeNameEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node9nodeValueEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink4Node12setNodeValueERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare i32 @_ZNK5blink7Element11getNodeTypeEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848), i32) unnamed_addr #1

declare void @_ZN5blink4Node14setTextContentERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK5blink4Node11GetPseudoIdEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i8 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node21IsMediaControlElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsMediaControlsEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node14IsMediaElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node20IsTextTrackContainerEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node12IsVTTElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsAttributeNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsCharacterDataNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsFrameOwnerElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node27IsMediaRemotingInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node30IsPictureInPictureInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink31HTMLFormControlElementWithState23CanContainRangeEndPointEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink4Node11SheetLoadedEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE(%"class.blink::Node"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24StartLoadingDynamicSheetEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink13ContainerNode10SetDraggedEb(%"class.blink::ContainerNode"*, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement25ShouldHaveFocusAppearanceEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink13ContainerNode11BoundingBoxEv(%"class.blink::ContainerNode"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE(%"class.blink::Element"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node17CanStartSelectionEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE(%"class.blink::Element"*, %"struct.blink::Node::AttachContext"* dereferenceable(32)) unnamed_addr #1

declare void @_ZN5blink7Element16DetachLayoutTreeEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

declare i32 @_ZN5blink22HTMLFormControlElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::HTMLFormControlElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink22HTMLFormControlElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::HTMLFormControlElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #1

declare zeroext i1 @_ZN5blink4Node28WillRespondToMouseMoveEventsEv(%"class.blink::Node"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink4Node29WillRespondToMouseClickEventsEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventDispatchHandlingState"* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::EventDispatchHandlingState"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104), %"class.blink::EventDispatchHandlingState"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink4Node17HandleLocalEventsERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node21HasActivationBehaviorEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::LayoutBox"* @_ZN5blink4Node13AutoscrollBoxEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink4Node14StopAutoscrollEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink22HTMLFormControlElement20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::HTMLFormControlElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement13DebugNodeNameEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ComputedStyle"* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = tail call %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"* %0, i8 zeroext %1, %"class.WTF::AtomicString"* dereferenceable(8) %2) #15
  ret %"class.blink::ComputedStyle"* %4
}

declare void @_ZN5blink11HTMLElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::HTMLElement"*, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv(%"class.blink::ContainerNode"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv(%"class.blink::ContainerNode"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare %"class.blink::LayoutBox"* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.blink::Element"* @_ZN5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.WTF::HashMap.3210"* @_ZNK5blink7Element24GetCheckedAttributeTypesEv(%"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZN5blink7Element11scrollWidthEv(%"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZN5blink7Element12scrollHeightEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSPropertyValueSet"* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSPropertyValueSet"* null
}

declare zeroext i1 @_ZNK5blink11HTMLElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink11HTMLElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE(%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink22HTMLFormControlElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLFormControlElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

declare dereferenceable(8) %"class.blink::QualifiedName"* @_ZNK5blink7Element24SubResourceAttributeNameEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.blink::LayoutObject"* @_ZN5blink7Element18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::Element"*, %"class.blink::ComputedStyle"* dereferenceable(104), i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element20LayoutObjectIsNeededERKNS_13ComputedStyleE(%"class.blink::Element"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #1

declare void @_ZN5blink11HTMLElement15AccessKeyActionENS_27SimulatedClickCreationScopeE(%"class.blink::HTMLElement"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element10IsLiveLinkEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare %"class.WTF::StringImpl"* @_ZNK5blink7Element14ImageSourceURLEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Image"* @_ZN5blink7Element13ImageContentsEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::Image"* null
}

declare void @_ZN5blink7Element5focusERKNS_11FocusParamsE(%"class.blink::Element"*, %"struct.blink::FocusParams"* dereferenceable(32)) unnamed_addr #1

declare void @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE(%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*) unnamed_addr #1

declare void @_ZN5blink7Element4blurEv(%"class.blink::Element"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement13SupportsFocusEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement19IsKeyboardFocusableEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element16IsMouseFocusableEv(%"class.blink::Element"*) unnamed_addr #1

declare void @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement5titleEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink7Element14DefaultToolTipEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element14ShadowPseudoIdEv(%"class.blink::Element"*) unnamed_addr #1

declare void @_ZN5blink31HTMLFormControlElementWithState21FinishParsingChildrenEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #1

declare void @_ZN5blink11HTMLElement20BeginParsingChildrenEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE(%"class.blink::Element"*, i8 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25MatchesDefaultPseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement25MatchesEnabledPseudoClassEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement26MatchesReadOnlyPseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement27MatchesReadWritePseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement28MatchesValidityPseudoClassesEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement25MayTriggerVirtualKeyboardEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25ShouldAppearIndeterminateEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsDateTimeEditElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsDateTimeFieldElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element24IsPickerIndicatorElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink22HTMLFormControlElement20IsFormControlElementEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element19IsSpinButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element13IsTextControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsOptionalFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsRequiredFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement12willValidateEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink22HTMLFormControlElement14IsValidElementEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element9IsInRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element12IsOutOfRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsClearButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element15IsScriptElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsSliderThumbElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25HasNonInBodyInsertionModeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement21IsDisabledFormControlEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element20BuildPendingResourceEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink7Element9SetActiveEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink7Element10SetHoveredEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element11IsAdRelatedEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink7Element15WillRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"*, i64) unnamed_addr #1

declare void @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"*, i64) unnamed_addr #1

declare %"class.blink::ComputedStyle"* @_ZN5blink7Element26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE(%"class.blink::Element"*, %"class.blink::StyleRecalcContext"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink7Element16GetNamedItemTypeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare zeroext i1 @_ZNK5blink7Element16IsFocusableStyleEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element22ParserDidSetAttributesEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element23AreAuthorShadowsAllowedEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE(%"class.blink::Element"*, %"class.blink::ShadowRoot"* dereferenceable(208)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink22HTMLFormControlElement31AlwaysCreateUserAgentShadowRootEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare i32 @_ZNK5blink31HTMLFormControlElementWithState15DefaultTabIndexEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #1

declare dereferenceable(104) %"class.blink::Element"* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink11HTMLElement22setInnerTextForBindingEPKNS_50V8UnionStringTreatNullAsEmptyStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::HTMLElement"*, %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement19HasCustomFocusLogicEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink22HTMLFormControlElement14autocapitalizeEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement9draggableEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare %"class.blink::HTMLFormElement"* @_ZNK5blink22HTMLFormControlElement9formOwnerEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement17IsHTMLBodyElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement19IsHTMLPortalElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement15IsPluginElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement11IsLabelableEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement20IsInteractiveContentEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement7AltTextEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::FormAssociated"* @_ZN5blink22HTMLFormControlElement22ToFormAssociatedOrNullEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFormControlElement", %"class.blink::HTMLFormControlElement"* %0, i64 0, i32 3
  ret %"class.blink::FormAssociated"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink22HTMLFormControlElement14IsEnumeratableEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink22HTMLFormControlElement28CanTriggerImplicitSubmissionEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink22HTMLFormControlElement20IsSubmittableElementEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare %"class.WTF::StringImpl"* @_ZN5blink22HTMLFormControlElement21ResultForDialogSubmitEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink22HTMLFormControlElement27CanBeSuccessfulSubmitButtonEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink22HTMLFormControlElement17IsActivatedSubmitEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22HTMLFormControlElement18SetActivatedSubmitEb(%"class.blink::HTMLFormControlElement"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink22HTMLFormControlElement21GetFormElementPiiTypeEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22HTMLFormControlElement21SetFormElementPiiTypeENS_18FormElementPiiTypeE(%"class.blink::HTMLFormControlElement"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink22HTMLFormControlElement13AssociateWithEPNS_15HTMLFormElementE(%"class.blink::HTMLFormControlElement"*, %"class.blink::HTMLFormElement"*) unnamed_addr #1

declare void @_ZN5blink22HTMLFormControlElement24RequiredAttributeChangedEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare void @_ZN5blink22HTMLFormControlElement24DisabledAttributeChangedEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare void @_ZN5blink22HTMLFormControlElement14WillChangeFormEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare void @_ZN5blink22HTMLFormControlElement13DidChangeFormEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22HTMLFormControlElement9ResetImplEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZNK5blink31HTMLFormControlElementWithState18ShouldAutocompleteEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink31HTMLFormControlElementWithState25ClassSupportsStateRestoreEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink31HTMLFormControlElementWithState36ShouldSaveAndRestoreFormControlStateEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink31HTMLFormControlElementWithState29IsFormControlElementWithStateEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18TextControlElement16HandleFocusEventEPNS_7ElementENS_5mojom9FocusTypeE(%"class.blink::TextControlElement"*, %"class.blink::Element"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18TextControlElement15HandleBlurEventEv(%"class.blink::TextControlElement"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
declare %"class.blink::Element"* @_ZThn80_N5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn104_NK5blink22HTMLFormControlElement20IsFormControlElementEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn104_NK5blink31HTMLFormControlElementWithState29IsFormControlElementWithStateEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #0 align 2

declare zeroext i1 @_ZNK5blink13ListedElement18IsElementInternalsEv(%"class.blink::ListedElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn104_NK5blink22HTMLFormControlElement14IsEnumeratableEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink13ListedElement7GetNameEv(%"class.blink::ListedElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13ListedElement16AppendToFormDataERNS_8FormDataE(%"class.blink::ListedElement"*, %"class.blink::FormData"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZNK5blink13ListedElement11CustomErrorEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement11HasBadInputEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement15PatternMismatchEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement13RangeOverflowEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement14RangeUnderflowEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement12StepMismatchEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement7TooLongEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement8TooShortEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement12TypeMismatchEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement12ValueMissingEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink13ListedElement17validationMessageEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink13ListedElement20ValidationSubMessageEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare void @_ZN5blink13ListedElement17setCustomValidityERKN3WTF6StringE(%"class.blink::ListedElement"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare dereferenceable(104) %"class.blink::Element"* @_ZNK5blink13ListedElement16ValidationAnchorEv(%"class.blink::ListedElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink22HTMLFormControlElement24DisabledAttributeChangedEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13ListedElement27DisabledStateMightBeChangedEv(%"class.blink::ListedElement"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn104_NK5blink31HTMLFormControlElementWithState25ClassSupportsStateRestoreEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn104_NK5blink31HTMLFormControlElementWithState36ShouldSaveAndRestoreFormControlStateEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #0 align 2

declare void @_ZNK5blink13ListedElement20SaveFormControlStateEv() unnamed_addr

declare void @_ZN5blink13ListedElement23RestoreFormControlStateERKNS_16FormControlStateE(%"class.blink::ListedElement"*, %"class.blink::FormControlState"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink22HTMLFormControlElement14WillChangeFormEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink22HTMLFormControlElement13DidChangeFormEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 align 2

declare zeroext i1 @_ZNK5blink13ListedElement18RecalcWillValidateEv(%"class.blink::ListedElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn168_N5blink22HTMLFormControlElement13AssociateWithEPNS_15HTMLFormElementE(%"class.blink::HTMLFormControlElement"*, %"class.blink::HTMLFormElement"*) unnamed_addr #0 align 2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node26IsUserActionElementFocusedEv(%"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #10

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #11

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.2795"*, i8* dereferenceable(1)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2795", %"class.WTF::Vector.2795"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2795", %"class.WTF::Vector.2795"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2795"* %0, i32 %5) #15
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2795"* %0, i32 %5) #15
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2795"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.2795", %"class.WTF::Vector.2795"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #15
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.19, i64 0, i64 0), i8* %15, i8* %16) #15
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.20, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #15
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #15
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !14

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.2795", %"class.WTF::Vector.2795"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #15
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #15
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.2795"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.2795", %"class.WTF::Vector.2795"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.2795"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2795"* %0, i32 %27) #15
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2795"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2795", %"class.WTF::Vector.2795"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.2795", %"class.WTF::Vector.2795"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.2795"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.2795", %"class.WTF::Vector.2795"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.2795", %"class.WTF::Vector.2795"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.2795", %"class.WTF::Vector.2795"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.2795"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.2795", %"class.WTF::Vector.2795"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !3

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #15
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.2796"* %18, i8* nonnull %6) #15
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #15
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #15
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.2795", %"class.WTF::Vector.2795"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !14

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.2795", %"class.WTF::Vector.2795"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #15
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.2795", %"class.WTF::Vector.2795"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !14

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.2795", %"class.WTF::Vector.2795"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.2796"* %46, i8* %42) #15
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.2795"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.2795", %"class.WTF::Vector.2795"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.22, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.23, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #15
  ret i64 %20
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.2796"*, i8*) local_unnamed_addr #12 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #15
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.2800"*, i16* dereferenceable(2)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2800", %"class.WTF::Vector.2800"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2800", %"class.WTF::Vector.2800"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2800"* %0, i32 %5) #15
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2800"* %0, i32 %5) #15
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2800"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.2800", %"class.WTF::Vector.2800"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #15
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.19, i64 0, i64 0), i8* %15, i8* %16) #15
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.20, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #15
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #15
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !14

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.2800", %"class.WTF::Vector.2800"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #15
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #15
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.2800"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.2800", %"class.WTF::Vector.2800"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.2800"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2800"* %0, i32 %27) #15
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2800"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2800", %"class.WTF::Vector.2800"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.2800", %"class.WTF::Vector.2800"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.2800"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.2800", %"class.WTF::Vector.2800"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.2800", %"class.WTF::Vector.2800"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.2800", %"class.WTF::Vector.2800"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.2800"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.2800", %"class.WTF::Vector.2800"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #15
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2801"* %19, i16* nonnull %6) #15
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #15
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #15
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.2800", %"class.WTF::Vector.2800"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !14

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.2800", %"class.WTF::Vector.2800"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #15
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.2800", %"class.WTF::Vector.2800"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !14

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.2800", %"class.WTF::Vector.2800"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2801"* %53, i16* %48) #15
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.2800"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.2800", %"class.WTF::Vector.2800"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.22, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.23, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2801"*, i16*) local_unnamed_addr #12 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #15
  ret void
}

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

declare i32 @_ZN3WTF10StringImpl4FindEPFbDsEj(%"class.WTF::StringImpl"*, i1 (i16)*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #13

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare void @_ZN5blink12FocusOptionsC1Ev(%"class.blink::FocusOptions"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #15
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #15
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #8 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #15
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.24, i64 0, i64 0), i8* %21, i8* %22) #15
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.25, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #15
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #15
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #15
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #15
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF20EqualIgnoringNullityEPNS_10StringImplES1_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"*, %"class.WTF::AtomicString"* dereferenceable(8), i32, i32, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #15
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #15
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #15
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"*) local_unnamed_addr #1

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE25LastPositionInOrAfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink21TextIteratorAlgorithmINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::TextIteratorAlgorithm"*) unnamed_addr #3

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #14

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #14

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #1

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #1

declare i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"*) local_unnamed_addr #1

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK3WTF10StringImpl8EndsWithEDs(%"class.WTF::StringImpl"*, i16 zeroext) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"*) unnamed_addr #1

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare void @_ZN5blink14NGInlineCursor14MoveToNextLineEv(%"class.blink::NGInlineCursor"*) local_unnamed_addr #1

declare void @_ZNK5blink15NGOffsetMapping16GetFirstPositionEj(%"class.blink::PositionTemplate"* sret, %"class.blink::NGOffsetMapping"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

declare %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.2812"*, %"class.WTF::StringAppend.2813"* byval(%"class.WTF::StringAppend.2813") align 8, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.2813"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.2812"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.2813", %"class.WTF::StringAppend.2813"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2812", %"class.WTF::StringAppend.2812"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #15
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !3

25:                                               ; preds = %16
  tail call void @llvm.trap() #15
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %3, %11, %26
  %29 = getelementptr inbounds %"class.WTF::StringAppend.2812", %"class.WTF::StringAppend.2812"* %0, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.2813", %"class.WTF::StringAppend.2813"* %1, i64 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.2812", %"class.WTF::StringAppend.2812"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %65, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %53

43:                                               ; preds = %36
  %44 = zext i32 %42 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #15
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !3

50:                                               ; preds = %43
  tail call void @llvm.trap() #15
  unreachable

51:                                               ; preds = %43
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %41, align 4
  br label %53

53:                                               ; preds = %36, %51
  %54 = phi i32 [ %52, %51 ], [ %42, %36 ]
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %60 = add i32 %54, -1
  store i32 %60, i32* %59, align 4
  br label %61

61:                                               ; preds = %58, %53
  %62 = phi i32 [ %60, %58 ], [ %54, %53 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #15
  br label %65

65:                                               ; preds = %28, %61, %64
  br i1 %10, label %79, label %66

66:                                               ; preds = %65
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #15
  br label %79

79:                                               ; preds = %65, %75, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend"*, %"class.WTF::StringAppend.2812"* byval(%"class.WTF::StringAppend.2812") align 8, i8*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.2812"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.2812", %"class.WTF::StringAppend.2812"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #15
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !3

25:                                               ; preds = %16
  tail call void @llvm.trap() #15
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %3
  %29 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.2812", %"class.WTF::StringAppend.2812"* %1, i64 0, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.2812", %"class.WTF::StringAppend.2812"* %1, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %57

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #15
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !3

52:                                               ; preds = %43
  tail call void @llvm.trap() #15
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %57

55:                                               ; preds = %28
  %56 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  store i8* %2, i8** %56, align 8
  br label %70

57:                                               ; preds = %38, %53
  %58 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  store i8* %2, i8** %58, align 8
  %59 = load atomic i32, i32* %39 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #15
  br label %70

70:                                               ; preds = %55, %69, %66
  br i1 %10, label %84, label %71

71:                                               ; preds = %70
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #15
  br label %84

84:                                               ; preds = %70, %80, %83
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3387", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.3387"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #15
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3387", %"class.WTF::StringTypeAdapter.3387"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.3387"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3387"* nonnull %4, i8* %14) #15
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.2812"* %9) #15
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #15
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.2812"* %9) #15
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #15
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i8* %25, i8* %26) #15
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.28, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #15
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #15
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #15
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #15
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #15
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.29, i64 0, i64 0), i8* %41, i8* %42) #15
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.28, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #15
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #15
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #15
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.3389", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3387", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.3387"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.3387"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3387"* nonnull %4, i8* %9) #15
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.3389"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #15
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3389", %"class.WTF::StringTypeAdapter.3389"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3389", %"class.WTF::StringTypeAdapter.3389"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #15
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.3389"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.2813"* %10, i8* %1) #15
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3389", %"class.WTF::StringTypeAdapter.3389"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2813"* %10) #15
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3390"* nonnull %30, i8* %33) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #15
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.2812"* %5) #15
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.3387"* nonnull %4, i8* %36) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #15
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.3389", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3387", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.3387"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.3387"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3387"* nonnull %4, i8* %9) #15
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.3389"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #15
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3389", %"class.WTF::StringTypeAdapter.3389"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3389", %"class.WTF::StringTypeAdapter.3389"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #15
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.3389"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.2813"* %10, i16* %1) #15
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3389", %"class.WTF::StringTypeAdapter.3389"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2813"* %10) #15
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i16, i16* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3390"* nonnull %30, i16* %33) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #15
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.2812"* %5) #15
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3387"* nonnull %4, i16* %36) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #15
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3387"*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.2812"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2812", %"class.WTF::StringAppend.2812"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2812", %"class.WTF::StringAppend.2812"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2813"* %8) #15
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #15
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2813"* %8) #15
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #15
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i8* %26, i8* %27) #15
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.28, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #15
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #15
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #15
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #15
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #15
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.29, i64 0, i64 0), i8* %41, i8* %42) #15
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.28, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #15
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #15
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #15
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2813"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3387", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2813", %"class.WTF::StringAppend.2813"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.3387"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #15
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3387", %"class.WTF::StringTypeAdapter.3387"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.2813", %"class.WTF::StringAppend.2813"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.3387"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3387"* nonnull %4, i8* %14) #15
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2814"* %9) #15
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #15
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2814"* %9) #15
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #15
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i8* %25, i8* %26) #15
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.28, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #15
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #15
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #15
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #15
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #15
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.29, i64 0, i64 0), i8* %41, i8* %42) #15
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.28, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #15
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #15
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #15
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2814"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3387", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.3387"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3387", %"class.WTF::StringTypeAdapter.3387"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.2814", %"class.WTF::StringAppend.2814"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.3387"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3387"* nonnull %4, i8* %13) #15
  %14 = getelementptr inbounds %"class.WTF::StringAppend.2814", %"class.WTF::StringAppend.2814"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #15
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #15
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i8* %30, i8* %31) #15
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.28, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #15
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #15
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #15
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #15
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #15
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.29, i64 0, i64 0), i8* %45, i8* %46) #15
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.28, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #15
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #15
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #15
  ret i32 %23
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.3387"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3390"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.2813"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.3387", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3389", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.3387", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2813", %"class.WTF::StringAppend.2813"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.3387"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2813", %"class.WTF::StringAppend.2813"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.3387"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3387"* nonnull %5, i8* %10) #15
  %11 = bitcast %"class.WTF::StringTypeAdapter.3387"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #15
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3387", %"class.WTF::StringTypeAdapter.3387"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.2813", %"class.WTF::StringAppend.2813"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #15
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3387"* nonnull %3, i8* %14) #15
  %15 = bitcast %"class.WTF::StringTypeAdapter.3389"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #15
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3389", %"class.WTF::StringTypeAdapter.3389"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3389", %"class.WTF::StringTypeAdapter.3389"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.2813", %"class.WTF::StringAppend.2813"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #15
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.3389"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.3387"* nonnull %3, i8* %1) #15
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3389", %"class.WTF::StringTypeAdapter.3389"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3390"* nonnull %34, i8* %37) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #15
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2814"* %6) #15
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.3387"* nonnull %5, i8* %40) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #15
  ret void
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3387"*, i16*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3390"*, i16*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.2813"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.3387", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3389", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.3387", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2813", %"class.WTF::StringAppend.2813"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.3387"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2813", %"class.WTF::StringAppend.2813"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.3387"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3387"* nonnull %5, i8* %10) #15
  %11 = bitcast %"class.WTF::StringTypeAdapter.3387"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #15
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3387", %"class.WTF::StringTypeAdapter.3387"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.2813", %"class.WTF::StringAppend.2813"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #15
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.3387"* nonnull %3, i8* %14) #15
  %15 = bitcast %"class.WTF::StringTypeAdapter.3389"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #15
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3389", %"class.WTF::StringTypeAdapter.3389"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3389", %"class.WTF::StringTypeAdapter.3389"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.2813", %"class.WTF::StringAppend.2813"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #15
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.3389"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3387"* nonnull %3, i16* %1) #15
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3389", %"class.WTF::StringTypeAdapter.3389"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3390"* nonnull %34, i16* %37) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #15
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2814"* %6) #15
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3387"* nonnull %5, i16* %40) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLBRElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLBRElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #15
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 112
  br i1 %15, label %46, label %16, !prof !3

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 112
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -112
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 56, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 112, i64 %47) #15
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::HTMLBRElement"*
  tail call void @_ZN5blink13HTMLBRElementC1ERNS_8DocumentE(%"class.blink::HTMLBRElement"* %51, %"class.blink::Document"* dereferenceable(2848) %0) #15
  %52 = getelementptr inbounds i8, i8* %50, i64 -4
  %53 = bitcast i8* %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = or i16 %54, 1
  store atomic i16 %55, i16* %53 release, align 2
  ret %"class.blink::HTMLBRElement"* %51
}

declare void @_ZN5blink13HTMLBRElementC1ERNS_8DocumentE(%"class.blink::HTMLBRElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::TextControlInnerEditorElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_29TextControlInnerEditorElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #15
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 120
  br i1 %15, label %46, label %16, !prof !3

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 120
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -120
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 60, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 120, i64 %47) #15
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::TextControlInnerEditorElement"*
  tail call void @_ZN5blink29TextControlInnerEditorElementC1ERNS_8DocumentE(%"class.blink::TextControlInnerEditorElement"* %51, %"class.blink::Document"* dereferenceable(2848) %0) #15
  %52 = getelementptr inbounds i8, i8* %50, i64 -4
  %53 = bitcast i8* %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = or i16 %54, 1
  store atomic i16 %55, i16* %53 release, align 2
  ret %"class.blink::TextControlInnerEditorElement"* %51
}

declare void @_ZN5blink29TextControlInnerEditorElementC1ERNS_8DocumentE(%"class.blink::TextControlInnerEditorElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_29TextControlInnerEditorElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Element"*
  tail call void @_ZNK5blink7Element5TraceEPNS_7VisitorE(%"class.blink::Element"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

declare void @_ZNK5blink7Element5TraceEPNS_7VisitorE(%"class.blink::Element"*, %"class.blink::Visitor"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree nounwind }
attributes #15 = { nounwind }
attributes #16 = { noreturn nounwind }
attributes #17 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!6 = distinct !{!6, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!9 = distinct !{!9, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!10 = !{!"branch_weights", i32 1, i32 1048575}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!13 = distinct !{!13, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!14 = !{!"branch_weights", i32 2000, i32 1}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!17 = distinct !{!17, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN5blink12_GLOBAL__N_116GetNextSoftBreakERKNS_15NGOffsetMappingERNS_14NGInlineCursorE: argument 0"}
!20 = distinct !{!20, !"_ZN5blink12_GLOBAL__N_116GetNextSoftBreakERKNS_15NGOffsetMappingERNS_14NGInlineCursorE"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN5blink12_GLOBAL__N_116GetNextSoftBreakERKNS_15NGOffsetMappingERNS_14NGInlineCursorE: argument 0"}
!23 = distinct !{!23, !"_ZN5blink12_GLOBAL__N_116GetNextSoftBreakERKNS_15NGOffsetMappingERNS_14NGInlineCursorE"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN5blink12_GLOBAL__N_116GetNextSoftBreakERKNS_15NGOffsetMappingERNS_14NGInlineCursorE: argument 0"}
!26 = distinct !{!26, !"_ZN5blink12_GLOBAL__N_116GetNextSoftBreakERKNS_15NGOffsetMappingERNS_14NGInlineCursorE"}
