; ModuleID = '../../v8/src/regexp/regexp-bytecode-generator.cc'
source_filename = "../../v8/src/regexp/regexp-bytecode-generator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::nothrow_t" = type { i8 }
%"class.v8::internal::RegExpBytecodeGenerator" = type { %"class.v8::internal::RegExpMacroAssembler", %"class.v8::internal::Vector.1131", i32, %"class.v8::internal::Label", i32, i32, i32, %"class.v8::internal::ZoneUnorderedMap", %"class.v8::internal::Isolate"* }
%"class.v8::internal::RegExpMacroAssembler" = type { i32 (...)**, i8, i32, i8, i32, %"class.v8::internal::Isolate"*, %"class.v8::internal::Zone"* }
%"class.v8::internal::Vector.1131" = type { i8*, i64 }
%"class.v8::internal::Label" = type { i32, i32 }
%"class.v8::internal::ZoneUnorderedMap" = type { %"class.std::__1::unordered_map.1132" }
%"class.std::__1::unordered_map.1132" = type { %"class.std::__1::__hash_table.1133" }
%"class.std::__1::__hash_table.1133" = type <{ %"class.std::__1::unique_ptr.1134", %"class.std::__1::__compressed_pair.1142", %"class.std::__1::__compressed_pair.1146", %"class.std::__1::__compressed_pair.1149", [4 x i8] }>
%"class.std::__1::unique_ptr.1134" = type { %"class.std::__1::__compressed_pair.1135" }
%"class.std::__1::__compressed_pair.1135" = type { %"struct.std::__1::__compressed_pair_elem.1136", %"struct.std::__1::__compressed_pair_elem.1138" }
%"struct.std::__1::__compressed_pair_elem.1136" = type { %"struct.std::__1::__hash_node_base.1137"** }
%"struct.std::__1::__hash_node_base.1137" = type { %"struct.std::__1::__hash_node_base.1137"* }
%"struct.std::__1::__compressed_pair_elem.1138" = type { %"class.std::__1::__bucket_list_deallocator.1139" }
%"class.std::__1::__bucket_list_deallocator.1139" = type { %"class.std::__1::__compressed_pair.1140" }
%"class.std::__1::__compressed_pair.1140" = type { %"struct.std::__1::__compressed_pair_elem.7", %"struct.std::__1::__compressed_pair_elem.1141" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"struct.std::__1::__compressed_pair_elem.1141" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1142" = type { %"struct.std::__1::__compressed_pair_elem.1143", %"struct.std::__1::__compressed_pair_elem.1144" }
%"struct.std::__1::__compressed_pair_elem.1143" = type { %"struct.std::__1::__hash_node_base.1137" }
%"struct.std::__1::__compressed_pair_elem.1144" = type { %"class.v8::internal::ZoneAllocator.1145" }
%"class.v8::internal::ZoneAllocator.1145" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1146" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1149" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { float }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.645", %"class.std::__1::unique_ptr.666", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.676", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.815", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.828", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.838", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.849", %"struct.std::__1::atomic.152", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.924", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.969"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.978", i32, i8, i8, i32, i32, %"class.std::__1::vector.984", %"class.std::__1::vector.984", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.991", i64, %"class.std::__1::unordered_map.992", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.541", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.160", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1048", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1086", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1120", %"class.std::__1::vector.1124", %"class.std::__1::vector.1124", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.19", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.19", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.19", i64, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.29", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.146", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.161", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.19", i64, i8, %"struct.std::__1::atomic.19", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.165", %"class.std::__1::vector.165", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.178", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.314", %"class.std::__1::unique_ptr.320", %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.428", %"class.std::__1::unique_ptr.434", %"class.std::__1::unique_ptr.444", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.456", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.468", %"class.std::__1::unique_ptr.474", %"class.std::__1::shared_ptr.480", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.503", %"class.std::__1::unique_ptr.529", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.535", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.548", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.330", i8, [7 x i8], %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.580", %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.604", %"class.std::__1::vector.632", i8, %"class.std::__1::unique_ptr.639", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.2", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.16", [4 x i8] }>
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4", %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24" }
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { i64 }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.33" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.103" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.19"*, %"class.std::__1::unique_ptr.97" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.19", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.38", %"class.std::__1::vector.38", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.40" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.45" }
%"class.std::__1::__hash_table.45" = type <{ %"class.std::__1::unique_ptr.46", %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.63", [4 x i8] }>
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48", %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base.49"** }
%"struct.std::__1::__hash_node_base.49" = type { %"struct.std::__1::__hash_node_base.49"* }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::__bucket_list_deallocator.51" }
%"class.std::__1::__bucket_list_deallocator.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.std::__1::__hash_node_base.49" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.24", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.86", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.19"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.24", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.68", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__cxx_atomic_impl.70" }
%"struct.std::__1::__cxx_atomic_impl.70" = type { %"struct.std::__1::__cxx_atomic_base_impl.71" }
%"struct.std::__1::__cxx_atomic_base_impl.71" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.72" }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.74" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::atomic.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__cxx_atomic_impl.88" }
%"struct.std::__1::__cxx_atomic_impl.88" = type { %"struct.std::__1::__cxx_atomic_base_impl.89" }
%"struct.std::__1::__cxx_atomic_base_impl.89" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.90", i8, [7 x i8] }>
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { i64*, i64*, %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.19", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"struct.std::__1::pair.105"*, %"struct.std::__1::pair.105"*, %"class.std::__1::__compressed_pair.106" }
%"struct.std::__1::pair.105" = type { i32, i64 }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::pair.105"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.19", i64, %"struct.std::__1::atomic.19" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.19", i32, %"struct.std::__1::atomic.19", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.111" }
%"class.std::__1::unordered_map.111" = type { %"class.std::__1::__hash_table.112" }
%"class.std::__1::__hash_table.112" = type <{ %"class.std::__1::unique_ptr.113", %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.133", [4 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115", %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base.116"** }
%"struct.std::__1::__hash_node_base.116" = type { %"struct.std::__1::__hash_node_base.116"* }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::__bucket_list_deallocator.118" }
%"class.std::__1::__bucket_list_deallocator.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::__hash_node_base.116" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.139", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.141" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1053", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1057", %"class.std::__1::unique_ptr.1063", %"class.std::__1::unique_ptr.474", %"class.std::__1::vector.1069", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1053" = type { %"struct.std::__1::__atomic_base.1054" }
%"struct.std::__1::__atomic_base.1054" = type { %"struct.std::__1::__cxx_atomic_impl.1055" }
%"struct.std::__1::__cxx_atomic_impl.1055" = type { %"struct.std::__1::__cxx_atomic_base_impl.1056" }
%"struct.std::__1::__cxx_atomic_base_impl.1056" = type { i32 }
%"class.std::__1::unique_ptr.1057" = type { %"class.std::__1::__compressed_pair.1058" }
%"class.std::__1::__compressed_pair.1058" = type { %"struct.std::__1::__compressed_pair_elem.1059" }
%"struct.std::__1::__compressed_pair_elem.1059" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.808" }
%"class.std::__1::vector.808" = type { %"class.std::__1::__vector_base.809" }
%"class.std::__1::__vector_base.809" = type { i64**, i64**, %"class.std::__1::__compressed_pair.810" }
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.811" }
%"struct.std::__1::__compressed_pair_elem.811" = type { i64** }
%"class.std::__1::unique_ptr.1063" = type { %"class.std::__1::__compressed_pair.1064" }
%"class.std::__1::__compressed_pair.1064" = type { %"struct.std::__1::__compressed_pair_elem.1065" }
%"struct.std::__1::__compressed_pair_elem.1065" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.808", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1069" = type { %"class.std::__1::__vector_base.1070" }
%"class.std::__1::__vector_base.1070" = type { %"struct.std::__1::pair.1071"*, %"struct.std::__1::pair.1071"*, %"class.std::__1::__compressed_pair.1072" }
%"struct.std::__1::pair.1071" = type opaque
%"class.std::__1::__compressed_pair.1072" = type { %"struct.std::__1::__compressed_pair_elem.1073" }
%"struct.std::__1::__compressed_pair_elem.1073" = type { %"struct.std::__1::pair.1071"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.152", %"struct.std::__1::atomic.156", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.19" }
%"struct.std::__1::atomic.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__cxx_atomic_impl.158" }
%"struct.std::__1::__cxx_atomic_impl.158" = type { %"struct.std::__1::__cxx_atomic_base_impl.159" }
%"struct.std::__1::__cxx_atomic_base_impl.159" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.19", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.160" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.161" = type { %"struct.std::__1::__atomic_base.162" }
%"struct.std::__1::__atomic_base.162" = type { %"struct.std::__1::__cxx_atomic_impl.163" }
%"struct.std::__1::__cxx_atomic_impl.163" = type { %"struct.std::__1::__cxx_atomic_base_impl.164" }
%"struct.std::__1::__cxx_atomic_base_impl.164" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i64 }
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.167" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.226", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.287", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.181", %"class.std::__1::vector.182", %"class.std::__1::vector.189", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.181" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.184" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"class.std::__1::unique_ptr.191"*, %"class.std::__1::unique_ptr.191"*, %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::unique_ptr.191" = type opaque
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.std::__1::unique_ptr.191"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.197", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.203", %"class.v8::internal::Worklist.205", %"class.v8::internal::Worklist.207", %"class.v8::internal::Worklist.209", %"class.v8::internal::Worklist.211" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.197" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.199" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.201" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.203" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.205" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.207" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.209" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.211" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.213", i8, i64 }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.229" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.181"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.229" = type { %"class.std::__1::__hash_table.230" }
%"class.std::__1::__hash_table.230" = type <{ %"class.std::__1::unique_ptr.231", %"class.std::__1::__compressed_pair.241", %"class.std::__1::__compressed_pair.246", %"class.std::__1::__compressed_pair.249", [4 x i8] }>
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233", %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.std::__1::__hash_node_base.234"** }
%"struct.std::__1::__hash_node_base.234" = type { %"struct.std::__1::__hash_node_base.234"* }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.std::__1::__bucket_list_deallocator.236" }
%"class.std::__1::__bucket_list_deallocator.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"struct.std::__1::__hash_node_base.234" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.256" }
%"class.std::__1::unordered_map.256" = type { %"class.std::__1::__hash_table.257" }
%"class.std::__1::__hash_table.257" = type <{ %"class.std::__1::unique_ptr.258", %"class.std::__1::__compressed_pair.268", %"class.std::__1::__compressed_pair.273", %"class.std::__1::__compressed_pair.276", [4 x i8] }>
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260", %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::__hash_node_base.261"** }
%"struct.std::__1::__hash_node_base.261" = type { %"struct.std::__1::__hash_node_base.261"* }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.std::__1::__bucket_list_deallocator.263" }
%"class.std::__1::__bucket_list_deallocator.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"struct.std::__1::__hash_node_base.261" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.280" = type { %"class.std::__1::__vector_base.281" }
%"class.std::__1::__vector_base.281" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.287" = type { %"class.std::__1::__vector_base.288" }
%"class.std::__1::__vector_base.288" = type { %"struct.std::__1::pair.289"*, %"struct.std::__1::pair.289"*, %"class.std::__1::__compressed_pair.290" }
%"struct.std::__1::pair.289" = type opaque
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::pair.289"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.295", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.280"], [3 x %"class.std::__1::vector.280"], i8, %"struct.std::__1::atomic.152", [6 x i8], %"class.std::__1::vector.280", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.305"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.305" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.330", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.323"], %"class.std::__1::unique_ptr.295" }
%"class.std::__1::vector.323" = type { %"class.std::__1::__vector_base.324" }
%"class.std::__1::__vector_base.324" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.362", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.366", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.371" }
%"struct.std::__1::atomic.362" = type { %"struct.std::__1::__atomic_base.363" }
%"struct.std::__1::__atomic_base.363" = type { %"struct.std::__1::__cxx_atomic_impl.364" }
%"struct.std::__1::__cxx_atomic_impl.364" = type { %"struct.std::__1::__cxx_atomic_base_impl.365" }
%"struct.std::__1::__cxx_atomic_base_impl.365" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.366" = type { %"struct.std::__1::__atomic_base.367" }
%"struct.std::__1::__atomic_base.367" = type { %"struct.std::__1::__cxx_atomic_impl.368" }
%"struct.std::__1::__cxx_atomic_impl.368" = type { %"struct.std::__1::__cxx_atomic_base_impl.369" }
%"struct.std::__1::__cxx_atomic_base_impl.369" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.371" = type { %"class.std::__1::__hash_table.372" }
%"class.std::__1::__hash_table.372" = type <{ %"class.std::__1::unique_ptr.373", %"class.std::__1::__compressed_pair.383", %"class.std::__1::__compressed_pair.388", %"class.std::__1::__compressed_pair.391", [4 x i8] }>
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375", %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.std::__1::__hash_node_base.376"** }
%"struct.std::__1::__hash_node_base.376" = type { %"struct.std::__1::__hash_node_base.376"* }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.std::__1::__bucket_list_deallocator.378" }
%"class.std::__1::__bucket_list_deallocator.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"struct.std::__1::__hash_node_base.376" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.295", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.152", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.401", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.401" = type { %"class.std::__1::__hash_table.402" }
%"class.std::__1::__hash_table.402" = type <{ %"class.std::__1::unique_ptr.403", %"class.std::__1::__compressed_pair.413", %"class.std::__1::__compressed_pair.418", %"class.std::__1::__compressed_pair.421", [4 x i8] }>
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405", %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"struct.std::__1::__hash_node_base.406"** }
%"struct.std::__1::__hash_node_base.406" = type { %"struct.std::__1::__hash_node_base.406"* }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.std::__1::__bucket_list_deallocator.408" }
%"class.std::__1::__bucket_list_deallocator.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"struct.std::__1::__hash_node_base.406" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.437" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.480" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.499", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.481", %"class.v8::internal::VirtualMemory" }
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.484", %"class.std::__1::set.492" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.484" = type { %"class.std::__1::__tree.485" }
%"class.std::__1::__tree.485" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::set.492" = type { %"class.std::__1::__tree.493" }
%"class.std::__1::__tree.493" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::atomic.499" = type { %"struct.std::__1::__atomic_base.500" }
%"struct.std::__1::__atomic_base.500" = type { %"struct.std::__1::__cxx_atomic_impl.501" }
%"struct.std::__1::__cxx_atomic_impl.501" = type { %"struct.std::__1::__cxx_atomic_base_impl.502" }
%"struct.std::__1::__cxx_atomic_base_impl.502" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.503" = type { %"class.std::__1::__hash_table.504" }
%"class.std::__1::__hash_table.504" = type <{ %"class.std::__1::unique_ptr.505", %"class.std::__1::__compressed_pair.515", %"class.std::__1::__compressed_pair.520", %"class.std::__1::__compressed_pair.523", [4 x i8] }>
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507", %"struct.std::__1::__compressed_pair_elem.509" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"struct.std::__1::__hash_node_base.508"** }
%"struct.std::__1::__hash_node_base.508" = type { %"struct.std::__1::__hash_node_base.508"* }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"class.std::__1::__bucket_list_deallocator.510" }
%"class.std::__1::__bucket_list_deallocator.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"struct.std::__1::__hash_node_base.508" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.541", %"class.std::__1::vector.541" }
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.330" = type { %"class.std::__1::__hash_table.331" }
%"class.std::__1::__hash_table.331" = type <{ %"class.std::__1::unique_ptr.332", %"class.std::__1::__compressed_pair.342", %"class.std::__1::__compressed_pair.347", %"class.std::__1::__compressed_pair.351", [4 x i8] }>
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334", %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"struct.std::__1::__hash_node_base.335"** }
%"struct.std::__1::__hash_node_base.335" = type { %"struct.std::__1::__hash_node_base.335"* }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.std::__1::__bucket_list_deallocator.337" }
%"class.std::__1::__bucket_list_deallocator.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"struct.std::__1::__hash_node_base.335" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.580" = type { %"class.std::__1::__hash_table.581" }
%"class.std::__1::__hash_table.581" = type <{ %"class.std::__1::unique_ptr.582", %"class.std::__1::__compressed_pair.592", %"class.std::__1::__compressed_pair.597", %"class.std::__1::__compressed_pair.600", [4 x i8] }>
%"class.std::__1::unique_ptr.582" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584", %"struct.std::__1::__compressed_pair_elem.586" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"struct.std::__1::__hash_node_base.585"** }
%"struct.std::__1::__hash_node_base.585" = type { %"struct.std::__1::__hash_node_base.585"* }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"class.std::__1::__bucket_list_deallocator.587" }
%"class.std::__1::__bucket_list_deallocator.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"struct.std::__1::__hash_node_base.585" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.554" = type { %"class.std::__1::__hash_table.555" }
%"class.std::__1::__hash_table.555" = type <{ %"class.std::__1::unique_ptr.556", %"class.std::__1::__compressed_pair.566", %"class.std::__1::__compressed_pair.571", %"class.std::__1::__compressed_pair.574", [4 x i8] }>
%"class.std::__1::unique_ptr.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558", %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"struct.std::__1::__hash_node_base.559"** }
%"struct.std::__1::__hash_node_base.559" = type { %"struct.std::__1::__hash_node_base.559"* }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.std::__1::__bucket_list_deallocator.561" }
%"class.std::__1::__bucket_list_deallocator.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"struct.std::__1::__hash_node_base.559" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.604" = type { %"class.std::__1::__hash_table.605" }
%"class.std::__1::__hash_table.605" = type <{ %"class.std::__1::unique_ptr.606", %"class.std::__1::__compressed_pair.616", %"class.std::__1::__compressed_pair.621", %"class.std::__1::__compressed_pair.626", [4 x i8] }>
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608", %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"struct.std::__1::__hash_node_base.609"** }
%"struct.std::__1::__hash_node_base.609" = type { %"struct.std::__1::__hash_node_base.609"* }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.std::__1::__bucket_list_deallocator.611" }
%"class.std::__1::__bucket_list_deallocator.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"struct.std::__1::__hash_node_base.609" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.632" = type { %"class.std::__1::__vector_base.633" }
%"class.std::__1::__vector_base.633" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.634" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.639" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.541" }
%"class.std::__1::shared_ptr.645" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.139", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.646", %"class.std::__1::unique_ptr.660" }
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.649" }
%"class.std::__1::vector.649" = type { %"class.std::__1::__vector_base.650" }
%"class.std::__1::__vector_base.650" = type { %"class.std::__1::unique_ptr.651"*, %"class.std::__1::unique_ptr.651"*, %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::unique_ptr.651" = type { %"class.std::__1::__compressed_pair.1156" }
%"class.std::__1::__compressed_pair.1156" = type { %"struct.std::__1::__compressed_pair_elem.1157" }
%"struct.std::__1::__compressed_pair_elem.1157" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"class.std::__1::unique_ptr.651"* }
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.669", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.669" = type { %"struct.std::__1::__atomic_base.670" }
%"struct.std::__1::__atomic_base.670" = type { %"struct.std::__1::__cxx_atomic_impl.671" }
%"struct.std::__1::__cxx_atomic_impl.671" = type { %"struct.std::__1::__cxx_atomic_base_impl.672" }
%"struct.std::__1::__cxx_atomic_base_impl.672" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.676" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.677", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.677" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.678", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.678" = type { %"class.std::__1::__vector_base.679" }
%"class.std::__1::__vector_base.679" = type { %"class.std::__1::unique_ptr.680"*, %"class.std::__1::unique_ptr.680"*, %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::unique_ptr.680" = type opaque
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.std::__1::unique_ptr.680"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.686", %"class.std::__1::unique_ptr.692", %"struct.std::__1::atomic.152", %"class.std::__1::unique_ptr.698", %"class.std::__1::unique_ptr.704", %"class.std::__1::unique_ptr.710", %"class.std::__1::unique_ptr.716", %"class.std::__1::unique_ptr.722", %"class.std::__1::set.728", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.692" = type { %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.716" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.722" = type { %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.728" = type { %"class.std::__1::__tree.729" }
%"class.std::__1::__tree.729" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.730", %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.737" }
%"class.v8::internal::TaggedImpl.737" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.736" }
%"class.v8::internal::TaggedImpl.736" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.744", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.744" = type { %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.746" }
%"struct.std::__1::__compressed_pair_elem.746" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.750", %"class.v8::internal::DetachableVector.751", %"class.v8::internal::DetachableVector.750", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.751" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.750" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.std::__1::unique_ptr.738", %"class.std::__1::unique_ptr.481" }
%"class.std::__1::unique_ptr.738" = type { %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.752", %"class.std::__1::vector.758", %"class.std::__1::unique_ptr.765", %"class.std::__1::vector.772", %"class.std::__1::unique_ptr.779", i64, %"class.std::__1::vector.785", %"class.std::__1::vector.793", %"class.std::__1::vector.801", i8, i8, i32 }
%"class.std::__1::unique_ptr.752" = type { %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.758" = type { %"class.std::__1::__vector_base.759" }
%"class.std::__1::__vector_base.759" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.760" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.v8::internal::GlobalHandles::NodeSpace.768"* }
%"class.v8::internal::GlobalHandles::NodeSpace.768" = type opaque
%"class.std::__1::vector.772" = type { %"class.std::__1::__vector_base.773" }
%"class.std::__1::__vector_base.773" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.774" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.785" = type { %"class.std::__1::__vector_base.786" }
%"class.std::__1::__vector_base.786" = type { %"struct.std::__1::pair.787"*, %"struct.std::__1::pair.787"*, %"class.std::__1::__compressed_pair.788" }
%"struct.std::__1::pair.787" = type opaque
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.789" }
%"struct.std::__1::__compressed_pair_elem.789" = type { %"struct.std::__1::pair.787"* }
%"class.std::__1::vector.793" = type { %"class.std::__1::__vector_base.794" }
%"class.std::__1::__vector_base.794" = type { %"struct.std::__1::pair.795"*, %"struct.std::__1::pair.795"*, %"class.std::__1::__compressed_pair.796" }
%"struct.std::__1::pair.795" = type opaque
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"struct.std::__1::pair.795"* }
%"class.std::__1::vector.801" = type { %"class.std::__1::__vector_base.802" }
%"class.std::__1::__vector_base.802" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.803" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.808", %"class.std::__1::vector.815" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.822" }
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { i32*, i32*, %"class.std::__1::__compressed_pair.817" }
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.828" = type { %"struct.std::__1::__atomic_base.829" }
%"struct.std::__1::__atomic_base.829" = type { %"struct.std::__1::__cxx_atomic_impl.830" }
%"struct.std::__1::__cxx_atomic_impl.830" = type { %"struct.std::__1::__cxx_atomic_base_impl.831" }
%"struct.std::__1::__cxx_atomic_base_impl.831" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.838" = type { %"struct.std::__1::__atomic_base.839" }
%"struct.std::__1::__atomic_base.839" = type { %"struct.std::__1::__cxx_atomic_impl.840" }
%"struct.std::__1::__cxx_atomic_impl.840" = type { %"struct.std::__1::__cxx_atomic_base_impl.841" }
%"struct.std::__1::__cxx_atomic_base_impl.841" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.843" }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.844" }
%"struct.std::__1::__compressed_pair_elem.844" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.845 }
%union.anon.845 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.849" = type { %"class.std::__1::__hash_table.850" }
%"class.std::__1::__hash_table.850" = type <{ %"class.std::__1::unique_ptr.851", %"class.std::__1::__compressed_pair.861", %"class.std::__1::__compressed_pair.866", %"class.std::__1::__compressed_pair.869", [4 x i8] }>
%"class.std::__1::unique_ptr.851" = type { %"class.std::__1::__compressed_pair.852" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.853", %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.853" = type { %"struct.std::__1::__hash_node_base.854"** }
%"struct.std::__1::__hash_node_base.854" = type { %"struct.std::__1::__hash_node_base.854"* }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.std::__1::__bucket_list_deallocator.856" }
%"class.std::__1::__bucket_list_deallocator.856" = type { %"class.std::__1::__compressed_pair.857" }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"struct.std::__1::__hash_node_base.854" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.152" = type { %"struct.std::__1::__atomic_base.153" }
%"struct.std::__1::__atomic_base.153" = type { %"struct.std::__1::__cxx_atomic_impl.154" }
%"struct.std::__1::__cxx_atomic_impl.154" = type { %"struct.std::__1::__cxx_atomic_base_impl.155" }
%"struct.std::__1::__cxx_atomic_base_impl.155" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.875", %"class.v8::internal::Handle.881", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.882", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.875" = type { %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.881" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.882" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.883", %"class.std::__1::vector.889", %"class.std::__1::unique_ptr.897", %"class.std::__1::unique_ptr.903", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.909", %"class.std::__1::vector.915", %"struct.std::__1::pair.923" }
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.889" = type { %"class.std::__1::__vector_base.890" }
%"class.std::__1::__vector_base.890" = type { %"class.std::__1::unique_ptr.891"*, %"class.std::__1::unique_ptr.891"*, %"class.std::__1::__compressed_pair.892" }
%"class.std::__1::unique_ptr.891" = type opaque
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"class.std::__1::unique_ptr.891"* }
%"class.std::__1::unique_ptr.897" = type { %"class.std::__1::__compressed_pair.898" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.903" = type { %"class.std::__1::__compressed_pair.904" }
%"class.std::__1::__compressed_pair.904" = type { %"struct.std::__1::__compressed_pair_elem.905" }
%"struct.std::__1::__compressed_pair_elem.905" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.909" = type { %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.911" }
%"struct.std::__1::__compressed_pair_elem.911" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.915" = type { %"class.std::__1::__vector_base.916" }
%"class.std::__1::__vector_base.916" = type { %"struct.std::__1::pair.917"*, %"struct.std::__1::pair.917"*, %"class.std::__1::__compressed_pair.918" }
%"struct.std::__1::pair.917" = type opaque
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"struct.std::__1::pair.917"* }
%"struct.std::__1::pair.923" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.0"*, i16, i8*)*, i8* }
%"class.v8::Local.0" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.924" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.927", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.927" = type { %"class.std::__1::__hash_table.928" }
%"class.std::__1::__hash_table.928" = type <{ %"class.std::__1::unique_ptr.929", %"class.std::__1::__compressed_pair.939", %"class.std::__1::__compressed_pair.944", %"class.std::__1::__compressed_pair.948", [4 x i8] }>
%"class.std::__1::unique_ptr.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931", %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"struct.std::__1::__hash_node_base.932"** }
%"struct.std::__1::__hash_node_base.932" = type { %"struct.std::__1::__hash_node_base.932"* }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.std::__1::__bucket_list_deallocator.934" }
%"class.std::__1::__bucket_list_deallocator.934" = type { %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.939" = type { %"struct.std::__1::__compressed_pair_elem.940" }
%"struct.std::__1::__compressed_pair_elem.940" = type { %"struct.std::__1::__hash_node_base.932" }
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.948" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::AstStringConstants" = type { %"class.v8::internal::Zone", %"class.v8::base::TemplateHashMapImpl", i64, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"* }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::base::TemplateHashMapImpl" = type { %"struct.v8::base::TemplateHashMapImpl<const v8::internal::AstRawString *, v8::base::NoHashMapValue, v8::internal::AstRawStringMapMatcher, v8::base::DefaultAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<const v8::internal::AstRawString *, v8::base::NoHashMapValue, v8::internal::AstRawStringMapMatcher, v8::base::DefaultAllocationPolicy>::Impl" = type { %"struct.v8::base::TemplateHashMapEntry"*, i32, i32 }
%"struct.v8::base::TemplateHashMapEntry" = type <{ %union.anon.1155, i32, [4 x i8] }>
%union.anon.1155 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::AstRawString" = type <{ %union.anon.956, %"class.v8::internal::Vector", i32, i8, [3 x i8] }>
%union.anon.956 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::Vector" = type { i8*, i64 }
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.964" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.958"**, %"struct.std::__1::pair.958"**, %"struct.std::__1::pair.958"**, %"class.std::__1::__compressed_pair.959" }
%"struct.std::__1::pair.958" = type opaque
%"class.std::__1::__compressed_pair.959" = type { %"struct.std::__1::__compressed_pair_elem.960" }
%"struct.std::__1::__compressed_pair_elem.960" = type { %"struct.std::__1::pair.958"** }
%"class.std::__1::__compressed_pair.964" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.969" = type { %"class.std::__1::__vector_base.970" }
%"class.std::__1::__vector_base.970" = type { %"class.v8::internal::Handle.971"*, %"class.v8::internal::Handle.971"*, %"class.std::__1::__compressed_pair.972" }
%"class.v8::internal::Handle.971" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.972" = type { %"struct.std::__1::__compressed_pair_elem.973" }
%"struct.std::__1::__compressed_pair_elem.973" = type { %"class.v8::internal::Handle.971"* }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector.977", [128 x i8] }
%"class.v8::internal::Vector.977" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.833", i32, %"class.v8::Local.0" }
%"class.v8::Local.833" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.978" = type { %"class.std::__1::__compressed_pair.979" }
%"class.std::__1::__compressed_pair.979" = type { %"struct.std::__1::__compressed_pair_elem.980" }
%"struct.std::__1::__compressed_pair_elem.980" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.984" = type { %"class.std::__1::__vector_base.985" }
%"class.std::__1::__vector_base.985" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.986" }
%"class.std::__1::__compressed_pair.986" = type { %"struct.std::__1::__compressed_pair_elem.987" }
%"struct.std::__1::__compressed_pair_elem.987" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.991" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.992" = type { %"class.std::__1::__hash_table.993" }
%"class.std::__1::__hash_table.993" = type <{ %"class.std::__1::unique_ptr.994", %"class.std::__1::__compressed_pair.1004", %"class.std::__1::__compressed_pair.1009", %"class.std::__1::__compressed_pair.1012", [4 x i8] }>
%"class.std::__1::unique_ptr.994" = type { %"class.std::__1::__compressed_pair.995" }
%"class.std::__1::__compressed_pair.995" = type { %"struct.std::__1::__compressed_pair_elem.996", %"struct.std::__1::__compressed_pair_elem.998" }
%"struct.std::__1::__compressed_pair_elem.996" = type { %"struct.std::__1::__hash_node_base.997"** }
%"struct.std::__1::__hash_node_base.997" = type { %"struct.std::__1::__hash_node_base.997"* }
%"struct.std::__1::__compressed_pair_elem.998" = type { %"class.std::__1::__bucket_list_deallocator.999" }
%"class.std::__1::__bucket_list_deallocator.999" = type { %"class.std::__1::__compressed_pair.1000" }
%"class.std::__1::__compressed_pair.1000" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1004" = type { %"struct.std::__1::__compressed_pair_elem.1005" }
%"struct.std::__1::__compressed_pair_elem.1005" = type { %"struct.std::__1::__hash_node_base.997" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1012" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.541" = type { %"class.std::__1::__vector_base.542" }
%"class.std::__1::__vector_base.542" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.160" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1016", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1045", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1046", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1016" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1041, %union.anon.1043, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1041 = type { i64 }
%union.anon.1043 = type { i64 }
%"class.std::__1::weak_ptr.1045" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1046" = type { %"class.v8::PersistentBase.1047" }
%"class.v8::PersistentBase.1047" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1017", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1017" = type { %"class.std::__1::__hash_table.1018" }
%"class.std::__1::__hash_table.1018" = type <{ %"class.std::__1::unique_ptr.1019", %"class.std::__1::__compressed_pair.1029", %"class.std::__1::__compressed_pair.1034", %"class.std::__1::__compressed_pair.1037", [4 x i8] }>
%"class.std::__1::unique_ptr.1019" = type { %"class.std::__1::__compressed_pair.1020" }
%"class.std::__1::__compressed_pair.1020" = type { %"struct.std::__1::__compressed_pair_elem.1021", %"struct.std::__1::__compressed_pair_elem.1023" }
%"struct.std::__1::__compressed_pair_elem.1021" = type { %"struct.std::__1::__hash_node_base.1022"** }
%"struct.std::__1::__hash_node_base.1022" = type { %"struct.std::__1::__hash_node_base.1022"* }
%"struct.std::__1::__compressed_pair_elem.1023" = type { %"class.std::__1::__bucket_list_deallocator.1024" }
%"class.std::__1::__bucket_list_deallocator.1024" = type { %"class.std::__1::__compressed_pair.1025" }
%"class.std::__1::__compressed_pair.1025" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1029" = type { %"struct.std::__1::__compressed_pair_elem.1030" }
%"struct.std::__1::__compressed_pair_elem.1030" = type { %"struct.std::__1::__hash_node_base.1022" }
%"class.std::__1::__compressed_pair.1034" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1037" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1048" = type { %"class.std::__1::__compressed_pair.1049" }
%"class.std::__1::__compressed_pair.1049" = type { %"struct.std::__1::__compressed_pair_elem.1050" }
%"struct.std::__1::__compressed_pair_elem.1050" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1077", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1077" = type { %"class.std::__1::__compressed_pair.1078" }
%"class.std::__1::__compressed_pair.1078" = type { %"struct.std::__1::__compressed_pair_elem.1079" }
%"struct.std::__1::__compressed_pair_elem.1079" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1086" = type { %"class.std::__1::__compressed_pair.1087" }
%"class.std::__1::__compressed_pair.1087" = type { %"struct.std::__1::__compressed_pair_elem.1088" }
%"struct.std::__1::__compressed_pair_elem.1088" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.834", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.834" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1094" }
%"class.std::__1::unordered_map.1094" = type { %"class.std::__1::__hash_table.1095" }
%"class.std::__1::__hash_table.1095" = type <{ %"class.std::__1::unique_ptr.1096", %"class.std::__1::__compressed_pair.1106", %"class.std::__1::__compressed_pair.1111", %"class.std::__1::__compressed_pair.1114", [4 x i8] }>
%"class.std::__1::unique_ptr.1096" = type { %"class.std::__1::__compressed_pair.1097" }
%"class.std::__1::__compressed_pair.1097" = type { %"struct.std::__1::__compressed_pair_elem.1098", %"struct.std::__1::__compressed_pair_elem.1100" }
%"struct.std::__1::__compressed_pair_elem.1098" = type { %"struct.std::__1::__hash_node_base.1099"** }
%"struct.std::__1::__hash_node_base.1099" = type { %"struct.std::__1::__hash_node_base.1099"* }
%"struct.std::__1::__compressed_pair_elem.1100" = type { %"class.std::__1::__bucket_list_deallocator.1101" }
%"class.std::__1::__bucket_list_deallocator.1101" = type { %"class.std::__1::__compressed_pair.1102" }
%"class.std::__1::__compressed_pair.1102" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1106" = type { %"struct.std::__1::__compressed_pair_elem.1107" }
%"struct.std::__1::__compressed_pair_elem.1107" = type { %"struct.std::__1::__hash_node_base.1099" }
%"class.std::__1::__compressed_pair.1111" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1114" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.1120" = type { %"struct.std::__1::__atomic_base.1121" }
%"struct.std::__1::__atomic_base.1121" = type { %"struct.std::__1::__cxx_atomic_impl.1122" }
%"struct.std::__1::__cxx_atomic_impl.1122" = type { %"struct.std::__1::__cxx_atomic_base_impl.1123" }
%"struct.std::__1::__cxx_atomic_base_impl.1123" = type { %"class.std::__1::vector.1124"* }
%"class.std::__1::vector.1124" = type { %"class.std::__1::__vector_base.1125" }
%"class.std::__1::__vector_base.1125" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1126" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1126" = type { %"struct.std::__1::__compressed_pair_elem.1127" }
%"struct.std::__1::__compressed_pair_elem.1127" = type { %"struct.v8::MemoryRange"* }
%"class.v8::Platform" = type { i32 (...)** }
%"class.v8::internal::FactoryBase" = type { i8 }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base.1137", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.1161" }
%"struct.std::__1::pair.1161" = type { i32, i32 }

$_ZN2v88internal20RegExpMacroAssembler21AbortedCodeGenerationEv = comdat any

$_ZN2v88internal23RegExpBytecodeGenerator17stack_limit_slackEv = comdat any

$_ZN2v88internal23RegExpBytecodeGenerator16CanReadUnalignedEv = comdat any

$_ZN2v88internal20RegExpMacroAssembler14BindJumpTargetEPNS0_5LabelE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiiEENS_22__unordered_map_hasherIiS2_N2v84base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS2_S9_S7_Lb1EEENS4_8internal13ZoneAllocatorIS2_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiiEENS_22__unordered_map_hasherIiS2_N2v84base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS2_S9_S7_Lb1EEENS4_8internal13ZoneAllocatorIS2_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiiEENS_22__unordered_map_hasherIiS2_N2v84base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS2_S9_S7_Lb1EEENS4_8internal13ZoneAllocatorIS2_EEE25__emplace_unique_key_argsIiJRiSI_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_ = comdat any

@_ZTVN2v88internal23RegExpBytecodeGeneratorE = hidden unnamed_addr constant { [50 x i8*] } { [50 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::RegExpBytecodeGenerator"*)* @_ZN2v88internal23RegExpBytecodeGeneratorD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::RegExpBytecodeGenerator"*)* @_ZN2v88internal23RegExpBytecodeGeneratorD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::RegExpMacroAssembler"*)* @_ZN2v88internal20RegExpMacroAssembler21AbortedCodeGenerationEv to i8*), i8* bitcast (i32 (%"class.v8::internal::RegExpBytecodeGenerator"*)* @_ZN2v88internal23RegExpBytecodeGenerator17stack_limit_slackEv to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpBytecodeGenerator"*)* @_ZN2v88internal23RegExpBytecodeGenerator16CanReadUnalignedEv to i8*), i8* bitcast (void (%"class.v8::internal::RegExpBytecodeGenerator"*, i32)* @_ZN2v88internal23RegExpBytecodeGenerator22AdvanceCurrentPositionEi to i8*), i8* bitcast (void (%"class.v8::internal::RegExpBytecodeGenerator"*, i32, i32)* @_ZN2v88internal23RegExpBytecodeGenerator15AdvanceRegisterEii to i8*), i8* bitcast (void (%"class.v8::internal::RegExpBytecodeGenerator"*)* @_ZN2v88internal23RegExpBytecodeGenerator9BacktrackEv to i8*), i8* bitcast (void (%"class.v8::internal::RegExpBytecodeGenerator"*, %"class.v8::internal::Label"*)* @_ZN2v88internal23RegExpBytecodeGenerator4BindEPNS0_5LabelE to i8*), i8* bitcast (void (%"class.v8::internal::RegExpBytecodeGenerator"*, i32, %"class.v8::internal::Label"*)* @_ZN2v88internal23RegExpBytecodeGenerator14CheckCharacterEjPNS0_5LabelE to i8*), i8* bitcast (void (%"class.v8::internal::RegExpBytecodeGenerator"*, i32, i32, %"class.v8::internal::Label"*)* @_ZN2v88internal23RegExpBytecodeGenerator22CheckCharacterAfterAndEjjPNS0_5LabelE to i8*), i8* bitcast (void (%"class.v8::internal::RegExpBytecodeGenerator"*, i16, %"class.v8::internal::Label"*)* @_ZN2v88internal23RegExpBytecodeGenerator16CheckCharacterGTEtPNS0_5LabelE to i8*), i8* bitcast (void (%"class.v8::internal::RegExpBytecodeGenerator"*, i16, %"class.v8::internal::Label"*)* @_ZN2v88internal23RegExpBytecodeGenerator16CheckCharacterLTEtPNS0_5LabelE to i8*), i8* bitcast (void (%"class.v8::internal::RegExpBytecodeGenerator"*, %"class.v8::internal::Label"*)* @_ZN2v88internal23RegExpBytecodeGenerator15CheckGreedyLoopEPNS0_5LabelE to i8*), i8* bitcast (void (%"class.v8::internal::RegExpBytecodeGenerator"*, i32, %"class.v8::internal::Label"*)* @_ZN2v88internal23RegExpBytecodeGenerator12CheckAtStartEiPNS0_5LabelE to i8*), i8* bitcast (void (%"class.v8::internal::RegExpBytecodeGenerator"*, i32, %"class.v8::internal::Label"*)* @_ZN2v88internal23RegExpBytecodeGenerator15CheckNotAtStartEiPNS0_5LabelE to i8*), i8* bitcast (void (%"class.v8::internal::RegExpBytecodeGenerator"*, i32, i1, %"class.v8::internal::Label"*)* @_ZN2v88internal23RegExpBytecodeGenerator21CheckNotBackReferenceEibPNS0_5LabelE to i8*), i8* bitcast (void (%"class.v8::internal::RegExpBytecodeGenerator"*, i32, i1, i1, %"class.v8::internal::Label"*)* @_ZN2v88internal23RegExpBytecodeGenerator31CheckNotBackReferenceIgnoreCaseEibbPNS0_5LabelE to i8*), i8* bitcast (void (%"class.v8::internal::RegExpBytecodeGenerator"*, i32, %"class.v8::internal::Label"*)* @_ZN2v88internal23RegExpBytecodeGenerator17CheckNotCharacterEjPNS0_5LabelE to i8*), i8* bitcast (void (%"class.v8::internal::RegExpBytecodeGenerator"*, i32, i32, %"class.v8::internal::Label"*)* @_ZN2v88internal23RegExpBytecodeGenerator25CheckNotCharacterAfterAndEjjPNS0_5LabelE to i8*), i8* bitcast (void (%"class.v8::internal::RegExpBytecodeGenerator"*, i16, i16, i16, %"class.v8::internal::Label"*)* @_ZN2v88internal23RegExpBytecodeGenerator30CheckNotCharacterAfterMinusAndEtttPNS0_5LabelE to i8*), i8* bitcast (void (%"class.v8::internal::RegExpBytecodeGenerator"*, i16, i16, %"class.v8::internal::Label"*)* @_ZN2v88internal23RegExpBytecodeGenerator21CheckCharacterInRangeEttPNS0_5LabelE to i8*), i8* bitcast (void (%"class.v8::internal::RegExpBytecodeGenerator"*, i16, i16, %"class.v8::internal::Label"*)* @_ZN2v88internal23RegExpBytecodeGenerator24CheckCharacterNotInRangeEttPNS0_5LabelE to i8*), i8* bitcast (void (%"class.v8::internal::RegExpBytecodeGenerator"*, i64*, %"class.v8::internal::Label"*)* @_ZN2v88internal23RegExpBytecodeGenerator15CheckBitInTableENS0_6HandleINS0_9ByteArrayEEEPNS0_5LabelE to i8*), i8* bitcast (void (%"class.v8::internal::RegExpMacroAssembler"*, i32, %"class.v8::internal::Label"*)* @_ZN2v88internal20RegExpMacroAssembler13CheckPositionEiPNS0_5LabelE to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpMacroAssembler"*, i16, %"class.v8::internal::Label"*)* @_ZN2v88internal20RegExpMacroAssembler26CheckSpecialCharacterClassEtPNS0_5LabelE to i8*), i8* bitcast (void (%"class.v8::internal::RegExpMacroAssembler"*, %"class.v8::internal::Label"*)* @_ZN2v88internal20RegExpMacroAssembler14BindJumpTargetEPNS0_5LabelE to i8*), i8* bitcast (void (%"class.v8::internal::RegExpBytecodeGenerator"*)* @_ZN2v88internal23RegExpBytecodeGenerator4FailEv to i8*), i8* bitcast (i64* (%"class.v8::internal::RegExpBytecodeGenerator"*, i64*)* @_ZN2v88internal23RegExpBytecodeGenerator7GetCodeENS0_6HandleINS0_6StringEEE to i8*), i8* bitcast (void (%"class.v8::internal::RegExpBytecodeGenerator"*, %"class.v8::internal::Label"*)* @_ZN2v88internal23RegExpBytecodeGenerator4GoToEPNS0_5LabelE to i8*), i8* bitcast (void (%"class.v8::internal::RegExpBytecodeGenerator"*, i32, i32, %"class.v8::internal::Label"*)* @_ZN2v88internal23RegExpBytecodeGenerator12IfRegisterGEEiiPNS0_5LabelE to i8*), i8* bitcast (void (%"class.v8::internal::RegExpBytecodeGenerator"*, i32, i32, %"class.v8::internal::Label"*)* @_ZN2v88internal23RegExpBytecodeGenerator12IfRegisterLTEiiPNS0_5LabelE to i8*), i8* bitcast (void (%"class.v8::internal::RegExpBytecodeGenerator"*, i32, %"class.v8::internal::Label"*)* @_ZN2v88internal23RegExpBytecodeGenerator15IfRegisterEqPosEiPNS0_5LabelE to i8*), i8* bitcast (i32 (%"class.v8::internal::RegExpBytecodeGenerator"*)* @_ZN2v88internal23RegExpBytecodeGenerator14ImplementationEv to i8*), i8* bitcast (void (%"class.v8::internal::RegExpBytecodeGenerator"*, i32, %"class.v8::internal::Label"*, i1, i32, i32)* @_ZN2v88internal23RegExpBytecodeGenerator24LoadCurrentCharacterImplEiPNS0_5LabelEbii to i8*), i8* bitcast (void (%"class.v8::internal::RegExpBytecodeGenerator"*)* @_ZN2v88internal23RegExpBytecodeGenerator18PopCurrentPositionEv to i8*), i8* bitcast (void (%"class.v8::internal::RegExpBytecodeGenerator"*, i32)* @_ZN2v88internal23RegExpBytecodeGenerator11PopRegisterEi to i8*), i8* bitcast (void (%"class.v8::internal::RegExpBytecodeGenerator"*, %"class.v8::internal::Label"*)* @_ZN2v88internal23RegExpBytecodeGenerator13PushBacktrackEPNS0_5LabelE to i8*), i8* bitcast (void (%"class.v8::internal::RegExpBytecodeGenerator"*)* @_ZN2v88internal23RegExpBytecodeGenerator19PushCurrentPositionEv to i8*), i8* bitcast (void (%"class.v8::internal::RegExpBytecodeGenerator"*, i32, i32)* @_ZN2v88internal23RegExpBytecodeGenerator12PushRegisterEiNS0_20RegExpMacroAssembler14StackCheckFlagE to i8*), i8* bitcast (void (%"class.v8::internal::RegExpBytecodeGenerator"*, i32)* @_ZN2v88internal23RegExpBytecodeGenerator31ReadCurrentPositionFromRegisterEi to i8*), i8* bitcast (void (%"class.v8::internal::RegExpBytecodeGenerator"*, i32)* @_ZN2v88internal23RegExpBytecodeGenerator28ReadStackPointerFromRegisterEi to i8*), i8* bitcast (void (%"class.v8::internal::RegExpBytecodeGenerator"*, i32)* @_ZN2v88internal23RegExpBytecodeGenerator25SetCurrentPositionFromEndEi to i8*), i8* bitcast (void (%"class.v8::internal::RegExpBytecodeGenerator"*, i32, i32)* @_ZN2v88internal23RegExpBytecodeGenerator11SetRegisterEii to i8*), i8* bitcast (i1 (%"class.v8::internal::RegExpBytecodeGenerator"*)* @_ZN2v88internal23RegExpBytecodeGenerator7SucceedEv to i8*), i8* bitcast (void (%"class.v8::internal::RegExpBytecodeGenerator"*, i32, i32)* @_ZN2v88internal23RegExpBytecodeGenerator30WriteCurrentPositionToRegisterEii to i8*), i8* bitcast (void (%"class.v8::internal::RegExpBytecodeGenerator"*, i32, i32)* @_ZN2v88internal23RegExpBytecodeGenerator14ClearRegistersEii to i8*), i8* bitcast (void (%"class.v8::internal::RegExpBytecodeGenerator"*, i32)* @_ZN2v88internal23RegExpBytecodeGenerator27WriteStackPointerToRegisterEi to i8*)] }, align 8
@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"kMinCPOffset <= by\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"kMaxCPOffset >= by\00", align 1
@_ZN2v88internal33FLAG_regexp_peephole_optimizationE = external local_unnamed_addr global i8, align 1
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"NewArray\00", align 1

@_ZN2v88internal23RegExpBytecodeGeneratorC1EPNS0_7IsolateEPNS0_4ZoneE = hidden unnamed_addr alias void (%"class.v8::internal::RegExpBytecodeGenerator"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Zone"*), void (%"class.v8::internal::RegExpBytecodeGenerator"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Zone"*)* @_ZN2v88internal23RegExpBytecodeGeneratorC2EPNS0_7IsolateEPNS0_4ZoneE
@_ZN2v88internal23RegExpBytecodeGeneratorD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::RegExpBytecodeGenerator"*), void (%"class.v8::internal::RegExpBytecodeGenerator"*)* @_ZN2v88internal23RegExpBytecodeGeneratorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGeneratorC2EPNS0_7IsolateEPNS0_4ZoneE(%"class.v8::internal::RegExpBytecodeGenerator"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Zone"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 0
  tail call void @_ZN2v88internal20RegExpMacroAssemblerC2EPNS0_7IsolateEPNS0_4ZoneE(%"class.v8::internal::RegExpMacroAssembler"* %4, %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Zone"* %2) #10
  %5 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [50 x i8*] }, { [50 x i8*] }* @_ZTVN2v88internal23RegExpBytecodeGeneratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 1024, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #11
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = tail call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #10
  %10 = bitcast %"class.v8::Platform"* %9 to void (%"class.v8::Platform"*)***
  %11 = load void (%"class.v8::Platform"*)**, void (%"class.v8::Platform"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %11, i64 3
  %13 = load void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %12, align 8
  tail call void %13(%"class.v8::Platform"* %9) #10
  %14 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 1024, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #11
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %8
  tail call void @_ZN2v88internal23FatalProcessOutOfMemoryEPNS0_7IsolateEPKc(%"class.v8::internal::Isolate"* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0)) #12
  unreachable

17:                                               ; preds = %3, %8
  %18 = phi i8* [ %14, %8 ], [ %6, %3 ]
  %19 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  store i8* %18, i8** %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  store i64 1024, i64* %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 3, i32 0
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 3, i32 1
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 6
  store i32 -1, i32* %24, align 4
  %25 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 7
  %26 = ptrtoint %"class.v8::internal::Zone"* %2 to i64
  %27 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedMap", %"class.v8::internal::ZoneUnorderedMap"* %25, i64 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %29 = bitcast %"struct.std::__1::__compressed_pair_elem.1141"* %28 to i64*
  %30 = bitcast %"class.v8::internal::ZoneUnorderedMap"* %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #10
  store i64 %26, i64* %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.1137"* null, %"struct.std::__1::__hash_node_base.1137"** %31, align 8
  %32 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 1
  %33 = bitcast %"struct.std::__1::__compressed_pair_elem.1144"* %32 to i64*
  store i64 %26, i64* %33, align 8
  %34 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 7, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %34, align 8
  %35 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 7, i32 0, i32 0, i32 3
  %36 = bitcast %"class.std::__1::__compressed_pair.1149"* %35 to i32*
  store i32 1065353216, i32* %36, align 4
  %37 = tail call i64 @_ZNSt3__112__next_primeEm(i64 100) #10
  %38 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp ugt i64 %37, %39
  br i1 %40, label %41, label %42

41:                                               ; preds = %17
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiiEENS_22__unordered_map_hasherIiS2_N2v84base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS2_S9_S7_Lb1EEENS4_8internal13ZoneAllocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.1133"* %27, i64 %37) #10
  br label %71

42:                                               ; preds = %17
  %43 = icmp ult i64 %37, %39
  br i1 %43, label %44, label %71

44:                                               ; preds = %42
  %45 = icmp ugt i64 %39, 2
  %46 = tail call i64 @llvm.ctpop.i64(i64 %39) #10, !range !2
  %47 = icmp ult i64 %46, 2
  %48 = and i1 %45, %47
  %49 = load i64, i64* %34, align 8
  %50 = uitofp i64 %49 to float
  %51 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 7, i32 0, i32 0, i32 3, i32 0, i32 0
  %52 = load float, float* %51, align 4
  %53 = fdiv float %50, %52
  %54 = tail call float @llvm.ceil.f32(float %53) #10
  %55 = fptoui float %54 to i64
  br i1 %48, label %56, label %63

56:                                               ; preds = %44
  %57 = icmp ult i64 %55, 2
  br i1 %57, label %65, label %58

58:                                               ; preds = %56
  %59 = add i64 %55, -1
  %60 = tail call i64 @llvm.ctlz.i64(i64 %59, i1 true) #10, !range !2
  %61 = sub nuw nsw i64 64, %60
  %62 = shl i64 1, %61
  br label %65

63:                                               ; preds = %44
  %64 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %55) #10
  br label %65

65:                                               ; preds = %63, %58, %56
  %66 = phi i64 [ %64, %63 ], [ %62, %58 ], [ %55, %56 ]
  %67 = icmp ult i64 %37, %66
  %68 = select i1 %67, i64 %66, i64 %37
  %69 = icmp ult i64 %68, %39
  br i1 %69, label %70, label %71

70:                                               ; preds = %65
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiiEENS_22__unordered_map_hasherIiS2_N2v84base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS2_S9_S7_Lb1EEENS4_8internal13ZoneAllocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.1133"* %27, i64 %68) #10
  br label %71

71:                                               ; preds = %41, %42, %65, %70
  %72 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 8
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %72, align 8
  ret void
}

declare void @_ZN2v88internal20RegExpMacroAssemblerC2EPNS0_7IsolateEPNS0_4ZoneE(%"class.v8::internal::RegExpMacroAssembler"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Zone"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGeneratorD2Ev(%"class.v8::internal::RegExpBytecodeGenerator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [50 x i8*] }, { [50 x i8*] }* @_ZTVN2v88internal23RegExpBytecodeGeneratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 3, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  store i32 0, i32* %3, align 4
  br label %7

7:                                                ; preds = %6, %1
  %8 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.v8::internal::Vector.1131", %"class.v8::internal::Vector.1131"* %8, i64 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %7
  tail call void @_ZdaPv(i8* nonnull %10) #11
  br label %13

13:                                               ; preds = %7, %12
  %14 = bitcast %"class.v8::internal::Vector.1131"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #10
  %15 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"struct.std::__1::__hash_node_base.1137"*, %"struct.std::__1::__hash_node_base.1137"** %15, align 8
  %17 = icmp eq %"struct.std::__1::__hash_node_base.1137"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %13, %18
  %19 = phi %"struct.std::__1::__hash_node_base.1137"* [ %21, %18 ], [ %16, %13 ]
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137", %"struct.std::__1::__hash_node_base.1137"* %19, i64 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.1137"*, %"struct.std::__1::__hash_node_base.1137"** %20, align 8
  %22 = icmp eq %"struct.std::__1::__hash_node_base.1137"* %21, null
  br i1 %22, label %23, label %18

23:                                               ; preds = %18, %13
  %24 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.1137"** null, %"struct.std::__1::__hash_node_base.1137"*** %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 0
  tail call void @_ZN2v88internal20RegExpMacroAssemblerD2Ev(%"class.v8::internal::RegExpMacroAssembler"* %25) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2v88internal20RegExpMacroAssemblerD2Ev(%"class.v8::internal::RegExpMacroAssembler"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGeneratorD0Ev(%"class.v8::internal::RegExpBytecodeGenerator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [50 x i8*] }, { [50 x i8*] }* @_ZTVN2v88internal23RegExpBytecodeGeneratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 3, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  store i32 0, i32* %3, align 4
  br label %7

7:                                                ; preds = %6, %1
  %8 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.v8::internal::Vector.1131", %"class.v8::internal::Vector.1131"* %8, i64 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %7
  tail call void @_ZdaPv(i8* nonnull %10) #11
  br label %13

13:                                               ; preds = %12, %7
  %14 = bitcast %"class.v8::internal::Vector.1131"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #10
  %15 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 7, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"struct.std::__1::__hash_node_base.1137"*, %"struct.std::__1::__hash_node_base.1137"** %15, align 8
  %17 = icmp eq %"struct.std::__1::__hash_node_base.1137"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %13, %18
  %19 = phi %"struct.std::__1::__hash_node_base.1137"* [ %21, %18 ], [ %16, %13 ]
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137", %"struct.std::__1::__hash_node_base.1137"* %19, i64 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.1137"*, %"struct.std::__1::__hash_node_base.1137"** %20, align 8
  %22 = icmp eq %"struct.std::__1::__hash_node_base.1137"* %21, null
  br i1 %22, label %23, label %18

23:                                               ; preds = %18, %13
  %24 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.1137"** null, %"struct.std::__1::__hash_node_base.1137"*** %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 0
  tail call void @_ZN2v88internal20RegExpMacroAssemblerD2Ev(%"class.v8::internal::RegExpMacroAssembler"* %25) #10
  %26 = bitcast %"class.v8::internal::RegExpBytecodeGenerator"* %0 to i8*
  tail call void @_ZdlPv(i8* %26) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2v88internal23RegExpBytecodeGenerator14ImplementationEv(%"class.v8::internal::RegExpBytecodeGenerator"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i32 8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGenerator4BindEPNS0_5LabelE(%"class.v8::internal::RegExpBytecodeGenerator"*, %"class.v8::internal::Label"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 6
  store i32 -1, i32* %4, align 4
  %5 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %26

8:                                                ; preds = %2
  %9 = add nsw i32 %6, -1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %26, label %11

11:                                               ; preds = %8
  %12 = bitcast i32* %3 to i8*
  %13 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 7, i32 0, i32 0
  br label %16

16:                                               ; preds = %11, %16
  %17 = phi i32 [ %9, %11 ], [ %22, %16 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #10
  store i32 %17, i32* %3, align 4
  %18 = load i8*, i8** %13, align 8
  %19 = sext i32 %17 to i64
  %20 = getelementptr inbounds i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = load i32, i32* %14, align 8
  store i32 %23, i32* %21, align 4
  %24 = call { %"struct.std::__1::__hash_node_base.1137"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiiEENS_22__unordered_map_hasherIiS2_N2v84base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS2_S9_S7_Lb1EEENS4_8internal13ZoneAllocatorIS2_EEE25__emplace_unique_key_argsIiJRiSI_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1133"* %15, i32* nonnull dereferenceable(4) %3, i32* nonnull dereferenceable(4) %3, i32* dereferenceable(4) %14) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #10
  %25 = icmp eq i32 %22, 0
  br i1 %25, label %26, label %16

26:                                               ; preds = %16, %8, %2
  %27 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %28 = load i32, i32* %27, align 8
  %29 = xor i32 %28, -1
  store i32 %29, i32* %5, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGenerator11PopRegisterEi(%"class.v8::internal::RegExpBytecodeGenerator"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = shl i32 %1, 8
  %4 = or i32 %3, 12
  %5 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = add nsw i32 %6, 3
  %8 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = trunc i64 %9 to i32
  %11 = icmp slt i32 %7, %10
  br i1 %11, label %14, label %12

12:                                               ; preds = %2
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %13 = load i32, i32* %5, align 8
  br label %14

14:                                               ; preds = %2, %12
  %15 = phi i32 [ %6, %2 ], [ %13, %12 ]
  %16 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = sext i32 %15 to i64
  %19 = getelementptr inbounds i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to i32*
  store i32 %4, i32* %20, align 4
  %21 = load i32, i32* %5, align 8
  %22 = add nsw i32 %21, 4
  store i32 %22, i32* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGenerator12PushRegisterEiNS0_20RegExpMacroAssembler14StackCheckFlagE(%"class.v8::internal::RegExpBytecodeGenerator"* nocapture, i32, i32) unnamed_addr #0 align 2 {
  %4 = shl i32 %1, 8
  %5 = or i32 %4, 3
  %6 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = add nsw i32 %7, 3
  %9 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = icmp slt i32 %8, %11
  br i1 %12, label %15, label %13

13:                                               ; preds = %3
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %14 = load i32, i32* %6, align 8
  br label %15

15:                                               ; preds = %3, %13
  %16 = phi i32 [ %7, %3 ], [ %14, %13 ]
  %17 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = sext i32 %16 to i64
  %20 = getelementptr inbounds i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to i32*
  store i32 %5, i32* %21, align 4
  %22 = load i32, i32* %6, align 8
  %23 = add nsw i32 %22, 4
  store i32 %23, i32* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGenerator30WriteCurrentPositionToRegisterEii(%"class.v8::internal::RegExpBytecodeGenerator"* nocapture, i32, i32) unnamed_addr #0 align 2 {
  %4 = shl i32 %1, 8
  %5 = or i32 %4, 4
  %6 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = add nsw i32 %7, 3
  %9 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = icmp slt i32 %8, %11
  br i1 %12, label %15, label %13

13:                                               ; preds = %3
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %14 = load i32, i32* %6, align 8
  br label %15

15:                                               ; preds = %3, %13
  %16 = phi i32 [ %7, %3 ], [ %14, %13 ]
  %17 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = sext i32 %16 to i64
  %20 = getelementptr inbounds i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to i32*
  store i32 %5, i32* %21, align 4
  %22 = load i32, i32* %6, align 8
  %23 = add nsw i32 %22, 4
  store i32 %23, i32* %6, align 8
  %24 = add nsw i32 %22, 7
  %25 = load i64, i64* %9, align 8
  %26 = trunc i64 %25 to i32
  %27 = icmp slt i32 %24, %26
  br i1 %27, label %30, label %28

28:                                               ; preds = %15
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %29 = load i32, i32* %6, align 8
  br label %30

30:                                               ; preds = %15, %28
  %31 = phi i32 [ %23, %15 ], [ %29, %28 ]
  %32 = load i8*, i8** %17, align 8
  %33 = sext i32 %31 to i64
  %34 = getelementptr inbounds i8, i8* %32, i64 %33
  %35 = bitcast i8* %34 to i32*
  store i32 %2, i32* %35, align 4
  %36 = load i32, i32* %6, align 8
  %37 = add nsw i32 %36, 4
  store i32 %37, i32* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGenerator14ClearRegistersEii(%"class.v8::internal::RegExpBytecodeGenerator"*, i32, i32) unnamed_addr #0 align 2 {
  %4 = icmp sgt i32 %1, %2
  br i1 %4, label %7, label %5

5:                                                ; preds = %3
  %6 = bitcast %"class.v8::internal::RegExpBytecodeGenerator"* %0 to void (%"class.v8::internal::RegExpBytecodeGenerator"*, i32, i32)***
  br label %8

7:                                                ; preds = %8, %3
  ret void

8:                                                ; preds = %8, %5
  %9 = phi i32 [ %1, %5 ], [ %13, %8 ]
  %10 = load void (%"class.v8::internal::RegExpBytecodeGenerator"*, i32, i32)**, void (%"class.v8::internal::RegExpBytecodeGenerator"*, i32, i32)*** %6, align 8
  %11 = getelementptr inbounds void (%"class.v8::internal::RegExpBytecodeGenerator"*, i32, i32)*, void (%"class.v8::internal::RegExpBytecodeGenerator"*, i32, i32)** %10, i64 43
  %12 = load void (%"class.v8::internal::RegExpBytecodeGenerator"*, i32, i32)*, void (%"class.v8::internal::RegExpBytecodeGenerator"*, i32, i32)** %11, align 8
  tail call void %12(%"class.v8::internal::RegExpBytecodeGenerator"* %0, i32 %9, i32 -1) #10
  %13 = add nsw i32 %9, 1
  %14 = icmp slt i32 %9, %2
  br i1 %14, label %8, label %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGenerator31ReadCurrentPositionFromRegisterEi(%"class.v8::internal::RegExpBytecodeGenerator"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = shl i32 %1, 8
  %4 = or i32 %3, 5
  %5 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = add nsw i32 %6, 3
  %8 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = trunc i64 %9 to i32
  %11 = icmp slt i32 %7, %10
  br i1 %11, label %14, label %12

12:                                               ; preds = %2
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %13 = load i32, i32* %5, align 8
  br label %14

14:                                               ; preds = %2, %12
  %15 = phi i32 [ %6, %2 ], [ %13, %12 ]
  %16 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = sext i32 %15 to i64
  %19 = getelementptr inbounds i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to i32*
  store i32 %4, i32* %20, align 4
  %21 = load i32, i32* %5, align 8
  %22 = add nsw i32 %21, 4
  store i32 %22, i32* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGenerator27WriteStackPointerToRegisterEi(%"class.v8::internal::RegExpBytecodeGenerator"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = shl i32 %1, 8
  %4 = or i32 %3, 6
  %5 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = add nsw i32 %6, 3
  %8 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = trunc i64 %9 to i32
  %11 = icmp slt i32 %7, %10
  br i1 %11, label %14, label %12

12:                                               ; preds = %2
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %13 = load i32, i32* %5, align 8
  br label %14

14:                                               ; preds = %2, %12
  %15 = phi i32 [ %6, %2 ], [ %13, %12 ]
  %16 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = sext i32 %15 to i64
  %19 = getelementptr inbounds i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to i32*
  store i32 %4, i32* %20, align 4
  %21 = load i32, i32* %5, align 8
  %22 = add nsw i32 %21, 4
  store i32 %22, i32* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGenerator28ReadStackPointerFromRegisterEi(%"class.v8::internal::RegExpBytecodeGenerator"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = shl i32 %1, 8
  %4 = or i32 %3, 7
  %5 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = add nsw i32 %6, 3
  %8 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = trunc i64 %9 to i32
  %11 = icmp slt i32 %7, %10
  br i1 %11, label %14, label %12

12:                                               ; preds = %2
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %13 = load i32, i32* %5, align 8
  br label %14

14:                                               ; preds = %2, %12
  %15 = phi i32 [ %6, %2 ], [ %13, %12 ]
  %16 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = sext i32 %15 to i64
  %19 = getelementptr inbounds i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to i32*
  store i32 %4, i32* %20, align 4
  %21 = load i32, i32* %5, align 8
  %22 = add nsw i32 %21, 4
  store i32 %22, i32* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGenerator25SetCurrentPositionFromEndEi(%"class.v8::internal::RegExpBytecodeGenerator"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = shl i32 %1, 8
  %4 = or i32 %3, 51
  %5 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = add nsw i32 %6, 3
  %8 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = trunc i64 %9 to i32
  %11 = icmp slt i32 %7, %10
  br i1 %11, label %14, label %12

12:                                               ; preds = %2
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %13 = load i32, i32* %5, align 8
  br label %14

14:                                               ; preds = %2, %12
  %15 = phi i32 [ %6, %2 ], [ %13, %12 ]
  %16 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = sext i32 %15 to i64
  %19 = getelementptr inbounds i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to i32*
  store i32 %4, i32* %20, align 4
  %21 = load i32, i32* %5, align 8
  %22 = add nsw i32 %21, 4
  store i32 %22, i32* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGenerator11SetRegisterEii(%"class.v8::internal::RegExpBytecodeGenerator"* nocapture, i32, i32) unnamed_addr #0 align 2 {
  %4 = shl i32 %1, 8
  %5 = or i32 %4, 8
  %6 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = add nsw i32 %7, 3
  %9 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = icmp slt i32 %8, %11
  br i1 %12, label %15, label %13

13:                                               ; preds = %3
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %14 = load i32, i32* %6, align 8
  br label %15

15:                                               ; preds = %3, %13
  %16 = phi i32 [ %7, %3 ], [ %14, %13 ]
  %17 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = sext i32 %16 to i64
  %20 = getelementptr inbounds i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to i32*
  store i32 %5, i32* %21, align 4
  %22 = load i32, i32* %6, align 8
  %23 = add nsw i32 %22, 4
  store i32 %23, i32* %6, align 8
  %24 = add nsw i32 %22, 7
  %25 = load i64, i64* %9, align 8
  %26 = trunc i64 %25 to i32
  %27 = icmp slt i32 %24, %26
  br i1 %27, label %30, label %28

28:                                               ; preds = %15
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %29 = load i32, i32* %6, align 8
  br label %30

30:                                               ; preds = %15, %28
  %31 = phi i32 [ %23, %15 ], [ %29, %28 ]
  %32 = load i8*, i8** %17, align 8
  %33 = sext i32 %31 to i64
  %34 = getelementptr inbounds i8, i8* %32, i64 %33
  %35 = bitcast i8* %34 to i32*
  store i32 %2, i32* %35, align 4
  %36 = load i32, i32* %6, align 8
  %37 = add nsw i32 %36, 4
  store i32 %37, i32* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGenerator15AdvanceRegisterEii(%"class.v8::internal::RegExpBytecodeGenerator"* nocapture, i32, i32) unnamed_addr #0 align 2 {
  %4 = shl i32 %1, 8
  %5 = or i32 %4, 9
  %6 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = add nsw i32 %7, 3
  %9 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = icmp slt i32 %8, %11
  br i1 %12, label %15, label %13

13:                                               ; preds = %3
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %14 = load i32, i32* %6, align 8
  br label %15

15:                                               ; preds = %3, %13
  %16 = phi i32 [ %7, %3 ], [ %14, %13 ]
  %17 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = sext i32 %16 to i64
  %20 = getelementptr inbounds i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to i32*
  store i32 %5, i32* %21, align 4
  %22 = load i32, i32* %6, align 8
  %23 = add nsw i32 %22, 4
  store i32 %23, i32* %6, align 8
  %24 = add nsw i32 %22, 7
  %25 = load i64, i64* %9, align 8
  %26 = trunc i64 %25 to i32
  %27 = icmp slt i32 %24, %26
  br i1 %27, label %30, label %28

28:                                               ; preds = %15
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %29 = load i32, i32* %6, align 8
  br label %30

30:                                               ; preds = %15, %28
  %31 = phi i32 [ %23, %15 ], [ %29, %28 ]
  %32 = load i8*, i8** %17, align 8
  %33 = sext i32 %31 to i64
  %34 = getelementptr inbounds i8, i8* %32, i64 %33
  %35 = bitcast i8* %34 to i32*
  store i32 %2, i32* %35, align 4
  %36 = load i32, i32* %6, align 8
  %37 = add nsw i32 %36, 4
  store i32 %37, i32* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGenerator18PopCurrentPositionEv(%"class.v8::internal::RegExpBytecodeGenerator"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, 3
  %5 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = trunc i64 %6 to i32
  %8 = icmp slt i32 %4, %7
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %10 = load i32, i32* %2, align 8
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i32 [ %3, %1 ], [ %10, %9 ]
  %13 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = sext i32 %12 to i64
  %16 = getelementptr inbounds i8, i8* %14, i64 %15
  %17 = bitcast i8* %16 to i32*
  store i32 10, i32* %17, align 4
  %18 = load i32, i32* %2, align 8
  %19 = add nsw i32 %18, 4
  store i32 %19, i32* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGenerator19PushCurrentPositionEv(%"class.v8::internal::RegExpBytecodeGenerator"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, 3
  %5 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = trunc i64 %6 to i32
  %8 = icmp slt i32 %4, %7
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %10 = load i32, i32* %2, align 8
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i32 [ %3, %1 ], [ %10, %9 ]
  %13 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = sext i32 %12 to i64
  %16 = getelementptr inbounds i8, i8* %14, i64 %15
  %17 = bitcast i8* %16 to i32*
  store i32 1, i32* %17, align 4
  %18 = load i32, i32* %2, align 8
  %19 = add nsw i32 %18, 4
  store i32 %19, i32* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGenerator9BacktrackEv(%"class.v8::internal::RegExpBytecodeGenerator"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 0, i32 3
  %3 = load i8, i8* %2, align 8, !range !3
  %4 = icmp eq i8 %3, 0
  %5 = select i1 %4, i32 11, i32 -757
  %6 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = add nsw i32 %7, 3
  %9 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = icmp slt i32 %8, %11
  br i1 %12, label %15, label %13

13:                                               ; preds = %1
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %14 = load i32, i32* %6, align 8
  br label %15

15:                                               ; preds = %1, %13
  %16 = phi i32 [ %7, %1 ], [ %14, %13 ]
  %17 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = sext i32 %16 to i64
  %20 = getelementptr inbounds i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to i32*
  store i32 %5, i32* %21, align 4
  %22 = load i32, i32* %6, align 8
  %23 = add nsw i32 %22, 4
  store i32 %23, i32* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGenerator4GoToEPNS0_5LabelE(%"class.v8::internal::RegExpBytecodeGenerator"*, %"class.v8::internal::Label"*) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 6
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %6, %8
  br i1 %9, label %10, label %69

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 4
  %12 = load i32, i32* %11, align 4
  store i32 %12, i32* %7, align 8
  %13 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 5
  %14 = load i32, i32* %13, align 8
  %15 = shl i32 %14, 8
  %16 = or i32 %15, 50
  %17 = add nsw i32 %12, 3
  %18 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = trunc i64 %19 to i32
  %21 = icmp slt i32 %17, %20
  br i1 %21, label %24, label %22

22:                                               ; preds = %10
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %23 = load i32, i32* %7, align 8
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %12, %10 ], [ %23, %22 ]
  %26 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = sext i32 %25 to i64
  %29 = getelementptr inbounds i8, i8* %27, i64 %28
  %30 = bitcast i8* %29 to i32*
  store i32 %16, i32* %30, align 4
  %31 = load i32, i32* %7, align 8
  %32 = add nsw i32 %31, 4
  store i32 %32, i32* %7, align 8
  %33 = icmp eq %"class.v8::internal::Label"* %1, null
  %34 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 3
  %35 = select i1 %33, %"class.v8::internal::Label"* %34, %"class.v8::internal::Label"* %1
  %36 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %36) #10
  store i32 0, i32* %4, align 4
  %37 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %35, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp slt i32 %38, 0
  br i1 %39, label %40, label %45

40:                                               ; preds = %24
  %41 = xor i32 %38, -1
  store i32 %41, i32* %4, align 4
  %42 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 7, i32 0, i32 0
  %43 = call { %"struct.std::__1::__hash_node_base.1137"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiiEENS_22__unordered_map_hasherIiS2_N2v84base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS2_S9_S7_Lb1EEENS4_8internal13ZoneAllocatorIS2_EEE25__emplace_unique_key_argsIiJRiSI_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1133"* %42, i32* dereferenceable(4) %7, i32* dereferenceable(4) %7, i32* nonnull dereferenceable(4) %4) #10
  %44 = load i32, i32* %4, align 4
  br label %52

45:                                               ; preds = %24
  %46 = icmp eq i32 %38, 0
  br i1 %46, label %49, label %47

47:                                               ; preds = %45
  %48 = add nsw i32 %38, -1
  store i32 %48, i32* %4, align 4
  br label %49

49:                                               ; preds = %47, %45
  %50 = phi i32 [ 0, %45 ], [ %48, %47 ]
  %51 = add nsw i32 %31, 5
  store i32 %51, i32* %37, align 4
  br label %52

52:                                               ; preds = %49, %40
  %53 = phi i32 [ %50, %49 ], [ %44, %40 ]
  %54 = load i32, i32* %7, align 8
  %55 = add nsw i32 %54, 3
  %56 = load i64, i64* %18, align 8
  %57 = trunc i64 %56 to i32
  %58 = icmp slt i32 %55, %57
  br i1 %58, label %61, label %59

59:                                               ; preds = %52
  call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %60 = load i32, i32* %7, align 8
  br label %61

61:                                               ; preds = %52, %59
  %62 = phi i32 [ %54, %52 ], [ %60, %59 ]
  %63 = load i8*, i8** %26, align 8
  %64 = sext i32 %62 to i64
  %65 = getelementptr inbounds i8, i8* %63, i64 %64
  %66 = bitcast i8* %65 to i32*
  store i32 %53, i32* %66, align 4
  %67 = load i32, i32* %7, align 8
  %68 = add nsw i32 %67, 4
  store i32 %68, i32* %7, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %36) #10
  store i32 -1, i32* %5, align 4
  br label %122

69:                                               ; preds = %2
  %70 = add nsw i32 %8, 3
  %71 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = trunc i64 %72 to i32
  %74 = icmp slt i32 %70, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %69
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %76 = load i32, i32* %7, align 8
  br label %77

77:                                               ; preds = %69, %75
  %78 = phi i32 [ %8, %69 ], [ %76, %75 ]
  %79 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %80 = load i8*, i8** %79, align 8
  %81 = sext i32 %78 to i64
  %82 = getelementptr inbounds i8, i8* %80, i64 %81
  %83 = bitcast i8* %82 to i32*
  store i32 16, i32* %83, align 4
  %84 = load i32, i32* %7, align 8
  %85 = add nsw i32 %84, 4
  store i32 %85, i32* %7, align 8
  %86 = icmp eq %"class.v8::internal::Label"* %1, null
  %87 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 3
  %88 = select i1 %86, %"class.v8::internal::Label"* %87, %"class.v8::internal::Label"* %1
  %89 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %89) #10
  store i32 0, i32* %3, align 4
  %90 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %88, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = icmp slt i32 %91, 0
  br i1 %92, label %93, label %98

93:                                               ; preds = %77
  %94 = xor i32 %91, -1
  store i32 %94, i32* %3, align 4
  %95 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 7, i32 0, i32 0
  %96 = call { %"struct.std::__1::__hash_node_base.1137"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiiEENS_22__unordered_map_hasherIiS2_N2v84base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS2_S9_S7_Lb1EEENS4_8internal13ZoneAllocatorIS2_EEE25__emplace_unique_key_argsIiJRiSI_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1133"* %95, i32* dereferenceable(4) %7, i32* dereferenceable(4) %7, i32* nonnull dereferenceable(4) %3) #10
  %97 = load i32, i32* %3, align 4
  br label %105

98:                                               ; preds = %77
  %99 = icmp eq i32 %91, 0
  br i1 %99, label %102, label %100

100:                                              ; preds = %98
  %101 = add nsw i32 %91, -1
  store i32 %101, i32* %3, align 4
  br label %102

102:                                              ; preds = %100, %98
  %103 = phi i32 [ 0, %98 ], [ %101, %100 ]
  %104 = add nsw i32 %84, 5
  store i32 %104, i32* %90, align 4
  br label %105

105:                                              ; preds = %102, %93
  %106 = phi i32 [ %103, %102 ], [ %97, %93 ]
  %107 = load i32, i32* %7, align 8
  %108 = add nsw i32 %107, 3
  %109 = load i64, i64* %71, align 8
  %110 = trunc i64 %109 to i32
  %111 = icmp slt i32 %108, %110
  br i1 %111, label %114, label %112

112:                                              ; preds = %105
  call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %113 = load i32, i32* %7, align 8
  br label %114

114:                                              ; preds = %105, %112
  %115 = phi i32 [ %107, %105 ], [ %113, %112 ]
  %116 = load i8*, i8** %79, align 8
  %117 = sext i32 %115 to i64
  %118 = getelementptr inbounds i8, i8* %116, i64 %117
  %119 = bitcast i8* %118 to i32*
  store i32 %106, i32* %119, align 4
  %120 = load i32, i32* %7, align 8
  %121 = add nsw i32 %120, 4
  store i32 %121, i32* %7, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %89) #10
  br label %122

122:                                              ; preds = %114, %61
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGenerator13PushBacktrackEPNS0_5LabelE(%"class.v8::internal::RegExpBytecodeGenerator"*, %"class.v8::internal::Label"*) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = add nsw i32 %5, 3
  %7 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = icmp slt i32 %6, %9
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %12 = load i32, i32* %4, align 8
  br label %13

13:                                               ; preds = %2, %11
  %14 = phi i32 [ %5, %2 ], [ %12, %11 ]
  %15 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = sext i32 %14 to i64
  %18 = getelementptr inbounds i8, i8* %16, i64 %17
  %19 = bitcast i8* %18 to i32*
  store i32 2, i32* %19, align 4
  %20 = load i32, i32* %4, align 8
  %21 = add nsw i32 %20, 4
  store i32 %21, i32* %4, align 8
  %22 = icmp eq %"class.v8::internal::Label"* %1, null
  %23 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 3
  %24 = select i1 %22, %"class.v8::internal::Label"* %23, %"class.v8::internal::Label"* %1
  %25 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #10
  store i32 0, i32* %3, align 4
  %26 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %24, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %29, label %34

29:                                               ; preds = %13
  %30 = xor i32 %27, -1
  store i32 %30, i32* %3, align 4
  %31 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 7, i32 0, i32 0
  %32 = call { %"struct.std::__1::__hash_node_base.1137"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiiEENS_22__unordered_map_hasherIiS2_N2v84base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS2_S9_S7_Lb1EEENS4_8internal13ZoneAllocatorIS2_EEE25__emplace_unique_key_argsIiJRiSI_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1133"* %31, i32* dereferenceable(4) %4, i32* dereferenceable(4) %4, i32* nonnull dereferenceable(4) %3) #10
  %33 = load i32, i32* %3, align 4
  br label %41

34:                                               ; preds = %13
  %35 = icmp eq i32 %27, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %34
  %37 = add nsw i32 %27, -1
  store i32 %37, i32* %3, align 4
  br label %38

38:                                               ; preds = %36, %34
  %39 = phi i32 [ 0, %34 ], [ %37, %36 ]
  %40 = add nsw i32 %20, 5
  store i32 %40, i32* %26, align 4
  br label %41

41:                                               ; preds = %38, %29
  %42 = phi i32 [ %39, %38 ], [ %33, %29 ]
  %43 = load i32, i32* %4, align 8
  %44 = add nsw i32 %43, 3
  %45 = load i64, i64* %7, align 8
  %46 = trunc i64 %45 to i32
  %47 = icmp slt i32 %44, %46
  br i1 %47, label %50, label %48

48:                                               ; preds = %41
  call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %49 = load i32, i32* %4, align 8
  br label %50

50:                                               ; preds = %41, %48
  %51 = phi i32 [ %43, %41 ], [ %49, %48 ]
  %52 = load i8*, i8** %15, align 8
  %53 = sext i32 %51 to i64
  %54 = getelementptr inbounds i8, i8* %52, i64 %53
  %55 = bitcast i8* %54 to i32*
  store i32 %42, i32* %55, align 4
  %56 = load i32, i32* %4, align 8
  %57 = add nsw i32 %56, 4
  store i32 %57, i32* %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal23RegExpBytecodeGenerator7SucceedEv(%"class.v8::internal::RegExpBytecodeGenerator"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, 3
  %5 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = trunc i64 %6 to i32
  %8 = icmp slt i32 %4, %7
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %10 = load i32, i32* %2, align 8
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i32 [ %3, %1 ], [ %10, %9 ]
  %13 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = sext i32 %12 to i64
  %16 = getelementptr inbounds i8, i8* %14, i64 %15
  %17 = bitcast i8* %16 to i32*
  store i32 14, i32* %17, align 4
  %18 = load i32, i32* %2, align 8
  %19 = add nsw i32 %18, 4
  store i32 %19, i32* %2, align 8
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGenerator4FailEv(%"class.v8::internal::RegExpBytecodeGenerator"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, 3
  %5 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = trunc i64 %6 to i32
  %8 = icmp slt i32 %4, %7
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %10 = load i32, i32* %2, align 8
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i32 [ %3, %1 ], [ %10, %9 ]
  %13 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = sext i32 %12 to i64
  %16 = getelementptr inbounds i8, i8* %14, i64 %15
  %17 = bitcast i8* %16 to i32*
  store i32 13, i32* %17, align 4
  %18 = load i32, i32* %2, align 8
  %19 = add nsw i32 %18, 4
  store i32 %19, i32* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGenerator22AdvanceCurrentPositionEi(%"class.v8::internal::RegExpBytecodeGenerator"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = icmp sgt i32 %1, -32769
  br i1 %3, label %5, label %4, !prof !4

4:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0)) #12
  unreachable

5:                                                ; preds = %2
  %6 = icmp slt i32 %1, 32768
  br i1 %6, label %8, label %7, !prof !4

7:                                                ; preds = %5
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)) #12
  unreachable

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 4
  store i32 %10, i32* %11, align 4
  %12 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 5
  store i32 %1, i32* %12, align 8
  %13 = shl i32 %1, 8
  %14 = or i32 %13, 15
  %15 = add nsw i32 %10, 3
  %16 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = trunc i64 %17 to i32
  %19 = icmp slt i32 %15, %18
  br i1 %19, label %22, label %20

20:                                               ; preds = %8
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %21 = load i32, i32* %9, align 8
  br label %22

22:                                               ; preds = %8, %20
  %23 = phi i32 [ %10, %8 ], [ %21, %20 ]
  %24 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = sext i32 %23 to i64
  %27 = getelementptr inbounds i8, i8* %25, i64 %26
  %28 = bitcast i8* %27 to i32*
  store i32 %14, i32* %28, align 4
  %29 = load i32, i32* %9, align 8
  %30 = add nsw i32 %29, 4
  store i32 %30, i32* %9, align 8
  %31 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 6
  store i32 %30, i32* %31, align 4
  ret void
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGenerator15CheckGreedyLoopEPNS0_5LabelE(%"class.v8::internal::RegExpBytecodeGenerator"*, %"class.v8::internal::Label"*) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = add nsw i32 %5, 3
  %7 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = icmp slt i32 %6, %9
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %12 = load i32, i32* %4, align 8
  br label %13

13:                                               ; preds = %2, %11
  %14 = phi i32 [ %5, %2 ], [ %12, %11 ]
  %15 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = sext i32 %14 to i64
  %18 = getelementptr inbounds i8, i8* %16, i64 %17
  %19 = bitcast i8* %18 to i32*
  store i32 49, i32* %19, align 4
  %20 = load i32, i32* %4, align 8
  %21 = add nsw i32 %20, 4
  store i32 %21, i32* %4, align 8
  %22 = icmp eq %"class.v8::internal::Label"* %1, null
  %23 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 3
  %24 = select i1 %22, %"class.v8::internal::Label"* %23, %"class.v8::internal::Label"* %1
  %25 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #10
  store i32 0, i32* %3, align 4
  %26 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %24, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %29, label %34

29:                                               ; preds = %13
  %30 = xor i32 %27, -1
  store i32 %30, i32* %3, align 4
  %31 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 7, i32 0, i32 0
  %32 = call { %"struct.std::__1::__hash_node_base.1137"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiiEENS_22__unordered_map_hasherIiS2_N2v84base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS2_S9_S7_Lb1EEENS4_8internal13ZoneAllocatorIS2_EEE25__emplace_unique_key_argsIiJRiSI_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1133"* %31, i32* dereferenceable(4) %4, i32* dereferenceable(4) %4, i32* nonnull dereferenceable(4) %3) #10
  %33 = load i32, i32* %3, align 4
  br label %41

34:                                               ; preds = %13
  %35 = icmp eq i32 %27, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %34
  %37 = add nsw i32 %27, -1
  store i32 %37, i32* %3, align 4
  br label %38

38:                                               ; preds = %36, %34
  %39 = phi i32 [ 0, %34 ], [ %37, %36 ]
  %40 = add nsw i32 %20, 5
  store i32 %40, i32* %26, align 4
  br label %41

41:                                               ; preds = %38, %29
  %42 = phi i32 [ %39, %38 ], [ %33, %29 ]
  %43 = load i32, i32* %4, align 8
  %44 = add nsw i32 %43, 3
  %45 = load i64, i64* %7, align 8
  %46 = trunc i64 %45 to i32
  %47 = icmp slt i32 %44, %46
  br i1 %47, label %50, label %48

48:                                               ; preds = %41
  call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %49 = load i32, i32* %4, align 8
  br label %50

50:                                               ; preds = %41, %48
  %51 = phi i32 [ %43, %41 ], [ %49, %48 ]
  %52 = load i8*, i8** %15, align 8
  %53 = sext i32 %51 to i64
  %54 = getelementptr inbounds i8, i8* %52, i64 %53
  %55 = bitcast i8* %54 to i32*
  store i32 %42, i32* %55, align 4
  %56 = load i32, i32* %4, align 8
  %57 = add nsw i32 %56, 4
  store i32 %57, i32* %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGenerator24LoadCurrentCharacterImplEiPNS0_5LabelEbii(%"class.v8::internal::RegExpBytecodeGenerator"*, i32, %"class.v8::internal::Label"*, i1 zeroext, i32, i32) unnamed_addr #0 align 2 {
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = icmp sle i32 %5, %4
  %10 = xor i1 %3, true
  %11 = or i1 %9, %10
  br i1 %11, label %71, label %12

12:                                               ; preds = %6
  %13 = add nsw i32 %5, %1
  %14 = shl i32 %13, 8
  %15 = or i32 %14, 52
  %16 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = add nsw i32 %17, 3
  %19 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = trunc i64 %20 to i32
  %22 = icmp slt i32 %18, %21
  br i1 %22, label %25, label %23

23:                                               ; preds = %12
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %24 = load i32, i32* %16, align 8
  br label %25

25:                                               ; preds = %12, %23
  %26 = phi i32 [ %17, %12 ], [ %24, %23 ]
  %27 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = sext i32 %26 to i64
  %30 = getelementptr inbounds i8, i8* %28, i64 %29
  %31 = bitcast i8* %30 to i32*
  store i32 %15, i32* %31, align 4
  %32 = load i32, i32* %16, align 8
  %33 = add nsw i32 %32, 4
  store i32 %33, i32* %16, align 8
  %34 = icmp eq %"class.v8::internal::Label"* %2, null
  %35 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 3
  %36 = select i1 %34, %"class.v8::internal::Label"* %35, %"class.v8::internal::Label"* %2
  %37 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #10
  store i32 0, i32* %8, align 4
  %38 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %36, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp slt i32 %39, 0
  br i1 %40, label %41, label %46

41:                                               ; preds = %25
  %42 = xor i32 %39, -1
  store i32 %42, i32* %8, align 4
  %43 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 7, i32 0, i32 0
  %44 = call { %"struct.std::__1::__hash_node_base.1137"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiiEENS_22__unordered_map_hasherIiS2_N2v84base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS2_S9_S7_Lb1EEENS4_8internal13ZoneAllocatorIS2_EEE25__emplace_unique_key_argsIiJRiSI_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1133"* %43, i32* dereferenceable(4) %16, i32* dereferenceable(4) %16, i32* nonnull dereferenceable(4) %8) #10
  %45 = load i32, i32* %8, align 4
  br label %53

46:                                               ; preds = %25
  %47 = icmp eq i32 %39, 0
  br i1 %47, label %50, label %48

48:                                               ; preds = %46
  %49 = add nsw i32 %39, -1
  store i32 %49, i32* %8, align 4
  br label %50

50:                                               ; preds = %48, %46
  %51 = phi i32 [ 0, %46 ], [ %49, %48 ]
  %52 = add nsw i32 %32, 5
  store i32 %52, i32* %38, align 4
  br label %53

53:                                               ; preds = %50, %41
  %54 = phi i32 [ %51, %50 ], [ %45, %41 ]
  %55 = load i32, i32* %16, align 8
  %56 = add nsw i32 %55, 3
  %57 = load i64, i64* %19, align 8
  %58 = trunc i64 %57 to i32
  %59 = icmp slt i32 %56, %58
  br i1 %59, label %62, label %60

60:                                               ; preds = %53
  call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %61 = load i32, i32* %16, align 8
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %55, %53 ], [ %61, %60 ]
  %64 = load i8*, i8** %27, align 8
  %65 = sext i32 %63 to i64
  %66 = getelementptr inbounds i8, i8* %64, i64 %65
  %67 = bitcast i8* %66 to i32*
  store i32 %54, i32* %67, align 4
  %68 = load i32, i32* %16, align 8
  %69 = add nsw i32 %68, 4
  store i32 %69, i32* %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #10
  %70 = icmp eq i32 %4, 4
  br i1 %70, label %81, label %78

71:                                               ; preds = %6
  %72 = icmp eq i32 %4, 4
  br i1 %3, label %73, label %77

73:                                               ; preds = %71
  br i1 %72, label %81, label %74

74:                                               ; preds = %73
  %75 = icmp eq i32 %4, 2
  %76 = select i1 %75, i32 19, i32 17
  br label %81

77:                                               ; preds = %71
  br i1 %72, label %81, label %78

78:                                               ; preds = %62, %77
  %79 = icmp eq i32 %4, 2
  %80 = select i1 %79, i32 20, i32 18
  br label %81

81:                                               ; preds = %62, %78, %77, %74, %73
  %82 = phi i1 [ true, %73 ], [ true, %74 ], [ false, %77 ], [ false, %78 ], [ false, %62 ]
  %83 = phi i32 [ 21, %73 ], [ %76, %74 ], [ 22, %77 ], [ %80, %78 ], [ 22, %62 ]
  %84 = shl i32 %1, 8
  %85 = or i32 %83, %84
  %86 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %87 = load i32, i32* %86, align 8
  %88 = add nsw i32 %87, 3
  %89 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = trunc i64 %90 to i32
  %92 = icmp slt i32 %88, %91
  br i1 %92, label %95, label %93

93:                                               ; preds = %81
  call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %94 = load i32, i32* %86, align 8
  br label %95

95:                                               ; preds = %81, %93
  %96 = phi i32 [ %87, %81 ], [ %94, %93 ]
  %97 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %98 = load i8*, i8** %97, align 8
  %99 = sext i32 %96 to i64
  %100 = getelementptr inbounds i8, i8* %98, i64 %99
  %101 = bitcast i8* %100 to i32*
  store i32 %85, i32* %101, align 4
  %102 = load i32, i32* %86, align 8
  %103 = add nsw i32 %102, 4
  store i32 %103, i32* %86, align 8
  br i1 %82, label %104, label %141

104:                                              ; preds = %95
  %105 = icmp eq %"class.v8::internal::Label"* %2, null
  %106 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 3
  %107 = select i1 %105, %"class.v8::internal::Label"* %106, %"class.v8::internal::Label"* %2
  %108 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %108) #10
  store i32 0, i32* %7, align 4
  %109 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %107, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  %111 = icmp slt i32 %110, 0
  br i1 %111, label %112, label %117

112:                                              ; preds = %104
  %113 = xor i32 %110, -1
  store i32 %113, i32* %7, align 4
  %114 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 7, i32 0, i32 0
  %115 = call { %"struct.std::__1::__hash_node_base.1137"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiiEENS_22__unordered_map_hasherIiS2_N2v84base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS2_S9_S7_Lb1EEENS4_8internal13ZoneAllocatorIS2_EEE25__emplace_unique_key_argsIiJRiSI_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1133"* %114, i32* dereferenceable(4) %86, i32* dereferenceable(4) %86, i32* nonnull dereferenceable(4) %7) #10
  %116 = load i32, i32* %7, align 4
  br label %124

117:                                              ; preds = %104
  %118 = icmp eq i32 %110, 0
  br i1 %118, label %121, label %119

119:                                              ; preds = %117
  %120 = add nsw i32 %110, -1
  store i32 %120, i32* %7, align 4
  br label %121

121:                                              ; preds = %119, %117
  %122 = phi i32 [ 0, %117 ], [ %120, %119 ]
  %123 = add nsw i32 %102, 5
  store i32 %123, i32* %109, align 4
  br label %124

124:                                              ; preds = %121, %112
  %125 = phi i32 [ %122, %121 ], [ %116, %112 ]
  %126 = load i32, i32* %86, align 8
  %127 = add nsw i32 %126, 3
  %128 = load i64, i64* %89, align 8
  %129 = trunc i64 %128 to i32
  %130 = icmp slt i32 %127, %129
  br i1 %130, label %133, label %131

131:                                              ; preds = %124
  call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %132 = load i32, i32* %86, align 8
  br label %133

133:                                              ; preds = %124, %131
  %134 = phi i32 [ %126, %124 ], [ %132, %131 ]
  %135 = load i8*, i8** %97, align 8
  %136 = sext i32 %134 to i64
  %137 = getelementptr inbounds i8, i8* %135, i64 %136
  %138 = bitcast i8* %137 to i32*
  store i32 %125, i32* %138, align 4
  %139 = load i32, i32* %86, align 8
  %140 = add nsw i32 %139, 4
  store i32 %140, i32* %86, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %108) #10
  br label %141

141:                                              ; preds = %133, %95
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGenerator16CheckCharacterLTEtPNS0_5LabelE(%"class.v8::internal::RegExpBytecodeGenerator"*, i16 zeroext, %"class.v8::internal::Label"*) unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = zext i16 %1 to i32
  %6 = shl nuw nsw i32 %5, 8
  %7 = or i32 %6, 35
  %8 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = add nsw i32 %9, 3
  %11 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = trunc i64 %12 to i32
  %14 = icmp slt i32 %10, %13
  br i1 %14, label %17, label %15

15:                                               ; preds = %3
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %16 = load i32, i32* %8, align 8
  br label %17

17:                                               ; preds = %3, %15
  %18 = phi i32 [ %9, %3 ], [ %16, %15 ]
  %19 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = sext i32 %18 to i64
  %22 = getelementptr inbounds i8, i8* %20, i64 %21
  %23 = bitcast i8* %22 to i32*
  store i32 %7, i32* %23, align 4
  %24 = load i32, i32* %8, align 8
  %25 = add nsw i32 %24, 4
  store i32 %25, i32* %8, align 8
  %26 = icmp eq %"class.v8::internal::Label"* %2, null
  %27 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 3
  %28 = select i1 %26, %"class.v8::internal::Label"* %27, %"class.v8::internal::Label"* %2
  %29 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #10
  store i32 0, i32* %4, align 4
  %30 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %28, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp slt i32 %31, 0
  br i1 %32, label %33, label %38

33:                                               ; preds = %17
  %34 = xor i32 %31, -1
  store i32 %34, i32* %4, align 4
  %35 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 7, i32 0, i32 0
  %36 = call { %"struct.std::__1::__hash_node_base.1137"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiiEENS_22__unordered_map_hasherIiS2_N2v84base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS2_S9_S7_Lb1EEENS4_8internal13ZoneAllocatorIS2_EEE25__emplace_unique_key_argsIiJRiSI_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1133"* %35, i32* dereferenceable(4) %8, i32* dereferenceable(4) %8, i32* nonnull dereferenceable(4) %4) #10
  %37 = load i32, i32* %4, align 4
  br label %45

38:                                               ; preds = %17
  %39 = icmp eq i32 %31, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = add nsw i32 %31, -1
  store i32 %41, i32* %4, align 4
  br label %42

42:                                               ; preds = %40, %38
  %43 = phi i32 [ 0, %38 ], [ %41, %40 ]
  %44 = add nsw i32 %24, 5
  store i32 %44, i32* %30, align 4
  br label %45

45:                                               ; preds = %42, %33
  %46 = phi i32 [ %43, %42 ], [ %37, %33 ]
  %47 = load i32, i32* %8, align 8
  %48 = add nsw i32 %47, 3
  %49 = load i64, i64* %11, align 8
  %50 = trunc i64 %49 to i32
  %51 = icmp slt i32 %48, %50
  br i1 %51, label %54, label %52

52:                                               ; preds = %45
  call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %53 = load i32, i32* %8, align 8
  br label %54

54:                                               ; preds = %45, %52
  %55 = phi i32 [ %47, %45 ], [ %53, %52 ]
  %56 = load i8*, i8** %19, align 8
  %57 = sext i32 %55 to i64
  %58 = getelementptr inbounds i8, i8* %56, i64 %57
  %59 = bitcast i8* %58 to i32*
  store i32 %46, i32* %59, align 4
  %60 = load i32, i32* %8, align 8
  %61 = add nsw i32 %60, 4
  store i32 %61, i32* %8, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGenerator16CheckCharacterGTEtPNS0_5LabelE(%"class.v8::internal::RegExpBytecodeGenerator"*, i16 zeroext, %"class.v8::internal::Label"*) unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = zext i16 %1 to i32
  %6 = shl nuw nsw i32 %5, 8
  %7 = or i32 %6, 36
  %8 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = add nsw i32 %9, 3
  %11 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = trunc i64 %12 to i32
  %14 = icmp slt i32 %10, %13
  br i1 %14, label %17, label %15

15:                                               ; preds = %3
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %16 = load i32, i32* %8, align 8
  br label %17

17:                                               ; preds = %3, %15
  %18 = phi i32 [ %9, %3 ], [ %16, %15 ]
  %19 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = sext i32 %18 to i64
  %22 = getelementptr inbounds i8, i8* %20, i64 %21
  %23 = bitcast i8* %22 to i32*
  store i32 %7, i32* %23, align 4
  %24 = load i32, i32* %8, align 8
  %25 = add nsw i32 %24, 4
  store i32 %25, i32* %8, align 8
  %26 = icmp eq %"class.v8::internal::Label"* %2, null
  %27 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 3
  %28 = select i1 %26, %"class.v8::internal::Label"* %27, %"class.v8::internal::Label"* %2
  %29 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #10
  store i32 0, i32* %4, align 4
  %30 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %28, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp slt i32 %31, 0
  br i1 %32, label %33, label %38

33:                                               ; preds = %17
  %34 = xor i32 %31, -1
  store i32 %34, i32* %4, align 4
  %35 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 7, i32 0, i32 0
  %36 = call { %"struct.std::__1::__hash_node_base.1137"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiiEENS_22__unordered_map_hasherIiS2_N2v84base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS2_S9_S7_Lb1EEENS4_8internal13ZoneAllocatorIS2_EEE25__emplace_unique_key_argsIiJRiSI_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1133"* %35, i32* dereferenceable(4) %8, i32* dereferenceable(4) %8, i32* nonnull dereferenceable(4) %4) #10
  %37 = load i32, i32* %4, align 4
  br label %45

38:                                               ; preds = %17
  %39 = icmp eq i32 %31, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = add nsw i32 %31, -1
  store i32 %41, i32* %4, align 4
  br label %42

42:                                               ; preds = %40, %38
  %43 = phi i32 [ 0, %38 ], [ %41, %40 ]
  %44 = add nsw i32 %24, 5
  store i32 %44, i32* %30, align 4
  br label %45

45:                                               ; preds = %42, %33
  %46 = phi i32 [ %43, %42 ], [ %37, %33 ]
  %47 = load i32, i32* %8, align 8
  %48 = add nsw i32 %47, 3
  %49 = load i64, i64* %11, align 8
  %50 = trunc i64 %49 to i32
  %51 = icmp slt i32 %48, %50
  br i1 %51, label %54, label %52

52:                                               ; preds = %45
  call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %53 = load i32, i32* %8, align 8
  br label %54

54:                                               ; preds = %45, %52
  %55 = phi i32 [ %47, %45 ], [ %53, %52 ]
  %56 = load i8*, i8** %19, align 8
  %57 = sext i32 %55 to i64
  %58 = getelementptr inbounds i8, i8* %56, i64 %57
  %59 = bitcast i8* %58 to i32*
  store i32 %46, i32* %59, align 4
  %60 = load i32, i32* %8, align 8
  %61 = add nsw i32 %60, 4
  store i32 %61, i32* %8, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGenerator14CheckCharacterEjPNS0_5LabelE(%"class.v8::internal::RegExpBytecodeGenerator"*, i32, %"class.v8::internal::Label"*) unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = icmp ugt i32 %1, 8388607
  br i1 %5, label %6, label %39

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = add nsw i32 %8, 3
  %10 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %11 to i32
  %13 = icmp slt i32 %9, %12
  br i1 %13, label %16, label %14

14:                                               ; preds = %6
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %15 = load i32, i32* %7, align 8
  br label %16

16:                                               ; preds = %6, %14
  %17 = phi i32 [ %8, %6 ], [ %15, %14 ]
  %18 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = sext i32 %17 to i64
  %21 = getelementptr inbounds i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to i32*
  store i32 23, i32* %22, align 4
  %23 = load i32, i32* %7, align 8
  %24 = add nsw i32 %23, 4
  store i32 %24, i32* %7, align 8
  %25 = add nsw i32 %23, 7
  %26 = load i64, i64* %10, align 8
  %27 = trunc i64 %26 to i32
  %28 = icmp slt i32 %25, %27
  br i1 %28, label %31, label %29

29:                                               ; preds = %16
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %30 = load i32, i32* %7, align 8
  br label %31

31:                                               ; preds = %16, %29
  %32 = phi i32 [ %24, %16 ], [ %30, %29 ]
  %33 = load i8*, i8** %18, align 8
  %34 = sext i32 %32 to i64
  %35 = getelementptr inbounds i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to i32*
  store i32 %1, i32* %36, align 4
  %37 = load i32, i32* %7, align 8
  %38 = add nsw i32 %37, 4
  store i32 %38, i32* %7, align 8
  br label %60

39:                                               ; preds = %3
  %40 = shl i32 %1, 8
  %41 = or i32 %40, 24
  %42 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %43 = load i32, i32* %42, align 8
  %44 = add nsw i32 %43, 3
  %45 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = trunc i64 %46 to i32
  %48 = icmp slt i32 %44, %47
  br i1 %48, label %51, label %49

49:                                               ; preds = %39
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %50 = load i32, i32* %42, align 8
  br label %51

51:                                               ; preds = %39, %49
  %52 = phi i32 [ %43, %39 ], [ %50, %49 ]
  %53 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = sext i32 %52 to i64
  %56 = getelementptr inbounds i8, i8* %54, i64 %55
  %57 = bitcast i8* %56 to i32*
  store i32 %41, i32* %57, align 4
  %58 = load i32, i32* %42, align 8
  %59 = add nsw i32 %58, 4
  store i32 %59, i32* %42, align 8
  br label %60

60:                                               ; preds = %51, %31
  %61 = phi i32 [ %59, %51 ], [ %38, %31 ]
  %62 = icmp eq %"class.v8::internal::Label"* %2, null
  %63 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 3
  %64 = select i1 %62, %"class.v8::internal::Label"* %63, %"class.v8::internal::Label"* %2
  %65 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %65) #10
  store i32 0, i32* %4, align 4
  %66 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %64, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = icmp slt i32 %67, 0
  br i1 %68, label %69, label %75

69:                                               ; preds = %60
  %70 = xor i32 %67, -1
  store i32 %70, i32* %4, align 4
  %71 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %72 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 7, i32 0, i32 0
  %73 = call { %"struct.std::__1::__hash_node_base.1137"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiiEENS_22__unordered_map_hasherIiS2_N2v84base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS2_S9_S7_Lb1EEENS4_8internal13ZoneAllocatorIS2_EEE25__emplace_unique_key_argsIiJRiSI_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1133"* %72, i32* dereferenceable(4) %71, i32* dereferenceable(4) %71, i32* nonnull dereferenceable(4) %4) #10
  %74 = load i32, i32* %4, align 4
  br label %82

75:                                               ; preds = %60
  %76 = icmp eq i32 %67, 0
  br i1 %76, label %79, label %77

77:                                               ; preds = %75
  %78 = add nsw i32 %67, -1
  store i32 %78, i32* %4, align 4
  br label %79

79:                                               ; preds = %77, %75
  %80 = phi i32 [ 0, %75 ], [ %78, %77 ]
  %81 = add nsw i32 %61, 1
  store i32 %81, i32* %66, align 4
  br label %82

82:                                               ; preds = %79, %69
  %83 = phi i32 [ %80, %79 ], [ %74, %69 ]
  %84 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %85 = load i32, i32* %84, align 8
  %86 = add nsw i32 %85, 3
  %87 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %88 = load i64, i64* %87, align 8
  %89 = trunc i64 %88 to i32
  %90 = icmp slt i32 %86, %89
  br i1 %90, label %93, label %91

91:                                               ; preds = %82
  call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %92 = load i32, i32* %84, align 8
  br label %93

93:                                               ; preds = %82, %91
  %94 = phi i32 [ %85, %82 ], [ %92, %91 ]
  %95 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %96 = load i8*, i8** %95, align 8
  %97 = sext i32 %94 to i64
  %98 = getelementptr inbounds i8, i8* %96, i64 %97
  %99 = bitcast i8* %98 to i32*
  store i32 %83, i32* %99, align 4
  %100 = load i32, i32* %84, align 8
  %101 = add nsw i32 %100, 4
  store i32 %101, i32* %84, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %65) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGenerator12CheckAtStartEiPNS0_5LabelE(%"class.v8::internal::RegExpBytecodeGenerator"*, i32, %"class.v8::internal::Label"*) unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = shl i32 %1, 8
  %6 = or i32 %5, 47
  %7 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = add nsw i32 %8, 3
  %10 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %11 to i32
  %13 = icmp slt i32 %9, %12
  br i1 %13, label %16, label %14

14:                                               ; preds = %3
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %15 = load i32, i32* %7, align 8
  br label %16

16:                                               ; preds = %3, %14
  %17 = phi i32 [ %8, %3 ], [ %15, %14 ]
  %18 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = sext i32 %17 to i64
  %21 = getelementptr inbounds i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to i32*
  store i32 %6, i32* %22, align 4
  %23 = load i32, i32* %7, align 8
  %24 = add nsw i32 %23, 4
  store i32 %24, i32* %7, align 8
  %25 = icmp eq %"class.v8::internal::Label"* %2, null
  %26 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 3
  %27 = select i1 %25, %"class.v8::internal::Label"* %26, %"class.v8::internal::Label"* %2
  %28 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #10
  store i32 0, i32* %4, align 4
  %29 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %27, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp slt i32 %30, 0
  br i1 %31, label %32, label %37

32:                                               ; preds = %16
  %33 = xor i32 %30, -1
  store i32 %33, i32* %4, align 4
  %34 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 7, i32 0, i32 0
  %35 = call { %"struct.std::__1::__hash_node_base.1137"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiiEENS_22__unordered_map_hasherIiS2_N2v84base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS2_S9_S7_Lb1EEENS4_8internal13ZoneAllocatorIS2_EEE25__emplace_unique_key_argsIiJRiSI_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1133"* %34, i32* dereferenceable(4) %7, i32* dereferenceable(4) %7, i32* nonnull dereferenceable(4) %4) #10
  %36 = load i32, i32* %4, align 4
  br label %44

37:                                               ; preds = %16
  %38 = icmp eq i32 %30, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %37
  %40 = add nsw i32 %30, -1
  store i32 %40, i32* %4, align 4
  br label %41

41:                                               ; preds = %39, %37
  %42 = phi i32 [ 0, %37 ], [ %40, %39 ]
  %43 = add nsw i32 %23, 5
  store i32 %43, i32* %29, align 4
  br label %44

44:                                               ; preds = %41, %32
  %45 = phi i32 [ %42, %41 ], [ %36, %32 ]
  %46 = load i32, i32* %7, align 8
  %47 = add nsw i32 %46, 3
  %48 = load i64, i64* %10, align 8
  %49 = trunc i64 %48 to i32
  %50 = icmp slt i32 %47, %49
  br i1 %50, label %53, label %51

51:                                               ; preds = %44
  call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %52 = load i32, i32* %7, align 8
  br label %53

53:                                               ; preds = %44, %51
  %54 = phi i32 [ %46, %44 ], [ %52, %51 ]
  %55 = load i8*, i8** %18, align 8
  %56 = sext i32 %54 to i64
  %57 = getelementptr inbounds i8, i8* %55, i64 %56
  %58 = bitcast i8* %57 to i32*
  store i32 %45, i32* %58, align 4
  %59 = load i32, i32* %7, align 8
  %60 = add nsw i32 %59, 4
  store i32 %60, i32* %7, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGenerator15CheckNotAtStartEiPNS0_5LabelE(%"class.v8::internal::RegExpBytecodeGenerator"*, i32, %"class.v8::internal::Label"*) unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = shl i32 %1, 8
  %6 = or i32 %5, 48
  %7 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = add nsw i32 %8, 3
  %10 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %11 to i32
  %13 = icmp slt i32 %9, %12
  br i1 %13, label %16, label %14

14:                                               ; preds = %3
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %15 = load i32, i32* %7, align 8
  br label %16

16:                                               ; preds = %3, %14
  %17 = phi i32 [ %8, %3 ], [ %15, %14 ]
  %18 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = sext i32 %17 to i64
  %21 = getelementptr inbounds i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to i32*
  store i32 %6, i32* %22, align 4
  %23 = load i32, i32* %7, align 8
  %24 = add nsw i32 %23, 4
  store i32 %24, i32* %7, align 8
  %25 = icmp eq %"class.v8::internal::Label"* %2, null
  %26 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 3
  %27 = select i1 %25, %"class.v8::internal::Label"* %26, %"class.v8::internal::Label"* %2
  %28 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #10
  store i32 0, i32* %4, align 4
  %29 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %27, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp slt i32 %30, 0
  br i1 %31, label %32, label %37

32:                                               ; preds = %16
  %33 = xor i32 %30, -1
  store i32 %33, i32* %4, align 4
  %34 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 7, i32 0, i32 0
  %35 = call { %"struct.std::__1::__hash_node_base.1137"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiiEENS_22__unordered_map_hasherIiS2_N2v84base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS2_S9_S7_Lb1EEENS4_8internal13ZoneAllocatorIS2_EEE25__emplace_unique_key_argsIiJRiSI_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1133"* %34, i32* dereferenceable(4) %7, i32* dereferenceable(4) %7, i32* nonnull dereferenceable(4) %4) #10
  %36 = load i32, i32* %4, align 4
  br label %44

37:                                               ; preds = %16
  %38 = icmp eq i32 %30, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %37
  %40 = add nsw i32 %30, -1
  store i32 %40, i32* %4, align 4
  br label %41

41:                                               ; preds = %39, %37
  %42 = phi i32 [ 0, %37 ], [ %40, %39 ]
  %43 = add nsw i32 %23, 5
  store i32 %43, i32* %29, align 4
  br label %44

44:                                               ; preds = %41, %32
  %45 = phi i32 [ %42, %41 ], [ %36, %32 ]
  %46 = load i32, i32* %7, align 8
  %47 = add nsw i32 %46, 3
  %48 = load i64, i64* %10, align 8
  %49 = trunc i64 %48 to i32
  %50 = icmp slt i32 %47, %49
  br i1 %50, label %53, label %51

51:                                               ; preds = %44
  call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %52 = load i32, i32* %7, align 8
  br label %53

53:                                               ; preds = %44, %51
  %54 = phi i32 [ %46, %44 ], [ %52, %51 ]
  %55 = load i8*, i8** %18, align 8
  %56 = sext i32 %54 to i64
  %57 = getelementptr inbounds i8, i8* %55, i64 %56
  %58 = bitcast i8* %57 to i32*
  store i32 %45, i32* %58, align 4
  %59 = load i32, i32* %7, align 8
  %60 = add nsw i32 %59, 4
  store i32 %60, i32* %7, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGenerator17CheckNotCharacterEjPNS0_5LabelE(%"class.v8::internal::RegExpBytecodeGenerator"*, i32, %"class.v8::internal::Label"*) unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = icmp ugt i32 %1, 8388607
  br i1 %5, label %6, label %39

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = add nsw i32 %8, 3
  %10 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %11 to i32
  %13 = icmp slt i32 %9, %12
  br i1 %13, label %16, label %14

14:                                               ; preds = %6
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %15 = load i32, i32* %7, align 8
  br label %16

16:                                               ; preds = %6, %14
  %17 = phi i32 [ %8, %6 ], [ %15, %14 ]
  %18 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = sext i32 %17 to i64
  %21 = getelementptr inbounds i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to i32*
  store i32 25, i32* %22, align 4
  %23 = load i32, i32* %7, align 8
  %24 = add nsw i32 %23, 4
  store i32 %24, i32* %7, align 8
  %25 = add nsw i32 %23, 7
  %26 = load i64, i64* %10, align 8
  %27 = trunc i64 %26 to i32
  %28 = icmp slt i32 %25, %27
  br i1 %28, label %31, label %29

29:                                               ; preds = %16
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %30 = load i32, i32* %7, align 8
  br label %31

31:                                               ; preds = %16, %29
  %32 = phi i32 [ %24, %16 ], [ %30, %29 ]
  %33 = load i8*, i8** %18, align 8
  %34 = sext i32 %32 to i64
  %35 = getelementptr inbounds i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to i32*
  store i32 %1, i32* %36, align 4
  %37 = load i32, i32* %7, align 8
  %38 = add nsw i32 %37, 4
  store i32 %38, i32* %7, align 8
  br label %60

39:                                               ; preds = %3
  %40 = shl i32 %1, 8
  %41 = or i32 %40, 26
  %42 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %43 = load i32, i32* %42, align 8
  %44 = add nsw i32 %43, 3
  %45 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = trunc i64 %46 to i32
  %48 = icmp slt i32 %44, %47
  br i1 %48, label %51, label %49

49:                                               ; preds = %39
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %50 = load i32, i32* %42, align 8
  br label %51

51:                                               ; preds = %39, %49
  %52 = phi i32 [ %43, %39 ], [ %50, %49 ]
  %53 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = sext i32 %52 to i64
  %56 = getelementptr inbounds i8, i8* %54, i64 %55
  %57 = bitcast i8* %56 to i32*
  store i32 %41, i32* %57, align 4
  %58 = load i32, i32* %42, align 8
  %59 = add nsw i32 %58, 4
  store i32 %59, i32* %42, align 8
  br label %60

60:                                               ; preds = %51, %31
  %61 = phi i32 [ %59, %51 ], [ %38, %31 ]
  %62 = icmp eq %"class.v8::internal::Label"* %2, null
  %63 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 3
  %64 = select i1 %62, %"class.v8::internal::Label"* %63, %"class.v8::internal::Label"* %2
  %65 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %65) #10
  store i32 0, i32* %4, align 4
  %66 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %64, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = icmp slt i32 %67, 0
  br i1 %68, label %69, label %75

69:                                               ; preds = %60
  %70 = xor i32 %67, -1
  store i32 %70, i32* %4, align 4
  %71 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %72 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 7, i32 0, i32 0
  %73 = call { %"struct.std::__1::__hash_node_base.1137"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiiEENS_22__unordered_map_hasherIiS2_N2v84base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS2_S9_S7_Lb1EEENS4_8internal13ZoneAllocatorIS2_EEE25__emplace_unique_key_argsIiJRiSI_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1133"* %72, i32* dereferenceable(4) %71, i32* dereferenceable(4) %71, i32* nonnull dereferenceable(4) %4) #10
  %74 = load i32, i32* %4, align 4
  br label %82

75:                                               ; preds = %60
  %76 = icmp eq i32 %67, 0
  br i1 %76, label %79, label %77

77:                                               ; preds = %75
  %78 = add nsw i32 %67, -1
  store i32 %78, i32* %4, align 4
  br label %79

79:                                               ; preds = %77, %75
  %80 = phi i32 [ 0, %75 ], [ %78, %77 ]
  %81 = add nsw i32 %61, 1
  store i32 %81, i32* %66, align 4
  br label %82

82:                                               ; preds = %79, %69
  %83 = phi i32 [ %80, %79 ], [ %74, %69 ]
  %84 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %85 = load i32, i32* %84, align 8
  %86 = add nsw i32 %85, 3
  %87 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %88 = load i64, i64* %87, align 8
  %89 = trunc i64 %88 to i32
  %90 = icmp slt i32 %86, %89
  br i1 %90, label %93, label %91

91:                                               ; preds = %82
  call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %92 = load i32, i32* %84, align 8
  br label %93

93:                                               ; preds = %82, %91
  %94 = phi i32 [ %85, %82 ], [ %92, %91 ]
  %95 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %96 = load i8*, i8** %95, align 8
  %97 = sext i32 %94 to i64
  %98 = getelementptr inbounds i8, i8* %96, i64 %97
  %99 = bitcast i8* %98 to i32*
  store i32 %83, i32* %99, align 4
  %100 = load i32, i32* %84, align 8
  %101 = add nsw i32 %100, 4
  store i32 %101, i32* %84, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %65) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGenerator22CheckCharacterAfterAndEjjPNS0_5LabelE(%"class.v8::internal::RegExpBytecodeGenerator"*, i32, i32, %"class.v8::internal::Label"*) unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = icmp ugt i32 %1, 8388607
  br i1 %6, label %7, label %40

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = add nsw i32 %9, 3
  %11 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = trunc i64 %12 to i32
  %14 = icmp slt i32 %10, %13
  br i1 %14, label %17, label %15

15:                                               ; preds = %7
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %16 = load i32, i32* %8, align 8
  br label %17

17:                                               ; preds = %7, %15
  %18 = phi i32 [ %9, %7 ], [ %16, %15 ]
  %19 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = sext i32 %18 to i64
  %22 = getelementptr inbounds i8, i8* %20, i64 %21
  %23 = bitcast i8* %22 to i32*
  store i32 27, i32* %23, align 4
  %24 = load i32, i32* %8, align 8
  %25 = add nsw i32 %24, 4
  store i32 %25, i32* %8, align 8
  %26 = add nsw i32 %24, 7
  %27 = load i64, i64* %11, align 8
  %28 = trunc i64 %27 to i32
  %29 = icmp slt i32 %26, %28
  br i1 %29, label %32, label %30

30:                                               ; preds = %17
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %31 = load i32, i32* %8, align 8
  br label %32

32:                                               ; preds = %17, %30
  %33 = phi i32 [ %25, %17 ], [ %31, %30 ]
  %34 = load i8*, i8** %19, align 8
  %35 = sext i32 %33 to i64
  %36 = getelementptr inbounds i8, i8* %34, i64 %35
  %37 = bitcast i8* %36 to i32*
  store i32 %1, i32* %37, align 4
  %38 = load i32, i32* %8, align 8
  %39 = add nsw i32 %38, 4
  store i32 %39, i32* %8, align 8
  br label %61

40:                                               ; preds = %4
  %41 = shl i32 %1, 8
  %42 = or i32 %41, 28
  %43 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %44 = load i32, i32* %43, align 8
  %45 = add nsw i32 %44, 3
  %46 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = trunc i64 %47 to i32
  %49 = icmp slt i32 %45, %48
  br i1 %49, label %52, label %50

50:                                               ; preds = %40
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %51 = load i32, i32* %43, align 8
  br label %52

52:                                               ; preds = %40, %50
  %53 = phi i32 [ %44, %40 ], [ %51, %50 ]
  %54 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %55 = load i8*, i8** %54, align 8
  %56 = sext i32 %53 to i64
  %57 = getelementptr inbounds i8, i8* %55, i64 %56
  %58 = bitcast i8* %57 to i32*
  store i32 %42, i32* %58, align 4
  %59 = load i32, i32* %43, align 8
  %60 = add nsw i32 %59, 4
  store i32 %60, i32* %43, align 8
  br label %61

61:                                               ; preds = %52, %32
  %62 = phi i32 [ %60, %52 ], [ %39, %32 ]
  %63 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %64 = add nsw i32 %62, 3
  %65 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = trunc i64 %66 to i32
  %68 = icmp slt i32 %64, %67
  br i1 %68, label %71, label %69

69:                                               ; preds = %61
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %70 = load i32, i32* %63, align 8
  br label %71

71:                                               ; preds = %61, %69
  %72 = phi i32 [ %62, %61 ], [ %70, %69 ]
  %73 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = sext i32 %72 to i64
  %76 = getelementptr inbounds i8, i8* %74, i64 %75
  %77 = bitcast i8* %76 to i32*
  store i32 %2, i32* %77, align 4
  %78 = load i32, i32* %63, align 8
  %79 = add nsw i32 %78, 4
  store i32 %79, i32* %63, align 8
  %80 = icmp eq %"class.v8::internal::Label"* %3, null
  %81 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 3
  %82 = select i1 %80, %"class.v8::internal::Label"* %81, %"class.v8::internal::Label"* %3
  %83 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %83) #10
  store i32 0, i32* %5, align 4
  %84 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %82, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = icmp slt i32 %85, 0
  br i1 %86, label %87, label %92

87:                                               ; preds = %71
  %88 = xor i32 %85, -1
  store i32 %88, i32* %5, align 4
  %89 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 7, i32 0, i32 0
  %90 = call { %"struct.std::__1::__hash_node_base.1137"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiiEENS_22__unordered_map_hasherIiS2_N2v84base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS2_S9_S7_Lb1EEENS4_8internal13ZoneAllocatorIS2_EEE25__emplace_unique_key_argsIiJRiSI_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1133"* %89, i32* dereferenceable(4) %63, i32* dereferenceable(4) %63, i32* nonnull dereferenceable(4) %5) #10
  %91 = load i32, i32* %5, align 4
  br label %99

92:                                               ; preds = %71
  %93 = icmp eq i32 %85, 0
  br i1 %93, label %96, label %94

94:                                               ; preds = %92
  %95 = add nsw i32 %85, -1
  store i32 %95, i32* %5, align 4
  br label %96

96:                                               ; preds = %94, %92
  %97 = phi i32 [ 0, %92 ], [ %95, %94 ]
  %98 = add nsw i32 %78, 5
  store i32 %98, i32* %84, align 4
  br label %99

99:                                               ; preds = %96, %87
  %100 = phi i32 [ %97, %96 ], [ %91, %87 ]
  %101 = load i32, i32* %63, align 8
  %102 = add nsw i32 %101, 3
  %103 = load i64, i64* %65, align 8
  %104 = trunc i64 %103 to i32
  %105 = icmp slt i32 %102, %104
  br i1 %105, label %108, label %106

106:                                              ; preds = %99
  call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %107 = load i32, i32* %63, align 8
  br label %108

108:                                              ; preds = %99, %106
  %109 = phi i32 [ %101, %99 ], [ %107, %106 ]
  %110 = load i8*, i8** %73, align 8
  %111 = sext i32 %109 to i64
  %112 = getelementptr inbounds i8, i8* %110, i64 %111
  %113 = bitcast i8* %112 to i32*
  store i32 %100, i32* %113, align 4
  %114 = load i32, i32* %63, align 8
  %115 = add nsw i32 %114, 4
  store i32 %115, i32* %63, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %83) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGenerator25CheckNotCharacterAfterAndEjjPNS0_5LabelE(%"class.v8::internal::RegExpBytecodeGenerator"*, i32, i32, %"class.v8::internal::Label"*) unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = icmp ugt i32 %1, 8388607
  br i1 %6, label %7, label %40

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = add nsw i32 %9, 3
  %11 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = trunc i64 %12 to i32
  %14 = icmp slt i32 %10, %13
  br i1 %14, label %17, label %15

15:                                               ; preds = %7
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %16 = load i32, i32* %8, align 8
  br label %17

17:                                               ; preds = %7, %15
  %18 = phi i32 [ %9, %7 ], [ %16, %15 ]
  %19 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = sext i32 %18 to i64
  %22 = getelementptr inbounds i8, i8* %20, i64 %21
  %23 = bitcast i8* %22 to i32*
  store i32 29, i32* %23, align 4
  %24 = load i32, i32* %8, align 8
  %25 = add nsw i32 %24, 4
  store i32 %25, i32* %8, align 8
  %26 = add nsw i32 %24, 7
  %27 = load i64, i64* %11, align 8
  %28 = trunc i64 %27 to i32
  %29 = icmp slt i32 %26, %28
  br i1 %29, label %32, label %30

30:                                               ; preds = %17
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %31 = load i32, i32* %8, align 8
  br label %32

32:                                               ; preds = %17, %30
  %33 = phi i32 [ %25, %17 ], [ %31, %30 ]
  %34 = load i8*, i8** %19, align 8
  %35 = sext i32 %33 to i64
  %36 = getelementptr inbounds i8, i8* %34, i64 %35
  %37 = bitcast i8* %36 to i32*
  store i32 %1, i32* %37, align 4
  %38 = load i32, i32* %8, align 8
  %39 = add nsw i32 %38, 4
  store i32 %39, i32* %8, align 8
  br label %61

40:                                               ; preds = %4
  %41 = shl i32 %1, 8
  %42 = or i32 %41, 30
  %43 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %44 = load i32, i32* %43, align 8
  %45 = add nsw i32 %44, 3
  %46 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = trunc i64 %47 to i32
  %49 = icmp slt i32 %45, %48
  br i1 %49, label %52, label %50

50:                                               ; preds = %40
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %51 = load i32, i32* %43, align 8
  br label %52

52:                                               ; preds = %40, %50
  %53 = phi i32 [ %44, %40 ], [ %51, %50 ]
  %54 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %55 = load i8*, i8** %54, align 8
  %56 = sext i32 %53 to i64
  %57 = getelementptr inbounds i8, i8* %55, i64 %56
  %58 = bitcast i8* %57 to i32*
  store i32 %42, i32* %58, align 4
  %59 = load i32, i32* %43, align 8
  %60 = add nsw i32 %59, 4
  store i32 %60, i32* %43, align 8
  br label %61

61:                                               ; preds = %52, %32
  %62 = phi i32 [ %60, %52 ], [ %39, %32 ]
  %63 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %64 = add nsw i32 %62, 3
  %65 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = trunc i64 %66 to i32
  %68 = icmp slt i32 %64, %67
  br i1 %68, label %71, label %69

69:                                               ; preds = %61
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %70 = load i32, i32* %63, align 8
  br label %71

71:                                               ; preds = %61, %69
  %72 = phi i32 [ %62, %61 ], [ %70, %69 ]
  %73 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = sext i32 %72 to i64
  %76 = getelementptr inbounds i8, i8* %74, i64 %75
  %77 = bitcast i8* %76 to i32*
  store i32 %2, i32* %77, align 4
  %78 = load i32, i32* %63, align 8
  %79 = add nsw i32 %78, 4
  store i32 %79, i32* %63, align 8
  %80 = icmp eq %"class.v8::internal::Label"* %3, null
  %81 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 3
  %82 = select i1 %80, %"class.v8::internal::Label"* %81, %"class.v8::internal::Label"* %3
  %83 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %83) #10
  store i32 0, i32* %5, align 4
  %84 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %82, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = icmp slt i32 %85, 0
  br i1 %86, label %87, label %92

87:                                               ; preds = %71
  %88 = xor i32 %85, -1
  store i32 %88, i32* %5, align 4
  %89 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 7, i32 0, i32 0
  %90 = call { %"struct.std::__1::__hash_node_base.1137"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiiEENS_22__unordered_map_hasherIiS2_N2v84base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS2_S9_S7_Lb1EEENS4_8internal13ZoneAllocatorIS2_EEE25__emplace_unique_key_argsIiJRiSI_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1133"* %89, i32* dereferenceable(4) %63, i32* dereferenceable(4) %63, i32* nonnull dereferenceable(4) %5) #10
  %91 = load i32, i32* %5, align 4
  br label %99

92:                                               ; preds = %71
  %93 = icmp eq i32 %85, 0
  br i1 %93, label %96, label %94

94:                                               ; preds = %92
  %95 = add nsw i32 %85, -1
  store i32 %95, i32* %5, align 4
  br label %96

96:                                               ; preds = %94, %92
  %97 = phi i32 [ 0, %92 ], [ %95, %94 ]
  %98 = add nsw i32 %78, 5
  store i32 %98, i32* %84, align 4
  br label %99

99:                                               ; preds = %96, %87
  %100 = phi i32 [ %97, %96 ], [ %91, %87 ]
  %101 = load i32, i32* %63, align 8
  %102 = add nsw i32 %101, 3
  %103 = load i64, i64* %65, align 8
  %104 = trunc i64 %103 to i32
  %105 = icmp slt i32 %102, %104
  br i1 %105, label %108, label %106

106:                                              ; preds = %99
  call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %107 = load i32, i32* %63, align 8
  br label %108

108:                                              ; preds = %99, %106
  %109 = phi i32 [ %101, %99 ], [ %107, %106 ]
  %110 = load i8*, i8** %73, align 8
  %111 = sext i32 %109 to i64
  %112 = getelementptr inbounds i8, i8* %110, i64 %111
  %113 = bitcast i8* %112 to i32*
  store i32 %100, i32* %113, align 4
  %114 = load i32, i32* %63, align 8
  %115 = add nsw i32 %114, 4
  store i32 %115, i32* %63, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %83) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGenerator30CheckNotCharacterAfterMinusAndEtttPNS0_5LabelE(%"class.v8::internal::RegExpBytecodeGenerator"*, i16 zeroext, i16 zeroext, i16 zeroext, %"class.v8::internal::Label"*) unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = zext i16 %1 to i32
  %8 = shl nuw nsw i32 %7, 8
  %9 = or i32 %8, 31
  %10 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = add nsw i32 %11, 3
  %13 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i32
  %16 = icmp slt i32 %12, %15
  br i1 %16, label %19, label %17

17:                                               ; preds = %5
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %18 = load i32, i32* %10, align 8
  br label %19

19:                                               ; preds = %5, %17
  %20 = phi i32 [ %11, %5 ], [ %18, %17 ]
  %21 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = sext i32 %20 to i64
  %24 = getelementptr inbounds i8, i8* %22, i64 %23
  %25 = bitcast i8* %24 to i32*
  store i32 %9, i32* %25, align 4
  %26 = load i32, i32* %10, align 8
  %27 = add nsw i32 %26, 4
  store i32 %27, i32* %10, align 8
  %28 = add nsw i32 %26, 5
  %29 = load i64, i64* %13, align 8
  %30 = trunc i64 %29 to i32
  %31 = icmp slt i32 %28, %30
  br i1 %31, label %34, label %32

32:                                               ; preds = %19
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %33 = load i32, i32* %10, align 8
  br label %34

34:                                               ; preds = %19, %32
  %35 = phi i32 [ %27, %19 ], [ %33, %32 ]
  %36 = load i8*, i8** %21, align 8
  %37 = sext i32 %35 to i64
  %38 = getelementptr inbounds i8, i8* %36, i64 %37
  %39 = bitcast i8* %38 to i16*
  store i16 %2, i16* %39, align 2
  %40 = load i32, i32* %10, align 8
  %41 = add nsw i32 %40, 2
  store i32 %41, i32* %10, align 8
  %42 = add nsw i32 %40, 3
  %43 = load i64, i64* %13, align 8
  %44 = trunc i64 %43 to i32
  %45 = icmp slt i32 %42, %44
  br i1 %45, label %48, label %46

46:                                               ; preds = %34
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %47 = load i32, i32* %10, align 8
  br label %48

48:                                               ; preds = %34, %46
  %49 = phi i32 [ %41, %34 ], [ %47, %46 ]
  %50 = load i8*, i8** %21, align 8
  %51 = sext i32 %49 to i64
  %52 = getelementptr inbounds i8, i8* %50, i64 %51
  %53 = bitcast i8* %52 to i16*
  store i16 %3, i16* %53, align 2
  %54 = load i32, i32* %10, align 8
  %55 = add nsw i32 %54, 2
  store i32 %55, i32* %10, align 8
  %56 = icmp eq %"class.v8::internal::Label"* %4, null
  %57 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 3
  %58 = select i1 %56, %"class.v8::internal::Label"* %57, %"class.v8::internal::Label"* %4
  %59 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %59) #10
  store i32 0, i32* %6, align 4
  %60 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %58, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp slt i32 %61, 0
  br i1 %62, label %63, label %68

63:                                               ; preds = %48
  %64 = xor i32 %61, -1
  store i32 %64, i32* %6, align 4
  %65 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 7, i32 0, i32 0
  %66 = call { %"struct.std::__1::__hash_node_base.1137"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiiEENS_22__unordered_map_hasherIiS2_N2v84base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS2_S9_S7_Lb1EEENS4_8internal13ZoneAllocatorIS2_EEE25__emplace_unique_key_argsIiJRiSI_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1133"* %65, i32* dereferenceable(4) %10, i32* dereferenceable(4) %10, i32* nonnull dereferenceable(4) %6) #10
  %67 = load i32, i32* %6, align 4
  br label %75

68:                                               ; preds = %48
  %69 = icmp eq i32 %61, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = add nsw i32 %61, -1
  store i32 %71, i32* %6, align 4
  br label %72

72:                                               ; preds = %70, %68
  %73 = phi i32 [ 0, %68 ], [ %71, %70 ]
  %74 = add nsw i32 %54, 3
  store i32 %74, i32* %60, align 4
  br label %75

75:                                               ; preds = %72, %63
  %76 = phi i32 [ %73, %72 ], [ %67, %63 ]
  %77 = load i32, i32* %10, align 8
  %78 = add nsw i32 %77, 3
  %79 = load i64, i64* %13, align 8
  %80 = trunc i64 %79 to i32
  %81 = icmp slt i32 %78, %80
  br i1 %81, label %84, label %82

82:                                               ; preds = %75
  call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %83 = load i32, i32* %10, align 8
  br label %84

84:                                               ; preds = %75, %82
  %85 = phi i32 [ %77, %75 ], [ %83, %82 ]
  %86 = load i8*, i8** %21, align 8
  %87 = sext i32 %85 to i64
  %88 = getelementptr inbounds i8, i8* %86, i64 %87
  %89 = bitcast i8* %88 to i32*
  store i32 %76, i32* %89, align 4
  %90 = load i32, i32* %10, align 8
  %91 = add nsw i32 %90, 4
  store i32 %91, i32* %10, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %59) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGenerator21CheckCharacterInRangeEttPNS0_5LabelE(%"class.v8::internal::RegExpBytecodeGenerator"*, i16 zeroext, i16 zeroext, %"class.v8::internal::Label"*) unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = add nsw i32 %7, 3
  %9 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = icmp slt i32 %8, %11
  br i1 %12, label %15, label %13

13:                                               ; preds = %4
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %14 = load i32, i32* %6, align 8
  br label %15

15:                                               ; preds = %4, %13
  %16 = phi i32 [ %7, %4 ], [ %14, %13 ]
  %17 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = sext i32 %16 to i64
  %20 = getelementptr inbounds i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to i32*
  store i32 32, i32* %21, align 4
  %22 = load i32, i32* %6, align 8
  %23 = add nsw i32 %22, 4
  store i32 %23, i32* %6, align 8
  %24 = add nsw i32 %22, 5
  %25 = load i64, i64* %9, align 8
  %26 = trunc i64 %25 to i32
  %27 = icmp slt i32 %24, %26
  br i1 %27, label %30, label %28

28:                                               ; preds = %15
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %29 = load i32, i32* %6, align 8
  br label %30

30:                                               ; preds = %15, %28
  %31 = phi i32 [ %23, %15 ], [ %29, %28 ]
  %32 = load i8*, i8** %17, align 8
  %33 = sext i32 %31 to i64
  %34 = getelementptr inbounds i8, i8* %32, i64 %33
  %35 = bitcast i8* %34 to i16*
  store i16 %1, i16* %35, align 2
  %36 = load i32, i32* %6, align 8
  %37 = add nsw i32 %36, 2
  store i32 %37, i32* %6, align 8
  %38 = add nsw i32 %36, 3
  %39 = load i64, i64* %9, align 8
  %40 = trunc i64 %39 to i32
  %41 = icmp slt i32 %38, %40
  br i1 %41, label %44, label %42

42:                                               ; preds = %30
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %43 = load i32, i32* %6, align 8
  br label %44

44:                                               ; preds = %30, %42
  %45 = phi i32 [ %37, %30 ], [ %43, %42 ]
  %46 = load i8*, i8** %17, align 8
  %47 = sext i32 %45 to i64
  %48 = getelementptr inbounds i8, i8* %46, i64 %47
  %49 = bitcast i8* %48 to i16*
  store i16 %2, i16* %49, align 2
  %50 = load i32, i32* %6, align 8
  %51 = add nsw i32 %50, 2
  store i32 %51, i32* %6, align 8
  %52 = icmp eq %"class.v8::internal::Label"* %3, null
  %53 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 3
  %54 = select i1 %52, %"class.v8::internal::Label"* %53, %"class.v8::internal::Label"* %3
  %55 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %55) #10
  store i32 0, i32* %5, align 4
  %56 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %54, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp slt i32 %57, 0
  br i1 %58, label %59, label %64

59:                                               ; preds = %44
  %60 = xor i32 %57, -1
  store i32 %60, i32* %5, align 4
  %61 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 7, i32 0, i32 0
  %62 = call { %"struct.std::__1::__hash_node_base.1137"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiiEENS_22__unordered_map_hasherIiS2_N2v84base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS2_S9_S7_Lb1EEENS4_8internal13ZoneAllocatorIS2_EEE25__emplace_unique_key_argsIiJRiSI_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1133"* %61, i32* dereferenceable(4) %6, i32* dereferenceable(4) %6, i32* nonnull dereferenceable(4) %5) #10
  %63 = load i32, i32* %5, align 4
  br label %71

64:                                               ; preds = %44
  %65 = icmp eq i32 %57, 0
  br i1 %65, label %68, label %66

66:                                               ; preds = %64
  %67 = add nsw i32 %57, -1
  store i32 %67, i32* %5, align 4
  br label %68

68:                                               ; preds = %66, %64
  %69 = phi i32 [ 0, %64 ], [ %67, %66 ]
  %70 = add nsw i32 %50, 3
  store i32 %70, i32* %56, align 4
  br label %71

71:                                               ; preds = %68, %59
  %72 = phi i32 [ %69, %68 ], [ %63, %59 ]
  %73 = load i32, i32* %6, align 8
  %74 = add nsw i32 %73, 3
  %75 = load i64, i64* %9, align 8
  %76 = trunc i64 %75 to i32
  %77 = icmp slt i32 %74, %76
  br i1 %77, label %80, label %78

78:                                               ; preds = %71
  call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %79 = load i32, i32* %6, align 8
  br label %80

80:                                               ; preds = %71, %78
  %81 = phi i32 [ %73, %71 ], [ %79, %78 ]
  %82 = load i8*, i8** %17, align 8
  %83 = sext i32 %81 to i64
  %84 = getelementptr inbounds i8, i8* %82, i64 %83
  %85 = bitcast i8* %84 to i32*
  store i32 %72, i32* %85, align 4
  %86 = load i32, i32* %6, align 8
  %87 = add nsw i32 %86, 4
  store i32 %87, i32* %6, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %55) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGenerator24CheckCharacterNotInRangeEttPNS0_5LabelE(%"class.v8::internal::RegExpBytecodeGenerator"*, i16 zeroext, i16 zeroext, %"class.v8::internal::Label"*) unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = add nsw i32 %7, 3
  %9 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = icmp slt i32 %8, %11
  br i1 %12, label %15, label %13

13:                                               ; preds = %4
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %14 = load i32, i32* %6, align 8
  br label %15

15:                                               ; preds = %4, %13
  %16 = phi i32 [ %7, %4 ], [ %14, %13 ]
  %17 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = sext i32 %16 to i64
  %20 = getelementptr inbounds i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to i32*
  store i32 33, i32* %21, align 4
  %22 = load i32, i32* %6, align 8
  %23 = add nsw i32 %22, 4
  store i32 %23, i32* %6, align 8
  %24 = add nsw i32 %22, 5
  %25 = load i64, i64* %9, align 8
  %26 = trunc i64 %25 to i32
  %27 = icmp slt i32 %24, %26
  br i1 %27, label %30, label %28

28:                                               ; preds = %15
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %29 = load i32, i32* %6, align 8
  br label %30

30:                                               ; preds = %15, %28
  %31 = phi i32 [ %23, %15 ], [ %29, %28 ]
  %32 = load i8*, i8** %17, align 8
  %33 = sext i32 %31 to i64
  %34 = getelementptr inbounds i8, i8* %32, i64 %33
  %35 = bitcast i8* %34 to i16*
  store i16 %1, i16* %35, align 2
  %36 = load i32, i32* %6, align 8
  %37 = add nsw i32 %36, 2
  store i32 %37, i32* %6, align 8
  %38 = add nsw i32 %36, 3
  %39 = load i64, i64* %9, align 8
  %40 = trunc i64 %39 to i32
  %41 = icmp slt i32 %38, %40
  br i1 %41, label %44, label %42

42:                                               ; preds = %30
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %43 = load i32, i32* %6, align 8
  br label %44

44:                                               ; preds = %30, %42
  %45 = phi i32 [ %37, %30 ], [ %43, %42 ]
  %46 = load i8*, i8** %17, align 8
  %47 = sext i32 %45 to i64
  %48 = getelementptr inbounds i8, i8* %46, i64 %47
  %49 = bitcast i8* %48 to i16*
  store i16 %2, i16* %49, align 2
  %50 = load i32, i32* %6, align 8
  %51 = add nsw i32 %50, 2
  store i32 %51, i32* %6, align 8
  %52 = icmp eq %"class.v8::internal::Label"* %3, null
  %53 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 3
  %54 = select i1 %52, %"class.v8::internal::Label"* %53, %"class.v8::internal::Label"* %3
  %55 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %55) #10
  store i32 0, i32* %5, align 4
  %56 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %54, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp slt i32 %57, 0
  br i1 %58, label %59, label %64

59:                                               ; preds = %44
  %60 = xor i32 %57, -1
  store i32 %60, i32* %5, align 4
  %61 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 7, i32 0, i32 0
  %62 = call { %"struct.std::__1::__hash_node_base.1137"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiiEENS_22__unordered_map_hasherIiS2_N2v84base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS2_S9_S7_Lb1EEENS4_8internal13ZoneAllocatorIS2_EEE25__emplace_unique_key_argsIiJRiSI_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1133"* %61, i32* dereferenceable(4) %6, i32* dereferenceable(4) %6, i32* nonnull dereferenceable(4) %5) #10
  %63 = load i32, i32* %5, align 4
  br label %71

64:                                               ; preds = %44
  %65 = icmp eq i32 %57, 0
  br i1 %65, label %68, label %66

66:                                               ; preds = %64
  %67 = add nsw i32 %57, -1
  store i32 %67, i32* %5, align 4
  br label %68

68:                                               ; preds = %66, %64
  %69 = phi i32 [ 0, %64 ], [ %67, %66 ]
  %70 = add nsw i32 %50, 3
  store i32 %70, i32* %56, align 4
  br label %71

71:                                               ; preds = %68, %59
  %72 = phi i32 [ %69, %68 ], [ %63, %59 ]
  %73 = load i32, i32* %6, align 8
  %74 = add nsw i32 %73, 3
  %75 = load i64, i64* %9, align 8
  %76 = trunc i64 %75 to i32
  %77 = icmp slt i32 %74, %76
  br i1 %77, label %80, label %78

78:                                               ; preds = %71
  call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %79 = load i32, i32* %6, align 8
  br label %80

80:                                               ; preds = %71, %78
  %81 = phi i32 [ %73, %71 ], [ %79, %78 ]
  %82 = load i8*, i8** %17, align 8
  %83 = sext i32 %81 to i64
  %84 = getelementptr inbounds i8, i8* %82, i64 %83
  %85 = bitcast i8* %84 to i32*
  store i32 %72, i32* %85, align 4
  %86 = load i32, i32* %6, align 8
  %87 = add nsw i32 %86, 4
  store i32 %87, i32* %6, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %55) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGenerator15CheckBitInTableENS0_6HandleINS0_9ByteArrayEEEPNS0_5LabelE(%"class.v8::internal::RegExpBytecodeGenerator"*, i64*, %"class.v8::internal::Label"*) unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = add nsw i32 %6, 3
  %8 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = trunc i64 %9 to i32
  %11 = icmp slt i32 %7, %10
  br i1 %11, label %14, label %12

12:                                               ; preds = %3
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %13 = load i32, i32* %5, align 8
  br label %14

14:                                               ; preds = %3, %12
  %15 = phi i32 [ %6, %3 ], [ %13, %12 ]
  %16 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = sext i32 %15 to i64
  %19 = getelementptr inbounds i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to i32*
  store i32 34, i32* %20, align 4
  %21 = load i32, i32* %5, align 8
  %22 = add nsw i32 %21, 4
  store i32 %22, i32* %5, align 8
  %23 = icmp eq %"class.v8::internal::Label"* %2, null
  %24 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 3
  %25 = select i1 %23, %"class.v8::internal::Label"* %24, %"class.v8::internal::Label"* %2
  %26 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #10
  store i32 0, i32* %4, align 4
  %27 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %25, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp slt i32 %28, 0
  br i1 %29, label %30, label %35

30:                                               ; preds = %14
  %31 = xor i32 %28, -1
  store i32 %31, i32* %4, align 4
  %32 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 7, i32 0, i32 0
  %33 = call { %"struct.std::__1::__hash_node_base.1137"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiiEENS_22__unordered_map_hasherIiS2_N2v84base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS2_S9_S7_Lb1EEENS4_8internal13ZoneAllocatorIS2_EEE25__emplace_unique_key_argsIiJRiSI_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1133"* %32, i32* dereferenceable(4) %5, i32* dereferenceable(4) %5, i32* nonnull dereferenceable(4) %4) #10
  %34 = load i32, i32* %4, align 4
  br label %42

35:                                               ; preds = %14
  %36 = icmp eq i32 %28, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %35
  %38 = add nsw i32 %28, -1
  store i32 %38, i32* %4, align 4
  br label %39

39:                                               ; preds = %37, %35
  %40 = phi i32 [ 0, %35 ], [ %38, %37 ]
  %41 = add nsw i32 %21, 5
  store i32 %41, i32* %27, align 4
  br label %42

42:                                               ; preds = %39, %30
  %43 = phi i32 [ %40, %39 ], [ %34, %30 ]
  %44 = load i32, i32* %5, align 8
  %45 = add nsw i32 %44, 3
  %46 = load i64, i64* %8, align 8
  %47 = trunc i64 %46 to i32
  %48 = icmp slt i32 %45, %47
  br i1 %48, label %51, label %49

49:                                               ; preds = %42
  call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %50 = load i32, i32* %5, align 8
  br label %51

51:                                               ; preds = %42, %49
  %52 = phi i32 [ %44, %42 ], [ %50, %49 ]
  %53 = load i8*, i8** %16, align 8
  %54 = sext i32 %52 to i64
  %55 = getelementptr inbounds i8, i8* %53, i64 %54
  %56 = bitcast i8* %55 to i32*
  store i32 %43, i32* %56, align 4
  %57 = load i32, i32* %5, align 8
  %58 = add nsw i32 %57, 4
  store i32 %58, i32* %5, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #10
  br label %59

59:                                               ; preds = %51, %124
  %60 = phi i32 [ %58, %51 ], [ %130, %124 ]
  %61 = phi i64 [ 0, %51 ], [ %131, %124 ]
  %62 = load i64, i64* %1, align 8
  %63 = or i64 %61, 7
  %64 = add i64 %62, %63
  %65 = inttoptr i64 %64 to i8*
  %66 = load i8, i8* %65, align 1
  %67 = icmp ne i8 %66, 0
  %68 = zext i1 %67 to i8
  %69 = add nuw nsw i64 %63, 1
  %70 = add i64 %62, %69
  %71 = inttoptr i64 %70 to i8*
  %72 = load i8, i8* %71, align 1
  %73 = icmp eq i8 %72, 0
  %74 = select i1 %73, i8 0, i8 2
  %75 = or i8 %74, %68
  %76 = add nuw nsw i64 %63, 2
  %77 = add i64 %62, %76
  %78 = inttoptr i64 %77 to i8*
  %79 = load i8, i8* %78, align 1
  %80 = icmp eq i8 %79, 0
  %81 = select i1 %80, i8 0, i8 4
  %82 = or i8 %81, %75
  %83 = add nuw nsw i64 %63, 3
  %84 = add i64 %62, %83
  %85 = inttoptr i64 %84 to i8*
  %86 = load i8, i8* %85, align 1
  %87 = icmp eq i8 %86, 0
  %88 = select i1 %87, i8 0, i8 8
  %89 = or i8 %88, %82
  %90 = add nuw nsw i64 %63, 4
  %91 = add i64 %62, %90
  %92 = inttoptr i64 %91 to i8*
  %93 = load i8, i8* %92, align 1
  %94 = icmp eq i8 %93, 0
  %95 = select i1 %94, i8 0, i8 16
  %96 = or i8 %95, %89
  %97 = add nuw nsw i64 %63, 5
  %98 = add i64 %62, %97
  %99 = inttoptr i64 %98 to i8*
  %100 = load i8, i8* %99, align 1
  %101 = icmp eq i8 %100, 0
  %102 = select i1 %101, i8 0, i8 32
  %103 = or i8 %102, %96
  %104 = add nuw nsw i64 %63, 6
  %105 = add i64 %62, %104
  %106 = inttoptr i64 %105 to i8*
  %107 = load i8, i8* %106, align 1
  %108 = icmp eq i8 %107, 0
  %109 = select i1 %108, i8 0, i8 64
  %110 = or i8 %109, %103
  %111 = add nuw nsw i64 %63, 7
  %112 = add i64 %62, %111
  %113 = inttoptr i64 %112 to i8*
  %114 = load i8, i8* %113, align 1
  %115 = icmp eq i8 %114, 0
  %116 = select i1 %115, i8 0, i8 -128
  %117 = or i8 %116, %110
  %118 = load i64, i64* %8, align 8
  %119 = trunc i64 %118 to i32
  %120 = icmp eq i32 %60, %119
  br i1 %120, label %122, label %124

121:                                              ; preds = %124
  ret void

122:                                              ; preds = %59
  call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %123 = load i32, i32* %5, align 8
  br label %124

124:                                              ; preds = %59, %122
  %125 = phi i32 [ %123, %122 ], [ %60, %59 ]
  %126 = load i8*, i8** %16, align 8
  %127 = sext i32 %125 to i64
  %128 = getelementptr inbounds i8, i8* %126, i64 %127
  store i8 %117, i8* %128, align 1
  %129 = load i32, i32* %5, align 8
  %130 = add nsw i32 %129, 1
  store i32 %130, i32* %5, align 8
  %131 = add nuw nsw i64 %61, 8
  %132 = icmp ult i64 %131, 128
  br i1 %132, label %59, label %121
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGenerator21CheckNotBackReferenceEibPNS0_5LabelE(%"class.v8::internal::RegExpBytecodeGenerator"*, i32, i1 zeroext, %"class.v8::internal::Label"*) unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = select i1 %2, i32 40, i32 37
  %7 = shl i32 %1, 8
  %8 = or i32 %6, %7
  %9 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = add nsw i32 %10, 3
  %12 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = trunc i64 %13 to i32
  %15 = icmp slt i32 %11, %14
  br i1 %15, label %18, label %16

16:                                               ; preds = %4
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %17 = load i32, i32* %9, align 8
  br label %18

18:                                               ; preds = %4, %16
  %19 = phi i32 [ %10, %4 ], [ %17, %16 ]
  %20 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = sext i32 %19 to i64
  %23 = getelementptr inbounds i8, i8* %21, i64 %22
  %24 = bitcast i8* %23 to i32*
  store i32 %8, i32* %24, align 4
  %25 = load i32, i32* %9, align 8
  %26 = add nsw i32 %25, 4
  store i32 %26, i32* %9, align 8
  %27 = icmp eq %"class.v8::internal::Label"* %3, null
  %28 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 3
  %29 = select i1 %27, %"class.v8::internal::Label"* %28, %"class.v8::internal::Label"* %3
  %30 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #10
  store i32 0, i32* %5, align 4
  %31 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %29, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %32, 0
  br i1 %33, label %34, label %39

34:                                               ; preds = %18
  %35 = xor i32 %32, -1
  store i32 %35, i32* %5, align 4
  %36 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 7, i32 0, i32 0
  %37 = call { %"struct.std::__1::__hash_node_base.1137"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiiEENS_22__unordered_map_hasherIiS2_N2v84base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS2_S9_S7_Lb1EEENS4_8internal13ZoneAllocatorIS2_EEE25__emplace_unique_key_argsIiJRiSI_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1133"* %36, i32* dereferenceable(4) %9, i32* dereferenceable(4) %9, i32* nonnull dereferenceable(4) %5) #10
  %38 = load i32, i32* %5, align 4
  br label %46

39:                                               ; preds = %18
  %40 = icmp eq i32 %32, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = add nsw i32 %32, -1
  store i32 %42, i32* %5, align 4
  br label %43

43:                                               ; preds = %41, %39
  %44 = phi i32 [ 0, %39 ], [ %42, %41 ]
  %45 = add nsw i32 %25, 5
  store i32 %45, i32* %31, align 4
  br label %46

46:                                               ; preds = %43, %34
  %47 = phi i32 [ %44, %43 ], [ %38, %34 ]
  %48 = load i32, i32* %9, align 8
  %49 = add nsw i32 %48, 3
  %50 = load i64, i64* %12, align 8
  %51 = trunc i64 %50 to i32
  %52 = icmp slt i32 %49, %51
  br i1 %52, label %55, label %53

53:                                               ; preds = %46
  call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %54 = load i32, i32* %9, align 8
  br label %55

55:                                               ; preds = %46, %53
  %56 = phi i32 [ %48, %46 ], [ %54, %53 ]
  %57 = load i8*, i8** %20, align 8
  %58 = sext i32 %56 to i64
  %59 = getelementptr inbounds i8, i8* %57, i64 %58
  %60 = bitcast i8* %59 to i32*
  store i32 %47, i32* %60, align 4
  %61 = load i32, i32* %9, align 8
  %62 = add nsw i32 %61, 4
  store i32 %62, i32* %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGenerator31CheckNotBackReferenceIgnoreCaseEibbPNS0_5LabelE(%"class.v8::internal::RegExpBytecodeGenerator"*, i32, i1 zeroext, i1 zeroext, %"class.v8::internal::Label"*) unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = select i1 %3, i32 42, i32 41
  %8 = select i1 %3, i32 39, i32 38
  %9 = select i1 %2, i32 %7, i32 %8
  %10 = shl i32 %1, 8
  %11 = or i32 %9, %10
  %12 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = add nsw i32 %13, 3
  %15 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = trunc i64 %16 to i32
  %18 = icmp slt i32 %14, %17
  br i1 %18, label %21, label %19

19:                                               ; preds = %5
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %20 = load i32, i32* %12, align 8
  br label %21

21:                                               ; preds = %5, %19
  %22 = phi i32 [ %13, %5 ], [ %20, %19 ]
  %23 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = sext i32 %22 to i64
  %26 = getelementptr inbounds i8, i8* %24, i64 %25
  %27 = bitcast i8* %26 to i32*
  store i32 %11, i32* %27, align 4
  %28 = load i32, i32* %12, align 8
  %29 = add nsw i32 %28, 4
  store i32 %29, i32* %12, align 8
  %30 = icmp eq %"class.v8::internal::Label"* %4, null
  %31 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 3
  %32 = select i1 %30, %"class.v8::internal::Label"* %31, %"class.v8::internal::Label"* %4
  %33 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #10
  store i32 0, i32* %6, align 4
  %34 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %32, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp slt i32 %35, 0
  br i1 %36, label %37, label %42

37:                                               ; preds = %21
  %38 = xor i32 %35, -1
  store i32 %38, i32* %6, align 4
  %39 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 7, i32 0, i32 0
  %40 = call { %"struct.std::__1::__hash_node_base.1137"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiiEENS_22__unordered_map_hasherIiS2_N2v84base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS2_S9_S7_Lb1EEENS4_8internal13ZoneAllocatorIS2_EEE25__emplace_unique_key_argsIiJRiSI_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1133"* %39, i32* dereferenceable(4) %12, i32* dereferenceable(4) %12, i32* nonnull dereferenceable(4) %6) #10
  %41 = load i32, i32* %6, align 4
  br label %49

42:                                               ; preds = %21
  %43 = icmp eq i32 %35, 0
  br i1 %43, label %46, label %44

44:                                               ; preds = %42
  %45 = add nsw i32 %35, -1
  store i32 %45, i32* %6, align 4
  br label %46

46:                                               ; preds = %44, %42
  %47 = phi i32 [ 0, %42 ], [ %45, %44 ]
  %48 = add nsw i32 %28, 5
  store i32 %48, i32* %34, align 4
  br label %49

49:                                               ; preds = %46, %37
  %50 = phi i32 [ %47, %46 ], [ %41, %37 ]
  %51 = load i32, i32* %12, align 8
  %52 = add nsw i32 %51, 3
  %53 = load i64, i64* %15, align 8
  %54 = trunc i64 %53 to i32
  %55 = icmp slt i32 %52, %54
  br i1 %55, label %58, label %56

56:                                               ; preds = %49
  call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %57 = load i32, i32* %12, align 8
  br label %58

58:                                               ; preds = %49, %56
  %59 = phi i32 [ %51, %49 ], [ %57, %56 ]
  %60 = load i8*, i8** %23, align 8
  %61 = sext i32 %59 to i64
  %62 = getelementptr inbounds i8, i8* %60, i64 %61
  %63 = bitcast i8* %62 to i32*
  store i32 %50, i32* %63, align 4
  %64 = load i32, i32* %12, align 8
  %65 = add nsw i32 %64, 4
  store i32 %65, i32* %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGenerator12IfRegisterLTEiiPNS0_5LabelE(%"class.v8::internal::RegExpBytecodeGenerator"*, i32, i32, %"class.v8::internal::Label"*) unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = shl i32 %1, 8
  %7 = or i32 %6, 44
  %8 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = add nsw i32 %9, 3
  %11 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = trunc i64 %12 to i32
  %14 = icmp slt i32 %10, %13
  br i1 %14, label %17, label %15

15:                                               ; preds = %4
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %16 = load i32, i32* %8, align 8
  br label %17

17:                                               ; preds = %4, %15
  %18 = phi i32 [ %9, %4 ], [ %16, %15 ]
  %19 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = sext i32 %18 to i64
  %22 = getelementptr inbounds i8, i8* %20, i64 %21
  %23 = bitcast i8* %22 to i32*
  store i32 %7, i32* %23, align 4
  %24 = load i32, i32* %8, align 8
  %25 = add nsw i32 %24, 4
  store i32 %25, i32* %8, align 8
  %26 = add nsw i32 %24, 7
  %27 = load i64, i64* %11, align 8
  %28 = trunc i64 %27 to i32
  %29 = icmp slt i32 %26, %28
  br i1 %29, label %32, label %30

30:                                               ; preds = %17
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %31 = load i32, i32* %8, align 8
  br label %32

32:                                               ; preds = %17, %30
  %33 = phi i32 [ %25, %17 ], [ %31, %30 ]
  %34 = load i8*, i8** %19, align 8
  %35 = sext i32 %33 to i64
  %36 = getelementptr inbounds i8, i8* %34, i64 %35
  %37 = bitcast i8* %36 to i32*
  store i32 %2, i32* %37, align 4
  %38 = load i32, i32* %8, align 8
  %39 = add nsw i32 %38, 4
  store i32 %39, i32* %8, align 8
  %40 = icmp eq %"class.v8::internal::Label"* %3, null
  %41 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 3
  %42 = select i1 %40, %"class.v8::internal::Label"* %41, %"class.v8::internal::Label"* %3
  %43 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %43) #10
  store i32 0, i32* %5, align 4
  %44 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %42, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = icmp slt i32 %45, 0
  br i1 %46, label %47, label %52

47:                                               ; preds = %32
  %48 = xor i32 %45, -1
  store i32 %48, i32* %5, align 4
  %49 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 7, i32 0, i32 0
  %50 = call { %"struct.std::__1::__hash_node_base.1137"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiiEENS_22__unordered_map_hasherIiS2_N2v84base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS2_S9_S7_Lb1EEENS4_8internal13ZoneAllocatorIS2_EEE25__emplace_unique_key_argsIiJRiSI_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1133"* %49, i32* dereferenceable(4) %8, i32* dereferenceable(4) %8, i32* nonnull dereferenceable(4) %5) #10
  %51 = load i32, i32* %5, align 4
  br label %59

52:                                               ; preds = %32
  %53 = icmp eq i32 %45, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %52
  %55 = add nsw i32 %45, -1
  store i32 %55, i32* %5, align 4
  br label %56

56:                                               ; preds = %54, %52
  %57 = phi i32 [ 0, %52 ], [ %55, %54 ]
  %58 = add nsw i32 %38, 5
  store i32 %58, i32* %44, align 4
  br label %59

59:                                               ; preds = %56, %47
  %60 = phi i32 [ %57, %56 ], [ %51, %47 ]
  %61 = load i32, i32* %8, align 8
  %62 = add nsw i32 %61, 3
  %63 = load i64, i64* %11, align 8
  %64 = trunc i64 %63 to i32
  %65 = icmp slt i32 %62, %64
  br i1 %65, label %68, label %66

66:                                               ; preds = %59
  call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %67 = load i32, i32* %8, align 8
  br label %68

68:                                               ; preds = %59, %66
  %69 = phi i32 [ %61, %59 ], [ %67, %66 ]
  %70 = load i8*, i8** %19, align 8
  %71 = sext i32 %69 to i64
  %72 = getelementptr inbounds i8, i8* %70, i64 %71
  %73 = bitcast i8* %72 to i32*
  store i32 %60, i32* %73, align 4
  %74 = load i32, i32* %8, align 8
  %75 = add nsw i32 %74, 4
  store i32 %75, i32* %8, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGenerator12IfRegisterGEEiiPNS0_5LabelE(%"class.v8::internal::RegExpBytecodeGenerator"*, i32, i32, %"class.v8::internal::Label"*) unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = shl i32 %1, 8
  %7 = or i32 %6, 45
  %8 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = add nsw i32 %9, 3
  %11 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = trunc i64 %12 to i32
  %14 = icmp slt i32 %10, %13
  br i1 %14, label %17, label %15

15:                                               ; preds = %4
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %16 = load i32, i32* %8, align 8
  br label %17

17:                                               ; preds = %4, %15
  %18 = phi i32 [ %9, %4 ], [ %16, %15 ]
  %19 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = sext i32 %18 to i64
  %22 = getelementptr inbounds i8, i8* %20, i64 %21
  %23 = bitcast i8* %22 to i32*
  store i32 %7, i32* %23, align 4
  %24 = load i32, i32* %8, align 8
  %25 = add nsw i32 %24, 4
  store i32 %25, i32* %8, align 8
  %26 = add nsw i32 %24, 7
  %27 = load i64, i64* %11, align 8
  %28 = trunc i64 %27 to i32
  %29 = icmp slt i32 %26, %28
  br i1 %29, label %32, label %30

30:                                               ; preds = %17
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %31 = load i32, i32* %8, align 8
  br label %32

32:                                               ; preds = %17, %30
  %33 = phi i32 [ %25, %17 ], [ %31, %30 ]
  %34 = load i8*, i8** %19, align 8
  %35 = sext i32 %33 to i64
  %36 = getelementptr inbounds i8, i8* %34, i64 %35
  %37 = bitcast i8* %36 to i32*
  store i32 %2, i32* %37, align 4
  %38 = load i32, i32* %8, align 8
  %39 = add nsw i32 %38, 4
  store i32 %39, i32* %8, align 8
  %40 = icmp eq %"class.v8::internal::Label"* %3, null
  %41 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 3
  %42 = select i1 %40, %"class.v8::internal::Label"* %41, %"class.v8::internal::Label"* %3
  %43 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %43) #10
  store i32 0, i32* %5, align 4
  %44 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %42, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = icmp slt i32 %45, 0
  br i1 %46, label %47, label %52

47:                                               ; preds = %32
  %48 = xor i32 %45, -1
  store i32 %48, i32* %5, align 4
  %49 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 7, i32 0, i32 0
  %50 = call { %"struct.std::__1::__hash_node_base.1137"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiiEENS_22__unordered_map_hasherIiS2_N2v84base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS2_S9_S7_Lb1EEENS4_8internal13ZoneAllocatorIS2_EEE25__emplace_unique_key_argsIiJRiSI_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1133"* %49, i32* dereferenceable(4) %8, i32* dereferenceable(4) %8, i32* nonnull dereferenceable(4) %5) #10
  %51 = load i32, i32* %5, align 4
  br label %59

52:                                               ; preds = %32
  %53 = icmp eq i32 %45, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %52
  %55 = add nsw i32 %45, -1
  store i32 %55, i32* %5, align 4
  br label %56

56:                                               ; preds = %54, %52
  %57 = phi i32 [ 0, %52 ], [ %55, %54 ]
  %58 = add nsw i32 %38, 5
  store i32 %58, i32* %44, align 4
  br label %59

59:                                               ; preds = %56, %47
  %60 = phi i32 [ %57, %56 ], [ %51, %47 ]
  %61 = load i32, i32* %8, align 8
  %62 = add nsw i32 %61, 3
  %63 = load i64, i64* %11, align 8
  %64 = trunc i64 %63 to i32
  %65 = icmp slt i32 %62, %64
  br i1 %65, label %68, label %66

66:                                               ; preds = %59
  call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %67 = load i32, i32* %8, align 8
  br label %68

68:                                               ; preds = %59, %66
  %69 = phi i32 [ %61, %59 ], [ %67, %66 ]
  %70 = load i8*, i8** %19, align 8
  %71 = sext i32 %69 to i64
  %72 = getelementptr inbounds i8, i8* %70, i64 %71
  %73 = bitcast i8* %72 to i32*
  store i32 %60, i32* %73, align 4
  %74 = load i32, i32* %8, align 8
  %75 = add nsw i32 %74, 4
  store i32 %75, i32* %8, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGenerator15IfRegisterEqPosEiPNS0_5LabelE(%"class.v8::internal::RegExpBytecodeGenerator"*, i32, %"class.v8::internal::Label"*) unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = shl i32 %1, 8
  %6 = or i32 %5, 46
  %7 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = add nsw i32 %8, 3
  %10 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %11 to i32
  %13 = icmp slt i32 %9, %12
  br i1 %13, label %16, label %14

14:                                               ; preds = %3
  tail call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %15 = load i32, i32* %7, align 8
  br label %16

16:                                               ; preds = %3, %14
  %17 = phi i32 [ %8, %3 ], [ %15, %14 ]
  %18 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = sext i32 %17 to i64
  %21 = getelementptr inbounds i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to i32*
  store i32 %6, i32* %22, align 4
  %23 = load i32, i32* %7, align 8
  %24 = add nsw i32 %23, 4
  store i32 %24, i32* %7, align 8
  %25 = icmp eq %"class.v8::internal::Label"* %2, null
  %26 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 3
  %27 = select i1 %25, %"class.v8::internal::Label"* %26, %"class.v8::internal::Label"* %2
  %28 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #10
  store i32 0, i32* %4, align 4
  %29 = getelementptr inbounds %"class.v8::internal::Label", %"class.v8::internal::Label"* %27, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp slt i32 %30, 0
  br i1 %31, label %32, label %37

32:                                               ; preds = %16
  %33 = xor i32 %30, -1
  store i32 %33, i32* %4, align 4
  %34 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 7, i32 0, i32 0
  %35 = call { %"struct.std::__1::__hash_node_base.1137"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiiEENS_22__unordered_map_hasherIiS2_N2v84base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS2_S9_S7_Lb1EEENS4_8internal13ZoneAllocatorIS2_EEE25__emplace_unique_key_argsIiJRiSI_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1133"* %34, i32* dereferenceable(4) %7, i32* dereferenceable(4) %7, i32* nonnull dereferenceable(4) %4) #10
  %36 = load i32, i32* %4, align 4
  br label %44

37:                                               ; preds = %16
  %38 = icmp eq i32 %30, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %37
  %40 = add nsw i32 %30, -1
  store i32 %40, i32* %4, align 4
  br label %41

41:                                               ; preds = %39, %37
  %42 = phi i32 [ 0, %37 ], [ %40, %39 ]
  %43 = add nsw i32 %23, 5
  store i32 %43, i32* %29, align 4
  br label %44

44:                                               ; preds = %41, %32
  %45 = phi i32 [ %42, %41 ], [ %36, %32 ]
  %46 = load i32, i32* %7, align 8
  %47 = add nsw i32 %46, 3
  %48 = load i64, i64* %10, align 8
  %49 = trunc i64 %48 to i32
  %50 = icmp slt i32 %47, %49
  br i1 %50, label %53, label %51

51:                                               ; preds = %44
  call void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %52 = load i32, i32* %7, align 8
  br label %53

53:                                               ; preds = %44, %51
  %54 = phi i32 [ %46, %44 ], [ %52, %51 ]
  %55 = load i8*, i8** %18, align 8
  %56 = sext i32 %54 to i64
  %57 = getelementptr inbounds i8, i8* %55, i64 %56
  %58 = bitcast i8* %57 to i32*
  store i32 %45, i32* %58, align 4
  %59 = load i32, i32* %7, align 8
  %60 = add nsw i32 %59, 4
  store i32 %60, i32* %7, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal23RegExpBytecodeGenerator7GetCodeENS0_6HandleINS0_6StringEEE(%"class.v8::internal::RegExpBytecodeGenerator"*, i64*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 3
  %4 = bitcast %"class.v8::internal::RegExpBytecodeGenerator"* %0 to void (%"class.v8::internal::RegExpBytecodeGenerator"*, %"class.v8::internal::Label"*)***
  %5 = load void (%"class.v8::internal::RegExpBytecodeGenerator"*, %"class.v8::internal::Label"*)**, void (%"class.v8::internal::RegExpBytecodeGenerator"*, %"class.v8::internal::Label"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.v8::internal::RegExpBytecodeGenerator"*, %"class.v8::internal::Label"*)*, void (%"class.v8::internal::RegExpBytecodeGenerator"*, %"class.v8::internal::Label"*)** %5, i64 8
  %7 = load void (%"class.v8::internal::RegExpBytecodeGenerator"*, %"class.v8::internal::Label"*)*, void (%"class.v8::internal::RegExpBytecodeGenerator"*, %"class.v8::internal::Label"*)** %6, align 8
  tail call void %7(%"class.v8::internal::RegExpBytecodeGenerator"* %0, %"class.v8::internal::Label"* %3) #10
  %8 = bitcast %"class.v8::internal::RegExpBytecodeGenerator"* %0 to void (%"class.v8::internal::RegExpBytecodeGenerator"*)***
  %9 = load void (%"class.v8::internal::RegExpBytecodeGenerator"*)**, void (%"class.v8::internal::RegExpBytecodeGenerator"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.v8::internal::RegExpBytecodeGenerator"*)*, void (%"class.v8::internal::RegExpBytecodeGenerator"*)** %9, i64 7
  %11 = load void (%"class.v8::internal::RegExpBytecodeGenerator"*)*, void (%"class.v8::internal::RegExpBytecodeGenerator"*)** %10, align 8
  tail call void %11(%"class.v8::internal::RegExpBytecodeGenerator"* %0) #10
  %12 = load i8, i8* @_ZN2v88internal33FLAG_regexp_peephole_optimizationE, align 1, !range !3
  %13 = icmp eq i8 %12, 0
  %14 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 8
  %15 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %14, align 8
  br i1 %13, label %25, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 0, i32 6
  %18 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 7
  %24 = tail call i64* @_ZN2v88internal34RegExpBytecodePeepholeOptimization16OptimizeBytecodeEPNS0_7IsolateEPNS0_4ZoneENS0_6HandleINS0_6StringEEEPKhiRKNS0_16ZoneUnorderedMapIiiNS_4base4hashIiEENSt3__18equal_toIiEEEE(%"class.v8::internal::Isolate"* %15, %"class.v8::internal::Zone"* %18, i64* %1, i8* %20, i32 %22, %"class.v8::internal::ZoneUnorderedMap"* dereferenceable(56) %23) #10
  br label %64

25:                                               ; preds = %2
  %26 = bitcast %"class.v8::internal::Isolate"* %15 to %"class.v8::internal::FactoryBase"*
  %27 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %28 = load i32, i32* %27, align 8
  %29 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE12NewByteArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %26, i32 %28, i8 zeroext 0) #10
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, 7
  %32 = inttoptr i64 %31 to i8*
  %33 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = load i32, i32* %27, align 8
  %36 = sext i32 %35 to i64
  switch i64 %36, label %63 [
    i64 1, label %37
    i64 2, label %39
    i64 3, label %43
    i64 4, label %44
    i64 5, label %48
    i64 6, label %49
    i64 7, label %50
    i64 8, label %51
    i64 9, label %55
    i64 10, label %56
    i64 11, label %57
    i64 12, label %58
    i64 13, label %59
    i64 14, label %60
    i64 15, label %61
    i64 16, label %62
  ]

37:                                               ; preds = %25
  %38 = load i8, i8* %34, align 1
  store i8 %38, i8* %32, align 1
  br label %64

39:                                               ; preds = %25
  %40 = bitcast i8* %34 to i16*
  %41 = inttoptr i64 %31 to i16*
  %42 = load i16, i16* %40, align 1
  store i16 %42, i16* %41, align 1
  br label %64

43:                                               ; preds = %25
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %32, i8* align 1 %34, i64 3, i1 false) #10
  br label %64

44:                                               ; preds = %25
  %45 = bitcast i8* %34 to i32*
  %46 = inttoptr i64 %31 to i32*
  %47 = load i32, i32* %45, align 1
  store i32 %47, i32* %46, align 1
  br label %64

48:                                               ; preds = %25
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %32, i8* align 1 %34, i64 5, i1 false) #10
  br label %64

49:                                               ; preds = %25
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %32, i8* align 1 %34, i64 6, i1 false) #10
  br label %64

50:                                               ; preds = %25
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %32, i8* align 1 %34, i64 7, i1 false) #10
  br label %64

51:                                               ; preds = %25
  %52 = bitcast i8* %34 to i64*
  %53 = inttoptr i64 %31 to i64*
  %54 = load i64, i64* %52, align 1
  store i64 %54, i64* %53, align 1
  br label %64

55:                                               ; preds = %25
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %32, i8* align 1 %34, i64 9, i1 false) #10
  br label %64

56:                                               ; preds = %25
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %32, i8* align 1 %34, i64 10, i1 false) #10
  br label %64

57:                                               ; preds = %25
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %32, i8* align 1 %34, i64 11, i1 false) #10
  br label %64

58:                                               ; preds = %25
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %32, i8* align 1 %34, i64 12, i1 false) #10
  br label %64

59:                                               ; preds = %25
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %32, i8* align 1 %34, i64 13, i1 false) #10
  br label %64

60:                                               ; preds = %25
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %32, i8* align 1 %34, i64 14, i1 false) #10
  br label %64

61:                                               ; preds = %25
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %32, i8* align 1 %34, i64 15, i1 false) #10
  br label %64

62:                                               ; preds = %25
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %32, i8* align 1 %34, i64 16, i1 false) #10
  br label %64

63:                                               ; preds = %25
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %32, i8* align 1 %34, i64 %36, i1 false) #10
  br label %64

64:                                               ; preds = %63, %62, %61, %60, %59, %58, %57, %56, %55, %51, %50, %49, %48, %44, %43, %39, %37, %16
  %65 = phi i64* [ %24, %16 ], [ %29, %37 ], [ %29, %39 ], [ %29, %43 ], [ %29, %44 ], [ %29, %48 ], [ %29, %49 ], [ %29, %50 ], [ %29, %51 ], [ %29, %55 ], [ %29, %56 ], [ %29, %57 ], [ %29, %58 ], [ %29, %59 ], [ %29, %60 ], [ %29, %61 ], [ %29, %62 ], [ %29, %63 ]
  ret i64* %65
}

declare i64* @_ZN2v88internal34RegExpBytecodePeepholeOptimization16OptimizeBytecodeEPNS0_7IsolateEPNS0_4ZoneENS0_6HandleINS0_6StringEEEPKhiRKNS0_16ZoneUnorderedMapIiiNS_4base4hashIiEENSt3__18equal_toIiEEEE(%"class.v8::internal::Isolate"*, %"class.v8::internal::Zone"*, i64*, i8*, i32, %"class.v8::internal::ZoneUnorderedMap"* dereferenceable(56)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN2v88internal23RegExpBytecodeGenerator6lengthEv(%"class.v8::internal::RegExpBytecodeGenerator"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE12NewByteArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGenerator4CopyEPh(%"class.v8::internal::RegExpBytecodeGenerator"* nocapture readonly, i8* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = sext i32 %6 to i64
  switch i64 %7, label %34 [
    i64 1, label %8
    i64 2, label %10
    i64 3, label %14
    i64 4, label %15
    i64 5, label %19
    i64 6, label %20
    i64 7, label %21
    i64 8, label %22
    i64 9, label %26
    i64 10, label %27
    i64 11, label %28
    i64 12, label %29
    i64 13, label %30
    i64 14, label %31
    i64 15, label %32
    i64 16, label %33
  ]

8:                                                ; preds = %2
  %9 = load i8, i8* %4, align 1
  store i8 %9, i8* %1, align 1
  br label %35

10:                                               ; preds = %2
  %11 = bitcast i8* %4 to i16*
  %12 = bitcast i8* %1 to i16*
  %13 = load i16, i16* %11, align 1
  store i16 %13, i16* %12, align 1
  br label %35

14:                                               ; preds = %2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %4, i64 3, i1 false) #10
  br label %35

15:                                               ; preds = %2
  %16 = bitcast i8* %4 to i32*
  %17 = bitcast i8* %1 to i32*
  %18 = load i32, i32* %16, align 1
  store i32 %18, i32* %17, align 1
  br label %35

19:                                               ; preds = %2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %4, i64 5, i1 false) #10
  br label %35

20:                                               ; preds = %2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %4, i64 6, i1 false) #10
  br label %35

21:                                               ; preds = %2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %4, i64 7, i1 false) #10
  br label %35

22:                                               ; preds = %2
  %23 = bitcast i8* %4 to i64*
  %24 = bitcast i8* %1 to i64*
  %25 = load i64, i64* %23, align 1
  store i64 %25, i64* %24, align 1
  br label %35

26:                                               ; preds = %2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %4, i64 9, i1 false) #10
  br label %35

27:                                               ; preds = %2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %4, i64 10, i1 false) #10
  br label %35

28:                                               ; preds = %2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %4, i64 11, i1 false) #10
  br label %35

29:                                               ; preds = %2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %4, i64 12, i1 false) #10
  br label %35

30:                                               ; preds = %2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %4, i64 13, i1 false) #10
  br label %35

31:                                               ; preds = %2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %4, i64 14, i1 false) #10
  br label %35

32:                                               ; preds = %2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %4, i64 15, i1 false) #10
  br label %35

33:                                               ; preds = %2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %4, i64 16, i1 false) #10
  br label %35

34:                                               ; preds = %2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %4, i64 %7, i1 false) #10
  br label %35

35:                                               ; preds = %8, %10, %14, %15, %19, %20, %21, %22, %26, %27, %28, %29, %30, %31, %32, %33, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal23RegExpBytecodeGenerator6ExpandEv(%"class.v8::internal::RegExpBytecodeGenerator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::RegExpBytecodeGenerator", %"class.v8::internal::RegExpBytecodeGenerator"* %0, i64 0, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = trunc i64 %5 to i32
  %7 = shl nsw i32 %6, 1
  %8 = sext i32 %7 to i64
  %9 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %8, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #11
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %20

11:                                               ; preds = %1
  %12 = tail call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #10
  %13 = bitcast %"class.v8::Platform"* %12 to void (%"class.v8::Platform"*)***
  %14 = load void (%"class.v8::Platform"*)**, void (%"class.v8::Platform"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %14, i64 3
  %16 = load void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %15, align 8
  tail call void %16(%"class.v8::Platform"* %12) #10
  %17 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %8, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #11
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %20

19:                                               ; preds = %11
  tail call void @_ZN2v88internal23FatalProcessOutOfMemoryEPNS0_7IsolateEPKc(%"class.v8::internal::Isolate"* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0)) #12
  unreachable

20:                                               ; preds = %1, %11
  %21 = phi i8* [ %17, %11 ], [ %9, %1 ]
  store i8* %21, i8** %2, align 8
  store i64 %8, i64* %4, align 8
  %22 = shl i64 %5, 32
  %23 = ashr exact i64 %22, 32
  switch i64 %23, label %50 [
    i64 1, label %24
    i64 2, label %26
    i64 3, label %30
    i64 4, label %31
    i64 5, label %35
    i64 6, label %36
    i64 7, label %37
    i64 8, label %38
    i64 9, label %42
    i64 10, label %43
    i64 11, label %44
    i64 12, label %45
    i64 13, label %46
    i64 14, label %47
    i64 15, label %48
    i64 16, label %49
  ]

24:                                               ; preds = %20
  %25 = load i8, i8* %3, align 1
  store i8 %25, i8* %21, align 1
  br label %51

26:                                               ; preds = %20
  %27 = bitcast i8* %3 to i16*
  %28 = bitcast i8* %21 to i16*
  %29 = load i16, i16* %27, align 1
  store i16 %29, i16* %28, align 1
  br label %51

30:                                               ; preds = %20
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 %3, i64 3, i1 false) #10
  br label %51

31:                                               ; preds = %20
  %32 = bitcast i8* %3 to i32*
  %33 = bitcast i8* %21 to i32*
  %34 = load i32, i32* %32, align 1
  store i32 %34, i32* %33, align 1
  br label %51

35:                                               ; preds = %20
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 %3, i64 5, i1 false) #10
  br label %51

36:                                               ; preds = %20
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 %3, i64 6, i1 false) #10
  br label %51

37:                                               ; preds = %20
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 %3, i64 7, i1 false) #10
  br label %51

38:                                               ; preds = %20
  %39 = bitcast i8* %3 to i64*
  %40 = bitcast i8* %21 to i64*
  %41 = load i64, i64* %39, align 1
  store i64 %41, i64* %40, align 1
  br label %51

42:                                               ; preds = %20
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 %3, i64 9, i1 false) #10
  br label %51

43:                                               ; preds = %20
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 %3, i64 10, i1 false) #10
  br label %51

44:                                               ; preds = %20
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 %3, i64 11, i1 false) #10
  br label %51

45:                                               ; preds = %20
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 %3, i64 12, i1 false) #10
  br label %51

46:                                               ; preds = %20
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 %3, i64 13, i1 false) #10
  br label %51

47:                                               ; preds = %20
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 %3, i64 14, i1 false) #10
  br label %51

48:                                               ; preds = %20
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 %3, i64 15, i1 false) #10
  br label %51

49:                                               ; preds = %20
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 %3, i64 16, i1 false) #10
  br label %51

50:                                               ; preds = %20
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 %3, i64 %23, i1 false) #10
  br label %51

51:                                               ; preds = %24, %26, %30, %31, %35, %36, %37, %38, %42, %43, %44, %45, %46, %47, %48, %49, %50
  %52 = icmp eq i8* %3, null
  br i1 %52, label %54, label %53

53:                                               ; preds = %51
  tail call void @_ZdaPv(i8* nonnull %3) #11
  br label %54

54:                                               ; preds = %51, %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal20RegExpMacroAssembler21AbortedCodeGenerationEv(%"class.v8::internal::RegExpMacroAssembler"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal23RegExpBytecodeGenerator17stack_limit_slackEv(%"class.v8::internal::RegExpBytecodeGenerator"*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal23RegExpBytecodeGenerator16CanReadUnalignedEv(%"class.v8::internal::RegExpBytecodeGenerator"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN2v88internal20RegExpMacroAssembler13CheckPositionEiPNS0_5LabelE(%"class.v8::internal::RegExpMacroAssembler"*, i32, %"class.v8::internal::Label"*) unnamed_addr #1

declare zeroext i1 @_ZN2v88internal20RegExpMacroAssembler26CheckSpecialCharacterClassEtPNS0_5LabelE(%"class.v8::internal::RegExpMacroAssembler"*, i16 zeroext, %"class.v8::internal::Label"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal20RegExpMacroAssembler14BindJumpTargetEPNS0_5LabelE(%"class.v8::internal::RegExpMacroAssembler"*, %"class.v8::internal::Label"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.v8::internal::RegExpMacroAssembler"* %0 to void (%"class.v8::internal::RegExpMacroAssembler"*, %"class.v8::internal::Label"*)***
  %4 = load void (%"class.v8::internal::RegExpMacroAssembler"*, %"class.v8::internal::Label"*)**, void (%"class.v8::internal::RegExpMacroAssembler"*, %"class.v8::internal::Label"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.v8::internal::RegExpMacroAssembler"*, %"class.v8::internal::Label"*)*, void (%"class.v8::internal::RegExpMacroAssembler"*, %"class.v8::internal::Label"*)** %4, i64 8
  %6 = load void (%"class.v8::internal::RegExpMacroAssembler"*, %"class.v8::internal::Label"*)*, void (%"class.v8::internal::RegExpMacroAssembler"*, %"class.v8::internal::Label"*)** %5, align 8
  tail call void %6(%"class.v8::internal::RegExpMacroAssembler"* %0, %"class.v8::internal::Label"* %1) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnamRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #8

declare %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZN2v88internal23FatalProcessOutOfMemoryEPNS0_7IsolateEPKc(%"class.v8::internal::Isolate"*, i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiiEENS_22__unordered_map_hasherIiS2_N2v84base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS2_S9_S7_Lb1EEENS4_8internal13ZoneAllocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.1133"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #10
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1133", %"class.std::__1::__hash_table.1133"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiiEENS_22__unordered_map_hasherIiS2_N2v84base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS2_S9_S7_Lb1EEENS4_8internal13ZoneAllocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.1133"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #10, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1133", %"class.std::__1::__hash_table.1133"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1133", %"class.std::__1::__hash_table.1133"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #10
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #10, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #10
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiiEENS_22__unordered_map_hasherIiS2_N2v84base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS2_S9_S7_Lb1EEENS4_8internal13ZoneAllocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.1133"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiiEENS_22__unordered_map_hasherIiS2_N2v84base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS2_S9_S7_Lb1EEENS4_8internal13ZoneAllocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.1133"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %186, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.std::__1::__hash_table.1133", %"class.std::__1::__hash_table.1133"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %6 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %5, align 8
  %7 = shl i64 %1, 3
  %8 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %6, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %6, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %11, %9
  %13 = icmp ugt i64 %7, %12
  br i1 %13, label %14, label %16, !prof !5

14:                                               ; preds = %4
  %15 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %6, i64 %7) #10
  br label %18

16:                                               ; preds = %4
  %17 = add i64 %9, %7
  store i64 %17, i64* %8, align 8
  br label %18

18:                                               ; preds = %16, %14
  %19 = phi i64 [ %15, %14 ], [ %9, %16 ]
  %20 = inttoptr i64 %19 to %"struct.std::__1::__hash_node_base.1137"**
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.1133", %"class.std::__1::__hash_table.1133"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.1137"** %20, %"struct.std::__1::__hash_node_base.1137"*** %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1133", %"class.std::__1::__hash_table.1133"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %22, align 8
  store %"struct.std::__1::__hash_node_base.1137"* null, %"struct.std::__1::__hash_node_base.1137"** %20, align 8
  %23 = icmp eq i64 %1, 1
  br i1 %23, label %42, label %24

24:                                               ; preds = %18
  %25 = add i64 %1, -1
  %26 = add i64 %1, -2
  %27 = and i64 %25, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub i64 %25, %27
  br label %47

31:                                               ; preds = %47, %24
  %32 = phi i64 [ 1, %24 ], [ %61, %47 ]
  %33 = icmp eq i64 %27, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %31, %34
  %35 = phi i64 [ %39, %34 ], [ %32, %31 ]
  %36 = phi i64 [ %40, %34 ], [ %27, %31 ]
  %37 = load %"struct.std::__1::__hash_node_base.1137"**, %"struct.std::__1::__hash_node_base.1137"*** %21, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137"*, %"struct.std::__1::__hash_node_base.1137"** %37, i64 %35
  store %"struct.std::__1::__hash_node_base.1137"* null, %"struct.std::__1::__hash_node_base.1137"** %38, align 8
  %39 = add nuw i64 %35, 1
  %40 = add i64 %36, -1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %34, !llvm.loop !6

42:                                               ; preds = %31, %34, %18
  %43 = getelementptr inbounds %"class.std::__1::__hash_table.1133", %"class.std::__1::__hash_table.1133"* %0, i64 0, i32 1, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137", %"struct.std::__1::__hash_node_base.1137"* %43, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.1137"*, %"struct.std::__1::__hash_node_base.1137"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.1137"* %45, null
  br i1 %46, label %188, label %64

47:                                               ; preds = %47, %29
  %48 = phi i64 [ 1, %29 ], [ %61, %47 ]
  %49 = phi i64 [ %30, %29 ], [ %62, %47 ]
  %50 = load %"struct.std::__1::__hash_node_base.1137"**, %"struct.std::__1::__hash_node_base.1137"*** %21, align 8
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137"*, %"struct.std::__1::__hash_node_base.1137"** %50, i64 %48
  store %"struct.std::__1::__hash_node_base.1137"* null, %"struct.std::__1::__hash_node_base.1137"** %51, align 8
  %52 = add nuw nsw i64 %48, 1
  %53 = load %"struct.std::__1::__hash_node_base.1137"**, %"struct.std::__1::__hash_node_base.1137"*** %21, align 8
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137"*, %"struct.std::__1::__hash_node_base.1137"** %53, i64 %52
  store %"struct.std::__1::__hash_node_base.1137"* null, %"struct.std::__1::__hash_node_base.1137"** %54, align 8
  %55 = add nuw nsw i64 %48, 2
  %56 = load %"struct.std::__1::__hash_node_base.1137"**, %"struct.std::__1::__hash_node_base.1137"*** %21, align 8
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137"*, %"struct.std::__1::__hash_node_base.1137"** %56, i64 %55
  store %"struct.std::__1::__hash_node_base.1137"* null, %"struct.std::__1::__hash_node_base.1137"** %57, align 8
  %58 = add nuw i64 %48, 3
  %59 = load %"struct.std::__1::__hash_node_base.1137"**, %"struct.std::__1::__hash_node_base.1137"*** %21, align 8
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137"*, %"struct.std::__1::__hash_node_base.1137"** %59, i64 %58
  store %"struct.std::__1::__hash_node_base.1137"* null, %"struct.std::__1::__hash_node_base.1137"** %60, align 8
  %61 = add nuw i64 %48, 4
  %62 = add i64 %49, -4
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %31, label %47

64:                                               ; preds = %42
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137", %"struct.std::__1::__hash_node_base.1137"* %45, i64 1
  %66 = bitcast %"struct.std::__1::__hash_node_base.1137"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = tail call i64 @llvm.ctpop.i64(i64 %1) #10, !range !2
  %69 = icmp ugt i64 %68, 1
  br i1 %69, label %73, label %70

70:                                               ; preds = %64
  %71 = add i64 %1, -1
  %72 = and i64 %67, %71
  br label %77

73:                                               ; preds = %64
  %74 = icmp ult i64 %67, %1
  br i1 %74, label %77, label %75

75:                                               ; preds = %73
  %76 = urem i64 %67, %1
  br label %77

77:                                               ; preds = %70, %73, %75
  %78 = phi i64 [ %72, %70 ], [ %76, %75 ], [ %67, %73 ]
  %79 = load %"struct.std::__1::__hash_node_base.1137"**, %"struct.std::__1::__hash_node_base.1137"*** %21, align 8
  %80 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137"*, %"struct.std::__1::__hash_node_base.1137"** %79, i64 %78
  store %"struct.std::__1::__hash_node_base.1137"* %43, %"struct.std::__1::__hash_node_base.1137"** %80, align 8
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137", %"struct.std::__1::__hash_node_base.1137"* %45, i64 0, i32 0
  %82 = load %"struct.std::__1::__hash_node_base.1137"*, %"struct.std::__1::__hash_node_base.1137"** %81, align 8
  %83 = icmp eq %"struct.std::__1::__hash_node_base.1137"* %82, null
  br i1 %83, label %188, label %84

84:                                               ; preds = %77
  %85 = add i64 %1, -1
  br i1 %69, label %86, label %138

86:                                               ; preds = %84, %129
  %87 = phi %"struct.std::__1::__hash_node_base.1137"* [ %133, %129 ], [ %82, %84 ]
  %88 = phi i64 [ %131, %129 ], [ %78, %84 ]
  %89 = phi %"struct.std::__1::__hash_node_base.1137"* [ %130, %129 ], [ %45, %84 ]
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137", %"struct.std::__1::__hash_node_base.1137"* %87, i64 1
  %91 = bitcast %"struct.std::__1::__hash_node_base.1137"* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = icmp ult i64 %92, %1
  br i1 %93, label %96, label %94

94:                                               ; preds = %86
  %95 = urem i64 %92, %1
  br label %96

96:                                               ; preds = %94, %86
  %97 = phi i64 [ %95, %94 ], [ %92, %86 ]
  %98 = icmp eq i64 %97, %88
  br i1 %98, label %129, label %99

99:                                               ; preds = %96
  %100 = load %"struct.std::__1::__hash_node_base.1137"**, %"struct.std::__1::__hash_node_base.1137"*** %21, align 8
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137"*, %"struct.std::__1::__hash_node_base.1137"** %100, i64 %97
  %102 = load %"struct.std::__1::__hash_node_base.1137"*, %"struct.std::__1::__hash_node_base.1137"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base.1137"* %102, null
  br i1 %103, label %128, label %135

104:                                              ; preds = %135, %109
  %105 = phi %"struct.std::__1::__hash_node_base.1137"* [ %107, %109 ], [ %87, %135 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137", %"struct.std::__1::__hash_node_base.1137"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.1137"*, %"struct.std::__1::__hash_node_base.1137"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.1137"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137", %"struct.std::__1::__hash_node_base.1137"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.1137"* %110 to i32*
  %112 = load i32, i32* %137, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %109, %104
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.1137"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.1137"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.1137"* %89 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.1137"**, %"struct.std::__1::__hash_node_base.1137"*** %21, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137"*, %"struct.std::__1::__hash_node_base.1137"** %119, i64 %97
  %121 = bitcast %"struct.std::__1::__hash_node_base.1137"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.1137"**, %"struct.std::__1::__hash_node_base.1137"*** %21, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137"*, %"struct.std::__1::__hash_node_base.1137"** %124, i64 %97
  %126 = load %"struct.std::__1::__hash_node_base.1137"*, %"struct.std::__1::__hash_node_base.1137"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137", %"struct.std::__1::__hash_node_base.1137"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1137"* %87, %"struct.std::__1::__hash_node_base.1137"** %127, align 8
  br label %129

128:                                              ; preds = %99
  store %"struct.std::__1::__hash_node_base.1137"* %89, %"struct.std::__1::__hash_node_base.1137"** %101, align 8
  br label %129

129:                                              ; preds = %128, %115, %96
  %130 = phi %"struct.std::__1::__hash_node_base.1137"* [ %87, %128 ], [ %89, %115 ], [ %87, %96 ]
  %131 = phi i64 [ %97, %128 ], [ %88, %115 ], [ %88, %96 ]
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137", %"struct.std::__1::__hash_node_base.1137"* %130, i64 0, i32 0
  %133 = load %"struct.std::__1::__hash_node_base.1137"*, %"struct.std::__1::__hash_node_base.1137"** %132, align 8
  %134 = icmp eq %"struct.std::__1::__hash_node_base.1137"* %133, null
  br i1 %134, label %188, label %86

135:                                              ; preds = %99
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137", %"struct.std::__1::__hash_node_base.1137"* %87, i64 2
  %137 = bitcast %"struct.std::__1::__hash_node_base.1137"* %136 to i32*
  br label %104

138:                                              ; preds = %84, %180
  %139 = phi %"struct.std::__1::__hash_node_base.1137"* [ %184, %180 ], [ %82, %84 ]
  %140 = phi i64 [ %182, %180 ], [ %78, %84 ]
  %141 = phi %"struct.std::__1::__hash_node_base.1137"* [ %181, %180 ], [ %45, %84 ]
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137", %"struct.std::__1::__hash_node_base.1137"* %139, i64 1
  %143 = bitcast %"struct.std::__1::__hash_node_base.1137"* %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = and i64 %144, %85
  %146 = icmp eq i64 %145, %140
  br i1 %146, label %180, label %147

147:                                              ; preds = %138
  %148 = load %"struct.std::__1::__hash_node_base.1137"**, %"struct.std::__1::__hash_node_base.1137"*** %21, align 8
  %149 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137"*, %"struct.std::__1::__hash_node_base.1137"** %148, i64 %145
  %150 = load %"struct.std::__1::__hash_node_base.1137"*, %"struct.std::__1::__hash_node_base.1137"** %149, align 8
  %151 = icmp eq %"struct.std::__1::__hash_node_base.1137"* %150, null
  br i1 %151, label %155, label %152

152:                                              ; preds = %147
  %153 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137", %"struct.std::__1::__hash_node_base.1137"* %139, i64 2
  %154 = bitcast %"struct.std::__1::__hash_node_base.1137"* %153 to i32*
  br label %156

155:                                              ; preds = %147
  store %"struct.std::__1::__hash_node_base.1137"* %141, %"struct.std::__1::__hash_node_base.1137"** %149, align 8
  br label %180

156:                                              ; preds = %152, %161
  %157 = phi %"struct.std::__1::__hash_node_base.1137"* [ %159, %161 ], [ %139, %152 ]
  %158 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137", %"struct.std::__1::__hash_node_base.1137"* %157, i64 0, i32 0
  %159 = load %"struct.std::__1::__hash_node_base.1137"*, %"struct.std::__1::__hash_node_base.1137"** %158, align 8
  %160 = icmp eq %"struct.std::__1::__hash_node_base.1137"* %159, null
  br i1 %160, label %167, label %161

161:                                              ; preds = %156
  %162 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137", %"struct.std::__1::__hash_node_base.1137"* %159, i64 2
  %163 = bitcast %"struct.std::__1::__hash_node_base.1137"* %162 to i32*
  %164 = load i32, i32* %154, align 4
  %165 = load i32, i32* %163, align 4
  %166 = icmp eq i32 %164, %165
  br i1 %166, label %156, label %167

167:                                              ; preds = %156, %161
  %168 = ptrtoint %"struct.std::__1::__hash_node_base.1137"* %159 to i64
  %169 = bitcast %"struct.std::__1::__hash_node_base.1137"* %157 to i64*
  %170 = bitcast %"struct.std::__1::__hash_node_base.1137"* %141 to i64*
  store i64 %168, i64* %170, align 8
  %171 = load %"struct.std::__1::__hash_node_base.1137"**, %"struct.std::__1::__hash_node_base.1137"*** %21, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137"*, %"struct.std::__1::__hash_node_base.1137"** %171, i64 %145
  %173 = bitcast %"struct.std::__1::__hash_node_base.1137"** %172 to i64**
  %174 = load i64*, i64** %173, align 8
  %175 = load i64, i64* %174, align 8
  store i64 %175, i64* %169, align 8
  %176 = load %"struct.std::__1::__hash_node_base.1137"**, %"struct.std::__1::__hash_node_base.1137"*** %21, align 8
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137"*, %"struct.std::__1::__hash_node_base.1137"** %176, i64 %145
  %178 = load %"struct.std::__1::__hash_node_base.1137"*, %"struct.std::__1::__hash_node_base.1137"** %177, align 8
  %179 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137", %"struct.std::__1::__hash_node_base.1137"* %178, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1137"* %139, %"struct.std::__1::__hash_node_base.1137"** %179, align 8
  br label %180

180:                                              ; preds = %138, %167, %155
  %181 = phi %"struct.std::__1::__hash_node_base.1137"* [ %139, %155 ], [ %141, %167 ], [ %139, %138 ]
  %182 = phi i64 [ %145, %155 ], [ %140, %167 ], [ %140, %138 ]
  %183 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137", %"struct.std::__1::__hash_node_base.1137"* %181, i64 0, i32 0
  %184 = load %"struct.std::__1::__hash_node_base.1137"*, %"struct.std::__1::__hash_node_base.1137"** %183, align 8
  %185 = icmp eq %"struct.std::__1::__hash_node_base.1137"* %184, null
  br i1 %185, label %188, label %138

186:                                              ; preds = %2
  %187 = bitcast %"class.std::__1::__hash_table.1133"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %187, i8 0, i64 16, i1 false)
  br label %188

188:                                              ; preds = %180, %129, %77, %42, %186
  ret void
}

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1137"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiiEENS_22__unordered_map_hasherIiS2_N2v84base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS2_S9_S7_Lb1EEENS4_8internal13ZoneAllocatorIS2_EEE25__emplace_unique_key_argsIiJRiSI_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1133"*, i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %5 = load i32, i32* %1, align 4
  %6 = tail call i64 @_ZN2v84base10hash_valueEj(i32 %5) #10
  %7 = getelementptr inbounds %"class.std::__1::__hash_table.1133", %"class.std::__1::__hash_table.1133"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %70, label %10

10:                                               ; preds = %4
  %11 = tail call i64 @llvm.ctpop.i64(i64 %8) #10, !range !2
  %12 = icmp ugt i64 %11, 1
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = add i64 %8, -1
  %15 = and i64 %14, %6
  br label %20

16:                                               ; preds = %10
  %17 = icmp ult i64 %6, %8
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = urem i64 %6, %8
  br label %20

20:                                               ; preds = %13, %16, %18
  %21 = phi i64 [ %15, %13 ], [ %19, %18 ], [ %6, %16 ]
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1133", %"class.std::__1::__hash_table.1133"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base.1137"**, %"struct.std::__1::__hash_node_base.1137"*** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137"*, %"struct.std::__1::__hash_node_base.1137"** %23, i64 %21
  %25 = load %"struct.std::__1::__hash_node_base.1137"*, %"struct.std::__1::__hash_node_base.1137"** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base.1137"* %25, null
  br i1 %26, label %70, label %27

27:                                               ; preds = %20
  %28 = add i64 %8, -1
  %29 = load i32, i32* %1, align 4
  br i1 %12, label %30, label %52

30:                                               ; preds = %27, %47
  %31 = phi %"struct.std::__1::__hash_node_base.1137"* [ %33, %47 ], [ %25, %27 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137", %"struct.std::__1::__hash_node_base.1137"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.1137"*, %"struct.std::__1::__hash_node_base.1137"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.1137"* %33, null
  br i1 %34, label %70, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137", %"struct.std::__1::__hash_node_base.1137"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.1137"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %6
  br i1 %39, label %47, label %40

40:                                               ; preds = %35
  %41 = icmp ult i64 %38, %8
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %38, %8
  br label %44

44:                                               ; preds = %42, %40
  %45 = phi i64 [ %43, %42 ], [ %38, %40 ]
  %46 = icmp eq i64 %45, %21
  br i1 %46, label %47, label %70

47:                                               ; preds = %44, %35
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137", %"struct.std::__1::__hash_node_base.1137"* %33, i64 2
  %49 = bitcast %"struct.std::__1::__hash_node_base.1137"* %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, %29
  br i1 %51, label %172, label %30

52:                                               ; preds = %27, %65
  %53 = phi %"struct.std::__1::__hash_node_base.1137"* [ %55, %65 ], [ %25, %27 ]
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137", %"struct.std::__1::__hash_node_base.1137"* %53, i64 0, i32 0
  %55 = load %"struct.std::__1::__hash_node_base.1137"*, %"struct.std::__1::__hash_node_base.1137"** %54, align 8
  %56 = icmp eq %"struct.std::__1::__hash_node_base.1137"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137", %"struct.std::__1::__hash_node_base.1137"* %55, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.1137"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %60, %6
  %62 = and i64 %60, %28
  %63 = icmp eq i64 %62, %21
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %70

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137", %"struct.std::__1::__hash_node_base.1137"* %55, i64 2
  %67 = bitcast %"struct.std::__1::__hash_node_base.1137"* %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, %29
  br i1 %69, label %172, label %52

70:                                               ; preds = %57, %52, %44, %30, %20, %4
  %71 = phi i64 [ %21, %20 ], [ undef, %4 ], [ %21, %30 ], [ %21, %44 ], [ %21, %52 ], [ %21, %57 ]
  %72 = getelementptr inbounds %"class.std::__1::__hash_table.1133", %"class.std::__1::__hash_table.1133"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %73 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %72, align 8, !noalias !8
  %74 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %73, i64 0, i32 2
  %75 = load i64, i64* %74, align 8, !noalias !8
  %76 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %73, i64 0, i32 3
  %77 = load i64, i64* %76, align 8, !noalias !8
  %78 = sub i64 %77, %75
  %79 = icmp ult i64 %78, 24
  br i1 %79, label %80, label %82, !prof !5

80:                                               ; preds = %70
  %81 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %73, i64 24) #10, !noalias !8
  br label %84

82:                                               ; preds = %70
  %83 = add i64 %75, 24
  store i64 %83, i64* %74, align 8, !noalias !8
  br label %84

84:                                               ; preds = %80, %82
  %85 = phi i64 [ %81, %80 ], [ %75, %82 ]
  %86 = inttoptr i64 %85 to %"struct.std::__1::__hash_node"*
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %86, i64 0, i32 2, i32 0, i32 0
  %88 = load i32, i32* %2, align 4, !noalias !8
  store i32 %88, i32* %87, align 4, !noalias !8
  %89 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %86, i64 0, i32 2, i32 0, i32 1
  %90 = load i32, i32* %3, align 4, !noalias !8
  store i32 %90, i32* %89, align 4, !noalias !8
  %91 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %86, i64 0, i32 1
  store i64 %6, i64* %91, align 8, !noalias !8
  %92 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %86, i64 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.1137"* null, %"struct.std::__1::__hash_node_base.1137"** %92, align 8, !noalias !8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table.1133", %"class.std::__1::__hash_table.1133"* %0, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, 1
  %96 = uitofp i64 %95 to float
  %97 = uitofp i64 %8 to float
  %98 = getelementptr inbounds %"class.std::__1::__hash_table.1133", %"class.std::__1::__hash_table.1133"* %0, i64 0, i32 3, i32 0, i32 0
  %99 = load float, float* %98, align 4
  %100 = fmul float %99, %97
  %101 = fcmp olt float %100, %96
  %102 = or i1 %9, %101
  br i1 %102, label %103, label %126

103:                                              ; preds = %84
  %104 = shl i64 %8, 1
  %105 = icmp ult i64 %8, 3
  %106 = tail call i64 @llvm.ctpop.i64(i64 %8) #10, !range !2
  %107 = icmp ugt i64 %106, 1
  %108 = or i1 %105, %107
  %109 = zext i1 %108 to i64
  %110 = or i64 %104, %109
  %111 = fdiv float %96, %99
  %112 = tail call float @llvm.ceil.f32(float %111) #10
  %113 = fptoui float %112 to i64
  %114 = icmp ult i64 %110, %113
  %115 = select i1 %114, i64 %113, i64 %110
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiiEENS_22__unordered_map_hasherIiS2_N2v84base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS2_S9_S7_Lb1EEENS4_8internal13ZoneAllocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.1133"* %0, i64 %115)
  %116 = load i64, i64* %7, align 8
  %117 = tail call i64 @llvm.ctpop.i64(i64 %116) #10, !range !2
  %118 = icmp ugt i64 %117, 1
  br i1 %118, label %122, label %119

119:                                              ; preds = %103
  %120 = add i64 %116, -1
  %121 = and i64 %120, %6
  br label %126

122:                                              ; preds = %103
  %123 = icmp ult i64 %6, %116
  br i1 %123, label %126, label %124

124:                                              ; preds = %122
  %125 = urem i64 %6, %116
  br label %126

126:                                              ; preds = %124, %122, %119, %84
  %127 = phi i64 [ %8, %84 ], [ %116, %119 ], [ %116, %122 ], [ %116, %124 ]
  %128 = phi i64 [ %71, %84 ], [ %121, %119 ], [ %6, %122 ], [ %125, %124 ]
  %129 = getelementptr inbounds %"class.std::__1::__hash_table.1133", %"class.std::__1::__hash_table.1133"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %130 = load %"struct.std::__1::__hash_node_base.1137"**, %"struct.std::__1::__hash_node_base.1137"*** %129, align 8
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137"*, %"struct.std::__1::__hash_node_base.1137"** %130, i64 %128
  %132 = load %"struct.std::__1::__hash_node_base.1137"*, %"struct.std::__1::__hash_node_base.1137"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.1137"* %132, null
  br i1 %133, label %134, label %162

134:                                              ; preds = %126
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.1133", %"class.std::__1::__hash_table.1133"* %0, i64 0, i32 1, i32 0, i32 0
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137", %"struct.std::__1::__hash_node_base.1137"* %135, i64 0, i32 0
  %137 = bitcast %"struct.std::__1::__hash_node_base.1137"* %135 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = inttoptr i64 %85 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %86, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1137"* %140, %"struct.std::__1::__hash_node_base.1137"** %136, align 8
  %141 = load %"struct.std::__1::__hash_node_base.1137"**, %"struct.std::__1::__hash_node_base.1137"*** %129, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137"*, %"struct.std::__1::__hash_node_base.1137"** %141, i64 %128
  store %"struct.std::__1::__hash_node_base.1137"* %135, %"struct.std::__1::__hash_node_base.1137"** %142, align 8
  %143 = load %"struct.std::__1::__hash_node_base.1137"*, %"struct.std::__1::__hash_node_base.1137"** %92, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base.1137"* %143, null
  br i1 %144, label %168, label %145

145:                                              ; preds = %134
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137", %"struct.std::__1::__hash_node_base.1137"* %143, i64 1
  %147 = bitcast %"struct.std::__1::__hash_node_base.1137"* %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = tail call i64 @llvm.ctpop.i64(i64 %127) #10, !range !2
  %150 = icmp ugt i64 %149, 1
  br i1 %150, label %154, label %151

151:                                              ; preds = %145
  %152 = add i64 %127, -1
  %153 = and i64 %148, %152
  br label %158

154:                                              ; preds = %145
  %155 = icmp ult i64 %148, %127
  br i1 %155, label %158, label %156

156:                                              ; preds = %154
  %157 = urem i64 %148, %127
  br label %158

158:                                              ; preds = %151, %154, %156
  %159 = phi i64 [ %153, %151 ], [ %157, %156 ], [ %148, %154 ]
  %160 = load %"struct.std::__1::__hash_node_base.1137"**, %"struct.std::__1::__hash_node_base.1137"*** %129, align 8
  %161 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137"*, %"struct.std::__1::__hash_node_base.1137"** %160, i64 %159
  store %"struct.std::__1::__hash_node_base.1137"* %140, %"struct.std::__1::__hash_node_base.1137"** %161, align 8
  br label %168

162:                                              ; preds = %126
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1137", %"struct.std::__1::__hash_node_base.1137"* %132, i64 0, i32 0
  %164 = bitcast %"struct.std::__1::__hash_node_base.1137"* %132 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = inttoptr i64 %85 to i64*
  store i64 %165, i64* %166, align 8
  %167 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %86, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1137"* %167, %"struct.std::__1::__hash_node_base.1137"** %163, align 8
  br label %168

168:                                              ; preds = %134, %158, %162
  %169 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %86, i64 0, i32 0
  %170 = load i64, i64* %93, align 8
  %171 = add i64 %170, 1
  store i64 %171, i64* %93, align 8
  br label %172

172:                                              ; preds = %65, %47, %168
  %173 = phi i8 [ 1, %168 ], [ 0, %47 ], [ 0, %65 ]
  %174 = phi %"struct.std::__1::__hash_node_base.1137"* [ %169, %168 ], [ %33, %47 ], [ %55, %65 ]
  %175 = insertvalue { %"struct.std::__1::__hash_node_base.1137"*, i8 } undef, %"struct.std::__1::__hash_node_base.1137"* %174, 0
  %176 = insertvalue { %"struct.std::__1::__hash_node_base.1137"*, i8 } %175, i8 %173, 1
  ret { %"struct.std::__1::__hash_node_base.1137"*, i8 } %176
}

declare i64 @_ZN2v84base10hash_valueEj(i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i64 0, i64 65}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIiiEENS_22__unordered_map_hasherIiS2_N2v84base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS2_S9_S7_Lb1EEENS4_8internal13ZoneAllocatorIS2_EEE21__construct_node_hashIRiJSI_EEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSE_ISM_EEEEEEmOT_DpOT0_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIiiEENS_22__unordered_map_hasherIiS2_N2v84base4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS2_S9_S7_Lb1EEENS4_8internal13ZoneAllocatorIS2_EEE21__construct_node_hashIRiJSI_EEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSE_ISM_EEEEEEmOT_DpOT0_"}
