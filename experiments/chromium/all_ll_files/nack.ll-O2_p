; ModuleID = '../../third_party/webrtc/modules/rtp_rtcp/source/rtcp_packet/nack.cc'
source_filename = "../../third_party/webrtc/modules/rtp_rtcp/source/rtcp_packet/nack.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.webrtc::rtcp::Nack" = type { %"class.webrtc::rtcp::Rtpfb", %"class.std::__1::vector", %"class.std::__1::vector.1" }
%"class.webrtc::rtcp::Rtpfb" = type { %"class.webrtc::rtcp::RtcpPacket.base", i32 }
%"class.webrtc::rtcp::RtcpPacket.base" = type <{ i32 (...)**, i32 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.webrtc::rtcp::Nack::PackedNack"*, %"struct.webrtc::rtcp::Nack::PackedNack"*, %"class.std::__1::__compressed_pair" }
%"struct.webrtc::rtcp::Nack::PackedNack" = type { i16, i16 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.webrtc::rtcp::Nack::PackedNack"* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { i16*, i16*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { i16* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.webrtc::rtcp::CommonHeader" = type { i8, i8, i8, i32, i8* }
%"class.rtc::DiagnosticLogMessage" = type { i8*, i32, i32, i32, i32, i8*, i8, %"class.std::__1::basic_ostringstream" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.webrtc::rtcp::RtcpPacket" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN6webrtc4rtcp10RtcpPacketD2Ev = comdat any

$_ZN6webrtc4rtcp5RtpfbD0Ev = comdat any

$_ZN6webrtc4rtcp10RtcpPacketD0Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16vectorIN6webrtc4rtcp4Nack10PackedNackENS_9allocatorIS4_EEE8__appendEm = comdat any

$_ZTVN6webrtc4rtcp5RtpfbE = comdat any

$_ZTVN6webrtc4rtcp10RtcpPacketE = comdat any

@_ZN6webrtc4rtcp4Nack20kFeedbackMessageTypeE = hidden local_unnamed_addr constant i8 1, align 1
@_ZN6webrtc4rtcp4Nack15kNackItemLengthE = hidden local_unnamed_addr constant i64 4, align 8
@_ZTVN6webrtc4rtcp4NackE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::rtcp::Nack"*)* @_ZN6webrtc4rtcp4NackD2Ev to i8*), i8* bitcast (void (%"class.webrtc::rtcp::Nack"*)* @_ZN6webrtc4rtcp4NackD0Ev to i8*), i8* bitcast (i64 (%"class.webrtc::rtcp::Nack"*)* @_ZNK6webrtc4rtcp4Nack11BlockLengthEv to i8*), i8* bitcast (i1 (%"class.webrtc::rtcp::Nack"*, i8*, i64*, i64, i8*, {}*)* @_ZNK6webrtc4rtcp4Nack6CreateEPhPmmN3rtc12FunctionViewIFvNS4_9ArrayViewIKhLln4711EEEEEE to i8*)] }, align 8
@.str = private unnamed_addr constant [69 x i8] c"../../third_party/webrtc/modules/rtp_rtcp/source/rtcp_packet/nack.cc\00", align 1
@.str.1 = private unnamed_addr constant [16 x i8] c"Payload length \00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c" is too small for a Nack.\00", align 1
@_ZTVN6webrtc4rtcp5RtpfbE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::rtcp::RtcpPacket"*)* @_ZN6webrtc4rtcp10RtcpPacketD2Ev to i8*), i8* bitcast (void (%"class.webrtc::rtcp::Rtpfb"*)* @_ZN6webrtc4rtcp5RtpfbD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN6webrtc4rtcp10RtcpPacketE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::rtcp::RtcpPacket"*)* @_ZN6webrtc4rtcp10RtcpPacketD2Ev to i8*), i8* bitcast (void (%"class.webrtc::rtcp::RtcpPacket"*)* @_ZN6webrtc4rtcp10RtcpPacketD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN6webrtc4rtcp4NackC1Ev = hidden unnamed_addr alias void (%"class.webrtc::rtcp::Nack"*), void (%"class.webrtc::rtcp::Nack"*)* @_ZN6webrtc4rtcp4NackC2Ev
@_ZN6webrtc4rtcp4NackC1ERKS1_ = hidden unnamed_addr alias void (%"class.webrtc::rtcp::Nack"*, %"class.webrtc::rtcp::Nack"*), void (%"class.webrtc::rtcp::Nack"*, %"class.webrtc::rtcp::Nack"*)* @_ZN6webrtc4rtcp4NackC2ERKS1_
@_ZN6webrtc4rtcp4NackD1Ev = hidden unnamed_addr alias void (%"class.webrtc::rtcp::Nack"*), void (%"class.webrtc::rtcp::Nack"*)* @_ZN6webrtc4rtcp4NackD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4rtcp4NackC2Ev(%"class.webrtc::rtcp::Nack"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 0, i32 1
  store i32 0, i32* %4, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc4rtcp4NackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %5 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4rtcp4NackC2ERKS1_(%"class.webrtc::rtcp::Nack"*, %"class.webrtc::rtcp::Nack"* nocapture readonly dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc4rtcp10RtcpPacketE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %1, i64 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %4, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc4rtcp5RtpfbE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %7 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %1, i64 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %7, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc4rtcp4NackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %10 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %1, i64 0, i32 1
  %12 = bitcast %"class.std::__1::vector"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #10
  %13 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %1, i64 0, i32 1, i32 0, i32 1
  %14 = bitcast %"struct.webrtc::rtcp::Nack::PackedNack"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector"* %11 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = ashr exact i64 %18, 2
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %48, label %21

21:                                               ; preds = %2
  %22 = icmp ugt i64 %19, 4611686018427387903
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::vector"* %10 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %24) #11
  unreachable

25:                                               ; preds = %21
  %26 = tail call i8* @_Znwm(i64 %18) #12
  %27 = bitcast i8* %26 to %"struct.webrtc::rtcp::Nack::PackedNack"*
  %28 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 1, i32 0, i32 1
  %29 = bitcast %"struct.webrtc::rtcp::Nack::PackedNack"** %28 to i8**
  store i8* %26, i8** %29, align 8
  %30 = bitcast %"class.std::__1::vector"* %10 to i8**
  store i8* %26, i8** %30, align 8
  %31 = getelementptr inbounds %"struct.webrtc::rtcp::Nack::PackedNack", %"struct.webrtc::rtcp::Nack::PackedNack"* %27, i64 %19
  %32 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store %"struct.webrtc::rtcp::Nack::PackedNack"* %31, %"struct.webrtc::rtcp::Nack::PackedNack"** %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %34 = load %"struct.webrtc::rtcp::Nack::PackedNack"*, %"struct.webrtc::rtcp::Nack::PackedNack"** %33, align 8
  %35 = load i64, i64* %14, align 8
  %36 = bitcast %"struct.webrtc::rtcp::Nack::PackedNack"** %28 to i64*
  %37 = ptrtoint i8* %26 to i64
  %38 = ptrtoint %"struct.webrtc::rtcp::Nack::PackedNack"* %34 to i64
  %39 = sub i64 %35, %38
  %40 = icmp sgt i64 %39, 0
  br i1 %40, label %41, label %46

41:                                               ; preds = %25
  %42 = lshr exact i64 %39, 2
  %43 = bitcast %"struct.webrtc::rtcp::Nack::PackedNack"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %26, i8* align 2 %43, i64 %39, i1 false) #10
  %44 = getelementptr inbounds %"struct.webrtc::rtcp::Nack::PackedNack", %"struct.webrtc::rtcp::Nack::PackedNack"* %27, i64 %42
  %45 = ptrtoint %"struct.webrtc::rtcp::Nack::PackedNack"* %44 to i64
  br label %46

46:                                               ; preds = %41, %25
  %47 = phi i64 [ %45, %41 ], [ %37, %25 ]
  store i64 %47, i64* %36, align 8
  br label %48

48:                                               ; preds = %2, %46
  %49 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 2
  %50 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %1, i64 0, i32 2
  %51 = bitcast %"class.std::__1::vector.1"* %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 24, i1 false) #10
  %52 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %1, i64 0, i32 2, i32 0, i32 1
  %53 = bitcast i16** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.std::__1::vector.1"* %50 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = sub i64 %54, %56
  %58 = ashr exact i64 %57, 1
  %59 = icmp eq i64 %57, 0
  br i1 %59, label %87, label %60

60:                                               ; preds = %48
  %61 = icmp slt i64 %57, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %60
  %63 = bitcast %"class.std::__1::vector.1"* %49 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %63) #11
  unreachable

64:                                               ; preds = %60
  %65 = tail call i8* @_Znwm(i64 %57) #12
  %66 = bitcast i8* %65 to i16*
  %67 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 2, i32 0, i32 1
  %68 = bitcast i16** %67 to i8**
  store i8* %65, i8** %68, align 8
  %69 = bitcast %"class.std::__1::vector.1"* %49 to i8**
  store i8* %65, i8** %69, align 8
  %70 = getelementptr inbounds i16, i16* %66, i64 %58
  %71 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store i16* %70, i16** %71, align 8
  %72 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %50, i64 0, i32 0, i32 0
  %73 = load i16*, i16** %72, align 8
  %74 = load i64, i64* %53, align 8
  %75 = bitcast i16** %67 to i64*
  %76 = ptrtoint i8* %65 to i64
  %77 = ptrtoint i16* %73 to i64
  %78 = sub i64 %74, %77
  %79 = icmp sgt i64 %78, 0
  br i1 %79, label %80, label %85

80:                                               ; preds = %64
  %81 = lshr exact i64 %78, 1
  %82 = bitcast i16* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %65, i8* align 2 %82, i64 %78, i1 false) #10
  %83 = getelementptr inbounds i16, i16* %66, i64 %81
  %84 = ptrtoint i16* %83 to i64
  br label %85

85:                                               ; preds = %80, %64
  %86 = phi i64 [ %84, %80 ], [ %76, %64 ]
  store i64 %86, i64* %75, align 8
  br label %87

87:                                               ; preds = %48, %85
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4rtcp4NackD2Ev(%"class.webrtc::rtcp::Nack"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc4rtcp4NackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load i16*, i16** %3, align 8
  %5 = icmp eq i16* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i16* %4 to i64
  %8 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast i16** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i16* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"struct.webrtc::rtcp::Nack::PackedNack"*, %"struct.webrtc::rtcp::Nack::PackedNack"** %12, align 8
  %14 = icmp eq %"struct.webrtc::rtcp::Nack::PackedNack"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %"struct.webrtc::rtcp::Nack::PackedNack"* %13 to i64
  %17 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 1, i32 0, i32 1
  %18 = bitcast %"struct.webrtc::rtcp::Nack::PackedNack"** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"struct.webrtc::rtcp::Nack::PackedNack"* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4rtcp4NackD0Ev(%"class.webrtc::rtcp::Nack"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc4rtcp4NackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load i16*, i16** %3, align 8
  %5 = icmp eq i16* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i16* %4 to i64
  %8 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast i16** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i16* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"struct.webrtc::rtcp::Nack::PackedNack"*, %"struct.webrtc::rtcp::Nack::PackedNack"** %12, align 8
  %14 = icmp eq %"struct.webrtc::rtcp::Nack::PackedNack"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %"struct.webrtc::rtcp::Nack::PackedNack"* %13 to i64
  %17 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 1, i32 0, i32 1
  %18 = bitcast %"struct.webrtc::rtcp::Nack::PackedNack"** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"struct.webrtc::rtcp::Nack::PackedNack"* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %11, %15
  %21 = bitcast %"class.webrtc::rtcp::Nack"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6webrtc4rtcp4Nack5ParseERKNS0_12CommonHeaderE(%"class.webrtc::rtcp::Nack"*, %"class.webrtc::rtcp::CommonHeader"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %4 = getelementptr inbounds %"class.webrtc::rtcp::CommonHeader", %"class.webrtc::rtcp::CommonHeader"* %1, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = icmp ult i32 %5, 12
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = bitcast %"class.rtc::DiagnosticLogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %8) #10
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %3, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str, i64 0, i64 0), i32 59, i32 2, i32 0, i32 0) #10
  %9 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %3, i64 0, i32 7
  %10 = bitcast %"class.std::__1::basic_ostringstream"* %9 to %"class.std::__1::basic_ostream"*
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0), i64 15) #10
  %12 = load i32, i32* %4, align 4
  %13 = zext i32 %12 to i64
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %11, i64 %13) #10
  %15 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %14, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0), i64 25) #10
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %8) #10
  br label %74

16:                                               ; preds = %2
  %17 = zext i32 %5 to i64
  %18 = add nsw i64 %17, -8
  %19 = lshr i64 %18, 2
  %20 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 0
  %21 = getelementptr inbounds %"class.webrtc::rtcp::CommonHeader", %"class.webrtc::rtcp::CommonHeader"* %1, i64 0, i32 4
  %22 = load i8*, i8** %21, align 8
  tail call void @_ZN6webrtc4rtcp5Rtpfb19ParseCommonFeedbackEPKh(%"class.webrtc::rtcp::Rtpfb"* %20, i8* %22) #10
  %23 = load i8*, i8** %21, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 8
  %25 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 2
  %26 = bitcast %"class.std::__1::vector.1"* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 2, i32 0, i32 1
  %29 = bitcast i16** %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 1
  %31 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 1, i32 0, i32 1
  %32 = bitcast %"struct.webrtc::rtcp::Nack::PackedNack"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.std::__1::vector"* %30 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %33, %35
  %37 = ashr exact i64 %36, 2
  %38 = icmp ugt i64 %19, %37
  %39 = inttoptr i64 %35 to %"struct.webrtc::rtcp::Nack::PackedNack"*
  br i1 %38, label %40, label %42

40:                                               ; preds = %16
  %41 = sub nsw i64 %19, %37
  tail call void @_ZNSt3__16vectorIN6webrtc4rtcp4Nack10PackedNackENS_9allocatorIS4_EEE8__appendEm(%"class.std::__1::vector"* %30, i64 %41) #10
  br label %46

42:                                               ; preds = %16
  %43 = icmp ult i64 %19, %37
  br i1 %43, label %44, label %46

44:                                               ; preds = %42
  %45 = getelementptr inbounds %"struct.webrtc::rtcp::Nack::PackedNack", %"struct.webrtc::rtcp::Nack::PackedNack"* %39, i64 %19
  store %"struct.webrtc::rtcp::Nack::PackedNack"* %45, %"struct.webrtc::rtcp::Nack::PackedNack"** %31, align 8
  br label %46

46:                                               ; preds = %44, %42, %40
  %47 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %30, i64 0, i32 0, i32 0
  br label %49

48:                                               ; preds = %49
  tail call void @_ZN6webrtc4rtcp4Nack6UnpackEv(%"class.webrtc::rtcp::Nack"* %0)
  br label %74

49:                                               ; preds = %49, %46
  %50 = phi i64 [ 0, %46 ], [ %72, %49 ]
  %51 = phi i8* [ %24, %46 ], [ %71, %49 ]
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i16
  %54 = shl nuw i16 %53, 8
  %55 = getelementptr inbounds i8, i8* %51, i64 1
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i16
  %58 = or i16 %54, %57
  %59 = load %"struct.webrtc::rtcp::Nack::PackedNack"*, %"struct.webrtc::rtcp::Nack::PackedNack"** %47, align 8
  %60 = getelementptr inbounds %"struct.webrtc::rtcp::Nack::PackedNack", %"struct.webrtc::rtcp::Nack::PackedNack"* %59, i64 %50, i32 0
  store i16 %58, i16* %60, align 2
  %61 = getelementptr inbounds i8, i8* %51, i64 2
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i16
  %64 = shl nuw i16 %63, 8
  %65 = getelementptr inbounds i8, i8* %51, i64 3
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i16
  %68 = or i16 %64, %67
  %69 = load %"struct.webrtc::rtcp::Nack::PackedNack"*, %"struct.webrtc::rtcp::Nack::PackedNack"** %47, align 8
  %70 = getelementptr inbounds %"struct.webrtc::rtcp::Nack::PackedNack", %"struct.webrtc::rtcp::Nack::PackedNack"* %69, i64 %50, i32 1
  store i16 %68, i16* %70, align 2
  %71 = getelementptr inbounds i8, i8* %51, i64 4
  %72 = add nuw nsw i64 %50, 1
  %73 = icmp eq i64 %72, %19
  br i1 %73, label %48, label %49

74:                                               ; preds = %48, %7
  %75 = phi i1 [ false, %7 ], [ true, %48 ]
  ret i1 %75
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"*, i8*, i32, i32, i32, i32) unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN6webrtc4rtcp5Rtpfb19ParseCommonFeedbackEPKh(%"class.webrtc::rtcp::Rtpfb"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4rtcp4Nack6UnpackEv(%"class.webrtc::rtcp::Nack"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"struct.webrtc::rtcp::Nack::PackedNack"*, %"struct.webrtc::rtcp::Nack::PackedNack"** %2, align 8
  %4 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load %"struct.webrtc::rtcp::Nack::PackedNack"*, %"struct.webrtc::rtcp::Nack::PackedNack"** %4, align 8
  %6 = icmp eq %"struct.webrtc::rtcp::Nack::PackedNack"* %3, %5
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 2, i32 0, i32 1
  %10 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %11 = bitcast i16** %9 to i64*
  %12 = bitcast %"class.std::__1::vector.1"* %8 to i64*
  %13 = bitcast i16** %10 to i64*
  %14 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %8, i64 0, i32 0, i32 0
  br label %16

15:                                               ; preds = %83, %1
  ret void

16:                                               ; preds = %7, %83
  %17 = phi %"struct.webrtc::rtcp::Nack::PackedNack"* [ %3, %7 ], [ %84, %83 ]
  %18 = getelementptr inbounds %"struct.webrtc::rtcp::Nack::PackedNack", %"struct.webrtc::rtcp::Nack::PackedNack"* %17, i64 0, i32 0
  %19 = load i16*, i16** %9, align 8
  %20 = load i16*, i16** %10, align 8
  %21 = icmp eq i16* %19, %20
  %22 = ptrtoint i16* %20 to i64
  br i1 %21, label %27, label %23

23:                                               ; preds = %16
  %24 = load i16, i16* %18, align 2
  store i16 %24, i16* %19, align 2
  %25 = getelementptr inbounds i16, i16* %19, i64 1
  %26 = ptrtoint i16* %25 to i64
  store i64 %26, i64* %11, align 8
  br label %77

27:                                               ; preds = %16
  %28 = ptrtoint i16* %19 to i64
  %29 = load i64, i64* %12, align 8
  %30 = sub i64 %28, %29
  %31 = ashr exact i64 %30, 1
  %32 = add nsw i64 %31, 1
  %33 = icmp slt i64 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %27
  %35 = bitcast %"class.std::__1::vector.1"* %8 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %35) #11
  unreachable

36:                                               ; preds = %27
  %37 = sub i64 %22, %29
  %38 = ashr exact i64 %37, 1
  %39 = icmp ult i64 %38, 4611686018427387903
  %40 = icmp ult i64 %37, %32
  %41 = select i1 %40, i64 %32, i64 %37
  %42 = select i1 %39, i64 %41, i64 9223372036854775807
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %51, label %44

44:                                               ; preds = %36
  %45 = icmp slt i64 %42, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %44
  tail call void @abort() #11
  unreachable

47:                                               ; preds = %44
  %48 = shl i64 %42, 1
  %49 = tail call i8* @_Znwm(i64 %48) #12
  %50 = bitcast i8* %49 to i16*
  br label %51

51:                                               ; preds = %47, %36
  %52 = phi i16* [ %50, %47 ], [ null, %36 ]
  %53 = getelementptr inbounds i16, i16* %52, i64 %31
  %54 = getelementptr inbounds i16, i16* %52, i64 %42
  %55 = ptrtoint i16* %54 to i64
  %56 = load i16, i16* %18, align 2
  store i16 %56, i16* %53, align 2
  %57 = getelementptr inbounds i16, i16* %53, i64 1
  %58 = ptrtoint i16* %57 to i64
  %59 = load i16*, i16** %14, align 8
  %60 = load i64, i64* %11, align 8
  %61 = ptrtoint i16* %59 to i64
  %62 = sub i64 %60, %61
  %63 = ashr exact i64 %62, 1
  %64 = sub nsw i64 0, %63
  %65 = getelementptr inbounds i16, i16* %53, i64 %64
  %66 = ptrtoint i16* %65 to i64
  %67 = icmp sgt i64 %62, 0
  br i1 %67, label %68, label %72

68:                                               ; preds = %51
  %69 = bitcast i16* %65 to i8*
  %70 = bitcast i16* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %69, i8* align 2 %70, i64 %62, i1 false) #10
  %71 = load i16*, i16** %14, align 8
  br label %72

72:                                               ; preds = %68, %51
  %73 = phi i16* [ %59, %51 ], [ %71, %68 ]
  store i64 %66, i64* %12, align 8
  store i64 %58, i64* %11, align 8
  store i64 %55, i64* %13, align 8
  %74 = icmp eq i16* %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %72
  %76 = bitcast i16* %73 to i8*
  tail call void @_ZdlPv(i8* %76) #12
  br label %77

77:                                               ; preds = %23, %72, %75
  %78 = getelementptr inbounds %"struct.webrtc::rtcp::Nack::PackedNack", %"struct.webrtc::rtcp::Nack::PackedNack"* %17, i64 0, i32 1
  %79 = load i16, i16* %78, align 2
  %80 = icmp eq i16 %79, 0
  br i1 %80, label %83, label %81

81:                                               ; preds = %77
  %82 = load i16, i16* %18, align 2
  br label %86

83:                                               ; preds = %149, %77
  %84 = getelementptr inbounds %"struct.webrtc::rtcp::Nack::PackedNack", %"struct.webrtc::rtcp::Nack::PackedNack"* %17, i64 1
  %85 = icmp eq %"struct.webrtc::rtcp::Nack::PackedNack"* %84, %5
  br i1 %85, label %15, label %16

86:                                               ; preds = %81, %149
  %87 = phi i16 [ %89, %149 ], [ %82, %81 ]
  %88 = phi i16 [ %150, %149 ], [ %79, %81 ]
  %89 = add i16 %87, 1
  %90 = and i16 %88, 1
  %91 = icmp eq i16 %90, 0
  br i1 %91, label %149, label %92

92:                                               ; preds = %86
  %93 = load i16*, i16** %9, align 8
  %94 = load i16*, i16** %10, align 8
  %95 = icmp eq i16* %93, %94
  %96 = ptrtoint i16* %94 to i64
  br i1 %95, label %100, label %97

97:                                               ; preds = %92
  store i16 %89, i16* %93, align 2
  %98 = getelementptr inbounds i16, i16* %93, i64 1
  %99 = ptrtoint i16* %98 to i64
  store i64 %99, i64* %11, align 8
  br label %149

100:                                              ; preds = %92
  %101 = ptrtoint i16* %93 to i64
  %102 = load i64, i64* %12, align 8
  %103 = sub i64 %101, %102
  %104 = ashr exact i64 %103, 1
  %105 = add nsw i64 %104, 1
  %106 = icmp slt i64 %105, 0
  br i1 %106, label %107, label %109

107:                                              ; preds = %100
  %108 = bitcast %"class.std::__1::vector.1"* %8 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %108) #11
  unreachable

109:                                              ; preds = %100
  %110 = sub i64 %96, %102
  %111 = ashr exact i64 %110, 1
  %112 = icmp ult i64 %111, 4611686018427387903
  %113 = icmp ult i64 %110, %105
  %114 = select i1 %113, i64 %105, i64 %110
  %115 = select i1 %112, i64 %114, i64 9223372036854775807
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %124, label %117

117:                                              ; preds = %109
  %118 = icmp slt i64 %115, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %117
  tail call void @abort() #11
  unreachable

120:                                              ; preds = %117
  %121 = shl i64 %115, 1
  %122 = tail call i8* @_Znwm(i64 %121) #12
  %123 = bitcast i8* %122 to i16*
  br label %124

124:                                              ; preds = %120, %109
  %125 = phi i16* [ %123, %120 ], [ null, %109 ]
  %126 = getelementptr inbounds i16, i16* %125, i64 %104
  %127 = getelementptr inbounds i16, i16* %125, i64 %115
  %128 = ptrtoint i16* %127 to i64
  store i16 %89, i16* %126, align 2
  %129 = getelementptr inbounds i16, i16* %126, i64 1
  %130 = ptrtoint i16* %129 to i64
  %131 = load i16*, i16** %14, align 8
  %132 = load i64, i64* %11, align 8
  %133 = ptrtoint i16* %131 to i64
  %134 = sub i64 %132, %133
  %135 = ashr exact i64 %134, 1
  %136 = sub nsw i64 0, %135
  %137 = getelementptr inbounds i16, i16* %126, i64 %136
  %138 = ptrtoint i16* %137 to i64
  %139 = icmp sgt i64 %134, 0
  br i1 %139, label %140, label %144

140:                                              ; preds = %124
  %141 = bitcast i16* %137 to i8*
  %142 = bitcast i16* %131 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %141, i8* align 2 %142, i64 %134, i1 false) #10
  %143 = load i16*, i16** %14, align 8
  br label %144

144:                                              ; preds = %140, %124
  %145 = phi i16* [ %131, %124 ], [ %143, %140 ]
  store i64 %138, i64* %12, align 8
  store i64 %130, i64* %11, align 8
  store i64 %128, i64* %13, align 8
  %146 = icmp eq i16* %145, null
  br i1 %146, label %149, label %147

147:                                              ; preds = %144
  %148 = bitcast i16* %145 to i8*
  tail call void @_ZdlPv(i8* %148) #12
  br label %149

149:                                              ; preds = %147, %144, %97, %86
  %150 = lshr i16 %88, 1
  %151 = icmp eq i16 %150, 0
  br i1 %151, label %83, label %86
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK6webrtc4rtcp4Nack11BlockLengthEv(%"class.webrtc::rtcp::Nack"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = bitcast %"struct.webrtc::rtcp::Nack::PackedNack"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %5, 12
  %9 = sub i64 %8, %7
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6webrtc4rtcp4Nack6CreateEPhPmmN3rtc12FunctionViewIFvNS4_9ArrayViewIKhLln4711EEEEEE(%"class.webrtc::rtcp::Nack"*, i8*, i64*, i64, i8*, {}*) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"struct.webrtc::rtcp::Nack::PackedNack"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %74, label %15

15:                                               ; preds = %6
  %16 = ashr exact i64 %13, 2
  %17 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds i8, i8* %1, i64 2
  %20 = bitcast %"class.webrtc::rtcp::Nack"* %0 to %"class.webrtc::rtcp::RtcpPacket"*
  br label %21

21:                                               ; preds = %15, %67
  %22 = phi i64 [ %16, %15 ], [ %72, %67 ]
  %23 = phi i64 [ 0, %15 ], [ %68, %67 ]
  %24 = load i64, i64* %2, align 8
  %25 = sub i64 %3, %24
  %26 = icmp ult i64 %25, 16
  br i1 %26, label %27, label %29

27:                                               ; preds = %21
  %28 = tail call zeroext i1 @_ZNK6webrtc4rtcp10RtcpPacket12OnBufferFullEPhPmN3rtc12FunctionViewIFvNS4_9ArrayViewIKhLln4711EEEEEE(%"class.webrtc::rtcp::RtcpPacket"* %20, i8* %1, i64* %2, i8* %4, {}* %5) #10
  br i1 %28, label %67, label %74

29:                                               ; preds = %21
  %30 = add i64 %25, -12
  %31 = lshr i64 %30, 2
  %32 = sub i64 %22, %23
  %33 = icmp ult i64 %32, %31
  %34 = select i1 %33, i64 %32, i64 %31
  %35 = shl nuw i64 %34, 2
  %36 = add nuw i64 %35, 8
  %37 = lshr exact i64 %36, 2
  tail call void @_ZN6webrtc4rtcp10RtcpPacket12CreateHeaderEmhmPhPm(i64 1, i8 zeroext -51, i64 %37, i8* %1, i64* %2) #10
  %38 = load i64, i64* %2, align 8
  %39 = getelementptr inbounds i8, i8* %1, i64 %38
  tail call void @_ZNK6webrtc4rtcp5Rtpfb20CreateCommonFeedbackEPh(%"class.webrtc::rtcp::Rtpfb"* %17, i8* %39) #10
  %40 = load i64, i64* %2, align 8
  %41 = add i64 %40, 8
  store i64 %41, i64* %2, align 8
  %42 = add i64 %34, %23
  %43 = icmp ult i64 %23, %42
  br i1 %43, label %44, label %67

44:                                               ; preds = %29, %44
  %45 = phi i64 [ %64, %44 ], [ %41, %29 ]
  %46 = phi i64 [ %65, %44 ], [ %23, %29 ]
  %47 = load %"struct.webrtc::rtcp::Nack::PackedNack"*, %"struct.webrtc::rtcp::Nack::PackedNack"** %18, align 8
  %48 = getelementptr inbounds i8, i8* %1, i64 %45
  %49 = getelementptr inbounds %"struct.webrtc::rtcp::Nack::PackedNack", %"struct.webrtc::rtcp::Nack::PackedNack"* %47, i64 %46, i32 0
  %50 = load i16, i16* %49, align 2
  %51 = lshr i16 %50, 8
  %52 = trunc i16 %51 to i8
  store i8 %52, i8* %48, align 1
  %53 = trunc i16 %50 to i8
  %54 = getelementptr inbounds i8, i8* %48, i64 1
  store i8 %53, i8* %54, align 1
  %55 = load i64, i64* %2, align 8
  %56 = getelementptr inbounds i8, i8* %19, i64 %55
  %57 = getelementptr inbounds %"struct.webrtc::rtcp::Nack::PackedNack", %"struct.webrtc::rtcp::Nack::PackedNack"* %47, i64 %46, i32 1
  %58 = load i16, i16* %57, align 2
  %59 = lshr i16 %58, 8
  %60 = trunc i16 %59 to i8
  store i8 %60, i8* %56, align 1
  %61 = trunc i16 %58 to i8
  %62 = getelementptr inbounds i8, i8* %56, i64 1
  store i8 %61, i8* %62, align 1
  %63 = load i64, i64* %2, align 8
  %64 = add i64 %63, 4
  store i64 %64, i64* %2, align 8
  %65 = add nuw i64 %46, 1
  %66 = icmp ult i64 %65, %42
  br i1 %66, label %44, label %67

67:                                               ; preds = %44, %29, %27
  %68 = phi i64 [ %23, %27 ], [ %23, %29 ], [ %65, %44 ]
  %69 = load i64, i64* %9, align 8
  %70 = load i64, i64* %11, align 8
  %71 = sub i64 %69, %70
  %72 = ashr exact i64 %71, 2
  %73 = icmp ugt i64 %72, %68
  br i1 %73, label %21, label %74

74:                                               ; preds = %27, %67, %6
  %75 = phi i1 [ true, %6 ], [ true, %67 ], [ false, %27 ]
  ret i1 %75
}

declare zeroext i1 @_ZNK6webrtc4rtcp10RtcpPacket12OnBufferFullEPhPmN3rtc12FunctionViewIFvNS4_9ArrayViewIKhLln4711EEEEEE(%"class.webrtc::rtcp::RtcpPacket"*, i8*, i64*, i8*, {}*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN6webrtc4rtcp10RtcpPacket12CreateHeaderEmhmPhPm(i64, i8 zeroext, i64, i8*, i64*) local_unnamed_addr #3

declare void @_ZNK6webrtc4rtcp5Rtpfb20CreateCommonFeedbackEPh(%"class.webrtc::rtcp::Rtpfb"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4rtcp4Nack12SetPacketIdsEPKtm(%"class.webrtc::rtcp::Nack"*, i16*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.1", align 8
  %5 = bitcast %"class.std::__1::vector.1"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #10
  %6 = shl nuw i64 %2, 1
  %7 = ashr exact i64 %6, 1
  %8 = icmp eq i64 %2, 0
  br i1 %8, label %26, label %9

9:                                                ; preds = %3
  %10 = icmp slt i64 %6, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %9
  %12 = bitcast %"class.std::__1::vector.1"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %12) #11
  unreachable

13:                                               ; preds = %9
  %14 = tail call i8* @_Znwm(i64 %6) #12
  %15 = bitcast i8* %14 to i16*
  %16 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %4, i64 0, i32 0, i32 1
  %17 = bitcast %"class.std::__1::vector.1"* %4 to i8**
  store i8* %14, i8** %17, align 8
  %18 = getelementptr inbounds i16, i16* %15, i64 %7
  %19 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  store i16* %18, i16** %19, align 8
  %20 = bitcast i16** %16 to i64*
  %21 = bitcast i16* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %14, i8* align 2 %21, i64 %6, i1 false) #10
  %22 = getelementptr inbounds i16, i16* %15, i64 %2
  %23 = ptrtoint i16* %22 to i64
  store i64 %23, i64* %20, align 8
  %24 = ptrtoint i8* %14 to i64
  %25 = ptrtoint i16* %18 to i64
  br label %26

26:                                               ; preds = %3, %13
  %27 = phi i64 [ 0, %3 ], [ %25, %13 ]
  %28 = phi i64 [ 0, %3 ], [ %23, %13 ]
  %29 = phi i64 [ 0, %3 ], [ %24, %13 ]
  %30 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 2
  %31 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %30, i64 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %40, label %34

34:                                               ; preds = %26
  %35 = ptrtoint i16* %32 to i64
  %36 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 2, i32 0, i32 1
  %37 = bitcast i16** %36 to i64*
  store i64 %35, i64* %37, align 8
  %38 = bitcast i16* %32 to i8*
  tail call void @_ZdlPv(i8* %38) #12
  %39 = bitcast %"class.std::__1::vector.1"* %30 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 24, i1 false) #10
  br label %40

40:                                               ; preds = %34, %26
  %41 = bitcast %"class.std::__1::vector.1"* %30 to i64*
  store i64 %29, i64* %41, align 8
  %42 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 2, i32 0, i32 1
  %43 = bitcast i16** %42 to i64*
  store i64 %28, i64* %43, align 8
  %44 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %45 = bitcast i16** %44 to i64*
  store i64 %27, i64* %45, align 8
  tail call void @_ZN6webrtc4rtcp4Nack4PackEv(%"class.webrtc::rtcp::Nack"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4rtcp4Nack12SetPacketIdsENSt3__16vectorItNS2_9allocatorItEEEE(%"class.webrtc::rtcp::Nack"*, %"class.std::__1::vector.1"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %3, i64 0, i32 0, i32 0
  %5 = load i16*, i16** %4, align 8
  %6 = icmp eq i16* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = ptrtoint i16* %5 to i64
  %9 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 2, i32 0, i32 1
  %10 = bitcast i16** %9 to i64*
  store i64 %8, i64* %10, align 8
  %11 = bitcast i16* %5 to i8*
  tail call void @_ZdlPv(i8* %11) #12
  %12 = bitcast %"class.std::__1::vector.1"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #10
  br label %13

13:                                               ; preds = %2, %7
  %14 = bitcast %"class.std::__1::vector.1"* %1 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector.1"* %3 to i64*
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %1, i64 0, i32 0, i32 1
  %18 = bitcast i16** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 2, i32 0, i32 1
  %21 = bitcast i16** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %23 = bitcast i16** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %26 = bitcast i16** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = bitcast %"class.std::__1::vector.1"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #10
  tail call void @_ZN6webrtc4rtcp4Nack4PackEv(%"class.webrtc::rtcp::Nack"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4rtcp4Nack4PackEv(%"class.webrtc::rtcp::Nack"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load i16*, i16** %2, align 8
  %4 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load i16*, i16** %4, align 8
  %6 = icmp eq i16* %3, %5
  br i1 %6, label %109, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = getelementptr inbounds %"class.webrtc::rtcp::Nack", %"class.webrtc::rtcp::Nack"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %11 = bitcast %"struct.webrtc::rtcp::Nack::PackedNack"** %9 to i64*
  %12 = bitcast %"class.std::__1::vector"* %8 to i64*
  %13 = bitcast %"struct.webrtc::rtcp::Nack::PackedNack"** %10 to i64*
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  br label %15

15:                                               ; preds = %7, %107
  %16 = phi i16* [ %3, %7 ], [ %37, %107 ]
  %17 = load i16, i16* %16, align 2
  %18 = getelementptr inbounds i16, i16* %16, i64 1
  %19 = icmp eq i16* %18, %5
  br i1 %19, label %35, label %20

20:                                               ; preds = %15
  %21 = xor i16 %17, -1
  br label %22

22:                                               ; preds = %20, %28
  %23 = phi i16* [ %18, %20 ], [ %33, %28 ]
  %24 = phi i16 [ 0, %20 ], [ %32, %28 ]
  %25 = load i16, i16* %23, align 2
  %26 = add i16 %25, %21
  %27 = icmp ult i16 %26, 16
  br i1 %27, label %28, label %35

28:                                               ; preds = %22
  %29 = zext i16 %26 to i32
  %30 = shl i32 1, %29
  %31 = trunc i32 %30 to i16
  %32 = or i16 %24, %31
  %33 = getelementptr inbounds i16, i16* %23, i64 1
  %34 = icmp eq i16* %33, %5
  br i1 %34, label %35, label %22

35:                                               ; preds = %22, %28, %15
  %36 = phi i16 [ 0, %15 ], [ %32, %28 ], [ %24, %22 ]
  %37 = phi i16* [ %5, %15 ], [ %5, %28 ], [ %23, %22 ]
  %38 = load %"struct.webrtc::rtcp::Nack::PackedNack"*, %"struct.webrtc::rtcp::Nack::PackedNack"** %9, align 8
  %39 = load %"struct.webrtc::rtcp::Nack::PackedNack"*, %"struct.webrtc::rtcp::Nack::PackedNack"** %10, align 8
  %40 = icmp eq %"struct.webrtc::rtcp::Nack::PackedNack"* %38, %39
  %41 = ptrtoint %"struct.webrtc::rtcp::Nack::PackedNack"* %39 to i64
  br i1 %40, label %50, label %42

42:                                               ; preds = %35
  %43 = bitcast %"struct.webrtc::rtcp::Nack::PackedNack"* %38 to i32*
  %44 = zext i16 %36 to i32
  %45 = shl nuw i32 %44, 16
  %46 = zext i16 %17 to i32
  %47 = or i32 %45, %46
  store i32 %47, i32* %43, align 2
  %48 = getelementptr inbounds %"struct.webrtc::rtcp::Nack::PackedNack", %"struct.webrtc::rtcp::Nack::PackedNack"* %38, i64 1
  %49 = ptrtoint %"struct.webrtc::rtcp::Nack::PackedNack"* %48 to i64
  store i64 %49, i64* %11, align 8
  br label %107

50:                                               ; preds = %35
  %51 = ptrtoint %"struct.webrtc::rtcp::Nack::PackedNack"* %38 to i64
  %52 = load i64, i64* %12, align 8
  %53 = sub i64 %51, %52
  %54 = ashr exact i64 %53, 2
  %55 = add nsw i64 %54, 1
  %56 = icmp ugt i64 %55, 4611686018427387903
  br i1 %56, label %57, label %59

57:                                               ; preds = %50
  %58 = bitcast %"class.std::__1::vector"* %8 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %58) #11
  unreachable

59:                                               ; preds = %50
  %60 = sub i64 %41, %52
  %61 = ashr exact i64 %60, 2
  %62 = icmp ult i64 %61, 2305843009213693951
  br i1 %62, label %63, label %71

63:                                               ; preds = %59
  %64 = ashr exact i64 %60, 1
  %65 = icmp ult i64 %64, %55
  %66 = select i1 %65, i64 %55, i64 %64
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %76, label %68

68:                                               ; preds = %63
  %69 = icmp ugt i64 %66, 4611686018427387903
  br i1 %69, label %70, label %71

70:                                               ; preds = %68
  tail call void @abort() #11
  unreachable

71:                                               ; preds = %68, %59
  %72 = phi i64 [ %66, %68 ], [ 4611686018427387903, %59 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #12
  %75 = bitcast i8* %74 to %"struct.webrtc::rtcp::Nack::PackedNack"*
  br label %76

76:                                               ; preds = %71, %63
  %77 = phi i64 [ %72, %71 ], [ 0, %63 ]
  %78 = phi %"struct.webrtc::rtcp::Nack::PackedNack"* [ %75, %71 ], [ null, %63 ]
  %79 = getelementptr inbounds %"struct.webrtc::rtcp::Nack::PackedNack", %"struct.webrtc::rtcp::Nack::PackedNack"* %78, i64 %54
  %80 = getelementptr inbounds %"struct.webrtc::rtcp::Nack::PackedNack", %"struct.webrtc::rtcp::Nack::PackedNack"* %78, i64 %77
  %81 = ptrtoint %"struct.webrtc::rtcp::Nack::PackedNack"* %80 to i64
  %82 = bitcast %"struct.webrtc::rtcp::Nack::PackedNack"* %79 to i32*
  %83 = zext i16 %36 to i32
  %84 = shl nuw i32 %83, 16
  %85 = zext i16 %17 to i32
  %86 = or i32 %84, %85
  store i32 %86, i32* %82, align 2
  %87 = getelementptr inbounds %"struct.webrtc::rtcp::Nack::PackedNack", %"struct.webrtc::rtcp::Nack::PackedNack"* %79, i64 1
  %88 = ptrtoint %"struct.webrtc::rtcp::Nack::PackedNack"* %87 to i64
  %89 = load %"struct.webrtc::rtcp::Nack::PackedNack"*, %"struct.webrtc::rtcp::Nack::PackedNack"** %14, align 8
  %90 = load i64, i64* %11, align 8
  %91 = ptrtoint %"struct.webrtc::rtcp::Nack::PackedNack"* %89 to i64
  %92 = sub i64 %90, %91
  %93 = ashr exact i64 %92, 2
  %94 = sub nsw i64 0, %93
  %95 = getelementptr inbounds %"struct.webrtc::rtcp::Nack::PackedNack", %"struct.webrtc::rtcp::Nack::PackedNack"* %79, i64 %94
  %96 = ptrtoint %"struct.webrtc::rtcp::Nack::PackedNack"* %95 to i64
  %97 = icmp sgt i64 %92, 0
  br i1 %97, label %98, label %102

98:                                               ; preds = %76
  %99 = bitcast %"struct.webrtc::rtcp::Nack::PackedNack"* %95 to i8*
  %100 = bitcast %"struct.webrtc::rtcp::Nack::PackedNack"* %89 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %99, i8* align 2 %100, i64 %92, i1 false) #10
  %101 = load %"struct.webrtc::rtcp::Nack::PackedNack"*, %"struct.webrtc::rtcp::Nack::PackedNack"** %14, align 8
  br label %102

102:                                              ; preds = %98, %76
  %103 = phi %"struct.webrtc::rtcp::Nack::PackedNack"* [ %89, %76 ], [ %101, %98 ]
  store i64 %96, i64* %12, align 8
  store i64 %88, i64* %11, align 8
  store i64 %81, i64* %13, align 8
  %104 = icmp eq %"struct.webrtc::rtcp::Nack::PackedNack"* %103, null
  br i1 %104, label %107, label %105

105:                                              ; preds = %102
  %106 = bitcast %"struct.webrtc::rtcp::Nack::PackedNack"* %103 to i8*
  tail call void @_ZdlPv(i8* %106) #12
  br label %107

107:                                              ; preds = %42, %102, %105
  %108 = icmp eq i16* %37, %5
  br i1 %108, label %109, label %15

109:                                              ; preds = %107, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc4rtcp10RtcpPacketD2Ev(%"class.webrtc::rtcp::RtcpPacket"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc4rtcp5RtpfbD0Ev(%"class.webrtc::rtcp::Rtpfb"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc4rtcp10RtcpPacketD0Ev(%"class.webrtc::rtcp::RtcpPacket"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #12
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #10
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN6webrtc4rtcp4Nack10PackedNackENS_9allocatorIS4_EEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.webrtc::rtcp::Nack::PackedNack"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.webrtc::rtcp::Nack::PackedNack"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.webrtc::rtcp::Nack::PackedNack"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.webrtc::rtcp::Nack::PackedNack", %"struct.webrtc::rtcp::Nack::PackedNack"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"struct.webrtc::rtcp::Nack::PackedNack", %"struct.webrtc::rtcp::Nack::PackedNack"* %13, i64 %18, i32 0
  %20 = bitcast i16* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %17, i8 0, i64 %25, i1 false) #10
  %26 = ptrtoint %"struct.webrtc::rtcp::Nack::PackedNack"* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #11
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #11
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #12
  %54 = bitcast i8* %53 to %"struct.webrtc::rtcp::Nack::PackedNack"*
  br label %55

55:                                               ; preds = %42, %50
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"struct.webrtc::rtcp::Nack::PackedNack"* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"struct.webrtc::rtcp::Nack::PackedNack", %"struct.webrtc::rtcp::Nack::PackedNack"* %57, i64 %33
  %59 = bitcast %"struct.webrtc::rtcp::Nack::PackedNack"* %58 to i8*
  %60 = getelementptr inbounds %"struct.webrtc::rtcp::Nack::PackedNack", %"struct.webrtc::rtcp::Nack::PackedNack"* %57, i64 %56
  %61 = getelementptr inbounds %"struct.webrtc::rtcp::Nack::PackedNack", %"struct.webrtc::rtcp::Nack::PackedNack"* %58, i64 %1
  %62 = shl nsw i64 %1, 2
  call void @llvm.memset.p0i8.i64(i8* align 2 %59, i8 0, i64 %62, i1 false)
  %63 = ptrtoint %"struct.webrtc::rtcp::Nack::PackedNack"* %60 to i64
  %64 = ptrtoint %"struct.webrtc::rtcp::Nack::PackedNack"* %61 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %66 = load %"struct.webrtc::rtcp::Nack::PackedNack"*, %"struct.webrtc::rtcp::Nack::PackedNack"** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint %"struct.webrtc::rtcp::Nack::PackedNack"* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds %"struct.webrtc::rtcp::Nack::PackedNack", %"struct.webrtc::rtcp::Nack::PackedNack"* %58, i64 %71
  %73 = ptrtoint %"struct.webrtc::rtcp::Nack::PackedNack"* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast %"struct.webrtc::rtcp::Nack::PackedNack"* %72 to i8*
  %77 = bitcast %"struct.webrtc::rtcp::Nack::PackedNack"* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %76, i8* align 2 %77, i64 %69, i1 false) #10
  %78 = load %"struct.webrtc::rtcp::Nack::PackedNack"*, %"struct.webrtc::rtcp::Nack::PackedNack"** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi %"struct.webrtc::rtcp::Nack::PackedNack"* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq %"struct.webrtc::rtcp::Nack::PackedNack"* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast %"struct.webrtc::rtcp::Nack::PackedNack"* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #12
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
