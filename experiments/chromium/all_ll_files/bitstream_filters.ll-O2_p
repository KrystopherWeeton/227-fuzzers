; ModuleID = '../../third_party/ffmpeg/libavcodec/bitstream_filters.c'
source_filename = "../../third_party/ffmpeg/libavcodec/bitstream_filters.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)*, %struct.AVClass* (i8**)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVRational = type { i32, i32 }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVPacketSideData = type { i8*, i32, i32 }

@bitstream_filters = internal unnamed_addr constant [2 x %struct.AVBitStreamFilter*] [%struct.AVBitStreamFilter* @ff_null_bsf, %struct.AVBitStreamFilter* null], align 16
@ff_null_bsf = external constant %struct.AVBitStreamFilter, align 8

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %struct.AVBitStreamFilter* @av_bsf_iterate(i8** nocapture) local_unnamed_addr #0 {
  %2 = bitcast i8** %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds [2 x %struct.AVBitStreamFilter*], [2 x %struct.AVBitStreamFilter*]* @bitstream_filters, i64 0, i64 %3
  %5 = load %struct.AVBitStreamFilter*, %struct.AVBitStreamFilter** %4, align 8
  %6 = icmp eq i64 %3, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  store i8* inttoptr (i64 1 to i8*), i8** %0, align 8
  br label %8

8:                                                ; preds = %7, %1
  ret %struct.AVBitStreamFilter* %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %struct.AVBitStreamFilter* @av_bsf_next(i8** nocapture) local_unnamed_addr #0 {
  %2 = bitcast i8** %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds [2 x %struct.AVBitStreamFilter*], [2 x %struct.AVBitStreamFilter*]* @bitstream_filters, i64 0, i64 %3
  %5 = load %struct.AVBitStreamFilter*, %struct.AVBitStreamFilter** %4, align 8
  %6 = icmp eq i64 %3, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  store i8* inttoptr (i64 1 to i8*), i8** %0, align 8
  br label %8

8:                                                ; preds = %1, %7
  ret %struct.AVBitStreamFilter* %5
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %struct.AVBitStreamFilter* @av_bsf_get_by_name(i8* readonly) local_unnamed_addr #1 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %15, label %3

3:                                                ; preds = %1, %8
  %4 = phi i64 [ %10, %8 ], [ 0, %1 ]
  %5 = getelementptr inbounds [2 x %struct.AVBitStreamFilter*], [2 x %struct.AVBitStreamFilter*]* @bitstream_filters, i64 0, i64 %4
  %6 = load %struct.AVBitStreamFilter*, %struct.AVBitStreamFilter** %5, align 8
  %7 = icmp eq i64 %4, 1
  br i1 %7, label %15, label %8

8:                                                ; preds = %3
  %9 = icmp eq i64 %4, 0
  %10 = select i1 %9, i64 1, i64 %4
  %11 = getelementptr inbounds %struct.AVBitStreamFilter, %struct.AVBitStreamFilter* %6, i64 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = tail call i32 @strcmp(i8* %12, i8* nonnull %0) #3
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %3

15:                                               ; preds = %3, %8, %1
  %16 = phi %struct.AVBitStreamFilter* [ null, %1 ], [ null, %3 ], [ %6, %8 ]
  ret %struct.AVBitStreamFilter* %16
}

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #2

; Function Attrs: nounwind readonly ssp uwtable
define hidden %struct.AVClass* @ff_bsf_child_class_next(%struct.AVClass* readnone) local_unnamed_addr #1 {
  %2 = icmp eq %struct.AVClass* %0, null
  %3 = select i1 %2, i64 0, i64 1
  br label %4

4:                                                ; preds = %1, %7
  %5 = phi i64 [ %11, %7 ], [ %3, %1 ]
  %6 = icmp eq i64 %5, 1
  br i1 %6, label %15, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds [2 x %struct.AVBitStreamFilter*], [2 x %struct.AVBitStreamFilter*]* @bitstream_filters, i64 0, i64 %5
  %9 = load %struct.AVBitStreamFilter*, %struct.AVBitStreamFilter** %8, align 8
  %10 = icmp eq i64 %5, 0
  %11 = select i1 %10, i64 1, i64 %5
  %12 = getelementptr inbounds %struct.AVBitStreamFilter, %struct.AVBitStreamFilter* %9, i64 0, i32 2
  %13 = load %struct.AVClass*, %struct.AVClass** %12, align 8
  %14 = icmp eq %struct.AVClass* %13, null
  br i1 %14, label %4, label %15

15:                                               ; preds = %4, %7
  %16 = phi %struct.AVClass* [ %13, %7 ], [ null, %4 ]
  ret %struct.AVClass* %16
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %struct.AVClass* @ff_bsf_child_class_iterate(i8** nocapture) local_unnamed_addr #0 {
  %2 = bitcast i8** %0 to i64*
  %3 = load i64, i64* %2, align 8
  br label %4

4:                                                ; preds = %9, %1
  %5 = phi i64 [ %10, %9 ], [ %3, %1 ]
  %6 = getelementptr inbounds [2 x %struct.AVBitStreamFilter*], [2 x %struct.AVBitStreamFilter*]* @bitstream_filters, i64 0, i64 %5
  %7 = load %struct.AVBitStreamFilter*, %struct.AVBitStreamFilter** %6, align 8
  switch i64 %5, label %9 [
    i64 0, label %8
    i64 1, label %14
  ]

8:                                                ; preds = %4
  store i8* inttoptr (i64 1 to i8*), i8** %0, align 8
  br label %9

9:                                                ; preds = %8, %4
  %10 = phi i64 [ 1, %8 ], [ %5, %4 ]
  %11 = getelementptr inbounds %struct.AVBitStreamFilter, %struct.AVBitStreamFilter* %7, i64 0, i32 2
  %12 = load %struct.AVClass*, %struct.AVClass** %11, align 8
  %13 = icmp eq %struct.AVClass* %12, null
  br i1 %13, label %4, label %14

14:                                               ; preds = %4, %9
  %15 = phi %struct.AVClass* [ %12, %9 ], [ null, %4 ]
  ret %struct.AVClass* %15
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
