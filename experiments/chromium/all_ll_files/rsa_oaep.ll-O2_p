; ModuleID = '../../components/webcrypto/algorithms/rsa_oaep.cc'
source_filename = "../../components/webcrypto/algorithms/rsa_oaep.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webcrypto::AlgorithmImplementation" = type { i32 (...)** }
%"class.webcrypto::(anonymous namespace)::RsaOaepImplementation" = type { %"class.webcrypto::RsaHashedAlgorithm" }
%"class.webcrypto::RsaHashedAlgorithm" = type { %"class.webcrypto::AlgorithmImplementation", i32, i32 }
%"class.webcrypto::Status" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.blink::WebCryptoAlgorithm" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebCryptoKey" = type { %"class.blink::WebPrivatePtr.7" }
%"class.blink::WebPrivatePtr.7" = type { i8* }
%"class.webcrypto::CryptoData" = type <{ i8*, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i8* }
%"class.crypto::OpenSSLErrStackTracer" = type { %"class.base::Location" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%struct.evp_pkey_st = type { i32, i32, %union.anon.17, %struct.evp_pkey_asn1_method_st* }
%union.anon.17 = type { i8* }
%struct.evp_pkey_asn1_method_st = type opaque
%"class.blink::WebCryptoKeyAlgorithm" = type { %"class.blink::WebPrivatePtr.16" }
%"class.blink::WebPrivatePtr.16" = type { i8* }
%"class.blink::WebCryptoRsaHashedKeyAlgorithmParams" = type { %"class.blink::WebCryptoKeyAlgorithmParams", i32, %"class.blink::WebVector", %"class.blink::WebCryptoAlgorithm" }
%"class.blink::WebCryptoKeyAlgorithmParams" = type { i32 (...)** }
%"class.blink::WebVector" = type { %"class.std::__1::vector" }
%struct.env_md_st = type opaque
%struct.evp_pkey_ctx_st = type opaque
%struct.engine_st = type opaque
%"class.blink::WebCryptoRsaOaepParams" = type { %"class.blink::WebCryptoAlgorithmParams", i8, %"class.blink::WebVector" }
%"class.blink::WebCryptoAlgorithmParams" = type { i32 (...)** }
%"class.webcrypto::GenerateKeyResult" = type opaque
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm = comdat any

@_ZTVN9webcrypto12_GLOBAL__N_121RsaOaepImplementationE = internal unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webcrypto::AlgorithmImplementation"*)* @_ZN9webcrypto23AlgorithmImplementationD2Ev to i8*), i8* bitcast (void (%"class.webcrypto::(anonymous namespace)::RsaOaepImplementation"*)* @_ZN9webcrypto12_GLOBAL__N_121RsaOaepImplementationD0Ev to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::(anonymous namespace)::RsaOaepImplementation"*, %"class.blink::WebCryptoAlgorithm"*, %"class.blink::WebCryptoKey"*, %"class.webcrypto::CryptoData"*, %"class.std::__1::vector"*)* @_ZNK9webcrypto12_GLOBAL__N_121RsaOaepImplementation7EncryptERKN5blink18WebCryptoAlgorithmERKNS2_12WebCryptoKeyERKNS_10CryptoDataEPNSt3__16vectorIhNSC_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::(anonymous namespace)::RsaOaepImplementation"*, %"class.blink::WebCryptoAlgorithm"*, %"class.blink::WebCryptoKey"*, %"class.webcrypto::CryptoData"*, %"class.std::__1::vector"*)* @_ZNK9webcrypto12_GLOBAL__N_121RsaOaepImplementation7DecryptERKN5blink18WebCryptoAlgorithmERKNS2_12WebCryptoKeyERKNS_10CryptoDataEPNSt3__16vectorIhNSC_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"*, %"class.blink::WebCryptoKey"*, %"class.webcrypto::CryptoData"*, %"class.std::__1::vector"*)* @_ZNK9webcrypto23AlgorithmImplementation4SignERKN5blink18WebCryptoAlgorithmERKNS1_12WebCryptoKeyERKNS_10CryptoDataEPNSt3__16vectorIhNSB_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"*, %"class.blink::WebCryptoKey"*, %"class.webcrypto::CryptoData"*, %"class.webcrypto::CryptoData"*, i8*)* @_ZNK9webcrypto23AlgorithmImplementation6VerifyERKN5blink18WebCryptoAlgorithmERKNS1_12WebCryptoKeyERKNS_10CryptoDataESA_Pb to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"*, %"class.webcrypto::CryptoData"*, %"class.std::__1::vector"*)* @_ZNK9webcrypto23AlgorithmImplementation6DigestERKN5blink18WebCryptoAlgorithmERKNS_10CryptoDataEPNSt3__16vectorIhNS8_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::RsaHashedAlgorithm"*, %"class.blink::WebCryptoAlgorithm"*, i1, i32, %"class.webcrypto::GenerateKeyResult"*)* @_ZNK9webcrypto18RsaHashedAlgorithm11GenerateKeyERKN5blink18WebCryptoAlgorithmEbiPNS_17GenerateKeyResultE to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"*, %"class.blink::WebCryptoKey"*, i1, i32, %"class.std::__1::vector"*)* @_ZNK9webcrypto23AlgorithmImplementation10DeriveBitsERKN5blink18WebCryptoAlgorithmERKNS1_12WebCryptoKeyEbjPNSt3__16vectorIhNS8_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"*, i8*, i32*)* @_ZNK9webcrypto23AlgorithmImplementation12GetKeyLengthERKN5blink18WebCryptoAlgorithmEPbPj to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::RsaHashedAlgorithm"*, i32, %"class.webcrypto::CryptoData"*, %"class.blink::WebCryptoAlgorithm"*, i1, i32, %"class.blink::WebCryptoKey"*)* @_ZNK9webcrypto18RsaHashedAlgorithm9ImportKeyEN5blink18WebCryptoKeyFormatERKNS_10CryptoDataERKNS1_18WebCryptoAlgorithmEbiPNS1_12WebCryptoKeyE to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::RsaHashedAlgorithm"*, i32, %"class.blink::WebCryptoKey"*, %"class.std::__1::vector"*)* @_ZNK9webcrypto18RsaHashedAlgorithm9ExportKeyEN5blink18WebCryptoKeyFormatERKNS1_12WebCryptoKeyEPNSt3__16vectorIhNS6_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.webcrypto::Status"*, %"class.webcrypto::RsaHashedAlgorithm"*, %"class.blink::WebCryptoKeyAlgorithm"*, i32, i1, i32, %"class.webcrypto::CryptoData"*, %"class.blink::WebCryptoKey"*)* @_ZNK9webcrypto18RsaHashedAlgorithm22DeserializeKeyForCloneERKN5blink21WebCryptoKeyAlgorithmENS1_16WebCryptoKeyTypeEbiRKNS_10CryptoDataEPNS1_12WebCryptoKeyE to i8*), i8* bitcast (i8* (%"class.webcrypto::(anonymous namespace)::RsaOaepImplementation"*, i32)* @_ZNK9webcrypto12_GLOBAL__N_121RsaOaepImplementation15GetJwkAlgorithmEN5blink20WebCryptoAlgorithmIdE to i8*)] }, align 8
@.str = private unnamed_addr constant [21 x i8] c"CommonEncryptDecrypt\00", align 1
@.str.1 = private unnamed_addr constant [50 x i8] c"../../components/webcrypto/algorithms/rsa_oaep.cc\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"RSA-OAEP\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"RSA-OAEP-256\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"RSA-OAEP-384\00", align 1
@.str.6 = private unnamed_addr constant [13 x i8] c"RSA-OAEP-512\00", align 1
@switch.table._ZNK9webcrypto12_GLOBAL__N_121RsaOaepImplementation15GetJwkAlgorithmEN5blink20WebCryptoAlgorithmIdE = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0)], align 8

; Function Attrs: nounwind ssp uwtable
define hidden %"class.webcrypto::AlgorithmImplementation"* @_ZN9webcrypto27CreateRsaOaepImplementationEv() local_unnamed_addr #0 {
  %1 = tail call i8* @_Znwm(i64 16) #9
  %2 = bitcast i8* %1 to i32 (...)***
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = bitcast i8* %3 to i32*
  store i32 33, i32* %4, align 8
  %5 = getelementptr inbounds i8, i8* %1, i64 12
  %6 = bitcast i8* %5 to i32*
  store i32 66, i32* %6, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN9webcrypto12_GLOBAL__N_121RsaOaepImplementationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %7 = bitcast i8* %1 to %"class.webcrypto::AlgorithmImplementation"*
  ret %"class.webcrypto::AlgorithmImplementation"* %7
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9webcrypto23AlgorithmImplementationD2Ev(%"class.webcrypto::AlgorithmImplementation"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN9webcrypto12_GLOBAL__N_121RsaOaepImplementationD0Ev(%"class.webcrypto::(anonymous namespace)::RsaOaepImplementation"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::RsaOaepImplementation", %"class.webcrypto::(anonymous namespace)::RsaOaepImplementation"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN9webcrypto23AlgorithmImplementationD2Ev(%"class.webcrypto::AlgorithmImplementation"* %2) #10
  %3 = bitcast %"class.webcrypto::(anonymous namespace)::RsaOaepImplementation"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK9webcrypto12_GLOBAL__N_121RsaOaepImplementation7EncryptERKN5blink18WebCryptoAlgorithmERKNS2_12WebCryptoKeyERKNS_10CryptoDataEPNSt3__16vectorIhNSC_9allocatorIhEEEE(%"class.webcrypto::Status"* noalias sret, %"class.webcrypto::(anonymous namespace)::RsaOaepImplementation"* nocapture readnone, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), %"class.blink::WebCryptoKey"* dereferenceable(8), %"class.webcrypto::CryptoData"* nocapture readonly dereferenceable(16), %"class.std::__1::vector"*) unnamed_addr #0 align 2 {
  %7 = alloca %"class.crypto::OpenSSLErrStackTracer", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = alloca i64, align 8
  %10 = tail call i32 @_ZNK5blink12WebCryptoKey7GetTypeEv(%"class.blink::WebCryptoKey"* %3) #10
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %13, label %12

12:                                               ; preds = %6
  tail call void @_ZN9webcrypto6Status22ErrorUnexpectedKeyTypeEv(%"class.webcrypto::Status"* sret %0) #10
  br label %116

13:                                               ; preds = %6
  %14 = bitcast %"class.crypto::OpenSSLErrStackTracer"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #10, !noalias !2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 32, i1 false) #10, !noalias !2
  %15 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #10, !noalias !2
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.1, i64 0, i64 0), i32 47) #10, !noalias !2
  %16 = getelementptr inbounds %"class.crypto::OpenSSLErrStackTracer", %"class.crypto::OpenSSLErrStackTracer"* %7, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %16, %"class.base::Location"* nonnull dereferenceable(32) %8) #10, !noalias !2
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #10, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #10, !noalias !2
  %17 = call %struct.evp_pkey_st* @_ZN9webcrypto11GetEVP_PKEYERKN5blink12WebCryptoKeyE(%"class.blink::WebCryptoKey"* dereferenceable(8) %3) #10, !noalias !2
  %18 = call dereferenceable(8) %"class.blink::WebCryptoKeyAlgorithm"* @_ZNK5blink12WebCryptoKey9AlgorithmEv(%"class.blink::WebCryptoKey"* %3) #10, !noalias !2
  %19 = call %"class.blink::WebCryptoRsaHashedKeyAlgorithmParams"* @_ZNK5blink21WebCryptoKeyAlgorithm15RsaHashedParamsEv(%"class.blink::WebCryptoKeyAlgorithm"* %18) #10, !noalias !2
  %20 = getelementptr inbounds %"class.blink::WebCryptoRsaHashedKeyAlgorithmParams", %"class.blink::WebCryptoRsaHashedKeyAlgorithmParams"* %19, i64 0, i32 3
  %21 = call %struct.env_md_st* @_ZN9webcrypto9GetDigestERKN5blink18WebCryptoAlgorithmE(%"class.blink::WebCryptoAlgorithm"* dereferenceable(8) %20) #10, !noalias !2
  %22 = icmp eq %struct.env_md_st* %21, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %13
  call void @_ZN9webcrypto6Status16ErrorUnsupportedEv(%"class.webcrypto::Status"* sret %0) #10
  br label %115

24:                                               ; preds = %13
  %25 = call %struct.evp_pkey_ctx_st* @EVP_PKEY_CTX_new(%struct.evp_pkey_st* %17, %struct.engine_st* null) #10
  %26 = call i32 @EVP_PKEY_encrypt_init(%struct.evp_pkey_ctx_st* %25) #10, !callees !5
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %37, label %28

28:                                               ; preds = %24
  %29 = call i32 @EVP_PKEY_CTX_set_rsa_padding(%struct.evp_pkey_ctx_st* %25, i32 4) #10
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %37, label %31

31:                                               ; preds = %28
  %32 = call i32 @EVP_PKEY_CTX_set_rsa_oaep_md(%struct.evp_pkey_ctx_st* %25, %struct.env_md_st* nonnull %21) #10
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %31
  %35 = call i32 @EVP_PKEY_CTX_set_rsa_mgf1_md(%struct.evp_pkey_ctx_st* %25, %struct.env_md_st* nonnull %21) #10
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34, %31, %28, %24
  call void @_ZN9webcrypto6Status14OperationErrorEv(%"class.webcrypto::Status"* sret %0) #10
  br label %112

38:                                               ; preds = %34
  %39 = call %"class.blink::WebCryptoRsaOaepParams"* @_ZNK5blink18WebCryptoAlgorithm13RsaOaepParamsEv(%"class.blink::WebCryptoAlgorithm"* %2) #10
  %40 = getelementptr inbounds %"class.blink::WebCryptoRsaOaepParams", %"class.blink::WebCryptoRsaOaepParams"* %39, i64 0, i32 2
  %41 = getelementptr inbounds %"class.blink::WebCryptoRsaOaepParams", %"class.blink::WebCryptoRsaOaepParams"* %39, i64 0, i32 2, i32 0, i32 0, i32 1
  %42 = bitcast i8** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.blink::WebVector"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %61, label %48

48:                                               ; preds = %38
  %49 = call i8* @OPENSSL_malloc(i64 %46) #10
  %50 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %40, i64 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = load i64, i64* %42, align 8
  %53 = ptrtoint i8* %51 to i64
  %54 = sub i64 %52, %53
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %49, i8* align 1 %51, i64 %54, i1 false) #10
  %55 = load i64, i64* %42, align 8
  %56 = load i64, i64* %44, align 8
  %57 = sub i64 %55, %56
  %58 = call i32 @EVP_PKEY_CTX_set0_rsa_oaep_label(%struct.evp_pkey_ctx_st* %25, i8* %49, i64 %57) #10
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %61, label %60

60:                                               ; preds = %48
  call void @_ZN9webcrypto6Status14OperationErrorEv(%"class.webcrypto::Status"* sret %0) #10
  br label %112

61:                                               ; preds = %48, %38
  %62 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #10, !noalias !2
  store i64 0, i64* %9, align 8, !noalias !2
  %63 = getelementptr inbounds %"class.webcrypto::CryptoData", %"class.webcrypto::CryptoData"* %4, i64 0, i32 0
  %64 = load i8*, i8** %63, align 8, !noalias !2
  %65 = getelementptr inbounds %"class.webcrypto::CryptoData", %"class.webcrypto::CryptoData"* %4, i64 0, i32 1
  %66 = load i32, i32* %65, align 8, !noalias !2
  %67 = zext i32 %66 to i64
  %68 = call i32 @EVP_PKEY_encrypt(%struct.evp_pkey_ctx_st* %25, i8* null, i64* nonnull %9, i8* %64, i64 %67) #10, !callees !6
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %61
  call void @_ZN9webcrypto6Status14OperationErrorEv(%"class.webcrypto::Status"* sret %0) #10
  br label %111

71:                                               ; preds = %61
  %72 = load i64, i64* %9, align 8, !noalias !2
  %73 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %74 = bitcast i8** %73 to i64*
  %75 = load i64, i64* %74, align 8, !noalias !2
  %76 = bitcast %"class.std::__1::vector"* %5 to i64*
  %77 = load i64, i64* %76, align 8, !noalias !2
  %78 = sub i64 %75, %77
  %79 = icmp ugt i64 %72, %78
  %80 = inttoptr i64 %77 to i8*
  br i1 %79, label %81, label %85

81:                                               ; preds = %71
  %82 = sub i64 %72, %78
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %5, i64 %82) #10
  %83 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8, !noalias !2
  br label %89

85:                                               ; preds = %71
  %86 = icmp ult i64 %72, %78
  br i1 %86, label %87, label %89

87:                                               ; preds = %85
  %88 = getelementptr inbounds i8, i8* %80, i64 %72
  store i8* %88, i8** %73, align 8, !noalias !2
  br label %89

89:                                               ; preds = %87, %85, %81
  %90 = phi i8* [ %84, %81 ], [ %80, %85 ], [ %80, %87 ]
  %91 = load i8*, i8** %63, align 8, !noalias !2
  %92 = load i32, i32* %65, align 8, !noalias !2
  %93 = zext i32 %92 to i64
  %94 = call i32 @EVP_PKEY_encrypt(%struct.evp_pkey_ctx_st* %25, i8* %90, i64* nonnull %9, i8* %91, i64 %93) #10, !callees !6
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %89
  call void @_ZN9webcrypto6Status14OperationErrorEv(%"class.webcrypto::Status"* sret %0) #10
  br label %111

97:                                               ; preds = %89
  %98 = load i64, i64* %9, align 8, !noalias !2
  %99 = load i64, i64* %74, align 8, !noalias !2
  %100 = load i64, i64* %76, align 8, !noalias !2
  %101 = sub i64 %99, %100
  %102 = icmp ugt i64 %98, %101
  %103 = inttoptr i64 %100 to i8*
  br i1 %102, label %104, label %106

104:                                              ; preds = %97
  %105 = sub i64 %98, %101
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %5, i64 %105) #10
  br label %110

106:                                              ; preds = %97
  %107 = icmp ult i64 %98, %101
  br i1 %107, label %108, label %110

108:                                              ; preds = %106
  %109 = getelementptr inbounds i8, i8* %103, i64 %98
  store i8* %109, i8** %73, align 8, !noalias !2
  br label %110

110:                                              ; preds = %108, %106, %104
  call void @_ZN9webcrypto6Status7SuccessEv(%"class.webcrypto::Status"* sret %0) #10
  br label %111

111:                                              ; preds = %110, %96, %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #10, !noalias !2
  br label %112

112:                                              ; preds = %111, %60, %37
  %113 = icmp eq %struct.evp_pkey_ctx_st* %25, null
  br i1 %113, label %115, label %114

114:                                              ; preds = %112
  call void @EVP_PKEY_CTX_free(%struct.evp_pkey_ctx_st* nonnull %25) #10
  br label %115

115:                                              ; preds = %23, %112, %114
  call void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* nonnull dereferenceable(32) %16) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #10, !noalias !2
  br label %116

116:                                              ; preds = %115, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK9webcrypto12_GLOBAL__N_121RsaOaepImplementation7DecryptERKN5blink18WebCryptoAlgorithmERKNS2_12WebCryptoKeyERKNS_10CryptoDataEPNSt3__16vectorIhNSC_9allocatorIhEEEE(%"class.webcrypto::Status"* noalias sret, %"class.webcrypto::(anonymous namespace)::RsaOaepImplementation"* nocapture readnone, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), %"class.blink::WebCryptoKey"* dereferenceable(8), %"class.webcrypto::CryptoData"* nocapture readonly dereferenceable(16), %"class.std::__1::vector"*) unnamed_addr #0 align 2 {
  %7 = alloca %"class.crypto::OpenSSLErrStackTracer", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = alloca i64, align 8
  %10 = tail call i32 @_ZNK5blink12WebCryptoKey7GetTypeEv(%"class.blink::WebCryptoKey"* %3) #10
  %11 = icmp eq i32 %10, 2
  br i1 %11, label %13, label %12

12:                                               ; preds = %6
  tail call void @_ZN9webcrypto6Status22ErrorUnexpectedKeyTypeEv(%"class.webcrypto::Status"* sret %0) #10
  br label %116

13:                                               ; preds = %6
  %14 = bitcast %"class.crypto::OpenSSLErrStackTracer"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #10, !noalias !7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 32, i1 false) #10, !noalias !7
  %15 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #10, !noalias !7
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.1, i64 0, i64 0), i32 47) #10, !noalias !7
  %16 = getelementptr inbounds %"class.crypto::OpenSSLErrStackTracer", %"class.crypto::OpenSSLErrStackTracer"* %7, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %16, %"class.base::Location"* nonnull dereferenceable(32) %8) #10, !noalias !7
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #10, !noalias !7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #10, !noalias !7
  %17 = call %struct.evp_pkey_st* @_ZN9webcrypto11GetEVP_PKEYERKN5blink12WebCryptoKeyE(%"class.blink::WebCryptoKey"* dereferenceable(8) %3) #10, !noalias !7
  %18 = call dereferenceable(8) %"class.blink::WebCryptoKeyAlgorithm"* @_ZNK5blink12WebCryptoKey9AlgorithmEv(%"class.blink::WebCryptoKey"* %3) #10, !noalias !7
  %19 = call %"class.blink::WebCryptoRsaHashedKeyAlgorithmParams"* @_ZNK5blink21WebCryptoKeyAlgorithm15RsaHashedParamsEv(%"class.blink::WebCryptoKeyAlgorithm"* %18) #10, !noalias !7
  %20 = getelementptr inbounds %"class.blink::WebCryptoRsaHashedKeyAlgorithmParams", %"class.blink::WebCryptoRsaHashedKeyAlgorithmParams"* %19, i64 0, i32 3
  %21 = call %struct.env_md_st* @_ZN9webcrypto9GetDigestERKN5blink18WebCryptoAlgorithmE(%"class.blink::WebCryptoAlgorithm"* dereferenceable(8) %20) #10, !noalias !7
  %22 = icmp eq %struct.env_md_st* %21, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %13
  call void @_ZN9webcrypto6Status16ErrorUnsupportedEv(%"class.webcrypto::Status"* sret %0) #10
  br label %115

24:                                               ; preds = %13
  %25 = call %struct.evp_pkey_ctx_st* @EVP_PKEY_CTX_new(%struct.evp_pkey_st* %17, %struct.engine_st* null) #10
  %26 = call i32 @EVP_PKEY_decrypt_init(%struct.evp_pkey_ctx_st* %25) #10, !callees !5
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %37, label %28

28:                                               ; preds = %24
  %29 = call i32 @EVP_PKEY_CTX_set_rsa_padding(%struct.evp_pkey_ctx_st* %25, i32 4) #10
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %37, label %31

31:                                               ; preds = %28
  %32 = call i32 @EVP_PKEY_CTX_set_rsa_oaep_md(%struct.evp_pkey_ctx_st* %25, %struct.env_md_st* nonnull %21) #10
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %31
  %35 = call i32 @EVP_PKEY_CTX_set_rsa_mgf1_md(%struct.evp_pkey_ctx_st* %25, %struct.env_md_st* nonnull %21) #10
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34, %31, %28, %24
  call void @_ZN9webcrypto6Status14OperationErrorEv(%"class.webcrypto::Status"* sret %0) #10
  br label %112

38:                                               ; preds = %34
  %39 = call %"class.blink::WebCryptoRsaOaepParams"* @_ZNK5blink18WebCryptoAlgorithm13RsaOaepParamsEv(%"class.blink::WebCryptoAlgorithm"* %2) #10
  %40 = getelementptr inbounds %"class.blink::WebCryptoRsaOaepParams", %"class.blink::WebCryptoRsaOaepParams"* %39, i64 0, i32 2
  %41 = getelementptr inbounds %"class.blink::WebCryptoRsaOaepParams", %"class.blink::WebCryptoRsaOaepParams"* %39, i64 0, i32 2, i32 0, i32 0, i32 1
  %42 = bitcast i8** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.blink::WebVector"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %61, label %48

48:                                               ; preds = %38
  %49 = call i8* @OPENSSL_malloc(i64 %46) #10
  %50 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %40, i64 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = load i64, i64* %42, align 8
  %53 = ptrtoint i8* %51 to i64
  %54 = sub i64 %52, %53
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %49, i8* align 1 %51, i64 %54, i1 false) #10
  %55 = load i64, i64* %42, align 8
  %56 = load i64, i64* %44, align 8
  %57 = sub i64 %55, %56
  %58 = call i32 @EVP_PKEY_CTX_set0_rsa_oaep_label(%struct.evp_pkey_ctx_st* %25, i8* %49, i64 %57) #10
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %61, label %60

60:                                               ; preds = %48
  call void @_ZN9webcrypto6Status14OperationErrorEv(%"class.webcrypto::Status"* sret %0) #10
  br label %112

61:                                               ; preds = %48, %38
  %62 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #10, !noalias !7
  store i64 0, i64* %9, align 8, !noalias !7
  %63 = getelementptr inbounds %"class.webcrypto::CryptoData", %"class.webcrypto::CryptoData"* %4, i64 0, i32 0
  %64 = load i8*, i8** %63, align 8, !noalias !7
  %65 = getelementptr inbounds %"class.webcrypto::CryptoData", %"class.webcrypto::CryptoData"* %4, i64 0, i32 1
  %66 = load i32, i32* %65, align 8, !noalias !7
  %67 = zext i32 %66 to i64
  %68 = call i32 @EVP_PKEY_decrypt(%struct.evp_pkey_ctx_st* %25, i8* null, i64* nonnull %9, i8* %64, i64 %67) #10, !callees !6
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %61
  call void @_ZN9webcrypto6Status14OperationErrorEv(%"class.webcrypto::Status"* sret %0) #10
  br label %111

71:                                               ; preds = %61
  %72 = load i64, i64* %9, align 8, !noalias !7
  %73 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %74 = bitcast i8** %73 to i64*
  %75 = load i64, i64* %74, align 8, !noalias !7
  %76 = bitcast %"class.std::__1::vector"* %5 to i64*
  %77 = load i64, i64* %76, align 8, !noalias !7
  %78 = sub i64 %75, %77
  %79 = icmp ugt i64 %72, %78
  %80 = inttoptr i64 %77 to i8*
  br i1 %79, label %81, label %85

81:                                               ; preds = %71
  %82 = sub i64 %72, %78
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %5, i64 %82) #10
  %83 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8, !noalias !7
  br label %89

85:                                               ; preds = %71
  %86 = icmp ult i64 %72, %78
  br i1 %86, label %87, label %89

87:                                               ; preds = %85
  %88 = getelementptr inbounds i8, i8* %80, i64 %72
  store i8* %88, i8** %73, align 8, !noalias !7
  br label %89

89:                                               ; preds = %87, %85, %81
  %90 = phi i8* [ %84, %81 ], [ %80, %85 ], [ %80, %87 ]
  %91 = load i8*, i8** %63, align 8, !noalias !7
  %92 = load i32, i32* %65, align 8, !noalias !7
  %93 = zext i32 %92 to i64
  %94 = call i32 @EVP_PKEY_decrypt(%struct.evp_pkey_ctx_st* %25, i8* %90, i64* nonnull %9, i8* %91, i64 %93) #10, !callees !6
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %89
  call void @_ZN9webcrypto6Status14OperationErrorEv(%"class.webcrypto::Status"* sret %0) #10
  br label %111

97:                                               ; preds = %89
  %98 = load i64, i64* %9, align 8, !noalias !7
  %99 = load i64, i64* %74, align 8, !noalias !7
  %100 = load i64, i64* %76, align 8, !noalias !7
  %101 = sub i64 %99, %100
  %102 = icmp ugt i64 %98, %101
  %103 = inttoptr i64 %100 to i8*
  br i1 %102, label %104, label %106

104:                                              ; preds = %97
  %105 = sub i64 %98, %101
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %5, i64 %105) #10
  br label %110

106:                                              ; preds = %97
  %107 = icmp ult i64 %98, %101
  br i1 %107, label %108, label %110

108:                                              ; preds = %106
  %109 = getelementptr inbounds i8, i8* %103, i64 %98
  store i8* %109, i8** %73, align 8, !noalias !7
  br label %110

110:                                              ; preds = %108, %106, %104
  call void @_ZN9webcrypto6Status7SuccessEv(%"class.webcrypto::Status"* sret %0) #10
  br label %111

111:                                              ; preds = %110, %96, %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #10, !noalias !7
  br label %112

112:                                              ; preds = %111, %60, %37
  %113 = icmp eq %struct.evp_pkey_ctx_st* %25, null
  br i1 %113, label %115, label %114

114:                                              ; preds = %112
  call void @EVP_PKEY_CTX_free(%struct.evp_pkey_ctx_st* nonnull %25) #10
  br label %115

115:                                              ; preds = %23, %112, %114
  call void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* nonnull dereferenceable(32) %16) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #10, !noalias !7
  br label %116

116:                                              ; preds = %115, %12
  ret void
}

declare void @_ZNK9webcrypto23AlgorithmImplementation4SignERKN5blink18WebCryptoAlgorithmERKNS1_12WebCryptoKeyERKNS_10CryptoDataEPNSt3__16vectorIhNSB_9allocatorIhEEEE(%"class.webcrypto::Status"* sret, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), %"class.blink::WebCryptoKey"* dereferenceable(8), %"class.webcrypto::CryptoData"* dereferenceable(16), %"class.std::__1::vector"*) unnamed_addr #5

declare void @_ZNK9webcrypto23AlgorithmImplementation6VerifyERKN5blink18WebCryptoAlgorithmERKNS1_12WebCryptoKeyERKNS_10CryptoDataESA_Pb(%"class.webcrypto::Status"* sret, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), %"class.blink::WebCryptoKey"* dereferenceable(8), %"class.webcrypto::CryptoData"* dereferenceable(16), %"class.webcrypto::CryptoData"* dereferenceable(16), i8*) unnamed_addr #5

declare void @_ZNK9webcrypto23AlgorithmImplementation6DigestERKN5blink18WebCryptoAlgorithmERKNS_10CryptoDataEPNSt3__16vectorIhNS8_9allocatorIhEEEE(%"class.webcrypto::Status"* sret, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), %"class.webcrypto::CryptoData"* dereferenceable(16), %"class.std::__1::vector"*) unnamed_addr #5

declare void @_ZNK9webcrypto18RsaHashedAlgorithm11GenerateKeyERKN5blink18WebCryptoAlgorithmEbiPNS_17GenerateKeyResultE(%"class.webcrypto::Status"* sret, %"class.webcrypto::RsaHashedAlgorithm"*, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), i1 zeroext, i32, %"class.webcrypto::GenerateKeyResult"*) unnamed_addr #5

declare void @_ZNK9webcrypto23AlgorithmImplementation10DeriveBitsERKN5blink18WebCryptoAlgorithmERKNS1_12WebCryptoKeyEbjPNSt3__16vectorIhNS8_9allocatorIhEEEE(%"class.webcrypto::Status"* sret, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), %"class.blink::WebCryptoKey"* dereferenceable(8), i1 zeroext, i32, %"class.std::__1::vector"*) unnamed_addr #5

declare void @_ZNK9webcrypto23AlgorithmImplementation12GetKeyLengthERKN5blink18WebCryptoAlgorithmEPbPj(%"class.webcrypto::Status"* sret, %"class.webcrypto::AlgorithmImplementation"*, %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), i8*, i32*) unnamed_addr #5

declare void @_ZNK9webcrypto18RsaHashedAlgorithm9ImportKeyEN5blink18WebCryptoKeyFormatERKNS_10CryptoDataERKNS1_18WebCryptoAlgorithmEbiPNS1_12WebCryptoKeyE(%"class.webcrypto::Status"* sret, %"class.webcrypto::RsaHashedAlgorithm"*, i32, %"class.webcrypto::CryptoData"* dereferenceable(16), %"class.blink::WebCryptoAlgorithm"* dereferenceable(8), i1 zeroext, i32, %"class.blink::WebCryptoKey"*) unnamed_addr #5

declare void @_ZNK9webcrypto18RsaHashedAlgorithm9ExportKeyEN5blink18WebCryptoKeyFormatERKNS1_12WebCryptoKeyEPNSt3__16vectorIhNS6_9allocatorIhEEEE(%"class.webcrypto::Status"* sret, %"class.webcrypto::RsaHashedAlgorithm"*, i32, %"class.blink::WebCryptoKey"* dereferenceable(8), %"class.std::__1::vector"*) unnamed_addr #5

declare void @_ZNK9webcrypto18RsaHashedAlgorithm22DeserializeKeyForCloneERKN5blink21WebCryptoKeyAlgorithmENS1_16WebCryptoKeyTypeEbiRKNS_10CryptoDataEPNS1_12WebCryptoKeyE(%"class.webcrypto::Status"* sret, %"class.webcrypto::RsaHashedAlgorithm"*, %"class.blink::WebCryptoKeyAlgorithm"* dereferenceable(8), i32, i1 zeroext, i32, %"class.webcrypto::CryptoData"* dereferenceable(16), %"class.blink::WebCryptoKey"*) unnamed_addr #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK9webcrypto12_GLOBAL__N_121RsaOaepImplementation15GetJwkAlgorithmEN5blink20WebCryptoAlgorithmIdE(%"class.webcrypto::(anonymous namespace)::RsaOaepImplementation"* nocapture readnone, i32) unnamed_addr #6 align 2 {
  %3 = add i32 %1, -3
  %4 = icmp ult i32 %3, 4
  br i1 %4, label %5, label %9

5:                                                ; preds = %2
  %6 = sext i32 %3 to i64
  %7 = getelementptr inbounds [4 x i8*], [4 x i8*]* @switch.table._ZNK9webcrypto12_GLOBAL__N_121RsaOaepImplementation15GetJwkAlgorithmEN5blink20WebCryptoAlgorithmIdE, i64 0, i64 %6
  %8 = load i8*, i8** %7, align 8
  ret i8* %8

9:                                                ; preds = %2
  ret i8* null
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare i32 @_ZNK5blink12WebCryptoKey7GetTypeEv(%"class.blink::WebCryptoKey"*) local_unnamed_addr #5

declare void @_ZN9webcrypto6Status22ErrorUnexpectedKeyTypeEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #5

declare i32 @EVP_PKEY_encrypt_init(%struct.evp_pkey_ctx_st*) local_unnamed_addr #5

declare i32 @EVP_PKEY_encrypt(%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

declare %struct.evp_pkey_st* @_ZN9webcrypto11GetEVP_PKEYERKN5blink12WebCryptoKeyE(%"class.blink::WebCryptoKey"* dereferenceable(8)) local_unnamed_addr #5

declare %struct.env_md_st* @_ZN9webcrypto9GetDigestERKN5blink18WebCryptoAlgorithmE(%"class.blink::WebCryptoAlgorithm"* dereferenceable(8)) local_unnamed_addr #5

declare dereferenceable(8) %"class.blink::WebCryptoKeyAlgorithm"* @_ZNK5blink12WebCryptoKey9AlgorithmEv(%"class.blink::WebCryptoKey"*) local_unnamed_addr #5

declare %"class.blink::WebCryptoRsaHashedKeyAlgorithmParams"* @_ZNK5blink21WebCryptoKeyAlgorithm15RsaHashedParamsEv(%"class.blink::WebCryptoKeyAlgorithm"*) local_unnamed_addr #5

declare void @_ZN9webcrypto6Status16ErrorUnsupportedEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #5

declare %struct.evp_pkey_ctx_st* @EVP_PKEY_CTX_new(%struct.evp_pkey_st*, %struct.engine_st*) local_unnamed_addr #5

declare i32 @EVP_PKEY_CTX_set_rsa_padding(%struct.evp_pkey_ctx_st*, i32) local_unnamed_addr #5

declare i32 @EVP_PKEY_CTX_set_rsa_oaep_md(%struct.evp_pkey_ctx_st*, %struct.env_md_st*) local_unnamed_addr #5

declare i32 @EVP_PKEY_CTX_set_rsa_mgf1_md(%struct.evp_pkey_ctx_st*, %struct.env_md_st*) local_unnamed_addr #5

declare void @_ZN9webcrypto6Status14OperationErrorEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #5

declare %"class.blink::WebCryptoRsaOaepParams"* @_ZNK5blink18WebCryptoAlgorithm13RsaOaepParamsEv(%"class.blink::WebCryptoAlgorithm"*) local_unnamed_addr #5

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #5

declare i32 @EVP_PKEY_CTX_set0_rsa_oaep_label(%struct.evp_pkey_ctx_st*, i8*, i64) local_unnamed_addr #5

declare void @_ZN9webcrypto6Status7SuccessEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #5

declare void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"*, %"class.base::Location"* dereferenceable(32)) unnamed_addr #5

declare void @_ZN6crypto17EnsureOpenSSLInitEv() local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %8 to i8*
  %13 = icmp eq i64 %1, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds i8, i8* %12, i64 %1
  %16 = sub i64 %1, %8
  %17 = getelementptr i8, i8* %12, i64 %16
  %18 = ptrtoint i8* %17 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 %18, i1 false) #10
  %19 = ptrtoint i8* %15 to i64
  br label %20

20:                                               ; preds = %11, %14
  %21 = phi i64 [ %19, %14 ], [ %8, %11 ]
  store i64 %21, i64* %7, align 8
  br label %68

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::vector"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %8, %24
  %26 = add i64 %25, %1
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #11
  unreachable

30:                                               ; preds = %22
  %31 = sub i64 %5, %24
  %32 = icmp ult i64 %31, 4611686018427387903
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = shl i64 %31, 1
  %35 = icmp ult i64 %34, %26
  %36 = select i1 %35, i64 %26, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %30, %33
  %39 = phi i64 [ %36, %33 ], [ 9223372036854775807, %30 ]
  %40 = tail call i8* @_Znwm(i64 %39) #9
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi i64 [ %39, %38 ], [ 0, %33 ]
  %43 = phi i8* [ %40, %38 ], [ null, %33 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %25
  %45 = ptrtoint i8* %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %42
  %47 = getelementptr inbounds i8, i8* %44, i64 %1
  %48 = sub i64 %1, %45
  %49 = getelementptr i8, i8* %44, i64 %48
  %50 = ptrtoint i8* %49 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 %50, i1 false) #10
  %51 = ptrtoint i8* %46 to i64
  %52 = ptrtoint i8* %47 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = load i64, i64* %7, align 8
  %56 = ptrtoint i8* %54 to i64
  %57 = sub i64 %55, %56
  %58 = sub i64 0, %57
  %59 = getelementptr inbounds i8, i8* %44, i64 %58
  %60 = ptrtoint i8* %59 to i64
  %61 = icmp sgt i64 %57, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %41
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %54, i64 %57, i1 false) #10
  %63 = load i8*, i8** %53, align 8
  br label %64

64:                                               ; preds = %41, %62
  %65 = phi i8* [ %54, %41 ], [ %63, %62 ]
  store i64 %60, i64* %23, align 8
  store i64 %52, i64* %7, align 8
  store i64 %51, i64* %4, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %68, label %67

67:                                               ; preds = %64
  tail call void @_ZdlPv(i8* nonnull %65) #9
  br label %68

68:                                               ; preds = %67, %64, %20
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

declare void @EVP_PKEY_CTX_free(%struct.evp_pkey_ctx_st*) local_unnamed_addr #5

declare void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* dereferenceable(32)) local_unnamed_addr #5

declare i32 @EVP_PKEY_decrypt_init(%struct.evp_pkey_ctx_st*) local_unnamed_addr #5

declare i32 @EVP_PKEY_decrypt(%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN9webcrypto12_GLOBAL__N_120CommonEncryptDecryptEPFiP15evp_pkey_ctx_stEPFiS2_PhPmPKhmERKN5blink18WebCryptoAlgorithmERKNSB_12WebCryptoKeyERKNS_10CryptoDataEPNSt3__16vectorIhNSL_9allocatorIhEEEE: argument 0"}
!4 = distinct !{!4, !"_ZN9webcrypto12_GLOBAL__N_120CommonEncryptDecryptEPFiP15evp_pkey_ctx_stEPFiS2_PhPmPKhmERKN5blink18WebCryptoAlgorithmERKNSB_12WebCryptoKeyERKNS_10CryptoDataEPNSt3__16vectorIhNSL_9allocatorIhEEEE"}
!5 = !{i32 (%struct.evp_pkey_ctx_st*)* @EVP_PKEY_decrypt_init, i32 (%struct.evp_pkey_ctx_st*)* @EVP_PKEY_encrypt_init}
!6 = !{i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)* @EVP_PKEY_decrypt, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)* @EVP_PKEY_encrypt}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN9webcrypto12_GLOBAL__N_120CommonEncryptDecryptEPFiP15evp_pkey_ctx_stEPFiS2_PhPmPKhmERKN5blink18WebCryptoAlgorithmERKNSB_12WebCryptoKeyERKNS_10CryptoDataEPNSt3__16vectorIhNSL_9allocatorIhEEEE: argument 0"}
!9 = distinct !{!9, !"_ZN9webcrypto12_GLOBAL__N_120CommonEncryptDecryptEPFiP15evp_pkey_ctx_stEPFiS2_PhPmPKhmERKN5blink18WebCryptoAlgorithmERKNSB_12WebCryptoKeyERKNS_10CryptoDataEPNSt3__16vectorIhNSL_9allocatorIhEEEE"}
