; ModuleID = '../../third_party/boringssl/src/ssl/ssl_lib.cc'
source_filename = "../../third_party/boringssl/src/ssl/ssl_lib.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.CRYPTO_EX_DATA_CLASS = type { %struct.CRYPTO_STATIC_MUTEX, %struct.stack_st_CRYPTO_EX_DATA_FUNCS*, i8 }
%struct.CRYPTO_STATIC_MUTEX = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%struct.stack_st_CRYPTO_EX_DATA_FUNCS = type opaque
%struct.ssl_ctx_st = type <{ %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_X509_METHOD"*, %union.crypto_mutex_st, i16, i16, [4 x i8], %struct.ssl_quic_method_st*, %"class.std::__1::unique_ptr.5", %struct.x509_store_st*, %struct.lhash_st_SSL_SESSION*, i64, %struct.ssl_session_st*, %struct.ssl_session_st*, i32, i32, i32, i32, i32 (%struct.ssl_st*, %struct.ssl_session_st*)*, void (%struct.ssl_ctx_st*, %struct.ssl_session_st*)*, %struct.ssl_session_st* (%struct.ssl_st*, i8*, i32, i32*)*, i32, [4 x i8], i32 (%struct.x509_store_ctx_st*, i8*)*, i8*, i32 (%struct.ssl_st*, i8*)*, i32 (i8*, i32, i32, i8*)*, i8*, i32 (%struct.ssl_st*, %struct.x509_st**, %struct.evp_pkey_st**)*, void (%struct.ssl_st*, %struct.evp_pkey_st**)*, %struct.crypto_ex_data_st, void (%struct.ssl_st*, i32, i32)*, %"class.std::__1::unique_ptr.23", %struct.stack_st_X509_NAME*, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr.15", void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)*, i8*, i32, [4 x i8], i32 (i32, %struct.x509_store_ctx_st*)*, %struct.X509_VERIFY_PARAM_st*, i32 (%struct.ssl_early_callback_ctx*)*, i32 (%struct.ssl_early_callback_ctx*)*, i8, i8, i16, [4 x i8], i32 (%struct.ssl_st*, i32*, i8*)*, i8*, %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", i32 (%struct.ssl_st*, i8*, i8*, %struct.evp_cipher_ctx_st*, %struct.hmac_ctx_st*, i32)*, %"class.std::__1::unique_ptr.29", i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, i32 (%struct.ssl_st*, i8**, i32*, i8*)*, i8*, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)*, i8*, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)*, i8*, %"class.bssl::Array", %"class.std::__1::unique_ptr.84", %"class.bssl::GrowableArray.114", %"class.bssl::Array.56", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.63", void (%struct.ssl_st*, i8*)*, void (%struct.ssl_st*, %struct.timeval*)*, %struct.crypto_buffer_pool_st*, %struct.ssl_ticket_aead_method_st*, i32 (%struct.ssl_st*, i8*)*, i8*, %"class.bssl::Array.56", i16, [6 x i8] }>
%"struct.bssl::SSL_PROTOCOL_METHOD" = type { i8, i1 (%struct.ssl_st*)*, {}*, i1 (%struct.ssl_st*, %"struct.bssl::SSLMessage"*)*, {}*, i1 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, %"class.bssl::Span"*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, i32 (%struct.ssl_st*)*, i1 (%struct.ssl_st*, %struct.cbb_st*, %struct.cbb_st*, i8)*, i1 (%struct.ssl_st*, %struct.cbb_st*, %"class.bssl::Array"*)*, i1 (%struct.ssl_st*, %"class.bssl::Array"*)*, i1 (%struct.ssl_st*)*, i32 (%struct.ssl_st*)*, {}*, i1 (%struct.ssl_st*, i32, %"class.bssl::SSLAEADContext"*, i8*, i64)*, i1 (%struct.ssl_st*, i32, %"class.bssl::SSLAEADContext"*, i8*, i64)* }
%struct.ssl_st = type <{ %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"class.std::__1::unique_ptr.2", i16, i16, [4 x i8], %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.91", i32 (%"struct.bssl::SSL_HANDSHAKE"*)*, %"struct.bssl::SSL3_STATE"*, %"struct.bssl::DTLS1_STATE"*, void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)*, i8*, i32, [4 x i8], %"class.std::__1::unique_ptr.58", void (%struct.ssl_st*, i32, i32)*, %"class.std::__1::unique_ptr.106", %"class.std::__1::unique_ptr.106", %struct.crypto_ex_data_st, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr.29", %struct.ssl_quic_method_st*, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.bssl::SSL_CONFIG"* }
%"struct.bssl::SSL_CONFIG" = type <{ %struct.ssl_st*, i16, i16, [4 x i8], %struct.X509_VERIFY_PARAM_st*, %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.15", i32 (i32, %struct.x509_store_ctx_st*)*, i32 (%struct.ssl_st*, i8*)*, %"class.std::__1::unique_ptr.29", i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, %"class.std::__1::unique_ptr.23", %struct.stack_st_X509_NAME*, %"class.bssl::Array.56", %"class.std::__1::unique_ptr.18", %"class.bssl::Array", %"class.bssl::GrowableArray.82", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array.56", %"class.std::__1::unique_ptr.84", i8, i16, [5 x i8] }>
%"class.bssl::GrowableArray.82" = type { i64, %"class.bssl::Array.83" }
%"class.bssl::Array.83" = type { %"struct.bssl::ALPSConfig"*, i64 }
%"struct.bssl::ALPSConfig" = type { %"class.bssl::Array", %"class.bssl::Array" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %struct.bio_st* }
%struct.bio_st = type { %struct.bio_method_st*, i32, i32, i32, i32, i32, i32, i8*, %struct.bio_st*, i64, i64 }
%struct.bio_method_st = type { i32, i8*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*)*, i32 (%struct.bio_st*, i8*, i32)*, i64 (%struct.bio_st*, i32, i64, i8*)*, i32 (%struct.bio_st*)*, i32 (%struct.bio_st*)*, i64 (%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* }
%"struct.bssl::SSL_HANDSHAKE" = type <{ %struct.ssl_st*, %"struct.bssl::SSL_CONFIG"*, i32, i32, i32, i16, i16, i64, [48 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], %union.anon.39, i16, [2 x i8], %"class.std::__1::unique_ptr.40", [2 x %"class.std::__1::unique_ptr.45"], %"class.bssl::SSLTranscript", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array.56", %"class.bssl::Array.56", %"class.bssl::Array.56", %"class.bssl::Array", i16, [6 x i8], %"class.bssl::internal::StackAllocated.57", %"class.bssl::Array", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.23", %struct.stack_st_X509_NAME*, %"class.bssl::Array", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.63", %struct.ssl_cipher_st*, %"class.bssl::Array", %"class.std::__1::unique_ptr.70", i32, i16, i16, i16, i8, [32 x i8], i8, [6 x i8], [6 x i8] }>
%union.anon.39 = type { i32 }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %struct.err_save_state_st* }
%struct.err_save_state_st = type opaque
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.bssl::SSLKeyShare"* }
%"class.bssl::SSLKeyShare" = type { i32 (...)** }
%"class.bssl::SSLTranscript" = type { %"class.std::__1::unique_ptr.50", %"class.bssl::internal::StackAllocated.55" }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %struct.buf_mem_st* }
%struct.buf_mem_st = type { i64, i8*, i64 }
%"class.bssl::internal::StackAllocated.55" = type { %struct.env_md_ctx_st }
%struct.env_md_ctx_st = type { %struct.env_md_st*, i8*, %struct.evp_pkey_ctx_st*, %struct.evp_md_pctx_ops* }
%struct.env_md_st = type opaque
%struct.evp_pkey_ctx_st = type opaque
%struct.evp_md_pctx_ops = type opaque
%"class.bssl::internal::StackAllocated.57" = type { %struct.evp_hpke_ctx_st }
%struct.evp_hpke_ctx_st = type { %struct.evp_hpke_aead_st*, %struct.evp_hpke_kdf_st*, %struct.evp_aead_ctx_st, [24 x i8], [64 x i8], i64, i32 }
%struct.evp_hpke_aead_st = type opaque
%struct.evp_hpke_kdf_st = type opaque
%struct.evp_aead_ctx_st = type { %struct.evp_aead_st*, %union.evp_aead_ctx_st_state, i8 }
%struct.evp_aead_st = type opaque
%union.evp_aead_ctx_st_state = type { i64, [576 x i8] }
%struct.ssl_cipher_st = type { i8*, i8*, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.bssl::SSL_HANDSHAKE_HINTS"* }
%"struct.bssl::SSL_HANDSHAKE_HINTS" = type <{ %"class.bssl::Array", i16, [6 x i8], %"class.bssl::Array", %"class.bssl::Array", i16, [6 x i8], %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", i8, [7 x i8] }>
%"struct.bssl::SSL3_STATE" = type <{ [8 x i8], [8 x i8], [32 x i8], [32 x i8], %"class.bssl::SSLBuffer", %"class.bssl::SSLBuffer", %"class.bssl::Span", i32, i32, i32, i32, i8*, i32, i32, %"class.std::__1::unique_ptr.40", i32, i32, i32, i32, i16, i8, i8, i8, i16, i8, %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50", i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.96", [48 x i8], [48 x i8], [48 x i8], i8, i8, i8, [12 x i8], i8, i8, [12 x i8], [2 x i8], i8, %"class.std::__1::unique_ptr.58", %"class.bssl::Array", %"class.bssl::Array", %"class.std::__1::unique_ptr.29", [64 x i8], %"class.bssl::Array", %struct.srtp_protection_profile_st* }>
%"class.bssl::SSLBuffer" = type <{ i8*, i16, i16, i16, [5 x i8], i8, [4 x i8] }>
%"class.bssl::Span" = type { i8*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.bssl::SSLAEADContext"* }
%"class.bssl::SSLAEADContext" = type <{ %struct.ssl_cipher_st*, %"class.bssl::internal::StackAllocated", [12 x i8], i8, i8, i16, i8, i8, [6 x i8] }>
%"class.bssl::internal::StackAllocated" = type { %struct.evp_aead_ctx_st }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"struct.bssl::SSL_HANDSHAKE"* }
%struct.srtp_protection_profile_st = type { i8*, i64 }
%"struct.bssl::DTLS1_STATE" = type <{ i8, [256 x i8], [7 x i8], i64, i16, i16, [4 x i8], %"struct.bssl::DTLS1_BITMAP", i16, i16, [8 x i8], [4 x i8], %"class.std::__1::unique_ptr", [7 x %"class.std::__1::unique_ptr.101"], [7 x %"struct.bssl::DTLS_OUTGOING_MESSAGE"], i8, i8, [2 x i8], i32, i32, i32, %"struct.bssl::OPENSSL_timeval", i32, [4 x i8] }>
%"struct.bssl::DTLS1_BITMAP" = type { i64, i64 }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.bssl::hm_fragment"* }
%"struct.bssl::hm_fragment" = type { i8, i16, i32, i8*, i8* }
%"struct.bssl::DTLS_OUTGOING_MESSAGE" = type <{ i8*, i32, i16, i8, i8 }>
%"struct.bssl::OPENSSL_timeval" = type { i64, i32 }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %struct.ssl_session_st* }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %struct.ssl_ctx_st* }
%"struct.bssl::SSLMessage" = type { i8, i8, %struct.cbs_st, %struct.cbs_st }
%struct.cbs_st = type { i8*, i64 }
%struct.cbb_st = type { %struct.cbb_buffer_st*, %struct.cbb_st*, i64, i8, i8, i8 }
%struct.cbb_buffer_st = type { i8*, i64, i64, i8, i8 }
%"struct.bssl::SSL_X509_METHOD" = type { i1 (%struct.stack_st_CRYPTO_BUFFER*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*, %"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, i1 (%struct.ssl_session_st*)*, i1 (%struct.ssl_session_st*, %struct.ssl_session_st*)*, void (%struct.ssl_session_st*)*, i1 (%struct.ssl_session_st*, %"struct.bssl::SSL_HANDSHAKE"*, i8*)*, void (%"struct.bssl::SSL_HANDSHAKE"*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*)*, void (%"struct.bssl::SSL_CONFIG"*)*, void (%"struct.bssl::SSL_CONFIG"*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*)*, i1 (%struct.ssl_ctx_st*)*, void (%struct.ssl_ctx_st*)*, void (%struct.ssl_ctx_st*)* }
%struct.stack_st_CRYPTO_BUFFER = type opaque
%"struct.bssl::CERT" = type { %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.23", %struct.stack_st_X509*, %struct.x509_st*, %struct.x509_st*, %struct.ssl_private_key_method_st*, %"struct.bssl::SSL_X509_METHOD"*, %"class.bssl::Array.56", i32 (%struct.ssl_st*, i8*)*, i8*, %struct.x509_store_st*, %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34", i8, [32 x i8], %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.18", %struct.ssl_private_key_method_st* }
%struct.stack_st_X509 = type opaque
%struct.x509_st = type { %struct.x509_cinf_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, %struct.crypto_ex_data_st, i64, i64, i64, i64, i64, i64, %struct.asn1_string_st*, %struct.AUTHORITY_KEYID_st*, %struct.X509_POLICY_CACHE_st*, %struct.stack_st_DIST_POINT*, %struct.stack_st_GENERAL_NAME*, %struct.NAME_CONSTRAINTS_st*, [20 x i8], %struct.x509_cert_aux_st*, %struct.crypto_buffer_st*, %union.crypto_mutex_st }
%struct.x509_cinf_st = type { %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.X509_val_st*, %struct.X509_name_st*, %struct.X509_pubkey_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.X509_val_st = type opaque
%struct.X509_name_st = type { %struct.stack_st_X509_NAME_ENTRY*, i32, %struct.buf_mem_st*, i8*, i32 }
%struct.stack_st_X509_NAME_ENTRY = type opaque
%struct.X509_pubkey_st = type opaque
%struct.stack_st_X509_EXTENSION = type opaque
%struct.ASN1_ENCODING_st = type { i8*, i64, i32, i8 }
%struct.X509_algor_st = type { %struct.asn1_object_st*, %struct.asn1_type_st* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_type_st = type { i32, %union.anon.28 }
%union.anon.28 = type { i8* }
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.AUTHORITY_KEYID_st = type opaque
%struct.X509_POLICY_CACHE_st = type opaque
%struct.stack_st_DIST_POINT = type opaque
%struct.stack_st_GENERAL_NAME = type opaque
%struct.NAME_CONSTRAINTS_st = type opaque
%struct.x509_cert_aux_st = type opaque
%struct.crypto_buffer_st = type opaque
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %struct.crypto_buffer_st* }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.bssl::DC"* }
%"struct.bssl::DC" = type { %"class.std::__1::unique_ptr.34", i16, %"class.std::__1::unique_ptr.18" }
%struct.ssl_private_key_method_st = type { i32 (%struct.ssl_st*, i8*, i64*, i64, i16, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64)* }
%union.crypto_mutex_st = type { double, [48 x i8] }
%struct.ssl_quic_method_st = type { i32 (%struct.ssl_st*, i32, %struct.ssl_cipher_st*, i8*, i64)*, i32 (%struct.ssl_st*, i32, %struct.ssl_cipher_st*, i8*, i64)*, i32 (%struct.ssl_st*, i32, i8*, i64)*, i32 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i32, i8)* }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.bssl::SSLCipherPreferenceList"* }
%"struct.bssl::SSLCipherPreferenceList" = type { %"class.std::__1::unique_ptr.8", i8* }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %struct.stack_st_SSL_CIPHER* }
%struct.stack_st_SSL_CIPHER = type opaque
%struct.x509_store_st = type { i32, %struct.stack_st_X509_OBJECT*, %union.crypto_mutex_st, %struct.stack_st_X509*, %struct.stack_st_X509_LOOKUP*, %struct.X509_VERIFY_PARAM_st*, i32 (%struct.x509_store_ctx_st*)*, i32 (i32, %struct.x509_store_ctx_st*)*, i32 (%struct.x509_st**, %struct.x509_store_ctx_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st**, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*, %struct.x509_st*)*, %struct.stack_st_X509* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, %struct.stack_st_X509_CRL* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, i32 (%struct.x509_store_ctx_st*)*, i32 }
%struct.stack_st_X509_OBJECT = type opaque
%struct.stack_st_X509_LOOKUP = type opaque
%struct.x509_store_ctx_st = type { %struct.x509_store_st*, %struct.x509_st*, %struct.stack_st_X509*, %struct.stack_st_X509_CRL*, %struct.X509_VERIFY_PARAM_st*, i8*, {}*, i32 (i32, %struct.x509_store_ctx_st*)*, i32 (%struct.x509_st**, %struct.x509_store_ctx_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)*, {}*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st**, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*, %struct.x509_st*)*, {}*, %struct.stack_st_X509* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, %struct.stack_st_X509_CRL* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, {}*, i32, i32, %struct.stack_st_X509*, %struct.X509_POLICY_TREE_st*, i32, i32, i32, %struct.x509_st*, %struct.x509_st*, %struct.X509_crl_st*, i32, i32, %struct.x509_store_ctx_st*, %struct.crypto_ex_data_st }
%struct.stack_st_X509_CRL = type opaque
%struct.X509_POLICY_TREE_st = type opaque
%struct.X509_crl_st = type { %struct.X509_crl_info_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, i32, %struct.AUTHORITY_KEYID_st*, %struct.ISSUING_DIST_POINT_st*, i32, i32, %struct.asn1_string_st*, %struct.asn1_string_st*, [20 x i8], %struct.stack_st_GENERAL_NAMES*, %struct.x509_crl_method_st*, i8* }
%struct.X509_crl_info_st = type { %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_REVOKED*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.stack_st_X509_REVOKED = type opaque
%struct.ISSUING_DIST_POINT_st = type opaque
%struct.stack_st_GENERAL_NAMES = type opaque
%struct.x509_crl_method_st = type opaque
%struct.lhash_st_SSL_SESSION = type opaque
%struct.ssl_session_st = type { i32, i16, i16, i16, i32, [48 x i8], i32, [32 x i8], i8, [32 x i8], %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.23", %"struct.bssl::SSL_X509_METHOD"*, %struct.x509_st*, %struct.stack_st_X509*, %struct.stack_st_X509*, i64, i32, i32, i64, %struct.ssl_cipher_st*, %struct.crypto_ex_data_st, %struct.ssl_session_st*, %struct.ssl_session_st*, %"class.bssl::Array", %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34", [32 x i8], [64 x i8], i8, i32, i32, i32, %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", i8, %"class.bssl::Array" }
%struct.evp_pkey_st = type { i32, i32, %union.anon, %struct.evp_pkey_asn1_method_st* }
%union.anon = type { i8* }
%struct.evp_pkey_asn1_method_st = type opaque
%struct.crypto_ex_data_st = type { %struct.stack_st_void* }
%struct.stack_st_void = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %struct.stack_st_CRYPTO_BUFFER* }
%struct.stack_st_X509_NAME = type opaque
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.bssl::CERT"* }
%struct.X509_VERIFY_PARAM_st = type { i8*, i64, i64, i64, i32, i32, i32, %struct.stack_st_ASN1_OBJECT*, %struct.X509_VERIFY_PARAM_ID_st* }
%struct.stack_st_ASN1_OBJECT = type opaque
%struct.X509_VERIFY_PARAM_ID_st = type opaque
%struct.ssl_early_callback_ctx = type { %struct.ssl_st*, i8*, i64, i16, i8*, i64, i8*, i64, i8*, i64, i8*, i64, i8*, i64 }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.bssl::TicketKey"* }
%"struct.bssl::TicketKey" = type { [16 x i8], [16 x i8], [16 x i8], i64 }
%struct.evp_cipher_ctx_st = type { %struct.evp_cipher_st*, i8*, i8*, i32, i32, i32, [16 x i8], [16 x i8], [32 x i8], i32, i32, i32, [32 x i8] }
%struct.evp_cipher_st = type { i32, i32, i32, i32, i32, i32, i8*, i32 (%struct.evp_cipher_ctx_st*, i8*, i8*, i32)*, i32 (%struct.evp_cipher_ctx_st*, i8*, i8*, i64)*, void (%struct.evp_cipher_ctx_st*)*, i32 (%struct.evp_cipher_ctx_st*, i32, i32, i8*)* }
%struct.hmac_ctx_st = type { %struct.env_md_st*, %struct.env_md_ctx_st, %struct.env_md_ctx_st, %struct.env_md_ctx_st }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { i8* }
%"class.bssl::Array" = type { i8*, i64 }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %struct.stack_st_SRTP_PROTECTION_PROFILE* }
%struct.stack_st_SRTP_PROTECTION_PROFILE = type opaque
%"class.bssl::GrowableArray.114" = type { i64, %"class.bssl::Array.115" }
%"class.bssl::Array.115" = type { %"struct.bssl::CertCompressionAlg"*, i64 }
%"struct.bssl::CertCompressionAlg" = type <{ i32 (%struct.ssl_st*, %struct.cbb_st*, i8*, i64)*, i32 (%struct.ssl_st*, %struct.crypto_buffer_st**, i64, i8*, i64)*, i16, [6 x i8] }>
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %struct.evp_pkey_st* }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %struct.ssl_ech_server_config_list_st* }
%struct.ssl_ech_server_config_list_st = type <{ %"class.bssl::GrowableArray", i32, [4 x i8] }>
%"class.bssl::GrowableArray" = type { i64, %"class.bssl::Array.66" }
%"class.bssl::Array.66" = type { %"class.std::__1::unique_ptr.67"*, i64 }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.bssl::ECHServerConfig"* }
%"class.bssl::ECHServerConfig" = type <{ %"class.bssl::Array", %"class.bssl::Span.1", %"class.bssl::internal::StackAllocated.130", i8, i8, [6 x i8] }>
%"class.bssl::Span.1" = type { i8*, i64 }
%"class.bssl::internal::StackAllocated.130" = type { %struct.evp_hpke_key_st }
%struct.evp_hpke_key_st = type { %struct.evp_hpke_kem_st*, [32 x i8], [32 x i8] }
%struct.evp_hpke_kem_st = type opaque
%struct.timeval = type { i64, i64 }
%struct.crypto_buffer_pool_st = type opaque
%struct.ssl_ticket_aead_method_st = type { i64 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)* }
%"class.bssl::Array.56" = type { i16*, i64 }
%struct.ssl_method_st = type { i16, %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_X509_METHOD"* }
%"class.bssl::internal::StackAllocated.118" = type { %struct.cbb_st }
%struct.ossl_init_settings_st = type opaque
%struct.lhash_st = type opaque
%struct.stack_st = type { i64, i8**, i32, i64, i32 (i8**, i8**)* }
%struct.dh_st = type { %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, i32, %union.crypto_mutex_st, %struct.bn_mont_ctx_st*, %struct.bignum_st*, %struct.bignum_st*, i8*, i32, %struct.bignum_st*, i32, i32 }
%struct.bn_mont_ctx_st = type { %struct.bignum_st, %struct.bignum_st, [2 x i64] }
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
%struct.ec_key_st = type opaque
%struct.ec_group_st = type opaque
%struct.rsa_st = type { %struct.rsa_meth_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.crypto_ex_data_st, i32, i32, %union.crypto_mutex_st, %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, i32, %struct.bn_blinding_st**, i8*, i64, i8 }
%struct.rsa_meth_st = type { %struct.openssl_method_common_st, i8*, i32 (%struct.rsa_st*)*, i32 (%struct.rsa_st*)*, i64 (%struct.rsa_st*)*, i32 (i32, i8*, i32, i8*, i32*, %struct.rsa_st*)*, i32 (%struct.rsa_st*, i64*, i8*, i64, i8*, i64, i32)*, i32 (%struct.rsa_st*, i64*, i8*, i64, i8*, i64, i32)*, i32 (%struct.rsa_st*, i8*, i8*, i64)*, i32 }
%struct.openssl_method_common_st = type { i32, i8 }
%struct.bn_blinding_st = type opaque

$_ZN4bssl13GrowableArrayINSt3__110unique_ptrINS_15ECHServerConfigENS_8internal7DeleterIS3_EEEEE4PushES7_ = comdat any

$_ZZN4bssl8internal11DeleterImplI22stack_st_CRYPTO_BUFFERvE4FreeEPS2_ENUlPFvPvES5_E_8__invokeES7_S5_ = comdat any

$_ZN4bssl13GrowableArrayINSt3__110unique_ptrINS_15ECHServerConfigENS_8internal7DeleterIS3_EEEEE9MaybeGrowEv = comdat any

$_ZN4bssl5ArrayINSt3__110unique_ptrINS_15ECHServerConfigENS_8internal7DeleterIS3_EEEEE4InitEm = comdat any

$_ZN4bssl13GrowableArrayINS_10ALPSConfigEE9MaybeGrowEv = comdat any

$_ZN4bssl5ArrayINS_10ALPSConfigEE4InitEm = comdat any

$_ZN4bssl13GrowableArrayINS_18CertCompressionAlgEE9MaybeGrowEv = comdat any

@.str = private unnamed_addr constant [47 x i8] c"../../third_party/boringssl/src/ssl/ssl_lib.cc\00", align 1
@_ZN4bsslL23g_ex_data_class_ssl_ctxE = internal global %struct.CRYPTO_EX_DATA_CLASS { %struct.CRYPTO_STATIC_MUTEX zeroinitializer, %struct.stack_st_CRYPTO_EX_DATA_FUNCS* null, i8 1 }, align 8
@.str.1 = private unnamed_addr constant [4 x i8] c"ALL\00", align 1
@_ZN4bsslL19g_ex_data_class_sslE = internal global %struct.CRYPTO_EX_DATA_CLASS { %struct.CRYPTO_STATIC_MUTEX zeroinitializer, %struct.stack_st_CRYPTO_EX_DATA_FUNCS* null, i8 1 }, align 8
@.str.2 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"disabled\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"accepted\00", align 1
@.str.5 = private unnamed_addr constant [17 x i8] c"protocol_version\00", align 1
@.str.6 = private unnamed_addr constant [14 x i8] c"peer_declined\00", align 1
@.str.7 = private unnamed_addr constant [19 x i8] c"no_session_offered\00", align 1
@.str.8 = private unnamed_addr constant [20 x i8] c"session_not_resumed\00", align 1
@.str.9 = private unnamed_addr constant [24 x i8] c"unsupported_for_session\00", align 1
@.str.10 = private unnamed_addr constant [20 x i8] c"hello_retry_request\00", align 1
@.str.11 = private unnamed_addr constant [14 x i8] c"alpn_mismatch\00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"channel_id\00", align 1
@.str.13 = private unnamed_addr constant [16 x i8] c"ticket_age_skew\00", align 1
@.str.14 = private unnamed_addr constant [24 x i8] c"quic_parameter_mismatch\00", align 1
@.str.15 = private unnamed_addr constant [14 x i8] c"alps_mismatch\00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c"NONE\00", align 1
@.str.17 = private unnamed_addr constant [4 x i8] c"SSL\00", align 1
@.str.18 = private unnamed_addr constant [10 x i8] c"WANT_READ\00", align 1
@.str.19 = private unnamed_addr constant [11 x i8] c"WANT_WRITE\00", align 1
@.str.20 = private unnamed_addr constant [17 x i8] c"WANT_X509_LOOKUP\00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c"SYSCALL\00", align 1
@.str.22 = private unnamed_addr constant [12 x i8] c"ZERO_RETURN\00", align 1
@.str.23 = private unnamed_addr constant [13 x i8] c"WANT_CONNECT\00", align 1
@.str.24 = private unnamed_addr constant [12 x i8] c"WANT_ACCEPT\00", align 1
@.str.25 = private unnamed_addr constant [23 x i8] c"WANT_CHANNEL_ID_LOOKUP\00", align 1
@.str.26 = private unnamed_addr constant [16 x i8] c"PENDING_SESSION\00", align 1
@.str.27 = private unnamed_addr constant [20 x i8] c"PENDING_CERTIFICATE\00", align 1
@.str.28 = private unnamed_addr constant [27 x i8] c"WANT_PRIVATE_KEY_OPERATION\00", align 1
@.str.29 = private unnamed_addr constant [15 x i8] c"PENDING_TICKET\00", align 1
@.str.30 = private unnamed_addr constant [20 x i8] c"EARLY_DATA_REJECTED\00", align 1
@.str.31 = private unnamed_addr constant [24 x i8] c"WANT_CERTIFICATE_VERIFY\00", align 1
@.str.32 = private unnamed_addr constant [8 x i8] c"HANDOFF\00", align 1
@.str.33 = private unnamed_addr constant [9 x i8] c"HANDBACK\00", align 1
@.str.34 = private unnamed_addr constant [17 x i8] c"WANT_RENEGOTIATE\00", align 1
@.str.35 = private unnamed_addr constant [22 x i8] c"HANDSHAKE_HINTS_READY\00", align 1
@_ZZN4bsslL11cbb_add_hexEP6cbb_stNS_4SpanIKhEEE8hextable = internal unnamed_addr constant [17 x i8] c"0123456789abcdef\00", align 16
@.str.36 = private unnamed_addr constant [47 x i8] c"../../third_party/boringssl/src/ssl/internal.h\00", align 1
@switch.table.SSL_early_data_reason_string = private unnamed_addr constant [15 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i8* null, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.15, i64 0, i64 0)], align 8
@switch.table.SSL_error_description = private unnamed_addr constant [21 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.25, i64 0, i64 0), i8* null, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.35, i64 0, i64 0)], align 8

@_ZN10ssl_ctx_stC1EPK13ssl_method_st = hidden unnamed_addr alias void (%struct.ssl_ctx_st*, %struct.ssl_method_st*), void (%struct.ssl_ctx_st*, %struct.ssl_method_st*)* @_ZN10ssl_ctx_stC2EPK13ssl_method_st
@_ZN10ssl_ctx_stD1Ev = hidden unnamed_addr alias void (%struct.ssl_ctx_st*), void (%struct.ssl_ctx_st*)* @_ZN10ssl_ctx_stD2Ev
@_ZN6ssl_stC1EP10ssl_ctx_st = hidden unnamed_addr alias void (%struct.ssl_st*, %struct.ssl_ctx_st*), void (%struct.ssl_st*, %struct.ssl_ctx_st*)* @_ZN6ssl_stC2EP10ssl_ctx_st
@_ZN6ssl_stD1Ev = hidden unnamed_addr alias void (%struct.ssl_st*), void (%struct.ssl_st*)* @_ZN6ssl_stD2Ev
@_ZN4bssl10SSL_CONFIGC1EP6ssl_st = hidden unnamed_addr alias void (%"struct.bssl::SSL_CONFIG"*, %struct.ssl_st*), void (%"struct.bssl::SSL_CONFIG"*, %struct.ssl_st*)* @_ZN4bssl10SSL_CONFIGC2EP6ssl_st
@_ZN4bssl10SSL_CONFIGD1Ev = hidden unnamed_addr alias void (%"struct.bssl::SSL_CONFIG"*), void (%"struct.bssl::SSL_CONFIG"*)* @_ZN4bssl10SSL_CONFIGD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl14CBBFinishArrayEP6cbb_stPNS_5ArrayIhEE(%struct.cbb_st*, %"class.bssl::Array"* nocapture) local_unnamed_addr #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %6 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  store i64 -6148914691236517206, i64* %4, align 8
  %7 = call i32 @CBB_finish(%struct.cbb_st* %0, i8** nonnull %3, i64* nonnull %4) #16
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %2
  call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 194) #16
  br label %18

10:                                               ; preds = %2
  %11 = bitcast i8** %3 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = load i64, i64* %4, align 8
  %14 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %1, i64 0, i32 1
  %15 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %1, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  call void @OPENSSL_free(i8* %16) #16
  %17 = bitcast %"class.bssl::Array"* %1 to i64*
  store i64 %12, i64* %17, align 8
  store i64 %13, i64* %14, align 8
  br label %18

18:                                               ; preds = %10, %9
  %19 = phi i1 [ true, %10 ], [ false, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  ret i1 %19
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @CBB_finish(%struct.cbb_st*, i8**, i64*) local_unnamed_addr #2

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4bssl21ssl_reset_error_stateEP6ssl_st(%struct.ssl_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %3 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 16
  store i32 0, i32* %4, align 4
  tail call void @ERR_clear_error() #16
  tail call void @ERR_clear_system_error() #16
  ret void
}

declare void @ERR_clear_error() local_unnamed_addr #2

declare void @ERR_clear_system_error() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4bssl18ssl_set_read_errorEP6ssl_st(%struct.ssl_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %3 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 12
  store i32 2, i32* %4, align 8
  %5 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %6 = tail call %struct.err_save_state_st* @ERR_save_state() #16
  %7 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %5, i64 0, i32 14, i32 0, i32 0, i32 0
  %8 = load %struct.err_save_state_st*, %struct.err_save_state_st** %7, align 8
  store %struct.err_save_state_st* %6, %struct.err_save_state_st** %7, align 8
  %9 = icmp eq %struct.err_save_state_st* %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %1
  tail call void @ERR_SAVE_STATE_free(%struct.err_save_state_st* nonnull %8) #16
  br label %11

11:                                               ; preds = %1, %10
  ret void
}

declare %struct.err_save_state_st* @ERR_save_state() local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4bssl13ssl_can_writeEPK6ssl_st(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %3 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 34, i32 0, i32 0, i32 0
  %5 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %4, align 8
  %6 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %5, i64 0, i32 46
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 32
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %7
  %13 = and i32 %9, 65536
  %14 = icmp ne i32 %13, 0
  br label %15

15:                                               ; preds = %7, %1, %12
  %16 = phi i1 [ true, %7 ], [ %14, %12 ], [ true, %1 ]
  ret i1 %16
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SSL_in_init(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %3 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 34, i32 0, i32 0, i32 0
  %5 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %4, align 8
  %6 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %5, i64 0, i32 46
  %9 = load i32, i32* %8, align 8
  %10 = lshr i32 %9, 5
  %11 = and i32 %10, 1
  %12 = xor i32 %11, 1
  br label %13

13:                                               ; preds = %1, %7
  %14 = phi i32 [ 0, %1 ], [ %12, %7 ]
  ret i32 %14
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4bssl12ssl_can_readEPK6ssl_st(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %3 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 34, i32 0, i32 0, i32 0
  %5 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %4, align 8
  %6 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %5, i64 0, i32 46
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 32
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %7
  %13 = trunc i32 %9 to i16
  %14 = icmp slt i16 %13, 0
  br label %15

15:                                               ; preds = %7, %1, %12
  %16 = phi i1 [ true, %7 ], [ %14, %12 ], [ true, %1 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4bssl18ssl_open_handshakeEP6ssl_stPmPhNS_4SpanIhEE(%struct.ssl_st*, i64*, i8*, i8*, i64) local_unnamed_addr #0 {
  store i64 0, i64* %1, align 8
  %6 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %7 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %8 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %7, i64 0, i32 12
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 2
  br i1 %10, label %11, label %14

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %7, i64 0, i32 14, i32 0, i32 0, i32 0
  %13 = load %struct.err_save_state_st*, %struct.err_save_state_st** %12, align 8
  tail call void @ERR_restore_state(%struct.err_save_state_st* %13) #16
  store i8 0, i8* %2, align 1
  br label %30

14:                                               ; preds = %5
  %15 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 0
  %16 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %15, align 8
  %17 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %16, i64 0, i32 6
  %18 = load i32 (%struct.ssl_st*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, i64*, i8*, i8*, i64)** %17, align 8
  %19 = tail call i32 %18(%struct.ssl_st* %0, i64* %1, i8* %2, i8* %3, i64 %4) #16
  %20 = icmp eq i32 %19, 4
  br i1 %20, label %21, label %30

21:                                               ; preds = %14
  %22 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %23 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %22, i64 0, i32 12
  store i32 2, i32* %23, align 8
  %24 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %25 = tail call %struct.err_save_state_st* @ERR_save_state() #16
  %26 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %24, i64 0, i32 14, i32 0, i32 0, i32 0
  %27 = load %struct.err_save_state_st*, %struct.err_save_state_st** %26, align 8
  store %struct.err_save_state_st* %25, %struct.err_save_state_st** %26, align 8
  %28 = icmp eq %struct.err_save_state_st* %27, null
  br i1 %28, label %30, label %29

29:                                               ; preds = %21
  tail call void @ERR_SAVE_STATE_free(%struct.err_save_state_st* nonnull %27) #16
  br label %30

30:                                               ; preds = %29, %21, %14, %11
  %31 = phi i32 [ 4, %11 ], [ %19, %14 ], [ 4, %21 ], [ 4, %29 ]
  ret i32 %31
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4bssl27ssl_open_change_cipher_specEP6ssl_stPmPhNS_4SpanIhEE(%struct.ssl_st*, i64*, i8*, i8*, i64) local_unnamed_addr #0 {
  store i64 0, i64* %1, align 8
  %6 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %7 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %8 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %7, i64 0, i32 12
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 2
  br i1 %10, label %11, label %14

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %7, i64 0, i32 14, i32 0, i32 0, i32 0
  %13 = load %struct.err_save_state_st*, %struct.err_save_state_st** %12, align 8
  tail call void @ERR_restore_state(%struct.err_save_state_st* %13) #16
  store i8 0, i8* %2, align 1
  br label %30

14:                                               ; preds = %5
  %15 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 0
  %16 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %15, align 8
  %17 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %16, i64 0, i32 7
  %18 = load i32 (%struct.ssl_st*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, i64*, i8*, i8*, i64)** %17, align 8
  %19 = tail call i32 %18(%struct.ssl_st* %0, i64* %1, i8* %2, i8* %3, i64 %4) #16
  %20 = icmp eq i32 %19, 4
  br i1 %20, label %21, label %30

21:                                               ; preds = %14
  %22 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %23 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %22, i64 0, i32 12
  store i32 2, i32* %23, align 8
  %24 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %25 = tail call %struct.err_save_state_st* @ERR_save_state() #16
  %26 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %24, i64 0, i32 14, i32 0, i32 0, i32 0
  %27 = load %struct.err_save_state_st*, %struct.err_save_state_st** %26, align 8
  store %struct.err_save_state_st* %25, %struct.err_save_state_st** %26, align 8
  %28 = icmp eq %struct.err_save_state_st* %27, null
  br i1 %28, label %30, label %29

29:                                               ; preds = %21
  tail call void @ERR_SAVE_STATE_free(%struct.err_save_state_st* nonnull %27) #16
  br label %30

30:                                               ; preds = %29, %21, %14, %11
  %31 = phi i32 [ 4, %11 ], [ %19, %14 ], [ 4, %21 ], [ 4, %29 ]
  ret i32 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4bssl17ssl_open_app_dataEP6ssl_stPNS_4SpanIhEEPmPhS3_(%struct.ssl_st*, %"class.bssl::Span"*, i64*, i8*, i8*, i64) local_unnamed_addr #0 {
  store i64 0, i64* %2, align 8
  %7 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %8 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %7, align 8
  %9 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %8, i64 0, i32 12
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 2
  br i1 %11, label %12, label %15

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %8, i64 0, i32 14, i32 0, i32 0, i32 0
  %14 = load %struct.err_save_state_st*, %struct.err_save_state_st** %13, align 8
  tail call void @ERR_restore_state(%struct.err_save_state_st* %14) #16
  store i8 0, i8* %3, align 1
  br label %31

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 0
  %17 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %16, align 8
  %18 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %17, i64 0, i32 8
  %19 = load i32 (%struct.ssl_st*, %"class.bssl::Span"*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, %"class.bssl::Span"*, i64*, i8*, i8*, i64)** %18, align 8
  %20 = tail call i32 %19(%struct.ssl_st* %0, %"class.bssl::Span"* %1, i64* %2, i8* %3, i8* %4, i64 %5) #16
  %21 = icmp eq i32 %20, 4
  br i1 %21, label %22, label %31

22:                                               ; preds = %15
  %23 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %7, align 8
  %24 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %23, i64 0, i32 12
  store i32 2, i32* %24, align 8
  %25 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %7, align 8
  %26 = tail call %struct.err_save_state_st* @ERR_save_state() #16
  %27 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %25, i64 0, i32 14, i32 0, i32 0, i32 0
  %28 = load %struct.err_save_state_st*, %struct.err_save_state_st** %27, align 8
  store %struct.err_save_state_st* %26, %struct.err_save_state_st** %27, align 8
  %29 = icmp eq %struct.err_save_state_st* %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %22
  tail call void @ERR_SAVE_STATE_free(%struct.err_save_state_st* nonnull %28) #16
  br label %31

31:                                               ; preds = %30, %22, %15, %12
  %32 = phi i32 [ 4, %12 ], [ %20, %15 ], [ 4, %22 ], [ 4, %30 ]
  ret i32 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4bssl16ssl_update_cacheEPNS_13SSL_HANDSHAKEEi(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, i32) local_unnamed_addr #0 {
  %3 = alloca %struct.timeval, align 8
  %4 = alloca %struct.timeval, align 8
  %5 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %6 = load %struct.ssl_st*, %struct.ssl_st** %5, align 8
  %7 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %6, i64 0, i32 17, i32 0, i32 0, i32 0
  %8 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %7, align 8
  %9 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %6, i64 0, i32 8
  %10 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %9, align 8
  %11 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %10, i64 0, i32 47, i32 0, i32 0, i32 0
  %12 = load %struct.ssl_session_st*, %struct.ssl_session_st** %11, align 8
  %13 = tail call i32 @SSL_SESSION_is_resumable(%struct.ssl_session_st* %12) #16
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %93, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %8, i64 0, i32 14
  %17 = load i32, i32* %16, align 4
  %18 = and i32 %17, %1
  %19 = icmp eq i32 %18, %1
  br i1 %19, label %20, label %93

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %6, i64 0, i32 26
  %22 = load i8, i8* %21, align 4
  %23 = and i8 %22, 1
  %24 = icmp eq i8 %23, 0
  %25 = and i32 %17, 512
  %26 = icmp eq i32 %25, 0
  %27 = xor i1 %24, true
  %28 = and i1 %26, %27
  %29 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %9, align 8
  %30 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %29, i64 0, i32 47, i32 0, i32 0, i32 0
  %31 = load %struct.ssl_session_st*, %struct.ssl_session_st** %30, align 8
  %32 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %6, i64 0, i32 14, i32 0, i32 0, i32 0
  %33 = load %struct.ssl_session_st*, %struct.ssl_session_st** %32, align 8
  %34 = icmp eq %struct.ssl_session_st* %31, %33
  br i1 %34, label %35, label %41

35:                                               ; preds = %20
  br i1 %24, label %36, label %62

36:                                               ; preds = %35
  %37 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 46
  %38 = load i32, i32* %37, align 8
  %39 = and i32 %38, 262144
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %62, label %41

41:                                               ; preds = %36, %20
  br i1 %28, label %42, label %44

42:                                               ; preds = %41
  %43 = tail call i32 @SSL_CTX_add_session(%struct.ssl_ctx_st* %8, %struct.ssl_session_st* %31) #16
  br label %44

44:                                               ; preds = %42, %41
  %45 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %8, i64 0, i32 17
  %46 = load i32 (%struct.ssl_st*, %struct.ssl_session_st*)*, i32 (%struct.ssl_st*, %struct.ssl_session_st*)** %45, align 8
  %47 = icmp eq i32 (%struct.ssl_st*, %struct.ssl_session_st*)* %46, null
  br i1 %47, label %62, label %48

48:                                               ; preds = %44
  %49 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %9, align 8
  %50 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %49, i64 0, i32 47, i32 0, i32 0, i32 0
  %51 = load %struct.ssl_session_st*, %struct.ssl_session_st** %50, align 8
  %52 = icmp eq %struct.ssl_session_st* %51, null
  br i1 %52, label %53, label %55

53:                                               ; preds = %48
  %54 = tail call i32 %46(%struct.ssl_st* %6, %struct.ssl_session_st* %51) #16
  br label %62

55:                                               ; preds = %48
  %56 = tail call i32 @SSL_SESSION_up_ref(%struct.ssl_session_st* nonnull %51) #16
  %57 = load i32 (%struct.ssl_st*, %struct.ssl_session_st*)*, i32 (%struct.ssl_st*, %struct.ssl_session_st*)** %45, align 8
  %58 = tail call i32 %57(%struct.ssl_st* %6, %struct.ssl_session_st* nonnull %51) #16
  %59 = icmp ne i32 %58, 0
  %60 = or i1 %52, %59
  br i1 %60, label %62, label %61

61:                                               ; preds = %55
  tail call void @SSL_SESSION_free(%struct.ssl_session_st* nonnull %51) #16
  br label %62

62:                                               ; preds = %53, %55, %61, %44, %36, %35
  br i1 %28, label %63, label %93

63:                                               ; preds = %62
  %64 = load i32, i32* %16, align 4
  %65 = trunc i32 %64 to i8
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %93, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %8, i64 0, i32 2
  tail call void @CRYPTO_MUTEX_lock_write(%union.crypto_mutex_st* %68) #16
  %69 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %8, i64 0, i32 13
  %70 = load i32, i32* %69, align 8
  %71 = add nsw i32 %70, 1
  %72 = icmp sgt i32 %70, 253
  %73 = select i1 %72, i32 0, i32 %71
  store i32 %73, i32* %69, align 8
  tail call void @CRYPTO_MUTEX_unlock_write(%union.crypto_mutex_st* %68) #16
  br i1 %72, label %74, label %93

74:                                               ; preds = %67
  %75 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %6, i64 0, i32 16, i32 0, i32 0, i32 0
  %76 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %75, align 8
  %77 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %76, i64 0, i32 71
  %78 = load void (%struct.ssl_st*, %struct.timeval*)*, void (%struct.ssl_st*, %struct.timeval*)** %77, align 8
  %79 = icmp eq void (%struct.ssl_st*, %struct.timeval*)* %78, null
  br i1 %79, label %83, label %80

80:                                               ; preds = %74
  %81 = bitcast %struct.timeval* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #16
  %82 = getelementptr inbounds %struct.timeval, %struct.timeval* %3, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 -86, i64 16, i1 false) #16
  call void %78(%struct.ssl_st* null, %struct.timeval* nonnull %3) #16
  br label %87

83:                                               ; preds = %74
  %84 = bitcast %struct.timeval* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %84) #16
  %85 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 -86, i64 16, i1 false) #16
  %86 = call i32 @gettimeofday(%struct.timeval* nonnull %4, i8* null) #16
  br label %87

87:                                               ; preds = %80, %83
  %88 = phi i64* [ %82, %80 ], [ %85, %83 ]
  %89 = phi i8* [ %81, %80 ], [ %84, %83 ]
  %90 = load i64, i64* %88, align 8
  %91 = icmp sgt i64 %90, 0
  %92 = select i1 %91, i64 %90, i64 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %89) #16
  call void @SSL_CTX_flush_sessions(%struct.ssl_ctx_st* %8, i64 %92) #16
  br label %93

93:                                               ; preds = %62, %63, %87, %67, %2, %15
  ret void
}

declare i32 @SSL_SESSION_is_resumable(%struct.ssl_session_st*) local_unnamed_addr #2

declare i32 @SSL_CTX_add_session(%struct.ssl_ctx_st*, %struct.ssl_session_st*) local_unnamed_addr #2

declare void @CRYPTO_MUTEX_lock_write(%union.crypto_mutex_st*) local_unnamed_addr #2

declare void @CRYPTO_MUTEX_unlock_write(%union.crypto_mutex_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4bssl20ssl_get_current_timeEPK6ssl_stPNS_15OPENSSL_timevalE(%struct.ssl_st* nocapture readonly, %"struct.bssl::OPENSSL_timeval"* nocapture) local_unnamed_addr #0 {
  %3 = alloca %struct.timeval, align 8
  %4 = alloca %struct.timeval, align 8
  %5 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %6 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %5, align 8
  %7 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %6, i64 0, i32 71
  %8 = load void (%struct.ssl_st*, %struct.timeval*)*, void (%struct.ssl_st*, %struct.timeval*)** %7, align 8
  %9 = icmp eq void (%struct.ssl_st*, %struct.timeval*)* %8, null
  br i1 %9, label %21, label %10

10:                                               ; preds = %2
  %11 = bitcast %struct.timeval* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #16
  %12 = getelementptr inbounds %struct.timeval, %struct.timeval* %3, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #16
  call void %8(%struct.ssl_st* null, %struct.timeval* nonnull %3) #16
  %13 = load i64, i64* %12, align 8
  %14 = icmp slt i64 %13, 0
  %15 = getelementptr inbounds %"struct.bssl::OPENSSL_timeval", %"struct.bssl::OPENSSL_timeval"* %1, i64 0, i32 0
  br i1 %14, label %16, label %17

16:                                               ; preds = %10
  store i64 0, i64* %15, align 8
  br label %33

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.timeval, %struct.timeval* %3, i64 0, i32 1
  store i64 %13, i64* %15, align 8
  %19 = load i64, i64* %18, align 8
  %20 = trunc i64 %19 to i32
  br label %33

21:                                               ; preds = %2
  %22 = bitcast %struct.timeval* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #16
  %23 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false) #16
  %24 = call i32 @gettimeofday(%struct.timeval* nonnull %4, i8* null) #16
  %25 = load i64, i64* %23, align 8
  %26 = icmp slt i64 %25, 0
  %27 = getelementptr inbounds %"struct.bssl::OPENSSL_timeval", %"struct.bssl::OPENSSL_timeval"* %1, i64 0, i32 0
  br i1 %26, label %28, label %29

28:                                               ; preds = %21
  store i64 0, i64* %27, align 8
  br label %33

29:                                               ; preds = %21
  %30 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i64 0, i32 1
  store i64 %25, i64* %27, align 8
  %31 = load i64, i64* %30, align 8
  %32 = trunc i64 %31 to i32
  br label %33

33:                                               ; preds = %28, %29, %16, %17
  %34 = phi i32 [ %20, %17 ], [ 0, %16 ], [ %32, %29 ], [ 0, %28 ]
  %35 = phi i8* [ %11, %17 ], [ %11, %16 ], [ %22, %29 ], [ %22, %28 ]
  %36 = getelementptr inbounds %"struct.bssl::OPENSSL_timeval", %"struct.bssl::OPENSSL_timeval"* %1, i64 0, i32 1
  store i32 %34, i32* %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #16
  ret void
}

declare void @SSL_CTX_flush_sessions(%struct.ssl_ctx_st*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl14ssl_log_secretEPK6ssl_stPKcNS_4SpanIKhEE(%struct.ssl_st*, i8*, i8*, i64) local_unnamed_addr #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %"class.bssl::internal::StackAllocated.118", align 8
  %10 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %11 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %10, align 8
  %12 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %11, i64 0, i32 70
  %13 = load void (%struct.ssl_st*, i8*)*, void (%struct.ssl_st*, i8*)** %12, align 8
  %14 = icmp eq void (%struct.ssl_st*, i8*)* %13, null
  br i1 %14, label %157, label %15

15:                                               ; preds = %4
  %16 = bitcast %"class.bssl::internal::StackAllocated.118"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 32, i1 false)
  %17 = getelementptr inbounds %"class.bssl::internal::StackAllocated.118", %"class.bssl::internal::StackAllocated.118"* %9, i64 0, i32 0
  call void @CBB_zero(%struct.cbb_st* nonnull %17) #16
  %18 = call i64 @strlen(i8* %1) #17
  %19 = shl i64 %3, 1
  %20 = add i64 %19, 67
  %21 = add i64 %20, %18
  %22 = call i32 @CBB_init(%struct.cbb_st* nonnull %17, i64 %21) #16
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %154, label %24

24:                                               ; preds = %15
  %25 = call i64 @strlen(i8* %1) #17
  %26 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %17, i8* %1, i64 %25) #16
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %154, label %28

28:                                               ; preds = %24
  %29 = call i32 @CBB_add_u8(%struct.cbb_st* nonnull %17, i8 zeroext 32) #16
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %154, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %33 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %32, align 8
  %34 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #16
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %35 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %17, i8** nonnull %5, i64 64) #16
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %73, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %33, i64 0, i32 3, i64 0
  %39 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %33, i64 0, i32 3, i64 32
  br label %40

40:                                               ; preds = %40, %37
  %41 = phi i8* [ %38, %37 ], [ %71, %40 ]
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = lshr i32 %43, 4
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN4bsslL11cbb_add_hexEP6cbb_stNS_4SpanIKhEEE8hextable, i64 0, i64 %45
  %47 = load i8, i8* %46, align 1
  %48 = load i8*, i8** %5, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 1
  store i8* %49, i8** %5, align 8
  store i8 %47, i8* %48, align 1
  %50 = and i32 %43, 15
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN4bsslL11cbb_add_hexEP6cbb_stNS_4SpanIKhEEE8hextable, i64 0, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = load i8*, i8** %5, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 1
  store i8* %55, i8** %5, align 8
  store i8 %53, i8* %54, align 1
  %56 = getelementptr inbounds i8, i8* %41, i64 1
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i32
  %59 = lshr i32 %58, 4
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN4bsslL11cbb_add_hexEP6cbb_stNS_4SpanIKhEEE8hextable, i64 0, i64 %60
  %62 = load i8, i8* %61, align 1
  %63 = load i8*, i8** %5, align 8
  %64 = getelementptr inbounds i8, i8* %63, i64 1
  store i8* %64, i8** %5, align 8
  store i8 %62, i8* %63, align 1
  %65 = and i32 %58, 15
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN4bsslL11cbb_add_hexEP6cbb_stNS_4SpanIKhEEE8hextable, i64 0, i64 %66
  %68 = load i8, i8* %67, align 1
  %69 = load i8*, i8** %5, align 8
  %70 = getelementptr inbounds i8, i8* %69, i64 1
  store i8* %70, i8** %5, align 8
  store i8 %68, i8* %69, align 1
  %71 = getelementptr inbounds i8, i8* %41, i64 2
  %72 = icmp eq i8* %71, %39
  br i1 %72, label %74, label %40

73:                                               ; preds = %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #16
  br label %154

74:                                               ; preds = %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #16
  %75 = call i32 @CBB_add_u8(%struct.cbb_st* nonnull %17, i8 zeroext 32) #16
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %154, label %77

77:                                               ; preds = %74
  %78 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #16
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %79 = call i32 @CBB_add_space(%struct.cbb_st* nonnull %17, i8** nonnull %6, i64 %19) #16
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %139, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds i8, i8* %2, i64 %3
  %83 = icmp eq i64 %3, 0
  br i1 %83, label %140, label %84

84:                                               ; preds = %81
  %85 = and i64 %3, 1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %103, label %87

87:                                               ; preds = %84
  %88 = load i8, i8* %2, align 1
  %89 = zext i8 %88 to i32
  %90 = lshr i32 %89, 4
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN4bsslL11cbb_add_hexEP6cbb_stNS_4SpanIKhEEE8hextable, i64 0, i64 %91
  %93 = load i8, i8* %92, align 1
  %94 = load i8*, i8** %6, align 8
  %95 = getelementptr inbounds i8, i8* %94, i64 1
  store i8* %95, i8** %6, align 8
  store i8 %93, i8* %94, align 1
  %96 = and i32 %89, 15
  %97 = zext i32 %96 to i64
  %98 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN4bsslL11cbb_add_hexEP6cbb_stNS_4SpanIKhEEE8hextable, i64 0, i64 %97
  %99 = load i8, i8* %98, align 1
  %100 = load i8*, i8** %6, align 8
  %101 = getelementptr inbounds i8, i8* %100, i64 1
  store i8* %101, i8** %6, align 8
  store i8 %99, i8* %100, align 1
  %102 = getelementptr inbounds i8, i8* %2, i64 1
  br label %103

103:                                              ; preds = %84, %87
  %104 = phi i8* [ %2, %84 ], [ %102, %87 ]
  %105 = icmp eq i64 %3, 1
  br i1 %105, label %140, label %106

106:                                              ; preds = %103, %106
  %107 = phi i8* [ %137, %106 ], [ %104, %103 ]
  %108 = load i8, i8* %107, align 1
  %109 = zext i8 %108 to i32
  %110 = lshr i32 %109, 4
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN4bsslL11cbb_add_hexEP6cbb_stNS_4SpanIKhEEE8hextable, i64 0, i64 %111
  %113 = load i8, i8* %112, align 1
  %114 = load i8*, i8** %6, align 8
  %115 = getelementptr inbounds i8, i8* %114, i64 1
  store i8* %115, i8** %6, align 8
  store i8 %113, i8* %114, align 1
  %116 = and i32 %109, 15
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN4bsslL11cbb_add_hexEP6cbb_stNS_4SpanIKhEEE8hextable, i64 0, i64 %117
  %119 = load i8, i8* %118, align 1
  %120 = load i8*, i8** %6, align 8
  %121 = getelementptr inbounds i8, i8* %120, i64 1
  store i8* %121, i8** %6, align 8
  store i8 %119, i8* %120, align 1
  %122 = getelementptr inbounds i8, i8* %107, i64 1
  %123 = load i8, i8* %122, align 1
  %124 = zext i8 %123 to i32
  %125 = lshr i32 %124, 4
  %126 = zext i32 %125 to i64
  %127 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN4bsslL11cbb_add_hexEP6cbb_stNS_4SpanIKhEEE8hextable, i64 0, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = load i8*, i8** %6, align 8
  %130 = getelementptr inbounds i8, i8* %129, i64 1
  store i8* %130, i8** %6, align 8
  store i8 %128, i8* %129, align 1
  %131 = and i32 %124, 15
  %132 = zext i32 %131 to i64
  %133 = getelementptr inbounds [17 x i8], [17 x i8]* @_ZZN4bsslL11cbb_add_hexEP6cbb_stNS_4SpanIKhEEE8hextable, i64 0, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = load i8*, i8** %6, align 8
  %136 = getelementptr inbounds i8, i8* %135, i64 1
  store i8* %136, i8** %6, align 8
  store i8 %134, i8* %135, align 1
  %137 = getelementptr inbounds i8, i8* %107, i64 2
  %138 = icmp eq i8* %137, %82
  br i1 %138, label %140, label %106

139:                                              ; preds = %77
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #16
  br label %154

140:                                              ; preds = %103, %106, %81
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #16
  %141 = call i32 @CBB_add_u8(%struct.cbb_st* nonnull %17, i8 zeroext 0) #16
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %140
  %144 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %144) #16
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %145 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %145) #16
  store i64 -6148914691236517206, i64* %8, align 8
  %146 = call i32 @CBB_finish(%struct.cbb_st* nonnull %17, i8** nonnull %7, i64* nonnull %8) #16
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %149

148:                                              ; preds = %143
  call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 194) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %145) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #16
  br label %154

149:                                              ; preds = %143
  %150 = load i8*, i8** %7, align 8
  call void @OPENSSL_free(i8* null) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %145) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #16
  %151 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %10, align 8
  %152 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %151, i64 0, i32 70
  %153 = load void (%struct.ssl_st*, i8*)*, void (%struct.ssl_st*, i8*)** %152, align 8
  call void %153(%struct.ssl_st* %0, i8* %150) #16
  br label %154

154:                                              ; preds = %148, %139, %73, %15, %24, %28, %74, %140, %149
  %155 = phi i8* [ null, %15 ], [ null, %24 ], [ null, %28 ], [ null, %74 ], [ null, %140 ], [ %150, %149 ], [ null, %148 ], [ null, %139 ], [ null, %73 ]
  %156 = phi i1 [ false, %15 ], [ false, %24 ], [ false, %28 ], [ false, %74 ], [ false, %140 ], [ true, %149 ], [ false, %148 ], [ false, %139 ], [ false, %73 ]
  call void @OPENSSL_free(i8* %155) #16
  call void @CBB_cleanup(%struct.cbb_st* nonnull %17) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #16
  br label %157

157:                                              ; preds = %4, %154
  %158 = phi i1 [ %156, %154 ], [ true, %4 ]
  ret i1 %158
}

declare i32 @CBB_init(%struct.cbb_st*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

declare i32 @CBB_add_bytes(%struct.cbb_st*, i8*, i64) local_unnamed_addr #2

declare i32 @CBB_add_u8(%struct.cbb_st*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4bssl20ssl_do_info_callbackEPK6ssl_stii(%struct.ssl_st*, i32, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 15
  %5 = load void (%struct.ssl_st*, i32, i32)*, void (%struct.ssl_st*, i32, i32)** %4, align 8
  %6 = icmp eq void (%struct.ssl_st*, i32, i32)* %5, null
  br i1 %6, label %7, label %13

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %9 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %8, align 8
  %10 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %9, i64 0, i32 30
  %11 = load void (%struct.ssl_st*, i32, i32)*, void (%struct.ssl_st*, i32, i32)** %10, align 8
  %12 = icmp eq void (%struct.ssl_st*, i32, i32)* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %7, %3
  %14 = phi void (%struct.ssl_st*, i32, i32)* [ %5, %3 ], [ %11, %7 ]
  tail call void %14(%struct.ssl_st* %0, i32 %1, i32 %2) #16
  br label %15

15:                                               ; preds = %7, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4bssl19ssl_do_msg_callbackEPK6ssl_stiiNS_4SpanIKhEE(%struct.ssl_st*, i32, i32, i8*, i64) local_unnamed_addr #0 {
  %6 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 10
  %7 = load void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)*, void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)** %6, align 8
  %8 = icmp eq void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)* %7, null
  br i1 %8, label %19, label %9

9:                                                ; preds = %5
  switch i32 %2, label %11 [
    i32 0, label %14
    i32 256, label %10
  ]

10:                                               ; preds = %9
  br label %14

11:                                               ; preds = %9
  %12 = tail call i32 @SSL_version(%struct.ssl_st* %0) #16
  %13 = load void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)*, void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)** %6, align 8
  br label %14

14:                                               ; preds = %9, %11, %10
  %15 = phi void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)* [ %13, %11 ], [ %7, %10 ], [ %7, %9 ]
  %16 = phi i32 [ %12, %11 ], [ 0, %10 ], [ 2, %9 ]
  %17 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 11
  %18 = load i8*, i8** %17, align 8
  tail call void %15(i32 %1, i32 %16, i32 %2, i8* %3, i64 %4, %struct.ssl_st* %0, i8* %18) #16
  br label %19

19:                                               ; preds = %5, %14
  ret void
}

declare i32 @SSL_version(%struct.ssl_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4bssl24ssl_ctx_get_current_timeEPK10ssl_ctx_stPNS_15OPENSSL_timevalE(%struct.ssl_ctx_st* nocapture readonly, %"struct.bssl::OPENSSL_timeval"* nocapture) local_unnamed_addr #0 {
  %3 = alloca %struct.timeval, align 8
  %4 = alloca %struct.timeval, align 8
  %5 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 71
  %6 = load void (%struct.ssl_st*, %struct.timeval*)*, void (%struct.ssl_st*, %struct.timeval*)** %5, align 8
  %7 = icmp eq void (%struct.ssl_st*, %struct.timeval*)* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %2
  %9 = bitcast %struct.timeval* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #16
  %10 = getelementptr inbounds %struct.timeval, %struct.timeval* %3, i64 0, i32 0
  %11 = bitcast %struct.timeval* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false)
  call void %6(%struct.ssl_st* null, %struct.timeval* nonnull %3) #16
  %12 = load i64, i64* %10, align 8
  %13 = icmp slt i64 %12, 0
  %14 = getelementptr inbounds %"struct.bssl::OPENSSL_timeval", %"struct.bssl::OPENSSL_timeval"* %1, i64 0, i32 0
  br i1 %13, label %15, label %16

15:                                               ; preds = %8
  store i64 0, i64* %14, align 8
  br label %33

16:                                               ; preds = %8
  %17 = getelementptr inbounds %struct.timeval, %struct.timeval* %3, i64 0, i32 1
  store i64 %12, i64* %14, align 8
  %18 = load i64, i64* %17, align 8
  %19 = trunc i64 %18 to i32
  br label %33

20:                                               ; preds = %2
  %21 = bitcast %struct.timeval* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #16
  %22 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i64 0, i32 0
  %23 = bitcast %struct.timeval* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false)
  %24 = call i32 @gettimeofday(%struct.timeval* nonnull %4, i8* null) #16
  %25 = load i64, i64* %22, align 8
  %26 = icmp slt i64 %25, 0
  %27 = getelementptr inbounds %"struct.bssl::OPENSSL_timeval", %"struct.bssl::OPENSSL_timeval"* %1, i64 0, i32 0
  br i1 %26, label %28, label %29

28:                                               ; preds = %20
  store i64 0, i64* %27, align 8
  br label %33

29:                                               ; preds = %20
  %30 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i64 0, i32 1
  store i64 %25, i64* %27, align 8
  %31 = load i64, i64* %30, align 8
  %32 = trunc i64 %31 to i32
  br label %33

33:                                               ; preds = %28, %29, %15, %16
  %34 = phi i32 [ %19, %16 ], [ 0, %15 ], [ %32, %29 ], [ 0, %28 ]
  %35 = phi i8* [ %9, %16 ], [ %9, %15 ], [ %21, %29 ], [ %21, %28 ]
  %36 = getelementptr inbounds %"struct.bssl::OPENSSL_timeval", %"struct.bssl::OPENSSL_timeval"* %1, i64 0, i32 1
  store i32 %34, i32* %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #16
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @gettimeofday(%struct.timeval* nocapture, i8* nocapture) local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4bssl24SSL_CTX_set_handoff_modeEP10ssl_ctx_stb(%struct.ssl_ctx_st* nocapture, i1 zeroext) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 77
  %4 = zext i1 %1 to i16
  %5 = load i16, i16* %3, align 8
  %6 = shl nuw nsw i16 %4, 8
  %7 = and i16 %5, -257
  %8 = or i16 %7, %6
  store i16 %8, i16* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4bssl20SSL_set_handoff_modeEP6ssl_stb(%struct.ssl_st* nocapture readonly, i1 zeroext) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %5 = icmp eq %"struct.bssl::SSL_CONFIG"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %4, i64 0, i32 23
  %8 = zext i1 %1 to i16
  %9 = load i16, i16* %7, align 1
  %10 = shl nuw nsw i16 %8, 6
  %11 = and i16 %9, -65
  %12 = or i16 %11, %10
  store i16 %12, i16* %7, align 1
  br label %13

13:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl23SSL_get_traffic_secretsEPK6ssl_stPNS_4SpanIKhEES6_(%struct.ssl_st*, %"class.bssl::Span.1"* nocapture, %"class.bssl::Span.1"* nocapture) local_unnamed_addr #0 {
  %4 = tail call i32 @SSL_version(%struct.ssl_st* %0) #16
  %5 = icmp slt i32 %4, 772
  br i1 %5, label %6, label %7

6:                                                ; preds = %3
  tail call void @ERR_put_error(i32 16, i32 0, i32 246, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 512) #16
  br label %29

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %9 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %8, align 8
  %10 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %9, i64 0, i32 23
  %11 = load i16, i16* %10, align 1
  %12 = and i16 %11, 32
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %7
  tail call void @ERR_put_error(i32 16, i32 0, i32 284, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 517) #16
  br label %29

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %9, i64 0, i32 36, i64 0
  %17 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %9, i64 0, i32 39
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i64
  %20 = getelementptr inbounds %"class.bssl::Span.1", %"class.bssl::Span.1"* %1, i64 0, i32 0
  store i8* %16, i8** %20, align 8
  %21 = getelementptr inbounds %"class.bssl::Span.1", %"class.bssl::Span.1"* %1, i64 0, i32 1
  store i64 %19, i64* %21, align 8
  %22 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %8, align 8
  %23 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %22, i64 0, i32 35, i64 0
  %24 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %22, i64 0, i32 38
  %25 = load i8, i8* %24, align 8
  %26 = zext i8 %25 to i64
  %27 = getelementptr inbounds %"class.bssl::Span.1", %"class.bssl::Span.1"* %2, i64 0, i32 0
  store i8* %23, i8** %27, align 8
  %28 = getelementptr inbounds %"class.bssl::Span.1", %"class.bssl::Span.1"* %2, i64 0, i32 1
  store i64 %26, i64* %28, align 8
  br label %29

29:                                               ; preds = %15, %14, %6
  %30 = phi i1 [ false, %6 ], [ true, %15 ], [ false, %14 ]
  ret i1 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_library_init() local_unnamed_addr #0 {
  tail call void @CRYPTO_library_init() #16
  ret i32 1
}

declare void @CRYPTO_library_init() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @OPENSSL_init_ssl(i64, %struct.ossl_init_settings_st* nocapture readnone) local_unnamed_addr #0 {
  tail call void @CRYPTO_library_init() #16
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10ssl_ctx_stC2EPK13ssl_method_st(%struct.ssl_ctx_st*, %struct.ssl_method_st* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.ssl_method_st, %struct.ssl_method_st* %1, i64 0, i32 1
  %4 = bitcast %"struct.bssl::SSL_PROTOCOL_METHOD"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %struct.ssl_ctx_st* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 1
  %8 = getelementptr inbounds %struct.ssl_method_st, %struct.ssl_method_st* %1, i64 0, i32 2
  %9 = bitcast %"struct.bssl::SSL_X509_METHOD"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"struct.bssl::SSL_X509_METHOD"** %7 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 3
  store i16 0, i16* %12, align 8
  %13 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 4
  store i16 0, i16* %13, align 2
  %14 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 6
  %15 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 10
  %16 = bitcast %struct.ssl_quic_method_st** %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false)
  store i64 20480, i64* %15, align 8
  %17 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 11
  %18 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 14
  %19 = bitcast %struct.ssl_session_st** %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 20, i1 false)
  store i32 2, i32* %18, align 4
  %20 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 15
  store i32 7200, i32* %20, align 8
  %21 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 16
  store i32 172800, i32* %21, align 4
  %22 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 17
  %23 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 20
  %24 = bitcast i32 (%struct.ssl_st*, %struct.ssl_session_st*)** %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false)
  store i32 1, i32* %23, align 8
  %25 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 22
  %26 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 30
  %27 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 34
  %28 = bitcast i32 (%struct.x509_store_ctx_st*, i8*)** %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 56, i1 false)
  %29 = bitcast void (%struct.ssl_st*, i32, i32)** %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 28, i1 false)
  store i32 8, i32* %27, align 4
  %30 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 35
  store i32 102400, i32* %30, align 8
  %31 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 37
  %32 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 42
  %33 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 48
  %34 = bitcast %"class.std::__1::unique_ptr.15"* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 28, i1 false)
  %35 = bitcast i32 (i32, %struct.x509_store_ctx_st*)** %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 33, i1 false)
  store i16 16384, i16* %33, align 2
  %36 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 50
  %37 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 77
  %38 = bitcast i32 (%struct.ssl_st*, i32*, i8*)** %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 256, i1 false)
  %39 = load i16, i16* %37, align 8
  %40 = and i16 %39, -1024
  store i16 %40, i16* %37, align 8
  %41 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 2
  tail call void @CRYPTO_MUTEX_init(%union.crypto_mutex_st* %41) #16
  %42 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 29
  tail call void @CRYPTO_new_ex_data(%struct.crypto_ex_data_st* %42) #16
  ret void
}

declare void @CRYPTO_MUTEX_init(%union.crypto_mutex_st*) local_unnamed_addr #2

declare void @CRYPTO_new_ex_data(%struct.crypto_ex_data_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10ssl_ctx_stD2Ev(%struct.ssl_ctx_st*) unnamed_addr #0 align 2 {
  tail call void @SSL_CTX_flush_sessions(%struct.ssl_ctx_st* %0, i64 0) #16
  %2 = bitcast %struct.ssl_ctx_st* %0 to i8*
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 29
  tail call void @CRYPTO_free_ex_data(%struct.CRYPTO_EX_DATA_CLASS* nonnull @_ZN4bsslL23g_ex_data_class_ssl_ctxE, i8* %2, %struct.crypto_ex_data_st* %3) #16
  %4 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 2
  tail call void @CRYPTO_MUTEX_cleanup(%union.crypto_mutex_st* %4) #16
  %5 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 9
  %6 = bitcast %struct.lhash_st_SSL_SESSION** %5 to %struct.lhash_st**
  %7 = load %struct.lhash_st*, %struct.lhash_st** %6, align 8
  tail call void @lh_free(%struct.lhash_st* %7) #16
  %8 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 1
  %9 = load %"struct.bssl::SSL_X509_METHOD"*, %"struct.bssl::SSL_X509_METHOD"** %8, align 8
  %10 = getelementptr inbounds %"struct.bssl::SSL_X509_METHOD", %"struct.bssl::SSL_X509_METHOD"* %9, i64 0, i32 16
  %11 = load void (%struct.ssl_ctx_st*)*, void (%struct.ssl_ctx_st*)** %10, align 8
  tail call void %11(%struct.ssl_ctx_st* %0) #16
  %12 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 76
  %13 = bitcast %"class.bssl::Array.56"* %12 to i8**
  %14 = load i8*, i8** %13, align 8
  tail call void @OPENSSL_free(i8* %14) #16
  %15 = bitcast %"class.bssl::Array.56"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #16
  %16 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 69, i32 0, i32 0, i32 0
  %17 = load %struct.ssl_ech_server_config_list_st*, %struct.ssl_ech_server_config_list_st** %16, align 8
  store %struct.ssl_ech_server_config_list_st* null, %struct.ssl_ech_server_config_list_st** %16, align 8
  %18 = icmp eq %struct.ssl_ech_server_config_list_st* %17, null
  br i1 %18, label %20, label %19

19:                                               ; preds = %1
  tail call void @SSL_ECH_SERVER_CONFIG_LIST_free(%struct.ssl_ech_server_config_list_st* nonnull %17) #16
  br label %20

20:                                               ; preds = %1, %19
  %21 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 68, i32 0, i32 0, i32 0
  %22 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %21, align 8
  store %struct.evp_pkey_st* null, %struct.evp_pkey_st** %21, align 8
  %23 = icmp eq %struct.evp_pkey_st* %22, null
  br i1 %23, label %25, label %24

24:                                               ; preds = %20
  tail call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %22) #16
  br label %25

25:                                               ; preds = %20, %24
  %26 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 67
  %27 = bitcast %"class.bssl::Array.56"* %26 to i8**
  %28 = load i8*, i8** %27, align 8
  tail call void @OPENSSL_free(i8* %28) #16
  %29 = bitcast %"class.bssl::Array.56"* %26 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #16
  %30 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 66, i32 1
  %31 = bitcast %"class.bssl::Array.115"* %30 to i8**
  %32 = load i8*, i8** %31, align 8
  tail call void @OPENSSL_free(i8* %32) #16
  %33 = bitcast %"class.bssl::Array.115"* %30 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false) #16
  %34 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 65, i32 0, i32 0, i32 0
  %35 = load %struct.stack_st_SRTP_PROTECTION_PROFILE*, %struct.stack_st_SRTP_PROTECTION_PROFILE** %34, align 8
  store %struct.stack_st_SRTP_PROTECTION_PROFILE* null, %struct.stack_st_SRTP_PROTECTION_PROFILE** %34, align 8
  %36 = icmp eq %struct.stack_st_SRTP_PROTECTION_PROFILE* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %25
  %38 = bitcast %struct.stack_st_SRTP_PROTECTION_PROFILE* %35 to %struct.stack_st*
  tail call void @sk_free(%struct.stack_st* nonnull %38) #16
  br label %39

39:                                               ; preds = %25, %37
  %40 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 64
  %41 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %40, i64 0, i32 0
  %42 = load i8*, i8** %41, align 8
  tail call void @OPENSSL_free(i8* %42) #16
  %43 = bitcast %"class.bssl::Array"* %40 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 16, i1 false) #16
  %44 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 55, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  store i8* null, i8** %44, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %48, label %47

47:                                               ; preds = %39
  tail call void @OPENSSL_free(i8* nonnull %45) #16
  br label %48

48:                                               ; preds = %39, %47
  %49 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 53, i32 0, i32 0, i32 0
  %50 = load %"struct.bssl::TicketKey"*, %"struct.bssl::TicketKey"** %49, align 8
  store %"struct.bssl::TicketKey"* null, %"struct.bssl::TicketKey"** %49, align 8
  %51 = icmp eq %"struct.bssl::TicketKey"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %50, i64 0, i32 0, i64 0
  tail call void @OPENSSL_free(i8* %53) #16
  br label %54

54:                                               ; preds = %48, %52
  %55 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 52, i32 0, i32 0, i32 0
  %56 = load %"struct.bssl::TicketKey"*, %"struct.bssl::TicketKey"** %55, align 8
  store %"struct.bssl::TicketKey"* null, %"struct.bssl::TicketKey"** %55, align 8
  %57 = icmp eq %"struct.bssl::TicketKey"* %56, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %56, i64 0, i32 0, i64 0
  tail call void @OPENSSL_free(i8* %59) #16
  br label %60

60:                                               ; preds = %54, %58
  %61 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 37, i32 0, i32 0, i32 0
  %62 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %61, align 8
  store %"struct.bssl::CERT"* null, %"struct.bssl::CERT"** %61, align 8
  %63 = icmp eq %"struct.bssl::CERT"* %62, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %60
  tail call void @_ZN4bssl4CERTD1Ev(%"struct.bssl::CERT"* nonnull %62) #16
  %65 = bitcast %"struct.bssl::CERT"* %62 to i8*
  tail call void @OPENSSL_free(i8* nonnull %65) #16
  br label %66

66:                                               ; preds = %60, %64
  %67 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 31, i32 0, i32 0, i32 0
  %68 = load %struct.stack_st_CRYPTO_BUFFER*, %struct.stack_st_CRYPTO_BUFFER** %67, align 8
  store %struct.stack_st_CRYPTO_BUFFER* null, %struct.stack_st_CRYPTO_BUFFER** %67, align 8
  %69 = icmp eq %struct.stack_st_CRYPTO_BUFFER* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %66
  %71 = bitcast %struct.stack_st_CRYPTO_BUFFER* %68 to %struct.stack_st*
  tail call void @sk_pop_free_ex(%struct.stack_st* nonnull %71, void (void (i8*)*, i8*)* nonnull @_ZZN4bssl8internal11DeleterImplI22stack_st_CRYPTO_BUFFERvE4FreeEPS2_ENUlPFvPvES5_E_8__invokeES7_S5_, void (i8*)* null) #16
  br label %72

72:                                               ; preds = %66, %70
  %73 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %74 = load %"struct.bssl::SSLCipherPreferenceList"*, %"struct.bssl::SSLCipherPreferenceList"** %73, align 8
  store %"struct.bssl::SSLCipherPreferenceList"* null, %"struct.bssl::SSLCipherPreferenceList"** %73, align 8
  %75 = icmp eq %"struct.bssl::SSLCipherPreferenceList"* %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %72
  tail call void @_ZN4bssl23SSLCipherPreferenceListD1Ev(%"struct.bssl::SSLCipherPreferenceList"* nonnull %74) #16
  %77 = bitcast %"struct.bssl::SSLCipherPreferenceList"* %74 to i8*
  tail call void @OPENSSL_free(i8* nonnull %77) #16
  br label %78

78:                                               ; preds = %72, %76
  ret void
}

declare void @CRYPTO_free_ex_data(%struct.CRYPTO_EX_DATA_CLASS*, i8*, %struct.crypto_ex_data_st*) local_unnamed_addr #2

declare void @CRYPTO_MUTEX_cleanup(%union.crypto_mutex_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.ssl_ctx_st* @SSL_CTX_new(%struct.ssl_method_st*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.ssl_method_st* %0, null
  br i1 %2, label %3, label %4

3:                                                ; preds = %1
  tail call void @ERR_put_error(i32 16, i32 0, i32 186, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 588) #16
  br label %116

4:                                                ; preds = %1
  %5 = tail call i8* @OPENSSL_malloc(i64 624) #16
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %4
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.36, i64 0, i64 0), i32 196) #16
  br label %116

8:                                                ; preds = %4
  %9 = bitcast i8* %5 to %struct.ssl_ctx_st*
  %10 = getelementptr inbounds %struct.ssl_method_st, %struct.ssl_method_st* %0, i64 0, i32 1
  %11 = bitcast %"struct.bssl::SSL_PROTOCOL_METHOD"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast i8* %5 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds i8, i8* %5, i64 8
  %15 = getelementptr inbounds %struct.ssl_method_st, %struct.ssl_method_st* %0, i64 0, i32 2
  %16 = bitcast %"struct.bssl::SSL_X509_METHOD"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast i8* %14 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds i8, i8* %5, i64 72
  %20 = bitcast i8* %19 to i16*
  store i16 0, i16* %20, align 8
  %21 = getelementptr inbounds i8, i8* %5, i64 74
  %22 = bitcast i8* %21 to i16*
  store i16 0, i16* %22, align 2
  %23 = getelementptr inbounds i8, i8* %5, i64 80
  %24 = getelementptr inbounds i8, i8* %5, i64 112
  %25 = bitcast i8* %24 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 32, i1 false) #16
  store i64 20480, i64* %25, align 8
  %26 = getelementptr inbounds i8, i8* %5, i64 120
  %27 = getelementptr inbounds i8, i8* %5, i64 140
  %28 = bitcast i8* %27 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 20, i1 false) #16
  store i32 2, i32* %28, align 4
  %29 = getelementptr inbounds i8, i8* %5, i64 144
  %30 = bitcast i8* %29 to i32*
  store i32 7200, i32* %30, align 8
  %31 = getelementptr inbounds i8, i8* %5, i64 148
  %32 = bitcast i8* %31 to i32*
  store i32 172800, i32* %32, align 4
  %33 = getelementptr inbounds i8, i8* %5, i64 152
  %34 = getelementptr inbounds i8, i8* %5, i64 176
  %35 = bitcast i8* %34 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 24, i1 false) #16
  store i32 1, i32* %35, align 8
  %36 = getelementptr inbounds i8, i8* %5, i64 184
  %37 = getelementptr inbounds i8, i8* %5, i64 248
  %38 = getelementptr inbounds i8, i8* %5, i64 276
  %39 = bitcast i8* %38 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 56, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 28, i1 false) #16
  store i32 8, i32* %39, align 4
  %40 = getelementptr inbounds i8, i8* %5, i64 280
  %41 = bitcast i8* %40 to i32*
  store i32 102400, i32* %41, align 8
  %42 = getelementptr inbounds i8, i8* %5, i64 288
  %43 = getelementptr inbounds i8, i8* %5, i64 320
  %44 = getelementptr inbounds i8, i8* %5, i64 354
  %45 = bitcast i8* %44 to i16*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 28, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 33, i1 false) #16
  store i16 16384, i16* %45, align 2
  %46 = getelementptr inbounds i8, i8* %5, i64 360
  %47 = getelementptr inbounds i8, i8* %5, i64 616
  %48 = bitcast i8* %47 to i16*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 256, i1 false) #16
  %49 = load i16, i16* %48, align 8
  %50 = and i16 %49, -1024
  store i16 %50, i16* %48, align 8
  %51 = getelementptr inbounds i8, i8* %5, i64 16
  %52 = bitcast i8* %51 to %union.crypto_mutex_st*
  tail call void @CRYPTO_MUTEX_init(%union.crypto_mutex_st* %52) #16
  %53 = getelementptr inbounds i8, i8* %5, i64 240
  %54 = bitcast i8* %53 to %struct.crypto_ex_data_st*
  tail call void @CRYPTO_new_ex_data(%struct.crypto_ex_data_st* %54) #16
  %55 = tail call i8* @OPENSSL_malloc(i64 176) #16
  %56 = icmp eq i8* %55, null
  br i1 %56, label %57, label %58

57:                                               ; preds = %8
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.36, i64 0, i64 0), i32 196) #16
  br label %62

58:                                               ; preds = %8
  %59 = bitcast i8* %55 to %"struct.bssl::CERT"*
  %60 = load %"struct.bssl::SSL_X509_METHOD"*, %"struct.bssl::SSL_X509_METHOD"** %15, align 8
  tail call void @_ZN4bssl4CERTC1EPKNS_15SSL_X509_METHODE(%"struct.bssl::CERT"* nonnull %59, %"struct.bssl::SSL_X509_METHOD"* %60) #16
  %61 = ptrtoint i8* %55 to i64
  br label %62

62:                                               ; preds = %57, %58
  %63 = phi i64 [ 0, %57 ], [ %61, %58 ]
  %64 = bitcast i8* %42 to %"struct.bssl::CERT"**
  %65 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %64, align 8
  %66 = bitcast i8* %42 to i64*
  store i64 %63, i64* %66, align 8
  %67 = icmp eq %"struct.bssl::CERT"* %65, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %62
  tail call void @_ZN4bssl4CERTD1Ev(%"struct.bssl::CERT"* nonnull %65) #16
  %69 = bitcast %"struct.bssl::CERT"* %65 to i8*
  tail call void @OPENSSL_free(i8* nonnull %69) #16
  br label %70

70:                                               ; preds = %68, %62
  %71 = tail call %struct.lhash_st* @lh_new(i32 (i8*)* bitcast (i32 (%struct.ssl_session_st*)* @_ZL16ssl_session_hashPK14ssl_session_st to i32 (i8*)*), i32 (i8*, i8*)* bitcast (i32 (%struct.ssl_session_st*, %struct.ssl_session_st*)* @_ZL15ssl_session_cmpPK14ssl_session_stS1_ to i32 (i8*, i8*)*)) #16
  %72 = getelementptr inbounds i8, i8* %5, i64 104
  %73 = bitcast i8* %72 to %struct.lhash_st_SSL_SESSION**
  %74 = bitcast i8* %72 to %struct.lhash_st**
  store %struct.lhash_st* %71, %struct.lhash_st** %74, align 8
  %75 = getelementptr inbounds i8, i8* %5, i64 256
  %76 = tail call %struct.stack_st* @sk_new_null() #16
  %77 = bitcast i8* %75 to %struct.stack_st_CRYPTO_BUFFER**
  %78 = load %struct.stack_st_CRYPTO_BUFFER*, %struct.stack_st_CRYPTO_BUFFER** %77, align 8
  %79 = bitcast i8* %75 to %struct.stack_st**
  store %struct.stack_st* %76, %struct.stack_st** %79, align 8
  %80 = icmp eq %struct.stack_st_CRYPTO_BUFFER* %78, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %70
  %82 = bitcast %struct.stack_st_CRYPTO_BUFFER* %78 to %struct.stack_st*
  tail call void @sk_pop_free_ex(%struct.stack_st* nonnull %82, void (void (i8*)*, i8*)* nonnull @_ZZN4bssl8internal11DeleterImplI22stack_st_CRYPTO_BUFFERvE4FreeEPS2_ENUlPFvPvES5_E_8__invokeES7_S5_, void (i8*)* null) #16
  br label %83

83:                                               ; preds = %70, %81
  %84 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %64, align 8
  %85 = icmp eq %"struct.bssl::CERT"* %84, null
  br i1 %85, label %112, label %86

86:                                               ; preds = %83
  %87 = load %struct.lhash_st_SSL_SESSION*, %struct.lhash_st_SSL_SESSION** %73, align 8
  %88 = icmp eq %struct.lhash_st_SSL_SESSION* %87, null
  br i1 %88, label %112, label %89

89:                                               ; preds = %86
  %90 = load %struct.stack_st_CRYPTO_BUFFER*, %struct.stack_st_CRYPTO_BUFFER** %77, align 8
  %91 = icmp eq %struct.stack_st_CRYPTO_BUFFER* %90, null
  br i1 %91, label %112, label %92

92:                                               ; preds = %89
  %93 = bitcast i8* %14 to %"struct.bssl::SSL_X509_METHOD"**
  %94 = load %"struct.bssl::SSL_X509_METHOD"*, %"struct.bssl::SSL_X509_METHOD"** %93, align 8
  %95 = getelementptr inbounds %"struct.bssl::SSL_X509_METHOD", %"struct.bssl::SSL_X509_METHOD"* %94, i64 0, i32 15
  %96 = load i1 (%struct.ssl_ctx_st*)*, i1 (%struct.ssl_ctx_st*)** %95, align 8
  %97 = tail call zeroext i1 %96(%struct.ssl_ctx_st* nonnull %9) #16
  br i1 %97, label %98, label %112

98:                                               ; preds = %92
  %99 = getelementptr inbounds i8, i8* %5, i64 88
  %100 = bitcast i8* %99 to %"class.std::__1::unique_ptr.5"*
  %101 = tail call zeroext i1 @_ZN4bssl22ssl_create_cipher_listEPNSt3__110unique_ptrINS_23SSLCipherPreferenceListENS_8internal7DeleterIS2_EEEEPKcb(%"class.std::__1::unique_ptr.5"* %100, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i1 zeroext true) #16
  br i1 %101, label %102, label %111

102:                                              ; preds = %98
  %103 = getelementptr inbounds %struct.ssl_method_st, %struct.ssl_method_st* %0, i64 0, i32 0
  %104 = load i16, i16* %103, align 8
  %105 = tail call i32 @SSL_CTX_set_max_proto_version(%struct.ssl_ctx_st* nonnull %9, i16 zeroext %104) #16
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %102
  %108 = load i16, i16* %103, align 8
  %109 = tail call i32 @SSL_CTX_set_min_proto_version(%struct.ssl_ctx_st* nonnull %9, i16 zeroext %108) #16
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %116

111:                                              ; preds = %98, %107, %102
  tail call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 612) #16
  br label %112

112:                                              ; preds = %83, %86, %89, %111, %92
  %113 = tail call i32 @CRYPTO_refcount_dec_and_test_zero(i32* %35) #16
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %116, label %115

115:                                              ; preds = %112
  tail call void @_ZN10ssl_ctx_stD2Ev(%struct.ssl_ctx_st* nonnull %9) #16
  tail call void @OPENSSL_free(i8* nonnull %5) #16
  br label %116

116:                                              ; preds = %115, %112, %107, %7, %3
  %117 = phi %struct.ssl_ctx_st* [ null, %3 ], [ null, %112 ], [ null, %115 ], [ null, %7 ], [ %9, %107 ]
  ret %struct.ssl_ctx_st* %117
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZL16ssl_session_hashPK14ssl_session_st(%struct.ssl_session_st*) #0 {
  %2 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 7, i64 0
  %3 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 6
  %4 = load i32, i32* %3, align 8
  %5 = zext i32 %4 to i64
  %6 = tail call i32 @_ZN4bssl19ssl_hash_session_idENS_4SpanIKhEE(i8* %2, i64 %5) #16
  ret i32 %6
}

; Function Attrs: nounwind readonly ssp uwtable
define internal i32 @_ZL15ssl_session_cmpPK14ssl_session_stS1_(%struct.ssl_session_st* nocapture readonly, %struct.ssl_session_st* nocapture readonly) #7 {
  %3 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 6
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %1, i64 0, i32 6
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %15

8:                                                ; preds = %2
  %9 = icmp eq i32 %4, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %8
  %11 = zext i32 %4 to i64
  %12 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %1, i64 0, i32 7, i64 0
  %13 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %0, i64 0, i32 7, i64 0
  %14 = tail call i32 @memcmp(i8* %13, i8* %12, i64 %11) #17
  br label %15

15:                                               ; preds = %10, %8, %2
  %16 = phi i32 [ 1, %2 ], [ %14, %10 ], [ 0, %8 ]
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_set_strict_cipher_list(%struct.ssl_ctx_st*, i8*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 7
  %4 = tail call zeroext i1 @_ZN4bssl22ssl_create_cipher_listEPNSt3__110unique_ptrINS_23SSLCipherPreferenceListENS_8internal7DeleterIS2_EEEEPKcb(%"class.std::__1::unique_ptr.5"* %3, i8* %1, i1 zeroext true) #16
  %5 = zext i1 %4 to i32
  ret i32 %5
}

declare i32 @SSL_CTX_set_max_proto_version(%struct.ssl_ctx_st*, i16 zeroext) local_unnamed_addr #2

declare i32 @SSL_CTX_set_min_proto_version(%struct.ssl_ctx_st*, i16 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_up_ref(%struct.ssl_ctx_st*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 20
  tail call void @CRYPTO_refcount_inc(i32* %2) #16
  ret i32 1
}

declare void @CRYPTO_refcount_inc(i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @SSL_CTX_free(%struct.ssl_ctx_st*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.ssl_ctx_st* %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 20
  %5 = tail call i32 @CRYPTO_refcount_dec_and_test_zero(i32* %4) #16
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  tail call void @_ZN10ssl_ctx_stD2Ev(%struct.ssl_ctx_st* nonnull %0) #16
  %8 = bitcast %struct.ssl_ctx_st* %0 to i8*
  tail call void @OPENSSL_free(i8* nonnull %8) #16
  br label %9

9:                                                ; preds = %3, %1, %7
  ret void
}

declare i32 @CRYPTO_refcount_dec_and_test_zero(i32*) local_unnamed_addr #2

declare void @OPENSSL_free(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6ssl_stC2EP10ssl_ctx_st(%struct.ssl_st*, %struct.ssl_ctx_st*) unnamed_addr #0 align 2 {
  %3 = bitcast %struct.ssl_ctx_st* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %struct.ssl_st* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::unique_ptr.2"* %6 to i64*
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 2
  store i16 0, i16* %8, align 8
  %9 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 3
  %10 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %1, i64 0, i32 48
  %11 = load i16, i16* %10, align 2
  store i16 %11, i16* %9, align 2
  %12 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 5
  %13 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 10
  %14 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %1, i64 0, i32 38
  %15 = bitcast void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)** %14 to i64*
  %16 = bitcast %"class.std::__1::unique_ptr.91"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 40, i1 false)
  %17 = load i64, i64* %15, align 8
  %18 = bitcast void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)** %13 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 11
  %20 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %1, i64 0, i32 39
  %21 = bitcast i8** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast i8** %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 12
  store i32 1000, i32* %24, align 8
  %25 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 14
  %26 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 16
  %27 = icmp eq %struct.ssl_ctx_st* %1, null
  %28 = bitcast %"class.std::__1::unique_ptr.58"* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false)
  br i1 %27, label %29, label %31

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.106", %"class.std::__1::unique_ptr.106"* %26, i64 0, i32 0, i32 0, i32 0
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %30, align 8
  br label %35

31:                                               ; preds = %2
  %32 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %1, i64 0, i32 20
  tail call void @CRYPTO_refcount_inc(i32* %32) #16
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr.106", %"class.std::__1::unique_ptr.106"* %26, i64 0, i32 0, i32 0, i32 0
  store %struct.ssl_ctx_st* %1, %struct.ssl_ctx_st** %33, align 8
  tail call void @CRYPTO_refcount_inc(i32* %32) #16
  %34 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %33, align 8
  br label %35

35:                                               ; preds = %29, %31
  %36 = phi %struct.ssl_ctx_st* [ null, %29 ], [ %34, %31 ]
  %37 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 17, i32 0, i32 0, i32 0
  store %struct.ssl_ctx_st* %1, %struct.ssl_ctx_st** %37, align 8
  %38 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 19
  %39 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %36, i64 0, i32 33
  %40 = load i32, i32* %39, align 8
  store i32 %40, i32* %38, align 8
  %41 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 20
  %42 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %36, i64 0, i32 34
  %43 = load i32, i32* %42, align 4
  store i32 %43, i32* %41, align 4
  %44 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 21
  %45 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %36, i64 0, i32 35
  %46 = load i32, i32* %45, align 8
  store i32 %46, i32* %44, align 8
  %47 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 23
  %48 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %49 = bitcast %"class.std::__1::unique_ptr.29"* %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 20, i1 false)
  %50 = load i8, i8* %48, align 4
  %51 = and i8 %50, -2
  store i8 %51, i8* %48, align 4
  %52 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %36, i64 0, i32 77
  %53 = load i16, i16* %52, align 8
  %54 = trunc i16 %53 to i8
  %55 = and i8 %54, 2
  %56 = and i8 %50, -4
  %57 = or i8 %55, %56
  store i8 %57, i8* %48, align 4
  %58 = load i16, i16* %52, align 8
  %59 = lshr i16 %58, 7
  %60 = trunc i16 %59 to i8
  %61 = and i8 %60, 4
  %62 = and i8 %57, -6
  %63 = or i8 %61, %62
  store i8 %63, i8* %48, align 4
  %64 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 18
  tail call void @CRYPTO_new_ex_data(%struct.crypto_ex_data_st* %64) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6ssl_stD2Ev(%struct.ssl_st*) unnamed_addr #0 align 2 {
  %2 = bitcast %struct.ssl_st* %0 to i8*
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 18
  tail call void @CRYPTO_free_ex_data(%struct.CRYPTO_EX_DATA_CLASS* nonnull @_ZN4bsslL19g_ex_data_class_sslE, i8* %2, %struct.crypto_ex_data_st* %3) #16
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %4, align 8
  store %"struct.bssl::SSL_CONFIG"* null, %"struct.bssl::SSL_CONFIG"** %4, align 8
  %6 = icmp eq %"struct.bssl::SSL_CONFIG"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  tail call void @_ZN4bssl10SSL_CONFIGD2Ev(%"struct.bssl::SSL_CONFIG"* nonnull %5) #16
  %8 = bitcast %"struct.bssl::SSL_CONFIG"* %5 to i8*
  tail call void @OPENSSL_free(i8* nonnull %8) #16
  br label %9

9:                                                ; preds = %1, %7
  %10 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 0
  %11 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %10, align 8
  %12 = icmp eq %"struct.bssl::SSL_PROTOCOL_METHOD"* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %11, i64 0, i32 2
  %15 = bitcast {}** %14 to void (%struct.ssl_st*)**
  %16 = load void (%struct.ssl_st*)*, void (%struct.ssl_st*)** %15, align 8
  tail call void %16(%struct.ssl_st* %0) #16
  br label %17

17:                                               ; preds = %9, %13
  %18 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  store i8* null, i8** %18, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %17
  tail call void @OPENSSL_free(i8* nonnull %19) #16
  br label %22

22:                                               ; preds = %17, %21
  %23 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 17, i32 0, i32 0, i32 0
  %24 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %23, align 8
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %23, align 8
  %25 = icmp eq %struct.ssl_ctx_st* %24, null
  br i1 %25, label %32, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %24, i64 0, i32 20
  %28 = tail call i32 @CRYPTO_refcount_dec_and_test_zero(i32* %27) #16
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %26
  tail call void @_ZN10ssl_ctx_stD2Ev(%struct.ssl_ctx_st* nonnull %24) #16
  %31 = bitcast %struct.ssl_ctx_st* %24 to i8*
  tail call void @OPENSSL_free(i8* nonnull %31) #16
  br label %32

32:                                               ; preds = %22, %26, %30
  %33 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %34 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %33, align 8
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** %33, align 8
  %35 = icmp eq %struct.ssl_ctx_st* %34, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %34, i64 0, i32 20
  %38 = tail call i32 @CRYPTO_refcount_dec_and_test_zero(i32* %37) #16
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %36
  tail call void @_ZN10ssl_ctx_stD2Ev(%struct.ssl_ctx_st* nonnull %34) #16
  %41 = bitcast %struct.ssl_ctx_st* %34 to i8*
  tail call void @OPENSSL_free(i8* nonnull %41) #16
  br label %42

42:                                               ; preds = %32, %36, %40
  %43 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %44 = load %struct.ssl_session_st*, %struct.ssl_session_st** %43, align 8
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %43, align 8
  %45 = icmp eq %struct.ssl_session_st* %44, null
  br i1 %45, label %47, label %46

46:                                               ; preds = %42
  tail call void @SSL_SESSION_free(%struct.ssl_session_st* nonnull %44) #16
  br label %47

47:                                               ; preds = %42, %46
  %48 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %49 = load %struct.bio_st*, %struct.bio_st** %48, align 8
  store %struct.bio_st* null, %struct.bio_st** %48, align 8
  %50 = icmp eq %struct.bio_st* %49, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %47
  %52 = tail call i32 @BIO_free(%struct.bio_st* nonnull %49) #16
  br label %53

53:                                               ; preds = %47, %51
  %54 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %55 = load %struct.bio_st*, %struct.bio_st** %54, align 8
  store %struct.bio_st* null, %struct.bio_st** %54, align 8
  %56 = icmp eq %struct.bio_st* %55, null
  br i1 %56, label %59, label %57

57:                                               ; preds = %53
  %58 = tail call i32 @BIO_free(%struct.bio_st* nonnull %55) #16
  br label %59

59:                                               ; preds = %53, %57
  %60 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %4, align 8
  store %"struct.bssl::SSL_CONFIG"* null, %"struct.bssl::SSL_CONFIG"** %4, align 8
  %61 = icmp eq %"struct.bssl::SSL_CONFIG"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %59
  tail call void @_ZN4bssl10SSL_CONFIGD2Ev(%"struct.bssl::SSL_CONFIG"* nonnull %60) #16
  %63 = bitcast %"struct.bssl::SSL_CONFIG"* %60 to i8*
  tail call void @OPENSSL_free(i8* nonnull %63) #16
  br label %64

64:                                               ; preds = %59, %62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.ssl_st* @SSL_new(%struct.ssl_ctx_st*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.ssl_ctx_st* %0, null
  br i1 %2, label %3, label %4

3:                                                ; preds = %1
  tail call void @ERR_put_error(i32 16, i32 0, i32 185, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 661) #16
  br label %252

4:                                                ; preds = %1
  %5 = tail call i8* @OPENSSL_malloc(i64 168) #16
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %4
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.36, i64 0, i64 0), i32 196) #16
  br label %252

8:                                                ; preds = %4
  %9 = bitcast i8* %5 to %struct.ssl_st*
  tail call void @_ZN6ssl_stC2EP10ssl_ctx_st(%struct.ssl_st* nonnull %9, %struct.ssl_ctx_st* nonnull %0) #16
  %10 = tail call i8* @OPENSSL_malloc(i64 224) #16
  %11 = icmp eq i8* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %8
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.36, i64 0, i64 0), i32 196) #16
  br label %27

13:                                               ; preds = %8
  %14 = ptrtoint i8* %5 to i64
  %15 = bitcast i8* %10 to %"struct.bssl::SSL_CONFIG"*
  %16 = bitcast i8* %10 to i64*
  store i64 %14, i64* %16, align 8
  %17 = getelementptr inbounds i8, i8* %10, i64 8
  %18 = bitcast i8* %17 to i16*
  store i16 0, i16* %18, align 8
  %19 = getelementptr inbounds i8, i8* %10, i64 10
  %20 = bitcast i8* %19 to i16*
  store i16 0, i16* %20, align 2
  %21 = getelementptr inbounds i8, i8* %10, i64 16
  %22 = getelementptr inbounds i8, i8* %10, i64 217
  %23 = bitcast i8* %22 to i16*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 201, i1 false) #16
  %24 = load i16, i16* %23, align 1
  %25 = and i16 %24, -1024
  %26 = or i16 %25, 512
  store i16 %26, i16* %23, align 1
  br label %27

27:                                               ; preds = %12, %13
  %28 = phi %"struct.bssl::SSL_CONFIG"* [ null, %12 ], [ %15, %13 ]
  %29 = ptrtoint %"struct.bssl::SSL_CONFIG"* %28 to i64
  %30 = getelementptr inbounds i8, i8* %5, i64 8
  %31 = bitcast i8* %30 to %"struct.bssl::SSL_CONFIG"**
  %32 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %31, align 8
  %33 = bitcast i8* %30 to i64*
  store i64 %29, i64* %33, align 8
  %34 = icmp eq %"struct.bssl::SSL_CONFIG"* %32, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  tail call void @_ZN4bssl10SSL_CONFIGD2Ev(%"struct.bssl::SSL_CONFIG"* nonnull %32) #16
  %36 = bitcast %"struct.bssl::SSL_CONFIG"* %32 to i8*
  tail call void @OPENSSL_free(i8* nonnull %36) #16
  %37 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %31, align 8
  br label %38

38:                                               ; preds = %35, %27
  %39 = phi %"struct.bssl::SSL_CONFIG"* [ %37, %35 ], [ %28, %27 ]
  %40 = icmp eq %"struct.bssl::SSL_CONFIG"* %39, null
  br i1 %40, label %251, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 4
  %43 = load i16, i16* %42, align 2
  %44 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %39, i64 0, i32 2
  store i16 %43, i16* %44, align 2
  %45 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 3
  %46 = load i16, i16* %45, align 8
  %47 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %31, align 8
  %48 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %47, i64 0, i32 1
  store i16 %46, i16* %48, align 8
  %49 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 37, i32 0, i32 0, i32 0
  %50 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %49, align 8
  %51 = tail call %"struct.bssl::CERT"* @_ZN4bssl12ssl_cert_dupEPNS_4CERTE(%"struct.bssl::CERT"* %50) #16
  %52 = ptrtoint %"struct.bssl::CERT"* %51 to i64
  %53 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %31, align 8
  %54 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %53, i64 0, i32 6
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.15", %"class.std::__1::unique_ptr.15"* %54, i64 0, i32 0, i32 0, i32 0
  %56 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %55, align 8
  %57 = bitcast %"class.std::__1::unique_ptr.15"* %54 to i64*
  store i64 %52, i64* %57, align 8
  %58 = icmp eq %"struct.bssl::CERT"* %56, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %41
  tail call void @_ZN4bssl4CERTD1Ev(%"struct.bssl::CERT"* nonnull %56) #16
  %60 = bitcast %"struct.bssl::CERT"* %56 to i8*
  tail call void @OPENSSL_free(i8* nonnull %60) #16
  br label %61

61:                                               ; preds = %59, %41
  %62 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %31, align 8
  %63 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %62, i64 0, i32 6, i32 0, i32 0, i32 0
  %64 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %63, align 8
  %65 = icmp eq %"struct.bssl::CERT"* %64, null
  br i1 %65, label %251, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 40
  %68 = load i32, i32* %67, align 8
  %69 = trunc i32 %68 to i8
  %70 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %62, i64 0, i32 22
  store i8 %69, i8* %70, align 8
  %71 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 42
  %72 = bitcast i32 (i32, %struct.x509_store_ctx_st*)** %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %31, align 8
  %75 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %74, i64 0, i32 7
  %76 = bitcast i32 (i32, %struct.x509_store_ctx_st*)** %75 to i64*
  store i64 %73, i64* %76, align 8
  %77 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 24
  %78 = bitcast i32 (%struct.ssl_st*, i8*)** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %31, align 8
  %81 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %80, i64 0, i32 8
  %82 = bitcast i32 (%struct.ssl_st*, i8*)** %81 to i64*
  store i64 %79, i64* %82, align 8
  %83 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 77
  %84 = load i16, i16* %83, align 8
  %85 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %31, align 8
  %86 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %85, i64 0, i32 23
  %87 = load i16, i16* %86, align 1
  %88 = shl i16 %84, 5
  %89 = and i16 %88, 32
  %90 = and i16 %87, -33
  %91 = or i16 %90, %89
  store i16 %91, i16* %86, align 1
  %92 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %31, align 8
  %93 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %92, i64 0, i32 14
  %94 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 67
  %95 = bitcast %"class.bssl::Array.56"* %94 to i8**
  %96 = load i8*, i8** %95, align 8
  %97 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 67, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.bssl::Array.56"* %93 to i8**
  %100 = load i8*, i8** %99, align 8
  tail call void @OPENSSL_free(i8* %100) #16
  %101 = bitcast %"class.bssl::Array.56"* %93 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %101, i8 0, i64 16, i1 false) #16
  %102 = icmp eq i64 %98, 0
  br i1 %102, label %113, label %103

103:                                              ; preds = %66
  %104 = icmp slt i64 %98, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %103
  tail call void @ERR_put_error(i32 16, i32 0, i32 69, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.36, i64 0, i64 0), i32 319) #16
  br label %251

106:                                              ; preds = %103
  %107 = shl i64 %98, 1
  %108 = tail call i8* @OPENSSL_malloc(i64 %107) #16
  store i8* %108, i8** %99, align 8
  %109 = icmp eq i8* %108, null
  br i1 %109, label %110, label %111

110:                                              ; preds = %106
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.36, i64 0, i64 0), i32 324) #16
  br label %251

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %92, i64 0, i32 14, i32 1
  store i64 %98, i64* %112, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %108, i8* align 1 %96, i64 %107, i1 false) #16
  br label %113

113:                                              ; preds = %66, %111
  %114 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %31, align 8
  %115 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %114, i64 0, i32 16
  %116 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 64, i32 0
  %117 = load i8*, i8** %116, align 8
  %118 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 64, i32 1
  %119 = load i64, i64* %118, align 8
  %120 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %115, i64 0, i32 0
  %121 = load i8*, i8** %120, align 8
  tail call void @OPENSSL_free(i8* %121) #16
  %122 = bitcast %"class.bssl::Array"* %115 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %122, i8 0, i64 16, i1 false) #16
  %123 = icmp eq i64 %119, 0
  br i1 %123, label %130, label %124

124:                                              ; preds = %113
  %125 = tail call i8* @OPENSSL_malloc(i64 %119) #16
  store i8* %125, i8** %120, align 8
  %126 = icmp eq i8* %125, null
  br i1 %126, label %129, label %127

127:                                              ; preds = %124
  %128 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %114, i64 0, i32 16, i32 1
  store i64 %119, i64* %128, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %125, i8* align 1 %117, i64 %119, i1 false) #16
  br label %130

129:                                              ; preds = %124
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.36, i64 0, i64 0), i32 324) #16
  br label %251

130:                                              ; preds = %127, %113
  %131 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %31, align 8
  %132 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %131, i64 0, i32 20
  %133 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 76
  %134 = bitcast %"class.bssl::Array.56"* %133 to i8**
  %135 = load i8*, i8** %134, align 8
  %136 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 76, i32 1
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"class.bssl::Array.56"* %132 to i8**
  %139 = load i8*, i8** %138, align 8
  tail call void @OPENSSL_free(i8* %139) #16
  %140 = bitcast %"class.bssl::Array.56"* %132 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %140, i8 0, i64 16, i1 false) #16
  %141 = icmp eq i64 %137, 0
  br i1 %141, label %152, label %142

142:                                              ; preds = %130
  %143 = icmp slt i64 %137, 0
  br i1 %143, label %144, label %145

144:                                              ; preds = %142
  tail call void @ERR_put_error(i32 16, i32 0, i32 69, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.36, i64 0, i64 0), i32 319) #16
  br label %251

145:                                              ; preds = %142
  %146 = shl i64 %137, 1
  %147 = tail call i8* @OPENSSL_malloc(i64 %146) #16
  store i8* %147, i8** %138, align 8
  %148 = icmp eq i8* %147, null
  br i1 %148, label %149, label %150

149:                                              ; preds = %145
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.36, i64 0, i64 0), i32 324) #16
  br label %251

150:                                              ; preds = %145
  %151 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %131, i64 0, i32 20, i32 1
  store i64 %137, i64* %151, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %147, i8* align 1 %135, i64 %146, i1 false) #16
  br label %152

152:                                              ; preds = %130, %150
  %153 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 55, i32 0, i32 0, i32 0
  %154 = load i8*, i8** %153, align 8
  %155 = icmp eq i8* %154, null
  %156 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %31, align 8
  br i1 %155, label %168, label %157

157:                                              ; preds = %152
  %158 = tail call i8* @OPENSSL_strdup(i8* nonnull %154) #16
  %159 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %156, i64 0, i32 9, i32 0, i32 0, i32 0
  %160 = load i8*, i8** %159, align 8
  store i8* %158, i8** %159, align 8
  %161 = icmp eq i8* %160, null
  br i1 %161, label %163, label %162

162:                                              ; preds = %157
  tail call void @OPENSSL_free(i8* nonnull %160) #16
  br label %163

163:                                              ; preds = %157, %162
  %164 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %31, align 8
  %165 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %164, i64 0, i32 9, i32 0, i32 0, i32 0
  %166 = load i8*, i8** %165, align 8
  %167 = icmp eq i8* %166, null
  br i1 %167, label %251, label %168

168:                                              ; preds = %152, %163
  %169 = phi %"struct.bssl::SSL_CONFIG"* [ %164, %163 ], [ %156, %152 ]
  %170 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 56
  %171 = bitcast i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)** %170 to i64*
  %172 = load i64, i64* %171, align 8
  %173 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %169, i64 0, i32 10
  %174 = bitcast i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)** %173 to i64*
  store i64 %172, i64* %174, align 8
  %175 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 57
  %176 = bitcast i32 (%struct.ssl_st*, i8*, i8*, i32)** %175 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %31, align 8
  %179 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %178, i64 0, i32 11
  %180 = bitcast i32 (%struct.ssl_st*, i8*, i8*, i32)** %179 to i64*
  store i64 %177, i64* %180, align 8
  %181 = load i16, i16* %83, align 8
  %182 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %31, align 8
  %183 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %182, i64 0, i32 23
  %184 = load i16, i16* %183, align 1
  %185 = lshr i16 %181, 1
  %186 = and i16 %185, 8
  %187 = and i16 %184, -9
  %188 = or i16 %187, %186
  store i16 %188, i16* %183, align 1
  %189 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 68, i32 0, i32 0, i32 0
  %190 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %189, align 8
  %191 = icmp eq %struct.evp_pkey_st* %190, null
  br i1 %191, label %194, label %192

192:                                              ; preds = %168
  %193 = tail call i32 @EVP_PKEY_up_ref(%struct.evp_pkey_st* nonnull %190) #16
  br label %194

194:                                              ; preds = %168, %192
  %195 = ptrtoint %struct.evp_pkey_st* %190 to i64
  %196 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %31, align 8
  %197 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %196, i64 0, i32 15
  %198 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %197, i64 0, i32 0, i32 0, i32 0
  %199 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %198, align 8
  %200 = bitcast %"class.std::__1::unique_ptr.18"* %197 to i64*
  store i64 %195, i64* %200, align 8
  %201 = icmp eq %struct.evp_pkey_st* %199, null
  br i1 %201, label %203, label %202

202:                                              ; preds = %194
  tail call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %199) #16
  br label %203

203:                                              ; preds = %202, %194
  %204 = load i16, i16* %83, align 8
  %205 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %31, align 8
  %206 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %205, i64 0, i32 23
  %207 = load i16, i16* %206, align 1
  %208 = lshr i16 %204, 2
  %209 = and i16 %208, 2
  %210 = and i16 %207, -3
  %211 = or i16 %210, %209
  store i16 %211, i16* %206, align 1
  %212 = load i16, i16* %83, align 8
  %213 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %31, align 8
  %214 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %213, i64 0, i32 23
  %215 = and i16 %212, 4
  %216 = load i16, i16* %214, align 1
  %217 = and i16 %216, -5
  %218 = or i16 %217, %215
  store i16 %218, i16* %214, align 1
  %219 = load i16, i16* %83, align 8
  %220 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %31, align 8
  %221 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %220, i64 0, i32 23
  %222 = load i16, i16* %221, align 1
  %223 = lshr i16 %219, 2
  %224 = and i16 %223, 64
  %225 = and i16 %222, -65
  %226 = or i16 %225, %224
  store i16 %226, i16* %221, align 1
  %227 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 6
  %228 = bitcast %struct.ssl_quic_method_st** %227 to i64*
  %229 = load i64, i64* %228, align 8
  %230 = getelementptr inbounds i8, i8* %5, i64 152
  %231 = bitcast i8* %230 to i64*
  store i64 %229, i64* %231, align 8
  %232 = bitcast i8* %5 to %"struct.bssl::SSL_PROTOCOL_METHOD"**
  %233 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %232, align 8
  %234 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %233, i64 0, i32 1
  %235 = load i1 (%struct.ssl_st*)*, i1 (%struct.ssl_st*)** %234, align 8
  %236 = tail call zeroext i1 %235(%struct.ssl_st* nonnull %9) #16
  br i1 %236, label %237, label %251

237:                                              ; preds = %203
  %238 = getelementptr inbounds i8, i8* %5, i64 104
  %239 = bitcast i8* %238 to %struct.ssl_ctx_st**
  %240 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %239, align 8
  %241 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %240, i64 0, i32 1
  %242 = load %"struct.bssl::SSL_X509_METHOD"*, %"struct.bssl::SSL_X509_METHOD"** %241, align 8
  %243 = getelementptr inbounds %"struct.bssl::SSL_X509_METHOD", %"struct.bssl::SSL_X509_METHOD"* %242, i64 0, i32 11
  %244 = load i1 (%"struct.bssl::SSL_HANDSHAKE"*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*)** %243, align 8
  %245 = getelementptr inbounds i8, i8* %5, i64 48
  %246 = bitcast i8* %245 to %"struct.bssl::SSL3_STATE"**
  %247 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %246, align 8
  %248 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %247, i64 0, i32 34, i32 0, i32 0, i32 0
  %249 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %248, align 8
  %250 = tail call zeroext i1 %244(%"struct.bssl::SSL_HANDSHAKE"* %249) #16
  br i1 %250, label %252, label %251

251:                                              ; preds = %38, %61, %163, %237, %203, %129, %110, %105, %149, %144
  tail call void @_ZN6ssl_stD2Ev(%struct.ssl_st* nonnull %9) #16
  tail call void @OPENSSL_free(i8* nonnull %5) #16
  br label %252

252:                                              ; preds = %237, %251, %7, %3
  %253 = phi %struct.ssl_st* [ null, %3 ], [ null, %251 ], [ null, %7 ], [ %9, %237 ]
  ret %struct.ssl_st* %253
}

declare %"struct.bssl::CERT"* @_ZN4bssl12ssl_cert_dupEPNS_4CERTE(%"struct.bssl::CERT"*) local_unnamed_addr #2

declare i8* @OPENSSL_strdup(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4bssl10SSL_CONFIGC2EP6ssl_st(%"struct.bssl::SSL_CONFIG"*, %struct.ssl_st*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %0, i64 0, i32 0
  store %struct.ssl_st* %1, %struct.ssl_st** %3, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %0, i64 0, i32 1
  store i16 0, i16* %4, align 8
  %5 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %0, i64 0, i32 2
  store i16 0, i16* %5, align 2
  %6 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %0, i64 0, i32 23
  %8 = bitcast %struct.X509_VERIFY_PARAM_st** %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 201, i1 false)
  %9 = load i16, i16* %7, align 1
  %10 = and i16 %9, -1024
  %11 = or i16 %10, 512
  store i16 %11, i16* %7, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4bssl10SSL_CONFIGD2Ev(%"struct.bssl::SSL_CONFIG"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %0, i64 0, i32 0
  %3 = load %struct.ssl_st*, %struct.ssl_st** %2, align 8
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %3, i64 0, i32 16, i32 0, i32 0, i32 0
  %5 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %4, align 8
  %6 = icmp eq %struct.ssl_ctx_st* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %5, i64 0, i32 1
  %9 = load %"struct.bssl::SSL_X509_METHOD"*, %"struct.bssl::SSL_X509_METHOD"** %8, align 8
  %10 = getelementptr inbounds %"struct.bssl::SSL_X509_METHOD", %"struct.bssl::SSL_X509_METHOD"* %9, i64 0, i32 12
  %11 = load void (%"struct.bssl::SSL_CONFIG"*)*, void (%"struct.bssl::SSL_CONFIG"*)** %10, align 8
  tail call void %11(%"struct.bssl::SSL_CONFIG"* %0) #16
  br label %12

12:                                               ; preds = %1, %7
  %13 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %14 = load %struct.stack_st_SRTP_PROTECTION_PROFILE*, %struct.stack_st_SRTP_PROTECTION_PROFILE** %13, align 8
  store %struct.stack_st_SRTP_PROTECTION_PROFILE* null, %struct.stack_st_SRTP_PROTECTION_PROFILE** %13, align 8
  %15 = icmp eq %struct.stack_st_SRTP_PROTECTION_PROFILE* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %struct.stack_st_SRTP_PROTECTION_PROFILE* %14 to %struct.stack_st*
  tail call void @sk_free(%struct.stack_st* nonnull %17) #16
  br label %18

18:                                               ; preds = %12, %16
  %19 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %0, i64 0, i32 20
  %20 = bitcast %"class.bssl::Array.56"* %19 to i8**
  %21 = load i8*, i8** %20, align 8
  tail call void @OPENSSL_free(i8* %21) #16
  %22 = bitcast %"class.bssl::Array.56"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #16
  %23 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %0, i64 0, i32 19
  %24 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %23, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  tail call void @OPENSSL_free(i8* %25) #16
  %26 = bitcast %"class.bssl::Array"* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #16
  %27 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %0, i64 0, i32 18
  %28 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %27, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  tail call void @OPENSSL_free(i8* %29) #16
  %30 = bitcast %"class.bssl::Array"* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #16
  %31 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %0, i64 0, i32 17, i32 1
  %32 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %0, i64 0, i32 17, i32 1, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %33, 0
  %35 = getelementptr inbounds %"class.bssl::Array.83", %"class.bssl::Array.83"* %31, i64 0, i32 0
  br i1 %34, label %50, label %36

36:                                               ; preds = %18, %36
  %37 = phi i64 [ %47, %36 ], [ 0, %18 ]
  %38 = load %"struct.bssl::ALPSConfig"*, %"struct.bssl::ALPSConfig"** %35, align 8
  %39 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %38, i64 %37
  %40 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %38, i64 %37, i32 1
  %41 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %40, i64 0, i32 0
  %42 = load i8*, i8** %41, align 8
  tail call void @OPENSSL_free(i8* %42) #16
  %43 = bitcast %"class.bssl::Array"* %40 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 16, i1 false) #16
  %44 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %39, i64 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  tail call void @OPENSSL_free(i8* %45) #16
  %46 = bitcast %"struct.bssl::ALPSConfig"* %39 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 16, i1 false) #16
  %47 = add nuw i64 %37, 1
  %48 = load i64, i64* %32, align 8
  %49 = icmp ult i64 %47, %48
  br i1 %49, label %36, label %50

50:                                               ; preds = %36, %18
  %51 = bitcast %"class.bssl::Array.83"* %31 to i8**
  %52 = load i8*, i8** %51, align 8
  tail call void @OPENSSL_free(i8* %52) #16
  %53 = bitcast %"class.bssl::Array.83"* %31 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #16
  %54 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %0, i64 0, i32 16
  %55 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %54, i64 0, i32 0
  %56 = load i8*, i8** %55, align 8
  tail call void @OPENSSL_free(i8* %56) #16
  %57 = bitcast %"class.bssl::Array"* %54 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 16, i1 false) #16
  %58 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %59 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %58, align 8
  store %struct.evp_pkey_st* null, %struct.evp_pkey_st** %58, align 8
  %60 = icmp eq %struct.evp_pkey_st* %59, null
  br i1 %60, label %62, label %61

61:                                               ; preds = %50
  tail call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %59) #16
  br label %62

62:                                               ; preds = %50, %61
  %63 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %0, i64 0, i32 14
  %64 = bitcast %"class.bssl::Array.56"* %63 to i8**
  %65 = load i8*, i8** %64, align 8
  tail call void @OPENSSL_free(i8* %65) #16
  %66 = bitcast %"class.bssl::Array.56"* %63 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 16, i1 false) #16
  %67 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %68 = load %struct.stack_st_CRYPTO_BUFFER*, %struct.stack_st_CRYPTO_BUFFER** %67, align 8
  store %struct.stack_st_CRYPTO_BUFFER* null, %struct.stack_st_CRYPTO_BUFFER** %67, align 8
  %69 = icmp eq %struct.stack_st_CRYPTO_BUFFER* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %62
  %71 = bitcast %struct.stack_st_CRYPTO_BUFFER* %68 to %struct.stack_st*
  tail call void @sk_pop_free_ex(%struct.stack_st* nonnull %71, void (void (i8*)*, i8*)* nonnull @_ZZN4bssl8internal11DeleterImplI22stack_st_CRYPTO_BUFFERvE4FreeEPS2_ENUlPFvPvES5_E_8__invokeES7_S5_, void (i8*)* null) #16
  br label %72

72:                                               ; preds = %62, %70
  %73 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  store i8* null, i8** %73, align 8
  %75 = icmp eq i8* %74, null
  br i1 %75, label %77, label %76

76:                                               ; preds = %72
  tail call void @OPENSSL_free(i8* nonnull %74) #16
  br label %77

77:                                               ; preds = %72, %76
  %78 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %79 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %78, align 8
  store %"struct.bssl::CERT"* null, %"struct.bssl::CERT"** %78, align 8
  %80 = icmp eq %"struct.bssl::CERT"* %79, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %77
  tail call void @_ZN4bssl4CERTD1Ev(%"struct.bssl::CERT"* nonnull %79) #16
  %82 = bitcast %"struct.bssl::CERT"* %79 to i8*
  tail call void @OPENSSL_free(i8* nonnull %82) #16
  br label %83

83:                                               ; preds = %77, %81
  %84 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %85 = load %"struct.bssl::SSLCipherPreferenceList"*, %"struct.bssl::SSLCipherPreferenceList"** %84, align 8
  store %"struct.bssl::SSLCipherPreferenceList"* null, %"struct.bssl::SSLCipherPreferenceList"** %84, align 8
  %86 = icmp eq %"struct.bssl::SSLCipherPreferenceList"* %85, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %83
  tail call void @_ZN4bssl23SSLCipherPreferenceListD1Ev(%"struct.bssl::SSLCipherPreferenceList"* nonnull %85) #16
  %88 = bitcast %"struct.bssl::SSLCipherPreferenceList"* %85 to i8*
  tail call void @OPENSSL_free(i8* nonnull %88) #16
  br label %89

89:                                               ; preds = %83, %87
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @SSL_free(%struct.ssl_st*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.ssl_st* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  tail call void @_ZN6ssl_stD2Ev(%struct.ssl_st* nonnull %0) #16
  %4 = bitcast %struct.ssl_st* %0 to i8*
  tail call void @OPENSSL_free(i8* nonnull %4) #16
  br label %5

5:                                                ; preds = %1, %3
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @SSL_set_connect_state(%struct.ssl_st* nocapture) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %3 = load i8, i8* %2, align 4
  %4 = and i8 %3, -2
  store i8 %4, i8* %2, align 4
  %5 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 7
  store i32 (%"struct.bssl::SSL_HANDSHAKE"*)* @_ZN4bssl20ssl_client_handshakeEPNS_13SSL_HANDSHAKEE, i32 (%"struct.bssl::SSL_HANDSHAKE"*)** %5, align 8
  ret void
}

declare i32 @_ZN4bssl20ssl_client_handshakeEPNS_13SSL_HANDSHAKEE(%"struct.bssl::SSL_HANDSHAKE"*) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @SSL_set_accept_state(%struct.ssl_st* nocapture) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %3 = load i8, i8* %2, align 4
  %4 = or i8 %3, 1
  store i8 %4, i8* %2, align 4
  %5 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 7
  store i32 (%"struct.bssl::SSL_HANDSHAKE"*)* @_ZN4bssl20ssl_server_handshakeEPNS_13SSL_HANDSHAKEE, i32 (%"struct.bssl::SSL_HANDSHAKE"*)** %5, align 8
  ret void
}

declare i32 @_ZN4bssl20ssl_server_handshakeEPNS_13SSL_HANDSHAKEE(%"struct.bssl::SSL_HANDSHAKE"*) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @SSL_set0_rbio(%struct.ssl_st* nocapture, %struct.bio_st*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %struct.bio_st*, %struct.bio_st** %3, align 8
  store %struct.bio_st* %1, %struct.bio_st** %3, align 8
  %5 = icmp eq %struct.bio_st* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call i32 @BIO_free(%struct.bio_st* nonnull %4) #16
  br label %8

8:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @SSL_set0_wbio(%struct.ssl_st* nocapture, %struct.bio_st*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %4 = load %struct.bio_st*, %struct.bio_st** %3, align 8
  store %struct.bio_st* %1, %struct.bio_st** %3, align 8
  %5 = icmp eq %struct.bio_st* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call i32 @BIO_free(%struct.bio_st* nonnull %4) #16
  br label %8

8:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @SSL_set_bio(%struct.ssl_st* nocapture, %struct.bio_st*, %struct.bio_st*) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %5 = load %struct.bio_st*, %struct.bio_st** %4, align 8
  %6 = icmp eq %struct.bio_st* %5, %1
  br i1 %6, label %7, label %11

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %9 = load %struct.bio_st*, %struct.bio_st** %8, align 8
  %10 = icmp eq %struct.bio_st* %9, %2
  br i1 %10, label %44, label %11

11:                                               ; preds = %7, %3
  %12 = icmp ne %struct.bio_st* %1, null
  %13 = icmp eq %struct.bio_st* %1, %2
  %14 = and i1 %12, %13
  br i1 %14, label %15, label %18

15:                                               ; preds = %11
  %16 = tail call i32 @BIO_up_ref(%struct.bio_st* nonnull %1) #16
  %17 = load %struct.bio_st*, %struct.bio_st** %4, align 8
  br label %18

18:                                               ; preds = %11, %15
  %19 = phi %struct.bio_st* [ %5, %11 ], [ %17, %15 ]
  %20 = icmp eq %struct.bio_st* %19, %1
  %21 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %22 = load %struct.bio_st*, %struct.bio_st** %21, align 8
  br i1 %20, label %23, label %27

23:                                               ; preds = %18
  store %struct.bio_st* %2, %struct.bio_st** %21, align 8
  %24 = icmp eq %struct.bio_st* %22, null
  br i1 %24, label %44, label %25

25:                                               ; preds = %23
  %26 = tail call i32 @BIO_free(%struct.bio_st* nonnull %22) #16
  br label %44

27:                                               ; preds = %18
  %28 = icmp ne %struct.bio_st* %22, %2
  %29 = icmp eq %struct.bio_st* %19, %22
  %30 = or i1 %28, %29
  store %struct.bio_st* %1, %struct.bio_st** %4, align 8
  %31 = icmp eq %struct.bio_st* %19, null
  br i1 %30, label %35, label %32

32:                                               ; preds = %27
  br i1 %31, label %44, label %33

33:                                               ; preds = %32
  %34 = tail call i32 @BIO_free(%struct.bio_st* nonnull %19) #16
  br label %44

35:                                               ; preds = %27
  br i1 %31, label %39, label %36

36:                                               ; preds = %35
  %37 = tail call i32 @BIO_free(%struct.bio_st* nonnull %19) #16
  %38 = load %struct.bio_st*, %struct.bio_st** %21, align 8
  br label %39

39:                                               ; preds = %35, %36
  %40 = phi %struct.bio_st* [ %22, %35 ], [ %38, %36 ]
  store %struct.bio_st* %2, %struct.bio_st** %21, align 8
  %41 = icmp eq %struct.bio_st* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %39
  %43 = tail call i32 @BIO_free(%struct.bio_st* nonnull %40) #16
  br label %44

44:                                               ; preds = %42, %39, %33, %32, %25, %23, %7
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.bio_st* @SSL_get_rbio(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %3 = load %struct.bio_st*, %struct.bio_st** %2, align 8
  ret %struct.bio_st* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.bio_st* @SSL_get_wbio(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %3 = load %struct.bio_st*, %struct.bio_st** %2, align 8
  ret %struct.bio_st* %3
}

declare i32 @BIO_up_ref(%struct.bio_st*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @SSL_quic_max_handshake_flight_len(%struct.ssl_st* nocapture readonly, i32) local_unnamed_addr #3 {
  switch i32 %1, label %26 [
    i32 0, label %27
    i32 1, label %3
    i32 2, label %4
    i32 3, label %27
  ]

3:                                                ; preds = %2
  br label %27

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %6 = load i8, i8* %5, align 4
  %7 = and i8 %6, 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %20, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %10, align 8
  %12 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %11, i64 0, i32 22
  %13 = load i8, i8* %12, align 8
  %14 = and i8 %13, 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %25, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 21
  %18 = load i32, i32* %17, align 8
  %19 = icmp ugt i32 %18, 16384
  br i1 %19, label %27, label %25

20:                                               ; preds = %4
  %21 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 21
  %22 = load i32, i32* %21, align 8
  %23 = shl i32 %22, 1
  %24 = icmp ugt i32 %23, 16384
  br i1 %24, label %27, label %25

25:                                               ; preds = %9, %20, %16
  br label %27

26:                                               ; preds = %2
  br label %27

27:                                               ; preds = %2, %20, %16, %2, %26, %25, %3
  %28 = phi i32 [ 0, %26 ], [ 16384, %25 ], [ 0, %3 ], [ 16384, %2 ], [ %18, %16 ], [ %23, %20 ], [ 16384, %2 ]
  %29 = zext i32 %28 to i64
  ret i64 %29
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SSL_quic_read_level(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %3 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 17
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SSL_quic_write_level(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %3 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 18
  %5 = load i32, i32* %4, align 4
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_provide_quic_data(%struct.ssl_st*, i32, i8*, i64) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 24
  %6 = load %struct.ssl_quic_method_st*, %struct.ssl_quic_method_st** %5, align 8
  %7 = icmp eq %struct.ssl_quic_method_st* %6, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %4
  tail call void @ERR_put_error(i32 16, i32 0, i32 66, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 852) #16
  br label %60

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %11 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %10, align 8
  %12 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %11, i64 0, i32 17
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, %1
  br i1 %14, label %16, label %15

15:                                               ; preds = %9
  tail call void @ERR_put_error(i32 16, i32 0, i32 299, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 857) #16
  br label %60

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %11, i64 0, i32 25, i32 0, i32 0, i32 0
  %18 = load %struct.buf_mem_st*, %struct.buf_mem_st** %17, align 8
  %19 = icmp eq %struct.buf_mem_st* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %18, i64 0, i32 0
  %22 = load i64, i64* %21, align 8
  br label %23

23:                                               ; preds = %16, %20
  %24 = phi i64 [ %22, %20 ], [ 0, %16 ]
  %25 = add i64 %24, %3
  %26 = icmp ult i64 %25, %3
  br i1 %26, label %56, label %27

27:                                               ; preds = %23
  switch i32 %1, label %51 [
    i32 0, label %52
    i32 1, label %28
    i32 2, label %29
    i32 3, label %52
  ]

28:                                               ; preds = %27
  br label %52

29:                                               ; preds = %27
  %30 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %31 = load i8, i8* %30, align 4
  %32 = and i8 %31, 1
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %45, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %35, align 8
  %37 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %36, i64 0, i32 22
  %38 = load i8, i8* %37, align 8
  %39 = and i8 %38, 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %50, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 21
  %43 = load i32, i32* %42, align 8
  %44 = icmp ugt i32 %43, 16384
  br i1 %44, label %52, label %50

45:                                               ; preds = %29
  %46 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 21
  %47 = load i32, i32* %46, align 8
  %48 = shl i32 %47, 1
  %49 = icmp ugt i32 %48, 16384
  br i1 %49, label %52, label %50

50:                                               ; preds = %45, %41, %34
  br label %52

51:                                               ; preds = %27
  br label %52

52:                                               ; preds = %27, %27, %28, %41, %45, %50, %51
  %53 = phi i32 [ 0, %51 ], [ 16384, %50 ], [ 0, %28 ], [ 16384, %27 ], [ %43, %41 ], [ %48, %45 ], [ 16384, %27 ]
  %54 = zext i32 %53 to i64
  %55 = icmp ugt i64 %25, %54
  br i1 %55, label %56, label %57

56:                                               ; preds = %52, %23
  tail call void @ERR_put_error(i32 16, i32 0, i32 150, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 864) #16
  br label %60

57:                                               ; preds = %52
  %58 = tail call zeroext i1 @_ZN4bssl25tls_append_handshake_dataEP6ssl_stNS_4SpanIKhEE(%struct.ssl_st* %0, i8* %2, i64 %3) #16
  %59 = zext i1 %58 to i32
  br label %60

60:                                               ; preds = %56, %57, %15, %8
  %61 = phi i32 [ 0, %8 ], [ 0, %15 ], [ 0, %56 ], [ %59, %57 ]
  ret i32 %61
}

declare zeroext i1 @_ZN4bssl25tls_append_handshake_dataEP6ssl_stNS_4SpanIKhEE(%struct.ssl_st*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_do_handshake(%struct.ssl_st*) local_unnamed_addr #0 {
  %2 = alloca i8, align 1
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %4 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %3, align 8
  %5 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %4, i64 0, i32 16
  store i32 0, i32* %5, align 4
  tail call void @ERR_clear_error() #16
  tail call void @ERR_clear_system_error() #16
  %6 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 7
  %7 = load i32 (%"struct.bssl::SSL_HANDSHAKE"*)*, i32 (%"struct.bssl::SSL_HANDSHAKE"*)** %6, align 8
  %8 = icmp eq i32 (%"struct.bssl::SSL_HANDSHAKE"*)* %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %1
  tail call void @ERR_put_error(i32 16, i32 0, i32 134, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 875) #16
  br label %104

10:                                               ; preds = %1
  %11 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %3, align 8
  %12 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %11, i64 0, i32 34, i32 0, i32 0, i32 0
  %13 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %12, align 8
  %14 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %13, null
  br i1 %14, label %104, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %13, i64 0, i32 46
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 32
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %104

20:                                               ; preds = %15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #16
  store i8 0, i8* %2, align 1
  %21 = call i32 @_ZN4bssl17ssl_run_handshakeEPNS_13SSL_HANDSHAKEEPb(%"struct.bssl::SSL_HANDSHAKE"* nonnull %13, i8* nonnull %2) #16
  %22 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %23 = load i8, i8* %22, align 4
  %24 = and i8 %23, 1
  %25 = icmp eq i8 %24, 0
  %26 = select i1 %25, i32 4098, i32 8194
  %27 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 15
  %28 = load void (%struct.ssl_st*, i32, i32)*, void (%struct.ssl_st*, i32, i32)** %27, align 8
  %29 = icmp eq void (%struct.ssl_st*, i32, i32)* %28, null
  br i1 %29, label %30, label %36

30:                                               ; preds = %20
  %31 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %32 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %31, align 8
  %33 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %32, i64 0, i32 30
  %34 = load void (%struct.ssl_st*, i32, i32)*, void (%struct.ssl_st*, i32, i32)** %33, align 8
  %35 = icmp eq void (%struct.ssl_st*, i32, i32)* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %30, %20
  %37 = phi void (%struct.ssl_st*, i32, i32)* [ %28, %20 ], [ %34, %30 ]
  call void %37(%struct.ssl_st* %0, i32 %26, i32 %21) #16
  br label %38

38:                                               ; preds = %30, %36
  %39 = icmp slt i32 %21, 1
  br i1 %39, label %102, label %40

40:                                               ; preds = %38
  %41 = load i8, i8* %2, align 1, !range !2
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %102

43:                                               ; preds = %40
  %44 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %3, align 8
  %45 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %44, i64 0, i32 34, i32 0, i32 0, i32 0
  %46 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %45, align 8
  store %"struct.bssl::SSL_HANDSHAKE"* null, %"struct.bssl::SSL_HANDSHAKE"** %45, align 8
  %47 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %43
  call void @_ZN4bssl13SSL_HANDSHAKED1Ev(%"struct.bssl::SSL_HANDSHAKE"* nonnull %46) #16
  %49 = bitcast %"struct.bssl::SSL_HANDSHAKE"* %46 to i8*
  call void @OPENSSL_free(i8* nonnull %49) #16
  br label %50

50:                                               ; preds = %43, %48
  %51 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %3, align 8
  %52 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %51, i64 0, i32 34, i32 0, i32 0, i32 0
  %53 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %52, align 8
  %54 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %53, null
  br i1 %54, label %55, label %102

55:                                               ; preds = %50
  %56 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %57 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %56, align 8
  %58 = icmp eq %"struct.bssl::SSL_CONFIG"* %57, null
  br i1 %58, label %102, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %57, i64 0, i32 23
  %61 = load i16, i16* %60, align 1
  %62 = trunc i16 %61 to i8
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %102

64:                                               ; preds = %59
  %65 = load i8, i8* %22, align 4
  %66 = and i8 %65, 1
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %68, label %97

68:                                               ; preds = %64
  %69 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 0
  %70 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %69, align 8
  %71 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %70, i64 0, i32 0
  %72 = load i8, i8* %71, align 8, !range !2
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %74, label %97

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %51, i64 0, i32 23
  %76 = load i16, i16* %75, align 1
  %77 = and i16 %76, 2
  %78 = icmp eq i16 %77, 0
  br i1 %78, label %86, label %79

79:                                               ; preds = %74
  %80 = call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %0) #16
  %81 = icmp ugt i16 %80, 771
  %82 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %56, align 8
  br i1 %81, label %95, label %83

83:                                               ; preds = %79
  %84 = icmp eq %"struct.bssl::SSL_CONFIG"* %82, null
  br i1 %84, label %85, label %86

85:                                               ; preds = %83
  store %"struct.bssl::SSL_CONFIG"* null, %"struct.bssl::SSL_CONFIG"** %56, align 8
  br label %102

86:                                               ; preds = %74, %83
  %87 = phi %"struct.bssl::SSL_CONFIG"* [ %82, %83 ], [ %57, %74 ]
  %88 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 25
  %89 = load i32, i32* %88, align 8
  switch i32 %89, label %97 [
    i32 1, label %90
    i32 4, label %102
    i32 2, label %102
  ]

90:                                               ; preds = %86
  %91 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %3, align 8
  %92 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %91, i64 0, i32 15
  %93 = load i32, i32* %92, align 8
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %102, label %97

95:                                               ; preds = %79
  store %"struct.bssl::SSL_CONFIG"* null, %"struct.bssl::SSL_CONFIG"** %56, align 8
  %96 = icmp eq %"struct.bssl::SSL_CONFIG"* %82, null
  br i1 %96, label %102, label %99

97:                                               ; preds = %90, %68, %64, %86
  %98 = phi %"struct.bssl::SSL_CONFIG"* [ %87, %86 ], [ %87, %90 ], [ %57, %68 ], [ %57, %64 ]
  store %"struct.bssl::SSL_CONFIG"* null, %"struct.bssl::SSL_CONFIG"** %56, align 8
  br label %99

99:                                               ; preds = %97, %95
  %100 = phi %"struct.bssl::SSL_CONFIG"* [ %82, %95 ], [ %98, %97 ]
  call void @_ZN4bssl10SSL_CONFIGD2Ev(%"struct.bssl::SSL_CONFIG"* nonnull %100) #16
  %101 = bitcast %"struct.bssl::SSL_CONFIG"* %100 to i8*
  call void @OPENSSL_free(i8* nonnull %101) #16
  br label %102

102:                                              ; preds = %85, %86, %86, %99, %95, %90, %59, %55, %50, %40, %38
  %103 = phi i32 [ %21, %38 ], [ 1, %40 ], [ 1, %50 ], [ 1, %55 ], [ 1, %59 ], [ 1, %90 ], [ 1, %95 ], [ 1, %99 ], [ 1, %86 ], [ 1, %86 ], [ 1, %85 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #16
  br label %104

104:                                              ; preds = %15, %10, %102, %9
  %105 = phi i32 [ -1, %9 ], [ %103, %102 ], [ 1, %15 ], [ 1, %10 ]
  ret i32 %105
}

declare i32 @_ZN4bssl17ssl_run_handshakeEPNS_13SSL_HANDSHAKEEPb(%"struct.bssl::SSL_HANDSHAKE"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_connect(%struct.ssl_st*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 7
  %3 = load i32 (%"struct.bssl::SSL_HANDSHAKE"*)*, i32 (%"struct.bssl::SSL_HANDSHAKE"*)** %2, align 8
  %4 = icmp eq i32 (%"struct.bssl::SSL_HANDSHAKE"*)* %3, null
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %7 = load i8, i8* %6, align 4
  %8 = and i8 %7, -2
  store i8 %8, i8* %6, align 4
  store i32 (%"struct.bssl::SSL_HANDSHAKE"*)* @_ZN4bssl20ssl_client_handshakeEPNS_13SSL_HANDSHAKEE, i32 (%"struct.bssl::SSL_HANDSHAKE"*)** %2, align 8
  br label %9

9:                                                ; preds = %5, %1
  %10 = tail call i32 @SSL_do_handshake(%struct.ssl_st* %0)
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_accept(%struct.ssl_st*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 7
  %3 = load i32 (%"struct.bssl::SSL_HANDSHAKE"*)*, i32 (%"struct.bssl::SSL_HANDSHAKE"*)** %2, align 8
  %4 = icmp eq i32 (%"struct.bssl::SSL_HANDSHAKE"*)* %3, null
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %7 = load i8, i8* %6, align 4
  %8 = or i8 %7, 1
  store i8 %8, i8* %6, align 4
  store i32 (%"struct.bssl::SSL_HANDSHAKE"*)* @_ZN4bssl20ssl_server_handshakeEPNS_13SSL_HANDSHAKEE, i32 (%"struct.bssl::SSL_HANDSHAKE"*)** %2, align 8
  br label %9

9:                                                ; preds = %5, %1
  %10 = tail call i32 @SSL_do_handshake(%struct.ssl_st* %0)
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_process_quic_post_handshake(%struct.ssl_st*) local_unnamed_addr #0 {
  %2 = alloca %"struct.bssl::SSLMessage", align 8
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %4 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %3, align 8
  %5 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %4, i64 0, i32 16
  store i32 0, i32* %5, align 4
  tail call void @ERR_clear_error() #16
  tail call void @ERR_clear_system_error() #16
  %6 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %3, align 8
  %7 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %6, i64 0, i32 34, i32 0, i32 0, i32 0
  %8 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %7, align 8
  %9 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %8, i64 0, i32 46
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 32
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %10
  tail call void @ERR_put_error(i32 16, i32 0, i32 66, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 961) #16
  br label %53

16:                                               ; preds = %10, %1
  %17 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %6, i64 0, i32 12
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 2
  br i1 %19, label %20, label %23

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %6, i64 0, i32 14, i32 0, i32 0, i32 0
  %22 = load %struct.err_save_state_st*, %struct.err_save_state_st** %21, align 8
  tail call void @ERR_restore_state(%struct.err_save_state_st* %22) #16
  br label %53

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %24) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 40, i1 false)
  %25 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 0
  %26 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %25, align 8
  %27 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %26, i64 0, i32 3
  %28 = load i1 (%struct.ssl_st*, %"struct.bssl::SSLMessage"*)*, i1 (%struct.ssl_st*, %"struct.bssl::SSLMessage"*)** %27, align 8
  %29 = call zeroext i1 %28(%struct.ssl_st* %0, %"struct.bssl::SSLMessage"* nonnull %2) #16
  br i1 %29, label %30, label %51

30:                                               ; preds = %23, %42
  %31 = call fastcc i32 @_ZL21ssl_do_post_handshakeP6ssl_stRKN4bssl10SSLMessageE(%struct.ssl_st* %0, %"struct.bssl::SSLMessage"* nonnull dereferenceable(40) %2)
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %42

33:                                               ; preds = %30
  %34 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %3, align 8
  %35 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %34, i64 0, i32 12
  store i32 2, i32* %35, align 8
  %36 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %3, align 8
  %37 = call %struct.err_save_state_st* @ERR_save_state() #16
  %38 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %36, i64 0, i32 14, i32 0, i32 0, i32 0
  %39 = load %struct.err_save_state_st*, %struct.err_save_state_st** %38, align 8
  store %struct.err_save_state_st* %37, %struct.err_save_state_st** %38, align 8
  %40 = icmp eq %struct.err_save_state_st* %39, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %33
  call void @ERR_SAVE_STATE_free(%struct.err_save_state_st* nonnull %39) #16
  br label %51

42:                                               ; preds = %30
  %43 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %25, align 8
  %44 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %43, i64 0, i32 4
  %45 = bitcast {}** %44 to void (%struct.ssl_st*)**
  %46 = load void (%struct.ssl_st*)*, void (%struct.ssl_st*)** %45, align 8
  call void %46(%struct.ssl_st* %0) #16
  %47 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %25, align 8
  %48 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %47, i64 0, i32 3
  %49 = load i1 (%struct.ssl_st*, %"struct.bssl::SSLMessage"*)*, i1 (%struct.ssl_st*, %"struct.bssl::SSLMessage"*)** %48, align 8
  %50 = call zeroext i1 %49(%struct.ssl_st* %0, %"struct.bssl::SSLMessage"* nonnull %2) #16
  br i1 %50, label %30, label %51

51:                                               ; preds = %42, %23, %41, %33
  %52 = phi i32 [ 0, %33 ], [ 0, %41 ], [ 1, %23 ], [ 1, %42 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %24) #16
  br label %53

53:                                               ; preds = %20, %51, %15
  %54 = phi i32 [ 0, %15 ], [ %52, %51 ], [ 0, %20 ]
  ret i32 %54
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZL21ssl_do_post_handshakeP6ssl_stRKN4bssl10SSLMessageE(%struct.ssl_st*, %"struct.bssl::SSLMessage"* dereferenceable(40)) unnamed_addr #0 {
  %3 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %0) #16
  %4 = icmp ugt i16 %3, 771
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = tail call zeroext i1 @_ZN4bssl20tls13_post_handshakeEP6ssl_stRKNS_10SSLMessageE(%struct.ssl_st* %0, %"struct.bssl::SSLMessage"* dereferenceable(40) %1) #16
  %7 = zext i1 %6 to i32
  br label %39

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %10 = load i8, i8* %9, align 4
  %11 = and i8 %10, 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %8
  tail call void @ERR_put_error(i32 16, i32 0, i32 182, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 929) #16
  tail call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %0, i32 2, i32 100) #16
  br label %39

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %1, i64 0, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %1, i64 0, i32 2
  %20 = tail call i64 @CBS_len(%struct.cbs_st* %19) #16
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %23, label %22

22:                                               ; preds = %18, %14
  tail call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %0, i32 2, i32 50) #16
  tail call void @ERR_put_error(i32 16, i32 0, i32 110, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 936) #16
  br label %39

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 25
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 3
  br i1 %26, label %39, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %29 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %28, align 8
  %30 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %29, i64 0, i32 23
  %31 = load i16, i16* %30, align 1
  %32 = or i16 %31, 16384
  store i16 %32, i16* %30, align 1
  %33 = load i32, i32* %24, align 8
  %34 = icmp eq i32 %33, 4
  br i1 %34, label %39, label %35

35:                                               ; preds = %27
  %36 = tail call i32 @SSL_renegotiate(%struct.ssl_st* %0)
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %0, i32 2, i32 100) #16
  br label %39

39:                                               ; preds = %35, %27, %23, %38, %22, %13, %5
  %40 = phi i32 [ %7, %5 ], [ 0, %13 ], [ 0, %22 ], [ 0, %38 ], [ 1, %23 ], [ 1, %27 ], [ 1, %35 ]
  ret i32 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_read(%struct.ssl_st*, i8* nocapture, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 24
  %5 = load %struct.ssl_quic_method_st*, %struct.ssl_quic_method_st** %4, align 8
  %6 = icmp eq %struct.ssl_quic_method_st* %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @ERR_put_error(i32 16, i32 0, i32 66, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 1071) #16
  br label %47

8:                                                ; preds = %3
  %9 = tail call fastcc i32 @_ZL13ssl_read_implP6ssl_st(%struct.ssl_st* %0) #16
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %47, label %11

11:                                               ; preds = %8
  %12 = icmp slt i32 %2, 1
  br i1 %12, label %47, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %15 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %14, align 8
  %16 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %15, i64 0, i32 6, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = sext i32 %2 to i64
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i64 %18, i64 %17
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %15, i64 0, i32 6, i32 0
  %24 = load i8*, i8** %23, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %24, i64 %20, i1 false) #16
  br label %25

25:                                               ; preds = %13, %22
  %26 = trunc i64 %20 to i32
  %27 = icmp slt i32 %26, 1
  br i1 %27, label %47, label %28

28:                                               ; preds = %25
  %29 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %14, align 8
  %30 = shl i64 %20, 32
  %31 = ashr exact i64 %30, 32
  %32 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %29, i64 0, i32 6, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %35, label %36

35:                                               ; preds = %28
  tail call void @abort() #18
  unreachable

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %29, i64 0, i32 6, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds i8, i8* %38, i64 %31
  %40 = sub i64 %33, %31
  store i8* %39, i8** %37, align 8
  store i64 %40, i64* %32, align 8
  %41 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %14, align 8
  %42 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %41, i64 0, i32 6, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %36
  %46 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %41, i64 0, i32 4
  tail call void @_ZN4bssl9SSLBuffer15DiscardConsumedEv(%"class.bssl::SSLBuffer"* %46) #16
  br label %47

47:                                               ; preds = %11, %8, %7, %36, %45, %25
  %48 = phi i32 [ %26, %36 ], [ %26, %45 ], [ %26, %25 ], [ %2, %11 ], [ %9, %8 ], [ 0, %7 ]
  ret i32 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_peek(%struct.ssl_st*, i8* nocapture, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 24
  %5 = load %struct.ssl_quic_method_st*, %struct.ssl_quic_method_st** %4, align 8
  %6 = icmp eq %struct.ssl_quic_method_st* %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @ERR_put_error(i32 16, i32 0, i32 66, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 1071) #16
  br label %27

8:                                                ; preds = %3
  %9 = tail call fastcc i32 @_ZL13ssl_read_implP6ssl_st(%struct.ssl_st* %0)
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %27, label %11

11:                                               ; preds = %8
  %12 = icmp slt i32 %2, 1
  br i1 %12, label %27, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %15 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %14, align 8
  %16 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %15, i64 0, i32 6, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = sext i32 %2 to i64
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i64 %18, i64 %17
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %15, i64 0, i32 6, i32 0
  %24 = load i8*, i8** %23, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %24, i64 %20, i1 false) #16
  br label %25

25:                                               ; preds = %13, %22
  %26 = trunc i64 %20 to i32
  br label %27

27:                                               ; preds = %25, %8, %11, %7
  %28 = phi i32 [ 0, %7 ], [ %26, %25 ], [ %9, %8 ], [ %2, %11 ]
  ret i32 %28
}

declare void @_ZN4bssl9SSLBuffer15DiscardConsumedEv(%"class.bssl::SSLBuffer"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZL13ssl_read_implP6ssl_st(%struct.ssl_st*) unnamed_addr #0 {
  %2 = alloca %"struct.bssl::SSLMessage", align 8
  %3 = alloca i8, align 1
  %4 = alloca i64, align 8
  %5 = alloca i8, align 1
  %6 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %7 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %8 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %7, i64 0, i32 16
  store i32 0, i32* %8, align 4
  tail call void @ERR_clear_error() #16
  tail call void @ERR_clear_system_error() #16
  %9 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 7
  %10 = load i32 (%"struct.bssl::SSL_HANDSHAKE"*)*, i32 (%"struct.bssl::SSL_HANDSHAKE"*)** %9, align 8
  %11 = icmp eq i32 (%"struct.bssl::SSL_HANDSHAKE"*)* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %1
  tail call void @ERR_put_error(i32 16, i32 0, i32 226, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 988) #16
  br label %148

13:                                               ; preds = %1
  %14 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %15 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %14, i64 0, i32 12
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 2
  br i1 %17, label %25, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %2, i64 0, i32 0
  %20 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 0
  %21 = bitcast i64* %4 to i8*
  %22 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %14, i64 0, i32 6, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %28, label %148

25:                                               ; preds = %13
  %26 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %14, i64 0, i32 14, i32 0, i32 0, i32 0
  %27 = load %struct.err_save_state_st*, %struct.err_save_state_st** %26, align 8
  tail call void @ERR_restore_state(%struct.err_save_state_st* %27) #16
  br label %148

28:                                               ; preds = %18, %142
  %29 = phi i32 [ %143, %142 ], [ undef, %18 ]
  %30 = phi %"struct.bssl::SSL3_STATE"* [ %144, %142 ], [ %14, %18 ]
  %31 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %30, i64 0, i32 23
  %32 = load i16, i16* %31, align 1
  %33 = and i16 %32, 16384
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %35, label %39

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %30, i64 0, i32 34, i32 0, i32 0, i32 0
  %37 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %36, align 8
  %38 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %37, null
  br i1 %38, label %58, label %41

39:                                               ; preds = %28
  %40 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %30, i64 0, i32 16
  store i32 19, i32* %40, align 4
  br label %148

41:                                               ; preds = %35, %52
  %42 = phi %"struct.bssl::SSL_HANDSHAKE"* [ %55, %52 ], [ %37, %35 ]
  %43 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %42, i64 0, i32 46
  %44 = load i32, i32* %43, align 8
  %45 = and i32 %44, 32800
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %41
  %48 = call i32 @SSL_do_handshake(%struct.ssl_st* %0)
  %49 = icmp slt i32 %48, 0
  br i1 %49, label %148, label %50

50:                                               ; preds = %47
  %51 = icmp eq i32 %48, 0
  br i1 %51, label %57, label %52

52:                                               ; preds = %50
  %53 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %54 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %53, i64 0, i32 34, i32 0, i32 0, i32 0
  %55 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %54, align 8
  %56 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %55, null
  br i1 %56, label %58, label %41

57:                                               ; preds = %50
  call void @ERR_put_error(i32 16, i32 0, i32 215, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 1012) #16
  br label %148

58:                                               ; preds = %52, %41, %35
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %19) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 40, i1 false)
  %59 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %20, align 8
  %60 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %59, i64 0, i32 3
  %61 = load i1 (%struct.ssl_st*, %"struct.bssl::SSLMessage"*)*, i1 (%struct.ssl_st*, %"struct.bssl::SSLMessage"*)** %60, align 8
  %62 = call zeroext i1 %61(%struct.ssl_st* %0, %"struct.bssl::SSLMessage"* nonnull %2) #16
  br i1 %62, label %63, label %92

63:                                               ; preds = %58
  %64 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %65 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %64, i64 0, i32 34, i32 0, i32 0, i32 0
  %66 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %65, align 8
  %67 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %66, null
  br i1 %67, label %75, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %66, i64 0, i32 46
  %70 = load i32, i32* %69, align 8
  %71 = and i32 %70, 32
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %75

73:                                               ; preds = %68
  %74 = and i32 %70, -32769
  store i32 %74, i32* %69, align 8
  br label %138

75:                                               ; preds = %68, %63
  %76 = call fastcc i32 @_ZL21ssl_do_post_handshakeP6ssl_stRKN4bssl10SSLMessageE(%struct.ssl_st* %0, %"struct.bssl::SSLMessage"* nonnull dereferenceable(40) %2)
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %87

78:                                               ; preds = %75
  %79 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %80 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %79, i64 0, i32 12
  store i32 2, i32* %80, align 8
  %81 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %82 = call %struct.err_save_state_st* @ERR_save_state() #16
  %83 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %81, i64 0, i32 14, i32 0, i32 0, i32 0
  %84 = load %struct.err_save_state_st*, %struct.err_save_state_st** %83, align 8
  store %struct.err_save_state_st* %82, %struct.err_save_state_st** %83, align 8
  %85 = icmp eq %struct.err_save_state_st* %84, null
  br i1 %85, label %137, label %86

86:                                               ; preds = %78
  call void @ERR_SAVE_STATE_free(%struct.err_save_state_st* nonnull %84) #16
  br label %137

87:                                               ; preds = %75
  %88 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %20, align 8
  %89 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %88, i64 0, i32 4
  %90 = bitcast {}** %89 to void (%struct.ssl_st*)**
  %91 = load void (%struct.ssl_st*)*, void (%struct.ssl_st*)** %90, align 8
  call void %91(%struct.ssl_st* %0) #16
  br label %138

92:                                               ; preds = %58
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #16
  store i8 50, i8* %3, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #16
  %93 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %94 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %93, i64 0, i32 4, i32 0
  %95 = load i8*, i8** %94, align 8
  %96 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %93, i64 0, i32 4, i32 1
  %97 = load i16, i16* %96, align 8
  %98 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %93, i64 0, i32 4, i32 2
  %99 = load i16, i16* %98, align 2
  store i64 0, i64* %4, align 8
  %100 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %93, i64 0, i32 12
  %101 = load i32, i32* %100, align 8
  %102 = icmp eq i32 %101, 2
  br i1 %102, label %103, label %106

103:                                              ; preds = %92
  %104 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %93, i64 0, i32 14, i32 0, i32 0, i32 0
  %105 = load %struct.err_save_state_st*, %struct.err_save_state_st** %104, align 8
  call void @ERR_restore_state(%struct.err_save_state_st* %105) #16
  store i8 0, i8* %3, align 1
  br label %125

106:                                              ; preds = %92
  %107 = zext i16 %97 to i64
  %108 = getelementptr inbounds i8, i8* %95, i64 %107
  %109 = zext i16 %99 to i64
  %110 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %93, i64 0, i32 6
  %111 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %20, align 8
  %112 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %111, i64 0, i32 8
  %113 = load i32 (%struct.ssl_st*, %"class.bssl::Span"*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, %"class.bssl::Span"*, i64*, i8*, i8*, i64)** %112, align 8
  %114 = call i32 %113(%struct.ssl_st* %0, %"class.bssl::Span"* %110, i64* nonnull %4, i8* nonnull %3, i8* %108, i64 %109) #16
  %115 = icmp eq i32 %114, 4
  br i1 %115, label %116, label %125

116:                                              ; preds = %106
  %117 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %118 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %117, i64 0, i32 12
  store i32 2, i32* %118, align 8
  %119 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %120 = call %struct.err_save_state_st* @ERR_save_state() #16
  %121 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %119, i64 0, i32 14, i32 0, i32 0, i32 0
  %122 = load %struct.err_save_state_st*, %struct.err_save_state_st** %121, align 8
  store %struct.err_save_state_st* %120, %struct.err_save_state_st** %121, align 8
  %123 = icmp eq %struct.err_save_state_st* %122, null
  br i1 %123, label %125, label %124

124:                                              ; preds = %116
  call void @ERR_SAVE_STATE_free(%struct.err_save_state_st* nonnull %122) #16
  br label %125

125:                                              ; preds = %103, %106, %116, %124
  %126 = phi i32 [ 4, %103 ], [ %114, %106 ], [ 4, %116 ], [ 4, %124 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #16
  store i8 -86, i8* %5, align 1
  %127 = load i64, i64* %4, align 8
  %128 = load i8, i8* %3, align 1
  %129 = call i32 @_ZN4bssl22ssl_handle_open_recordEP6ssl_stPbNS_17ssl_open_record_tEmh(%struct.ssl_st* %0, i8* nonnull %5, i32 %126, i64 %127, i8 zeroext %128) #16
  %130 = icmp slt i32 %129, 1
  br i1 %130, label %139, label %131

131:                                              ; preds = %125
  %132 = load i8, i8* %5, align 1, !range !2
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %134, label %139

134:                                              ; preds = %131
  %135 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %136 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %135, i64 0, i32 22
  store i8 0, i8* %136, align 4
  br label %139

137:                                              ; preds = %78, %86
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %19) #16
  br label %148

138:                                              ; preds = %73, %87
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %19) #16
  br label %142

139:                                              ; preds = %125, %131, %134
  %140 = phi i1 [ true, %125 ], [ false, %131 ], [ false, %134 ]
  %141 = phi i32 [ %129, %125 ], [ %29, %131 ], [ %29, %134 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %19) #16
  br i1 %140, label %148, label %142

142:                                              ; preds = %138, %139
  %143 = phi i32 [ %29, %138 ], [ %141, %139 ]
  %144 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %145 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %144, i64 0, i32 6, i32 1
  %146 = load i64, i64* %145, align 8
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %28, label %148

148:                                              ; preds = %139, %142, %47, %18, %57, %137, %25, %39, %12
  %149 = phi i32 [ -1, %12 ], [ -1, %39 ], [ -1, %25 ], [ -1, %137 ], [ -1, %57 ], [ 1, %18 ], [ %48, %47 ], [ 1, %142 ], [ %141, %139 ]
  ret i32 %149
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_write(%struct.ssl_st*, i8*, i32) local_unnamed_addr #0 {
  %4 = alloca i8, align 1
  %5 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %6 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %5, align 8
  %7 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %6, i64 0, i32 16
  store i32 0, i32* %7, align 4
  tail call void @ERR_clear_error() #16
  tail call void @ERR_clear_system_error() #16
  %8 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 24
  %9 = load %struct.ssl_quic_method_st*, %struct.ssl_quic_method_st** %8, align 8
  %10 = icmp eq %struct.ssl_quic_method_st* %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %3
  tail call void @ERR_put_error(i32 16, i32 0, i32 66, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 1092) #16
  br label %52

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 7
  %14 = load i32 (%"struct.bssl::SSL_HANDSHAKE"*)*, i32 (%"struct.bssl::SSL_HANDSHAKE"*)** %13, align 8
  %15 = icmp eq i32 (%"struct.bssl::SSL_HANDSHAKE"*)* %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @ERR_put_error(i32 16, i32 0, i32 226, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 1097) #16
  br label %52

17:                                               ; preds = %12
  %18 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %5, align 8
  %19 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %18, i64 0, i32 13
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %23, label %22

22:                                               ; preds = %17
  tail call void @ERR_put_error(i32 16, i32 0, i32 194, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 1102) #16
  br label %52

23:                                               ; preds = %17
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #16
  store i8 0, i8* %4, align 1
  %24 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 0
  br label %25

25:                                               ; preds = %48, %23
  %26 = phi %"struct.bssl::SSL3_STATE"* [ %49, %48 ], [ %18, %23 ]
  %27 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %26, i64 0, i32 34, i32 0, i32 0, i32 0
  %28 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %27, align 8
  %29 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %28, null
  br i1 %29, label %41, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %28, i64 0, i32 46
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, 65568
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %30
  %36 = call i32 @SSL_do_handshake(%struct.ssl_st* %0)
  %37 = icmp slt i32 %36, 0
  br i1 %37, label %50, label %38

38:                                               ; preds = %35
  %39 = icmp eq i32 %36, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %38
  call void @ERR_put_error(i32 16, i32 0, i32 215, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 1116) #16
  br label %50

41:                                               ; preds = %30, %25, %38
  %42 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %24, align 8
  %43 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %42, i64 0, i32 9
  %44 = load i32 (%struct.ssl_st*, i8*, i8*, i32)*, i32 (%struct.ssl_st*, i8*, i8*, i32)** %43, align 8
  %45 = call i32 %44(%struct.ssl_st* %0, i8* nonnull %4, i8* %1, i32 %2) #16
  %46 = load i8, i8* %4, align 1, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %50, label %48

48:                                               ; preds = %41
  %49 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %5, align 8
  br label %25

50:                                               ; preds = %41, %35, %40
  %51 = phi i32 [ -1, %40 ], [ %45, %41 ], [ %36, %35 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #16
  br label %52

52:                                               ; preds = %50, %22, %16, %11
  %53 = phi i32 [ 0, %11 ], [ -1, %16 ], [ -1, %22 ], [ %51, %50 ]
  ret i32 %53
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_key_update(%struct.ssl_st*, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %4 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %3, align 8
  %5 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %4, i64 0, i32 16
  store i32 0, i32* %5, align 4
  tail call void @ERR_clear_error() #16
  tail call void @ERR_clear_system_error() #16
  %6 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 7
  %7 = load i32 (%"struct.bssl::SSL_HANDSHAKE"*)*, i32 (%"struct.bssl::SSL_HANDSHAKE"*)** %6, align 8
  %8 = icmp eq i32 (%"struct.bssl::SSL_HANDSHAKE"*)* %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %2
  tail call void @ERR_put_error(i32 16, i32 0, i32 226, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 1131) #16
  br label %37

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %12 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %11, align 8
  %13 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %12, i64 0, i32 6
  %14 = load %struct.ssl_quic_method_st*, %struct.ssl_quic_method_st** %13, align 8
  %15 = icmp eq %struct.ssl_quic_method_st* %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %10
  tail call void @ERR_put_error(i32 16, i32 0, i32 66, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 1136) #16
  br label %37

17:                                               ; preds = %10
  %18 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %3, align 8
  %19 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %18, i64 0, i32 23
  %20 = load i16, i16* %19, align 1
  %21 = and i16 %20, 32
  %22 = icmp eq i16 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %17
  tail call void @ERR_put_error(i32 16, i32 0, i32 284, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 1141) #16
  br label %37

24:                                               ; preds = %17
  %25 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %0) #16
  %26 = icmp ult i16 %25, 772
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  tail call void @ERR_put_error(i32 16, i32 0, i32 246, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 1146) #16
  br label %37

28:                                               ; preds = %24
  %29 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %3, align 8
  %30 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %29, i64 0, i32 23
  %31 = load i16, i16* %30, align 1
  %32 = and i16 %31, 1024
  %33 = icmp eq i16 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %28
  %35 = tail call zeroext i1 @_ZN4bssl20tls13_add_key_updateEP6ssl_sti(%struct.ssl_st* %0, i32 %1) #16
  br i1 %35, label %36, label %37

36:                                               ; preds = %28, %34
  br label %37

37:                                               ; preds = %34, %36, %27, %23, %16, %9
  %38 = phi i32 [ 0, %9 ], [ 0, %16 ], [ 0, %27 ], [ 1, %36 ], [ 0, %23 ], [ 0, %34 ]
  ret i32 %38
}

declare zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st*) local_unnamed_addr #2

declare zeroext i1 @_ZN4bssl20tls13_add_key_updateEP6ssl_sti(%struct.ssl_st*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_shutdown(%struct.ssl_st*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %3 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 16
  store i32 0, i32* %4, align 4
  tail call void @ERR_clear_error() #16
  tail call void @ERR_clear_system_error() #16
  %5 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 7
  %6 = load i32 (%"struct.bssl::SSL_HANDSHAKE"*)*, i32 (%"struct.bssl::SSL_HANDSHAKE"*)** %5, align 8
  %7 = icmp eq i32 (%"struct.bssl::SSL_HANDSHAKE"*)* %6, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  tail call void @ERR_put_error(i32 16, i32 0, i32 226, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 1162) #16
  br label %77

9:                                                ; preds = %1
  %10 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %11 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %10, i64 0, i32 34, i32 0, i32 0, i32 0
  %12 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %11, align 8
  %13 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %12, i64 0, i32 46
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 32
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %77, label %19

19:                                               ; preds = %14, %9
  %20 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %21 = load i8, i8* %20, align 4
  %22 = and i8 %21, 2
  %23 = icmp eq i8 %22, 0
  %24 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %10, i64 0, i32 13
  br i1 %23, label %28, label %25

25:                                               ; preds = %19
  store i32 1, i32* %24, align 4
  %26 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %27 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %26, i64 0, i32 12
  store i32 1, i32* %27, align 8
  br label %77

28:                                               ; preds = %19
  %29 = load i32, i32* %24, align 4
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %34, label %31

31:                                               ; preds = %28
  %32 = tail call i32 @_ZN4bssl19ssl_send_alert_implEP6ssl_stii(%struct.ssl_st* %0, i32 1, i32 0) #16
  %33 = icmp slt i32 %32, 1
  br i1 %33, label %77, label %71

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %10, i64 0, i32 23
  %36 = load i16, i16* %35, align 1
  %37 = and i16 %36, 8192
  %38 = icmp eq i16 %37, 0
  br i1 %38, label %46, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 0
  %41 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %40, align 8
  %42 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %41, i64 0, i32 10
  %43 = load i32 (%struct.ssl_st*)*, i32 (%struct.ssl_st*)** %42, align 8
  %44 = tail call i32 %43(%struct.ssl_st* %0) #16
  %45 = icmp slt i32 %44, 1
  br i1 %45, label %77, label %71

46:                                               ; preds = %34
  %47 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %10, i64 0, i32 12
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %71, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 0
  %52 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %51, align 8
  %53 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %52, i64 0, i32 0
  %54 = load i8, i8* %53, align 8, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %62, label %56

56:                                               ; preds = %50
  %57 = icmp eq i32 %48, 2
  br i1 %57, label %58, label %61

58:                                               ; preds = %56
  %59 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %10, i64 0, i32 14, i32 0, i32 0, i32 0
  %60 = load %struct.err_save_state_st*, %struct.err_save_state_st** %59, align 8
  tail call void @ERR_restore_state(%struct.err_save_state_st* %60) #16
  br label %77

61:                                               ; preds = %56
  store i32 1, i32* %47, align 8
  br label %71

62:                                               ; preds = %50
  %63 = tail call fastcc i32 @_ZL13ssl_read_implP6ssl_st(%struct.ssl_st* %0)
  %64 = icmp sgt i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @ERR_put_error(i32 16, i32 0, i32 291, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 1209) #16
  br label %77

66:                                               ; preds = %62
  %67 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %68 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %67, i64 0, i32 12
  %69 = load i32, i32* %68, align 8
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %71, label %77

71:                                               ; preds = %66, %46, %39, %61, %31
  %72 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %73 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %72, i64 0, i32 12
  %74 = load i32, i32* %73, align 8
  %75 = icmp eq i32 %74, 1
  %76 = zext i1 %75 to i32
  br label %77

77:                                               ; preds = %14, %66, %39, %31, %71, %65, %58, %25, %8
  %78 = phi i32 [ -1, %8 ], [ 1, %25 ], [ %76, %71 ], [ -1, %58 ], [ -1, %65 ], [ 1, %14 ], [ -1, %31 ], [ -1, %39 ], [ -1, %66 ]
  ret i32 %78
}

declare i32 @_ZN4bssl19ssl_send_alert_implEP6ssl_stii(%struct.ssl_st*, i32, i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SSL_is_dtls(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 0
  %3 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %2, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %3, i64 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = zext i8 %5 to i32
  ret i32 %6
}

declare void @ERR_restore_state(%struct.err_save_state_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_send_fatal_alert(%struct.ssl_st*, i8 zeroext) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %4 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %3, align 8
  %5 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %4, i64 0, i32 23
  %6 = load i16, i16* %5, align 1
  %7 = and i16 %6, 8192
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %24, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %4, i64 0, i32 45, i64 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i8 %11, 2
  br i1 %12, label %13, label %17

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %4, i64 0, i32 45, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, %1
  br i1 %16, label %18, label %17

17:                                               ; preds = %13, %9
  tail call void @ERR_put_error(i32 16, i32 0, i32 194, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 1227) #16
  br label %27

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 0
  %20 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %19, align 8
  %21 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %20, i64 0, i32 10
  %22 = load i32 (%struct.ssl_st*)*, i32 (%struct.ssl_st*)** %21, align 8
  %23 = tail call i32 %22(%struct.ssl_st* %0) #16
  br label %27

24:                                               ; preds = %2
  %25 = zext i8 %1 to i32
  %26 = tail call i32 @_ZN4bssl19ssl_send_alert_implEP6ssl_stii(%struct.ssl_st* %0, i32 2, i32 %25) #16
  br label %27

27:                                               ; preds = %24, %18, %17
  %28 = phi i32 [ -1, %17 ], [ %23, %18 ], [ %26, %24 ]
  ret i32 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_set_quic_transport_params(%struct.ssl_st* nocapture readonly, i8*, i64) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %4, align 8
  %6 = icmp eq %"struct.bssl::SSL_CONFIG"* %5, null
  br i1 %6, label %19, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %5, i64 0, i32 18
  %9 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %8, i64 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @OPENSSL_free(i8* %10) #16
  %11 = bitcast %"class.bssl::Array"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #16
  %12 = icmp eq i64 %2, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %7
  %14 = tail call i8* @OPENSSL_malloc(i64 %2) #16
  store i8* %14, i8** %9, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %13
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.36, i64 0, i64 0), i32 324) #16
  br label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %5, i64 0, i32 18, i32 1
  store i64 %2, i64* %18, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %14, i8* align 1 %1, i64 %2, i1 false) #16
  br label %19

19:                                               ; preds = %17, %16, %7, %3
  %20 = phi i32 [ 0, %3 ], [ 0, %16 ], [ 1, %17 ], [ 1, %7 ]
  ret i32 %20
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @SSL_get_peer_quic_transport_params(%struct.ssl_st* nocapture readonly, i8** nocapture, i64* nocapture) local_unnamed_addr #6 {
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %5 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %4, align 8
  %6 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %5, i64 0, i32 52, i32 0
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast i8** %1 to i64*
  store i64 %8, i64* %9, align 8
  %10 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %4, align 8
  %11 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %10, i64 0, i32 52, i32 1
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_set_quic_early_data_context(%struct.ssl_st* nocapture readonly, i8*, i64) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %4, align 8
  %6 = icmp eq %"struct.bssl::SSL_CONFIG"* %5, null
  br i1 %6, label %19, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %5, i64 0, i32 19
  %9 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %8, i64 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @OPENSSL_free(i8* %10) #16
  %11 = bitcast %"class.bssl::Array"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #16
  %12 = icmp eq i64 %2, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %7
  %14 = tail call i8* @OPENSSL_malloc(i64 %2) #16
  store i8* %14, i8** %9, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %13
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.36, i64 0, i64 0), i32 324) #16
  br label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %5, i64 0, i32 19, i32 1
  store i64 %2, i64* %18, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %14, i8* align 1 %1, i64 %2, i1 false) #16
  br label %19

19:                                               ; preds = %17, %16, %7, %3
  %20 = phi i32 [ 0, %3 ], [ 0, %16 ], [ 1, %17 ], [ 1, %7 ]
  ret i32 %20
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @SSL_CTX_set_early_data_enabled(%struct.ssl_ctx_st* nocapture, i32) local_unnamed_addr #6 {
  %3 = icmp ne i32 %1, 0
  %4 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 77
  %5 = zext i1 %3 to i16
  %6 = load i16, i16* %4, align 8
  %7 = shl nuw nsw i16 %5, 9
  %8 = and i16 %6, -513
  %9 = or i16 %8, %7
  store i16 %9, i16* %4, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @SSL_set_early_data_enabled(%struct.ssl_st* nocapture, i32) local_unnamed_addr #6 {
  %3 = icmp ne i32 %1, 0
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %5 = zext i1 %3 to i8
  %6 = load i8, i8* %4, align 4
  %7 = shl nuw nsw i8 %5, 2
  %8 = and i8 %6, -5
  %9 = or i8 %8, %7
  store i8 %9, i8* %4, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SSL_in_early_data(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %3 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 34, i32 0, i32 0, i32 0
  %5 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %4, align 8
  %6 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %5, i64 0, i32 46
  %9 = load i32, i32* %8, align 8
  %10 = lshr i32 %9, 13
  %11 = and i32 %10, 1
  br label %12

12:                                               ; preds = %1, %7
  %13 = phi i32 [ %11, %7 ], [ 0, %1 ]
  ret i32 %13
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SSL_early_data_accepted(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %3 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 23
  %5 = load i16, i16* %4, align 1
  %6 = lshr i16 %5, 12
  %7 = and i16 %6, 1
  %8 = zext i16 %7 to i32
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @SSL_reset_early_data_reject(%struct.ssl_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %3 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 34, i32 0, i32 0, i32 0
  %5 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %4, align 8
  %6 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %5, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 14
  br i1 %10, label %12, label %11

11:                                               ; preds = %7, %1
  tail call void @abort() #18
  unreachable

12:                                               ; preds = %7
  store i32 1, i32* %8, align 8
  %13 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %5, i64 0, i32 46
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, -8193
  store i32 %15, i32* %13, align 8
  %16 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %5, i64 0, i32 41, i32 0, i32 0, i32 0
  %17 = load %struct.ssl_session_st*, %struct.ssl_session_st** %16, align 8
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %16, align 8
  %18 = icmp eq %struct.ssl_session_st* %17, null
  br i1 %18, label %20, label %19

19:                                               ; preds = %12
  tail call void @SSL_SESSION_free(%struct.ssl_session_st* nonnull %17) #16
  br label %20

20:                                               ; preds = %12, %19
  %21 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %22 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %21, i64 0, i32 23
  %23 = load i16, i16* %22, align 1
  %24 = and i16 %23, -2049
  store i16 %24, i16* %22, align 1
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SSL_get_early_data_reason(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %3 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 30
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @SSL_early_data_reason_string(i32) local_unnamed_addr #9 {
  %2 = icmp ult i32 %0, 15
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [15 x i8*], [15 x i8*]* @switch.table.SSL_early_data_reason_string, i64 0, i64 %4
  %6 = load i8*, i8** %5, align 8
  ret i8* %6

7:                                                ; preds = %1
  ret i8* null
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_get_error(%struct.ssl_st* nocapture readonly, i32) local_unnamed_addr #0 {
  %3 = icmp sgt i32 %1, 0
  br i1 %3, label %62, label %4

4:                                                ; preds = %2
  %5 = tail call i32 @ERR_peek_error() #16
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %4
  %8 = and i32 %5, -16777216
  %9 = icmp eq i32 %8, 33554432
  %10 = select i1 %9, i32 5, i32 1
  br label %62

11:                                               ; preds = %4
  %12 = icmp eq i32 %1, 0
  %13 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %14 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %13, align 8
  br i1 %12, label %15, label %20

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %14, i64 0, i32 12
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 1
  %19 = select i1 %18, i32 6, i32 5
  br label %62

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %14, i64 0, i32 16
  %22 = load i32, i32* %21, align 4
  switch i32 %22, label %61 [
    i32 11, label %62
    i32 12, label %62
    i32 17, label %62
    i32 18, label %62
    i32 4, label %62
    i32 9, label %62
    i32 13, label %62
    i32 14, label %62
    i32 15, label %62
    i32 16, label %62
    i32 19, label %62
    i32 20, label %62
    i32 2, label %23
    i32 3, label %44
  ]

23:                                               ; preds = %20
  %24 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 24
  %25 = load %struct.ssl_quic_method_st*, %struct.ssl_quic_method_st** %24, align 8
  %26 = icmp eq %struct.ssl_quic_method_st* %25, null
  br i1 %26, label %27, label %62

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %29 = load %struct.bio_st*, %struct.bio_st** %28, align 8
  %30 = tail call i32 @BIO_should_read(%struct.bio_st* %29) #16
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %62

32:                                               ; preds = %27
  %33 = tail call i32 @BIO_should_write(%struct.bio_st* %29) #16
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %62

35:                                               ; preds = %32
  %36 = tail call i32 @BIO_should_io_special(%struct.bio_st* %29) #16
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %61, label %38

38:                                               ; preds = %35
  %39 = tail call i32 @BIO_get_retry_reason(%struct.bio_st* %29) #16
  %40 = icmp eq i32 %39, 3
  %41 = select i1 %40, i32 8, i32 5
  %42 = icmp eq i32 %39, 2
  %43 = select i1 %42, i32 7, i32 %41
  br label %62

44:                                               ; preds = %20
  %45 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %46 = load %struct.bio_st*, %struct.bio_st** %45, align 8
  %47 = tail call i32 @BIO_should_write(%struct.bio_st* %46) #16
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %62

49:                                               ; preds = %44
  %50 = tail call i32 @BIO_should_read(%struct.bio_st* %46) #16
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %62

52:                                               ; preds = %49
  %53 = tail call i32 @BIO_should_io_special(%struct.bio_st* %46) #16
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %61, label %55

55:                                               ; preds = %52
  %56 = tail call i32 @BIO_get_retry_reason(%struct.bio_st* %46) #16
  %57 = icmp eq i32 %56, 3
  %58 = select i1 %57, i32 8, i32 5
  %59 = icmp eq i32 %56, 2
  %60 = select i1 %59, i32 7, i32 %58
  br label %62

61:                                               ; preds = %52, %35, %20
  br label %62

62:                                               ; preds = %49, %44, %55, %32, %27, %38, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %61, %7, %15, %23, %2
  %63 = phi i32 [ 0, %2 ], [ 5, %61 ], [ %10, %7 ], [ %19, %15 ], [ 2, %23 ], [ %22, %20 ], [ %22, %20 ], [ %22, %20 ], [ %22, %20 ], [ %22, %20 ], [ %22, %20 ], [ %22, %20 ], [ %22, %20 ], [ %22, %20 ], [ %22, %20 ], [ %22, %20 ], [ %22, %20 ], [ 3, %32 ], [ 2, %27 ], [ %43, %38 ], [ 2, %49 ], [ 3, %44 ], [ %60, %55 ]
  ret i32 %63
}

declare i32 @ERR_peek_error() local_unnamed_addr #2

declare i32 @BIO_should_read(%struct.bio_st*) local_unnamed_addr #2

declare i32 @BIO_should_write(%struct.bio_st*) local_unnamed_addr #2

declare i32 @BIO_should_io_special(%struct.bio_st*) local_unnamed_addr #2

declare i32 @BIO_get_retry_reason(%struct.bio_st*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @SSL_error_description(i32) local_unnamed_addr #9 {
  %2 = icmp ult i32 %0, 21
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [21 x i8*], [21 x i8*]* @switch.table.SSL_error_description, i64 0, i64 %4
  %6 = load i8*, i8** %5, align 8
  ret i8* %6

7:                                                ; preds = %1
  ret i8* null
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @SSL_set_enable_ech_grease(%struct.ssl_st* nocapture readonly, i32) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %5 = icmp eq %"struct.bssl::SSL_CONFIG"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = icmp ne i32 %1, 0
  %8 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %4, i64 0, i32 23
  %9 = zext i1 %7 to i16
  %10 = load i16, i16* %8, align 1
  %11 = and i16 %10, -2
  %12 = or i16 %11, %9
  store i16 %12, i16* %8, align 1
  br label %13

13:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @SSL_CTX_set_options(%struct.ssl_ctx_st* nocapture, i32) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 33
  %4 = load i32, i32* %3, align 8
  %5 = or i32 %4, %1
  store i32 %5, i32* %3, align 8
  ret i32 %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @SSL_CTX_clear_options(%struct.ssl_ctx_st* nocapture, i32) local_unnamed_addr #6 {
  %3 = xor i32 %1, -1
  %4 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 33
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, %3
  store i32 %6, i32* %4, align 8
  ret i32 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SSL_CTX_get_options(%struct.ssl_ctx_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 33
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @SSL_set_options(%struct.ssl_st* nocapture, i32) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 19
  %4 = load i32, i32* %3, align 8
  %5 = or i32 %4, %1
  store i32 %5, i32* %3, align 8
  ret i32 %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @SSL_clear_options(%struct.ssl_st* nocapture, i32) local_unnamed_addr #6 {
  %3 = xor i32 %1, -1
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 19
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, %3
  store i32 %6, i32* %4, align 8
  ret i32 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SSL_get_options(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 19
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @SSL_CTX_set_mode(%struct.ssl_ctx_st* nocapture, i32) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 34
  %4 = load i32, i32* %3, align 4
  %5 = or i32 %4, %1
  store i32 %5, i32* %3, align 4
  ret i32 %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @SSL_CTX_clear_mode(%struct.ssl_ctx_st* nocapture, i32) local_unnamed_addr #6 {
  %3 = xor i32 %1, -1
  %4 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 34
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, %3
  store i32 %6, i32* %4, align 4
  ret i32 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SSL_CTX_get_mode(%struct.ssl_ctx_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 34
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @SSL_set_mode(%struct.ssl_st* nocapture, i32) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 20
  %4 = load i32, i32* %3, align 4
  %5 = or i32 %4, %1
  store i32 %5, i32* %3, align 4
  ret i32 %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @SSL_clear_mode(%struct.ssl_st* nocapture, i32) local_unnamed_addr #6 {
  %3 = xor i32 %1, -1
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 20
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, %3
  store i32 %6, i32* %4, align 4
  ret i32 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SSL_get_mode(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 20
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @SSL_CTX_set0_buffer_pool(%struct.ssl_ctx_st* nocapture, %struct.crypto_buffer_pool_st*) local_unnamed_addr #10 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 72
  store %struct.crypto_buffer_pool_st* %1, %struct.crypto_buffer_pool_st** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_get_tls_unique(%struct.ssl_st*, i8* nocapture, i64* nocapture, i64) local_unnamed_addr #0 {
  store i64 0, i64* %2, align 8
  %5 = icmp eq i64 %3, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %4
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %1, i8 0, i64 %3, i1 false) #16
  br label %7

7:                                                ; preds = %4, %6
  %8 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %9 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %8, align 8
  %10 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %9, i64 0, i32 23
  %11 = load i16, i16* %10, align 1
  %12 = and i16 %11, 32
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %41, label %14

14:                                               ; preds = %7
  %15 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %0) #16
  %16 = icmp ugt i16 %15, 771
  br i1 %16, label %41, label %17

17:                                               ; preds = %14
  %18 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %8, align 8
  %19 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %18, i64 0, i32 41, i64 0
  %20 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %18, i64 0, i32 42
  %21 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %22 = load %struct.ssl_session_st*, %struct.ssl_session_st** %21, align 8
  %23 = icmp eq %struct.ssl_session_st* %22, null
  br i1 %23, label %32, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %22, i64 0, i32 36
  %26 = load i8, i8* %25, align 8
  %27 = and i8 %26, 1
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %41, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %18, i64 0, i32 44, i64 0
  %31 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %18, i64 0, i32 43
  br label %32

32:                                               ; preds = %17, %29
  %33 = phi i8* [ %30, %29 ], [ %19, %17 ]
  %34 = phi i8* [ %31, %29 ], [ %20, %17 ]
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i64
  %37 = icmp ugt i64 %36, %3
  %38 = select i1 %37, i64 %3, i64 %36
  store i64 %38, i64* %2, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %41, label %40

40:                                               ; preds = %32
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %33, i64 %38, i1 false) #16
  br label %41

41:                                               ; preds = %40, %32, %24, %14, %7
  %42 = phi i32 [ 0, %7 ], [ 0, %14 ], [ 0, %24 ], [ 1, %32 ], [ 1, %40 ]
  ret i32 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_set_session_id_context(%struct.ssl_ctx_st* nocapture readonly, i8* nocapture readonly, i64) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 37, i32 0, i32 0, i32 0
  %5 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %4, align 8
  %6 = icmp ugt i64 %2, 32
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  tail call void @ERR_put_error(i32 16, i32 0, i32 216, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 1569) #16
  br label %14

8:                                                ; preds = %3
  %9 = trunc i64 %2 to i8
  %10 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %5, i64 0, i32 13
  store i8 %9, i8* %10, align 8
  %11 = icmp eq i64 %2, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %5, i64 0, i32 14, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 1 %1, i64 %2, i1 false) #16
  br label %14

14:                                               ; preds = %7, %8, %12
  %15 = phi i32 [ 0, %7 ], [ 1, %8 ], [ 1, %12 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_set_session_id_context(%struct.ssl_st* nocapture readonly, i8* nocapture readonly, i64) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %4, align 8
  %6 = icmp eq %"struct.bssl::SSL_CONFIG"* %5, null
  br i1 %6, label %18, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %5, i64 0, i32 6, i32 0, i32 0, i32 0
  %9 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %8, align 8
  %10 = icmp ugt i64 %2, 32
  br i1 %10, label %11, label %12

11:                                               ; preds = %7
  tail call void @ERR_put_error(i32 16, i32 0, i32 216, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 1569) #16
  br label %18

12:                                               ; preds = %7
  %13 = trunc i64 %2 to i8
  %14 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %9, i64 0, i32 13
  store i8 %13, i8* %14, align 8
  %15 = icmp eq i64 %2, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %9, i64 0, i32 14, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %17, i8* align 1 %1, i64 %2, i1 false) #16
  br label %18

18:                                               ; preds = %3, %16, %12, %11
  %19 = phi i32 [ 0, %3 ], [ 0, %11 ], [ 1, %12 ], [ 1, %16 ]
  ret i32 %19
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @SSL_get0_session_id_context(%struct.ssl_st* nocapture readonly, i64* nocapture) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %5 = icmp eq %"struct.bssl::SSL_CONFIG"* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store i64 0, i64* %1, align 8
  br label %17

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %4, i64 0, i32 6, i32 0, i32 0, i32 0
  %9 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %8, align 8
  %10 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %9, i64 0, i32 13
  %11 = load i8, i8* %10, align 8
  %12 = zext i8 %11 to i64
  store i64 %12, i64* %1, align 8
  %13 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %14 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %13, i64 0, i32 6, i32 0, i32 0, i32 0
  %15 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %14, align 8
  %16 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %15, i64 0, i32 14, i64 0
  br label %17

17:                                               ; preds = %7, %6
  %18 = phi i8* [ %16, %7 ], [ null, %6 ]
  ret i8* %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @SSL_certs_clear(%struct.ssl_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %2, align 8
  %4 = icmp eq %"struct.bssl::SSL_CONFIG"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %3, i64 0, i32 6, i32 0, i32 0, i32 0
  %7 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %6, align 8
  tail call void @_ZN4bssl20ssl_cert_clear_certsEPNS_4CERTE(%"struct.bssl::CERT"* %7) #16
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

declare void @_ZN4bssl20ssl_cert_clear_certsEPNS_4CERTE(%"struct.bssl::CERT"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_get_fd(%struct.ssl_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #16
  store i32 -1, i32* %2, align 4
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %5 = load %struct.bio_st*, %struct.bio_st** %4, align 8
  %6 = tail call %struct.bio_st* @BIO_find_type(%struct.bio_st* %5, i32 256) #16
  %7 = icmp eq %struct.bio_st* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = call i32 @BIO_get_fd(%struct.bio_st* nonnull %6, i32* nonnull %2) #16
  %10 = load i32, i32* %2, align 4
  br label %11

11:                                               ; preds = %1, %8
  %12 = phi i32 [ -1, %1 ], [ %10, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #16
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_get_rfd(%struct.ssl_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #16
  store i32 -1, i32* %2, align 4
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %5 = load %struct.bio_st*, %struct.bio_st** %4, align 8
  %6 = tail call %struct.bio_st* @BIO_find_type(%struct.bio_st* %5, i32 256) #16
  %7 = icmp eq %struct.bio_st* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = call i32 @BIO_get_fd(%struct.bio_st* nonnull %6, i32* nonnull %2) #16
  %10 = load i32, i32* %2, align 4
  br label %11

11:                                               ; preds = %1, %8
  %12 = phi i32 [ -1, %1 ], [ %10, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #16
  ret i32 %12
}

declare %struct.bio_st* @BIO_find_type(%struct.bio_st*, i32) local_unnamed_addr #2

declare i32 @BIO_get_fd(%struct.bio_st*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_get_wfd(%struct.ssl_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #16
  store i32 -1, i32* %2, align 4
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %5 = load %struct.bio_st*, %struct.bio_st** %4, align 8
  %6 = tail call %struct.bio_st* @BIO_find_type(%struct.bio_st* %5, i32 256) #16
  %7 = icmp eq %struct.bio_st* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = call i32 @BIO_get_fd(%struct.bio_st* nonnull %6, i32* nonnull %2) #16
  %10 = load i32, i32* %2, align 4
  br label %11

11:                                               ; preds = %1, %8
  %12 = phi i32 [ -1, %1 ], [ %10, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #16
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_set_fd(%struct.ssl_st* nocapture, i32) local_unnamed_addr #0 {
  %3 = tail call %struct.bio_method_st* @BIO_s_socket() #16
  %4 = tail call %struct.bio_st* @BIO_new(%struct.bio_method_st* %3) #16
  %5 = icmp eq %struct.bio_st* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  tail call void @ERR_put_error(i32 16, i32 0, i32 7, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 1632) #16
  br label %9

7:                                                ; preds = %2
  %8 = tail call i32 @BIO_set_fd(%struct.bio_st* nonnull %4, i32 %1, i32 0) #16
  tail call void @SSL_set_bio(%struct.ssl_st* %0, %struct.bio_st* nonnull %4, %struct.bio_st* nonnull %4)
  br label %9

9:                                                ; preds = %7, %6
  %10 = phi i32 [ 0, %6 ], [ 1, %7 ]
  ret i32 %10
}

declare %struct.bio_st* @BIO_new(%struct.bio_method_st*) local_unnamed_addr #2

declare %struct.bio_method_st* @BIO_s_socket() local_unnamed_addr #2

declare i32 @BIO_set_fd(%struct.bio_st*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_set_wfd(%struct.ssl_st* nocapture, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %struct.bio_st*, %struct.bio_st** %3, align 8
  %5 = icmp eq %struct.bio_st* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = tail call i32 @BIO_method_type(%struct.bio_st* nonnull %4) #16
  %8 = icmp eq i32 %7, 1285
  br i1 %8, label %9, label %12

9:                                                ; preds = %6
  %10 = tail call i32 @BIO_get_fd(%struct.bio_st* nonnull %4, i32* null) #16
  %11 = icmp eq i32 %10, %1
  br i1 %11, label %24, label %12

12:                                               ; preds = %9, %6, %2
  %13 = tail call %struct.bio_method_st* @BIO_s_socket() #16
  %14 = tail call %struct.bio_st* @BIO_new(%struct.bio_method_st* %13) #16
  %15 = icmp eq %struct.bio_st* %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @ERR_put_error(i32 16, i32 0, i32 7, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 1646) #16
  br label %31

17:                                               ; preds = %12
  %18 = tail call i32 @BIO_set_fd(%struct.bio_st* nonnull %14, i32 %1, i32 0) #16
  %19 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %20 = load %struct.bio_st*, %struct.bio_st** %19, align 8
  store %struct.bio_st* %14, %struct.bio_st** %19, align 8
  %21 = icmp eq %struct.bio_st* %20, null
  br i1 %21, label %31, label %22

22:                                               ; preds = %17
  %23 = tail call i32 @BIO_free(%struct.bio_st* nonnull %20) #16
  br label %31

24:                                               ; preds = %9
  %25 = tail call i32 @BIO_up_ref(%struct.bio_st* nonnull %4) #16
  %26 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %27 = load %struct.bio_st*, %struct.bio_st** %26, align 8
  store %struct.bio_st* %4, %struct.bio_st** %26, align 8
  %28 = icmp eq %struct.bio_st* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = tail call i32 @BIO_free(%struct.bio_st* nonnull %27) #16
  br label %31

31:                                               ; preds = %29, %24, %22, %17, %16
  %32 = phi i32 [ 0, %16 ], [ 1, %17 ], [ 1, %22 ], [ 1, %24 ], [ 1, %29 ]
  ret i32 %32
}

declare i32 @BIO_method_type(%struct.bio_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_set_rfd(%struct.ssl_st* nocapture, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %4 = load %struct.bio_st*, %struct.bio_st** %3, align 8
  %5 = icmp eq %struct.bio_st* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = tail call i32 @BIO_method_type(%struct.bio_st* nonnull %4) #16
  %8 = icmp eq i32 %7, 1285
  br i1 %8, label %9, label %12

9:                                                ; preds = %6
  %10 = tail call i32 @BIO_get_fd(%struct.bio_st* nonnull %4, i32* null) #16
  %11 = icmp eq i32 %10, %1
  br i1 %11, label %24, label %12

12:                                               ; preds = %9, %6, %2
  %13 = tail call %struct.bio_method_st* @BIO_s_socket() #16
  %14 = tail call %struct.bio_st* @BIO_new(%struct.bio_method_st* %13) #16
  %15 = icmp eq %struct.bio_st* %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @ERR_put_error(i32 16, i32 0, i32 7, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 1666) #16
  br label %31

17:                                               ; preds = %12
  %18 = tail call i32 @BIO_set_fd(%struct.bio_st* nonnull %14, i32 %1, i32 0) #16
  %19 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %20 = load %struct.bio_st*, %struct.bio_st** %19, align 8
  store %struct.bio_st* %14, %struct.bio_st** %19, align 8
  %21 = icmp eq %struct.bio_st* %20, null
  br i1 %21, label %31, label %22

22:                                               ; preds = %17
  %23 = tail call i32 @BIO_free(%struct.bio_st* nonnull %20) #16
  br label %31

24:                                               ; preds = %9
  %25 = tail call i32 @BIO_up_ref(%struct.bio_st* nonnull %4) #16
  %26 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %27 = load %struct.bio_st*, %struct.bio_st** %26, align 8
  store %struct.bio_st* %4, %struct.bio_st** %26, align 8
  %28 = icmp eq %struct.bio_st* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = tail call i32 @BIO_free(%struct.bio_st* nonnull %27) #16
  br label %31

31:                                               ; preds = %29, %24, %22, %17, %16
  %32 = phi i32 [ 0, %16 ], [ 1, %17 ], [ 1, %22 ], [ 1, %24 ], [ 1, %29 ]
  ret i32 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @SSL_get_finished(%struct.ssl_st*, i8* nocapture, i64) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %5 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %4, align 8
  %6 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %5, i64 0, i32 23
  %7 = load i16, i16* %6, align 1
  %8 = and i16 %7, 32
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %37, label %10

10:                                               ; preds = %3
  %11 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %0) #16
  %12 = icmp ugt i16 %11, 771
  br i1 %12, label %37, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %15 = load i8, i8* %14, align 4
  %16 = and i8 %15, 1
  %17 = icmp eq i8 %16, 0
  %18 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %4, align 8
  br i1 %17, label %28, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %18, i64 0, i32 43
  %21 = load i8, i8* %20, align 8
  %22 = zext i8 %21 to i64
  %23 = icmp ult i64 %22, %2
  %24 = select i1 %23, i64 %22, i64 %2
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %37, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %18, i64 0, i32 44, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %27, i64 %24, i1 false) #16
  br label %37

28:                                               ; preds = %13
  %29 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %18, i64 0, i32 42
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = icmp ult i64 %31, %2
  %33 = select i1 %32, i64 %31, i64 %2
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %18, i64 0, i32 41, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %36, i64 %33, i1 false) #16
  br label %37

37:                                               ; preds = %35, %28, %26, %19, %10, %3
  %38 = phi i64 [ 0, %3 ], [ 0, %10 ], [ %22, %19 ], [ %22, %26 ], [ %31, %28 ], [ %31, %35 ]
  ret i64 %38
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @SSL_get_peer_finished(%struct.ssl_st*, i8* nocapture, i64) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %5 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %4, align 8
  %6 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %5, i64 0, i32 23
  %7 = load i16, i16* %6, align 1
  %8 = and i16 %7, 32
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %37, label %10

10:                                               ; preds = %3
  %11 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %0) #16
  %12 = icmp ugt i16 %11, 771
  br i1 %12, label %37, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %15 = load i8, i8* %14, align 4
  %16 = and i8 %15, 1
  %17 = icmp eq i8 %16, 0
  %18 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %4, align 8
  br i1 %17, label %28, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %18, i64 0, i32 42
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i64
  %23 = icmp ult i64 %22, %2
  %24 = select i1 %23, i64 %22, i64 %2
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %37, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %18, i64 0, i32 41, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %27, i64 %24, i1 false) #16
  br label %37

28:                                               ; preds = %13
  %29 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %18, i64 0, i32 43
  %30 = load i8, i8* %29, align 8
  %31 = zext i8 %30 to i64
  %32 = icmp ult i64 %31, %2
  %33 = select i1 %32, i64 %31, i64 %2
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %18, i64 0, i32 44, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %36, i64 %33, i1 false) #16
  br label %37

37:                                               ; preds = %35, %28, %26, %19, %10, %3
  %38 = phi i64 [ 0, %3 ], [ 0, %10 ], [ %22, %19 ], [ %22, %26 ], [ %31, %28 ], [ %31, %35 ]
  ret i64 %38
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SSL_get_verify_mode(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %2, align 8
  %4 = icmp eq %"struct.bssl::SSL_CONFIG"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %3, i64 0, i32 22
  %7 = load i8, i8* %6, align 8
  %8 = zext i8 %7 to i32
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i32 [ %8, %5 ], [ -1, %1 ]
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_get_extms_support(%struct.ssl_st*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %3 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 23
  %5 = load i16, i16* %4, align 1
  %6 = and i16 %5, 2
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %30, label %8

8:                                                ; preds = %1
  %9 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %0) #16
  %10 = icmp ugt i16 %9, 771
  br i1 %10, label %30, label %11

11:                                               ; preds = %8
  %12 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %13 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %12, i64 0, i32 47, i32 0, i32 0, i32 0
  %14 = load %struct.ssl_session_st*, %struct.ssl_session_st** %13, align 8
  %15 = icmp eq %struct.ssl_session_st* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %14, i64 0, i32 36
  %18 = load i8, i8* %17, align 8
  %19 = and i8 %18, 1
  %20 = icmp ne i8 %19, 0
  br label %30

21:                                               ; preds = %11
  %22 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %12, i64 0, i32 34, i32 0, i32 0, i32 0
  %23 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %22, align 8
  %24 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %23, i64 0, i32 46
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 524288
  %29 = icmp ne i32 %28, 0
  br label %30

30:                                               ; preds = %21, %8, %1, %25, %16
  %31 = phi i1 [ %20, %16 ], [ %29, %25 ], [ false, %1 ], [ true, %8 ], [ false, %21 ]
  %32 = zext i1 %31 to i32
  ret i32 %32
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @SSL_CTX_get_read_ahead(%struct.ssl_ctx_st* nocapture readnone) local_unnamed_addr #9 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @SSL_get_read_ahead(%struct.ssl_st* nocapture readnone) local_unnamed_addr #9 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @SSL_CTX_set_read_ahead(%struct.ssl_ctx_st* nocapture readnone, i32) local_unnamed_addr #9 {
  ret i32 1
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @SSL_set_read_ahead(%struct.ssl_st* nocapture readnone, i32) local_unnamed_addr #9 {
  ret i32 1
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SSL_pending(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %3 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 6, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = trunc i64 %5 to i32
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_check_private_key(%struct.ssl_ctx_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 37, i32 0, i32 0, i32 0
  %3 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %2, align 8
  %4 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %4, align 8
  %6 = tail call zeroext i1 @_ZN4bssl26ssl_cert_check_private_keyEPKNS_4CERTEPK11evp_pkey_st(%"struct.bssl::CERT"* %3, %struct.evp_pkey_st* %5) #16
  %7 = zext i1 %6 to i32
  ret i32 %7
}

declare zeroext i1 @_ZN4bssl26ssl_cert_check_private_keyEPKNS_4CERTEPK11evp_pkey_st(%"struct.bssl::CERT"*, %struct.evp_pkey_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_check_private_key(%struct.ssl_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %2, align 8
  %4 = icmp eq %"struct.bssl::SSL_CONFIG"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %3, i64 0, i32 6, i32 0, i32 0, i32 0
  %7 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %6, align 8
  %8 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %8, align 8
  %10 = tail call zeroext i1 @_ZN4bssl26ssl_cert_check_private_keyEPKNS_4CERTEPK11evp_pkey_st(%"struct.bssl::CERT"* %7, %struct.evp_pkey_st* %9) #16
  %11 = zext i1 %10 to i32
  br label %12

12:                                               ; preds = %1, %5
  %13 = phi i32 [ %11, %5 ], [ 0, %1 ]
  ret i32 %13
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @SSL_get_default_timeout(%struct.ssl_st* nocapture readnone) local_unnamed_addr #9 {
  ret i64 7200
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_renegotiate(%struct.ssl_st*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %3 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 23
  %5 = load i16, i16* %4, align 1
  %6 = and i16 %5, 16384
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  tail call void @ERR_put_error(i32 16, i32 0, i32 66, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 1781) #16
  br label %78

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %11 = load i8, i8* %10, align 4
  %12 = and i8 %11, 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %38

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 0
  %16 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %15, align 8
  %17 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %16, i64 0, i32 0
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %38

20:                                               ; preds = %14
  %21 = and i16 %5, 2
  %22 = icmp eq i16 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %20
  %24 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %0) #16
  %25 = icmp ugt i16 %24, 771
  br i1 %25, label %38, label %26

26:                                               ; preds = %23, %20
  %27 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %28 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %27, align 8
  %29 = icmp eq %"struct.bssl::SSL_CONFIG"* %28, null
  br i1 %29, label %38, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 25
  %32 = load i32, i32* %31, align 8
  switch i32 %32, label %38 [
    i32 1, label %33
    i32 4, label %39
    i32 2, label %39
  ]

33:                                               ; preds = %30
  %34 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %35 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %34, i64 0, i32 15
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %39, label %38

38:                                               ; preds = %30, %26, %23, %9, %14, %33
  tail call void @ERR_put_error(i32 16, i32 0, i32 182, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 1786) #16
  br label %78

39:                                               ; preds = %30, %30, %33
  %40 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %41 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %40, i64 0, i32 5, i32 2
  %42 = load i16, i16* %41, align 2
  %43 = icmp eq i16 %42, 0
  br i1 %43, label %44, label %48

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %40, i64 0, i32 13
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %49, label %48

48:                                               ; preds = %44, %39
  tail call void @ERR_put_error(i32 16, i32 0, i32 182, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 1799) #16
  br label %78

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %40, i64 0, i32 34, i32 0, i32 0, i32 0
  %51 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %50, align 8
  %52 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %51, null
  br i1 %52, label %54, label %53

53:                                               ; preds = %49
  tail call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 1805) #16
  br label %78

54:                                               ; preds = %49
  %55 = tail call %"struct.bssl::SSL_HANDSHAKE"* @_ZN4bssl17ssl_handshake_newEP6ssl_st(%struct.ssl_st* %0) #16
  %56 = ptrtoint %"struct.bssl::SSL_HANDSHAKE"* %55 to i64
  %57 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %58 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %57, i64 0, i32 34
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.96"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %59, align 8
  %61 = bitcast %"class.std::__1::unique_ptr.96"* %58 to i64*
  store i64 %56, i64* %61, align 8
  %62 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %60, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %54
  tail call void @_ZN4bssl13SSL_HANDSHAKED1Ev(%"struct.bssl::SSL_HANDSHAKE"* nonnull %60) #16
  %64 = bitcast %"struct.bssl::SSL_HANDSHAKE"* %60 to i8*
  tail call void @OPENSSL_free(i8* nonnull %64) #16
  br label %65

65:                                               ; preds = %63, %54
  %66 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %67 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %66, i64 0, i32 34, i32 0, i32 0, i32 0
  %68 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %67, align 8
  %69 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %68, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %66, i64 0, i32 23
  %72 = load i16, i16* %71, align 1
  %73 = and i16 %72, -16385
  store i16 %73, i16* %71, align 1
  %74 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %75 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %74, i64 0, i32 15
  %76 = load i32, i32* %75, align 8
  %77 = add nsw i32 %76, 1
  store i32 %77, i32* %75, align 8
  br label %78

78:                                               ; preds = %65, %70, %53, %48, %38, %8
  %79 = phi i32 [ 0, %48 ], [ 0, %53 ], [ 1, %70 ], [ 0, %38 ], [ 0, %8 ], [ 0, %65 ]
  ret i32 %79
}

declare %"struct.bssl::SSL_HANDSHAKE"* @_ZN4bssl17ssl_handshake_newEP6ssl_st(%struct.ssl_st*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SSL_renegotiate_pending(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %3 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 34, i32 0, i32 0, i32 0
  %5 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %4, align 8
  %6 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %5, null
  br i1 %6, label %18, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %5, i64 0, i32 46
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 32
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %18

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 23
  %14 = load i16, i16* %13, align 1
  %15 = lshr i16 %14, 5
  %16 = and i16 %15, 1
  %17 = zext i16 %16 to i32
  br label %18

18:                                               ; preds = %7, %1, %12
  %19 = phi i32 [ 0, %7 ], [ %17, %12 ], [ 0, %1 ]
  ret i32 %19
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SSL_total_renegotiations(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %3 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 15
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @SSL_CTX_get_max_cert_list(%struct.ssl_ctx_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 35
  %3 = load i32, i32* %2, align 8
  %4 = zext i32 %3 to i64
  ret i64 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @SSL_CTX_set_max_cert_list(%struct.ssl_ctx_st* nocapture, i64) local_unnamed_addr #10 {
  %3 = icmp ult i64 %1, 16777215
  %4 = select i1 %3, i64 %1, i64 16777215
  %5 = trunc i64 %4 to i32
  %6 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 35
  store i32 %5, i32* %6, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @SSL_get_max_cert_list(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 21
  %3 = load i32, i32* %2, align 8
  %4 = zext i32 %3 to i64
  ret i64 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @SSL_set_max_cert_list(%struct.ssl_st* nocapture, i64) local_unnamed_addr #10 {
  %3 = icmp ult i64 %1, 16777215
  %4 = select i1 %3, i64 %1, i64 16777215
  %5 = trunc i64 %4 to i32
  %6 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 21
  store i32 %5, i32* %6, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @SSL_CTX_set_max_send_fragment(%struct.ssl_ctx_st* nocapture, i64) local_unnamed_addr #10 {
  %3 = icmp ugt i64 %1, 512
  %4 = select i1 %3, i64 %1, i64 512
  %5 = icmp ult i64 %4, 16384
  %6 = select i1 %5, i64 %4, i64 16384
  %7 = trunc i64 %6 to i16
  %8 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 48
  store i16 %7, i16* %8, align 2
  ret i32 1
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @SSL_set_max_send_fragment(%struct.ssl_st* nocapture, i64) local_unnamed_addr #10 {
  %3 = icmp ugt i64 %1, 512
  %4 = select i1 %3, i64 %1, i64 512
  %5 = icmp ult i64 %4, 16384
  %6 = select i1 %5, i64 %4, i64 16384
  %7 = trunc i64 %6 to i16
  %8 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 3
  store i16 %7, i16* %8, align 2
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_set_mtu(%struct.ssl_st* nocapture readonly, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 0
  %4 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %3, align 8
  %5 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %4, i64 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %2
  %9 = tail call i32 @_ZN4bssl13dtls1_min_mtuEv() #16
  %10 = icmp ugt i32 %9, %1
  br i1 %10, label %15, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 9
  %13 = load %"struct.bssl::DTLS1_STATE"*, %"struct.bssl::DTLS1_STATE"** %12, align 8
  %14 = getelementptr inbounds %"struct.bssl::DTLS1_STATE", %"struct.bssl::DTLS1_STATE"* %13, i64 0, i32 19
  store i32 %1, i32* %14, align 8
  br label %15

15:                                               ; preds = %8, %2, %11
  %16 = phi i32 [ 1, %11 ], [ 0, %2 ], [ 0, %8 ]
  ret i32 %16
}

declare i32 @_ZN4bssl13dtls1_min_mtuEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_get_secure_renegotiation_support(%struct.ssl_st*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %3 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 23
  %5 = load i16, i16* %4, align 1
  %6 = and i16 %5, 2
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %18, label %8

8:                                                ; preds = %1
  %9 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %0) #16
  %10 = icmp ugt i16 %9, 771
  br i1 %10, label %18, label %11

11:                                               ; preds = %8
  %12 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %13 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %12, i64 0, i32 23
  %14 = load i16, i16* %13, align 1
  %15 = lshr i16 %14, 8
  %16 = and i16 %15, 1
  %17 = zext i16 %16 to i32
  br label %18

18:                                               ; preds = %8, %11, %1
  %19 = phi i32 [ 0, %1 ], [ 1, %8 ], [ %17, %11 ]
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @SSL_CTX_sess_number(%struct.ssl_ctx_st*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 2
  tail call void @CRYPTO_MUTEX_lock_read(%union.crypto_mutex_st* %2) #16
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 9
  %4 = bitcast %struct.lhash_st_SSL_SESSION** %3 to %struct.lhash_st**
  %5 = load %struct.lhash_st*, %struct.lhash_st** %4, align 8
  %6 = tail call i64 @lh_num_items(%struct.lhash_st* %5) #16
  tail call void @CRYPTO_MUTEX_unlock_read(%union.crypto_mutex_st* %2) #16
  ret i64 %6
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @SSL_CTX_sess_set_cache_size(%struct.ssl_ctx_st* nocapture, i64) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 10
  %4 = load i64, i64* %3, align 8
  store i64 %1, i64* %3, align 8
  ret i64 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @SSL_CTX_sess_get_cache_size(%struct.ssl_ctx_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 10
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @SSL_CTX_set_session_cache_mode(%struct.ssl_ctx_st* nocapture, i32) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 14
  %4 = load i32, i32* %3, align 4
  store i32 %1, i32* %3, align 4
  ret i32 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SSL_CTX_get_session_cache_mode(%struct.ssl_ctx_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 14
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_get_tlsext_ticket_keys(%struct.ssl_ctx_st*, i8*, i64) local_unnamed_addr #0 {
  %4 = icmp eq i8* %1, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %3
  %6 = icmp eq i64 %2, 48
  br i1 %6, label %8, label %7

7:                                                ; preds = %5
  tail call void @ERR_put_error(i32 16, i32 0, i32 161, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 1919) #16
  br label %22

8:                                                ; preds = %5
  %9 = tail call i32 @_ZN4bssl36ssl_ctx_rotate_ticket_encryption_keyEP10ssl_ctx_st(%struct.ssl_ctx_st* %0) #16
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 2
  tail call void @CRYPTO_MUTEX_lock_read(%union.crypto_mutex_st* %12) #16
  %13 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 52, i32 0, i32 0, i32 0
  %14 = load %"struct.bssl::TicketKey"*, %"struct.bssl::TicketKey"** %13, align 8
  %15 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %14, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1, i8* align 1 %15, i64 16, i1 false) #16
  %16 = getelementptr inbounds i8, i8* %1, i64 16
  %17 = load %"struct.bssl::TicketKey"*, %"struct.bssl::TicketKey"** %13, align 8
  %18 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %17, i64 0, i32 1, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %18, i64 16, i1 false) #16
  %19 = getelementptr inbounds i8, i8* %1, i64 32
  %20 = load %"struct.bssl::TicketKey"*, %"struct.bssl::TicketKey"** %13, align 8
  %21 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %20, i64 0, i32 2, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %19, i8* align 1 %21, i64 16, i1 false) #16
  tail call void @CRYPTO_MUTEX_unlock_read(%union.crypto_mutex_st* %12) #16
  br label %22

22:                                               ; preds = %8, %3, %11, %7
  %23 = phi i32 [ 0, %7 ], [ 1, %11 ], [ 48, %3 ], [ 0, %8 ]
  ret i32 %23
}

declare i32 @_ZN4bssl36ssl_ctx_rotate_ticket_encryption_keyEP10ssl_ctx_st(%struct.ssl_ctx_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_set_tlsext_ticket_keys(%struct.ssl_ctx_st* nocapture, i8* readonly, i64) local_unnamed_addr #0 {
  %4 = icmp eq i8* %1, null
  br i1 %4, label %34, label %5

5:                                                ; preds = %3
  %6 = icmp eq i64 %2, 48
  br i1 %6, label %8, label %7

7:                                                ; preds = %5
  tail call void @ERR_put_error(i32 16, i32 0, i32 161, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 1942) #16
  br label %34

8:                                                ; preds = %5
  %9 = tail call i8* @OPENSSL_malloc(i64 56) #16
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %8
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.36, i64 0, i64 0), i32 196) #16
  br label %34

12:                                               ; preds = %8
  %13 = ptrtoint i8* %9 to i64
  %14 = getelementptr i8, i8* %9, i64 16
  call void @llvm.memset.p0i8.i64(i8* align 1 %14, i8 0, i64 40, i1 false)
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %9, i8* nonnull align 1 %1, i64 16, i1 false) #16
  %15 = getelementptr inbounds i8, i8* %9, i64 16
  %16 = getelementptr inbounds i8, i8* %1, i64 16
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %15, i8* align 1 %16, i64 16, i1 false) #16
  %17 = getelementptr inbounds i8, i8* %9, i64 32
  %18 = getelementptr inbounds i8, i8* %1, i64 32
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %17, i8* align 1 %18, i64 16, i1 false) #16
  %19 = getelementptr inbounds i8, i8* %9, i64 48
  %20 = bitcast i8* %19 to i64*
  store i64 0, i64* %20, align 8
  %21 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 52
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"struct.bssl::TicketKey"*, %"struct.bssl::TicketKey"** %22, align 8
  %24 = bitcast %"class.std::__1::unique_ptr.109"* %21 to i64*
  store i64 %13, i64* %24, align 8
  %25 = icmp eq %"struct.bssl::TicketKey"* %23, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %12
  %27 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %23, i64 0, i32 0, i64 0
  tail call void @OPENSSL_free(i8* %27) #16
  br label %28

28:                                               ; preds = %12, %26
  %29 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 53, i32 0, i32 0, i32 0
  %30 = load %"struct.bssl::TicketKey"*, %"struct.bssl::TicketKey"** %29, align 8
  store %"struct.bssl::TicketKey"* null, %"struct.bssl::TicketKey"** %29, align 8
  %31 = icmp eq %"struct.bssl::TicketKey"* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"struct.bssl::TicketKey", %"struct.bssl::TicketKey"* %30, i64 0, i32 0, i64 0
  tail call void @OPENSSL_free(i8* %33) #16
  br label %34

34:                                               ; preds = %32, %28, %11, %3, %7
  %35 = phi i32 [ 0, %7 ], [ 48, %3 ], [ 1, %32 ], [ 1, %28 ], [ 0, %11 ]
  ret i32 %35
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @SSL_CTX_set_tlsext_ticket_key_cb(%struct.ssl_ctx_st* nocapture, i32 (%struct.ssl_st*, i8*, i8*, %struct.evp_cipher_ctx_st*, %struct.hmac_ctx_st*, i32)*) local_unnamed_addr #10 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 54
  store i32 (%struct.ssl_st*, i8*, i8*, %struct.evp_cipher_ctx_st*, %struct.hmac_ctx_st*, i32)* %1, i32 (%struct.ssl_st*, i8*, i8*, %struct.evp_cipher_ctx_st*, %struct.hmac_ctx_st*, i32)** %3, align 8
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_set1_curves(%struct.ssl_ctx_st*, i32*, i64) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 67
  %5 = tail call zeroext i1 @_ZN4bssl15tls1_set_curvesEPNS_5ArrayItEENS_4SpanIKiEE(%"class.bssl::Array.56"* %4, i32* %1, i64 %2) #16
  %6 = zext i1 %5 to i32
  ret i32 %6
}

declare zeroext i1 @_ZN4bssl15tls1_set_curvesEPNS_5ArrayItEENS_4SpanIKiEE(%"class.bssl::Array.56"*, i32*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_set1_curves(%struct.ssl_st* nocapture readonly, i32*, i64) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %4, align 8
  %6 = icmp eq %"struct.bssl::SSL_CONFIG"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %5, i64 0, i32 14
  %9 = tail call zeroext i1 @_ZN4bssl15tls1_set_curvesEPNS_5ArrayItEENS_4SpanIKiEE(%"class.bssl::Array.56"* %8, i32* %1, i64 %2) #16
  %10 = zext i1 %9 to i32
  br label %11

11:                                               ; preds = %3, %7
  %12 = phi i32 [ %10, %7 ], [ 0, %3 ]
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_set1_curves_list(%struct.ssl_ctx_st*, i8*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 67
  %4 = tail call zeroext i1 @_ZN4bssl20tls1_set_curves_listEPNS_5ArrayItEEPKc(%"class.bssl::Array.56"* %3, i8* %1) #16
  %5 = zext i1 %4 to i32
  ret i32 %5
}

declare zeroext i1 @_ZN4bssl20tls1_set_curves_listEPNS_5ArrayItEEPKc(%"class.bssl::Array.56"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_set1_curves_list(%struct.ssl_st* nocapture readonly, i8*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %5 = icmp eq %"struct.bssl::SSL_CONFIG"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %4, i64 0, i32 14
  %8 = tail call zeroext i1 @_ZN4bssl20tls1_set_curves_listEPNS_5ArrayItEEPKc(%"class.bssl::Array.56"* %7, i8* %1) #16
  %9 = zext i1 %8 to i32
  br label %10

10:                                               ; preds = %2, %6
  %11 = phi i32 [ %9, %6 ], [ 0, %2 ]
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @SSL_get_curve_id(%struct.ssl_st*) local_unnamed_addr #0 {
  %2 = tail call %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st* %0) #16
  %3 = icmp eq %struct.ssl_session_st* %2, null
  br i1 %3, label %7, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %2, i64 0, i32 2
  %6 = load i16, i16* %5, align 2
  br label %7

7:                                                ; preds = %1, %4
  %8 = phi i16 [ %6, %4 ], [ 0, %1 ]
  ret i16 %8
}

declare %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @SSL_CTX_set_tmp_dh(%struct.ssl_ctx_st* nocapture readnone, %struct.dh_st* nocapture readnone) local_unnamed_addr #9 {
  ret i32 1
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @SSL_set_tmp_dh(%struct.ssl_st* nocapture readnone, %struct.dh_st* nocapture readnone) local_unnamed_addr #9 {
  ret i32 1
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.stack_st_SSL_CIPHER* @SSL_CTX_get_ciphers(%struct.ssl_ctx_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %3 = load %"struct.bssl::SSLCipherPreferenceList"*, %"struct.bssl::SSLCipherPreferenceList"** %2, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSLCipherPreferenceList", %"struct.bssl::SSLCipherPreferenceList"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %struct.stack_st_SSL_CIPHER*, %struct.stack_st_SSL_CIPHER** %4, align 8
  ret %struct.stack_st_SSL_CIPHER* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_cipher_in_group(%struct.ssl_ctx_st* nocapture readonly, i64) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %4 = bitcast %"struct.bssl::SSLCipherPreferenceList"** %3 to %struct.stack_st***
  %5 = load %struct.stack_st**, %struct.stack_st*** %4, align 8
  %6 = load %struct.stack_st*, %struct.stack_st** %5, align 8
  %7 = tail call i64 @sk_num(%struct.stack_st* %6) #16
  %8 = icmp ugt i64 %7, %1
  br i1 %8, label %9, label %16

9:                                                ; preds = %2
  %10 = load %"struct.bssl::SSLCipherPreferenceList"*, %"struct.bssl::SSLCipherPreferenceList"** %3, align 8
  %11 = getelementptr inbounds %"struct.bssl::SSLCipherPreferenceList", %"struct.bssl::SSLCipherPreferenceList"* %10, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds i8, i8* %12, i64 %1
  %14 = load i8, i8* %13, align 1, !range !2
  %15 = zext i8 %14 to i32
  br label %16

16:                                               ; preds = %2, %9
  %17 = phi i32 [ %15, %9 ], [ 0, %2 ]
  ret i32 %17
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.stack_st_SSL_CIPHER* @SSL_get_ciphers(%struct.ssl_st* readonly) local_unnamed_addr #3 {
  %2 = icmp eq %struct.ssl_st* %0, null
  br i1 %2, label %21, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %4, align 8
  %6 = icmp eq %"struct.bssl::SSL_CONFIG"* %5, null
  br i1 %6, label %21, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %5, i64 0, i32 5, i32 0, i32 0, i32 0
  %9 = load %"struct.bssl::SSLCipherPreferenceList"*, %"struct.bssl::SSLCipherPreferenceList"** %8, align 8
  %10 = icmp eq %"struct.bssl::SSLCipherPreferenceList"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"struct.bssl::SSLCipherPreferenceList", %"struct.bssl::SSLCipherPreferenceList"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %struct.stack_st_SSL_CIPHER*, %struct.stack_st_SSL_CIPHER** %12, align 8
  br label %21

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %16 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %15, align 8
  %17 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %16, i64 0, i32 7, i32 0, i32 0, i32 0
  %18 = load %"struct.bssl::SSLCipherPreferenceList"*, %"struct.bssl::SSLCipherPreferenceList"** %17, align 8
  %19 = getelementptr inbounds %"struct.bssl::SSLCipherPreferenceList", %"struct.bssl::SSLCipherPreferenceList"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %struct.stack_st_SSL_CIPHER*, %struct.stack_st_SSL_CIPHER** %19, align 8
  br label %21

21:                                               ; preds = %11, %14, %3, %1
  %22 = phi %struct.stack_st_SSL_CIPHER* [ null, %1 ], [ null, %3 ], [ %13, %11 ], [ %20, %14 ]
  ret %struct.stack_st_SSL_CIPHER* %22
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @SSL_get_cipher_list(%struct.ssl_st* readonly, i32) local_unnamed_addr #0 {
  %3 = icmp eq %struct.ssl_st* %0, null
  br i1 %3, label %35, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %5, align 8
  %7 = icmp eq %"struct.bssl::SSL_CONFIG"* %6, null
  br i1 %7, label %35, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %6, i64 0, i32 5, i32 0, i32 0, i32 0
  %10 = load %"struct.bssl::SSLCipherPreferenceList"*, %"struct.bssl::SSLCipherPreferenceList"** %9, align 8
  %11 = icmp eq %"struct.bssl::SSLCipherPreferenceList"* %10, null
  br i1 %11, label %12, label %17

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %14 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %13, align 8
  %15 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %14, i64 0, i32 7, i32 0, i32 0, i32 0
  %16 = load %"struct.bssl::SSLCipherPreferenceList"*, %"struct.bssl::SSLCipherPreferenceList"** %15, align 8
  br label %17

17:                                               ; preds = %8, %12
  %18 = phi %"struct.bssl::SSLCipherPreferenceList"* [ %16, %12 ], [ %10, %8 ]
  %19 = getelementptr inbounds %"struct.bssl::SSLCipherPreferenceList", %"struct.bssl::SSLCipherPreferenceList"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %struct.stack_st_SSL_CIPHER*, %struct.stack_st_SSL_CIPHER** %19, align 8
  %21 = icmp eq %struct.stack_st_SSL_CIPHER* %20, null
  %22 = icmp slt i32 %1, 0
  %23 = or i1 %22, %21
  br i1 %23, label %35, label %24

24:                                               ; preds = %17
  %25 = sext i32 %1 to i64
  %26 = bitcast %struct.stack_st_SSL_CIPHER* %20 to %struct.stack_st*
  %27 = tail call i64 @sk_num(%struct.stack_st* %26) #16
  %28 = icmp ugt i64 %27, %25
  br i1 %28, label %29, label %35

29:                                               ; preds = %24
  %30 = tail call i8* @sk_value(%struct.stack_st* %26, i64 %25) #16
  %31 = icmp eq i8* %30, null
  br i1 %31, label %35, label %32

32:                                               ; preds = %29
  %33 = bitcast i8* %30 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %4, %24, %17, %29, %32, %2
  %36 = phi i8* [ null, %2 ], [ null, %24 ], [ null, %17 ], [ %34, %32 ], [ null, %29 ], [ null, %4 ]
  ret i8* %36
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_set_cipher_list(%struct.ssl_ctx_st*, i8*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 7
  %4 = tail call zeroext i1 @_ZN4bssl22ssl_create_cipher_listEPNSt3__110unique_ptrINS_23SSLCipherPreferenceListENS_8internal7DeleterIS2_EEEEPKcb(%"class.std::__1::unique_ptr.5"* %3, i8* %1, i1 zeroext false) #16
  %5 = zext i1 %4 to i32
  ret i32 %5
}

declare zeroext i1 @_ZN4bssl22ssl_create_cipher_listEPNSt3__110unique_ptrINS_23SSLCipherPreferenceListENS_8internal7DeleterIS2_EEEEPKcb(%"class.std::__1::unique_ptr.5"*, i8*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_set_cipher_list(%struct.ssl_st* nocapture readonly, i8*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %5 = icmp eq %"struct.bssl::SSL_CONFIG"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %4, i64 0, i32 5
  %8 = tail call zeroext i1 @_ZN4bssl22ssl_create_cipher_listEPNSt3__110unique_ptrINS_23SSLCipherPreferenceListENS_8internal7DeleterIS2_EEEEPKcb(%"class.std::__1::unique_ptr.5"* %7, i8* %1, i1 zeroext false) #16
  %9 = zext i1 %8 to i32
  br label %10

10:                                               ; preds = %2, %6
  %11 = phi i32 [ %9, %6 ], [ 0, %2 ]
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_set_strict_cipher_list(%struct.ssl_st* nocapture readonly, i8*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %5 = icmp eq %"struct.bssl::SSL_CONFIG"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %4, i64 0, i32 5
  %8 = tail call zeroext i1 @_ZN4bssl22ssl_create_cipher_listEPNSt3__110unique_ptrINS_23SSLCipherPreferenceListENS_8internal7DeleterIS2_EEEEPKcb(%"class.std::__1::unique_ptr.5"* %7, i8* %1, i1 zeroext true) #16
  %9 = zext i1 %8 to i32
  br label %10

10:                                               ; preds = %2, %6
  %11 = phi i32 [ %9, %6 ], [ 0, %2 ]
  ret i32 %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @SSL_get_servername(%struct.ssl_st* nocapture readonly, i32) local_unnamed_addr #3 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %13

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %10 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %9, align 8
  %11 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %10, i64 0, i32 50, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  br label %13

13:                                               ; preds = %4, %2, %8
  %14 = phi i8* [ %12, %8 ], [ null, %2 ], [ %6, %4 ]
  ret i8* %14
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SSL_get_servername_type(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %7 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %8 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %7, i64 0, i32 50, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi i8* [ %9, %5 ], [ %3, %1 ]
  %12 = icmp eq i8* %11, null
  %13 = sext i1 %12 to i32
  ret i32 %13
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @SSL_CTX_set_custom_verify(%struct.ssl_ctx_st* nocapture, i32, i32 (%struct.ssl_st*, i8*)*) local_unnamed_addr #10 {
  %4 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 40
  store i32 %1, i32* %4, align 8
  %5 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 24
  store i32 (%struct.ssl_st*, i8*)* %2, i32 (%struct.ssl_st*, i8*)** %5, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @SSL_set_custom_verify(%struct.ssl_st* nocapture readonly, i32, i32 (%struct.ssl_st*, i8*)*) local_unnamed_addr #6 {
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %4, align 8
  %6 = icmp eq %"struct.bssl::SSL_CONFIG"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = trunc i32 %1 to i8
  %9 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %5, i64 0, i32 22
  store i8 %8, i8* %9, align 8
  %10 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %4, align 8
  %11 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %10, i64 0, i32 8
  store i32 (%struct.ssl_st*, i8*)* %2, i32 (%struct.ssl_st*, i8*)** %11, align 8
  br label %12

12:                                               ; preds = %3, %7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @SSL_CTX_enable_signed_cert_timestamps(%struct.ssl_ctx_st* nocapture) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 77
  %3 = load i16, i16* %2, align 8
  %4 = or i16 %3, 8
  store i16 %4, i16* %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @SSL_enable_signed_cert_timestamps(%struct.ssl_st* nocapture readonly) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %2, align 8
  %4 = icmp eq %"struct.bssl::SSL_CONFIG"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %3, i64 0, i32 23
  %7 = load i16, i16* %6, align 1
  %8 = or i16 %7, 2
  store i16 %8, i16* %6, align 1
  br label %9

9:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @SSL_CTX_enable_ocsp_stapling(%struct.ssl_ctx_st* nocapture) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 77
  %3 = load i16, i16* %2, align 8
  %4 = or i16 %3, 4
  store i16 %4, i16* %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @SSL_enable_ocsp_stapling(%struct.ssl_st* nocapture readonly) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %2, align 8
  %4 = icmp eq %"struct.bssl::SSL_CONFIG"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %3, i64 0, i32 23
  %7 = load i16, i16* %6, align 1
  %8 = or i16 %7, 4
  store i16 %8, i16* %6, align 1
  br label %9

9:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @SSL_get0_signed_cert_timestamp_list(%struct.ssl_st*, i8** nocapture, i64* nocapture) local_unnamed_addr #0 {
  %4 = tail call %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st* %0) #16
  %5 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %6 = load i8, i8* %5, align 4
  %7 = and i8 %6, 1
  %8 = icmp eq i8 %7, 0
  %9 = icmp ne %struct.ssl_session_st* %4, null
  %10 = and i1 %9, %8
  br i1 %10, label %11, label %15

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %4, i64 0, i32 25, i32 0, i32 0, i32 0
  %13 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %12, align 8
  %14 = icmp eq %struct.crypto_buffer_st* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %11, %3
  store i64 0, i64* %2, align 8
  store i8* null, i8** %1, align 8
  br label %20

16:                                               ; preds = %11
  %17 = tail call i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st* nonnull %13) #16
  store i8* %17, i8** %1, align 8
  %18 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %12, align 8
  %19 = tail call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %18) #16
  store i64 %19, i64* %2, align 8
  br label %20

20:                                               ; preds = %16, %15
  ret void
}

declare i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st*) local_unnamed_addr #2

declare i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @SSL_get0_ocsp_response(%struct.ssl_st*, i8** nocapture, i64* nocapture) local_unnamed_addr #0 {
  %4 = tail call %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st* %0) #16
  %5 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %6 = load i8, i8* %5, align 4
  %7 = and i8 %6, 1
  %8 = icmp eq i8 %7, 0
  %9 = icmp ne %struct.ssl_session_st* %4, null
  %10 = and i1 %9, %8
  br i1 %10, label %11, label %15

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %4, i64 0, i32 26, i32 0, i32 0, i32 0
  %13 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %12, align 8
  %14 = icmp eq %struct.crypto_buffer_st* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %11, %3
  store i64 0, i64* %2, align 8
  store i8* null, i8** %1, align 8
  br label %20

16:                                               ; preds = %11
  %17 = tail call i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st* nonnull %13) #16
  store i8* %17, i8** %1, align 8
  %18 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %12, align 8
  %19 = tail call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %18) #16
  store i64 %19, i64* %2, align 8
  br label %20

20:                                               ; preds = %16, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_set_tlsext_host_name(%struct.ssl_st* nocapture, i8*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  store i8* null, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @OPENSSL_free(i8* nonnull %4) #16
  br label %7

7:                                                ; preds = %2, %6
  %8 = icmp eq i8* %1, null
  br i1 %8, label %24, label %9

9:                                                ; preds = %7
  %10 = tail call i64 @strlen(i8* nonnull %1) #17
  %11 = add i64 %10, -1
  %12 = icmp ugt i64 %11, 254
  br i1 %12, label %13, label %14

13:                                               ; preds = %9
  tail call void @ERR_put_error(i32 16, i32 0, i32 213, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 2172) #16
  br label %24

14:                                               ; preds = %9
  %15 = tail call i8* @OPENSSL_strdup(i8* nonnull %1) #16
  %16 = load i8*, i8** %3, align 8
  store i8* %15, i8** %3, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  tail call void @OPENSSL_free(i8* nonnull %16) #16
  %19 = load i8*, i8** %3, align 8
  br label %20

20:                                               ; preds = %14, %18
  %21 = phi i8* [ %15, %14 ], [ %19, %18 ]
  %22 = icmp eq i8* %21, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %20
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 2177) #16
  br label %24

24:                                               ; preds = %13, %23, %20, %7
  %25 = phi i32 [ 1, %7 ], [ 0, %13 ], [ 0, %23 ], [ 1, %20 ]
  ret i32 %25
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @SSL_CTX_set_tlsext_servername_callback(%struct.ssl_ctx_st* nocapture, i32 (%struct.ssl_st*, i32*, i8*)*) local_unnamed_addr #10 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 50
  store i32 (%struct.ssl_st*, i32*, i8*)* %1, i32 (%struct.ssl_st*, i32*, i8*)** %3, align 8
  ret i32 1
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @SSL_CTX_set_tlsext_servername_arg(%struct.ssl_ctx_st* nocapture, i8*) local_unnamed_addr #10 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 51
  store i8* %1, i8** %3, align 8
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.ssl_ech_server_config_list_st* @SSL_ECH_SERVER_CONFIG_LIST_new() local_unnamed_addr #0 {
  %1 = tail call i8* @OPENSSL_malloc(i64 32) #16
  %2 = icmp eq i8* %1, null
  br i1 %2, label %3, label %4

3:                                                ; preds = %0
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.36, i64 0, i64 0), i32 196) #16
  br label %8

4:                                                ; preds = %0
  %5 = bitcast i8* %1 to %struct.ssl_ech_server_config_list_st*
  %6 = getelementptr inbounds i8, i8* %1, i64 24
  %7 = bitcast i8* %6 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1, i8 0, i64 32, i1 false) #16
  store i32 1, i32* %7, align 8
  br label %8

8:                                                ; preds = %3, %4
  %9 = phi %struct.ssl_ech_server_config_list_st* [ null, %3 ], [ %5, %4 ]
  ret %struct.ssl_ech_server_config_list_st* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @SSL_ECH_SERVER_CONFIG_LIST_up_ref(%struct.ssl_ech_server_config_list_st*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.ssl_ech_server_config_list_st, %struct.ssl_ech_server_config_list_st* %0, i64 0, i32 1
  tail call void @CRYPTO_refcount_inc(i32* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @SSL_ECH_SERVER_CONFIG_LIST_free(%struct.ssl_ech_server_config_list_st*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.ssl_ech_server_config_list_st* %0, null
  br i1 %2, label %33, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.ssl_ech_server_config_list_st, %struct.ssl_ech_server_config_list_st* %0, i64 0, i32 1
  %5 = tail call i32 @CRYPTO_refcount_dec_and_test_zero(i32* %4) #16
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %33, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.ssl_ech_server_config_list_st, %struct.ssl_ech_server_config_list_st* %0, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %struct.ssl_ech_server_config_list_st, %struct.ssl_ech_server_config_list_st* %0, i64 0, i32 0, i32 1, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  %12 = getelementptr inbounds %"class.bssl::Array.66", %"class.bssl::Array.66"* %8, i64 0, i32 0
  br i1 %11, label %28, label %13

13:                                               ; preds = %7, %24
  %14 = phi i64 [ %25, %24 ], [ 0, %7 ]
  %15 = load %"class.std::__1::unique_ptr.67"*, %"class.std::__1::unique_ptr.67"** %12, align 8
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67"* %15, i64 %14, i32 0, i32 0, i32 0
  %17 = load %"class.bssl::ECHServerConfig"*, %"class.bssl::ECHServerConfig"** %16, align 8
  store %"class.bssl::ECHServerConfig"* null, %"class.bssl::ECHServerConfig"** %16, align 8
  %18 = icmp eq %"class.bssl::ECHServerConfig"* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.bssl::ECHServerConfig", %"class.bssl::ECHServerConfig"* %17, i64 0, i32 2, i32 0
  tail call void @EVP_HPKE_KEY_cleanup(%struct.evp_hpke_key_st* %20) #16
  %21 = getelementptr inbounds %"class.bssl::ECHServerConfig", %"class.bssl::ECHServerConfig"* %17, i64 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void @OPENSSL_free(i8* %22) #16
  %23 = bitcast %"class.bssl::ECHServerConfig"* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 16, i1 false) #16
  tail call void @OPENSSL_free(i8* nonnull %23) #16
  br label %24

24:                                               ; preds = %19, %13
  %25 = add nuw i64 %14, 1
  %26 = load i64, i64* %9, align 8
  %27 = icmp ult i64 %25, %26
  br i1 %27, label %13, label %28

28:                                               ; preds = %24, %7
  %29 = bitcast %"class.bssl::Array.66"* %8 to i8**
  %30 = load i8*, i8** %29, align 8
  tail call void @OPENSSL_free(i8* %30) #16
  %31 = bitcast %"class.bssl::Array.66"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #16
  %32 = bitcast %struct.ssl_ech_server_config_list_st* %0 to i8*
  tail call void @OPENSSL_free(i8* nonnull %32) #16
  br label %33

33:                                               ; preds = %3, %1, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_ECH_SERVER_CONFIG_LIST_add(%struct.ssl_ech_server_config_list_st*, i32, i8*, i64, i8*, i64) local_unnamed_addr #0 {
  %7 = tail call i8* @OPENSSL_malloc(i64 112) #16
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %6
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.36, i64 0, i64 0), i32 196) #16
  br label %26

10:                                               ; preds = %6
  %11 = bitcast i8* %7 to %"class.bssl::ECHServerConfig"*
  %12 = getelementptr inbounds i8, i8* %7, i64 32
  %13 = bitcast i8* %12 to %struct.evp_hpke_key_st*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 32, i1 false) #16
  tail call void @EVP_HPKE_KEY_zero(%struct.evp_hpke_key_st* %13) #16
  %14 = getelementptr inbounds i8, i8* %7, i64 105
  %15 = load i8, i8* %14, align 1
  %16 = and i8 %15, -4
  store i8 %16, i8* %14, align 1
  %17 = icmp ne i32 %1, 0
  %18 = tail call zeroext i1 @_ZN4bssl15ECHServerConfig4InitENS_4SpanIKhEES3_b(%"class.bssl::ECHServerConfig"* nonnull %11, i8* %2, i64 %3, i8* %4, i64 %5, i1 zeroext %17) #16
  br i1 %18, label %22, label %19

19:                                               ; preds = %10
  tail call void @ERR_put_error(i32 16, i32 0, i32 137, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 2225) #16
  tail call void @EVP_HPKE_KEY_cleanup(%struct.evp_hpke_key_st* %13) #16
  %20 = bitcast i8* %7 to i8**
  %21 = load i8*, i8** %20, align 8
  tail call void @OPENSSL_free(i8* %21) #16
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false) #16
  tail call void @OPENSSL_free(i8* nonnull %7) #16
  br label %26

22:                                               ; preds = %10
  %23 = getelementptr inbounds %struct.ssl_ech_server_config_list_st, %struct.ssl_ech_server_config_list_st* %0, i64 0, i32 0
  %24 = tail call zeroext i1 @_ZN4bssl13GrowableArrayINSt3__110unique_ptrINS_15ECHServerConfigENS_8internal7DeleterIS3_EEEEE4PushES7_(%"class.bssl::GrowableArray"* %23, %"class.bssl::ECHServerConfig"* nonnull %11)
  br i1 %24, label %26, label %25

25:                                               ; preds = %22
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 2229) #16
  br label %26

26:                                               ; preds = %9, %25, %22, %19
  %27 = phi i32 [ 0, %19 ], [ 0, %9 ], [ 1, %22 ], [ 0, %25 ]
  ret i32 %27
}

declare zeroext i1 @_ZN4bssl15ECHServerConfig4InitENS_4SpanIKhEES3_b(%"class.bssl::ECHServerConfig"*, i8*, i64, i8*, i64, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4bssl13GrowableArrayINSt3__110unique_ptrINS_15ECHServerConfigENS_8internal7DeleterIS3_EEEEE4PushES7_(%"class.bssl::GrowableArray"*, %"class.bssl::ECHServerConfig"*) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call zeroext i1 @_ZN4bssl13GrowableArrayINSt3__110unique_ptrINS_15ECHServerConfigENS_8internal7DeleterIS3_EEEEE9MaybeGrowEv(%"class.bssl::GrowableArray"* %0)
  br i1 %3, label %4, label %23

4:                                                ; preds = %2
  %5 = ptrtoint %"class.bssl::ECHServerConfig"* %1 to i64
  %6 = getelementptr inbounds %"class.bssl::GrowableArray", %"class.bssl::GrowableArray"* %0, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.bssl::GrowableArray", %"class.bssl::GrowableArray"* %0, i64 0, i32 1, i32 0
  %9 = load %"class.std::__1::unique_ptr.67"*, %"class.std::__1::unique_ptr.67"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67"* %9, i64 %7
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.bssl::ECHServerConfig"*, %"class.bssl::ECHServerConfig"** %11, align 8
  %13 = bitcast %"class.std::__1::unique_ptr.67"* %10 to i64*
  store i64 %5, i64* %13, align 8
  %14 = icmp eq %"class.bssl::ECHServerConfig"* %12, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.bssl::ECHServerConfig", %"class.bssl::ECHServerConfig"* %12, i64 0, i32 2, i32 0
  tail call void @EVP_HPKE_KEY_cleanup(%struct.evp_hpke_key_st* %16) #16
  %17 = getelementptr inbounds %"class.bssl::ECHServerConfig", %"class.bssl::ECHServerConfig"* %12, i64 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @OPENSSL_free(i8* %18) #16
  %19 = bitcast %"class.bssl::ECHServerConfig"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 16, i1 false) #16
  tail call void @OPENSSL_free(i8* nonnull %19) #16
  br label %20

20:                                               ; preds = %15, %4
  %21 = load i64, i64* %6, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %6, align 8
  br label %30

23:                                               ; preds = %2
  %24 = icmp eq %"class.bssl::ECHServerConfig"* %1, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.bssl::ECHServerConfig", %"class.bssl::ECHServerConfig"* %1, i64 0, i32 2, i32 0
  tail call void @EVP_HPKE_KEY_cleanup(%struct.evp_hpke_key_st* %26) #16
  %27 = getelementptr inbounds %"class.bssl::ECHServerConfig", %"class.bssl::ECHServerConfig"* %1, i64 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @OPENSSL_free(i8* %28) #16
  %29 = bitcast %"class.bssl::ECHServerConfig"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 16, i1 false) #16
  tail call void @OPENSSL_free(i8* nonnull %29) #16
  br label %30

30:                                               ; preds = %20, %23, %25
  %31 = phi i1 [ true, %20 ], [ false, %23 ], [ false, %25 ]
  ret i1 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_set1_ech_server_config_list(%struct.ssl_ctx_st*, %struct.ssl_ech_server_config_list_st*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_ech_server_config_list_st, %struct.ssl_ech_server_config_list_st* %1, i64 0, i32 0, i32 1, i32 0
  %4 = load %"class.std::__1::unique_ptr.67"*, %"class.std::__1::unique_ptr.67"** %3, align 8
  %5 = getelementptr inbounds %struct.ssl_ech_server_config_list_st, %struct.ssl_ech_server_config_list_st* %1, i64 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67"* %4, i64 %6
  %8 = icmp eq i64 %6, 0
  br i1 %8, label %25, label %9

9:                                                ; preds = %2, %9
  %10 = phi %"class.std::__1::unique_ptr.67"* [ %19, %9 ], [ %4, %2 ]
  %11 = phi i8 [ %18, %9 ], [ 0, %2 ]
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67"* %10, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.bssl::ECHServerConfig"*, %"class.bssl::ECHServerConfig"** %12, align 8
  %14 = getelementptr inbounds %"class.bssl::ECHServerConfig", %"class.bssl::ECHServerConfig"* %13, i64 0, i32 4
  %15 = load i8, i8* %14, align 1
  %16 = and i8 %15, 1
  %17 = icmp ne i8 %16, 0
  %18 = select i1 %17, i8 1, i8 %11
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67"* %10, i64 1
  %20 = icmp eq %"class.std::__1::unique_ptr.67"* %19, %7
  %21 = or i1 %17, %20
  br i1 %21, label %22, label %9

22:                                               ; preds = %9
  %23 = and i8 %18, 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %2, %22
  tail call void @ERR_put_error(i32 16, i32 0, i32 313, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 2245) #16
  br label %39

26:                                               ; preds = %22
  %27 = icmp eq %struct.ssl_ech_server_config_list_st* %1, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %struct.ssl_ech_server_config_list_st, %struct.ssl_ech_server_config_list_st* %1, i64 0, i32 1
  tail call void @CRYPTO_refcount_inc(i32* %29) #16
  br label %30

30:                                               ; preds = %26, %28
  %31 = ptrtoint %struct.ssl_ech_server_config_list_st* %1 to i64
  %32 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 2
  tail call void @CRYPTO_MUTEX_lock_write(%union.crypto_mutex_st* %32) #16
  %33 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 69
  %34 = bitcast %"class.std::__1::unique_ptr.63"* %33 to i64*
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.63"* %33, i64 0, i32 0, i32 0, i32 0
  %36 = load %struct.ssl_ech_server_config_list_st*, %struct.ssl_ech_server_config_list_st** %35, align 8
  store i64 %31, i64* %34, align 8
  tail call void @CRYPTO_MUTEX_unlock_write(%union.crypto_mutex_st* %32) #16
  %37 = icmp eq %struct.ssl_ech_server_config_list_st* %36, null
  br i1 %37, label %39, label %38

38:                                               ; preds = %30
  tail call void @SSL_ECH_SERVER_CONFIG_LIST_free(%struct.ssl_ech_server_config_list_st* nonnull %36) #16
  br label %39

39:                                               ; preds = %38, %30, %25
  %40 = phi i32 [ 0, %25 ], [ 1, %30 ], [ 1, %38 ]
  ret i32 %40
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden i32 @SSL_select_next_proto(i8** nocapture, i8* nocapture, i8*, i32, i8*, i32) local_unnamed_addr #11 {
  %7 = icmp eq i32 %3, 0
  br i1 %7, label %48, label %8

8:                                                ; preds = %6
  %9 = icmp eq i32 %5, 0
  br label %10

10:                                               ; preds = %8, %41
  %11 = phi i32 [ 0, %8 ], [ %43, %41 ]
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds i8, i8* %2, i64 %12
  %14 = load i8, i8* %13, align 1
  %15 = add nuw i32 %11, 1
  br i1 %9, label %41, label %16

16:                                               ; preds = %10
  %17 = zext i32 %15 to i64
  %18 = getelementptr inbounds i8, i8* %2, i64 %17
  %19 = icmp eq i8 %14, 0
  %20 = zext i8 %14 to i64
  br label %21

21:                                               ; preds = %16, %36
  %22 = phi i32 [ 0, %16 ], [ %39, %36 ]
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %14, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = add nuw i32 %22, 1
  br label %36

29:                                               ; preds = %21
  br i1 %19, label %45, label %30

30:                                               ; preds = %29
  %31 = add nuw i32 %22, 1
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %4, i64 %32
  %34 = tail call i32 @bcmp(i8* %18, i8* %33, i64 %20)
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %45, label %36

36:                                               ; preds = %27, %30
  %37 = phi i32 [ %28, %27 ], [ %31, %30 ]
  %38 = zext i8 %25 to i32
  %39 = add i32 %37, %38
  %40 = icmp ult i32 %39, %5
  br i1 %40, label %21, label %41

41:                                               ; preds = %36, %10
  %42 = zext i8 %14 to i32
  %43 = add i32 %15, %42
  %44 = icmp ult i32 %43, %3
  br i1 %44, label %10, label %48

45:                                               ; preds = %30, %29
  %46 = zext i32 %11 to i64
  %47 = getelementptr inbounds i8, i8* %2, i64 %46
  br label %48

48:                                               ; preds = %41, %45, %6
  %49 = phi i8* [ %4, %6 ], [ %47, %45 ], [ %4, %41 ]
  %50 = phi i32 [ 2, %6 ], [ 1, %45 ], [ 2, %41 ]
  %51 = getelementptr inbounds i8, i8* %49, i64 1
  store i8* %51, i8** %0, align 8
  %52 = load i8, i8* %49, align 1
  store i8 %52, i8* %1, align 1
  ret i32 %50
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @SSL_get0_next_proto_negotiated(%struct.ssl_st* nocapture readonly, i8** nocapture, i32* nocapture) local_unnamed_addr #6 {
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %5 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %4, align 8
  %6 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %5, i64 0, i32 48, i32 0
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast i8** %1 to i64*
  store i64 %8, i64* %9, align 8
  %10 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %4, align 8
  %11 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %10, i64 0, i32 48, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = trunc i64 %12 to i32
  store i32 %13, i32* %2, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @SSL_CTX_set_next_protos_advertised_cb(%struct.ssl_ctx_st* nocapture, i32 (%struct.ssl_st*, i8**, i32*, i8*)*, i8*) local_unnamed_addr #10 {
  %4 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 58
  store i32 (%struct.ssl_st*, i8**, i32*, i8*)* %1, i32 (%struct.ssl_st*, i8**, i32*, i8*)** %4, align 8
  %5 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 59
  store i8* %2, i8** %5, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @SSL_CTX_set_next_proto_select_cb(%struct.ssl_ctx_st* nocapture, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)*, i8*) local_unnamed_addr #10 {
  %4 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 60
  store i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)* %1, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)** %4, align 8
  %5 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 61
  store i8* %2, i8** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_set_alpn_protos(%struct.ssl_ctx_st* nocapture, i8*, i32) local_unnamed_addr #0 {
  %4 = zext i32 %2 to i64
  %5 = icmp eq i32 %2, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %3
  %7 = tail call zeroext i1 @_ZN4bssl22ssl_is_valid_alpn_listENS_4SpanIKhEE(i8* %1, i64 %4) #16
  br i1 %7, label %9, label %8

8:                                                ; preds = %6
  tail call void @ERR_put_error(i32 16, i32 0, i32 315, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 2314) #16
  br label %20

9:                                                ; preds = %6, %3
  %10 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 64
  %11 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %10, i64 0, i32 0
  %12 = load i8*, i8** %11, align 8
  tail call void @OPENSSL_free(i8* %12) #16
  %13 = bitcast %"class.bssl::Array"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #16
  br i1 %5, label %20, label %14

14:                                               ; preds = %9
  %15 = tail call i8* @OPENSSL_malloc(i64 %4) #16
  store i8* %15, i8** %11, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.36, i64 0, i64 0), i32 324) #16
  br label %20

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 64, i32 1
  store i64 %4, i64* %19, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %15, i8* align 1 %1, i64 %4, i1 false) #16
  br label %20

20:                                               ; preds = %18, %17, %9, %8
  %21 = phi i32 [ 1, %8 ], [ 1, %17 ], [ 0, %18 ], [ 0, %9 ]
  ret i32 %21
}

declare zeroext i1 @_ZN4bssl22ssl_is_valid_alpn_listENS_4SpanIKhEE(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_set_alpn_protos(%struct.ssl_st* nocapture readonly, i8*, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %4, align 8
  %6 = icmp eq %"struct.bssl::SSL_CONFIG"* %5, null
  br i1 %6, label %27, label %7

7:                                                ; preds = %3
  %8 = zext i32 %2 to i64
  %9 = icmp eq i32 %2, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %7
  %11 = tail call zeroext i1 @_ZN4bssl22ssl_is_valid_alpn_listENS_4SpanIKhEE(i8* %1, i64 %8) #16
  br i1 %11, label %12, label %14

12:                                               ; preds = %10
  %13 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %4, align 8
  br label %15

14:                                               ; preds = %10
  tail call void @ERR_put_error(i32 16, i32 0, i32 315, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 2327) #16
  br label %27

15:                                               ; preds = %12, %7
  %16 = phi %"struct.bssl::SSL_CONFIG"* [ %13, %12 ], [ %5, %7 ]
  %17 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %16, i64 0, i32 16
  %18 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %17, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @OPENSSL_free(i8* %19) #16
  %20 = bitcast %"class.bssl::Array"* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #16
  br i1 %9, label %27, label %21

21:                                               ; preds = %15
  %22 = tail call i8* @OPENSSL_malloc(i64 %8) #16
  store i8* %22, i8** %18, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.36, i64 0, i64 0), i32 324) #16
  br label %27

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %16, i64 0, i32 16, i32 1
  store i64 %8, i64* %26, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %22, i8* align 1 %1, i64 %8, i1 false) #16
  br label %27

27:                                               ; preds = %25, %24, %15, %3, %14
  %28 = phi i32 [ 1, %3 ], [ 1, %14 ], [ 1, %24 ], [ 0, %25 ], [ 0, %15 ]
  ret i32 %28
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @SSL_CTX_set_alpn_select_cb(%struct.ssl_ctx_st* nocapture, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)*, i8*) local_unnamed_addr #10 {
  %4 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 62
  store i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)* %1, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)** %4, align 8
  %5 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 63
  store i8* %2, i8** %5, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @SSL_get0_alpn_selected(%struct.ssl_st* nocapture readonly, i8** nocapture, i32* nocapture) local_unnamed_addr #6 {
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %5 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %4, align 8
  %6 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %5, i64 0, i32 34, i32 0, i32 0, i32 0
  %7 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %6, align 8
  %8 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %7, null
  br i1 %8, label %32, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %7, i64 0, i32 46
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 8192
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %32, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %16 = load i8, i8* %15, align 4
  %17 = and i8 %16, 1
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %32

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %7, i64 0, i32 41, i32 0, i32 0, i32 0
  %21 = load %struct.ssl_session_st*, %struct.ssl_session_st** %20, align 8
  %22 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %21, i64 0, i32 33, i32 0
  %23 = bitcast i8** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast i8** %1 to i64*
  store i64 %24, i64* %25, align 8
  %26 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %4, align 8
  %27 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %26, i64 0, i32 34, i32 0, i32 0, i32 0
  %28 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %27, align 8
  %29 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %28, i64 0, i32 41, i32 0, i32 0, i32 0
  %30 = load %struct.ssl_session_st*, %struct.ssl_session_st** %29, align 8
  %31 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %30, i64 0, i32 33, i32 1
  br label %39

32:                                               ; preds = %3, %14, %9
  %33 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %5, i64 0, i32 49, i32 0
  %34 = bitcast i8** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast i8** %1 to i64*
  store i64 %35, i64* %36, align 8
  %37 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %4, align 8
  %38 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %37, i64 0, i32 49, i32 1
  br label %39

39:                                               ; preds = %32, %19
  %40 = phi i64* [ %38, %32 ], [ %31, %19 ]
  %41 = load i64, i64* %40, align 8
  %42 = trunc i64 %41 to i32
  store i32 %42, i32* %2, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @SSL_CTX_set_allow_unknown_alpn_protos(%struct.ssl_ctx_st* nocapture, i32) local_unnamed_addr #6 {
  %3 = icmp ne i32 %1, 0
  %4 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 77
  %5 = zext i1 %3 to i16
  %6 = load i16, i16* %4, align 8
  %7 = shl nuw nsw i16 %5, 6
  %8 = and i16 %6, -65
  %9 = or i16 %8, %7
  store i16 %9, i16* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_add_application_settings(%struct.ssl_st* nocapture readonly, i8*, i64, i8*, i64) local_unnamed_addr #0 {
  %6 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %6, align 8
  %8 = icmp eq %"struct.bssl::SSL_CONFIG"* %7, null
  br i1 %8, label %57, label %9

9:                                                ; preds = %5
  tail call void @OPENSSL_free(i8* null) #16
  %10 = icmp eq i64 %2, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %9
  %12 = tail call i8* @OPENSSL_malloc(i64 %2) #16
  %13 = ptrtoint i8* %12 to i64
  %14 = icmp eq i8* %12, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %12, i8* align 1 %1, i64 %2, i1 false) #16
  br label %17

16:                                               ; preds = %11
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.36, i64 0, i64 0), i32 324) #16
  br label %53

17:                                               ; preds = %15, %9
  %18 = phi i64 [ %13, %15 ], [ 0, %9 ]
  tail call void @OPENSSL_free(i8* null) #16
  %19 = icmp eq i64 %4, 0
  br i1 %19, label %26, label %20

20:                                               ; preds = %17
  %21 = tail call i8* @OPENSSL_malloc(i64 %4) #16
  %22 = icmp eq i8* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %20
  %24 = ptrtoint i8* %21 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 %3, i64 %4, i1 false) #16
  br label %26

25:                                               ; preds = %20
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.36, i64 0, i64 0), i32 324) #16
  br label %53

26:                                               ; preds = %23, %17
  %27 = phi i64 [ %24, %23 ], [ 0, %17 ]
  %28 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %6, align 8
  %29 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %28, i64 0, i32 17
  tail call void @OPENSSL_free(i8* null) #16
  tail call void @OPENSSL_free(i8* null) #16
  %30 = tail call zeroext i1 @_ZN4bssl13GrowableArrayINS_10ALPSConfigEE9MaybeGrowEv(%"class.bssl::GrowableArray.82"* %29) #16
  br i1 %30, label %31, label %50

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.bssl::GrowableArray.82", %"class.bssl::GrowableArray.82"* %29, i64 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %28, i64 0, i32 17, i32 1, i32 0
  %35 = load %"struct.bssl::ALPSConfig"*, %"struct.bssl::ALPSConfig"** %34, align 8
  %36 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %35, i64 %33
  %37 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %36, i64 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  tail call void @OPENSSL_free(i8* %38) #16
  %39 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %35, i64 %33, i32 0, i32 1
  store i64 0, i64* %39, align 8
  %40 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %35, i64 %33, i32 0, i32 1
  %41 = bitcast %"struct.bssl::ALPSConfig"* %36 to i64*
  store i64 %18, i64* %41, align 8
  store i64 %2, i64* %40, align 8
  %42 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %35, i64 %33, i32 1
  %43 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %42, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  tail call void @OPENSSL_free(i8* %44) #16
  %45 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %35, i64 %33, i32 1, i32 1
  store i64 0, i64* %45, align 8
  %46 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %35, i64 %33, i32 1, i32 1
  %47 = bitcast %"class.bssl::Array"* %42 to i64*
  store i64 %27, i64* %47, align 8
  store i64 %4, i64* %46, align 8
  %48 = load i64, i64* %32, align 8
  %49 = add i64 %48, 1
  store i64 %49, i64* %32, align 8
  tail call void @OPENSSL_free(i8* null) #16
  tail call void @OPENSSL_free(i8* null) #16
  br label %53

50:                                               ; preds = %26
  %51 = inttoptr i64 %27 to i8*
  tail call void @OPENSSL_free(i8* %51) #16
  %52 = inttoptr i64 %18 to i8*
  tail call void @OPENSSL_free(i8* %52) #16
  br label %53

53:                                               ; preds = %16, %25, %50, %31
  %54 = phi i64 [ 0, %31 ], [ 0, %50 ], [ %13, %16 ], [ %18, %25 ]
  %55 = phi i32 [ 1, %31 ], [ 0, %50 ], [ 0, %16 ], [ 0, %25 ]
  tail call void @OPENSSL_free(i8* null) #16
  %56 = inttoptr i64 %54 to i8*
  tail call void @OPENSSL_free(i8* %56) #16
  br label %57

57:                                               ; preds = %5, %53
  %58 = phi i32 [ %55, %53 ], [ 0, %5 ]
  ret i32 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden void @SSL_get0_peer_application_settings(%struct.ssl_st*, i8** nocapture, i64* nocapture) local_unnamed_addr #0 {
  %4 = tail call %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st* %0) #16
  %5 = icmp eq %struct.ssl_session_st* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %4, i64 0, i32 35, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %4, i64 0, i32 35, i32 1
  %10 = load i64, i64* %9, align 8
  br label %11

11:                                               ; preds = %3, %6
  %12 = phi i8* [ %8, %6 ], [ null, %3 ]
  %13 = phi i64 [ %10, %6 ], [ 0, %3 ]
  store i8* %12, i8** %1, align 8
  store i64 %13, i64* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_has_application_settings(%struct.ssl_st*) local_unnamed_addr #0 {
  %2 = tail call %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st* %0) #16
  %3 = icmp eq %struct.ssl_session_st* %2, null
  br i1 %3, label %10, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %2, i64 0, i32 36
  %6 = load i8, i8* %5, align 8
  %7 = lshr i8 %6, 6
  %8 = and i8 %7, 1
  %9 = zext i8 %8 to i32
  br label %10

10:                                               ; preds = %1, %4
  %11 = phi i32 [ 0, %1 ], [ %9, %4 ]
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_add_cert_compression_alg(%struct.ssl_ctx_st*, i16 zeroext, i32 (%struct.ssl_st*, %struct.cbb_st*, i8*, i64)*, i32 (%struct.ssl_st*, %struct.crypto_buffer_st**, i64, i8*, i64)*) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 66
  %6 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 66, i32 1, i32 0
  %7 = load %"struct.bssl::CertCompressionAlg"*, %"struct.bssl::CertCompressionAlg"** %6, align 8
  %8 = getelementptr inbounds %"class.bssl::GrowableArray.114", %"class.bssl::GrowableArray.114"* %5, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"struct.bssl::CertCompressionAlg", %"struct.bssl::CertCompressionAlg"* %7, i64 %9
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %20, label %14

12:                                               ; preds = %14
  %13 = icmp eq %"struct.bssl::CertCompressionAlg"* %19, %10
  br i1 %13, label %20, label %14

14:                                               ; preds = %4, %12
  %15 = phi %"struct.bssl::CertCompressionAlg"* [ %19, %12 ], [ %7, %4 ]
  %16 = getelementptr inbounds %"struct.bssl::CertCompressionAlg", %"struct.bssl::CertCompressionAlg"* %15, i64 0, i32 2
  %17 = load i16, i16* %16, align 8
  %18 = icmp eq i16 %17, %1
  %19 = getelementptr inbounds %"struct.bssl::CertCompressionAlg", %"struct.bssl::CertCompressionAlg"* %15, i64 1
  br i1 %18, label %30, label %12

20:                                               ; preds = %12, %4
  %21 = tail call zeroext i1 @_ZN4bssl13GrowableArrayINS_18CertCompressionAlgEE9MaybeGrowEv(%"class.bssl::GrowableArray.114"* %5) #16
  br i1 %21, label %22, label %30

22:                                               ; preds = %20
  %23 = load i64, i64* %8, align 8
  %24 = load %"struct.bssl::CertCompressionAlg"*, %"struct.bssl::CertCompressionAlg"** %6, align 8
  %25 = getelementptr inbounds %"struct.bssl::CertCompressionAlg", %"struct.bssl::CertCompressionAlg"* %24, i64 %23, i32 0
  store i32 (%struct.ssl_st*, %struct.cbb_st*, i8*, i64)* %2, i32 (%struct.ssl_st*, %struct.cbb_st*, i8*, i64)** %25, align 8
  %26 = getelementptr inbounds %"struct.bssl::CertCompressionAlg", %"struct.bssl::CertCompressionAlg"* %24, i64 %23, i32 1
  store i32 (%struct.ssl_st*, %struct.crypto_buffer_st**, i64, i8*, i64)* %3, i32 (%struct.ssl_st*, %struct.crypto_buffer_st**, i64, i8*, i64)** %26, align 8
  %27 = getelementptr inbounds %"struct.bssl::CertCompressionAlg", %"struct.bssl::CertCompressionAlg"* %24, i64 %23, i32 2
  store i16 %1, i16* %27, align 8
  %28 = load i64, i64* %8, align 8
  %29 = add i64 %28, 1
  store i64 %29, i64* %8, align 8
  br label %30

30:                                               ; preds = %14, %22, %20
  %31 = phi i32 [ 1, %22 ], [ 0, %20 ], [ 0, %14 ]
  ret i32 %31
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @SSL_CTX_set_tls_channel_id_enabled(%struct.ssl_ctx_st* nocapture, i32) local_unnamed_addr #6 {
  %3 = icmp ne i32 %1, 0
  %4 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 77
  %5 = zext i1 %3 to i16
  %6 = load i16, i16* %4, align 8
  %7 = shl nuw nsw i16 %5, 4
  %8 = and i16 %6, -17
  %9 = or i16 %8, %7
  store i16 %9, i16* %4, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @SSL_CTX_enable_tls_channel_id(%struct.ssl_ctx_st* nocapture) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 77
  %3 = load i16, i16* %2, align 8
  %4 = or i16 %3, 16
  store i16 %4, i16* %2, align 8
  ret i32 1
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @SSL_set_tls_channel_id_enabled(%struct.ssl_st* nocapture readonly, i32) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %5 = icmp eq %"struct.bssl::SSL_CONFIG"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = icmp ne i32 %1, 0
  %8 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %4, i64 0, i32 23
  %9 = zext i1 %7 to i16
  %10 = load i16, i16* %8, align 1
  %11 = shl nuw nsw i16 %9, 3
  %12 = and i16 %10, -9
  %13 = or i16 %12, %11
  store i16 %13, i16* %8, align 1
  br label %14

14:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @SSL_enable_tls_channel_id(%struct.ssl_st* nocapture readonly) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %2, align 8
  %4 = icmp eq %"struct.bssl::SSL_CONFIG"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %3, i64 0, i32 23
  %7 = load i16, i16* %6, align 1
  %8 = or i16 %7, 8
  store i16 %8, i16* %6, align 1
  br label %9

9:                                                ; preds = %1, %5
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_set1_tls_channel_id(%struct.ssl_ctx_st* nocapture, %struct.evp_pkey_st*) local_unnamed_addr #0 {
  %3 = tail call %struct.ec_key_st* @EVP_PKEY_get0_EC_KEY(%struct.evp_pkey_st* %1) #16
  %4 = icmp eq %struct.ec_key_st* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %2
  %6 = tail call %struct.ec_group_st* @EC_KEY_get0_group(%struct.ec_key_st* nonnull %3) #16
  %7 = tail call i32 @EC_GROUP_get_curve_name(%struct.ec_group_st* %6) #16
  %8 = icmp eq i32 %7, 415
  br i1 %8, label %10, label %9

9:                                                ; preds = %5, %2
  tail call void @ERR_put_error(i32 16, i32 0, i32 128, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 2435) #16
  br label %26

10:                                               ; preds = %5
  %11 = icmp eq %struct.evp_pkey_st* %1, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %10
  %13 = tail call i32 @EVP_PKEY_up_ref(%struct.evp_pkey_st* nonnull %1) #16
  br label %14

14:                                               ; preds = %10, %12
  %15 = ptrtoint %struct.evp_pkey_st* %1 to i64
  %16 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 68
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %17, align 8
  %19 = bitcast %"class.std::__1::unique_ptr.18"* %16 to i64*
  store i64 %15, i64* %19, align 8
  %20 = icmp eq %struct.evp_pkey_st* %18, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %14
  tail call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %18) #16
  br label %22

22:                                               ; preds = %21, %14
  %23 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 77
  %24 = load i16, i16* %23, align 8
  %25 = or i16 %24, 16
  store i16 %25, i16* %23, align 8
  br label %26

26:                                               ; preds = %22, %9
  %27 = phi i32 [ 1, %22 ], [ 0, %9 ]
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_set1_tls_channel_id(%struct.ssl_st* nocapture readonly, %struct.evp_pkey_st*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %5 = icmp eq %"struct.bssl::SSL_CONFIG"* %4, null
  br i1 %5, label %32, label %6

6:                                                ; preds = %2
  %7 = tail call %struct.ec_key_st* @EVP_PKEY_get0_EC_KEY(%struct.evp_pkey_st* %1) #16
  %8 = icmp eq %struct.ec_key_st* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %6
  %10 = tail call %struct.ec_group_st* @EC_KEY_get0_group(%struct.ec_key_st* nonnull %7) #16
  %11 = tail call i32 @EC_GROUP_get_curve_name(%struct.ec_group_st* %10) #16
  %12 = icmp eq i32 %11, 415
  br i1 %12, label %14, label %13

13:                                               ; preds = %9, %6
  tail call void @ERR_put_error(i32 16, i32 0, i32 128, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 2450) #16
  br label %32

14:                                               ; preds = %9
  %15 = icmp eq %struct.evp_pkey_st* %1, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = tail call i32 @EVP_PKEY_up_ref(%struct.evp_pkey_st* nonnull %1) #16
  br label %18

18:                                               ; preds = %14, %16
  %19 = ptrtoint %struct.evp_pkey_st* %1 to i64
  %20 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %21 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %20, i64 0, i32 15
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %22, align 8
  %24 = bitcast %"class.std::__1::unique_ptr.18"* %21 to i64*
  store i64 %19, i64* %24, align 8
  %25 = icmp eq %struct.evp_pkey_st* %23, null
  br i1 %25, label %27, label %26

26:                                               ; preds = %18
  tail call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %23) #16
  br label %27

27:                                               ; preds = %26, %18
  %28 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %29 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %28, i64 0, i32 23
  %30 = load i16, i16* %29, align 1
  %31 = or i16 %30, 8
  store i16 %31, i16* %29, align 1
  br label %32

32:                                               ; preds = %2, %27, %13
  %33 = phi i32 [ 1, %27 ], [ 0, %13 ], [ 0, %2 ]
  ret i32 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @SSL_get_tls_channel_id(%struct.ssl_st* nocapture readonly, i8* nocapture, i64) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %5 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %4, align 8
  %6 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %5, i64 0, i32 23
  %7 = load i16, i16* %6, align 1
  %8 = and i16 %7, 512
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %3
  %11 = icmp ult i64 %2, 64
  %12 = select i1 %11, i64 %2, i64 64
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %5, i64 0, i32 51, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %15, i64 %12, i1 false) #16
  br label %16

16:                                               ; preds = %14, %10, %3
  %17 = phi i64 [ 0, %3 ], [ 64, %10 ], [ 64, %14 ]
  ret i64 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @SSL_get0_certificate_types(%struct.ssl_st* nocapture readonly, i8** nocapture) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %4 = load i8, i8* %3, align 4
  %5 = and i8 %4, 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %18

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %9 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %8, align 8
  %10 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %9, i64 0, i32 34, i32 0, i32 0, i32 0
  %11 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %10, align 8
  %12 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %11, i64 0, i32 37, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %11, i64 0, i32 37, i32 1
  %17 = load i64, i64* %16, align 8
  br label %18

18:                                               ; preds = %7, %2, %13
  %19 = phi i64 [ %17, %13 ], [ 0, %7 ], [ 0, %2 ]
  %20 = phi i8* [ %15, %13 ], [ null, %7 ], [ null, %2 ]
  store i8* %20, i8** %1, align 8
  ret i64 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @SSL_get0_peer_verify_algorithms(%struct.ssl_st* nocapture readonly, i16** nocapture) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %4 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %3, align 8
  %5 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %4, i64 0, i32 34, i32 0, i32 0, i32 0
  %6 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %5, align 8
  %7 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %6, i64 0, i32 26, i32 0
  %10 = load i16*, i16** %9, align 8
  %11 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %6, i64 0, i32 26, i32 1
  %12 = load i64, i64* %11, align 8
  br label %13

13:                                               ; preds = %2, %8
  %14 = phi i64 [ %12, %8 ], [ 0, %2 ]
  %15 = phi i16* [ %10, %8 ], [ null, %2 ]
  store i16* %15, i16** %1, align 8
  ret i64 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @SSL_get0_peer_delegation_algorithms(%struct.ssl_st* nocapture readonly, i16** nocapture) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %4 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %3, align 8
  %5 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %4, i64 0, i32 34, i32 0, i32 0, i32 0
  %6 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %5, align 8
  %7 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %6, i64 0, i32 28, i32 0
  %10 = load i16*, i16** %9, align 8
  %11 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %6, i64 0, i32 28, i32 1
  %12 = load i64, i64* %11, align 8
  br label %13

13:                                               ; preds = %2, %8
  %14 = phi i64 [ %12, %8 ], [ 0, %2 ]
  %15 = phi i16* [ %10, %8 ], [ null, %2 ]
  store i16* %15, i16** %1, align 8
  ret i64 %14
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.evp_pkey_st* @SSL_get_privatekey(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %2, align 8
  %4 = icmp eq %"struct.bssl::SSL_CONFIG"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %3, i64 0, i32 6, i32 0, i32 0, i32 0
  %7 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %6, align 8
  %8 = icmp eq %"struct.bssl::CERT"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %10, align 8
  br label %12

12:                                               ; preds = %5, %1, %9
  %13 = phi %struct.evp_pkey_st* [ %11, %9 ], [ null, %1 ], [ null, %5 ]
  ret %struct.evp_pkey_st* %13
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.evp_pkey_st* @SSL_CTX_get0_privatekey(%struct.ssl_ctx_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 37, i32 0, i32 0, i32 0
  %3 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %2, align 8
  %4 = icmp eq %"struct.bssl::CERT"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.bssl::CERT", %"struct.bssl::CERT"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %struct.evp_pkey_st* [ %7, %5 ], [ null, %1 ]
  ret %struct.evp_pkey_st* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.ssl_cipher_st* @SSL_get_current_cipher(%struct.ssl_st*) local_unnamed_addr #0 {
  %2 = tail call %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st* %0) #16
  %3 = icmp eq %struct.ssl_session_st* %2, null
  br i1 %3, label %7, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %2, i64 0, i32 20
  %6 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %5, align 8
  br label %7

7:                                                ; preds = %1, %4
  %8 = phi %struct.ssl_cipher_st* [ %6, %4 ], [ null, %1 ]
  ret %struct.ssl_cipher_st* %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SSL_session_reused(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %3 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 23
  %5 = load i16, i16* %4, align 1
  %6 = and i16 %5, 64
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %8, label %17

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 34, i32 0, i32 0, i32 0
  %10 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %9, align 8
  %11 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %10, i64 0, i32 46
  %14 = load i32, i32* %13, align 8
  %15 = lshr i32 %14, 13
  %16 = and i32 %15, 1
  br label %17

17:                                               ; preds = %12, %8, %1
  %18 = phi i32 [ 1, %1 ], [ %16, %12 ], [ 0, %8 ]
  ret i32 %18
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias i8* @SSL_get_current_compression(%struct.ssl_st* nocapture readnone) local_unnamed_addr #9 {
  ret i8* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias i8* @SSL_get_current_expansion(%struct.ssl_st* nocapture readnone) local_unnamed_addr #9 {
  ret i8* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @SSL_get_server_tmp_key(%struct.ssl_st* nocapture readnone, %struct.evp_pkey_st** nocapture readnone) local_unnamed_addr #9 {
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @SSL_CTX_set_quiet_shutdown(%struct.ssl_ctx_st* nocapture, i32) local_unnamed_addr #6 {
  %3 = icmp ne i32 %1, 0
  %4 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 77
  %5 = zext i1 %3 to i16
  %6 = load i16, i16* %4, align 8
  %7 = shl nuw nsw i16 %5, 1
  %8 = and i16 %6, -3
  %9 = or i16 %8, %7
  store i16 %9, i16* %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SSL_CTX_get_quiet_shutdown(%struct.ssl_ctx_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 77
  %3 = load i16, i16* %2, align 8
  %4 = lshr i16 %3, 1
  %5 = and i16 %4, 1
  %6 = zext i16 %5 to i32
  ret i32 %6
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @SSL_set_quiet_shutdown(%struct.ssl_st* nocapture, i32) local_unnamed_addr #6 {
  %3 = icmp ne i32 %1, 0
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %5 = zext i1 %3 to i8
  %6 = load i8, i8* %4, align 4
  %7 = shl nuw nsw i8 %5, 1
  %8 = and i8 %6, -3
  %9 = or i8 %8, %7
  store i8 %9, i8* %4, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SSL_get_quiet_shutdown(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %3 = load i8, i8* %2, align 4
  %4 = lshr i8 %3, 1
  %5 = and i8 %4, 1
  %6 = zext i8 %5 to i32
  ret i32 %6
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @SSL_set_shutdown(%struct.ssl_st* nocapture readonly, i32) local_unnamed_addr #6 {
  %3 = and i32 %1, 2
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %12, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %7 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %8 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %7, i64 0, i32 12
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %5
  store i32 1, i32* %8, align 8
  br label %12

12:                                               ; preds = %2, %11, %5
  %13 = and i32 %1, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %17 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %16, align 8
  %18 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %17, i64 0, i32 13
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %15
  store i32 1, i32* %18, align 4
  br label %22

22:                                               ; preds = %12, %21, %15
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SSL_get_shutdown(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %3 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 12
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  %7 = select i1 %6, i32 0, i32 2
  %8 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 13
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 1
  %11 = zext i1 %10 to i32
  %12 = or i32 %7, %11
  ret i32 %12
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.ssl_ctx_st* @SSL_get_SSL_CTX(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %3 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %2, align 8
  ret %struct.ssl_ctx_st* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.ssl_ctx_st* @SSL_set_SSL_CTX(%struct.ssl_st* nocapture, %struct.ssl_ctx_st*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %5 = icmp eq %"struct.bssl::SSL_CONFIG"* %4, null
  br i1 %5, label %58, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 16
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.106", %"class.std::__1::unique_ptr.106"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %8, align 8
  %10 = icmp eq %struct.ssl_ctx_st* %9, %1
  br i1 %10, label %58, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %9, i64 0, i32 1
  %13 = load %"struct.bssl::SSL_X509_METHOD"*, %"struct.bssl::SSL_X509_METHOD"** %12, align 8
  %14 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %1, i64 0, i32 1
  %15 = load %"struct.bssl::SSL_X509_METHOD"*, %"struct.bssl::SSL_X509_METHOD"** %14, align 8
  %16 = icmp eq %"struct.bssl::SSL_X509_METHOD"* %13, %15
  br i1 %16, label %17, label %58

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %1, i64 0, i32 37, i32 0, i32 0, i32 0
  %19 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %18, align 8
  %20 = tail call %"struct.bssl::CERT"* @_ZN4bssl12ssl_cert_dupEPNS_4CERTE(%"struct.bssl::CERT"* %19) #16
  %21 = icmp eq %"struct.bssl::CERT"* %20, null
  br i1 %21, label %58, label %22

22:                                               ; preds = %17
  %23 = ptrtoint %"struct.bssl::CERT"* %20 to i64
  %24 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %25 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %24, i64 0, i32 6
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.15", %"class.std::__1::unique_ptr.15"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"struct.bssl::CERT"*, %"struct.bssl::CERT"** %26, align 8
  %28 = bitcast %"class.std::__1::unique_ptr.15"* %25 to i64*
  store i64 %23, i64* %28, align 8
  %29 = icmp eq %"struct.bssl::CERT"* %27, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %22
  tail call void @_ZN4bssl4CERTD1Ev(%"struct.bssl::CERT"* nonnull %27) #16
  %31 = bitcast %"struct.bssl::CERT"* %27 to i8*
  tail call void @OPENSSL_free(i8* nonnull %31) #16
  br label %32

32:                                               ; preds = %22, %30
  %33 = icmp eq %struct.ssl_ctx_st* %1, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %32
  %35 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %1, i64 0, i32 20
  tail call void @CRYPTO_refcount_inc(i32* %35) #16
  br label %36

36:                                               ; preds = %32, %34
  %37 = ptrtoint %struct.ssl_ctx_st* %1 to i64
  %38 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %8, align 8
  %39 = bitcast %"class.std::__1::unique_ptr.106"* %7 to i64*
  store i64 %37, i64* %39, align 8
  %40 = icmp eq %struct.ssl_ctx_st* %38, null
  br i1 %40, label %47, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %38, i64 0, i32 20
  %43 = tail call i32 @CRYPTO_refcount_dec_and_test_zero(i32* %42) #16
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %41
  tail call void @_ZN10ssl_ctx_stD2Ev(%struct.ssl_ctx_st* nonnull %38) #16
  %46 = bitcast %struct.ssl_ctx_st* %38 to i8*
  tail call void @OPENSSL_free(i8* nonnull %46) #16
  br label %47

47:                                               ; preds = %36, %41, %45
  %48 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %8, align 8
  %49 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %48, i64 0, i32 77
  %50 = load i16, i16* %49, align 8
  %51 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %52 = load i8, i8* %51, align 4
  %53 = lshr i16 %50, 7
  %54 = trunc i16 %53 to i8
  %55 = and i8 %54, 4
  %56 = and i8 %52, -5
  %57 = or i8 %55, %56
  store i8 %57, i8* %51, align 4
  br label %58

58:                                               ; preds = %17, %2, %47, %6, %11
  %59 = phi %struct.ssl_ctx_st* [ null, %2 ], [ null, %11 ], [ %1, %6 ], [ %48, %47 ], [ null, %17 ]
  ret %struct.ssl_ctx_st* %59
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @SSL_set_info_callback(%struct.ssl_st* nocapture, void (%struct.ssl_st*, i32, i32)*) local_unnamed_addr #10 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 15
  store void (%struct.ssl_st*, i32, i32)* %1, void (%struct.ssl_st*, i32, i32)** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden void (%struct.ssl_st*, i32, i32)* @SSL_get_info_callback(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 15
  %3 = load void (%struct.ssl_st*, i32, i32)*, void (%struct.ssl_st*, i32, i32)** %2, align 8
  ret void (%struct.ssl_st*, i32, i32)* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SSL_state(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %3 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 34, i32 0, i32 0, i32 0
  %5 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %4, align 8
  %6 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %5, i64 0, i32 46
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 32
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %7, %1
  br label %13

13:                                               ; preds = %7, %12
  %14 = phi i32 [ 3, %12 ], [ 12288, %7 ]
  ret i32 %14
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @SSL_set_state(%struct.ssl_st* nocapture, i32) local_unnamed_addr #9 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i8* @SSL_get_shared_ciphers(%struct.ssl_st* nocapture readnone, i8*, i32) local_unnamed_addr #10 {
  %4 = icmp slt i32 %2, 1
  br i1 %4, label %6, label %5

5:                                                ; preds = %3
  store i8 0, i8* %1, align 1
  br label %6

6:                                                ; preds = %3, %5
  %7 = phi i8* [ %1, %5 ], [ null, %3 ]
  ret i8* %7
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @SSL_get_shared_sigalgs(%struct.ssl_st* nocapture readnone, i32, i32* nocapture readnone, i32* nocapture readnone, i32* nocapture readnone, i8* nocapture readnone, i8* nocapture readnone) local_unnamed_addr #9 {
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @SSL_CTX_set_quic_method(%struct.ssl_ctx_st* nocapture, %struct.ssl_quic_method_st*) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 0
  %4 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %3, align 8
  %5 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %4, i64 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 6
  store %struct.ssl_quic_method_st* %1, %struct.ssl_quic_method_st** %9, align 8
  br label %10

10:                                               ; preds = %2, %8
  %11 = phi i32 [ 1, %8 ], [ 0, %2 ]
  ret i32 %11
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @SSL_set_quic_method(%struct.ssl_st* nocapture, %struct.ssl_quic_method_st*) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 0
  %4 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %3, align 8
  %5 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %4, i64 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 24
  store %struct.ssl_quic_method_st* %1, %struct.ssl_quic_method_st** %9, align 8
  br label %10

10:                                               ; preds = %2, %8
  %11 = phi i32 [ 1, %8 ], [ 0, %2 ]
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_get_ex_new_index(i64, i8*, i32* nocapture readnone, i32 (%struct.crypto_ex_data_st*, %struct.crypto_ex_data_st*, i8**, i32, i64, i8*)* nocapture readnone, void (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)*) local_unnamed_addr #0 {
  %6 = alloca i32, align 4
  %7 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #16
  store i32 -1431655766, i32* %6, align 4
  %8 = call i32 @CRYPTO_get_ex_new_index(%struct.CRYPTO_EX_DATA_CLASS* nonnull @_ZN4bsslL19g_ex_data_class_sslE, i32* nonnull %6, i64 %0, i8* %1, void (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)* %4) #16
  %9 = icmp eq i32 %8, 0
  %10 = load i32, i32* %6, align 4
  %11 = select i1 %9, i32 -1, i32 %10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #16
  ret i32 %11
}

declare i32 @CRYPTO_get_ex_new_index(%struct.CRYPTO_EX_DATA_CLASS*, i32*, i64, i8*, void (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_set_ex_data(%struct.ssl_st*, i32, i8*) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 18
  %5 = tail call i32 @CRYPTO_set_ex_data(%struct.crypto_ex_data_st* %4, i32 %1, i8* %2) #16
  ret i32 %5
}

declare i32 @CRYPTO_set_ex_data(%struct.crypto_ex_data_st*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i8* @SSL_get_ex_data(%struct.ssl_st*, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 18
  %4 = tail call i8* @CRYPTO_get_ex_data(%struct.crypto_ex_data_st* %3, i32 %1) #16
  ret i8* %4
}

declare i8* @CRYPTO_get_ex_data(%struct.crypto_ex_data_st*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_get_ex_new_index(i64, i8*, i32* nocapture readnone, i32 (%struct.crypto_ex_data_st*, %struct.crypto_ex_data_st*, i8**, i32, i64, i8*)* nocapture readnone, void (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)*) local_unnamed_addr #0 {
  %6 = alloca i32, align 4
  %7 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #16
  store i32 -1431655766, i32* %6, align 4
  %8 = call i32 @CRYPTO_get_ex_new_index(%struct.CRYPTO_EX_DATA_CLASS* nonnull @_ZN4bsslL23g_ex_data_class_ssl_ctxE, i32* nonnull %6, i64 %0, i8* %1, void (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)* %4) #16
  %9 = icmp eq i32 %8, 0
  %10 = load i32, i32* %6, align 4
  %11 = select i1 %9, i32 -1, i32 %10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #16
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_set_ex_data(%struct.ssl_ctx_st*, i32, i8*) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 29
  %5 = tail call i32 @CRYPTO_set_ex_data(%struct.crypto_ex_data_st* %4, i32 %1, i8* %2) #16
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @SSL_CTX_get_ex_data(%struct.ssl_ctx_st*, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 29
  %4 = tail call i8* @CRYPTO_get_ex_data(%struct.crypto_ex_data_st* %3, i32 %1) #16
  ret i8* %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SSL_want(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %3 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 16
  %5 = load i32, i32* %4, align 4
  ret i32 %5
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @SSL_CTX_set_tmp_rsa_callback(%struct.ssl_ctx_st* nocapture, %struct.rsa_st* (%struct.ssl_st*, i32, i32)* nocapture) local_unnamed_addr #9 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @SSL_set_tmp_rsa_callback(%struct.ssl_st* nocapture, %struct.rsa_st* (%struct.ssl_st*, i32, i32)* nocapture) local_unnamed_addr #9 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @SSL_CTX_set_tmp_dh_callback(%struct.ssl_ctx_st* nocapture, %struct.dh_st* (%struct.ssl_st*, i32, i32)* nocapture) local_unnamed_addr #9 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @SSL_set_tmp_dh_callback(%struct.ssl_st* nocapture, %struct.dh_st* (%struct.ssl_st*, i32, i32)* nocapture) local_unnamed_addr #9 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_use_psk_identity_hint(%struct.ssl_ctx_st* nocapture, i8*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 55
  %4 = tail call fastcc i32 @_ZL21use_psk_identity_hintPNSt3__110unique_ptrIcN4bssl8internal7DeleterIcEEEEPKc(%"class.std::__1::unique_ptr.29"* %3, i8* %1)
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZL21use_psk_identity_hintPNSt3__110unique_ptrIcN4bssl8internal7DeleterIcEEEEPKc(%"class.std::__1::unique_ptr.29"* nocapture, i8*) unnamed_addr #0 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %25, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @strlen(i8* nonnull %1) #17
  %6 = icmp ugt i64 %5, 128
  br i1 %6, label %7, label %8

7:                                                ; preds = %4
  tail call void @ERR_put_error(i32 16, i32 0, i32 136, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 2705) #16
  br label %31

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.29"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  store i8* null, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %8
  tail call void @OPENSSL_free(i8* nonnull %10) #16
  br label %13

13:                                               ; preds = %12, %8
  %14 = load i8, i8* %1, align 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %30, label %16

16:                                               ; preds = %13
  %17 = tail call i8* @OPENSSL_strdup(i8* nonnull %1) #16
  %18 = load i8*, i8** %9, align 8
  store i8* %17, i8** %9, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  tail call void @OPENSSL_free(i8* nonnull %18) #16
  %21 = load i8*, i8** %9, align 8
  br label %22

22:                                               ; preds = %16, %20
  %23 = phi i8* [ %17, %16 ], [ %21, %20 ]
  %24 = icmp eq i8* %23, null
  br i1 %24, label %31, label %30

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.29"* %0, i64 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  store i8* null, i8** %26, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %30, label %29

29:                                               ; preds = %25
  tail call void @OPENSSL_free(i8* nonnull %27) #16
  br label %30

30:                                               ; preds = %29, %25, %13, %22
  br label %31

31:                                               ; preds = %22, %30, %7
  %32 = phi i32 [ 0, %7 ], [ 1, %30 ], [ 0, %22 ]
  ret i32 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_use_psk_identity_hint(%struct.ssl_st* nocapture readonly, i8*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %5 = icmp eq %"struct.bssl::SSL_CONFIG"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %4, i64 0, i32 9
  %8 = tail call fastcc i32 @_ZL21use_psk_identity_hintPNSt3__110unique_ptrIcN4bssl8internal7DeleterIcEEEEPKc(%"class.std::__1::unique_ptr.29"* %7, i8* %1)
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ 0, %2 ]
  ret i32 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @SSL_get_psk_identity_hint(%struct.ssl_st* readonly) local_unnamed_addr #3 {
  %2 = icmp eq %struct.ssl_st* %0, null
  br i1 %2, label %10, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %4, align 8
  %6 = icmp eq %"struct.bssl::SSL_CONFIG"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %5, i64 0, i32 9, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  br label %10

10:                                               ; preds = %3, %1, %7
  %11 = phi i8* [ %9, %7 ], [ null, %1 ], [ null, %3 ]
  ret i8* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @SSL_get_psk_identity(%struct.ssl_st*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.ssl_st* %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = tail call %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st* nonnull %0) #16
  %5 = icmp eq %struct.ssl_session_st* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %4, i64 0, i32 10, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  br label %9

9:                                                ; preds = %6, %3, %1
  %10 = phi i8* [ null, %1 ], [ %8, %6 ], [ null, %3 ]
  ret i8* %10
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @SSL_set_psk_client_callback(%struct.ssl_st* nocapture readonly, i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)*) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %5 = icmp eq %"struct.bssl::SSL_CONFIG"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %4, i64 0, i32 10
  store i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)* %1, i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)** %7, align 8
  br label %8

8:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @SSL_CTX_set_psk_client_callback(%struct.ssl_ctx_st* nocapture, i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)*) local_unnamed_addr #10 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 56
  store i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)* %1, i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @SSL_set_psk_server_callback(%struct.ssl_st* nocapture readonly, i32 (%struct.ssl_st*, i8*, i8*, i32)*) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %5 = icmp eq %"struct.bssl::SSL_CONFIG"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %4, i64 0, i32 11
  store i32 (%struct.ssl_st*, i8*, i8*, i32)* %1, i32 (%struct.ssl_st*, i8*, i8*, i32)** %7, align 8
  br label %8

8:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @SSL_CTX_set_psk_server_callback(%struct.ssl_ctx_st* nocapture, i32 (%struct.ssl_st*, i8*, i8*, i32)*) local_unnamed_addr #10 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 57
  store i32 (%struct.ssl_st*, i8*, i8*, i32)* %1, i32 (%struct.ssl_st*, i8*, i8*, i32)** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @SSL_CTX_set_msg_callback(%struct.ssl_ctx_st* nocapture, void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)*) local_unnamed_addr #10 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 38
  store void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)* %1, void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @SSL_CTX_set_msg_callback_arg(%struct.ssl_ctx_st* nocapture, i8*) local_unnamed_addr #10 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 39
  store i8* %1, i8** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @SSL_set_msg_callback(%struct.ssl_st* nocapture, void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)*) local_unnamed_addr #10 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 10
  store void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)* %1, void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @SSL_set_msg_callback_arg(%struct.ssl_st* nocapture, i8*) local_unnamed_addr #10 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 11
  store i8* %1, i8** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @SSL_CTX_set_keylog_callback(%struct.ssl_ctx_st* nocapture, void (%struct.ssl_st*, i8*)*) local_unnamed_addr #10 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 70
  store void (%struct.ssl_st*, i8*)* %1, void (%struct.ssl_st*, i8*)** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden void (%struct.ssl_st*, i8*)* @SSL_CTX_get_keylog_callback(%struct.ssl_ctx_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 70
  %3 = load void (%struct.ssl_st*, i8*)*, void (%struct.ssl_st*, i8*)** %2, align 8
  ret void (%struct.ssl_st*, i8*)* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @SSL_CTX_set_current_time_cb(%struct.ssl_ctx_st* nocapture, void (%struct.ssl_st*, %struct.timeval*)*) local_unnamed_addr #10 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 71
  store void (%struct.ssl_st*, %struct.timeval*)* %1, void (%struct.ssl_st*, %struct.timeval*)** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_can_release_private_key(%struct.ssl_st*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %3 = load i8, i8* %2, align 4
  %4 = and i8 %3, 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %34

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 0
  %8 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %7, align 8
  %9 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %8, i64 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %34

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %14 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %13, align 8
  %15 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %14, i64 0, i32 23
  %16 = load i16, i16* %15, align 1
  %17 = and i16 %16, 2
  %18 = icmp eq i16 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %0) #16
  %21 = icmp ugt i16 %20, 771
  br i1 %21, label %34, label %22

22:                                               ; preds = %19, %12
  %23 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %24 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %23, align 8
  %25 = icmp eq %"struct.bssl::SSL_CONFIG"* %24, null
  br i1 %25, label %34, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 25
  %28 = load i32, i32* %27, align 8
  switch i32 %28, label %34 [
    i32 1, label %29
    i32 4, label %45
    i32 2, label %45
  ]

29:                                               ; preds = %26
  %30 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %13, align 8
  %31 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %30, i64 0, i32 15
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %45, label %34

34:                                               ; preds = %26, %22, %19, %1, %6, %29
  %35 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %36 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %35, align 8
  %37 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %36, i64 0, i32 34, i32 0, i32 0, i32 0
  %38 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %37, align 8
  %39 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %38, i64 0, i32 46
  %42 = load i32, i32* %41, align 8
  %43 = lshr i32 %42, 26
  %44 = and i32 %43, 1
  br label %45

45:                                               ; preds = %34, %26, %26, %40, %29
  %46 = phi i32 [ 0, %29 ], [ 1, %34 ], [ %44, %40 ], [ 0, %26 ], [ 0, %26 ]
  ret i32 %46
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SSL_is_init_finished(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %3 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 34, i32 0, i32 0, i32 0
  %5 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %4, align 8
  %6 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %5, i64 0, i32 46
  %9 = load i32, i32* %8, align 8
  %10 = lshr i32 %9, 5
  %11 = and i32 %10, 1
  br label %12

12:                                               ; preds = %1, %7
  %13 = phi i32 [ 1, %1 ], [ %11, %7 ]
  ret i32 %13
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SSL_in_false_start(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %3 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 34, i32 0, i32 0, i32 0
  %5 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %4, align 8
  %6 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %5, i64 0, i32 46
  %9 = load i32, i32* %8, align 8
  %10 = lshr i32 %9, 12
  %11 = and i32 %10, 1
  br label %12

12:                                               ; preds = %1, %7
  %13 = phi i32 [ %11, %7 ], [ 0, %1 ]
  ret i32 %13
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SSL_cutthrough_complete(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %3 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 34, i32 0, i32 0, i32 0
  %5 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %4, align 8
  %6 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %5, i64 0, i32 46
  %9 = load i32, i32* %8, align 8
  %10 = lshr i32 %9, 12
  %11 = and i32 %10, 1
  br label %12

12:                                               ; preds = %1, %7
  %13 = phi i32 [ %11, %7 ], [ 0, %1 ]
  ret i32 %13
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SSL_is_server(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %3 = load i8, i8* %2, align 4
  %4 = and i8 %3, 1
  %5 = zext i8 %4 to i32
  ret i32 %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @SSL_CTX_set_select_certificate_cb(%struct.ssl_ctx_st* nocapture, i32 (%struct.ssl_early_callback_ctx*)*) local_unnamed_addr #10 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 44
  store i32 (%struct.ssl_early_callback_ctx*)* %1, i32 (%struct.ssl_early_callback_ctx*)** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @SSL_CTX_set_dos_protection_cb(%struct.ssl_ctx_st* nocapture, i32 (%struct.ssl_early_callback_ctx*)*) local_unnamed_addr #10 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 45
  store i32 (%struct.ssl_early_callback_ctx*)* %1, i32 (%struct.ssl_early_callback_ctx*)** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @SSL_CTX_set_reverify_on_resume(%struct.ssl_ctx_st* nocapture, i32) local_unnamed_addr #10 {
  %3 = icmp ne i32 %1, 0
  %4 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 46
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @SSL_set_enforce_rsa_key_usage(%struct.ssl_st* nocapture readonly, i32) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %5 = icmp eq %"struct.bssl::SSL_CONFIG"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = icmp ne i32 %1, 0
  %8 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %4, i64 0, i32 23
  %9 = zext i1 %7 to i16
  %10 = load i16, i16* %8, align 1
  %11 = shl nuw nsw i16 %9, 4
  %12 = and i16 %10, -17
  %13 = or i16 %12, %11
  store i16 %13, i16* %8, align 1
  br label %14

14:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @SSL_set_renegotiate_mode(%struct.ssl_st*, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 25
  store i32 %1, i32* %3, align 8
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %5 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %4, align 8
  %6 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %5, i64 0, i32 34, i32 0, i32 0, i32 0
  %7 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %6, align 8
  %8 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %7, null
  br i1 %8, label %9, label %56

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %10, align 8
  %12 = icmp eq %"struct.bssl::SSL_CONFIG"* %11, null
  br i1 %12, label %56, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %11, i64 0, i32 23
  %15 = load i16, i16* %14, align 1
  %16 = trunc i16 %15 to i8
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %56

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %20 = load i8, i8* %19, align 4
  %21 = and i8 %20, 1
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %51

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 0
  %25 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %24, align 8
  %26 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %25, i64 0, i32 0
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %51

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %5, i64 0, i32 23
  %31 = load i16, i16* %30, align 1
  %32 = and i16 %31, 2
  %33 = icmp eq i16 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %29
  %35 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %0) #16
  %36 = icmp ugt i16 %35, 771
  %37 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %10, align 8
  br i1 %36, label %49, label %38

38:                                               ; preds = %34
  %39 = icmp eq %"struct.bssl::SSL_CONFIG"* %37, null
  br i1 %39, label %40, label %41

40:                                               ; preds = %38
  store %"struct.bssl::SSL_CONFIG"* null, %"struct.bssl::SSL_CONFIG"** %10, align 8
  br label %56

41:                                               ; preds = %29, %38
  %42 = phi %"struct.bssl::SSL_CONFIG"* [ %37, %38 ], [ %11, %29 ]
  %43 = load i32, i32* %3, align 8
  switch i32 %43, label %51 [
    i32 1, label %44
    i32 4, label %56
    i32 2, label %56
  ]

44:                                               ; preds = %41
  %45 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %4, align 8
  %46 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %45, i64 0, i32 15
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %56, label %51

49:                                               ; preds = %34
  store %"struct.bssl::SSL_CONFIG"* null, %"struct.bssl::SSL_CONFIG"** %10, align 8
  %50 = icmp eq %"struct.bssl::SSL_CONFIG"* %37, null
  br i1 %50, label %56, label %53

51:                                               ; preds = %44, %23, %18, %41
  %52 = phi %"struct.bssl::SSL_CONFIG"* [ %42, %41 ], [ %42, %44 ], [ %11, %23 ], [ %11, %18 ]
  store %"struct.bssl::SSL_CONFIG"* null, %"struct.bssl::SSL_CONFIG"** %10, align 8
  br label %53

53:                                               ; preds = %51, %49
  %54 = phi %"struct.bssl::SSL_CONFIG"* [ %37, %49 ], [ %52, %51 ]
  tail call void @_ZN4bssl10SSL_CONFIGD2Ev(%"struct.bssl::SSL_CONFIG"* nonnull %54) #16
  %55 = bitcast %"struct.bssl::SSL_CONFIG"* %54 to i8*
  tail call void @OPENSSL_free(i8* nonnull %55) #16
  br label %56

56:                                               ; preds = %40, %41, %41, %2, %9, %13, %44, %49, %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_get_ivs(%struct.ssl_st* nocapture readonly, i8**, i8**, i64*) local_unnamed_addr #0 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  store i64 -6148914691236517206, i64* %5, align 8
  %7 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %8 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %7, align 8
  %9 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %8, i64 0, i32 32, i32 0, i32 0, i32 0
  %10 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %9, align 8
  %11 = tail call zeroext i1 @_ZNK4bssl14SSLAEADContext5GetIVEPPKhPm(%"class.bssl::SSLAEADContext"* %10, i8** %1, i64* %3) #16
  br i1 %11, label %12, label %22

12:                                               ; preds = %4
  %13 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %7, align 8
  %14 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %13, i64 0, i32 33, i32 0, i32 0, i32 0
  %15 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %14, align 8
  %16 = call zeroext i1 @_ZNK4bssl14SSLAEADContext5GetIVEPPKhPm(%"class.bssl::SSLAEADContext"* %15, i8** %2, i64* nonnull %5) #16
  br i1 %16, label %17, label %22

17:                                               ; preds = %12
  %18 = load i64, i64* %3, align 8
  %19 = load i64, i64* %5, align 8
  %20 = icmp eq i64 %18, %19
  %21 = zext i1 %20 to i32
  br label %22

22:                                               ; preds = %17, %4, %12
  %23 = phi i32 [ 0, %12 ], [ 0, %4 ], [ %21, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  ret i32 %23
}

declare zeroext i1 @_ZNK4bssl14SSLAEADContext5GetIVEPPKhPm(%"class.bssl::SSLAEADContext"*, i8**, i64*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @SSL_get_read_sequence(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 0
  %3 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %2, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %3, i64 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 9
  %9 = load %"struct.bssl::DTLS1_STATE"*, %"struct.bssl::DTLS1_STATE"** %8, align 8
  %10 = getelementptr inbounds %"struct.bssl::DTLS1_STATE", %"struct.bssl::DTLS1_STATE"* %9, i64 0, i32 7, i32 1
  %11 = load i64, i64* %10, align 8
  br label %53

12:                                               ; preds = %1
  %13 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %14 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %13, align 8
  %15 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %14, i64 0, i32 0, i64 0
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = shl nuw i64 %17, 56
  %19 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %14, i64 0, i32 0, i64 1
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i64
  %22 = shl nuw nsw i64 %21, 48
  %23 = or i64 %22, %18
  %24 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %14, i64 0, i32 0, i64 2
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i64
  %27 = shl nuw nsw i64 %26, 40
  %28 = or i64 %23, %27
  %29 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %14, i64 0, i32 0, i64 3
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = shl nuw nsw i64 %31, 32
  %33 = or i64 %28, %32
  %34 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %14, i64 0, i32 0, i64 4
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i64
  %37 = shl nuw nsw i64 %36, 24
  %38 = or i64 %33, %37
  %39 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %14, i64 0, i32 0, i64 5
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i64
  %42 = shl nuw nsw i64 %41, 16
  %43 = or i64 %38, %42
  %44 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %14, i64 0, i32 0, i64 6
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i64
  %47 = shl nuw nsw i64 %46, 8
  %48 = or i64 %43, %47
  %49 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %14, i64 0, i32 0, i64 7
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i64
  %52 = or i64 %48, %51
  br label %53

53:                                               ; preds = %12, %7
  %54 = phi i64 [ %11, %7 ], [ %52, %12 ]
  ret i64 %54
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @SSL_get_write_sequence(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %3 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 1, i64 0
  %5 = load i8, i8* %4, align 1
  %6 = zext i8 %5 to i64
  %7 = shl nuw i64 %6, 56
  %8 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 1, i64 1
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i64
  %11 = shl nuw nsw i64 %10, 48
  %12 = or i64 %11, %7
  %13 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 1, i64 2
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i64
  %16 = shl nuw nsw i64 %15, 40
  %17 = or i64 %12, %16
  %18 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 1, i64 3
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i64
  %21 = shl nuw nsw i64 %20, 32
  %22 = or i64 %17, %21
  %23 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 1, i64 4
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i64
  %26 = shl nuw nsw i64 %25, 24
  %27 = or i64 %22, %26
  %28 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 1, i64 5
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i64
  %31 = shl nuw nsw i64 %30, 16
  %32 = or i64 %27, %31
  %33 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 1, i64 6
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i64
  %36 = shl nuw nsw i64 %35, 8
  %37 = or i64 %32, %36
  %38 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 1, i64 7
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i64
  %41 = or i64 %37, %40
  %42 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 0
  %43 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %42, align 8
  %44 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %43, i64 0, i32 0
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %1
  %48 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 9
  %49 = load %"struct.bssl::DTLS1_STATE"*, %"struct.bssl::DTLS1_STATE"** %48, align 8
  %50 = getelementptr inbounds %"struct.bssl::DTLS1_STATE", %"struct.bssl::DTLS1_STATE"* %49, i64 0, i32 5
  %51 = load i16, i16* %50, align 2
  %52 = zext i16 %51 to i64
  %53 = shl nuw i64 %52, 48
  %54 = or i64 %53, %41
  br label %55

55:                                               ; preds = %1, %47
  %56 = phi i64 [ %54, %47 ], [ %41, %1 ]
  ret i64 %56
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @SSL_get_peer_signature_algorithm(%struct.ssl_st*) local_unnamed_addr #0 {
  %2 = tail call %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st* %0) #16
  %3 = icmp eq %struct.ssl_session_st* %2, null
  br i1 %3, label %7, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %2, i64 0, i32 3
  %6 = load i16, i16* %5, align 8
  br label %7

7:                                                ; preds = %1, %4
  %8 = phi i16 [ %6, %4 ], [ 0, %1 ]
  ret i16 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @SSL_get_client_random(%struct.ssl_st* nocapture readonly, i8* nocapture, i64) local_unnamed_addr #0 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 32
  %7 = select i1 %6, i64 %2, i64 32
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %11 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %10, align 8
  %12 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %11, i64 0, i32 3, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %12, i64 %7, i1 false) #16
  br label %13

13:                                               ; preds = %9, %5, %3
  %14 = phi i64 [ 32, %3 ], [ 0, %5 ], [ %7, %9 ]
  ret i64 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @SSL_get_server_random(%struct.ssl_st* nocapture readonly, i8* nocapture, i64) local_unnamed_addr #0 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 32
  %7 = select i1 %6, i64 %2, i64 32
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %11 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %10, align 8
  %12 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %11, i64 0, i32 2, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %12, i64 %7, i1 false) #16
  br label %13

13:                                               ; preds = %9, %5, %3
  %14 = phi i64 [ 32, %3 ], [ 0, %5 ], [ %7, %9 ]
  ret i64 %14
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.ssl_cipher_st* @SSL_get_pending_cipher(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %3 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 34, i32 0, i32 0, i32 0
  %5 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %4, align 8
  %6 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %5, i64 0, i32 43
  %9 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %8, align 8
  br label %10

10:                                               ; preds = %1, %7
  %11 = phi %struct.ssl_cipher_st* [ %9, %7 ], [ null, %1 ]
  ret %struct.ssl_cipher_st* %11
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @SSL_set_retain_only_sha256_of_client_certs(%struct.ssl_st* nocapture readonly, i32) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %5 = icmp eq %"struct.bssl::SSL_CONFIG"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = icmp ne i32 %1, 0
  %8 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %4, i64 0, i32 23
  %9 = zext i1 %7 to i16
  %10 = load i16, i16* %8, align 1
  %11 = shl nuw nsw i16 %9, 5
  %12 = and i16 %10, -33
  %13 = or i16 %12, %11
  store i16 %13, i16* %8, align 1
  br label %14

14:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @SSL_CTX_set_retain_only_sha256_of_client_certs(%struct.ssl_ctx_st* nocapture, i32) local_unnamed_addr #6 {
  %3 = icmp ne i32 %1, 0
  %4 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 77
  %5 = zext i1 %3 to i16
  %6 = load i16, i16* %4, align 8
  %7 = and i16 %6, -2
  %8 = or i16 %7, %5
  store i16 %8, i16* %4, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @SSL_CTX_set_grease_enabled(%struct.ssl_ctx_st* nocapture, i32) local_unnamed_addr #6 {
  %3 = icmp ne i32 %1, 0
  %4 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 77
  %5 = zext i1 %3 to i16
  %6 = load i16, i16* %4, align 8
  %7 = shl nuw nsw i16 %5, 5
  %8 = and i16 %6, -33
  %9 = or i16 %8, %7
  store i16 %9, i16* %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SSL_get_ticket_age_skew(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %3 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 29
  %5 = load i32, i32* %4, align 4
  ret i32 %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @SSL_CTX_set_false_start_allowed_without_alpn(%struct.ssl_ctx_st* nocapture, i32) local_unnamed_addr #6 {
  %3 = icmp ne i32 %1, 0
  %4 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 77
  %5 = zext i1 %3 to i16
  %6 = load i16, i16* %4, align 8
  %7 = shl nuw nsw i16 %5, 7
  %8 = and i16 %6, -129
  %9 = or i16 %8, %7
  store i16 %9, i16* %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SSL_used_hello_retry_request(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %3 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 23
  %5 = load i16, i16* %4, align 1
  %6 = lshr i16 %5, 15
  %7 = zext i16 %6 to i32
  ret i32 %7
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @SSL_set_shed_handshake_config(%struct.ssl_st* nocapture readonly, i32) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %5 = icmp eq %"struct.bssl::SSL_CONFIG"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = icmp ne i32 %1, 0
  %8 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %4, i64 0, i32 23
  %9 = zext i1 %7 to i16
  %10 = load i16, i16* %8, align 1
  %11 = shl nuw nsw i16 %9, 7
  %12 = and i16 %10, -129
  %13 = or i16 %12, %11
  store i16 %13, i16* %8, align 1
  br label %14

14:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @SSL_set_jdk11_workaround(%struct.ssl_st* nocapture readonly, i32) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %5 = icmp eq %"struct.bssl::SSL_CONFIG"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = icmp ne i32 %1, 0
  %8 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %4, i64 0, i32 23
  %9 = zext i1 %7 to i16
  %10 = load i16, i16* %8, align 1
  %11 = shl nuw nsw i16 %9, 8
  %12 = and i16 %10, -257
  %13 = or i16 %12, %11
  store i16 %13, i16* %8, align 1
  br label %14

14:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @SSL_set_quic_use_legacy_codepoint(%struct.ssl_st* nocapture readonly, i32) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %5 = icmp eq %"struct.bssl::SSL_CONFIG"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = icmp ne i32 %1, 0
  %8 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %4, i64 0, i32 23
  %9 = zext i1 %7 to i16
  %10 = load i16, i16* %8, align 1
  %11 = shl nuw nsw i16 %9, 9
  %12 = and i16 %10, -513
  %13 = or i16 %12, %11
  store i16 %13, i16* %8, align 1
  br label %14

14:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_clear(%struct.ssl_st*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %2, align 8
  %4 = icmp eq %"struct.bssl::SSL_CONFIG"* %3, null
  br i1 %4, label %58, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %7 = load i8, i8* %6, align 4
  %8 = and i8 %7, 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %18

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %12 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %11, align 8
  %13 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %12, i64 0, i32 47, i32 0, i32 0, i32 0
  %14 = load %struct.ssl_session_st*, %struct.ssl_session_st** %13, align 8
  %15 = icmp eq %struct.ssl_session_st* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %10
  %17 = tail call i32 @SSL_SESSION_up_ref(%struct.ssl_session_st* nonnull %14) #16
  br label %18

18:                                               ; preds = %10, %5, %16
  %19 = phi %struct.ssl_session_st* [ %14, %16 ], [ null, %10 ], [ null, %5 ]
  %20 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 9
  %21 = load %"struct.bssl::DTLS1_STATE"*, %"struct.bssl::DTLS1_STATE"** %20, align 8
  %22 = icmp eq %"struct.bssl::DTLS1_STATE"* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.bssl::DTLS1_STATE", %"struct.bssl::DTLS1_STATE"* %21, i64 0, i32 19
  %25 = load i32, i32* %24, align 8
  br label %26

26:                                               ; preds = %18, %23
  %27 = phi i32 [ %25, %23 ], [ 0, %18 ]
  %28 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 0
  %29 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %28, align 8
  %30 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %29, i64 0, i32 2
  %31 = bitcast {}** %30 to void (%struct.ssl_st*)**
  %32 = load void (%struct.ssl_st*)*, void (%struct.ssl_st*)** %31, align 8
  tail call void %32(%struct.ssl_st* %0) #16
  %33 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %28, align 8
  %34 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %33, i64 0, i32 1
  %35 = load i1 (%struct.ssl_st*)*, i1 (%struct.ssl_st*)** %34, align 8
  %36 = tail call zeroext i1 %35(%struct.ssl_st* %0) #16
  br i1 %36, label %37, label %54

37:                                               ; preds = %26
  %38 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %28, align 8
  %39 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %38, i64 0, i32 0
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %50, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 19
  %44 = load i32, i32* %43, align 8
  %45 = and i32 %44, 4096
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %42
  %48 = load %"struct.bssl::DTLS1_STATE"*, %"struct.bssl::DTLS1_STATE"** %20, align 8
  %49 = getelementptr inbounds %"struct.bssl::DTLS1_STATE", %"struct.bssl::DTLS1_STATE"* %48, i64 0, i32 19
  store i32 %27, i32* %49, align 8
  br label %50

50:                                               ; preds = %42, %37, %47
  %51 = icmp eq %struct.ssl_session_st* %19, null
  br i1 %51, label %58, label %52

52:                                               ; preds = %50
  %53 = tail call i32 @SSL_set_session(%struct.ssl_st* %0, %struct.ssl_session_st* nonnull %19) #16
  br label %56

54:                                               ; preds = %26
  %55 = icmp eq %struct.ssl_session_st* %19, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %52, %54
  %57 = phi i32 [ 1, %52 ], [ 0, %54 ]
  tail call void @SSL_SESSION_free(%struct.ssl_session_st* nonnull %19) #16
  br label %58

58:                                               ; preds = %50, %1, %56, %54
  %59 = phi i32 [ 0, %1 ], [ 0, %54 ], [ %57, %56 ], [ 1, %50 ]
  ret i32 %59
}

declare i32 @SSL_set_session(%struct.ssl_st*, %struct.ssl_session_st*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @SSL_CTX_sess_connect(%struct.ssl_ctx_st* nocapture readnone) local_unnamed_addr #9 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @SSL_CTX_sess_connect_good(%struct.ssl_ctx_st* nocapture readnone) local_unnamed_addr #9 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @SSL_CTX_sess_connect_renegotiate(%struct.ssl_ctx_st* nocapture readnone) local_unnamed_addr #9 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @SSL_CTX_sess_accept(%struct.ssl_ctx_st* nocapture readnone) local_unnamed_addr #9 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @SSL_CTX_sess_accept_renegotiate(%struct.ssl_ctx_st* nocapture readnone) local_unnamed_addr #9 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @SSL_CTX_sess_accept_good(%struct.ssl_ctx_st* nocapture readnone) local_unnamed_addr #9 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @SSL_CTX_sess_hits(%struct.ssl_ctx_st* nocapture readnone) local_unnamed_addr #9 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @SSL_CTX_sess_cb_hits(%struct.ssl_ctx_st* nocapture readnone) local_unnamed_addr #9 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @SSL_CTX_sess_misses(%struct.ssl_ctx_st* nocapture readnone) local_unnamed_addr #9 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @SSL_CTX_sess_timeouts(%struct.ssl_ctx_st* nocapture readnone) local_unnamed_addr #9 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @SSL_CTX_sess_cache_full(%struct.ssl_ctx_st* nocapture readnone) local_unnamed_addr #9 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SSL_num_renegotiations(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %3 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 15
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @SSL_CTX_need_tmp_RSA(%struct.ssl_ctx_st* nocapture readnone) local_unnamed_addr #9 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @SSL_need_tmp_RSA(%struct.ssl_st* nocapture readnone) local_unnamed_addr #9 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @SSL_CTX_set_tmp_rsa(%struct.ssl_ctx_st* nocapture readnone, %struct.rsa_st* nocapture readnone) local_unnamed_addr #9 {
  ret i32 1
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @SSL_set_tmp_rsa(%struct.ssl_st* nocapture readnone, %struct.rsa_st* nocapture readnone) local_unnamed_addr #9 {
  ret i32 1
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @ERR_load_SSL_strings() local_unnamed_addr #9 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @SSL_load_error_strings() local_unnamed_addr #9 {
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SSL_cache_hit(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %3 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 23
  %5 = load i16, i16* %4, align 1
  %6 = and i16 %5, 64
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %8, label %17

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 34, i32 0, i32 0, i32 0
  %10 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %9, align 8
  %11 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %10, i64 0, i32 46
  %14 = load i32, i32* %13, align 8
  %15 = lshr i32 %14, 13
  %16 = and i32 %15, 1
  br label %17

17:                                               ; preds = %1, %8, %12
  %18 = phi i32 [ 1, %1 ], [ %16, %12 ], [ 0, %8 ]
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_CTX_set_tmp_ecdh(%struct.ssl_ctx_st*, %struct.ec_key_st*) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = icmp eq %struct.ec_key_st* %1, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %2
  %6 = tail call %struct.ec_group_st* @EC_KEY_get0_group(%struct.ec_key_st* nonnull %1) #16
  %7 = icmp eq %struct.ec_group_st* %6, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %5, %2
  tail call void @ERR_put_error(i32 16, i32 0, i32 67, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 3089) #16
  br label %16

9:                                                ; preds = %5
  %10 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #16
  %11 = tail call %struct.ec_group_st* @EC_KEY_get0_group(%struct.ec_key_st* nonnull %1) #16
  %12 = tail call i32 @EC_GROUP_get_curve_name(%struct.ec_group_st* %11) #16
  store i32 %12, i32* %3, align 4
  %13 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 67
  %14 = call zeroext i1 @_ZN4bssl15tls1_set_curvesEPNS_5ArrayItEENS_4SpanIKiEE(%"class.bssl::Array.56"* %13, i32* nonnull %3, i64 1) #16
  %15 = zext i1 %14 to i32
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #16
  br label %16

16:                                               ; preds = %9, %8
  %17 = phi i32 [ 0, %8 ], [ %15, %9 ]
  ret i32 %17
}

declare %struct.ec_group_st* @EC_KEY_get0_group(%struct.ec_key_st*) local_unnamed_addr #2

declare i32 @EC_GROUP_get_curve_name(%struct.ec_group_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_set_tmp_ecdh(%struct.ssl_st* nocapture readonly, %struct.ec_key_st*) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = icmp eq %struct.ec_key_st* %1, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %2
  %6 = tail call %struct.ec_group_st* @EC_KEY_get0_group(%struct.ec_key_st* nonnull %1) #16
  %7 = icmp eq %struct.ec_group_st* %6, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %5, %2
  tail call void @ERR_put_error(i32 16, i32 0, i32 67, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 3098) #16
  br label %22

9:                                                ; preds = %5
  %10 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #16
  %11 = tail call %struct.ec_group_st* @EC_KEY_get0_group(%struct.ec_key_st* nonnull %1) #16
  %12 = tail call i32 @EC_GROUP_get_curve_name(%struct.ec_group_st* %11) #16
  store i32 %12, i32* %3, align 4
  %13 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %13, align 8
  %15 = icmp eq %"struct.bssl::SSL_CONFIG"* %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %14, i64 0, i32 14
  %18 = call zeroext i1 @_ZN4bssl15tls1_set_curvesEPNS_5ArrayItEENS_4SpanIKiEE(%"class.bssl::Array.56"* %17, i32* nonnull %3, i64 1) #16
  %19 = zext i1 %18 to i32
  br label %20

20:                                               ; preds = %9, %16
  %21 = phi i32 [ %19, %16 ], [ 0, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #16
  br label %22

22:                                               ; preds = %20, %8
  %23 = phi i32 [ 0, %8 ], [ %21, %20 ]
  ret i32 %23
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @SSL_CTX_set_ticket_aead_method(%struct.ssl_ctx_st* nocapture, %struct.ssl_ticket_aead_method_st*) local_unnamed_addr #10 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 73
  store %struct.ssl_ticket_aead_method_st* %1, %struct.ssl_ticket_aead_method_st** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.ssl_session_st* @SSL_process_tls13_new_session_ticket(%struct.ssl_st*, i8*, i64) local_unnamed_addr #0 {
  %4 = alloca %struct.cbs_st, align 8
  %5 = alloca %struct.cbs_st, align 8
  %6 = alloca i8, align 1
  %7 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %8 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %7, align 8
  %9 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %8, i64 0, i32 34, i32 0, i32 0, i32 0
  %10 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %9, align 8
  %11 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %10, i64 0, i32 46
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 32
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %25, label %17

17:                                               ; preds = %12, %3
  %18 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %0) #16
  %19 = icmp eq i16 %18, 772
  br i1 %19, label %20, label %25

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %22 = load i8, i8* %21, align 4
  %23 = and i8 %22, 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %26, label %25

25:                                               ; preds = %12, %20, %17
  tail call void @ERR_put_error(i32 16, i32 0, i32 66, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 3116) #16
  br label %44

26:                                               ; preds = %20
  %27 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #16
  %28 = bitcast %struct.cbs_st* %5 to i8*
  %29 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #16
  %30 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 16, i1 false)
  call void @CBS_init(%struct.cbs_st* nonnull %4, i8* %1, i64 %2) #16
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #16
  store i8 -86, i8* %6, align 1
  %31 = call i32 @CBS_get_u8(%struct.cbs_st* nonnull %4, i8* nonnull %6) #16
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %26
  %34 = call i32 @CBS_get_u24_length_prefixed(%struct.cbs_st* nonnull %4, %struct.cbs_st* nonnull %5) #16
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %33
  %37 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #16
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %40, label %39

39:                                               ; preds = %36, %33, %26
  call void @ERR_put_error(i32 16, i32 0, i32 137, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 3126) #16
  br label %42

40:                                               ; preds = %36
  %41 = call %struct.ssl_session_st* @_ZN4bssl32tls13_create_session_with_ticketEP6ssl_stP6cbs_st(%struct.ssl_st* %0, %struct.cbs_st* nonnull %5) #16
  br label %42

42:                                               ; preds = %40, %39
  %43 = phi %struct.ssl_session_st* [ null, %39 ], [ %41, %40 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #16
  br label %44

44:                                               ; preds = %42, %25
  %45 = phi %struct.ssl_session_st* [ null, %25 ], [ %43, %42 ]
  ret %struct.ssl_session_st* %45
}

declare void @CBS_init(%struct.cbs_st*, i8*, i64) local_unnamed_addr #2

declare i32 @CBS_get_u8(%struct.cbs_st*, i8*) local_unnamed_addr #2

declare i32 @CBS_get_u24_length_prefixed(%struct.cbs_st*, %struct.cbs_st*) local_unnamed_addr #2

declare i64 @CBS_len(%struct.cbs_st*) local_unnamed_addr #2

declare %struct.ssl_session_st* @_ZN4bssl32tls13_create_session_with_ticketEP6ssl_stP6cbs_st(%struct.ssl_st*, %struct.cbs_st*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @SSL_set_tlsext_status_type(%struct.ssl_st* nocapture readonly, i32) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %3, align 8
  %5 = icmp eq %"struct.bssl::SSL_CONFIG"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 1
  %8 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %4, i64 0, i32 23
  %9 = zext i1 %7 to i16
  %10 = load i16, i16* %8, align 1
  %11 = shl nuw nsw i16 %9, 2
  %12 = and i16 %10, -5
  %13 = or i16 %12, %11
  store i16 %13, i16* %8, align 1
  br label %14

14:                                               ; preds = %2, %6
  %15 = phi i32 [ 1, %6 ], [ 0, %2 ]
  ret i32 %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SSL_get_tlsext_status_type(%struct.ssl_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %3 = load i8, i8* %2, align 4
  %4 = and i8 %3, 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %8 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %7, align 8
  %9 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %8, i64 0, i32 34, i32 0, i32 0, i32 0
  %10 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %9, align 8
  %11 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %10, null
  br i1 %11, label %28, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %10, i64 0, i32 46
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 512
  %16 = icmp eq i32 %15, 0
  %17 = select i1 %16, i32 -1, i32 1
  br label %28

18:                                               ; preds = %1
  %19 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %19, align 8
  %21 = icmp eq %"struct.bssl::SSL_CONFIG"* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %20, i64 0, i32 23
  %24 = load i16, i16* %23, align 1
  %25 = and i16 %24, 4
  %26 = icmp eq i16 %25, 0
  %27 = select i1 %26, i32 -1, i32 1
  br label %28

28:                                               ; preds = %18, %22, %12, %6
  %29 = phi i32 [ -1, %6 ], [ %17, %12 ], [ -1, %18 ], [ %27, %22 ]
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @SSL_set_tlsext_status_ocsp_resp(%struct.ssl_st*, i8*, i64) local_unnamed_addr #0 {
  %4 = tail call i32 @SSL_set_ocsp_response(%struct.ssl_st* %0, i8* %1, i64 %2) #16
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void @OPENSSL_free(i8* %1) #16
  br label %7

7:                                                ; preds = %3, %6
  %8 = phi i32 [ 1, %6 ], [ 0, %3 ]
  ret i32 %8
}

declare i32 @SSL_set_ocsp_response(%struct.ssl_st*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @SSL_get_tlsext_status_ocsp_resp(%struct.ssl_st*, i8** nocapture) local_unnamed_addr #0 {
  %3 = tail call %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st* %0) #16
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %5 = load i8, i8* %4, align 4
  %6 = and i8 %5, 1
  %7 = icmp eq i8 %6, 0
  %8 = icmp ne %struct.ssl_session_st* %3, null
  %9 = and i1 %8, %7
  br i1 %9, label %10, label %14

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %3, i64 0, i32 26, i32 0, i32 0, i32 0
  %12 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %11, align 8
  %13 = icmp eq %struct.crypto_buffer_st* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %10, %2
  store i8* null, i8** %1, align 8
  br label %19

15:                                               ; preds = %10
  %16 = tail call i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st* nonnull %12) #16
  store i8* %16, i8** %1, align 8
  %17 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %11, align 8
  %18 = tail call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %17) #16
  br label %19

19:                                               ; preds = %14, %15
  %20 = phi i64 [ 0, %14 ], [ %18, %15 ]
  ret i64 %20
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @SSL_CTX_set_tlsext_status_cb(%struct.ssl_ctx_st* nocapture, i32 (%struct.ssl_st*, i8*)*) local_unnamed_addr #10 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 74
  store i32 (%struct.ssl_st*, i8*)* %1, i32 (%struct.ssl_st*, i8*)** %3, align 8
  ret i32 1
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @SSL_CTX_set_tlsext_status_arg(%struct.ssl_ctx_st* nocapture, i8*) local_unnamed_addr #10 {
  %3 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %0, i64 0, i32 75
  store i8* %1, i8** %3, align 8
  ret i32 1
}

declare i32 @SSL_SESSION_up_ref(%struct.ssl_session_st*) local_unnamed_addr #2

declare i32 @CBB_add_space(%struct.cbb_st*, i8**, i64) local_unnamed_addr #2

declare void @lh_free(%struct.lhash_st*) local_unnamed_addr #2

declare %struct.lhash_st* @lh_new(i32 (i8*)*, i32 (i8*, i8*)*) local_unnamed_addr #2

declare i32 @_ZN4bssl19ssl_hash_session_idENS_4SpanIKhEE(i8*, i64) local_unnamed_addr #2

declare %struct.stack_st* @sk_new_null() local_unnamed_addr #2

declare zeroext i1 @_ZN4bssl20tls13_post_handshakeEP6ssl_stRKNS_10SSLMessageE(%struct.ssl_st*, %"struct.bssl::SSLMessage"* dereferenceable(40)) local_unnamed_addr #2

declare void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st*, i32, i32) local_unnamed_addr #2

declare i32 @_ZN4bssl22ssl_handle_open_recordEP6ssl_stPbNS_17ssl_open_record_tEmh(%struct.ssl_st*, i8*, i32, i64, i8 zeroext) local_unnamed_addr #2

declare i64 @lh_num_items(%struct.lhash_st*) local_unnamed_addr #2

declare i64 @sk_num(%struct.stack_st*) local_unnamed_addr #2

declare i8* @sk_value(%struct.stack_st*, i64) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #12

declare %struct.ec_key_st* @EVP_PKEY_get0_EC_KEY(%struct.evp_pkey_st*) local_unnamed_addr #2

declare i32 @EVP_PKEY_up_ref(%struct.evp_pkey_st*) local_unnamed_addr #2

declare void @EVP_PKEY_free(%struct.evp_pkey_st*) local_unnamed_addr #2

declare void @ERR_SAVE_STATE_free(%struct.err_save_state_st*) local_unnamed_addr #2

declare void @CBB_zero(%struct.cbb_st*) local_unnamed_addr #2

declare void @CBB_cleanup(%struct.cbb_st*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4bssl23SSLCipherPreferenceListD1Ev(%"struct.bssl::SSLCipherPreferenceList"*) unnamed_addr #13

; Function Attrs: nounwind
declare void @_ZN4bssl4CERTD1Ev(%"struct.bssl::CERT"*) unnamed_addr #13

declare void @sk_free(%struct.stack_st*) local_unnamed_addr #2

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #2

declare void @_ZN4bssl4CERTC1EPKNS_15SSL_X509_METHODE(%"struct.bssl::CERT"*, %"struct.bssl::SSL_X509_METHOD"*) unnamed_addr #2

declare void @sk_pop_free_ex(%struct.stack_st*, void (void (i8*)*, i8*)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN4bssl8internal11DeleterImplI22stack_st_CRYPTO_BUFFERvE4FreeEPS2_ENUlPFvPvES5_E_8__invokeES7_S5_(void (i8*)*, i8*) #14 comdat align 2 {
  %3 = bitcast i8* %1 to %struct.crypto_buffer_st*
  tail call void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st* %3) #16
  ret void
}

declare void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st*) local_unnamed_addr #2

declare i32 @BIO_free(%struct.bio_st*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4bssl13SSL_HANDSHAKED1Ev(%"struct.bssl::SSL_HANDSHAKE"*) unnamed_addr #13

declare void @SSL_SESSION_free(%struct.ssl_session_st*) local_unnamed_addr #2

declare void @CRYPTO_MUTEX_lock_read(%union.crypto_mutex_st*) local_unnamed_addr #2

declare void @CRYPTO_MUTEX_unlock_read(%union.crypto_mutex_st*) local_unnamed_addr #2

declare void @EVP_HPKE_KEY_zero(%struct.evp_hpke_key_st*) local_unnamed_addr #2

declare void @EVP_HPKE_KEY_cleanup(%struct.evp_hpke_key_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4bssl13GrowableArrayINSt3__110unique_ptrINS_15ECHServerConfigENS_8internal7DeleterIS3_EEEEE9MaybeGrowEv(%"class.bssl::GrowableArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.bssl::Array.66"*
  %4 = getelementptr inbounds %"class.bssl::GrowableArray", %"class.bssl::GrowableArray"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.bssl::GrowableArray", %"class.bssl::GrowableArray"* %0, i64 0, i32 1, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = tail call zeroext i1 @_ZN4bssl5ArrayINSt3__110unique_ptrINS_15ECHServerConfigENS_8internal7DeleterIS3_EEEEE4InitEm(%"class.bssl::Array.66"* %4, i64 16)
  br label %95

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.bssl::GrowableArray", %"class.bssl::GrowableArray"* %0, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ult i64 %12, %6
  br i1 %13, label %95, label %14

14:                                               ; preds = %10
  %15 = icmp slt i64 %6, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %14
  tail call void @ERR_put_error(i32 16, i32 0, i32 69, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.36, i64 0, i64 0), i32 435) #16
  br label %95

17:                                               ; preds = %14
  %18 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #16
  %19 = bitcast <2 x i64>* %2 to %"class.std::__1::unique_ptr.67"**
  %20 = getelementptr inbounds %"class.bssl::Array.66", %"class.bssl::Array.66"* %3, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %18, i8 0, i64 16, i1 false) #16
  %21 = shl i64 %6, 1
  %22 = call zeroext i1 @_ZN4bssl5ArrayINSt3__110unique_ptrINS_15ECHServerConfigENS_8internal7DeleterIS3_EEEEE4InitEm(%"class.bssl::Array.66"* nonnull %3, i64 %21)
  br i1 %22, label %23, label %73

23:                                               ; preds = %17
  %24 = load i64, i64* %5, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %46, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.bssl::Array.66", %"class.bssl::Array.66"* %4, i64 0, i32 0
  br label %51

28:                                               ; preds = %69
  %29 = icmp eq i64 %71, 0
  %30 = getelementptr inbounds %"class.bssl::Array.66", %"class.bssl::Array.66"* %4, i64 0, i32 0
  br i1 %29, label %46, label %31

31:                                               ; preds = %28, %42
  %32 = phi i64 [ %43, %42 ], [ 0, %28 ]
  %33 = load %"class.std::__1::unique_ptr.67"*, %"class.std::__1::unique_ptr.67"** %30, align 8
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67"* %33, i64 %32, i32 0, i32 0, i32 0
  %35 = load %"class.bssl::ECHServerConfig"*, %"class.bssl::ECHServerConfig"** %34, align 8
  store %"class.bssl::ECHServerConfig"* null, %"class.bssl::ECHServerConfig"** %34, align 8
  %36 = icmp eq %"class.bssl::ECHServerConfig"* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.bssl::ECHServerConfig", %"class.bssl::ECHServerConfig"* %35, i64 0, i32 2, i32 0
  call void @EVP_HPKE_KEY_cleanup(%struct.evp_hpke_key_st* %38) #16
  %39 = getelementptr inbounds %"class.bssl::ECHServerConfig", %"class.bssl::ECHServerConfig"* %35, i64 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  call void @OPENSSL_free(i8* %40) #16
  %41 = bitcast %"class.bssl::ECHServerConfig"* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 0, i64 16, i1 false) #16
  call void @OPENSSL_free(i8* nonnull %41) #16
  br label %42

42:                                               ; preds = %37, %31
  %43 = add nuw i64 %32, 1
  %44 = load i64, i64* %5, align 8
  %45 = icmp ult i64 %43, %44
  br i1 %45, label %31, label %46

46:                                               ; preds = %42, %28, %23
  %47 = bitcast %"class.bssl::Array.66"* %4 to i8**
  %48 = load i8*, i8** %47, align 8
  call void @OPENSSL_free(i8* %48) #16
  %49 = load <2 x i64>, <2 x i64>* %2, align 16
  %50 = bitcast %"class.bssl::Array.66"* %4 to <2 x i64>*
  store <2 x i64> %49, <2 x i64>* %50, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %18, i8 0, i64 16, i1 false) #16
  br label %91

51:                                               ; preds = %26, %69
  %52 = phi i64 [ 0, %26 ], [ %70, %69 ]
  %53 = load %"class.std::__1::unique_ptr.67"*, %"class.std::__1::unique_ptr.67"** %27, align 8
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67"* %53, i64 %52
  %55 = load %"class.std::__1::unique_ptr.67"*, %"class.std::__1::unique_ptr.67"** %19, align 16
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67"* %55, i64 %52
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67"* %54, i64 0, i32 0, i32 0, i32 0
  %58 = bitcast %"class.std::__1::unique_ptr.67"* %54 to i64*
  %59 = load i64, i64* %58, align 8
  store %"class.bssl::ECHServerConfig"* null, %"class.bssl::ECHServerConfig"** %57, align 8
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67"* %56, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.bssl::ECHServerConfig"*, %"class.bssl::ECHServerConfig"** %60, align 8
  %62 = bitcast %"class.std::__1::unique_ptr.67"* %56 to i64*
  store i64 %59, i64* %62, align 8
  %63 = icmp eq %"class.bssl::ECHServerConfig"* %61, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %51
  %65 = getelementptr inbounds %"class.bssl::ECHServerConfig", %"class.bssl::ECHServerConfig"* %61, i64 0, i32 2, i32 0
  call void @EVP_HPKE_KEY_cleanup(%struct.evp_hpke_key_st* %65) #16
  %66 = getelementptr inbounds %"class.bssl::ECHServerConfig", %"class.bssl::ECHServerConfig"* %61, i64 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  call void @OPENSSL_free(i8* %67) #16
  %68 = bitcast %"class.bssl::ECHServerConfig"* %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 0, i64 16, i1 false) #16
  call void @OPENSSL_free(i8* nonnull %68) #16
  br label %69

69:                                               ; preds = %51, %64
  %70 = add nuw i64 %52, 1
  %71 = load i64, i64* %5, align 8
  %72 = icmp ult i64 %70, %71
  br i1 %72, label %51, label %28

73:                                               ; preds = %17
  %74 = load i64, i64* %20, align 8
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %91, label %76

76:                                               ; preds = %73, %87
  %77 = phi i64 [ %88, %87 ], [ 0, %73 ]
  %78 = load %"class.std::__1::unique_ptr.67"*, %"class.std::__1::unique_ptr.67"** %19, align 16
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67"* %78, i64 %77, i32 0, i32 0, i32 0
  %80 = load %"class.bssl::ECHServerConfig"*, %"class.bssl::ECHServerConfig"** %79, align 8
  store %"class.bssl::ECHServerConfig"* null, %"class.bssl::ECHServerConfig"** %79, align 8
  %81 = icmp eq %"class.bssl::ECHServerConfig"* %80, null
  br i1 %81, label %87, label %82

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"class.bssl::ECHServerConfig", %"class.bssl::ECHServerConfig"* %80, i64 0, i32 2, i32 0
  call void @EVP_HPKE_KEY_cleanup(%struct.evp_hpke_key_st* %83) #16
  %84 = getelementptr inbounds %"class.bssl::ECHServerConfig", %"class.bssl::ECHServerConfig"* %80, i64 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  call void @OPENSSL_free(i8* %85) #16
  %86 = bitcast %"class.bssl::ECHServerConfig"* %80 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 0, i64 16, i1 false) #16
  call void @OPENSSL_free(i8* nonnull %86) #16
  br label %87

87:                                               ; preds = %82, %76
  %88 = add nuw i64 %77, 1
  %89 = load i64, i64* %20, align 8
  %90 = icmp ult i64 %88, %89
  br i1 %90, label %76, label %91

91:                                               ; preds = %87, %46, %73
  %92 = phi i1 [ true, %46 ], [ false, %73 ], [ false, %87 ]
  %93 = bitcast <2 x i64>* %2 to i8**
  %94 = load i8*, i8** %93, align 16
  call void @OPENSSL_free(i8* %94) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #16
  br label %95

95:                                               ; preds = %10, %91, %16, %8
  %96 = phi i1 [ %9, %8 ], [ false, %16 ], [ %92, %91 ], [ true, %10 ]
  ret i1 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4bssl5ArrayINSt3__110unique_ptrINS_15ECHServerConfigENS_8internal7DeleterIS3_EEEEE4InitEm(%"class.bssl::Array.66"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.bssl::Array.66", %"class.bssl::Array.66"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  %6 = getelementptr inbounds %"class.bssl::Array.66", %"class.bssl::Array.66"* %0, i64 0, i32 0
  br i1 %5, label %22, label %7

7:                                                ; preds = %2, %18
  %8 = phi i64 [ %19, %18 ], [ 0, %2 ]
  %9 = load %"class.std::__1::unique_ptr.67"*, %"class.std::__1::unique_ptr.67"** %6, align 8
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67"* %9, i64 %8, i32 0, i32 0, i32 0
  %11 = load %"class.bssl::ECHServerConfig"*, %"class.bssl::ECHServerConfig"** %10, align 8
  store %"class.bssl::ECHServerConfig"* null, %"class.bssl::ECHServerConfig"** %10, align 8
  %12 = icmp eq %"class.bssl::ECHServerConfig"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.bssl::ECHServerConfig", %"class.bssl::ECHServerConfig"* %11, i64 0, i32 2, i32 0
  tail call void @EVP_HPKE_KEY_cleanup(%struct.evp_hpke_key_st* %14) #16
  %15 = getelementptr inbounds %"class.bssl::ECHServerConfig", %"class.bssl::ECHServerConfig"* %11, i64 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  tail call void @OPENSSL_free(i8* %16) #16
  %17 = bitcast %"class.bssl::ECHServerConfig"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 16, i1 false) #16
  tail call void @OPENSSL_free(i8* nonnull %17) #16
  br label %18

18:                                               ; preds = %13, %7
  %19 = add nuw i64 %8, 1
  %20 = load i64, i64* %3, align 8
  %21 = icmp ult i64 %19, %20
  br i1 %21, label %7, label %22

22:                                               ; preds = %18, %2
  %23 = bitcast %"class.bssl::Array.66"* %0 to i8**
  %24 = load i8*, i8** %23, align 8
  tail call void @OPENSSL_free(i8* %24) #16
  %25 = bitcast %"class.bssl::Array.66"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #16
  %26 = icmp eq i64 %1, 0
  br i1 %26, label %47, label %27

27:                                               ; preds = %22
  %28 = icmp ugt i64 %1, 2305843009213693951
  br i1 %28, label %29, label %30

29:                                               ; preds = %27
  tail call void @ERR_put_error(i32 16, i32 0, i32 69, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.36, i64 0, i64 0), i32 319) #16
  br label %47

30:                                               ; preds = %27
  %31 = shl i64 %1, 3
  %32 = tail call i8* @OPENSSL_malloc(i64 %31) #16
  store i8* %32, i8** %23, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %30
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.36, i64 0, i64 0), i32 324) #16
  br label %47

35:                                               ; preds = %30
  store i64 %1, i64* %3, align 8
  %36 = bitcast i8* %32 to i64*
  store i64 0, i64* %36, align 8
  %37 = load i64, i64* %3, align 8
  %38 = icmp ugt i64 %37, 1
  br i1 %38, label %39, label %47

39:                                               ; preds = %35, %39
  %40 = phi i64 [ %44, %39 ], [ 1, %35 ]
  %41 = load %"class.std::__1::unique_ptr.67"*, %"class.std::__1::unique_ptr.67"** %6, align 8
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67"* %41, i64 %40
  %43 = bitcast %"class.std::__1::unique_ptr.67"* %42 to i64*
  store i64 0, i64* %43, align 8
  %44 = add nuw i64 %40, 1
  %45 = load i64, i64* %3, align 8
  %46 = icmp ult i64 %44, %45
  br i1 %46, label %39, label %47

47:                                               ; preds = %39, %35, %22, %34, %29
  %48 = phi i1 [ false, %29 ], [ false, %34 ], [ true, %22 ], [ true, %35 ], [ true, %39 ]
  ret i1 %48
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4bssl13GrowableArrayINS_10ALPSConfigEE9MaybeGrowEv(%"class.bssl::GrowableArray.82"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.bssl::Array.83"*
  %4 = getelementptr inbounds %"class.bssl::GrowableArray.82", %"class.bssl::GrowableArray.82"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.bssl::GrowableArray.82", %"class.bssl::GrowableArray.82"* %0, i64 0, i32 1, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = tail call zeroext i1 @_ZN4bssl5ArrayINS_10ALPSConfigEE4InitEm(%"class.bssl::Array.83"* %4, i64 16)
  br label %102

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.bssl::GrowableArray.82", %"class.bssl::GrowableArray.82"* %0, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ult i64 %12, %6
  br i1 %13, label %102, label %14

14:                                               ; preds = %10
  %15 = icmp slt i64 %6, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %14
  tail call void @ERR_put_error(i32 16, i32 0, i32 69, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.36, i64 0, i64 0), i32 435) #16
  br label %102

17:                                               ; preds = %14
  %18 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #16
  %19 = bitcast <2 x i64>* %2 to %"struct.bssl::ALPSConfig"**
  %20 = getelementptr inbounds %"class.bssl::Array.83", %"class.bssl::Array.83"* %3, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %18, i8 0, i64 16, i1 false) #16
  %21 = shl i64 %6, 1
  %22 = call zeroext i1 @_ZN4bssl5ArrayINS_10ALPSConfigEE4InitEm(%"class.bssl::Array.83"* nonnull %3, i64 %21)
  br i1 %22, label %23, label %81

23:                                               ; preds = %17
  %24 = load i64, i64* %5, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %45, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.bssl::Array.83", %"class.bssl::Array.83"* %4, i64 0, i32 0
  br label %50

28:                                               ; preds = %50
  %29 = icmp eq i64 %79, 0
  %30 = getelementptr inbounds %"class.bssl::Array.83", %"class.bssl::Array.83"* %4, i64 0, i32 0
  br i1 %29, label %45, label %31

31:                                               ; preds = %28, %31
  %32 = phi i64 [ %42, %31 ], [ 0, %28 ]
  %33 = load %"struct.bssl::ALPSConfig"*, %"struct.bssl::ALPSConfig"** %30, align 8
  %34 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %33, i64 %32
  %35 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %33, i64 %32, i32 1
  %36 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %35, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @OPENSSL_free(i8* %37) #16
  %38 = bitcast %"class.bssl::Array"* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 16, i1 false) #16
  %39 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %34, i64 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  call void @OPENSSL_free(i8* %40) #16
  %41 = bitcast %"struct.bssl::ALPSConfig"* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #16
  %42 = add nuw i64 %32, 1
  %43 = load i64, i64* %5, align 8
  %44 = icmp ult i64 %42, %43
  br i1 %44, label %31, label %45

45:                                               ; preds = %31, %28, %23
  %46 = bitcast %"class.bssl::Array.83"* %4 to i8**
  %47 = load i8*, i8** %46, align 8
  call void @OPENSSL_free(i8* %47) #16
  %48 = load <2 x i64>, <2 x i64>* %2, align 16
  %49 = bitcast %"class.bssl::Array.83"* %4 to <2 x i64>*
  store <2 x i64> %48, <2 x i64>* %49, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %18, i8 0, i64 16, i1 false) #16
  br label %98

50:                                               ; preds = %26, %50
  %51 = phi i64 [ 0, %26 ], [ %78, %50 ]
  %52 = load %"struct.bssl::ALPSConfig"*, %"struct.bssl::ALPSConfig"** %27, align 8
  %53 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %52, i64 %51
  %54 = load %"struct.bssl::ALPSConfig"*, %"struct.bssl::ALPSConfig"** %19, align 16
  %55 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %54, i64 %51
  %56 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %55, i64 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  call void @OPENSSL_free(i8* %57) #16
  %58 = bitcast %"struct.bssl::ALPSConfig"* %55 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 16, i1 false) #16
  %59 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %54, i64 %51, i32 0, i32 1
  %60 = bitcast %"struct.bssl::ALPSConfig"* %53 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = bitcast %"struct.bssl::ALPSConfig"* %55 to i64*
  store i64 %61, i64* %62, align 8
  %63 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %52, i64 %51, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  store i64 %64, i64* %59, align 8
  %65 = bitcast %"struct.bssl::ALPSConfig"* %53 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 16, i1 false) #16
  %66 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %54, i64 %51, i32 1
  %67 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %52, i64 %51, i32 1
  %68 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %66, i64 0, i32 0
  %69 = load i8*, i8** %68, align 8
  call void @OPENSSL_free(i8* %69) #16
  %70 = bitcast %"class.bssl::Array"* %66 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false) #16
  %71 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %54, i64 %51, i32 1, i32 1
  %72 = bitcast %"class.bssl::Array"* %67 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.bssl::Array"* %66 to i64*
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %52, i64 %51, i32 1, i32 1
  %76 = load i64, i64* %75, align 8
  store i64 %76, i64* %71, align 8
  %77 = bitcast %"class.bssl::Array"* %67 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 16, i1 false) #16
  %78 = add nuw i64 %51, 1
  %79 = load i64, i64* %5, align 8
  %80 = icmp ult i64 %78, %79
  br i1 %80, label %50, label %28

81:                                               ; preds = %17
  %82 = load i64, i64* %20, align 8
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %98, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %95, %84 ], [ 0, %81 ]
  %86 = load %"struct.bssl::ALPSConfig"*, %"struct.bssl::ALPSConfig"** %19, align 16
  %87 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %86, i64 %85
  %88 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %86, i64 %85, i32 1
  %89 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %88, i64 0, i32 0
  %90 = load i8*, i8** %89, align 8
  call void @OPENSSL_free(i8* %90) #16
  %91 = bitcast %"class.bssl::Array"* %88 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 16, i1 false) #16
  %92 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %87, i64 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  call void @OPENSSL_free(i8* %93) #16
  %94 = bitcast %"struct.bssl::ALPSConfig"* %87 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 16, i1 false) #16
  %95 = add nuw i64 %85, 1
  %96 = load i64, i64* %20, align 8
  %97 = icmp ult i64 %95, %96
  br i1 %97, label %84, label %98

98:                                               ; preds = %84, %45, %81
  %99 = phi i1 [ true, %45 ], [ false, %81 ], [ false, %84 ]
  %100 = bitcast <2 x i64>* %2 to i8**
  %101 = load i8*, i8** %100, align 16
  call void @OPENSSL_free(i8* %101) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #16
  br label %102

102:                                              ; preds = %10, %98, %16, %8
  %103 = phi i1 [ %9, %8 ], [ false, %16 ], [ %99, %98 ], [ true, %10 ]
  ret i1 %103
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4bssl5ArrayINS_10ALPSConfigEE4InitEm(%"class.bssl::Array.83"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.bssl::Array.83", %"class.bssl::Array.83"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  %6 = getelementptr inbounds %"class.bssl::Array.83", %"class.bssl::Array.83"* %0, i64 0, i32 0
  br i1 %5, label %21, label %7

7:                                                ; preds = %2, %7
  %8 = phi i64 [ %18, %7 ], [ 0, %2 ]
  %9 = load %"struct.bssl::ALPSConfig"*, %"struct.bssl::ALPSConfig"** %6, align 8
  %10 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %9, i64 %8
  %11 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %9, i64 %8, i32 1
  %12 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  tail call void @OPENSSL_free(i8* %13) #16
  %14 = bitcast %"class.bssl::Array"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #16
  %15 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %10, i64 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  tail call void @OPENSSL_free(i8* %16) #16
  %17 = bitcast %"struct.bssl::ALPSConfig"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #16
  %18 = add nuw i64 %8, 1
  %19 = load i64, i64* %3, align 8
  %20 = icmp ult i64 %18, %19
  br i1 %20, label %7, label %21

21:                                               ; preds = %7, %2
  %22 = bitcast %"class.bssl::Array.83"* %0 to i8**
  %23 = load i8*, i8** %22, align 8
  tail call void @OPENSSL_free(i8* %23) #16
  %24 = bitcast %"class.bssl::Array.83"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #16
  %25 = icmp eq i64 %1, 0
  br i1 %25, label %45, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %1, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @ERR_put_error(i32 16, i32 0, i32 69, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.36, i64 0, i64 0), i32 319) #16
  br label %45

29:                                               ; preds = %26
  %30 = shl i64 %1, 5
  %31 = tail call i8* @OPENSSL_malloc(i64 %30) #16
  store i8* %31, i8** %22, align 8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.36, i64 0, i64 0), i32 324) #16
  br label %45

34:                                               ; preds = %29
  store i64 %1, i64* %3, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 32, i1 false) #16
  %35 = load i64, i64* %3, align 8
  %36 = icmp ugt i64 %35, 1
  br i1 %36, label %37, label %45

37:                                               ; preds = %34, %37
  %38 = phi i64 [ %42, %37 ], [ 1, %34 ]
  %39 = load %"struct.bssl::ALPSConfig"*, %"struct.bssl::ALPSConfig"** %6, align 8
  %40 = getelementptr inbounds %"struct.bssl::ALPSConfig", %"struct.bssl::ALPSConfig"* %39, i64 %38
  %41 = bitcast %"struct.bssl::ALPSConfig"* %40 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 32, i1 false) #16
  %42 = add nuw i64 %38, 1
  %43 = load i64, i64* %3, align 8
  %44 = icmp ult i64 %42, %43
  br i1 %44, label %37, label %45

45:                                               ; preds = %37, %34, %21, %33, %28
  %46 = phi i1 [ false, %28 ], [ false, %33 ], [ true, %21 ], [ true, %34 ], [ true, %37 ]
  ret i1 %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4bssl13GrowableArrayINS_18CertCompressionAlgEE9MaybeGrowEv(%"class.bssl::GrowableArray.114"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.bssl::GrowableArray.114", %"class.bssl::GrowableArray.114"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.bssl::GrowableArray.114", %"class.bssl::GrowableArray.114"* %0, i64 0, i32 1, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %25

6:                                                ; preds = %1
  %7 = bitcast %"class.bssl::Array.115"* %2 to i8**
  %8 = load i8*, i8** %7, align 8
  tail call void @OPENSSL_free(i8* %8) #16
  %9 = bitcast %"class.bssl::Array.115"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #16
  %10 = tail call i8* @OPENSSL_malloc(i64 384) #16
  %11 = getelementptr inbounds %"class.bssl::Array.115", %"class.bssl::Array.115"* %2, i64 0, i32 0
  store i8* %10, i8** %7, align 8
  %12 = icmp eq i8* %10, null
  br i1 %12, label %13, label %14

13:                                               ; preds = %6
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.36, i64 0, i64 0), i32 324) #16
  br label %114

14:                                               ; preds = %6
  store i64 16, i64* %3, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 18, i1 false) #16
  %15 = load i64, i64* %3, align 8
  %16 = icmp ugt i64 %15, 1
  br i1 %16, label %17, label %114

17:                                               ; preds = %14, %17
  %18 = phi i64 [ %22, %17 ], [ 1, %14 ]
  %19 = load %"struct.bssl::CertCompressionAlg"*, %"struct.bssl::CertCompressionAlg"** %11, align 8
  %20 = getelementptr inbounds %"struct.bssl::CertCompressionAlg", %"struct.bssl::CertCompressionAlg"* %19, i64 %18
  %21 = bitcast %"struct.bssl::CertCompressionAlg"* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 18, i1 false) #16
  %22 = add nuw i64 %18, 1
  %23 = load i64, i64* %3, align 8
  %24 = icmp ult i64 %22, %23
  br i1 %24, label %17, label %114

25:                                               ; preds = %1
  %26 = getelementptr inbounds %"class.bssl::GrowableArray.114", %"class.bssl::GrowableArray.114"* %0, i64 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = icmp ult i64 %27, %4
  br i1 %28, label %114, label %29

29:                                               ; preds = %25
  %30 = icmp slt i64 %4, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %29
  tail call void @ERR_put_error(i32 16, i32 0, i32 69, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.36, i64 0, i64 0), i32 435) #16
  br label %114

32:                                               ; preds = %29
  %33 = shl i64 %4, 1
  tail call void @OPENSSL_free(i8* null) #16
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %91, label %35

35:                                               ; preds = %32
  %36 = icmp ugt i64 %33, 768614336404564650
  br i1 %36, label %37, label %38

37:                                               ; preds = %35
  tail call void @ERR_put_error(i32 16, i32 0, i32 69, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.36, i64 0, i64 0), i32 319) #16
  br label %112

38:                                               ; preds = %35
  %39 = mul i64 %4, 48
  %40 = tail call i8* @OPENSSL_malloc(i64 %39) #16
  %41 = ptrtoint i8* %40 to i64
  %42 = icmp eq i8* %40, null
  br i1 %42, label %50, label %43

43:                                               ; preds = %38
  %44 = bitcast i8* %40 to %"struct.bssl::CertCompressionAlg"*
  %45 = add i64 %33, -1
  %46 = and i64 %33, 6
  %47 = icmp ult i64 %45, 7
  br i1 %47, label %80, label %48

48:                                               ; preds = %43
  %49 = sub i64 %33, %46
  br label %51

50:                                               ; preds = %38
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.36, i64 0, i64 0), i32 324) #16
  br label %112

51:                                               ; preds = %51, %48
  %52 = phi i64 [ 0, %48 ], [ %77, %51 ]
  %53 = phi i64 [ %49, %48 ], [ %78, %51 ]
  %54 = getelementptr inbounds %"struct.bssl::CertCompressionAlg", %"struct.bssl::CertCompressionAlg"* %44, i64 %52
  %55 = bitcast %"struct.bssl::CertCompressionAlg"* %54 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 18, i1 false) #16
  %56 = or i64 %52, 1
  %57 = getelementptr inbounds %"struct.bssl::CertCompressionAlg", %"struct.bssl::CertCompressionAlg"* %44, i64 %56
  %58 = bitcast %"struct.bssl::CertCompressionAlg"* %57 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 18, i1 false) #16
  %59 = or i64 %52, 2
  %60 = getelementptr inbounds %"struct.bssl::CertCompressionAlg", %"struct.bssl::CertCompressionAlg"* %44, i64 %59
  %61 = bitcast %"struct.bssl::CertCompressionAlg"* %60 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 18, i1 false) #16
  %62 = or i64 %52, 3
  %63 = getelementptr inbounds %"struct.bssl::CertCompressionAlg", %"struct.bssl::CertCompressionAlg"* %44, i64 %62
  %64 = bitcast %"struct.bssl::CertCompressionAlg"* %63 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 18, i1 false) #16
  %65 = or i64 %52, 4
  %66 = getelementptr inbounds %"struct.bssl::CertCompressionAlg", %"struct.bssl::CertCompressionAlg"* %44, i64 %65
  %67 = bitcast %"struct.bssl::CertCompressionAlg"* %66 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 18, i1 false) #16
  %68 = or i64 %52, 5
  %69 = getelementptr inbounds %"struct.bssl::CertCompressionAlg", %"struct.bssl::CertCompressionAlg"* %44, i64 %68
  %70 = bitcast %"struct.bssl::CertCompressionAlg"* %69 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 18, i1 false) #16
  %71 = or i64 %52, 6
  %72 = getelementptr inbounds %"struct.bssl::CertCompressionAlg", %"struct.bssl::CertCompressionAlg"* %44, i64 %71
  %73 = bitcast %"struct.bssl::CertCompressionAlg"* %72 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 18, i1 false) #16
  %74 = or i64 %52, 7
  %75 = getelementptr inbounds %"struct.bssl::CertCompressionAlg", %"struct.bssl::CertCompressionAlg"* %44, i64 %74
  %76 = bitcast %"struct.bssl::CertCompressionAlg"* %75 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 18, i1 false) #16
  %77 = add nuw i64 %52, 8
  %78 = add i64 %53, -8
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %51

80:                                               ; preds = %51, %43
  %81 = phi i64 [ 0, %43 ], [ %77, %51 ]
  %82 = icmp eq i64 %46, 0
  br i1 %82, label %91, label %83

83:                                               ; preds = %80, %83
  %84 = phi i64 [ %88, %83 ], [ %81, %80 ]
  %85 = phi i64 [ %89, %83 ], [ %46, %80 ]
  %86 = getelementptr inbounds %"struct.bssl::CertCompressionAlg", %"struct.bssl::CertCompressionAlg"* %44, i64 %84
  %87 = bitcast %"struct.bssl::CertCompressionAlg"* %86 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 18, i1 false) #16
  %88 = add nuw i64 %84, 1
  %89 = add i64 %85, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %83, !llvm.loop !3

91:                                               ; preds = %80, %83, %32
  %92 = phi i64 [ 0, %32 ], [ %41, %83 ], [ %41, %80 ]
  %93 = load i64, i64* %3, align 8
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %98, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.bssl::Array.115", %"class.bssl::Array.115"* %2, i64 0, i32 0
  %97 = inttoptr i64 %92 to %"struct.bssl::CertCompressionAlg"*
  br label %102

98:                                               ; preds = %102, %91
  %99 = bitcast %"class.bssl::Array.115"* %2 to i8**
  %100 = load i8*, i8** %99, align 8
  tail call void @OPENSSL_free(i8* %100) #16
  %101 = bitcast %"class.bssl::Array.115"* %2 to i64*
  store i64 %92, i64* %101, align 8
  store i64 %33, i64* %3, align 8
  br label %112

102:                                              ; preds = %95, %102
  %103 = phi i64 [ 0, %95 ], [ %109, %102 ]
  %104 = load %"struct.bssl::CertCompressionAlg"*, %"struct.bssl::CertCompressionAlg"** %96, align 8
  %105 = getelementptr inbounds %"struct.bssl::CertCompressionAlg", %"struct.bssl::CertCompressionAlg"* %104, i64 %103
  %106 = getelementptr inbounds %"struct.bssl::CertCompressionAlg", %"struct.bssl::CertCompressionAlg"* %97, i64 %103
  %107 = bitcast %"struct.bssl::CertCompressionAlg"* %106 to i8*
  %108 = bitcast %"struct.bssl::CertCompressionAlg"* %105 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* align 8 %108, i64 18, i1 false)
  %109 = add nuw i64 %103, 1
  %110 = load i64, i64* %3, align 8
  %111 = icmp ult i64 %109, %110
  br i1 %111, label %102, label %98

112:                                              ; preds = %50, %37, %98
  %113 = phi i1 [ true, %98 ], [ false, %50 ], [ false, %37 ]
  tail call void @OPENSSL_free(i8* null) #16
  br label %114

114:                                              ; preds = %17, %14, %13, %25, %112, %31
  %115 = phi i1 [ false, %31 ], [ %113, %112 ], [ true, %25 ], [ false, %13 ], [ true, %14 ], [ true, %17 ]
  ret i1 %115
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #15

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nofree nounwind readonly }
attributes #16 = { nounwind }
attributes #17 = { nounwind readonly }
attributes #18 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
