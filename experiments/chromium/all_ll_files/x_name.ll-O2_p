; ModuleID = '../../third_party/boringssl/src/crypto/x509/x_name.c'
source_filename = "../../third_party/boringssl/src/crypto/x509/x_name.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ASN1_TEMPLATE_st = type { i64, i64, i64, i8*, %struct.ASN1_ITEM_st* }
%struct.ASN1_ITEM_st = type { i8, i64, %struct.ASN1_TEMPLATE_st*, i64, i8*, i64, i8* }
%struct.ASN1_EXTERN_FUNCS_st = type { i8*, i32 (%struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*)*, void (%struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*)*, void (%struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*)*, i32 (%struct.ASN1_VALUE_st**, i8**, i64, %struct.ASN1_ITEM_st*, i32, i32, i8, %struct.ASN1_TLC_st*)*, i32 (%struct.ASN1_VALUE_st**, i8**, %struct.ASN1_ITEM_st*, i32, i32)*, i32 (%struct.bio_st*, %struct.ASN1_VALUE_st**, i32, i8*, %struct.asn1_pctx_st*)* }
%struct.ASN1_VALUE_st = type opaque
%struct.ASN1_TLC_st = type { i8, i32, i64, i32, i32, i32 }
%struct.bio_st = type { %struct.bio_method_st*, i32, i32, i32, i32, i32, i32, i8*, %struct.bio_st*, i64, i64 }
%struct.bio_method_st = type { i32, i8*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*)*, i32 (%struct.bio_st*, i8*, i32)*, i64 (%struct.bio_st*, i32, i64, i8*)*, i32 (%struct.bio_st*)*, i32 (%struct.bio_st*)*, i64 (%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* }
%struct.asn1_pctx_st = type opaque
%struct.X509_name_entry_st = type { %struct.asn1_object_st*, %struct.asn1_string_st*, i32, i32 }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.X509_name_st = type { %struct.stack_st_X509_NAME_ENTRY*, i32, %struct.buf_mem_st*, i8*, i32 }
%struct.stack_st_X509_NAME_ENTRY = type opaque
%struct.buf_mem_st = type { i64, i8*, i64 }
%struct.stack_st = type { i64, i8**, i32, i64, i32 (i8**, i8**)* }
%struct.stack_st_STACK_OF_X509_NAME_ENTRY = type opaque
%struct.stack_st_ASN1_VALUE = type opaque

@X509_NAME_ENTRY_seq_tt = internal constant [2 x %struct.ASN1_TEMPLATE_st] [%struct.ASN1_TEMPLATE_st { i64 0, i64 0, i64 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i32 0, i32 0), %struct.ASN1_ITEM_st* @ASN1_OBJECT_it }, %struct.ASN1_TEMPLATE_st { i64 0, i64 0, i64 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), %struct.ASN1_ITEM_st* @ASN1_PRINTABLE_it }], align 16
@.str = private unnamed_addr constant [16 x i8] c"X509_NAME_ENTRY\00", align 1
@X509_NAME_ENTRY_it = hidden constant %struct.ASN1_ITEM_st { i8 1, i64 16, %struct.ASN1_TEMPLATE_st* getelementptr inbounds ([2 x %struct.ASN1_TEMPLATE_st], [2 x %struct.ASN1_TEMPLATE_st]* @X509_NAME_ENTRY_seq_tt, i32 0, i32 0), i64 2, i8* null, i64 24, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i32 0, i32 0) }, align 8
@X509_NAME_ENTRIES_item_tt = internal constant %struct.ASN1_TEMPLATE_st { i64 2, i64 0, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0), %struct.ASN1_ITEM_st* @X509_NAME_ENTRY_it }, align 8
@.str.1 = private unnamed_addr constant [18 x i8] c"X509_NAME_ENTRIES\00", align 1
@X509_NAME_ENTRIES_it = hidden constant %struct.ASN1_ITEM_st { i8 0, i64 -1, %struct.ASN1_TEMPLATE_st* @X509_NAME_ENTRIES_item_tt, i64 0, i8* null, i64 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i32 0, i32 0) }, align 8
@X509_NAME_INTERNAL_item_tt = internal constant %struct.ASN1_TEMPLATE_st { i64 4, i64 0, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0), %struct.ASN1_ITEM_st* @X509_NAME_ENTRIES_it }, align 8
@.str.2 = private unnamed_addr constant [19 x i8] c"X509_NAME_INTERNAL\00", align 1
@X509_NAME_INTERNAL_it = hidden constant %struct.ASN1_ITEM_st { i8 0, i64 -1, %struct.ASN1_TEMPLATE_st* @X509_NAME_INTERNAL_item_tt, i64 0, i8* null, i64 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i32 0, i32 0) }, align 8
@x509_name_ff = internal constant %struct.ASN1_EXTERN_FUNCS_st { i8* null, i32 (%struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*)* @x509_name_ex_new, void (%struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*)* @x509_name_ex_free, void (%struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*)* null, i32 (%struct.ASN1_VALUE_st**, i8**, i64, %struct.ASN1_ITEM_st*, i32, i32, i8, %struct.ASN1_TLC_st*)* @x509_name_ex_d2i, i32 (%struct.ASN1_VALUE_st**, i8**, %struct.ASN1_ITEM_st*, i32, i32)* @x509_name_ex_i2d, i32 (%struct.bio_st*, %struct.ASN1_VALUE_st**, i32, i8*, %struct.asn1_pctx_st*)* null }, align 8
@.str.3 = private unnamed_addr constant [10 x i8] c"X509_NAME\00", align 1
@X509_NAME_it = hidden constant %struct.ASN1_ITEM_st { i8 4, i64 16, %struct.ASN1_TEMPLATE_st* null, i64 0, i8* bitcast (%struct.ASN1_EXTERN_FUNCS_st* @x509_name_ff to i8*), i64 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i32 0, i32 0) }, align 8
@.str.4 = private unnamed_addr constant [7 x i8] c"object\00", align 1
@ASN1_OBJECT_it = external constant %struct.ASN1_ITEM_st, align 8
@.str.5 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@ASN1_PRINTABLE_it = external constant %struct.ASN1_ITEM_st, align 8
@.str.6 = private unnamed_addr constant [5 x i8] c"RDNS\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"Name\00", align 1
@.str.8 = private unnamed_addr constant [53 x i8] c"../../third_party/boringssl/src/crypto/x509/x_name.c\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.X509_name_entry_st* @d2i_X509_NAME_ENTRY(%struct.X509_name_entry_st**, i8**, i64) local_unnamed_addr #0 {
  %4 = bitcast %struct.X509_name_entry_st** %0 to %struct.ASN1_VALUE_st**
  %5 = tail call %struct.ASN1_VALUE_st* @ASN1_item_d2i(%struct.ASN1_VALUE_st** %4, i8** %1, i64 %2, %struct.ASN1_ITEM_st* nonnull @X509_NAME_ENTRY_it) #6
  %6 = bitcast %struct.ASN1_VALUE_st* %5 to %struct.X509_name_entry_st*
  ret %struct.X509_name_entry_st* %6
}

declare %struct.ASN1_VALUE_st* @ASN1_item_d2i(%struct.ASN1_VALUE_st**, i8**, i64, %struct.ASN1_ITEM_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2d_X509_NAME_ENTRY(%struct.X509_name_entry_st*, i8**) local_unnamed_addr #0 {
  %3 = bitcast %struct.X509_name_entry_st* %0 to %struct.ASN1_VALUE_st*
  %4 = tail call i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st* %3, i8** %1, %struct.ASN1_ITEM_st* nonnull @X509_NAME_ENTRY_it) #6
  ret i32 %4
}

declare i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st*, i8**, %struct.ASN1_ITEM_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.X509_name_entry_st* @X509_NAME_ENTRY_new() local_unnamed_addr #0 {
  %1 = tail call %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st* nonnull @X509_NAME_ENTRY_it) #6
  %2 = bitcast %struct.ASN1_VALUE_st* %1 to %struct.X509_name_entry_st*
  ret %struct.X509_name_entry_st* %2
}

declare %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @X509_NAME_ENTRY_free(%struct.X509_name_entry_st*) #0 {
  %2 = bitcast %struct.X509_name_entry_st* %0 to %struct.ASN1_VALUE_st*
  tail call void @ASN1_item_free(%struct.ASN1_VALUE_st* %2, %struct.ASN1_ITEM_st* nonnull @X509_NAME_ENTRY_it) #6
  ret void
}

declare void @ASN1_item_free(%struct.ASN1_VALUE_st*, %struct.ASN1_ITEM_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.X509_name_entry_st* @X509_NAME_ENTRY_dup(%struct.X509_name_entry_st*) local_unnamed_addr #0 {
  %2 = bitcast %struct.X509_name_entry_st* %0 to i8*
  %3 = tail call i8* @ASN1_item_dup(%struct.ASN1_ITEM_st* nonnull @X509_NAME_ENTRY_it, i8* %2) #6
  %4 = bitcast i8* %3 to %struct.X509_name_entry_st*
  ret %struct.X509_name_entry_st* %4
}

declare i8* @ASN1_item_dup(%struct.ASN1_ITEM_st*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.X509_name_st* @d2i_X509_NAME(%struct.X509_name_st**, i8**, i64) local_unnamed_addr #0 {
  %4 = bitcast %struct.X509_name_st** %0 to %struct.ASN1_VALUE_st**
  %5 = tail call %struct.ASN1_VALUE_st* @ASN1_item_d2i(%struct.ASN1_VALUE_st** %4, i8** %1, i64 %2, %struct.ASN1_ITEM_st* nonnull @X509_NAME_it) #6
  %6 = bitcast %struct.ASN1_VALUE_st* %5 to %struct.X509_name_st*
  ret %struct.X509_name_st* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2d_X509_NAME(%struct.X509_name_st*, i8**) local_unnamed_addr #0 {
  %3 = bitcast %struct.X509_name_st* %0 to %struct.ASN1_VALUE_st*
  %4 = tail call i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st* %3, i8** %1, %struct.ASN1_ITEM_st* nonnull @X509_NAME_it) #6
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.X509_name_st* @X509_NAME_new() local_unnamed_addr #0 {
  %1 = tail call %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st* nonnull @X509_NAME_it) #6
  %2 = bitcast %struct.ASN1_VALUE_st* %1 to %struct.X509_name_st*
  ret %struct.X509_name_st* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @X509_NAME_free(%struct.X509_name_st*) local_unnamed_addr #0 {
  %2 = bitcast %struct.X509_name_st* %0 to %struct.ASN1_VALUE_st*
  tail call void @ASN1_item_free(%struct.ASN1_VALUE_st* %2, %struct.ASN1_ITEM_st* nonnull @X509_NAME_it) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.X509_name_st* @X509_NAME_dup(%struct.X509_name_st*) local_unnamed_addr #0 {
  %2 = bitcast %struct.X509_name_st* %0 to i8*
  %3 = tail call i8* @ASN1_item_dup(%struct.ASN1_ITEM_st* nonnull @X509_NAME_it, i8* %2) #6
  %4 = bitcast i8* %3 to %struct.X509_name_st*
  ret %struct.X509_name_st* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_NAME_set(%struct.X509_name_st** nocapture, %struct.X509_name_st*) local_unnamed_addr #0 {
  %3 = bitcast %struct.X509_name_st* %1 to i8*
  %4 = tail call i8* @ASN1_item_dup(%struct.ASN1_ITEM_st* nonnull @X509_NAME_it, i8* %3) #6
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = bitcast %struct.X509_name_st** %0 to %struct.ASN1_VALUE_st**
  %8 = load %struct.ASN1_VALUE_st*, %struct.ASN1_VALUE_st** %7, align 8
  tail call void @ASN1_item_free(%struct.ASN1_VALUE_st* %8, %struct.ASN1_ITEM_st* nonnull @X509_NAME_it) #6
  %9 = bitcast %struct.X509_name_st** %0 to i8**
  store i8* %4, i8** %9, align 8
  br label %10

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 1, %6 ], [ 0, %2 ]
  ret i32 %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @X509_NAME_ENTRY_set(%struct.X509_name_entry_st* nocapture readonly) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.X509_name_entry_st, %struct.X509_name_entry_st* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_NAME_get0_der(%struct.X509_name_st*, i8**, i64*) local_unnamed_addr #0 {
  %4 = bitcast %struct.X509_name_st* %0 to %struct.ASN1_VALUE_st*
  %5 = tail call i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st* %4, i8** null, %struct.ASN1_ITEM_st* nonnull @X509_NAME_it) #6
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %23, label %7

7:                                                ; preds = %3
  %8 = icmp eq i8** %1, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %0, i64 0, i32 2
  %11 = load %struct.buf_mem_st*, %struct.buf_mem_st** %10, align 8
  %12 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %11, i64 0, i32 1
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast i8** %1 to i64*
  store i64 %14, i64* %15, align 8
  br label %16

16:                                               ; preds = %7, %9
  %17 = icmp eq i64* %2, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %0, i64 0, i32 2
  %20 = load %struct.buf_mem_st*, %struct.buf_mem_st** %19, align 8
  %21 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %20, i64 0, i32 0
  %22 = load i64, i64* %21, align 8
  store i64 %22, i64* %2, align 8
  br label %23

23:                                               ; preds = %18, %16, %3
  %24 = phi i32 [ 0, %3 ], [ 1, %16 ], [ 1, %18 ]
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @x509_name_ex_new(%struct.ASN1_VALUE_st** nocapture, %struct.ASN1_ITEM_st* nocapture readnone) #0 {
  %3 = tail call i8* @OPENSSL_malloc(i64 40) #6
  %4 = icmp eq i8* %3, null
  br i1 %4, label %29, label %5

5:                                                ; preds = %2
  %6 = tail call %struct.stack_st* @sk_new_null() #6
  %7 = bitcast i8* %3 to %struct.stack_st_X509_NAME_ENTRY**
  %8 = bitcast i8* %3 to %struct.stack_st**
  store %struct.stack_st* %6, %struct.stack_st** %8, align 8
  %9 = icmp eq %struct.stack_st* %6, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %5
  %11 = tail call %struct.buf_mem_st* @BUF_MEM_new() #6
  %12 = getelementptr inbounds i8, i8* %3, i64 16
  %13 = bitcast i8* %12 to %struct.buf_mem_st**
  store %struct.buf_mem_st* %11, %struct.buf_mem_st** %13, align 8
  %14 = icmp eq %struct.buf_mem_st* %11, null
  br i1 %14, label %23, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds i8, i8* %3, i64 24
  %17 = bitcast i8* %16 to i8**
  store i8* null, i8** %17, align 8
  %18 = getelementptr inbounds i8, i8* %3, i64 32
  %19 = bitcast i8* %18 to i32*
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds i8, i8* %3, i64 8
  %21 = bitcast i8* %20 to i32*
  store i32 1, i32* %21, align 8
  %22 = bitcast %struct.ASN1_VALUE_st** %0 to i8**
  store i8* %3, i8** %22, align 8
  br label %30

23:                                               ; preds = %5, %10
  tail call void @ERR_put_error(i32 11, i32 0, i32 65, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.8, i64 0, i64 0), i32 160) #6
  %24 = load %struct.stack_st_X509_NAME_ENTRY*, %struct.stack_st_X509_NAME_ENTRY** %7, align 8
  %25 = icmp eq %struct.stack_st_X509_NAME_ENTRY* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %23
  %27 = bitcast %struct.stack_st_X509_NAME_ENTRY* %24 to %struct.stack_st*
  tail call void @sk_free(%struct.stack_st* nonnull %27) #6
  br label %28

28:                                               ; preds = %23, %26
  tail call void @OPENSSL_free(i8* nonnull %3) #6
  br label %30

29:                                               ; preds = %2
  tail call void @ERR_put_error(i32 11, i32 0, i32 65, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.8, i64 0, i64 0), i32 160) #6
  br label %30

30:                                               ; preds = %28, %29, %15
  %31 = phi i32 [ 1, %15 ], [ 0, %29 ], [ 0, %28 ]
  ret i32 %31
}

; Function Attrs: nounwind ssp uwtable
define internal void @x509_name_ex_free(%struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st* nocapture readnone) #0 {
  %3 = icmp eq %struct.ASN1_VALUE_st** %0, null
  br i1 %3, label %19, label %4

4:                                                ; preds = %2
  %5 = load %struct.ASN1_VALUE_st*, %struct.ASN1_VALUE_st** %0, align 8
  %6 = icmp eq %struct.ASN1_VALUE_st* %5, null
  br i1 %6, label %19, label %7

7:                                                ; preds = %4
  %8 = bitcast %struct.ASN1_VALUE_st* %5 to %struct.X509_name_st*
  %9 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %8, i64 0, i32 2
  %10 = load %struct.buf_mem_st*, %struct.buf_mem_st** %9, align 8
  tail call void @BUF_MEM_free(%struct.buf_mem_st* %10) #6
  %11 = bitcast %struct.ASN1_VALUE_st* %5 to %struct.stack_st**
  %12 = load %struct.stack_st*, %struct.stack_st** %11, align 8
  tail call void @sk_pop_free_ex(%struct.stack_st* %12, void (void (i8*)*, i8*)* nonnull @sk_X509_NAME_ENTRY_call_free_func, void (i8*)* bitcast (void (%struct.X509_name_entry_st*)* @X509_NAME_ENTRY_free to void (i8*)*)) #6
  %13 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %8, i64 0, i32 3
  %14 = load i8*, i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %7
  tail call void @OPENSSL_free(i8* nonnull %14) #6
  br label %17

17:                                               ; preds = %7, %16
  %18 = bitcast %struct.ASN1_VALUE_st* %5 to i8*
  tail call void @OPENSSL_free(i8* nonnull %18) #6
  store %struct.ASN1_VALUE_st* null, %struct.ASN1_VALUE_st** %0, align 8
  br label %19

19:                                               ; preds = %2, %4, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @x509_name_ex_d2i(%struct.ASN1_VALUE_st**, i8** nocapture, i64, %struct.ASN1_ITEM_st* nocapture readnone, i32, i32, i8 signext, %struct.ASN1_TLC_st*) #0 {
  %9 = alloca i8*, align 8
  %10 = alloca %struct.ASN1_VALUE_st*, align 8
  %11 = alloca %struct.ASN1_VALUE_st*, align 8
  %12 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #6
  %13 = bitcast i8** %1 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast i8** %9 to i64*
  store i64 %14, i64* %15, align 8
  %16 = icmp slt i64 %2, 1048576
  %17 = select i1 %16, i64 %2, i64 1048576
  %18 = inttoptr i64 %14 to i8*
  %19 = bitcast %struct.ASN1_VALUE_st** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #6
  store %struct.ASN1_VALUE_st* null, %struct.ASN1_VALUE_st** %10, align 8
  %20 = call i32 @ASN1_item_ex_d2i(%struct.ASN1_VALUE_st** nonnull %10, i8** nonnull %9, i64 %17, %struct.ASN1_ITEM_st* nonnull @X509_NAME_INTERNAL_it, i32 %4, i32 %5, i8 signext %6, %struct.ASN1_TLC_st* %7) #6
  %21 = icmp slt i32 %20, 1
  br i1 %21, label %105, label %22

22:                                               ; preds = %8
  %23 = bitcast %struct.ASN1_VALUE_st** %10 to %struct.stack_st_STACK_OF_X509_NAME_ENTRY**
  %24 = load %struct.stack_st_STACK_OF_X509_NAME_ENTRY*, %struct.stack_st_STACK_OF_X509_NAME_ENTRY** %23, align 8
  %25 = load %struct.ASN1_VALUE_st*, %struct.ASN1_VALUE_st** %0, align 8
  %26 = icmp eq %struct.ASN1_VALUE_st* %25, null
  %27 = icmp eq %struct.ASN1_VALUE_st** %0, null
  %28 = or i1 %27, %26
  br i1 %28, label %41, label %29

29:                                               ; preds = %22
  %30 = bitcast %struct.ASN1_VALUE_st* %25 to %struct.X509_name_st*
  %31 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %30, i64 0, i32 2
  %32 = load %struct.buf_mem_st*, %struct.buf_mem_st** %31, align 8
  call void @BUF_MEM_free(%struct.buf_mem_st* %32) #6
  %33 = bitcast %struct.ASN1_VALUE_st* %25 to %struct.stack_st**
  %34 = load %struct.stack_st*, %struct.stack_st** %33, align 8
  call void @sk_pop_free_ex(%struct.stack_st* %34, void (void (i8*)*, i8*)* nonnull @sk_X509_NAME_ENTRY_call_free_func, void (i8*)* bitcast (void (%struct.X509_name_entry_st*)* @X509_NAME_ENTRY_free to void (i8*)*)) #6
  %35 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %30, i64 0, i32 3
  %36 = load i8*, i8** %35, align 8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %39, label %38

38:                                               ; preds = %29
  call void @OPENSSL_free(i8* nonnull %36) #6
  br label %39

39:                                               ; preds = %38, %29
  %40 = bitcast %struct.ASN1_VALUE_st* %25 to i8*
  call void @OPENSSL_free(i8* nonnull %40) #6
  store %struct.ASN1_VALUE_st* null, %struct.ASN1_VALUE_st** %0, align 8
  br label %41

41:                                               ; preds = %39, %22
  %42 = bitcast %struct.ASN1_VALUE_st** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #6
  store %struct.ASN1_VALUE_st* null, %struct.ASN1_VALUE_st** %11, align 8
  %43 = call i32 @x509_name_ex_new(%struct.ASN1_VALUE_st** nonnull %11, %struct.ASN1_ITEM_st* null)
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %100, label %45

45:                                               ; preds = %41
  %46 = load %struct.ASN1_VALUE_st*, %struct.ASN1_VALUE_st** %11, align 8
  %47 = bitcast %struct.ASN1_VALUE_st* %46 to %struct.X509_name_st*
  %48 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %47, i64 0, i32 2
  %49 = load %struct.buf_mem_st*, %struct.buf_mem_st** %48, align 8
  %50 = load i64, i64* %15, align 8
  %51 = sub i64 %50, %14
  %52 = call i64 @BUF_MEM_grow(%struct.buf_mem_st* %49, i64 %51) #6
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %100, label %54

54:                                               ; preds = %45
  %55 = load i64, i64* %15, align 8
  %56 = sub i64 %55, %14
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %62, label %58

58:                                               ; preds = %54
  %59 = load %struct.buf_mem_st*, %struct.buf_mem_st** %48, align 8
  %60 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %59, i64 0, i32 1
  %61 = load i8*, i8** %60, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %61, i8* align 1 %18, i64 %56, i1 false) #6
  br label %62

62:                                               ; preds = %54, %58
  %63 = bitcast %struct.stack_st_STACK_OF_X509_NAME_ENTRY* %24 to %struct.stack_st*
  %64 = call i64 @sk_num(%struct.stack_st* %63) #6
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %94, label %66

66:                                               ; preds = %62
  %67 = bitcast %struct.ASN1_VALUE_st* %46 to %struct.stack_st**
  br label %68

68:                                               ; preds = %66, %90
  %69 = phi i64 [ 0, %66 ], [ %91, %90 ]
  %70 = call i8* @sk_value(%struct.stack_st* %63, i64 %69) #6
  %71 = bitcast i8* %70 to %struct.stack_st_X509_NAME_ENTRY*
  %72 = bitcast %struct.stack_st_X509_NAME_ENTRY* %71 to %struct.stack_st*
  %73 = call i64 @sk_num(%struct.stack_st* %72) #6
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %90, label %75

75:                                               ; preds = %68
  %76 = trunc i64 %69 to i32
  br label %77

77:                                               ; preds = %75, %85
  %78 = phi i64 [ 0, %75 ], [ %87, %85 ]
  %79 = call i8* @sk_value(%struct.stack_st* %72, i64 %78) #6
  %80 = getelementptr inbounds i8, i8* %79, i64 16
  %81 = bitcast i8* %80 to i32*
  store i32 %76, i32* %81, align 8
  %82 = load %struct.stack_st*, %struct.stack_st** %67, align 8
  %83 = call i64 @sk_push(%struct.stack_st* %82, i8* %79) #6
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %100, label %85

85:                                               ; preds = %77
  %86 = call i8* @sk_set(%struct.stack_st* %72, i64 %78, i8* null) #6
  %87 = add nuw i64 %78, 1
  %88 = call i64 @sk_num(%struct.stack_st* %72) #6
  %89 = icmp ult i64 %87, %88
  br i1 %89, label %77, label %90

90:                                               ; preds = %85, %68
  %91 = add nuw i64 %69, 1
  %92 = call i64 @sk_num(%struct.stack_st* %63) #6
  %93 = icmp ult i64 %91, %92
  br i1 %93, label %68, label %94

94:                                               ; preds = %90, %62
  %95 = call fastcc i32 @x509_name_canon(%struct.X509_name_st* %47)
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %100, label %97

97:                                               ; preds = %94
  call void @sk_pop_free_ex(%struct.stack_st* %63, void (void (i8*)*, i8*)* nonnull @sk_STACK_OF_X509_NAME_ENTRY_call_free_func, void (i8*)* bitcast (void (%struct.stack_st_X509_NAME_ENTRY*)* @local_sk_X509_NAME_ENTRY_free to void (i8*)*)) #6
  %98 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %47, i64 0, i32 1
  store i32 0, i32* %98, align 8
  store %struct.ASN1_VALUE_st* %46, %struct.ASN1_VALUE_st** %0, align 8
  %99 = load i64, i64* %15, align 8
  store i64 %99, i64* %13, align 8
  br label %103

100:                                              ; preds = %77, %94, %45, %41
  %101 = phi %struct.ASN1_VALUE_st* [ %46, %94 ], [ %46, %45 ], [ null, %41 ], [ %46, %77 ]
  call void @ASN1_item_free(%struct.ASN1_VALUE_st* %101, %struct.ASN1_ITEM_st* nonnull @X509_NAME_it) #6
  %102 = bitcast %struct.stack_st_STACK_OF_X509_NAME_ENTRY* %24 to %struct.stack_st*
  call void @sk_pop_free_ex(%struct.stack_st* %102, void (void (i8*)*, i8*)* nonnull @sk_STACK_OF_X509_NAME_ENTRY_call_free_func, void (i8*)* bitcast (void (%struct.stack_st_X509_NAME_ENTRY*)* @local_sk_X509_NAME_ENTRY_pop_free to void (i8*)*)) #6
  call void @ERR_put_error(i32 11, i32 0, i32 12, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.8, i64 0, i64 0), i32 256) #6
  br label %103

103:                                              ; preds = %100, %97
  %104 = phi i32 [ 0, %100 ], [ %95, %97 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #6
  br label %105

105:                                              ; preds = %8, %103
  %106 = phi i32 [ %104, %103 ], [ %20, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #6
  ret i32 %106
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @x509_name_ex_i2d(%struct.ASN1_VALUE_st** nocapture readonly, i8**, %struct.ASN1_ITEM_st* nocapture readnone, i32, i32) #0 {
  %6 = alloca i8*, align 8
  %7 = alloca %struct.ASN1_VALUE_st*, align 8
  %8 = bitcast %struct.ASN1_VALUE_st** %0 to %struct.X509_name_st**
  %9 = load %struct.X509_name_st*, %struct.X509_name_st** %8, align 8
  %10 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %9, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %75, label %13

13:                                               ; preds = %5
  %14 = bitcast %struct.ASN1_VALUE_st** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14)
  %15 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #6
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %16 = tail call %struct.stack_st* @sk_new_null() #6
  %17 = icmp eq %struct.stack_st* %16, null
  br i1 %17, label %63, label %18

18:                                               ; preds = %13
  %19 = bitcast %struct.X509_name_st* %9 to %struct.stack_st**
  %20 = load %struct.stack_st*, %struct.stack_st** %19, align 8
  %21 = tail call i64 @sk_num(%struct.stack_st* %20) #6
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %55, label %27

23:                                               ; preds = %48
  %24 = load %struct.stack_st*, %struct.stack_st** %19, align 8
  %25 = tail call i64 @sk_num(%struct.stack_st* %24) #6
  %26 = icmp ult i64 %54, %25
  br i1 %26, label %27, label %55

27:                                               ; preds = %18, %23
  %28 = phi i64 [ %54, %23 ], [ 0, %18 ]
  %29 = phi i32 [ %50, %23 ], [ -1, %18 ]
  %30 = phi %struct.stack_st_X509_NAME_ENTRY* [ %49, %23 ], [ null, %18 ]
  %31 = load %struct.stack_st*, %struct.stack_st** %19, align 8
  %32 = tail call i8* @sk_value(%struct.stack_st* %31, i64 %28) #6
  %33 = getelementptr inbounds i8, i8* %32, i64 16
  %34 = bitcast i8* %33 to i32*
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %35, %29
  br i1 %36, label %48, label %37

37:                                               ; preds = %27
  %38 = tail call %struct.stack_st* @sk_new_null() #6
  %39 = bitcast %struct.stack_st* %38 to %struct.stack_st_X509_NAME_ENTRY*
  %40 = icmp eq %struct.stack_st* %38, null
  br i1 %40, label %63, label %41

41:                                               ; preds = %37
  %42 = bitcast %struct.stack_st_X509_NAME_ENTRY* %39 to i8*
  %43 = tail call i64 @sk_push(%struct.stack_st* nonnull %16, i8* nonnull %42) #6
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %41
  tail call void @sk_free(%struct.stack_st* nonnull %38) #6
  br label %63

46:                                               ; preds = %41
  %47 = load i32, i32* %34, align 8
  br label %48

48:                                               ; preds = %46, %27
  %49 = phi %struct.stack_st_X509_NAME_ENTRY* [ %39, %46 ], [ %30, %27 ]
  %50 = phi i32 [ %47, %46 ], [ %29, %27 ]
  %51 = bitcast %struct.stack_st_X509_NAME_ENTRY* %49 to %struct.stack_st*
  %52 = tail call i64 @sk_push(%struct.stack_st* %51, i8* %32) #6
  %53 = icmp eq i64 %52, 0
  %54 = add nuw i64 %28, 1
  br i1 %53, label %63, label %23

55:                                               ; preds = %23, %18
  %56 = bitcast %struct.ASN1_VALUE_st** %7 to %struct.stack_st**
  store %struct.stack_st* %16, %struct.stack_st** %56, align 8
  %57 = call i32 @ASN1_item_ex_i2d(%struct.ASN1_VALUE_st** nonnull %7, i8** null, %struct.ASN1_ITEM_st* nonnull @X509_NAME_INTERNAL_it, i32 -1, i32 -1) #6
  %58 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %9, i64 0, i32 2
  %59 = load %struct.buf_mem_st*, %struct.buf_mem_st** %58, align 8
  %60 = sext i32 %57 to i64
  %61 = call i64 @BUF_MEM_grow(%struct.buf_mem_st* %59, i64 %60) #6
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %37, %48, %13, %45, %55
  call void @sk_pop_free_ex(%struct.stack_st* %16, void (void (i8*)*, i8*)* nonnull @sk_STACK_OF_X509_NAME_ENTRY_call_free_func, void (i8*)* bitcast (void (%struct.stack_st_X509_NAME_ENTRY*)* @local_sk_X509_NAME_ENTRY_free to void (i8*)*)) #6
  call void @ERR_put_error(i32 11, i32 0, i32 65, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.8, i64 0, i64 0), i32 323) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  br label %93

64:                                               ; preds = %55
  %65 = load %struct.buf_mem_st*, %struct.buf_mem_st** %58, align 8
  %66 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %65, i64 0, i32 1
  %67 = bitcast i8** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast i8** %6 to i64*
  store i64 %68, i64* %69, align 8
  %70 = call i32 @ASN1_item_ex_i2d(%struct.ASN1_VALUE_st** nonnull %7, i8** nonnull %6, %struct.ASN1_ITEM_st* nonnull @X509_NAME_INTERNAL_it, i32 -1, i32 -1) #6
  call void @sk_pop_free_ex(%struct.stack_st* nonnull %16, void (void (i8*)*, i8*)* nonnull @sk_STACK_OF_X509_NAME_ENTRY_call_free_func, void (i8*)* bitcast (void (%struct.stack_st_X509_NAME_ENTRY*)* @local_sk_X509_NAME_ENTRY_free to void (i8*)*)) #6
  store i32 0, i32* %10, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  %71 = icmp slt i32 %57, 0
  br i1 %71, label %93, label %72

72:                                               ; preds = %64
  %73 = call fastcc i32 @x509_name_canon(%struct.X509_name_st* %9)
  %74 = icmp slt i32 %73, 0
  br i1 %74, label %93, label %75

75:                                               ; preds = %5, %72
  %76 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %9, i64 0, i32 2
  %77 = load %struct.buf_mem_st*, %struct.buf_mem_st** %76, align 8
  %78 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %77, i64 0, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = trunc i64 %79 to i32
  %81 = icmp eq i8** %1, null
  br i1 %81, label %93, label %82

82:                                               ; preds = %75
  %83 = shl i64 %79, 32
  %84 = ashr exact i64 %83, 32
  %85 = icmp eq i64 %83, 0
  br i1 %85, label %90, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %77, i64 0, i32 1
  %88 = load i8*, i8** %87, align 8
  %89 = load i8*, i8** %1, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %89, i8* align 1 %88, i64 %84, i1 false) #6
  br label %90

90:                                               ; preds = %82, %86
  %91 = load i8*, i8** %1, align 8
  %92 = getelementptr inbounds i8, i8* %91, i64 %84
  store i8* %92, i8** %1, align 8
  br label %93

93:                                               ; preds = %63, %90, %75, %72, %64
  %94 = phi i32 [ %57, %64 ], [ %73, %72 ], [ %80, %75 ], [ %80, %90 ], [ -1, %63 ]
  ret i32 %94
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #1

declare %struct.buf_mem_st* @BUF_MEM_new() local_unnamed_addr #1

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #1

declare void @OPENSSL_free(i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare %struct.stack_st* @sk_new_null() local_unnamed_addr #1

declare void @sk_free(%struct.stack_st*) local_unnamed_addr #1

declare void @BUF_MEM_free(%struct.buf_mem_st*) local_unnamed_addr #1

declare void @sk_pop_free_ex(%struct.stack_st*, void (void (i8*)*, i8*)*, void (i8*)*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @sk_X509_NAME_ENTRY_call_free_func(void (i8*)* nocapture, i8*) #4 {
  %3 = bitcast void (i8*)* %0 to void (%struct.X509_name_entry_st*)*
  %4 = bitcast i8* %1 to %struct.X509_name_entry_st*
  tail call void %3(%struct.X509_name_entry_st* %4) #6
  ret void
}

declare i32 @ASN1_item_ex_d2i(%struct.ASN1_VALUE_st**, i8**, i64, %struct.ASN1_ITEM_st*, i32, i32, i8 signext, %struct.ASN1_TLC_st*) local_unnamed_addr #1

declare i64 @BUF_MEM_grow(%struct.buf_mem_st*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @x509_name_canon(%struct.X509_name_st* nocapture) unnamed_addr #0 {
  %2 = alloca %struct.ASN1_VALUE_st*, align 8
  %3 = alloca %struct.ASN1_VALUE_st*, align 8
  %4 = alloca i8*, align 8
  %5 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %6 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %0, i64 0, i32 3
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  tail call void @OPENSSL_free(i8* nonnull %7) #6
  store i8* null, i8** %6, align 8
  br label %10

10:                                               ; preds = %1, %9
  %11 = bitcast %struct.X509_name_st* %0 to %struct.stack_st**
  %12 = load %struct.stack_st*, %struct.stack_st** %11, align 8
  %13 = tail call i64 @sk_num(%struct.stack_st* %12) #6
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %0, i64 0, i32 4
  store i32 0, i32* %16, align 8
  br label %230

17:                                               ; preds = %10
  %18 = tail call %struct.stack_st* @sk_new_null() #6
  %19 = bitcast %struct.stack_st* %18 to %struct.stack_st_STACK_OF_X509_NAME_ENTRY*
  %20 = icmp eq %struct.stack_st* %18, null
  br i1 %20, label %230, label %21

21:                                               ; preds = %17
  %22 = load %struct.stack_st*, %struct.stack_st** %11, align 8
  %23 = tail call i64 @sk_num(%struct.stack_st* %22) #6
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %182, label %29

25:                                               ; preds = %176
  %26 = load %struct.stack_st*, %struct.stack_st** %11, align 8
  %27 = tail call i64 @sk_num(%struct.stack_st* %26) #6
  %28 = icmp ult i64 %181, %27
  br i1 %28, label %29, label %182

29:                                               ; preds = %21, %25
  %30 = phi i64 [ %181, %25 ], [ 0, %21 ]
  %31 = phi i32 [ %52, %25 ], [ -1, %21 ]
  %32 = phi %struct.stack_st_X509_NAME_ENTRY* [ %51, %25 ], [ null, %21 ]
  %33 = load %struct.stack_st*, %struct.stack_st** %11, align 8
  %34 = tail call i8* @sk_value(%struct.stack_st* %33, i64 %30) #6
  %35 = getelementptr inbounds i8, i8* %34, i64 16
  %36 = bitcast i8* %35 to i32*
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %37, %31
  br i1 %38, label %50, label %39

39:                                               ; preds = %29
  %40 = tail call %struct.stack_st* @sk_new_null() #6
  %41 = bitcast %struct.stack_st* %40 to %struct.stack_st_X509_NAME_ENTRY*
  %42 = icmp eq %struct.stack_st* %40, null
  br i1 %42, label %228, label %43

43:                                               ; preds = %39
  %44 = bitcast %struct.stack_st_X509_NAME_ENTRY* %41 to i8*
  %45 = tail call i64 @sk_push(%struct.stack_st* nonnull %18, i8* nonnull %44) #6
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %43
  tail call void @sk_free(%struct.stack_st* nonnull %40) #6
  br label %228

48:                                               ; preds = %43
  %49 = load i32, i32* %36, align 8
  br label %50

50:                                               ; preds = %29, %48
  %51 = phi %struct.stack_st_X509_NAME_ENTRY* [ %41, %48 ], [ %32, %29 ]
  %52 = phi i32 [ %49, %48 ], [ %31, %29 ]
  %53 = tail call %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st* nonnull @X509_NAME_ENTRY_it) #6
  %54 = icmp eq %struct.ASN1_VALUE_st* %53, null
  br i1 %54, label %228, label %55

55:                                               ; preds = %50
  %56 = bitcast %struct.ASN1_VALUE_st* %53 to %struct.X509_name_entry_st*
  %57 = bitcast i8* %34 to %struct.asn1_object_st**
  %58 = load %struct.asn1_object_st*, %struct.asn1_object_st** %57, align 8
  %59 = tail call %struct.asn1_object_st* @OBJ_dup(%struct.asn1_object_st* %58) #6
  %60 = bitcast %struct.ASN1_VALUE_st* %53 to %struct.asn1_object_st**
  store %struct.asn1_object_st* %59, %struct.asn1_object_st** %60, align 8
  %61 = getelementptr inbounds %struct.X509_name_entry_st, %struct.X509_name_entry_st* %56, i64 0, i32 1
  %62 = load %struct.asn1_string_st*, %struct.asn1_string_st** %61, align 8
  %63 = getelementptr inbounds i8, i8* %34, i64 8
  %64 = bitcast i8* %63 to %struct.asn1_string_st**
  %65 = load %struct.asn1_string_st*, %struct.asn1_string_st** %64, align 8
  %66 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %65, i64 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = tail call i64 @ASN1_tag2bit(i32 %67) #6
  %69 = and i64 %68, 10582
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %173, label %71

71:                                               ; preds = %55
  %72 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %62, i64 0, i32 1
  store i32 12, i32* %72, align 4
  %73 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %62, i64 0, i32 2
  %74 = tail call i32 @ASN1_STRING_to_UTF8(i8** %73, %struct.asn1_string_st* %65) #6
  %75 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %62, i64 0, i32 0
  store i32 %74, i32* %75, align 8
  %76 = icmp eq i32 %74, -1
  br i1 %76, label %227, label %77

77:                                               ; preds = %71
  %78 = load i8*, i8** %73, align 8
  %79 = icmp sgt i32 %74, 0
  %80 = ptrtoint i8* %78 to i64
  br i1 %79, label %81, label %168

81:                                               ; preds = %77, %94
  %82 = phi i32 [ %96, %94 ], [ %74, %77 ]
  %83 = phi i8* [ %95, %94 ], [ %78, %77 ]
  %84 = load i8, i8* %83, align 1
  %85 = icmp slt i8 %84, 0
  br i1 %85, label %98, label %86

86:                                               ; preds = %81
  %87 = tail call i16** @__ctype_b_loc() #7
  %88 = load i16*, i16** %87, align 8
  %89 = zext i8 %84 to i64
  %90 = getelementptr inbounds i16, i16* %88, i64 %89
  %91 = load i16, i16* %90, align 2
  %92 = and i16 %91, 8192
  %93 = icmp eq i16 %92, 0
  br i1 %93, label %98, label %94

94:                                               ; preds = %86
  %95 = getelementptr inbounds i8, i8* %83, i64 1
  %96 = add nsw i32 %82, -1
  %97 = icmp sgt i32 %96, 0
  br i1 %97, label %81, label %168

98:                                               ; preds = %86, %81
  %99 = sext i32 %82 to i64
  %100 = getelementptr inbounds i8, i8* %83, i64 %99
  br label %101

101:                                              ; preds = %116, %98
  %102 = phi i32 [ %117, %116 ], [ %82, %98 ]
  %103 = phi i8* [ %104, %116 ], [ %100, %98 ]
  %104 = getelementptr inbounds i8, i8* %103, i64 -1
  %105 = load i8, i8* %104, align 1
  %106 = icmp slt i8 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %108, %101
  br label %119

108:                                              ; preds = %101
  %109 = tail call i16** @__ctype_b_loc() #7
  %110 = load i16*, i16** %109, align 8
  %111 = zext i8 %105 to i64
  %112 = getelementptr inbounds i16, i16* %110, i64 %111
  %113 = load i16, i16* %112, align 2
  %114 = and i16 %113, 8192
  %115 = icmp eq i16 %114, 0
  br i1 %115, label %107, label %116

116:                                              ; preds = %108
  %117 = add nsw i32 %102, -1
  %118 = icmp sgt i32 %117, 0
  br i1 %118, label %101, label %168

119:                                              ; preds = %107, %162
  %120 = phi i8 [ %163, %162 ], [ %84, %107 ]
  %121 = phi i32 [ %159, %162 ], [ 0, %107 ]
  %122 = phi i8* [ %158, %162 ], [ %83, %107 ]
  %123 = phi i8* [ %160, %162 ], [ %78, %107 ]
  %124 = zext i8 %120 to i32
  %125 = icmp slt i8 %120, 0
  br i1 %125, label %126, label %129

126:                                              ; preds = %119
  %127 = getelementptr inbounds i8, i8* %122, i64 1
  store i8 %120, i8* %123, align 1
  %128 = add nsw i32 %121, 1
  br label %157

129:                                              ; preds = %119
  %130 = tail call i16** @__ctype_b_loc() #7
  %131 = load i16*, i16** %130, align 8
  %132 = zext i8 %120 to i64
  %133 = getelementptr inbounds i16, i16* %131, i64 %132
  %134 = load i16, i16* %133, align 2
  %135 = and i16 %134, 8192
  %136 = icmp eq i16 %135, 0
  br i1 %136, label %152, label %137

137:                                              ; preds = %129
  store i8 32, i8* %123, align 1
  br label %138

138:                                              ; preds = %145, %137
  %139 = phi i8* [ %122, %137 ], [ %141, %145 ]
  %140 = phi i32 [ %121, %137 ], [ %142, %145 ]
  %141 = getelementptr inbounds i8, i8* %139, i64 1
  %142 = add nsw i32 %140, 1
  %143 = load i8, i8* %141, align 1
  %144 = icmp slt i8 %143, 0
  br i1 %144, label %157, label %145

145:                                              ; preds = %138
  %146 = load i16*, i16** %130, align 8
  %147 = zext i8 %143 to i64
  %148 = getelementptr inbounds i16, i16* %146, i64 %147
  %149 = load i16, i16* %148, align 2
  %150 = and i16 %149, 8192
  %151 = icmp eq i16 %150, 0
  br i1 %151, label %157, label %138

152:                                              ; preds = %129
  %153 = tail call i32 @OPENSSL_tolower(i32 %124) #6
  %154 = trunc i32 %153 to i8
  store i8 %154, i8* %123, align 1
  %155 = getelementptr inbounds i8, i8* %122, i64 1
  %156 = add nsw i32 %121, 1
  br label %157

157:                                              ; preds = %145, %138, %152, %126
  %158 = phi i8* [ %127, %126 ], [ %155, %152 ], [ %141, %138 ], [ %141, %145 ]
  %159 = phi i32 [ %128, %126 ], [ %156, %152 ], [ %142, %138 ], [ %142, %145 ]
  %160 = getelementptr inbounds i8, i8* %123, i64 1
  %161 = icmp slt i32 %159, %102
  br i1 %161, label %162, label %164

162:                                              ; preds = %157
  %163 = load i8, i8* %158, align 1
  br label %119

164:                                              ; preds = %157
  %165 = bitcast i8** %73 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = ptrtoint i8* %160 to i64
  br label %168

168:                                              ; preds = %94, %116, %77, %164
  %169 = phi i64 [ %167, %164 ], [ %80, %77 ], [ %80, %116 ], [ %80, %94 ]
  %170 = phi i64 [ %166, %164 ], [ %80, %77 ], [ %80, %116 ], [ %80, %94 ]
  %171 = sub i64 %169, %170
  %172 = trunc i64 %171 to i32
  store i32 %172, i32* %75, align 8
  br label %176

173:                                              ; preds = %55
  %174 = tail call i32 @ASN1_STRING_copy(%struct.asn1_string_st* %62, %struct.asn1_string_st* %65) #6
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %227, label %176

176:                                              ; preds = %168, %173
  %177 = bitcast %struct.stack_st_X509_NAME_ENTRY* %51 to %struct.stack_st*
  %178 = bitcast %struct.ASN1_VALUE_st* %53 to i8*
  %179 = tail call i64 @sk_push(%struct.stack_st* %177, i8* nonnull %178) #6
  %180 = icmp eq i64 %179, 0
  %181 = add nuw i64 %30, 1
  br i1 %180, label %227, label %25

182:                                              ; preds = %25, %21
  %183 = bitcast %struct.ASN1_VALUE_st** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %183) #6
  store %struct.ASN1_VALUE_st* inttoptr (i64 -6148914691236517206 to %struct.ASN1_VALUE_st*), %struct.ASN1_VALUE_st** %3, align 8
  %184 = bitcast %struct.stack_st_STACK_OF_X509_NAME_ENTRY* %19 to %struct.stack_st_ASN1_VALUE*
  %185 = bitcast %struct.stack_st_ASN1_VALUE* %184 to %struct.stack_st*
  %186 = tail call i64 @sk_num(%struct.stack_st* nonnull %185) #6
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %188, label %189

188:                                              ; preds = %182
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %183) #6
  br label %205

189:                                              ; preds = %182
  %190 = bitcast %struct.ASN1_VALUE_st** %3 to i8**
  br label %191

191:                                              ; preds = %198, %189
  %192 = phi i64 [ 0, %189 ], [ %200, %198 ]
  %193 = phi i32 [ 0, %189 ], [ %199, %198 ]
  %194 = call i8* @sk_value(%struct.stack_st* nonnull %185, i64 %192) #6
  store i8* %194, i8** %190, align 8
  %195 = call i32 @ASN1_item_ex_i2d(%struct.ASN1_VALUE_st** nonnull %3, i8** null, %struct.ASN1_ITEM_st* nonnull @X509_NAME_ENTRIES_it, i32 -1, i32 -1) #6
  %196 = icmp slt i32 %195, 0
  br i1 %196, label %197, label %198

197:                                              ; preds = %191
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %183) #6
  br label %228

198:                                              ; preds = %191
  %199 = add nsw i32 %195, %193
  %200 = add nuw i64 %192, 1
  %201 = call i64 @sk_num(%struct.stack_st* nonnull %185) #6
  %202 = icmp ult i64 %200, %201
  br i1 %202, label %191, label %203

203:                                              ; preds = %198
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %183) #6
  %204 = icmp slt i32 %199, 0
  br i1 %204, label %228, label %205

205:                                              ; preds = %188, %203
  %206 = phi i32 [ 0, %188 ], [ %199, %203 ]
  %207 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %0, i64 0, i32 4
  store i32 %206, i32* %207, align 8
  %208 = sext i32 %206 to i64
  %209 = call i8* @OPENSSL_malloc(i64 %208) #6
  store i8* %209, i8** %4, align 8
  %210 = icmp eq i8* %209, null
  br i1 %210, label %228, label %211

211:                                              ; preds = %205
  store i8* %209, i8** %6, align 8
  %212 = bitcast %struct.ASN1_VALUE_st** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %212) #6
  store %struct.ASN1_VALUE_st* inttoptr (i64 -6148914691236517206 to %struct.ASN1_VALUE_st*), %struct.ASN1_VALUE_st** %2, align 8
  %213 = call i64 @sk_num(%struct.stack_st* nonnull %185) #6
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %226, label %215

215:                                              ; preds = %211
  %216 = bitcast %struct.ASN1_VALUE_st** %2 to i8**
  br label %217

217:                                              ; preds = %222, %215
  %218 = phi i64 [ 0, %215 ], [ %223, %222 ]
  %219 = call i8* @sk_value(%struct.stack_st* nonnull %185, i64 %218) #6
  store i8* %219, i8** %216, align 8
  %220 = call i32 @ASN1_item_ex_i2d(%struct.ASN1_VALUE_st** nonnull %2, i8** nonnull %4, %struct.ASN1_ITEM_st* nonnull @X509_NAME_ENTRIES_it, i32 -1, i32 -1) #6
  %221 = icmp slt i32 %220, 0
  br i1 %221, label %226, label %222

222:                                              ; preds = %217
  %223 = add nuw i64 %218, 1
  %224 = call i64 @sk_num(%struct.stack_st* nonnull %185) #6
  %225 = icmp ult i64 %223, %224
  br i1 %225, label %217, label %226

226:                                              ; preds = %217, %222, %211
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %212) #6
  br label %228

227:                                              ; preds = %176, %71, %173
  tail call void @ASN1_item_free(%struct.ASN1_VALUE_st* nonnull %53, %struct.ASN1_ITEM_st* nonnull @X509_NAME_ENTRY_it) #6
  br label %228

228:                                              ; preds = %50, %39, %227, %47, %203, %226, %205, %197
  %229 = phi i32 [ 0, %227 ], [ 0, %197 ], [ 0, %205 ], [ 1, %226 ], [ 0, %203 ], [ 0, %47 ], [ 0, %39 ], [ 0, %50 ]
  call void @sk_pop_free_ex(%struct.stack_st* nonnull %18, void (void (i8*)*, i8*)* nonnull @sk_STACK_OF_X509_NAME_ENTRY_call_free_func, void (i8*)* bitcast (void (%struct.stack_st_X509_NAME_ENTRY*)* @local_sk_X509_NAME_ENTRY_pop_free to void (i8*)*)) #6
  br label %230

230:                                              ; preds = %17, %228, %15
  %231 = phi i32 [ 1, %15 ], [ %229, %228 ], [ 0, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  ret i32 %231
}

; Function Attrs: nounwind ssp uwtable
define internal void @local_sk_X509_NAME_ENTRY_free(%struct.stack_st_X509_NAME_ENTRY*) #0 {
  %2 = bitcast %struct.stack_st_X509_NAME_ENTRY* %0 to %struct.stack_st*
  tail call void @sk_free(%struct.stack_st* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @local_sk_X509_NAME_ENTRY_pop_free(%struct.stack_st_X509_NAME_ENTRY*) #0 {
  %2 = bitcast %struct.stack_st_X509_NAME_ENTRY* %0 to %struct.stack_st*
  tail call void @sk_pop_free_ex(%struct.stack_st* %2, void (void (i8*)*, i8*)* nonnull @sk_X509_NAME_ENTRY_call_free_func, void (i8*)* bitcast (void (%struct.X509_name_entry_st*)* @X509_NAME_ENTRY_free to void (i8*)*)) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare i64 @sk_num(%struct.stack_st*) local_unnamed_addr #1

declare i8* @sk_value(%struct.stack_st*, i64) local_unnamed_addr #1

declare i64 @sk_push(%struct.stack_st*, i8*) local_unnamed_addr #1

declare i8* @sk_set(%struct.stack_st*, i64, i8*) local_unnamed_addr #1

declare %struct.asn1_object_st* @OBJ_dup(%struct.asn1_object_st*) local_unnamed_addr #1

declare i64 @ASN1_tag2bit(i32) local_unnamed_addr #1

declare i32 @ASN1_STRING_copy(%struct.asn1_string_st*, %struct.asn1_string_st*) local_unnamed_addr #1

declare i32 @ASN1_STRING_to_UTF8(i8**, %struct.asn1_string_st*) local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() local_unnamed_addr #5

declare i32 @OPENSSL_tolower(i32) local_unnamed_addr #1

declare i32 @ASN1_item_ex_i2d(%struct.ASN1_VALUE_st**, i8**, %struct.ASN1_ITEM_st*, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @sk_STACK_OF_X509_NAME_ENTRY_call_free_func(void (i8*)* nocapture, i8*) #4 {
  %3 = bitcast void (i8*)* %0 to void (%struct.stack_st_X509_NAME_ENTRY*)*
  %4 = bitcast i8* %1 to %struct.stack_st_X509_NAME_ENTRY*
  tail call void %3(%struct.stack_st_X509_NAME_ENTRY* %4) #6
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
