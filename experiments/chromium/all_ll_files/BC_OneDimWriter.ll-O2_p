; ModuleID = '../../third_party/pdfium/fxbarcode/oned/BC_OneDimWriter.cpp'
source_filename = "../../third_party/pdfium/fxbarcode/oned/BC_OneDimWriter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector.101" = type { %"class.std::__1::__vector_base.102" }
%"class.std::__1::__vector_base.102" = type { float*, float*, %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { float* }
%class.CBC_OneDimWriter = type <{ %class.CBC_Writer.base, i8, i8, i8, i8, [6 x i8], %"class.fxcrt::UnownedPtr.0", float, i32, i32, i8, [3 x i8], i32, [4 x i8], i64, %"class.std::__1::vector.48", i32, i32, float, [4 x i8] }>
%class.CBC_Writer.base = type <{ i32 (...)**, i32, i32, i32, i32, i32, i16 }>
%"class.fxcrt::UnownedPtr.0" = type { %class.CFX_Font* }
%class.CFX_Font = type <{ %"class.fxcrt::RetainPtr", %"class.std::__1::unique_ptr.2", %"class.fxcrt::RetainPtr.6", %"class.fxcrt::RetainPtr.28", %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.40", %"class.std::__1::vector", %"class.pdfium::span.46", i8, i8, [6 x i8] }>
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.IFX_SeekableReadStream* }
%class.IFX_SeekableReadStream = type opaque
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %struct.FT_StreamRec_* }
%struct.FT_StreamRec_ = type { i8*, i64, i64, %union.FT_StreamDesc_, %union.FT_StreamDesc_, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, void (%struct.FT_StreamRec_*)*, %struct.FT_MemoryRec_*, i8*, i8* }
%union.FT_StreamDesc_ = type { i64 }
%struct.FT_MemoryRec_ = type { i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }
%"class.fxcrt::RetainPtr.6" = type { %"class.std::__1::unique_ptr.7" }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %class.CFX_Face* }
%class.CFX_Face = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.16", %"class.fxcrt::RetainPtr.20" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.10", %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { i64 }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %struct.FT_FaceRec_* }
%struct.FT_FaceRec_ = type { i64, i64, i64, i64, i64, i8*, i8*, i32, %struct.FT_Bitmap_Size_*, i32, %struct.FT_CharMapRec_**, %struct.FT_Generic_, %struct.FT_BBox_, i16, i16, i16, i16, i16, i16, i16, i16, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, %struct.FT_CharMapRec_*, %struct.FT_DriverRec_*, %struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.FT_ListRec_, %struct.FT_Generic_, i8*, %struct.FT_Face_InternalRec_* }
%struct.FT_Bitmap_Size_ = type { i16, i16, i64, i64, i64 }
%struct.FT_BBox_ = type { i64, i64, i64, i64 }
%struct.FT_GlyphSlotRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Generic_, %struct.FT_Glyph_Metrics_, i64, i64, %struct.FT_Vector_, i32, %struct.FT_Bitmap_, i32, i32, %struct.FT_Outline_, i32, %struct.FT_SubGlyphRec_*, i8*, i64, i64, i64, i8*, %struct.FT_Slot_InternalRec_* }
%struct.FT_LibraryRec_ = type opaque
%struct.FT_Glyph_Metrics_ = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.FT_Vector_ = type { i64, i64 }
%struct.FT_Bitmap_ = type { i32, i32, i32, i8*, i16, i8, i8, i8* }
%struct.FT_Outline_ = type { i16, i16, %struct.FT_Vector_*, i8*, i16*, i32 }
%struct.FT_SubGlyphRec_ = type opaque
%struct.FT_Slot_InternalRec_ = type opaque
%struct.FT_SizeRec_ = type { %struct.FT_FaceRec_*, %struct.FT_Generic_, %struct.FT_Size_Metrics_, %struct.FT_Size_InternalRec_* }
%struct.FT_Size_Metrics_ = type { i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.FT_Size_InternalRec_ = type opaque
%struct.FT_CharMapRec_ = type { %struct.FT_FaceRec_*, i32, i16, i16 }
%struct.FT_DriverRec_ = type opaque
%struct.FT_ListRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_* }
%struct.FT_ListNodeRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_*, i8* }
%struct.FT_Generic_ = type { i8*, void (i8*)* }
%struct.FT_Face_InternalRec_ = type opaque
%"class.fxcrt::RetainPtr.20" = type { %"class.std::__1::unique_ptr.21" }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.fxcrt::Retainable"* }
%"class.fxcrt::RetainPtr.28" = type { %"class.std::__1::unique_ptr.29" }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %class.CFX_GlyphCache* }
%class.CFX_GlyphCache = type opaque
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %class.CFX_SubstFont* }
%class.CFX_SubstFont = type opaque
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { i8* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"class.pdfium::span.46" = type { %"class.fxcrt::UnownedPtr.47", i64 }
%"class.fxcrt::UnownedPtr.47" = type { i8* }
%"class.std::__1::vector.48" = type { %"class.std::__1::__vector_base.49" }
%"class.std::__1::__vector_base.49" = type { %class.CFX_PathData*, %class.CFX_PathData*, %"class.std::__1::__compressed_pair.57" }
%class.CFX_PathData = type { %"class.std::__1::vector.50" }
%"class.std::__1::vector.50" = type { %"class.std::__1::__vector_base.51" }
%"class.std::__1::__vector_base.51" = type { %class.FX_PATHPOINT*, %class.FX_PATHPOINT*, %"class.std::__1::__compressed_pair.52" }
%class.FX_PATHPOINT = type <{ %class.CFX_PTemplate, i8, i8, [2 x i8] }>
%class.CFX_PTemplate = type { float, float }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %class.FX_PATHPOINT* }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %class.CFX_PathData* }
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr", i64 }
%"class.fxcrt::UnownedPtr" = type { i32* }
%class.CBC_Writer = type <{ i32 (...)**, i32, i32, i32, i32, i32, i16, [2 x i8] }>
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.62" }
%"class.fxcrt::RetainPtr.62" = type { %"class.std::__1::unique_ptr.63" }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%class.TextCharPos = type { %class.CFX_PTemplate, i32, i32, i32, i32, i8, i8, [4 x float] }
%"class.std::__1::vector.75" = type { %"class.std::__1::__vector_base.76" }
%"class.std::__1::__vector_base.76" = type { i32*, i32*, %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { i32* }
%class.CFX_UnicodeEncodingEx = type <{ %class.CFX_UnicodeEncoding, i32, [4 x i8] }>
%class.CFX_UnicodeEncoding = type { i32 (...)**, %"class.fxcrt::UnownedPtr.71" }
%"class.fxcrt::UnownedPtr.71" = type { %class.CFX_Font* }
%"class.std::__1::__vector_base_common" = type { i8 }
%class.CFX_RenderDevice = type { i32 (...)**, %"class.fxcrt::RetainPtr.82", i32, i32, i32, i32, i8, %struct.FX_RECT, %"class.std::__1::unique_ptr.88" }
%"class.fxcrt::RetainPtr.82" = type { %"class.std::__1::unique_ptr.83" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %class.CFX_DIBitmap* }
%class.CFX_DIBitmap = type opaque
%struct.FX_RECT = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %class.RenderDeviceDriverIface* }
%class.RenderDeviceDriverIface = type { i32 (...)** }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%class.CFX_FloatRect = type { float, float, float, float }
%struct.CFX_TextRenderOptions = type <{ i32, i8, i8, [2 x i8] }>
%"class.std::__1::vector.94" = type { %"class.std::__1::__vector_base.95" }
%"class.std::__1::__vector_base.95" = type { %class.TextCharPos*, %class.TextCharPos*, %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %class.TextCharPos* }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector.101" }
%struct.CFX_FillRenderOptions = type { i8, i8 }

$_ZNSt3__16vectorI12CFX_PathDataNS_9allocatorIS1_EEE7reserveEm = comdat any

$_ZNSt3__16vectorI12CFX_PathDataNS_9allocatorIS1_EEE24__emplace_back_slow_pathIJEEEvDpOT_ = comdat any

@_ZTV16CBC_OneDimWriter = hidden unnamed_addr constant { [26 x i8*] } { [26 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CBC_OneDimWriter*)* @_ZN16CBC_OneDimWriterD2Ev to i8*), i8* bitcast (void (%class.CBC_OneDimWriter*)* @_ZN16CBC_OneDimWriterD0Ev to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i32)* @_ZN10CBC_Writer15SetCharEncodingEi to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i32)* @_ZN10CBC_Writer15SetModuleHeightEi to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i32)* @_ZN10CBC_Writer14SetModuleWidthEi to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i32)* @_ZN10CBC_Writer9SetHeightEi to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i32)* @_ZN10CBC_Writer8SetWidthEi to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i8)* @_ZN10CBC_Writer15SetTextLocationE11BC_TEXT_LOC to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i8)* @_ZN10CBC_Writer18SetWideNarrowRatioEa to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i8)* @_ZN10CBC_Writer12SetStartCharEc to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i8)* @_ZN10CBC_Writer10SetEndCharEc to i8*), i8* bitcast (i1 (%class.CBC_Writer*, i32)* @_ZN10CBC_Writer23SetErrorCorrectionLevelEi to i8*), i8* bitcast (i1 (%class.CBC_OneDimWriter*, %"class.fxcrt::StringViewTemplate"*, i8*, i32)* @_ZN16CBC_OneDimWriter12RenderResultEN5fxcrt18StringViewTemplateIwEEPhi to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.CBC_OneDimWriter*, i1)* @_ZN16CBC_OneDimWriter16SetPrintChecksumEb to i8*), i8* bitcast (void (%class.CBC_OneDimWriter*, i32)* @_ZN16CBC_OneDimWriter13SetDataLengthEi to i8*), i8* bitcast (void (%class.CBC_OneDimWriter*, i1)* @_ZN16CBC_OneDimWriter15SetCalcChecksumEb to i8*), i8* bitcast (void (%class.CBC_OneDimWriter*, float)* @_ZN16CBC_OneDimWriter11SetFontSizeEf to i8*), i8* bitcast (void (%class.CBC_OneDimWriter*, i32)* @_ZN16CBC_OneDimWriter12SetFontStyleEi to i8*), i8* bitcast (void (%class.CBC_OneDimWriter*, i32)* @_ZN16CBC_OneDimWriter12SetFontColorEj to i8*), i8* bitcast (i8* (%class.CBC_OneDimWriter*, %"class.fxcrt::ByteString"*, i32, i32*, i32*, i32)* @_ZN16CBC_OneDimWriter14EncodeWithHintERKN5fxcrt10ByteStringE8BCFORMATRiS5_i to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%class.CBC_OneDimWriter*, %"class.fxcrt::StringViewTemplate"*, %class.CFX_RenderDevice*, %class.CFX_Matrix*, i32, i32)* @_ZN16CBC_OneDimWriter9ShowCharsEN5fxcrt18StringViewTemplateIwEEP16CFX_RenderDeviceRK10CFX_Matrixii to i8*)] }, align 8
@__const._ZN16CBC_OneDimWriter18RenderDeviceResultEP16CFX_RenderDeviceRK10CFX_MatrixN5fxcrt18StringViewTemplateIwEE.data = private unnamed_addr constant { i8, i8, [2 x i8], float, float, float, %"class.std::__1::vector.101" } { i8 -86, i8 -86, [2 x i8] c"\AA\AA", float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %"class.std::__1::vector.101" { %"class.std::__1::__vector_base.102" { float* inttoptr (i64 -6148914691236517206 to float*), float* inttoptr (i64 -6148914691236517206 to float*), %"class.std::__1::__compressed_pair.103" { %"struct.std::__1::__compressed_pair_elem.104" { float* inttoptr (i64 -6148914691236517206 to float*) } } } } }, align 8

@_ZN16CBC_OneDimWriterD1Ev = hidden unnamed_addr alias void (%class.CBC_OneDimWriter*), void (%class.CBC_OneDimWriter*)* @_ZN16CBC_OneDimWriterD2Ev

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN16CBC_OneDimWriter19HasValidContentSizeEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::StringViewTemplate"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %0, i64 0, i32 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, -1
  %5 = icmp ult i64 %4, 8192
  ret i1 %5
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CBC_OneDimWriterC2Ev(%class.CBC_OneDimWriter*) unnamed_addr #2 align 2 {
  %2 = bitcast %class.CBC_OneDimWriter* %0 to %class.CBC_Writer*
  tail call void @_ZN10CBC_WriterC2Ev(%class.CBC_Writer* %2) #16
  %3 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTV16CBC_OneDimWriter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 1
  store i8 1, i8* %4, align 2
  %5 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 2
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 3
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 4
  store i8 0, i8* %7, align 1
  %8 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 6, i32 0
  store %class.CFX_Font* null, %class.CFX_Font** %8, align 8
  %9 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 7
  store float 1.000000e+01, float* %9, align 8
  %10 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 8
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 9
  store i32 -16777216, i32* %11, align 8
  %12 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 10
  store i8 4, i8* %12, align 4
  %13 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 12
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 14
  %15 = bitcast i64* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 32, i1 false)
  ret void
}

declare void @_ZN10CBC_WriterC2Ev(%class.CBC_Writer*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CBC_OneDimWriterD2Ev(%class.CBC_OneDimWriter*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTV16CBC_OneDimWriter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 15
  %4 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %3, i64 0, i32 0, i32 0
  %5 = load %class.CFX_PathData*, %class.CFX_PathData** %4, align 8
  %6 = icmp eq %class.CFX_PathData* %5, null
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = bitcast %class.CFX_PathData* %5 to i8*
  %9 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 15, i32 0, i32 1
  %10 = load %class.CFX_PathData*, %class.CFX_PathData** %9, align 8
  %11 = icmp eq %class.CFX_PathData* %10, %5
  br i1 %11, label %19, label %12

12:                                               ; preds = %7, %12
  %13 = phi %class.CFX_PathData* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %class.CFX_PathData, %class.CFX_PathData* %13, i64 -1
  tail call void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData* %14) #16
  %15 = icmp eq %class.CFX_PathData* %14, %5
  br i1 %15, label %16, label %12

16:                                               ; preds = %12
  %17 = bitcast %"class.std::__1::vector.48"* %3 to i8**
  %18 = load i8*, i8** %17, align 8
  br label %19

19:                                               ; preds = %16, %7
  %20 = phi i8* [ %18, %16 ], [ %8, %7 ]
  store %class.CFX_PathData* %5, %class.CFX_PathData** %9, align 8
  tail call void @_ZdlPv(i8* %20) #17
  br label %21

21:                                               ; preds = %1, %19
  %22 = bitcast %class.CBC_OneDimWriter* %0 to %class.CBC_Writer*
  tail call void @_ZN10CBC_WriterD2Ev(%class.CBC_Writer* %22) #16
  ret void
}

; Function Attrs: nounwind
declare void @_ZN10CBC_WriterD2Ev(%class.CBC_Writer*) unnamed_addr #4

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN16CBC_OneDimWriterD0Ev(%class.CBC_OneDimWriter* nocapture readnone) unnamed_addr #5 align 2 {
  tail call void @llvm.trap() #18
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN16CBC_OneDimWriter16SetPrintChecksumEb(%class.CBC_OneDimWriter* nocapture, i1 zeroext) unnamed_addr #7 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 1
  store i8 %3, i8* %4, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN16CBC_OneDimWriter13SetDataLengthEi(%class.CBC_OneDimWriter* nocapture, i32) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 12
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN16CBC_OneDimWriter15SetCalcChecksumEb(%class.CBC_OneDimWriter* nocapture, i1 zeroext) unnamed_addr #7 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 2
  store i8 %3, i8* %4, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN16CBC_OneDimWriter7SetFontEP8CFX_Font(%class.CBC_OneDimWriter* nocapture, %class.CFX_Font*) local_unnamed_addr #7 align 2 {
  %3 = icmp eq %class.CFX_Font* %1, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 6, i32 0
  store %class.CFX_Font* %1, %class.CFX_Font** %5, align 8
  br label %6

6:                                                ; preds = %2, %4
  %7 = phi i1 [ true, %4 ], [ false, %2 ]
  ret i1 %7
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN16CBC_OneDimWriter11SetFontSizeEf(%class.CBC_OneDimWriter* nocapture, float) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 7
  store float %1, float* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN16CBC_OneDimWriter12SetFontStyleEi(%class.CBC_OneDimWriter* nocapture, i32) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 8
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN16CBC_OneDimWriter12SetFontColorEj(%class.CBC_OneDimWriter* nocapture, i32) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 9
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN16CBC_OneDimWriter14EncodeWithHintERKN5fxcrt10ByteStringE8BCFORMATRiS5_i(%class.CBC_OneDimWriter*, %"class.fxcrt::ByteString"* dereferenceable(8), i32, i32* dereferenceable(4), i32* nocapture dereferenceable(4), i32) unnamed_addr #2 align 2 {
  store i32 1, i32* %4, align 4
  %7 = bitcast %class.CBC_OneDimWriter* %0 to i8* (%class.CBC_OneDimWriter*, %"class.fxcrt::ByteString"*, i32*)***
  %8 = load i8* (%class.CBC_OneDimWriter*, %"class.fxcrt::ByteString"*, i32*)**, i8* (%class.CBC_OneDimWriter*, %"class.fxcrt::ByteString"*, i32*)*** %7, align 8
  %9 = getelementptr inbounds i8* (%class.CBC_OneDimWriter*, %"class.fxcrt::ByteString"*, i32*)*, i8* (%class.CBC_OneDimWriter*, %"class.fxcrt::ByteString"*, i32*)** %8, i64 22
  %10 = load i8* (%class.CBC_OneDimWriter*, %"class.fxcrt::ByteString"*, i32*)*, i8* (%class.CBC_OneDimWriter*, %"class.fxcrt::ByteString"*, i32*)** %9, align 8
  %11 = tail call i8* %10(%class.CBC_OneDimWriter* %0, %"class.fxcrt::ByteString"* dereferenceable(8) %1, i32* dereferenceable(4) %3) #16
  ret i8* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN16CBC_OneDimWriter6EncodeERKN5fxcrt10ByteStringE8BCFORMATRiS5_(%class.CBC_OneDimWriter*, %"class.fxcrt::ByteString"* dereferenceable(8), i32, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #2 align 2 {
  %6 = bitcast %class.CBC_OneDimWriter* %0 to i8* (%class.CBC_OneDimWriter*, %"class.fxcrt::ByteString"*, i32, i32*, i32*, i32)***
  %7 = load i8* (%class.CBC_OneDimWriter*, %"class.fxcrt::ByteString"*, i32, i32*, i32*, i32)**, i8* (%class.CBC_OneDimWriter*, %"class.fxcrt::ByteString"*, i32, i32*, i32*, i32)*** %6, align 8
  %8 = getelementptr inbounds i8* (%class.CBC_OneDimWriter*, %"class.fxcrt::ByteString"*, i32, i32*, i32*, i32)*, i8* (%class.CBC_OneDimWriter*, %"class.fxcrt::ByteString"*, i32, i32*, i32*, i32)** %7, i64 21
  %9 = load i8* (%class.CBC_OneDimWriter*, %"class.fxcrt::ByteString"*, i32, i32*, i32*, i32)*, i8* (%class.CBC_OneDimWriter*, %"class.fxcrt::ByteString"*, i32, i32*, i32*, i32)** %8, align 8
  %10 = tail call i8* %9(%class.CBC_OneDimWriter* %0, %"class.fxcrt::ByteString"* dereferenceable(8) %1, i32 %2, i32* dereferenceable(4) %3, i32* dereferenceable(4) %4, i32 0) #16
  ret i8* %10
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN16CBC_OneDimWriter13AppendPatternEPhiPKaib(%class.CBC_OneDimWriter* nocapture readnone, i8* nocapture, i32, i8* nocapture readonly, i32, i1 zeroext) local_unnamed_addr #8 align 2 {
  %7 = icmp sgt i32 %4, 0
  br i1 %7, label %8, label %21

8:                                                ; preds = %6
  %9 = zext i32 %4 to i64
  br label %10

10:                                               ; preds = %25, %8
  %11 = phi i64 [ 0, %8 ], [ %31, %25 ]
  %12 = phi i32 [ 0, %8 ], [ %29, %25 ]
  %13 = phi i1 [ %5, %8 ], [ %30, %25 ]
  %14 = phi i32 [ %2, %8 ], [ %27, %25 ]
  %15 = getelementptr inbounds i8, i8* %3, i64 %11
  %16 = load i8, i8* %15, align 1
  %17 = icmp sgt i8 %16, 0
  br i1 %17, label %18, label %25

18:                                               ; preds = %10
  %19 = zext i1 %13 to i8
  %20 = sext i32 %14 to i64
  br label %33

21:                                               ; preds = %25, %6
  %22 = phi i32 [ 0, %6 ], [ %29, %25 ]
  ret i32 %22

23:                                               ; preds = %33
  %24 = trunc i64 %36 to i32
  br label %25

25:                                               ; preds = %10, %23
  %26 = phi i8 [ %39, %23 ], [ %16, %10 ]
  %27 = phi i32 [ %24, %23 ], [ %14, %10 ]
  %28 = sext i8 %26 to i32
  %29 = add nsw i32 %12, %28
  %30 = xor i1 %13, true
  %31 = add nuw nsw i64 %11, 1
  %32 = icmp eq i64 %31, %9
  br i1 %32, label %21, label %10

33:                                               ; preds = %18, %33
  %34 = phi i64 [ %20, %18 ], [ %36, %33 ]
  %35 = phi i32 [ 0, %18 ], [ %38, %33 ]
  %36 = add nsw i64 %34, 1
  %37 = getelementptr inbounds i8, i8* %1, i64 %34
  store i8 %19, i8* %37, align 1
  %38 = add nuw nsw i32 %35, 1
  %39 = load i8, i8* %15, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp slt i32 %38, %40
  br i1 %41, label %33, label %23
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CBC_OneDimWriter12CalcTextInfoERKN5fxcrt10ByteStringEP11TextCharPosP8CFX_FontfiRf(%class.CBC_OneDimWriter* nocapture readnone, %"class.fxcrt::ByteString"* nocapture readonly dereferenceable(8), %class.TextCharPos*, %class.CFX_Font*, float, i32, float* nocapture dereferenceable(4)) local_unnamed_addr #2 align 2 {
  %8 = alloca %"class.std::__1::vector.75", align 8
  %9 = tail call %class.CFX_UnicodeEncodingEx* @_Z23FX_CreateFontEncodingExP8CFX_Font(%class.CFX_Font* %3) #16
  %10 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %10, align 8
  %12 = icmp eq %"class.fxcrt::StringDataTemplate"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %11, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  br label %16

16:                                               ; preds = %7, %13
  %17 = phi i64 [ %15, %13 ], [ 0, %7 ]
  %18 = bitcast %"class.std::__1::vector.75"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #16
  %19 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %8, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %8, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #16
  %22 = icmp eq i64 %17, 0
  br i1 %22, label %43, label %23

23:                                               ; preds = %16
  %24 = icmp ugt i64 %17, 4611686018427387903
  br i1 %24, label %25, label %27

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.75"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %26) #18
  unreachable

27:                                               ; preds = %23
  %28 = shl i64 %17, 2
  %29 = tail call i8* @_Znwm(i64 %28) #17
  %30 = bitcast i8* %29 to i32*
  %31 = bitcast %"class.std::__1::vector.75"* %8 to i8**
  store i8* %29, i8** %31, align 8
  %32 = getelementptr inbounds i32, i32* %30, i64 %17
  store i32* %32, i32** %21, align 8
  %33 = bitcast i32** %20 to i64*
  %34 = ptrtoint i8* %29 to i64
  %35 = add nsw i64 %17, -1
  %36 = getelementptr i32, i32* %30, i64 %35
  %37 = ptrtoint i32* %36 to i64
  %38 = sub i64 4, %34
  %39 = add i64 %38, %37
  %40 = and i64 %39, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %29, i8 0, i64 %40, i1 false) #16
  %41 = ptrtoint i32* %32 to i64
  store i64 %41, i64* %33, align 8
  %42 = icmp eq %"class.fxcrt::StringDataTemplate"* %11, null
  br i1 %42, label %83, label %75

43:                                               ; preds = %84, %16
  %44 = phi i32* [ null, %16 ], [ %90, %84 ]
  %45 = phi float [ 0.000000e+00, %16 ], [ %99, %84 ]
  store float %45, float* %6, align 4
  %46 = fsub float %4, %45
  %47 = fmul float %46, 5.000000e-01
  %48 = fcmp olt float %47, 0.000000e+00
  %49 = fcmp oeq float %4, 0.000000e+00
  %50 = and i1 %49, %48
  %51 = select i1 %50, float 0.000000e+00, float %47
  %52 = tail call i32 @_ZNK8CFX_Font10GetDescentEv(%class.CFX_Font* %3) #16
  %53 = icmp slt i32 %52, 0
  %54 = sub nsw i32 0, %52
  %55 = select i1 %53, i32 %54, i32 %52
  %56 = sitofp i32 %55 to float
  %57 = sitofp i32 %5 to float
  %58 = fmul float %57, %56
  %59 = fdiv float %58, 1.000000e+03
  %60 = fadd float %51, 0.000000e+00
  %61 = fadd float %59, 0.000000e+00
  %62 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %2, i64 0, i32 0, i32 0
  store float %60, float* %62, align 4
  %63 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %2, i64 0, i32 0, i32 1
  store float %61, float* %63, align 4
  %64 = load i32, i32* %44, align 4
  %65 = tail call i32 @_ZN21CFX_UnicodeEncodingEx17GlyphFromCharCodeEj(%class.CFX_UnicodeEncodingEx* %9, i32 %64) #16
  %66 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %2, i64 0, i32 2
  store i32 %65, i32* %66, align 4
  %67 = tail call i32 @_ZN8CFX_Font13GetGlyphWidthEj(%class.CFX_Font* %3, i32 %65) #16
  %68 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %2, i64 0, i32 3
  store i32 %67, i32* %68, align 4
  %69 = icmp ugt i64 %17, 1
  br i1 %69, label %70, label %105

70:                                               ; preds = %43
  %71 = sitofp i32 %67 to float
  %72 = fmul float %57, %71
  %73 = fdiv float %72, 1.000000e+03
  %74 = fadd float %73, 0.000000e+00
  br label %119

75:                                               ; preds = %27, %102
  %76 = phi i64 [ %100, %102 ], [ 0, %27 ]
  %77 = phi float [ %99, %102 ], [ 0.000000e+00, %27 ]
  %78 = phi %"class.fxcrt::StringDataTemplate"* [ %103, %102 ], [ %11, %27 ]
  %79 = phi i32* [ %90, %102 ], [ %30, %27 ]
  %80 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %78, i64 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = icmp ugt i64 %81, %76
  br i1 %82, label %84, label %83, !prof !2

83:                                               ; preds = %102, %75, %27
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !3
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !4
  unreachable

84:                                               ; preds = %75
  %85 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %78, i64 0, i32 3, i64 %76
  %86 = load i8, i8* %85, align 1
  %87 = sext i8 %86 to i32
  %88 = tail call i32 @_ZNK21CFX_UnicodeEncodingEx19CharCodeFromUnicodeEw(%class.CFX_UnicodeEncodingEx* %9, i32 signext %87) #16
  %89 = getelementptr inbounds i32, i32* %79, i64 %76
  store i32 %88, i32* %89, align 4
  %90 = load i32*, i32** %19, align 8
  %91 = getelementptr inbounds i32, i32* %90, i64 %76
  %92 = load i32, i32* %91, align 4
  %93 = tail call i32 @_ZN21CFX_UnicodeEncodingEx17GlyphFromCharCodeEj(%class.CFX_UnicodeEncodingEx* %9, i32 %92) #16
  %94 = tail call i32 @_ZN8CFX_Font13GetGlyphWidthEj(%class.CFX_Font* %3, i32 %93) #16
  %95 = mul nsw i32 %94, %5
  %96 = sitofp i32 %95 to double
  %97 = fdiv double %96, 1.000000e+03
  %98 = fptrunc double %97 to float
  %99 = fadd float %77, %98
  %100 = add nuw i64 %76, 1
  %101 = icmp eq i64 %100, %17
  br i1 %101, label %43, label %102

102:                                              ; preds = %84
  %103 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %10, align 8
  %104 = icmp eq %"class.fxcrt::StringDataTemplate"* %103, null
  br i1 %104, label %83, label %75

105:                                              ; preds = %119, %43
  %106 = icmp eq i32* %44, null
  br i1 %106, label %111, label %107

107:                                              ; preds = %105
  %108 = ptrtoint i32* %44 to i64
  %109 = bitcast i32** %20 to i64*
  store i64 %108, i64* %109, align 8
  %110 = bitcast i32* %44 to i8*
  tail call void @_ZdlPv(i8* %110) #17
  br label %111

111:                                              ; preds = %105, %107
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #16
  %112 = icmp eq %class.CFX_UnicodeEncodingEx* %9, null
  br i1 %112, label %118, label %113

113:                                              ; preds = %111
  %114 = bitcast %class.CFX_UnicodeEncodingEx* %9 to void (%class.CFX_UnicodeEncodingEx*)***
  %115 = load void (%class.CFX_UnicodeEncodingEx*)**, void (%class.CFX_UnicodeEncodingEx*)*** %114, align 8
  %116 = getelementptr inbounds void (%class.CFX_UnicodeEncodingEx*)*, void (%class.CFX_UnicodeEncodingEx*)** %115, i64 1
  %117 = load void (%class.CFX_UnicodeEncodingEx*)*, void (%class.CFX_UnicodeEncodingEx*)** %116, align 8
  tail call void %117(%class.CFX_UnicodeEncodingEx* nonnull %9) #16
  br label %118

118:                                              ; preds = %111, %113
  ret void

119:                                              ; preds = %119, %70
  %120 = phi i64 [ 1, %70 ], [ %135, %119 ]
  %121 = phi float [ %74, %70 ], [ %134, %119 ]
  %122 = fadd float %51, %121
  %123 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %2, i64 %120, i32 0, i32 0
  store float %122, float* %123, align 4
  %124 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %2, i64 %120, i32 0, i32 1
  store float %61, float* %124, align 4
  %125 = getelementptr inbounds i32, i32* %44, i64 %120
  %126 = load i32, i32* %125, align 4
  %127 = tail call i32 @_ZN21CFX_UnicodeEncodingEx17GlyphFromCharCodeEj(%class.CFX_UnicodeEncodingEx* %9, i32 %126) #16
  %128 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %2, i64 %120, i32 2
  store i32 %127, i32* %128, align 4
  %129 = tail call i32 @_ZN8CFX_Font13GetGlyphWidthEj(%class.CFX_Font* %3, i32 %127) #16
  %130 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %2, i64 %120, i32 3
  store i32 %129, i32* %130, align 4
  %131 = sitofp i32 %129 to float
  %132 = fmul float %57, %131
  %133 = fdiv float %132, 1.000000e+03
  %134 = fadd float %121, %133
  %135 = add nuw i64 %120, 1
  %136 = icmp eq i64 %135, %17
  br i1 %136, label %105, label %119
}

declare %class.CFX_UnicodeEncodingEx* @_Z23FX_CreateFontEncodingExP8CFX_Font(%class.CFX_Font*) local_unnamed_addr #3

declare i32 @_ZNK21CFX_UnicodeEncodingEx19CharCodeFromUnicodeEw(%class.CFX_UnicodeEncodingEx*, i32 signext) local_unnamed_addr #3

declare i32 @_ZN21CFX_UnicodeEncodingEx17GlyphFromCharCodeEj(%class.CFX_UnicodeEncodingEx*, i32) unnamed_addr #3

declare i32 @_ZN8CFX_Font13GetGlyphWidthEj(%class.CFX_Font*, i32) local_unnamed_addr #3

declare i32 @_ZNK8CFX_Font10GetDescentEv(%class.CFX_Font*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CBC_OneDimWriter15ShowDeviceCharsEP16CFX_RenderDeviceRK10CFX_MatrixN5fxcrt10ByteStringEfP11TextCharPosffi(%class.CBC_OneDimWriter* nocapture readonly, %class.CFX_RenderDevice*, %class.CFX_Matrix* dereferenceable(24), %"class.fxcrt::ByteString"* nocapture readonly, float, %class.TextCharPos*, float, float, i32) local_unnamed_addr #2 align 2 {
  %10 = alloca %class.CFX_FloatRect, align 4
  %11 = alloca { i64, i64 }, align 8
  %12 = bitcast { i64, i64 }* %11 to %struct.FX_RECT*
  %13 = alloca { <2 x float>, <2 x float> }, align 8
  %14 = bitcast { <2 x float>, <2 x float> }* %13 to %class.CFX_FloatRect*
  %15 = alloca %class.CFX_Matrix, align 16
  %16 = alloca i64, align 8
  %17 = bitcast i64* %16 to %struct.CFX_TextRenderOptions*
  %18 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 7
  %19 = load float, float* %18, align 8
  %20 = tail call float @llvm.fabs.f32(float %19) #16
  %21 = fptosi float %20 to i32
  %22 = add nsw i32 %21, 1
  %23 = bitcast %class.CFX_FloatRect* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #16
  %24 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %10, i64 0, i32 0
  %25 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %10, i64 0, i32 1
  %26 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %10, i64 0, i32 2
  %27 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %10, i64 0, i32 3
  %28 = fadd float %4, %6
  %29 = sitofp i32 %22 to float
  %30 = fadd float %29, %7
  store float %6, float* %24, align 4
  store float %7, float* %25, align 4
  store float %28, float* %26, align 4
  store float %30, float* %27, align 4
  %31 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 0, i32 5
  %32 = load i32, i32* %31, align 8
  %33 = sitofp i32 %32 to float
  %34 = fcmp une float %33, %4
  br i1 %34, label %35, label %37

35:                                               ; preds = %9
  %36 = fadd float %28, -1.000000e+00
  store float %36, float* %26, align 4
  br label %37

37:                                               ; preds = %35, %9
  %38 = bitcast { i64, i64 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #16
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 1
  %40 = bitcast { <2 x float>, <2 x float> }* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #16
  %41 = call { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix* %2, %class.CFX_FloatRect* nonnull dereferenceable(16) %10) #16
  %42 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 0
  %43 = extractvalue { <2 x float>, <2 x float> } %41, 0
  store <2 x float> %43, <2 x float>* %42, align 8
  %44 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 1
  %45 = extractvalue { <2 x float>, <2 x float> } %41, 1
  store <2 x float> %45, <2 x float>* %44, align 8
  %46 = call { i64, i64 } @_ZNK13CFX_FloatRect12GetOuterRectEv(%class.CFX_FloatRect* nonnull %14) #16
  %47 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 0
  %48 = extractvalue { i64, i64 } %46, 0
  store i64 %48, i64* %47, align 8
  %49 = extractvalue { i64, i64 } %46, 1
  store i64 %49, i64* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #16
  %50 = call zeroext i1 @_ZN16CFX_RenderDevice17FillRectWithBlendERK7FX_RECTj9BlendMode(%class.CFX_RenderDevice* %1, %struct.FX_RECT* nonnull dereferenceable(16) %12, i32 -1, i32 0) #16
  %51 = bitcast %class.CFX_Matrix* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #16
  %52 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %15, i64 0, i32 4
  %53 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %15, i64 0, i32 5
  %54 = sitofp i32 %21 to float
  %55 = fadd float %54, %7
  %56 = bitcast %class.CFX_Matrix* %2 to <4 x float>*
  %57 = load <4 x float>, <4 x float>* %56, align 4, !noalias !5
  %58 = fmul <4 x float> %57, zeroinitializer
  %59 = shufflevector <4 x float> %58, <4 x float> undef, <4 x i32> <i32 2, i32 3, i32 0, i32 1>
  %60 = extractelement <4 x float> %57, i32 0
  %61 = extractelement <4 x float> %57, i32 1
  %62 = extractelement <4 x float> %57, i32 2
  %63 = extractelement <4 x float> %57, i32 3
  %64 = fadd <4 x float> %59, %57
  %65 = fsub <4 x float> %59, %57
  %66 = shufflevector <4 x float> %64, <4 x float> %65, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %67 = fmul float %60, %6
  %68 = fmul float %55, %62
  %69 = fadd float %67, %68
  %70 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 4
  %71 = load float, float* %70, align 4, !noalias !5
  %72 = fadd float %69, %71
  %73 = fmul float %61, %6
  %74 = fmul float %55, %63
  %75 = fadd float %73, %74
  %76 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 5
  %77 = load float, float* %76, align 4, !noalias !5
  %78 = fadd float %75, %77
  %79 = bitcast %class.CFX_Matrix* %15 to <4 x float>*
  store <4 x float> %66, <4 x float>* %79, align 16
  store float %72, float* %52, align 16
  store float %78, float* %53, align 4
  %80 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %80, align 8
  %82 = icmp eq %"class.fxcrt::StringDataTemplate"* %81, null
  br i1 %82, label %87, label %83

83:                                               ; preds = %37
  %84 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %81, i64 0, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = trunc i64 %85 to i32
  br label %87

87:                                               ; preds = %37, %83
  %88 = phi i32 [ %86, %83 ], [ 0, %37 ]
  %89 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 6, i32 0
  %90 = load %class.CFX_Font*, %class.CFX_Font** %89, align 8
  %91 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 9
  %92 = load i32, i32* %91, align 8
  %93 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #16
  store i64 1099511627778, i64* %16, align 8
  %94 = call zeroext i1 @_ZN16CFX_RenderDevice14DrawNormalTextEiPK11TextCharPosP8CFX_FontfRK10CFX_MatrixjRK21CFX_TextRenderOptions(%class.CFX_RenderDevice* %1, i32 %88, %class.TextCharPos* %5, %class.CFX_Font* %90, float %54, %class.CFX_Matrix* nonnull dereferenceable(24) %15, i32 %92, %struct.CFX_TextRenderOptions* nonnull dereferenceable(8) %17) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #16
  ret void
}

declare { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix*, %class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #3

declare { i64, i64 } @_ZNK13CFX_FloatRect12GetOuterRectEv(%class.CFX_FloatRect*) local_unnamed_addr #3

declare zeroext i1 @_ZN16CFX_RenderDevice14DrawNormalTextEiPK11TextCharPosP8CFX_FontfRK10CFX_MatrixjRK21CFX_TextRenderOptions(%class.CFX_RenderDevice*, i32, %class.TextCharPos*, %class.CFX_Font*, float, %class.CFX_Matrix* dereferenceable(24), i32, %struct.CFX_TextRenderOptions* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16CBC_OneDimWriter9ShowCharsEN5fxcrt18StringViewTemplateIwEEP16CFX_RenderDeviceRK10CFX_Matrixii(%class.CBC_OneDimWriter* nocapture readonly, %"class.fxcrt::StringViewTemplate"* nocapture readonly, %class.CFX_RenderDevice*, %class.CFX_Matrix* dereferenceable(24), i32, i32) unnamed_addr #2 align 2 {
  %7 = alloca %"class.fxcrt::ByteString", align 8
  %8 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %9 = alloca %"class.std::__1::vector.94", align 8
  %10 = alloca float, align 4
  %11 = alloca %"class.fxcrt::ByteString", align 8
  %12 = icmp eq %class.CFX_RenderDevice* %2, null
  br i1 %12, label %111, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 6, i32 0
  %15 = load %class.CFX_Font*, %class.CFX_Font** %14, align 8
  %16 = icmp eq %class.CFX_Font* %15, null
  br i1 %16, label %111, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.fxcrt::ByteString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #16
  %19 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %19, align 8
  %20 = bitcast %"class.fxcrt::StringViewTemplate"* %8 to i8*
  %21 = bitcast %"class.fxcrt::StringViewTemplate"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 8 %21, i64 16, i1 false)
  call void @_Z13FX_UTF8EncodeN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::ByteString"* nonnull sret %7, %"class.fxcrt::StringViewTemplate"* nonnull %8) #16
  %22 = bitcast %"class.std::__1::vector.94"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #16
  %23 = getelementptr inbounds %"class.std::__1::vector.94", %"class.std::__1::vector.94"* %9, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::vector.94", %"class.std::__1::vector.94"* %9, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.std::__1::vector.94", %"class.std::__1::vector.94"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %26 = bitcast %"class.std::__1::vector.94"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false)
  %27 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %19, align 8
  %28 = icmp eq %"class.fxcrt::StringDataTemplate"* %27, null
  br i1 %28, label %29, label %30

29:                                               ; preds = %17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 24, i1 false) #16
  br label %53

30:                                               ; preds = %17
  %31 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %27, i64 0, i32 1
  %32 = load i64, i64* %31, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 24, i1 false) #16
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %53, label %34

34:                                               ; preds = %30
  %35 = icmp ugt i64 %32, 419244183493398900
  br i1 %35, label %36, label %38

36:                                               ; preds = %34
  %37 = bitcast %"class.std::__1::vector.94"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %37) #18
  unreachable

38:                                               ; preds = %34
  %39 = mul i64 %32, 44
  %40 = call i8* @_Znwm(i64 %39) #17
  %41 = bitcast i8* %40 to %class.TextCharPos*
  %42 = bitcast %class.TextCharPos** %24 to i8**
  store i8* %40, i8** %42, align 8
  %43 = bitcast %"class.std::__1::vector.94"* %9 to i8**
  store i8* %40, i8** %43, align 8
  %44 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %41, i64 %32
  store %class.TextCharPos* %44, %class.TextCharPos** %25, align 8
  br label %45

45:                                               ; preds = %45, %38
  %46 = phi %class.TextCharPos* [ %47, %45 ], [ %41, %38 ]
  call void @_ZN11TextCharPosC1Ev(%class.TextCharPos* %46) #16
  %47 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %46, i64 1
  %48 = icmp eq %class.TextCharPos* %47, %44
  br i1 %48, label %49, label %45

49:                                               ; preds = %45
  %50 = bitcast %class.TextCharPos** %24 to i64*
  %51 = ptrtoint %class.TextCharPos* %44 to i64
  store i64 %51, i64* %50, align 8
  %52 = load %class.TextCharPos*, %class.TextCharPos** %23, align 8
  br label %53

53:                                               ; preds = %29, %30, %49
  %54 = phi %class.TextCharPos* [ null, %29 ], [ null, %30 ], [ %52, %49 ]
  %55 = bitcast float* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %55) #16
  store float 0.000000e+00, float* %10, align 4
  %56 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 10
  %57 = load i8, i8* %56, align 4
  %58 = add i8 %57, -1
  %59 = icmp ult i8 %58, 2
  %60 = sitofp i32 %4 to float
  %61 = select i1 %59, float %60, float 0.000000e+00
  %62 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 7
  %63 = load float, float* %62, align 8
  %64 = call float @llvm.fabs.f32(float %63) #16
  %65 = fptosi float %64 to i32
  %66 = add nsw i32 %65, 1
  %67 = load %class.CFX_Font*, %class.CFX_Font** %14, align 8
  call void @_ZN16CBC_OneDimWriter12CalcTextInfoERKN5fxcrt10ByteStringEP11TextCharPosP8CFX_FontfiRf(%class.CBC_OneDimWriter* undef, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %7, %class.TextCharPos* %54, %class.CFX_Font* %67, float %61, i32 %65, float* nonnull dereferenceable(4) %10)
  %68 = load float, float* %10, align 4
  %69 = fcmp olt float %68, 1.000000e+00
  br i1 %69, label %94, label %70

70:                                               ; preds = %53
  %71 = load i8, i8* %56, align 4
  switch i8 %71, label %83 [
    i8 3, label %72
    i8 1, label %87
    i8 4, label %76
  ]

72:                                               ; preds = %70
  %73 = fsub float %60, %68
  %74 = fptosi float %73 to i32
  %75 = sdiv i32 %74, 2
  br label %87

76:                                               ; preds = %70
  %77 = fsub float %60, %68
  %78 = fptosi float %77 to i32
  %79 = sdiv i32 %78, 2
  %80 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 0, i32 4
  %81 = load i32, i32* %80, align 4
  %82 = sub nsw i32 %81, %66
  br label %87

83:                                               ; preds = %70
  %84 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 0, i32 4
  %85 = load i32, i32* %84, align 4
  %86 = sub nsw i32 %85, %66
  br label %87

87:                                               ; preds = %70, %83, %76, %72
  %88 = phi float [ %60, %83 ], [ %68, %76 ], [ %68, %72 ], [ %60, %70 ]
  %89 = phi i32 [ 0, %83 ], [ %79, %76 ], [ %75, %72 ], [ 0, %70 ]
  %90 = phi i32 [ %86, %83 ], [ %82, %76 ], [ 0, %72 ], [ 0, %70 ]
  call void @_ZN5fxcrt10ByteStringC1ERKS0_(%"class.fxcrt::ByteString"* nonnull %11, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %7) #16
  %91 = load %class.TextCharPos*, %class.TextCharPos** %23, align 8
  %92 = sitofp i32 %89 to float
  %93 = sitofp i32 %90 to float
  call void @_ZN16CBC_OneDimWriter15ShowDeviceCharsEP16CFX_RenderDeviceRK10CFX_MatrixN5fxcrt10ByteStringEfP11TextCharPosffi(%class.CBC_OneDimWriter* %0, %class.CFX_RenderDevice* nonnull %2, %class.CFX_Matrix* dereferenceable(24) %3, %"class.fxcrt::ByteString"* nonnull %11, float %88, %class.TextCharPos* %91, float %92, float %93, i32 undef)
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %11) #16
  br label %94

94:                                               ; preds = %53, %87
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %55) #16
  %95 = load %class.TextCharPos*, %class.TextCharPos** %23, align 8
  %96 = icmp eq %class.TextCharPos* %95, null
  br i1 %96, label %110, label %97

97:                                               ; preds = %94
  %98 = bitcast %class.TextCharPos* %95 to i8*
  %99 = load %class.TextCharPos*, %class.TextCharPos** %24, align 8
  %100 = icmp eq %class.TextCharPos* %99, %95
  br i1 %100, label %108, label %101

101:                                              ; preds = %97, %101
  %102 = phi %class.TextCharPos* [ %103, %101 ], [ %99, %97 ]
  %103 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %102, i64 -1
  call void @_ZN11TextCharPosD1Ev(%class.TextCharPos* %103) #16
  %104 = icmp eq %class.TextCharPos* %103, %95
  br i1 %104, label %105, label %101

105:                                              ; preds = %101
  %106 = bitcast %"class.std::__1::vector.94"* %9 to i8**
  %107 = load i8*, i8** %106, align 8
  br label %108

108:                                              ; preds = %105, %97
  %109 = phi i8* [ %107, %105 ], [ %98, %97 ]
  store %class.TextCharPos* %95, %class.TextCharPos** %24, align 8
  call void @_ZdlPv(i8* %109) #17
  br label %110

110:                                              ; preds = %94, %108
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #16
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #16
  br label %111

111:                                              ; preds = %13, %6, %110
  %112 = phi i1 [ true, %110 ], [ false, %6 ], [ false, %13 ]
  ret i1 %112
}

declare void @_Z13FX_UTF8EncodeN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::ByteString"* sret, %"class.fxcrt::StringViewTemplate"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN5fxcrt10ByteStringC1ERKS0_(%"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16CBC_OneDimWriter18RenderDeviceResultEP16CFX_RenderDeviceRK10CFX_MatrixN5fxcrt18StringViewTemplateIwEE(%class.CBC_OneDimWriter*, %class.CFX_RenderDevice*, %class.CFX_Matrix* dereferenceable(24), %"class.fxcrt::StringViewTemplate"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %5 = alloca %class.CFX_GraphStateData, align 8
  %6 = alloca %class.CFX_PathData, align 8
  %7 = alloca i16, align 2
  %8 = alloca %class.CFX_Matrix, align 16
  %9 = alloca %class.CFX_GraphStateData, align 8
  %10 = alloca i16, align 2
  %11 = bitcast i16* %10 to %struct.CFX_FillRenderOptions*
  %12 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %13 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 15, i32 0, i32 0
  %14 = load %class.CFX_PathData*, %class.CFX_PathData** %13, align 8
  %15 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 15, i32 0, i32 1
  %16 = load %class.CFX_PathData*, %class.CFX_PathData** %15, align 8
  %17 = icmp eq %class.CFX_PathData* %14, %16
  br i1 %17, label %106, label %18

18:                                               ; preds = %4
  %19 = bitcast i16* %7 to %struct.CFX_FillRenderOptions*
  %20 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %20) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 8 getelementptr inbounds ({ i8, i8, [2 x i8], float, float, float, %"class.std::__1::vector.101" }, { i8, i8, [2 x i8], float, float, float, %"class.std::__1::vector.101" }* @__const._ZN16CBC_OneDimWriter18RenderDeviceResultEP16CFX_RenderDeviceRK10CFX_MatrixN5fxcrt18StringViewTemplateIwEE.data, i64 0, i32 0), i64 40, i1 false)
  call void @_ZN18CFX_GraphStateDataC1Ev(%class.CFX_GraphStateData* nonnull %5) #16
  %21 = bitcast %class.CFX_PathData* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #16
  %22 = bitcast %class.CFX_PathData* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false)
  call void @_ZN12CFX_PathDataC1Ev(%class.CFX_PathData* nonnull %6) #16
  %23 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 0, i32 5
  %24 = load i32, i32* %23, align 8
  %25 = sitofp i32 %24 to float
  %26 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 0, i32 4
  %27 = load i32, i32* %26, align 4
  %28 = sitofp i32 %27 to float
  call void @_ZN12CFX_PathData10AppendRectEffff(%class.CFX_PathData* nonnull %6, float 0.000000e+00, float 0.000000e+00, float %25, float %28) #16
  %29 = bitcast i16* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %29) #16
  store i16 1, i16* %7, align 2
  %30 = call zeroext i1 @_ZN16CFX_RenderDevice8DrawPathEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateDatajjRK21CFX_FillRenderOptions(%class.CFX_RenderDevice* %1, %class.CFX_PathData* nonnull %6, %class.CFX_Matrix* %2, %class.CFX_GraphStateData* nonnull %5, i32 -1, i32 -1, %struct.CFX_FillRenderOptions* nonnull dereferenceable(2) %19) #16
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %29) #16
  %31 = bitcast %class.CFX_Matrix* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #16
  %32 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %8, i64 0, i32 4
  %33 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %8, i64 0, i32 5
  %34 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 18
  %35 = load float, float* %34, align 8
  %36 = load i32, i32* %26, align 4
  %37 = sitofp i32 %36 to float
  %38 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 2
  %39 = bitcast %class.CFX_Matrix* %2 to <2 x float>*
  %40 = load <2 x float>, <2 x float>* %39, align 4, !noalias !8
  %41 = shufflevector <2 x float> %40, <2 x float> undef, <4 x i32> <i32 0, i32 undef, i32 undef, i32 undef>
  %42 = shufflevector <2 x float> %40, <2 x float> undef, <4 x i32> <i32 undef, i32 1, i32 undef, i32 undef>
  %43 = shufflevector <2 x float> %40, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %44 = bitcast float* %38 to <2 x float>*
  %45 = load <2 x float>, <2 x float>* %44, align 4, !noalias !8
  %46 = shufflevector <2 x float> %45, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %47 = insertelement <4 x float> undef, float %35, i32 0
  %48 = shufflevector <4 x float> %47, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %49 = shufflevector <4 x float> %48, <4 x float> %43, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %50 = shufflevector <4 x float> %41, <4 x float> <float undef, float undef, float 0.000000e+00, float 0.000000e+00>, <4 x i32> <i32 0, i32 undef, i32 6, i32 7>
  %51 = shufflevector <4 x float> %50, <4 x float> %42, <4 x i32> <i32 0, i32 5, i32 2, i32 3>
  %52 = fmul <4 x float> %49, %51
  %53 = insertelement <4 x float> <float 0.000000e+00, float 0.000000e+00, float undef, float undef>, float %37, i32 2
  %54 = insertelement <4 x float> %53, float %37, i32 3
  %55 = fmul <4 x float> %46, %54
  %56 = fadd <4 x float> %52, %55
  %57 = extractelement <4 x float> %52, i32 2
  %58 = extractelement <4 x float> %55, i32 0
  %59 = fadd float %57, %58
  %60 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 4
  %61 = load float, float* %60, align 4, !noalias !8
  %62 = fadd float %59, %61
  %63 = extractelement <4 x float> %52, i32 3
  %64 = extractelement <4 x float> %55, i32 1
  %65 = fadd float %63, %64
  %66 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 5
  %67 = load float, float* %66, align 4, !noalias !8
  %68 = fadd float %65, %67
  %69 = bitcast %class.CFX_Matrix* %8 to <4 x float>*
  store <4 x float> %56, <4 x float>* %69, align 16
  store float %62, float* %32, align 16
  store float %68, float* %33, align 4
  %70 = load %class.CFX_PathData*, %class.CFX_PathData** %13, align 8
  %71 = load %class.CFX_PathData*, %class.CFX_PathData** %15, align 8
  %72 = icmp eq %class.CFX_PathData* %70, %71
  br i1 %72, label %76, label %73

73:                                               ; preds = %18
  %74 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %9, i64 0, i32 0
  %75 = bitcast i16* %10 to i8*
  br label %80

76:                                               ; preds = %80, %18
  %77 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 10
  %78 = load i8, i8* %77, align 4
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %104, label %85

80:                                               ; preds = %73, %80
  %81 = phi %class.CFX_PathData* [ %70, %73 ], [ %83, %80 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %74) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 getelementptr inbounds ({ i8, i8, [2 x i8], float, float, float, %"class.std::__1::vector.101" }, { i8, i8, [2 x i8], float, float, float, %"class.std::__1::vector.101" }* @__const._ZN16CBC_OneDimWriter18RenderDeviceResultEP16CFX_RenderDeviceRK10CFX_MatrixN5fxcrt18StringViewTemplateIwEE.data, i64 0, i32 0), i64 40, i1 false)
  call void @_ZN18CFX_GraphStateDataC1Ev(%class.CFX_GraphStateData* nonnull %9) #16
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %75) #16
  store i16 2, i16* %10, align 2
  %82 = call zeroext i1 @_ZN16CFX_RenderDevice8DrawPathEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateDatajjRK21CFX_FillRenderOptions(%class.CFX_RenderDevice* %1, %class.CFX_PathData* %81, %class.CFX_Matrix* nonnull %8, %class.CFX_GraphStateData* nonnull %9, i32 -16777216, i32 0, %struct.CFX_FillRenderOptions* nonnull dereferenceable(2) %11) #16
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %75) #16
  call void @_ZN18CFX_GraphStateDataD1Ev(%class.CFX_GraphStateData* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %74) #16
  %83 = getelementptr inbounds %class.CFX_PathData, %class.CFX_PathData* %81, i64 1
  %84 = icmp eq %class.CFX_PathData* %83, %71
  br i1 %84, label %76, label %80

85:                                               ; preds = %76
  %86 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %3, i64 0, i32 0, i32 0, i32 0
  %87 = load i32*, i32** %86, align 8
  %88 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %3, i64 0, i32 0, i32 1
  %89 = load i64, i64* %88, align 8
  %90 = call i32* @wmemchr(i32* %87, i32 signext 32, i64 %89) #19
  %91 = icmp eq i32* %90, null
  br i1 %91, label %104, label %92

92:                                               ; preds = %85
  %93 = bitcast %"class.fxcrt::StringViewTemplate"* %12 to i8*
  %94 = bitcast %"class.fxcrt::StringViewTemplate"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %93, i8* align 8 %94, i64 16, i1 false)
  %95 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 16
  %96 = load i32, i32* %95, align 8
  %97 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 17
  %98 = load i32, i32* %97, align 4
  %99 = bitcast %class.CBC_OneDimWriter* %0 to i1 (%class.CBC_OneDimWriter*, %"class.fxcrt::StringViewTemplate"*, %class.CFX_RenderDevice*, %class.CFX_Matrix*, i32, i32)***
  %100 = load i1 (%class.CBC_OneDimWriter*, %"class.fxcrt::StringViewTemplate"*, %class.CFX_RenderDevice*, %class.CFX_Matrix*, i32, i32)**, i1 (%class.CBC_OneDimWriter*, %"class.fxcrt::StringViewTemplate"*, %class.CFX_RenderDevice*, %class.CFX_Matrix*, i32, i32)*** %99, align 8
  %101 = getelementptr inbounds i1 (%class.CBC_OneDimWriter*, %"class.fxcrt::StringViewTemplate"*, %class.CFX_RenderDevice*, %class.CFX_Matrix*, i32, i32)*, i1 (%class.CBC_OneDimWriter*, %"class.fxcrt::StringViewTemplate"*, %class.CFX_RenderDevice*, %class.CFX_Matrix*, i32, i32)** %100, i64 23
  %102 = load i1 (%class.CBC_OneDimWriter*, %"class.fxcrt::StringViewTemplate"*, %class.CFX_RenderDevice*, %class.CFX_Matrix*, i32, i32)*, i1 (%class.CBC_OneDimWriter*, %"class.fxcrt::StringViewTemplate"*, %class.CFX_RenderDevice*, %class.CFX_Matrix*, i32, i32)** %101, align 8
  %103 = call zeroext i1 %102(%class.CBC_OneDimWriter* %0, %"class.fxcrt::StringViewTemplate"* nonnull %12, %class.CFX_RenderDevice* %1, %class.CFX_Matrix* dereferenceable(24) %2, i32 %96, i32 %98) #16
  br label %104

104:                                              ; preds = %85, %76, %92
  %105 = phi i1 [ %103, %92 ], [ true, %76 ], [ true, %85 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #16
  call void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #16
  call void @_ZN18CFX_GraphStateDataD1Ev(%class.CFX_GraphStateData* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %20) #16
  br label %106

106:                                              ; preds = %4, %104
  %107 = phi i1 [ %105, %104 ], [ false, %4 ]
  ret i1 %107
}

declare void @_ZN18CFX_GraphStateDataC1Ev(%class.CFX_GraphStateData*) unnamed_addr #3

declare void @_ZN12CFX_PathDataC1Ev(%class.CFX_PathData*) unnamed_addr #3

declare void @_ZN12CFX_PathData10AppendRectEffff(%class.CFX_PathData*, float, float, float, float) local_unnamed_addr #3

declare zeroext i1 @_ZN16CFX_RenderDevice8DrawPathEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateDatajjRK21CFX_FillRenderOptions(%class.CFX_RenderDevice*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions* dereferenceable(2)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN18CFX_GraphStateDataD1Ev(%class.CFX_GraphStateData*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16CBC_OneDimWriter12RenderResultEN5fxcrt18StringViewTemplateIwEEPhi(%class.CBC_OneDimWriter*, %"class.fxcrt::StringViewTemplate"* nocapture readnone, i8* nocapture readonly, i32) unnamed_addr #2 align 2 {
  %5 = icmp slt i32 %3, 1
  br i1 %5, label %116, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, 20
  %10 = select i1 %9, i32 %8, i32 20
  store i32 %10, i32* %7, align 4
  %11 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !11
  %13 = icmp eq i8 %12, 0
  %14 = select i1 %13, i32 0, i32 7
  %15 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 4
  %16 = load i8, i8* %15, align 1, !range !11
  %17 = icmp eq i8 %16, 0
  %18 = select i1 %17, i32 0, i32 7
  %19 = add nuw nsw i32 %14, %3
  %20 = add nuw nsw i32 %19, %18
  %21 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 0, i32 5
  %22 = load i32, i32* %21, align 8
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %6
  %25 = sitofp i32 %22 to float
  %26 = sitofp i32 %20 to float
  %27 = fdiv float %25, %26
  br label %28

28:                                               ; preds = %6, %24
  %29 = phi float [ %27, %24 ], [ 1.000000e+00, %6 ]
  %30 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 18
  store float %29, float* %30, align 8
  %31 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 17
  store i32 1, i32* %31, align 4
  %32 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 16
  store i32 %22, i32* %32, align 8
  %33 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 15
  %34 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %33, i64 0, i32 0, i32 0
  %35 = load %class.CFX_PathData*, %class.CFX_PathData** %34, align 8
  %36 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 15, i32 0, i32 1
  %37 = load %class.CFX_PathData*, %class.CFX_PathData** %36, align 8
  %38 = icmp eq %class.CFX_PathData* %37, %35
  br i1 %38, label %45, label %39

39:                                               ; preds = %28, %39
  %40 = phi %class.CFX_PathData* [ %41, %39 ], [ %37, %28 ]
  %41 = getelementptr inbounds %class.CFX_PathData, %class.CFX_PathData* %40, i64 -1
  tail call void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData* %41) #16
  %42 = icmp eq %class.CFX_PathData* %41, %35
  br i1 %42, label %43, label %39

43:                                               ; preds = %39
  %44 = load i32, i32* %31, align 4
  br label %45

45:                                               ; preds = %43, %28
  %46 = phi i32 [ %44, %43 ], [ 1, %28 ]
  store %class.CFX_PathData* %35, %class.CFX_PathData** %36, align 8
  %47 = mul nsw i32 %46, %3
  %48 = sext i32 %47 to i64
  tail call void @_ZNSt3__16vectorI12CFX_PathDataNS_9allocatorIS1_EEE7reserveEm(%"class.std::__1::vector.48"* %33, i64 %48)
  %49 = icmp sgt i32 %3, 0
  br i1 %49, label %50, label %116

50:                                               ; preds = %45
  %51 = load i32, i32* %31, align 4
  %52 = mul nsw i32 %51, %14
  %53 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 15, i32 0, i32 2, i32 0, i32 0
  %54 = bitcast %class.CFX_PathData** %36 to i64*
  %55 = zext i32 %3 to i64
  br label %56

56:                                               ; preds = %111, %50
  %57 = phi i32 [ %51, %50 ], [ %112, %111 ]
  %58 = phi i64 [ 0, %50 ], [ %113, %111 ]
  %59 = phi i32 [ %52, %50 ], [ %114, %111 ]
  %60 = getelementptr inbounds i8, i8* %2, i64 %58
  %61 = load i8, i8* %60, align 1
  %62 = icmp eq i8 %61, 1
  br i1 %62, label %63, label %111

63:                                               ; preds = %56
  %64 = icmp sgt i32 %20, %59
  br i1 %64, label %65, label %116

65:                                               ; preds = %63
  %66 = add nsw i32 %57, %59
  %67 = icmp sgt i32 %66, %20
  br i1 %67, label %68, label %89

68:                                               ; preds = %65
  %69 = sub nsw i32 %20, %59
  %70 = icmp sgt i32 %69, 0
  br i1 %70, label %71, label %89

71:                                               ; preds = %68, %83
  %72 = phi i32 [ %87, %83 ], [ 0, %68 ]
  %73 = add nsw i32 %72, %59
  %74 = sitofp i32 %73 to float
  %75 = load %class.CFX_PathData*, %class.CFX_PathData** %36, align 8
  %76 = load %class.CFX_PathData*, %class.CFX_PathData** %53, align 8
  %77 = icmp ult %class.CFX_PathData* %75, %76
  br i1 %77, label %78, label %81

78:                                               ; preds = %71
  tail call void @_ZN12CFX_PathDataC1Ev(%class.CFX_PathData* %75) #16
  %79 = getelementptr inbounds %class.CFX_PathData, %class.CFX_PathData* %75, i64 1
  %80 = ptrtoint %class.CFX_PathData* %79 to i64
  store i64 %80, i64* %54, align 8
  br label %83

81:                                               ; preds = %71
  tail call void @_ZNSt3__16vectorI12CFX_PathDataNS_9allocatorIS1_EEE24__emplace_back_slow_pathIJEEEvDpOT_(%"class.std::__1::vector.48"* %33) #16
  %82 = load %class.CFX_PathData*, %class.CFX_PathData** %36, align 8
  br label %83

83:                                               ; preds = %81, %78
  %84 = phi %class.CFX_PathData* [ %79, %78 ], [ %82, %81 ]
  %85 = getelementptr inbounds %class.CFX_PathData, %class.CFX_PathData* %84, i64 -1
  %86 = fadd float %74, 1.000000e+00
  tail call void @_ZN12CFX_PathData10AppendRectEffff(%class.CFX_PathData* %85, float %74, float 0.000000e+00, float %86, float 1.000000e+00) #16
  %87 = add nuw nsw i32 %72, 1
  %88 = icmp eq i32 %87, %69
  br i1 %88, label %116, label %71

89:                                               ; preds = %68, %65
  %90 = icmp sgt i32 %57, 0
  br i1 %90, label %91, label %111

91:                                               ; preds = %89, %103
  %92 = phi i32 [ %107, %103 ], [ 0, %89 ]
  %93 = add nsw i32 %92, %59
  %94 = sitofp i32 %93 to float
  %95 = load %class.CFX_PathData*, %class.CFX_PathData** %36, align 8
  %96 = load %class.CFX_PathData*, %class.CFX_PathData** %53, align 8
  %97 = icmp ult %class.CFX_PathData* %95, %96
  br i1 %97, label %98, label %101

98:                                               ; preds = %91
  tail call void @_ZN12CFX_PathDataC1Ev(%class.CFX_PathData* %95) #16
  %99 = getelementptr inbounds %class.CFX_PathData, %class.CFX_PathData* %95, i64 1
  %100 = ptrtoint %class.CFX_PathData* %99 to i64
  store i64 %100, i64* %54, align 8
  br label %103

101:                                              ; preds = %91
  tail call void @_ZNSt3__16vectorI12CFX_PathDataNS_9allocatorIS1_EEE24__emplace_back_slow_pathIJEEEvDpOT_(%"class.std::__1::vector.48"* %33) #16
  %102 = load %class.CFX_PathData*, %class.CFX_PathData** %36, align 8
  br label %103

103:                                              ; preds = %101, %98
  %104 = phi %class.CFX_PathData* [ %99, %98 ], [ %102, %101 ]
  %105 = getelementptr inbounds %class.CFX_PathData, %class.CFX_PathData* %104, i64 -1
  %106 = fadd float %94, 1.000000e+00
  tail call void @_ZN12CFX_PathData10AppendRectEffff(%class.CFX_PathData* %105, float %94, float 0.000000e+00, float %106, float 1.000000e+00) #16
  %107 = add nuw nsw i32 %92, 1
  %108 = icmp eq i32 %107, %57
  br i1 %108, label %109, label %91

109:                                              ; preds = %103
  %110 = load i32, i32* %31, align 4
  br label %111

111:                                              ; preds = %109, %89, %56
  %112 = phi i32 [ %110, %109 ], [ %57, %89 ], [ %57, %56 ]
  %113 = add nuw nsw i64 %58, 1
  %114 = add nsw i32 %112, %59
  %115 = icmp eq i64 %113, %55
  br i1 %115, label %116, label %56

116:                                              ; preds = %63, %111, %83, %45, %4
  %117 = phi i1 [ false, %4 ], [ true, %45 ], [ true, %83 ], [ true, %111 ], [ true, %63 ]
  ret i1 %117
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI12CFX_PathDataNS_9allocatorIS1_EEE7reserveEm(%"class.std::__1::vector.48"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %class.CFX_PathData** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.48"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %class.CFX_PathData*
  br i1 %10, label %12, label %55

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %class.CFX_PathData** %13 to i64*
  %15 = icmp ugt i64 %1, 768614336404564650
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #18
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = sdiv exact i64 %19, 24
  %21 = mul i64 %1, 24
  %22 = tail call i8* @_Znwm(i64 %21) #17
  %23 = bitcast i8* %22 to %class.CFX_PathData*
  %24 = getelementptr inbounds %class.CFX_PathData, %class.CFX_PathData* %23, i64 %20
  %25 = ptrtoint %class.CFX_PathData* %24 to i64
  %26 = getelementptr inbounds %class.CFX_PathData, %class.CFX_PathData* %23, i64 %1
  %27 = ptrtoint %class.CFX_PathData* %26 to i64
  %28 = inttoptr i64 %18 to %class.CFX_PathData*
  %29 = icmp eq %class.CFX_PathData* %28, %11
  br i1 %29, label %41, label %30

30:                                               ; preds = %17, %30
  %31 = phi %class.CFX_PathData* [ %33, %30 ], [ %24, %17 ]
  %32 = phi %class.CFX_PathData* [ %34, %30 ], [ %28, %17 ]
  %33 = getelementptr inbounds %class.CFX_PathData, %class.CFX_PathData* %31, i64 -1
  %34 = getelementptr inbounds %class.CFX_PathData, %class.CFX_PathData* %32, i64 -1
  tail call void @_ZN12CFX_PathDataC1EOS_(%class.CFX_PathData* %33, %class.CFX_PathData* dereferenceable(24) %34) #16
  %35 = icmp eq %class.CFX_PathData* %34, %11
  br i1 %35, label %36, label %30

36:                                               ; preds = %30
  %37 = ptrtoint %class.CFX_PathData* %33 to i64
  %38 = load i64, i64* %6, align 8
  %39 = load %class.CFX_PathData*, %class.CFX_PathData** %13, align 8
  %40 = inttoptr i64 %38 to %class.CFX_PathData*
  br label %41

41:                                               ; preds = %17, %36
  %42 = phi %class.CFX_PathData* [ %40, %36 ], [ %28, %17 ]
  %43 = phi %class.CFX_PathData* [ %39, %36 ], [ %11, %17 ]
  %44 = phi i64 [ %37, %36 ], [ %25, %17 ]
  %45 = phi i64 [ %38, %36 ], [ %18, %17 ]
  store i64 %44, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %46 = icmp eq %class.CFX_PathData* %43, %42
  br i1 %46, label %51, label %47

47:                                               ; preds = %41, %47
  %48 = phi %class.CFX_PathData* [ %49, %47 ], [ %43, %41 ]
  %49 = getelementptr inbounds %class.CFX_PathData, %class.CFX_PathData* %48, i64 -1
  tail call void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData* %49) #16
  %50 = icmp eq %class.CFX_PathData* %49, %42
  br i1 %50, label %51, label %47

51:                                               ; preds = %47, %41
  %52 = icmp eq i64 %45, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %51
  %54 = inttoptr i64 %45 to i8*
  tail call void @_ZdlPv(i8* %54) #17
  br label %55

55:                                               ; preds = %53, %51, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CBC_OneDimWriter18RenderVerticalBarsEii(%class.CBC_OneDimWriter*, i32, i32) local_unnamed_addr #2 align 2 {
  %4 = icmp sgt i32 %2, 0
  br i1 %4, label %5, label %10

5:                                                ; preds = %3
  %6 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 15, i32 0, i32 1
  %7 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 15, i32 0, i32 2, i32 0, i32 0
  %8 = getelementptr inbounds %class.CBC_OneDimWriter, %class.CBC_OneDimWriter* %0, i64 0, i32 15
  %9 = bitcast %class.CFX_PathData** %6 to i64*
  br label %11

10:                                               ; preds = %23, %3
  ret void

11:                                               ; preds = %23, %5
  %12 = phi i32 [ 0, %5 ], [ %27, %23 ]
  %13 = add nsw i32 %12, %1
  %14 = sitofp i32 %13 to float
  %15 = load %class.CFX_PathData*, %class.CFX_PathData** %6, align 8
  %16 = load %class.CFX_PathData*, %class.CFX_PathData** %7, align 8
  %17 = icmp ult %class.CFX_PathData* %15, %16
  br i1 %17, label %18, label %21

18:                                               ; preds = %11
  tail call void @_ZN12CFX_PathDataC1Ev(%class.CFX_PathData* %15) #16
  %19 = getelementptr inbounds %class.CFX_PathData, %class.CFX_PathData* %15, i64 1
  %20 = ptrtoint %class.CFX_PathData* %19 to i64
  store i64 %20, i64* %9, align 8
  br label %23

21:                                               ; preds = %11
  tail call void @_ZNSt3__16vectorI12CFX_PathDataNS_9allocatorIS1_EEE24__emplace_back_slow_pathIJEEEvDpOT_(%"class.std::__1::vector.48"* %8) #16
  %22 = load %class.CFX_PathData*, %class.CFX_PathData** %6, align 8
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi %class.CFX_PathData* [ %19, %18 ], [ %22, %21 ]
  %25 = getelementptr inbounds %class.CFX_PathData, %class.CFX_PathData* %24, i64 -1
  %26 = fadd float %14, 1.000000e+00
  tail call void @_ZN12CFX_PathData10AppendRectEffff(%class.CFX_PathData* %25, float %14, float 0.000000e+00, float %26, float 1.000000e+00) #16
  %27 = add nuw nsw i32 %12, 1
  %28 = icmp eq i32 %27, %2
  br i1 %28, label %10, label %11
}

declare zeroext i1 @_ZN10CBC_Writer15SetCharEncodingEi(%class.CBC_Writer*, i32) unnamed_addr #3

declare zeroext i1 @_ZN10CBC_Writer15SetModuleHeightEi(%class.CBC_Writer*, i32) unnamed_addr #3

declare zeroext i1 @_ZN10CBC_Writer14SetModuleWidthEi(%class.CBC_Writer*, i32) unnamed_addr #3

declare zeroext i1 @_ZN10CBC_Writer9SetHeightEi(%class.CBC_Writer*, i32) unnamed_addr #3

declare zeroext i1 @_ZN10CBC_Writer8SetWidthEi(%class.CBC_Writer*, i32) unnamed_addr #3

declare zeroext i1 @_ZN10CBC_Writer15SetTextLocationE11BC_TEXT_LOC(%class.CBC_Writer*, i8 zeroext) unnamed_addr #3

declare zeroext i1 @_ZN10CBC_Writer18SetWideNarrowRatioEa(%class.CBC_Writer*, i8 signext) unnamed_addr #3

declare zeroext i1 @_ZN10CBC_Writer12SetStartCharEc(%class.CBC_Writer*, i8 signext) unnamed_addr #3

declare zeroext i1 @_ZN10CBC_Writer10SetEndCharEc(%class.CBC_Writer*, i8 signext) unnamed_addr #3

declare zeroext i1 @_ZN10CBC_Writer23SetErrorCorrectionLevelEi(%class.CBC_Writer*, i32) unnamed_addr #3

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #9

declare zeroext i1 @_ZN16CFX_RenderDevice17FillRectWithBlendERK7FX_RECTj9BlendMode(%class.CFX_RenderDevice*, %struct.FX_RECT* dereferenceable(16), i32, i32) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #12

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #13

declare void @_ZN11TextCharPosC1Ev(%class.TextCharPos*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN11TextCharPosD1Ev(%class.TextCharPos*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind readonly
declare i32* @wmemchr(i32*, i32 signext, i64) local_unnamed_addr #14

; Function Attrs: nounwind
declare void @_ZN12CFX_PathDataC1EOS_(%class.CFX_PathData*, %class.CFX_PathData* dereferenceable(24)) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI12CFX_PathDataNS_9allocatorIS1_EEE24__emplace_back_slow_pathIJEEEvDpOT_(%"class.std::__1::vector.48"*) local_unnamed_addr #15 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %0, i64 0, i32 0, i32 1
  %3 = bitcast %class.CFX_PathData** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.std::__1::vector.48"* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %4, %6
  %8 = sdiv exact i64 %7, 24
  %9 = add nsw i64 %8, 1
  %10 = icmp ugt i64 %9, 768614336404564650
  br i1 %10, label %11, label %13

11:                                               ; preds = %1
  %12 = bitcast %"class.std::__1::vector.48"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %12) #18
  unreachable

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %class.CFX_PathData** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %16, %6
  %18 = sdiv exact i64 %17, 24
  %19 = icmp ult i64 %18, 384307168202282325
  br i1 %19, label %20, label %25

20:                                               ; preds = %13
  %21 = shl nsw i64 %18, 1
  %22 = icmp ult i64 %21, %9
  %23 = select i1 %22, i64 %9, i64 %21
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %13, %20
  %26 = phi i64 [ %23, %20 ], [ 768614336404564650, %13 ]
  %27 = mul i64 %26, 24
  %28 = tail call i8* @_Znwm(i64 %27) #17
  %29 = bitcast i8* %28 to %class.CFX_PathData*
  br label %30

30:                                               ; preds = %20, %25
  %31 = phi i64 [ %26, %25 ], [ 0, %20 ]
  %32 = phi %class.CFX_PathData* [ %29, %25 ], [ null, %20 ]
  %33 = getelementptr inbounds %class.CFX_PathData, %class.CFX_PathData* %32, i64 %8
  %34 = getelementptr inbounds %class.CFX_PathData, %class.CFX_PathData* %32, i64 %31
  %35 = ptrtoint %class.CFX_PathData* %34 to i64
  tail call void @_ZN12CFX_PathDataC1Ev(%class.CFX_PathData* %33) #16
  %36 = getelementptr inbounds %class.CFX_PathData, %class.CFX_PathData* %33, i64 1
  %37 = ptrtoint %class.CFX_PathData* %36 to i64
  %38 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %0, i64 0, i32 0, i32 0
  %39 = load %class.CFX_PathData*, %class.CFX_PathData** %38, align 8
  %40 = load %class.CFX_PathData*, %class.CFX_PathData** %2, align 8
  %41 = icmp eq %class.CFX_PathData* %40, %39
  br i1 %41, label %42, label %44

42:                                               ; preds = %30
  %43 = ptrtoint %class.CFX_PathData* %39 to i64
  br label %53

44:                                               ; preds = %30, %44
  %45 = phi %class.CFX_PathData* [ %47, %44 ], [ %33, %30 ]
  %46 = phi %class.CFX_PathData* [ %48, %44 ], [ %40, %30 ]
  %47 = getelementptr inbounds %class.CFX_PathData, %class.CFX_PathData* %45, i64 -1
  %48 = getelementptr inbounds %class.CFX_PathData, %class.CFX_PathData* %46, i64 -1
  tail call void @_ZN12CFX_PathDataC1EOS_(%class.CFX_PathData* %47, %class.CFX_PathData* dereferenceable(24) %48) #16
  %49 = icmp eq %class.CFX_PathData* %48, %39
  br i1 %49, label %50, label %44

50:                                               ; preds = %44
  %51 = load i64, i64* %5, align 8
  %52 = load %class.CFX_PathData*, %class.CFX_PathData** %2, align 8
  br label %53

53:                                               ; preds = %42, %50
  %54 = phi %class.CFX_PathData* [ %39, %42 ], [ %52, %50 ]
  %55 = phi %class.CFX_PathData* [ %33, %42 ], [ %47, %50 ]
  %56 = phi i64 [ %43, %42 ], [ %51, %50 ]
  %57 = ptrtoint %class.CFX_PathData* %55 to i64
  store i64 %57, i64* %5, align 8
  store i64 %37, i64* %3, align 8
  store i64 %35, i64* %15, align 8
  %58 = inttoptr i64 %56 to %class.CFX_PathData*
  %59 = icmp eq %class.CFX_PathData* %54, %58
  br i1 %59, label %64, label %60

60:                                               ; preds = %53, %60
  %61 = phi %class.CFX_PathData* [ %62, %60 ], [ %54, %53 ]
  %62 = getelementptr inbounds %class.CFX_PathData, %class.CFX_PathData* %61, i64 -1
  tail call void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData* %62) #16
  %63 = icmp eq %class.CFX_PathData* %62, %58
  br i1 %63, label %64, label %60

64:                                               ; preds = %60, %53
  %65 = icmp eq i64 %56, 0
  br i1 %65, label %68, label %66

66:                                               ; preds = %64
  %67 = inttoptr i64 %56 to i8*
  tail call void @_ZdlPv(i8* %67) #17
  br label %68

68:                                               ; preds = %64, %66
  ret void
}

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind }
attributes #17 = { builtin nounwind }
attributes #18 = { noreturn nounwind }
attributes #19 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i32 -2143835339}
!4 = !{i32 -2143835318}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!7 = distinct !{!7, !"_ZNK10CFX_MatrixmlERKS_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!10 = distinct !{!10, !"_ZNK10CFX_MatrixmlERKS_"}
!11 = !{i8 0, i8 2}
