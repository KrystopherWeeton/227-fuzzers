; ModuleID = '../../gpu/config/vulkan_info.cc'
source_filename = "../../gpu/config/vulkan_info.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.gpu::VulkanPhysicalDeviceInfo" = type { %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceDriverProperties, %"class.std::__1::vector", %struct.VkPhysicalDeviceFeatures, i8, i8, %"class.std::__1::vector.1" }
%struct.VkPhysicalDevice_T = type opaque
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceDriverProperties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }
%struct.VkConformanceVersion = type { i8, i8, i8, i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %struct.VkExtensionProperties*, %struct.VkExtensionProperties*, %"class.std::__1::__compressed_pair" }
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %struct.VkExtensionProperties* }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties*, %"class.std::__1::__compressed_pair.3" }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %struct.VkQueueFamilyProperties* }
%"class.gpu::VulkanInfo" = type { i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.8", %"class.std::__1::vector.15", %"class.std::__1::vector.22" }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { i8**, i8**, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { i8** }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %struct.VkLayerProperties*, %struct.VkLayerProperties*, %"class.std::__1::__compressed_pair.17" }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %struct.VkLayerProperties* }
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { %"class.gpu::VulkanPhysicalDeviceInfo"*, %"class.gpu::VulkanPhysicalDeviceInfo"*, %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.gpu::VulkanPhysicalDeviceInfo"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { i8*, i8*, %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { i8* }
%"class.std::__1::vector.42" = type { %"class.std::__1::__vector_base.43" }
%"class.std::__1::__vector_base.43" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.44" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.base::BasicStringPiece"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.mojo::internal::MessageFragment" = type { %"class.mojo::Message"*, i64 }
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector.50", %"class.std::__1::vector.58", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector.50" = type { %"class.std::__1::__vector_base.51" }
%"class.std::__1::__vector_base.51" = type { %"class.mojo::ScopedHandleBase.52"*, %"class.mojo::ScopedHandleBase.52"*, %"class.std::__1::__compressed_pair.53" }
%"class.mojo::ScopedHandleBase.52" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.mojo::ScopedHandleBase.52"* }
%"class.std::__1::vector.58" = type { %"class.std::__1::__vector_base.59" }
%"class.std::__1::__vector_base.59" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.60" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.65 }
%class.scoped_refptr.65 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.69, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.71", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.66" }
%"struct.std::__1::__atomic_base.66" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.67 }
%class.scoped_refptr.67 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.68", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.68" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.69 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.70" }>
%"class.base::RefCountedThreadSafe.70" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.71" = type { %"struct.std::__1::__atomic_base.72" }
%"struct.std::__1::__atomic_base.72" = type { %"struct.std::__1::__atomic_base.73" }
%"struct.std::__1::__atomic_base.73" = type { %"struct.std::__1::__cxx_atomic_impl.74" }
%"struct.std::__1::__cxx_atomic_impl.74" = type { %"struct.std::__1::__cxx_atomic_base_impl.75" }
%"struct.std::__1::__cxx_atomic_base_impl.75" = type { i32 }
%"class.mojo::AssociatedGroupController" = type opaque
%"class.mojo::internal::MessageFragment.86" = type { %"class.mojo::Message"*, i64 }
%"class.mojo::internal::MessageFragment.95" = type { %"class.mojo::Message"*, i64 }
%"class.mojo::internal::MessageFragment.98" = type { %"class.mojo::Message"*, i64 }
%"class.mojo::internal::ContainerValidateParams" = type { i32, i8, %"class.mojo::internal::ContainerValidateParams"*, %"class.mojo::internal::ContainerValidateParams"*, i1 (i32, %"class.mojo::internal::ValidationContext"*)* }
%"class.mojo::internal::ValidationContext" = type <{ %"class.mojo::Message"*, i8*, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.gpu::mojom::internal::VulkanInfo_Data" = type { %"struct.mojo::internal::StructHeader", i32, i32, %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer.76", %"struct.mojo::internal::Pointer.77", %"struct.mojo::internal::Pointer.78" }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.mojo::internal::Pointer" = type { i64 }
%"struct.mojo::internal::Pointer.76" = type { i64 }
%"struct.mojo::internal::Pointer.77" = type { i64 }
%"struct.mojo::internal::Pointer.78" = type { i64 }
%"class.mojo::internal::Array_Data" = type { %"struct.mojo::internal::ArrayHeader" }
%"struct.mojo::internal::ArrayHeader" = type { i32, i32 }
%"class.gpu::mojom::internal::VkExtensionProperties_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer.88", i32, [4 x i8] }
%"struct.mojo::internal::Pointer.88" = type { i64 }
%"class.mojo::internal::Array_Data.81" = type { %"struct.mojo::internal::ArrayHeader" }
%"class.mojo::internal::Array_Data.90" = type { %"struct.mojo::internal::ArrayHeader" }
%"class.mojo::internal::Array_Data.83" = type { %"struct.mojo::internal::ArrayHeader" }
%"class.gpu::mojom::internal::VkLayerProperties_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer.88", i32, i32, %"struct.mojo::internal::Pointer.88" }
%"class.mojo::internal::Array_Data.85" = type { %"struct.mojo::internal::ArrayHeader" }
%"class.gpu::mojom::internal::VulkanPhysicalDeviceInfo_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer.100", %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer.101", i8, [7 x i8], %"struct.mojo::internal::Pointer.102" }
%"struct.mojo::internal::Pointer.100" = type { i64 }
%"struct.mojo::internal::Pointer.101" = type { i64 }
%"struct.mojo::internal::Pointer.102" = type { i64 }
%"class.mojo::internal::MessageFragment.126" = type { %"class.mojo::Message"*, i64 }
%"class.mojo::internal::MessageFragment.103" = type { %"class.mojo::Message"*, i64 }
%"class.mojo::internal::MessageFragment.107" = type { %"class.mojo::Message"*, i64 }
%"class.gpu::mojom::internal::VkPhysicalDeviceProperties_Data" = type { %"struct.mojo::internal::StructHeader", i32, i32, i32, i32, i32, [4 x i8], %"struct.mojo::internal::Pointer.88", %"struct.mojo::internal::Pointer.104", %"struct.mojo::internal::Pointer.105", %"struct.mojo::internal::Pointer.106" }
%"struct.mojo::internal::Pointer.104" = type { i64 }
%"struct.mojo::internal::Pointer.105" = type { i64 }
%"struct.mojo::internal::Pointer.106" = type { i64 }
%"class.gpu::mojom::internal::VkPhysicalDeviceFeatures_Data" = type { %"struct.mojo::internal::StructHeader", [7 x i8], [1 x i8] }
%"class.mojo::internal::Array_Data.109" = type { %"struct.mojo::internal::ArrayHeader" }
%"class.gpu::mojom::internal::VkQueueFamilyProperties_Data" = type { %"struct.mojo::internal::StructHeader", i32, i32, i32, [4 x i8], %"struct.mojo::internal::Pointer.128" }
%"struct.mojo::internal::Pointer.128" = type { i64 }
%"class.mojo::internal::MessageFragment.112" = type { %"class.mojo::Message"*, i64 }
%"class.mojo::internal::Array_Data.111" = type { %"struct.mojo::internal::ArrayHeader" }
%"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data" = type { %"struct.mojo::internal::StructHeader", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.mojo::internal::Pointer.113", i32, i32, %"struct.mojo::internal::Pointer.113", i32, i32, i32, i32, float, float, i32, i32, %"struct.mojo::internal::Pointer.113", %"struct.mojo::internal::Pointer.114", i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], float, i32, i32, i32, i32, float, %"struct.mojo::internal::Pointer.114", %"struct.mojo::internal::Pointer.114", float, [4 x i8], i64, i64, i64 }
%"struct.mojo::internal::Pointer.113" = type { i64 }
%"struct.mojo::internal::Pointer.114" = type { i64 }
%"class.gpu::mojom::internal::VkPhysicalDeviceSparseProperties_Data" = type { %"struct.mojo::internal::StructHeader", i8, [7 x i8] }
%"class.mojo::internal::Array_Data.119" = type { %"struct.mojo::internal::ArrayHeader" }
%"class.mojo::internal::Array_Data.122" = type { %"struct.mojo::internal::ArrayHeader" }
%"class.gpu::mojom::internal::VkExtent3D_Data" = type { %"struct.mojo::internal::StructHeader", i32, i32, i32, [4 x i8] }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16vectorI21VkExtensionPropertiesNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_ = comdat any

$_ZNSt3__16vectorI23VkQueueFamilyPropertiesNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_ = comdat any

$_ZNSt3__16vectorI17VkLayerPropertiesNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_ = comdat any

$_ZNSt3__16vectorIN3gpu24VulkanPhysicalDeviceInfoENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZN4mojo8internal13SerializeImplIN3gpu5mojom18VulkanInfoDataViewENSt3__16vectorIhNS5_9allocatorIhEEEEKNS2_10VulkanInfoEEET0_PT1_ = comdat any

$_ZN4mojo8internal10SerializerIN3gpu5mojom18VulkanInfoDataViewEKNS2_10VulkanInfoEE9SerializeERS6_RNS0_15MessageFragmentINS3_8internal15VulkanInfo_DataEEE = comdat any

$_ZN4mojo12StructTraitsIN3gpu5mojom18VulkanInfoDataViewENS1_10VulkanInfoEE27enabled_instance_extensionsERKS4_ = comdat any

$_ZN4mojo8internal23ContainerValidateParamsD2Ev = comdat any

$_ZN4mojo8internal10SerializerIN3gpu5mojom29VkExtensionPropertiesDataViewEK21VkExtensionPropertiesE9SerializeERS6_RNS0_15MessageFragmentINS3_8internal26VkExtensionProperties_DataEEE = comdat any

$_ZNSt3__16vectorIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS5_EEE24__emplace_back_slow_pathIJRPKcEEEvDpOT_ = comdat any

$_ZN4mojo8internal10SerializerIN3gpu5mojom25VkLayerPropertiesDataViewEK17VkLayerPropertiesE9SerializeERS6_RNS0_15MessageFragmentINS3_8internal22VkLayerProperties_DataEEE = comdat any

$_ZN4mojo8internal10SerializerIN3gpu5mojom32VulkanPhysicalDeviceInfoDataViewEKNS2_24VulkanPhysicalDeviceInfoEE9SerializeERS6_RNS0_15MessageFragmentINS3_8internal29VulkanPhysicalDeviceInfo_DataEEE = comdat any

$_ZN4mojo8internal10SerializerIN3gpu5mojom34VkPhysicalDevicePropertiesDataViewEK26VkPhysicalDevicePropertiesE9SerializeERS6_RNS0_15MessageFragmentINS3_8internal31VkPhysicalDeviceProperties_DataEEE = comdat any

$_ZN4mojo8internal10SerializerIN3gpu5mojom30VkPhysicalDeviceLimitsDataViewEK22VkPhysicalDeviceLimitsE9SerializeERS6_RNS0_15MessageFragmentINS3_8internal27VkPhysicalDeviceLimits_DataEEE = comdat any

$_ZN4mojo8internal10SerializerIN3gpu5mojom32VkPhysicalDeviceFeaturesDataViewEK24VkPhysicalDeviceFeaturesE9SerializeERS6_RNS0_15MessageFragmentINS3_8internal29VkPhysicalDeviceFeatures_DataEEE = comdat any

$_ZN4mojo8internal10SerializerIN3gpu5mojom31VkQueueFamilyPropertiesDataViewEK23VkQueueFamilyPropertiesE9SerializeERS6_RNS0_15MessageFragmentINS3_8internal28VkQueueFamilyProperties_DataEEE = comdat any

@.str = private unnamed_addr constant [32 x i8] c"../../gpu/config/vulkan_info.cc\00", align 1
@.str.1 = private unnamed_addr constant [24 x i8] c"The enabled extension '\00", align 1
@.str.2 = private unnamed_addr constant [33 x i8] c"' is not in instance_extensions!\00", align 1
@.str.3 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN3gpu24VulkanPhysicalDeviceInfoC1Ev = hidden unnamed_addr alias void (%"class.gpu::VulkanPhysicalDeviceInfo"*), void (%"class.gpu::VulkanPhysicalDeviceInfo"*)* @_ZN3gpu24VulkanPhysicalDeviceInfoC2Ev
@_ZN3gpu24VulkanPhysicalDeviceInfoC1ERKS0_ = hidden unnamed_addr alias void (%"class.gpu::VulkanPhysicalDeviceInfo"*, %"class.gpu::VulkanPhysicalDeviceInfo"*), void (%"class.gpu::VulkanPhysicalDeviceInfo"*, %"class.gpu::VulkanPhysicalDeviceInfo"*)* @_ZN3gpu24VulkanPhysicalDeviceInfoC2ERKS0_
@_ZN3gpu24VulkanPhysicalDeviceInfoD1Ev = hidden unnamed_addr alias void (%"class.gpu::VulkanPhysicalDeviceInfo"*), void (%"class.gpu::VulkanPhysicalDeviceInfo"*)* @_ZN3gpu24VulkanPhysicalDeviceInfoD2Ev
@_ZN3gpu10VulkanInfoC1Ev = hidden unnamed_addr alias void (%"class.gpu::VulkanInfo"*), void (%"class.gpu::VulkanInfo"*)* @_ZN3gpu10VulkanInfoC2Ev
@_ZN3gpu10VulkanInfoD1Ev = hidden unnamed_addr alias void (%"class.gpu::VulkanInfo"*), void (%"class.gpu::VulkanInfo"*)* @_ZN3gpu10VulkanInfoD2Ev
@_ZN3gpu10VulkanInfoC1ERKS0_ = hidden unnamed_addr alias void (%"class.gpu::VulkanInfo"*, %"class.gpu::VulkanInfo"*), void (%"class.gpu::VulkanInfo"*, %"class.gpu::VulkanInfo"*)* @_ZN3gpu10VulkanInfoC2ERKS0_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu24VulkanPhysicalDeviceInfoC2Ev(%"class.gpu::VulkanPhysicalDeviceInfo"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %0, i64 0, i32 1, i32 7
  %3 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %0, i64 0, i32 2, i32 0
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %0, i64 0, i32 2, i32 1
  %5 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %0, i64 0, i32 7
  %6 = bitcast %"class.std::__1::vector.1"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #12
  %7 = bitcast %"class.gpu::VulkanPhysicalDeviceInfo"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 300, i1 false)
  %8 = bitcast %struct.VkPhysicalDeviceLimits* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 524, i1 false)
  %9 = bitcast i8** %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 774, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu24VulkanPhysicalDeviceInfoC2ERKS0_(%"class.gpu::VulkanPhysicalDeviceInfo"*, %"class.gpu::VulkanPhysicalDeviceInfo"* nocapture readonly dereferenceable(1640)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.gpu::VulkanPhysicalDeviceInfo"* %0 to i8*
  %4 = bitcast %"class.gpu::VulkanPhysicalDeviceInfo"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 1368, i1 false)
  %5 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %1, i64 0, i32 3
  %7 = bitcast %"class.std::__1::vector"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #12
  %8 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %1, i64 0, i32 3, i32 0, i32 1
  %9 = bitcast %struct.VkExtensionProperties** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %6 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 260
  %15 = icmp eq i64 %13, 0
  br i1 %15, label %43, label %16

16:                                               ; preds = %2
  %17 = icmp ugt i64 %14, 70949015668113660
  br i1 %17, label %18, label %20

18:                                               ; preds = %16
  %19 = bitcast %"class.std::__1::vector"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %19) #13
  unreachable

20:                                               ; preds = %16
  %21 = tail call i8* @_Znwm(i64 %13) #14
  %22 = bitcast i8* %21 to %struct.VkExtensionProperties*
  %23 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %0, i64 0, i32 3, i32 0, i32 1
  %24 = bitcast %struct.VkExtensionProperties** %23 to i8**
  store i8* %21, i8** %24, align 8
  %25 = bitcast %"class.std::__1::vector"* %5 to i8**
  store i8* %21, i8** %25, align 8
  %26 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %22, i64 %14
  %27 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  store %struct.VkExtensionProperties* %26, %struct.VkExtensionProperties** %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %29 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %28, align 8
  %30 = load i64, i64* %9, align 8
  %31 = bitcast %struct.VkExtensionProperties** %23 to i64*
  %32 = ptrtoint i8* %21 to i64
  %33 = ptrtoint %struct.VkExtensionProperties* %29 to i64
  %34 = sub i64 %30, %33
  %35 = icmp sgt i64 %34, 0
  br i1 %35, label %36, label %41

36:                                               ; preds = %20
  %37 = udiv exact i64 %34, 260
  %38 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %29, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %21, i8* align 4 %38, i64 %34, i1 false) #12
  %39 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %22, i64 %37
  %40 = ptrtoint %struct.VkExtensionProperties* %39 to i64
  br label %41

41:                                               ; preds = %36, %20
  %42 = phi i64 [ %40, %36 ], [ %32, %20 ]
  store i64 %42, i64* %31, align 8
  br label %43

43:                                               ; preds = %2, %41
  %44 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %0, i64 0, i32 4
  %45 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %1, i64 0, i32 4
  %46 = bitcast %struct.VkPhysicalDeviceFeatures* %44 to i8*
  %47 = bitcast %struct.VkPhysicalDeviceFeatures* %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 222, i1 false)
  %48 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %0, i64 0, i32 7
  %49 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %1, i64 0, i32 7
  %50 = bitcast %"class.std::__1::vector.1"* %48 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 24, i1 false) #12
  %51 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %1, i64 0, i32 7, i32 0, i32 1
  %52 = bitcast %struct.VkQueueFamilyProperties** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.std::__1::vector.1"* %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = sub i64 %53, %55
  %57 = sdiv exact i64 %56, 24
  %58 = icmp eq i64 %56, 0
  br i1 %58, label %86, label %59

59:                                               ; preds = %43
  %60 = icmp ugt i64 %57, 768614336404564650
  br i1 %60, label %61, label %63

61:                                               ; preds = %59
  %62 = bitcast %"class.std::__1::vector.1"* %48 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %62) #13
  unreachable

63:                                               ; preds = %59
  %64 = tail call i8* @_Znwm(i64 %56) #14
  %65 = bitcast i8* %64 to %struct.VkQueueFamilyProperties*
  %66 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %0, i64 0, i32 7, i32 0, i32 1
  %67 = bitcast %struct.VkQueueFamilyProperties** %66 to i8**
  store i8* %64, i8** %67, align 8
  %68 = bitcast %"class.std::__1::vector.1"* %48 to i8**
  store i8* %64, i8** %68, align 8
  %69 = getelementptr inbounds %struct.VkQueueFamilyProperties, %struct.VkQueueFamilyProperties* %65, i64 %57
  %70 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  store %struct.VkQueueFamilyProperties* %69, %struct.VkQueueFamilyProperties** %70, align 8
  %71 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %49, i64 0, i32 0, i32 0
  %72 = load %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties** %71, align 8
  %73 = load i64, i64* %52, align 8
  %74 = bitcast %struct.VkQueueFamilyProperties** %66 to i64*
  %75 = ptrtoint i8* %64 to i64
  %76 = ptrtoint %struct.VkQueueFamilyProperties* %72 to i64
  %77 = sub i64 %73, %76
  %78 = icmp sgt i64 %77, 0
  br i1 %78, label %79, label %84

79:                                               ; preds = %63
  %80 = udiv exact i64 %77, 24
  %81 = bitcast %struct.VkQueueFamilyProperties* %72 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %64, i8* align 4 %81, i64 %77, i1 false) #12
  %82 = getelementptr inbounds %struct.VkQueueFamilyProperties, %struct.VkQueueFamilyProperties* %65, i64 %80
  %83 = ptrtoint %struct.VkQueueFamilyProperties* %82 to i64
  br label %84

84:                                               ; preds = %79, %63
  %85 = phi i64 [ %83, %79 ], [ %75, %63 ]
  store i64 %85, i64* %74, align 8
  br label %86

86:                                               ; preds = %43, %84
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu24VulkanPhysicalDeviceInfoD2Ev(%"class.gpu::VulkanPhysicalDeviceInfo"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties** %2, align 8
  %4 = icmp eq %struct.VkQueueFamilyProperties* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %struct.VkQueueFamilyProperties* %3 to i64
  %7 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %0, i64 0, i32 7, i32 0, i32 1
  %8 = bitcast %struct.VkQueueFamilyProperties** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %struct.VkQueueFamilyProperties* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #14
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %11, align 8
  %13 = icmp eq %struct.VkExtensionProperties* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint %struct.VkExtensionProperties* %12 to i64
  %16 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %0, i64 0, i32 3, i32 0, i32 1
  %17 = bitcast %struct.VkExtensionProperties** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %12, i64 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %18) #14
  br label %19

19:                                               ; preds = %10, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(1640) %"class.gpu::VulkanPhysicalDeviceInfo"* @_ZN3gpu24VulkanPhysicalDeviceInfoaSERKS0_(%"class.gpu::VulkanPhysicalDeviceInfo"* returned, %"class.gpu::VulkanPhysicalDeviceInfo"* readonly dereferenceable(1640)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.gpu::VulkanPhysicalDeviceInfo"* %0 to i8*
  %4 = bitcast %"class.gpu::VulkanPhysicalDeviceInfo"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 1368, i1 false)
  %5 = icmp eq %"class.gpu::VulkanPhysicalDeviceInfo"* %0, %1
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %0, i64 0, i32 4
  %8 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %1, i64 0, i32 4
  %9 = bitcast %struct.VkPhysicalDeviceFeatures* %7 to i8*
  %10 = bitcast %struct.VkPhysicalDeviceFeatures* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 222, i1 false)
  br label %26

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %0, i64 0, i32 3
  %13 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %1, i64 0, i32 3, i32 0, i32 0
  %14 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %13, align 8
  %15 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %1, i64 0, i32 3, i32 0, i32 1
  %16 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %15, align 8
  tail call void @_ZNSt3__16vectorI21VkExtensionPropertiesNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector"* %12, %struct.VkExtensionProperties* %14, %struct.VkExtensionProperties* %16) #12
  %17 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %0, i64 0, i32 4
  %18 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %1, i64 0, i32 4
  %19 = bitcast %struct.VkPhysicalDeviceFeatures* %17 to i8*
  %20 = bitcast %struct.VkPhysicalDeviceFeatures* %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 222, i1 false)
  %21 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %0, i64 0, i32 7
  %22 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %1, i64 0, i32 7, i32 0, i32 0
  %23 = load %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties** %22, align 8
  %24 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %1, i64 0, i32 7, i32 0, i32 1
  %25 = load %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties** %24, align 8
  tail call void @_ZNSt3__16vectorI23VkQueueFamilyPropertiesNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.1"* %21, %struct.VkQueueFamilyProperties* %23, %struct.VkQueueFamilyProperties* %25) #12
  br label %26

26:                                               ; preds = %6, %11
  ret %"class.gpu::VulkanPhysicalDeviceInfo"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu10VulkanInfoC2Ev(%"class.gpu::VulkanInfo"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %0, i64 0, i32 0
  store i32 4194304, i32* %2, align 8
  %3 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %0, i64 0, i32 1
  store i32 4194304, i32* %3, align 4
  %4 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %0, i64 0, i32 2
  %5 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 96, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu10VulkanInfoD2Ev(%"class.gpu::VulkanInfo"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %0, i64 0, i32 5
  %3 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.gpu::VulkanPhysicalDeviceInfo"*, %"class.gpu::VulkanPhysicalDeviceInfo"** %3, align 8
  %5 = icmp eq %"class.gpu::VulkanPhysicalDeviceInfo"* %4, null
  br i1 %5, label %38, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gpu::VulkanPhysicalDeviceInfo"* %4 to i8*
  %8 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %0, i64 0, i32 5, i32 0, i32 1
  %9 = load %"class.gpu::VulkanPhysicalDeviceInfo"*, %"class.gpu::VulkanPhysicalDeviceInfo"** %8, align 8
  %10 = icmp eq %"class.gpu::VulkanPhysicalDeviceInfo"* %9, %4
  br i1 %10, label %36, label %11

11:                                               ; preds = %6, %31
  %12 = phi %"class.gpu::VulkanPhysicalDeviceInfo"* [ %13, %31 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %12, i64 -1
  %14 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %12, i64 -1, i32 7, i32 0, i32 0
  %15 = load %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties** %14, align 8
  %16 = icmp eq %struct.VkQueueFamilyProperties* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = ptrtoint %struct.VkQueueFamilyProperties* %15 to i64
  %19 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %12, i64 -1, i32 7, i32 0, i32 1
  %20 = bitcast %struct.VkQueueFamilyProperties** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %struct.VkQueueFamilyProperties* %15 to i8*
  tail call void @_ZdlPv(i8* %21) #14
  br label %22

22:                                               ; preds = %17, %11
  %23 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %12, i64 -1, i32 3, i32 0, i32 0
  %24 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %23, align 8
  %25 = icmp eq %struct.VkExtensionProperties* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %22
  %27 = ptrtoint %struct.VkExtensionProperties* %24 to i64
  %28 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %12, i64 -1, i32 3, i32 0, i32 1
  %29 = bitcast %struct.VkExtensionProperties** %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %24, i64 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %30) #14
  br label %31

31:                                               ; preds = %26, %22
  %32 = icmp eq %"class.gpu::VulkanPhysicalDeviceInfo"* %13, %4
  br i1 %32, label %33, label %11

33:                                               ; preds = %31
  %34 = bitcast %"class.std::__1::vector.22"* %2 to i8**
  %35 = load i8*, i8** %34, align 8
  br label %36

36:                                               ; preds = %33, %6
  %37 = phi i8* [ %35, %33 ], [ %7, %6 ]
  store %"class.gpu::VulkanPhysicalDeviceInfo"* %4, %"class.gpu::VulkanPhysicalDeviceInfo"** %8, align 8
  tail call void @_ZdlPv(i8* %37) #14
  br label %38

38:                                               ; preds = %1, %36
  %39 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %0, i64 0, i32 4, i32 0, i32 0
  %40 = load %struct.VkLayerProperties*, %struct.VkLayerProperties** %39, align 8
  %41 = icmp eq %struct.VkLayerProperties* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %38
  %43 = ptrtoint %struct.VkLayerProperties* %40 to i64
  %44 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %0, i64 0, i32 4, i32 0, i32 1
  %45 = bitcast %struct.VkLayerProperties** %44 to i64*
  store i64 %43, i64* %45, align 8
  %46 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %40, i64 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %46) #14
  br label %47

47:                                               ; preds = %38, %42
  %48 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %0, i64 0, i32 3, i32 0, i32 0
  %49 = load i8**, i8*** %48, align 8
  %50 = icmp eq i8** %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = ptrtoint i8** %49 to i64
  %53 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %0, i64 0, i32 3, i32 0, i32 1
  %54 = bitcast i8*** %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = bitcast i8** %49 to i8*
  tail call void @_ZdlPv(i8* %55) #14
  br label %56

56:                                               ; preds = %47, %51
  %57 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %58 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %57, align 8
  %59 = icmp eq %struct.VkExtensionProperties* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %56
  %61 = ptrtoint %struct.VkExtensionProperties* %58 to i64
  %62 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %0, i64 0, i32 2, i32 0, i32 1
  %63 = bitcast %struct.VkExtensionProperties** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %58, i64 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %64) #14
  br label %65

65:                                               ; preds = %56, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu10VulkanInfoC2ERKS0_(%"class.gpu::VulkanInfo"*, %"class.gpu::VulkanInfo"* readonly dereferenceable(104)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %0, i64 0, i32 0
  store i32 4194304, i32* %3, align 8
  %4 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %0, i64 0, i32 1
  store i32 4194304, i32* %4, align 4
  %5 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %1, i64 0, i32 0
  %7 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 96, i1 false)
  %8 = load i32, i32* %6, align 8
  store i32 %8, i32* %3, align 8
  %9 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %1, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  store i32 %10, i32* %4, align 4
  %11 = icmp eq %"class.gpu::VulkanInfo"* %0, %1
  br i1 %11, label %27, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %0, i64 0, i32 5
  %14 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %0, i64 0, i32 4
  %15 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %1, i64 0, i32 2, i32 0, i32 0
  %16 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %15, align 8
  %17 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %1, i64 0, i32 2, i32 0, i32 1
  %18 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %17, align 8
  tail call void @_ZNSt3__16vectorI21VkExtensionPropertiesNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector"* %5, %struct.VkExtensionProperties* %16, %struct.VkExtensionProperties* %18) #12
  %19 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %1, i64 0, i32 4, i32 0, i32 0
  %20 = load %struct.VkLayerProperties*, %struct.VkLayerProperties** %19, align 8
  %21 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %1, i64 0, i32 4, i32 0, i32 1
  %22 = load %struct.VkLayerProperties*, %struct.VkLayerProperties** %21, align 8
  tail call void @_ZNSt3__16vectorI17VkLayerPropertiesNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.15"* %14, %struct.VkLayerProperties* %20, %struct.VkLayerProperties* %22) #12
  %23 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %1, i64 0, i32 5, i32 0, i32 0
  %24 = load %"class.gpu::VulkanPhysicalDeviceInfo"*, %"class.gpu::VulkanPhysicalDeviceInfo"** %23, align 8
  %25 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %1, i64 0, i32 5, i32 0, i32 1
  %26 = load %"class.gpu::VulkanPhysicalDeviceInfo"*, %"class.gpu::VulkanPhysicalDeviceInfo"** %25, align 8
  tail call void @_ZNSt3__16vectorIN3gpu24VulkanPhysicalDeviceInfoENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.22"* %13, %"class.gpu::VulkanPhysicalDeviceInfo"* %24, %"class.gpu::VulkanPhysicalDeviceInfo"* %26) #12
  br label %27

27:                                               ; preds = %2, %12
  %28 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %1, i64 0, i32 3
  tail call void @_ZN3gpu10VulkanInfo28SetEnabledInstanceExtensionsERKNSt3__16vectorIPKcNS1_9allocatorIS4_EEEE(%"class.gpu::VulkanInfo"* %0, %"class.std::__1::vector.8"* dereferenceable(24) %28) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(104) %"class.gpu::VulkanInfo"* @_ZN3gpu10VulkanInfoaSERKS0_(%"class.gpu::VulkanInfo"* returned, %"class.gpu::VulkanInfo"* readonly dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %0, i64 0, i32 0
  store i32 %4, i32* %5, align 8
  %6 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %0, i64 0, i32 1
  store i32 %7, i32* %8, align 4
  %9 = icmp eq %"class.gpu::VulkanInfo"* %0, %1
  br i1 %9, label %26, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %1, i64 0, i32 2, i32 0, i32 0
  %13 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %12, align 8
  %14 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %1, i64 0, i32 2, i32 0, i32 1
  %15 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %14, align 8
  tail call void @_ZNSt3__16vectorI21VkExtensionPropertiesNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector"* %11, %struct.VkExtensionProperties* %13, %struct.VkExtensionProperties* %15) #12
  %16 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %0, i64 0, i32 4
  %17 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %1, i64 0, i32 4, i32 0, i32 0
  %18 = load %struct.VkLayerProperties*, %struct.VkLayerProperties** %17, align 8
  %19 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %1, i64 0, i32 4, i32 0, i32 1
  %20 = load %struct.VkLayerProperties*, %struct.VkLayerProperties** %19, align 8
  tail call void @_ZNSt3__16vectorI17VkLayerPropertiesNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.15"* %16, %struct.VkLayerProperties* %18, %struct.VkLayerProperties* %20) #12
  %21 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %0, i64 0, i32 5
  %22 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %1, i64 0, i32 5, i32 0, i32 0
  %23 = load %"class.gpu::VulkanPhysicalDeviceInfo"*, %"class.gpu::VulkanPhysicalDeviceInfo"** %22, align 8
  %24 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %1, i64 0, i32 5, i32 0, i32 1
  %25 = load %"class.gpu::VulkanPhysicalDeviceInfo"*, %"class.gpu::VulkanPhysicalDeviceInfo"** %24, align 8
  tail call void @_ZNSt3__16vectorIN3gpu24VulkanPhysicalDeviceInfoENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.22"* %21, %"class.gpu::VulkanPhysicalDeviceInfo"* %23, %"class.gpu::VulkanPhysicalDeviceInfo"* %25) #12
  br label %26

26:                                               ; preds = %2, %10
  %27 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %1, i64 0, i32 3
  tail call void @_ZN3gpu10VulkanInfo28SetEnabledInstanceExtensionsERKNSt3__16vectorIPKcNS1_9allocatorIS4_EEEE(%"class.gpu::VulkanInfo"* %0, %"class.std::__1::vector.8"* dereferenceable(24) %27)
  ret %"class.gpu::VulkanInfo"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu10VulkanInfo28SetEnabledInstanceExtensionsERKNSt3__16vectorIPKcNS1_9allocatorIS4_EEEE(%"class.gpu::VulkanInfo"*, %"class.std::__1::vector.8"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::LogMessage", align 8
  %4 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %0, i64 0, i32 3
  %5 = bitcast %"class.std::__1::vector.8"* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %0, i64 0, i32 3, i32 0, i32 1
  %8 = bitcast i8*** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %1, i64 0, i32 0, i32 0
  %10 = load i8**, i8*** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %1, i64 0, i32 0, i32 1
  %12 = load i8**, i8*** %11, align 8
  %13 = icmp eq i8** %10, %12
  br i1 %13, label %23, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %16 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %0, i64 0, i32 2, i32 0, i32 1
  %17 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %18 = bitcast i8*** %17 to i64*
  %19 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %4, i64 0, i32 0, i32 0
  %20 = bitcast %"class.logging::LogMessage"* %3 to i8*
  %21 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %3, i64 0, i32 2
  %22 = bitcast %"class.std::__1::basic_ostringstream"* %21 to %"class.std::__1::basic_ostream"*
  br label %24

23:                                               ; preds = %108, %2
  ret void

24:                                               ; preds = %14, %108
  %25 = phi i8** [ %10, %14 ], [ %109, %108 ]
  %26 = load i8*, i8** %25, align 8
  %27 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %15, align 8
  %28 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %16, align 8
  %29 = icmp eq %struct.VkExtensionProperties* %27, %28
  br i1 %29, label %101, label %30

30:                                               ; preds = %24, %98
  %31 = phi %struct.VkExtensionProperties* [ %99, %98 ], [ %27, %24 ]
  %32 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %31, i64 0, i32 0, i64 0
  %33 = call i32 @strcmp(i8* %26, i8* %32) #15
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %98

35:                                               ; preds = %30
  %36 = ptrtoint %struct.VkExtensionProperties* %31 to i64
  %37 = load i8**, i8*** %7, align 8
  %38 = load i8**, i8*** %17, align 8
  %39 = icmp ult i8** %37, %38
  %40 = ptrtoint i8** %38 to i64
  br i1 %39, label %41, label %45

41:                                               ; preds = %35
  %42 = bitcast i8** %37 to i64*
  store i64 %36, i64* %42, align 8
  %43 = getelementptr inbounds i8*, i8** %37, i64 1
  %44 = ptrtoint i8** %43 to i64
  store i64 %44, i64* %8, align 8
  br label %108

45:                                               ; preds = %35
  %46 = ptrtoint i8** %37 to i64
  %47 = load i64, i64* %5, align 8
  %48 = sub i64 %46, %47
  %49 = ashr exact i64 %48, 3
  %50 = add nsw i64 %49, 1
  %51 = icmp ugt i64 %50, 2305843009213693951
  br i1 %51, label %52, label %54

52:                                               ; preds = %45
  %53 = bitcast %"class.std::__1::vector.8"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %53) #13
  unreachable

54:                                               ; preds = %45
  %55 = sub i64 %40, %47
  %56 = ashr exact i64 %55, 3
  %57 = icmp ult i64 %56, 1152921504606846975
  br i1 %57, label %58, label %66

58:                                               ; preds = %54
  %59 = ashr exact i64 %55, 2
  %60 = icmp ult i64 %59, %50
  %61 = select i1 %60, i64 %50, i64 %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %58
  %64 = icmp ugt i64 %61, 2305843009213693951
  br i1 %64, label %65, label %66

65:                                               ; preds = %63
  call void @abort() #13
  unreachable

66:                                               ; preds = %63, %54
  %67 = phi i64 [ %61, %63 ], [ 2305843009213693951, %54 ]
  %68 = shl i64 %67, 3
  %69 = call i8* @_Znwm(i64 %68) #14
  %70 = bitcast i8* %69 to i8**
  br label %71

71:                                               ; preds = %66, %58
  %72 = phi i64 [ %67, %66 ], [ 0, %58 ]
  %73 = phi i8** [ %70, %66 ], [ null, %58 ]
  %74 = getelementptr inbounds i8*, i8** %73, i64 %49
  %75 = getelementptr inbounds i8*, i8** %73, i64 %72
  %76 = ptrtoint i8** %75 to i64
  %77 = bitcast i8** %74 to i64*
  store i64 %36, i64* %77, align 8
  %78 = getelementptr inbounds i8*, i8** %74, i64 1
  %79 = ptrtoint i8** %78 to i64
  %80 = load i8**, i8*** %19, align 8
  %81 = load i64, i64* %8, align 8
  %82 = ptrtoint i8** %80 to i64
  %83 = sub i64 %81, %82
  %84 = ashr exact i64 %83, 3
  %85 = sub nsw i64 0, %84
  %86 = getelementptr inbounds i8*, i8** %74, i64 %85
  %87 = ptrtoint i8** %86 to i64
  %88 = icmp sgt i64 %83, 0
  br i1 %88, label %89, label %93

89:                                               ; preds = %71
  %90 = bitcast i8** %86 to i8*
  %91 = bitcast i8** %80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* align 8 %91, i64 %83, i1 false) #12
  %92 = load i8**, i8*** %19, align 8
  br label %93

93:                                               ; preds = %89, %71
  %94 = phi i8** [ %80, %71 ], [ %92, %89 ]
  store i64 %87, i64* %5, align 8
  store i64 %79, i64* %8, align 8
  store i64 %76, i64* %18, align 8
  %95 = icmp eq i8** %94, null
  br i1 %95, label %108, label %96

96:                                               ; preds = %93
  %97 = bitcast i8** %94 to i8*
  call void @_ZdlPv(i8* %97) #14
  br label %108

98:                                               ; preds = %30
  %99 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %31, i64 1
  %100 = icmp eq %struct.VkExtensionProperties* %99, %28
  br i1 %100, label %101, label %30

101:                                              ; preds = %98, %24
  %102 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %102, label %103, label %108

103:                                              ; preds = %101
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %20) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i32 53, i32 2) #12
  %104 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %22, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0), i64 23) #12
  %105 = call i64 @strlen(i8* %26) #12
  %106 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %104, i8* %26, i64 %105) #12
  %107 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %106, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i64 32) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %20) #12
  br label %108

108:                                              ; preds = %41, %93, %96, %103, %101
  %109 = getelementptr inbounds i8*, i8** %25, i64 1
  %110 = icmp eq i8** %109, %12
  br i1 %110, label %23, label %24
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gpu10VulkanInfo9SerializeEv(%"class.std::__1::vector.29"* noalias sret, %"class.gpu::VulkanInfo"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN4mojo8internal13SerializeImplIN3gpu5mojom18VulkanInfoDataViewENSt3__16vectorIhNS5_9allocatorIhEEEEKNS2_10VulkanInfoEEET0_PT1_(%"class.std::__1::vector.29"* sret %0, %"class.gpu::VulkanInfo"* %1) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #3

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu10VulkanInfo28SetEnabledInstanceExtensionsERKNSt3__16vectorIN4base16BasicStringPieceIcNS1_11char_traitsIcEEEENS1_9allocatorIS7_EEEE(%"class.gpu::VulkanInfo"*, %"class.std::__1::vector.42"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::LogMessage", align 8
  %5 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %0, i64 0, i32 3
  %6 = bitcast %"class.std::__1::vector.8"* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %0, i64 0, i32 3, i32 0, i32 1
  %9 = bitcast i8*** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %1, i64 0, i32 0, i32 0
  %11 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %1, i64 0, i32 0, i32 1
  %13 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %12, align 8
  %14 = icmp eq %"class.base::BasicStringPiece"* %11, %13
  br i1 %14, label %25, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %0, i64 0, i32 2, i32 0, i32 0
  %17 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %0, i64 0, i32 2, i32 0, i32 1
  %18 = bitcast %"class.logging::CheckError"* %3 to i8*
  %19 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast i8*** %19 to i64*
  %21 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %5, i64 0, i32 0, i32 0
  %22 = bitcast %"class.logging::LogMessage"* %4 to i8*
  %23 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %4, i64 0, i32 2
  %24 = bitcast %"class.std::__1::basic_ostringstream"* %23 to %"class.std::__1::basic_ostream"*
  br label %26

25:                                               ; preds = %126, %2
  ret void

26:                                               ; preds = %15, %126
  %27 = phi %"class.base::BasicStringPiece"* [ %11, %15 ], [ %127, %126 ]
  %28 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %16, align 8
  %29 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %17, align 8
  %30 = icmp eq %struct.VkExtensionProperties* %28, %29
  br i1 %30, label %116, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %27, i64 0, i32 0
  %33 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %27, i64 0, i32 1
  br label %34

34:                                               ; preds = %31, %113
  %35 = phi %struct.VkExtensionProperties* [ %28, %31 ], [ %114, %113 ]
  %36 = load i8*, i8** %32, align 8
  %37 = load i64, i64* %33, align 8
  %38 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %35, i64 0, i32 0, i64 0
  %39 = icmp eq %struct.VkExtensionProperties* %35, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %34
  %41 = call i64 @strlen(i8* nonnull %38) #12
  br label %44

42:                                               ; preds = %34
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #12
  %43 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  br label %44

44:                                               ; preds = %40, %42
  %45 = phi i64 [ 0, %42 ], [ %41, %40 ]
  %46 = icmp eq i64 %37, %45
  br i1 %46, label %47, label %113

47:                                               ; preds = %44
  %48 = call i32 @bcmp(i8* %36, i8* %38, i64 %37) #12
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %113

50:                                               ; preds = %47
  %51 = ptrtoint %struct.VkExtensionProperties* %35 to i64
  %52 = load i8**, i8*** %8, align 8
  %53 = load i8**, i8*** %19, align 8
  %54 = icmp ult i8** %52, %53
  %55 = ptrtoint i8** %53 to i64
  br i1 %54, label %56, label %60

56:                                               ; preds = %50
  %57 = bitcast i8** %52 to i64*
  store i64 %51, i64* %57, align 8
  %58 = getelementptr inbounds i8*, i8** %52, i64 1
  %59 = ptrtoint i8** %58 to i64
  store i64 %59, i64* %9, align 8
  br label %126

60:                                               ; preds = %50
  %61 = ptrtoint i8** %52 to i64
  %62 = load i64, i64* %6, align 8
  %63 = sub i64 %61, %62
  %64 = ashr exact i64 %63, 3
  %65 = add nsw i64 %64, 1
  %66 = icmp ugt i64 %65, 2305843009213693951
  br i1 %66, label %67, label %69

67:                                               ; preds = %60
  %68 = bitcast %"class.std::__1::vector.8"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %68) #13
  unreachable

69:                                               ; preds = %60
  %70 = sub i64 %55, %62
  %71 = ashr exact i64 %70, 3
  %72 = icmp ult i64 %71, 1152921504606846975
  br i1 %72, label %73, label %81

73:                                               ; preds = %69
  %74 = ashr exact i64 %70, 2
  %75 = icmp ult i64 %74, %65
  %76 = select i1 %75, i64 %65, i64 %74
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %86, label %78

78:                                               ; preds = %73
  %79 = icmp ugt i64 %76, 2305843009213693951
  br i1 %79, label %80, label %81

80:                                               ; preds = %78
  call void @abort() #13
  unreachable

81:                                               ; preds = %78, %69
  %82 = phi i64 [ %76, %78 ], [ 2305843009213693951, %69 ]
  %83 = shl i64 %82, 3
  %84 = call i8* @_Znwm(i64 %83) #14
  %85 = bitcast i8* %84 to i8**
  br label %86

86:                                               ; preds = %81, %73
  %87 = phi i64 [ %82, %81 ], [ 0, %73 ]
  %88 = phi i8** [ %85, %81 ], [ null, %73 ]
  %89 = getelementptr inbounds i8*, i8** %88, i64 %64
  %90 = getelementptr inbounds i8*, i8** %88, i64 %87
  %91 = ptrtoint i8** %90 to i64
  %92 = bitcast i8** %89 to i64*
  store i64 %51, i64* %92, align 8
  %93 = getelementptr inbounds i8*, i8** %89, i64 1
  %94 = ptrtoint i8** %93 to i64
  %95 = load i8**, i8*** %21, align 8
  %96 = load i64, i64* %9, align 8
  %97 = ptrtoint i8** %95 to i64
  %98 = sub i64 %96, %97
  %99 = ashr exact i64 %98, 3
  %100 = sub nsw i64 0, %99
  %101 = getelementptr inbounds i8*, i8** %89, i64 %100
  %102 = ptrtoint i8** %101 to i64
  %103 = icmp sgt i64 %98, 0
  br i1 %103, label %104, label %108

104:                                              ; preds = %86
  %105 = bitcast i8** %101 to i8*
  %106 = bitcast i8** %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 %98, i1 false) #12
  %107 = load i8**, i8*** %21, align 8
  br label %108

108:                                              ; preds = %104, %86
  %109 = phi i8** [ %95, %86 ], [ %107, %104 ]
  store i64 %102, i64* %6, align 8
  store i64 %94, i64* %9, align 8
  store i64 %91, i64* %20, align 8
  %110 = icmp eq i8** %109, null
  br i1 %110, label %126, label %111

111:                                              ; preds = %108
  %112 = bitcast i8** %109 to i8*
  call void @_ZdlPv(i8* %112) #14
  br label %126

113:                                              ; preds = %44, %47
  %114 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %35, i64 1
  %115 = icmp eq %struct.VkExtensionProperties* %114, %29
  br i1 %115, label %116, label %34

116:                                              ; preds = %113, %26
  %117 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %117, label %118, label %126

118:                                              ; preds = %116
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %22) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i32 72, i32 2) #12
  %119 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %24, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0), i64 23) #12
  %120 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %27, i64 0, i32 0
  %121 = load i8*, i8** %120, align 8
  %122 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %27, i64 0, i32 1
  %123 = load i64, i64* %122, align 8
  %124 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4baselsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_16BasicStringPieceIcS3_EE(%"class.std::__1::basic_ostream"* dereferenceable(160) %119, i8* %121, i64 %123) #12
  %125 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %124, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i64 32) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %22) #12
  br label %126

126:                                              ; preds = %56, %108, %111, %118, %116
  %127 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %27, i64 1
  %128 = icmp eq %"class.base::BasicStringPiece"* %127, %13
  br i1 %128, label %25, label %26
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4baselsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_16BasicStringPieceIcS3_EE(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #14
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #14
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI21VkExtensionPropertiesNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector"*, %struct.VkExtensionProperties*, %struct.VkExtensionProperties*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %struct.VkExtensionProperties* %2 to i64
  %5 = ptrtoint %struct.VkExtensionProperties* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 260
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %struct.VkExtensionProperties** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 260
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %struct.VkExtensionProperties*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %struct.VkExtensionProperties** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 260
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %1, i64 %22
  %25 = select i1 %23, %struct.VkExtensionProperties* %24, %struct.VkExtensionProperties* %2
  %26 = ptrtoint %struct.VkExtensionProperties* %25 to i64
  %27 = sub i64 %26, %5
  %28 = sdiv exact i64 %27, 260
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %16, i64 0, i32 0, i64 0
  %32 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %1, i64 0, i32 0, i64 0
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #12
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = udiv exact i64 %36, 260
  %40 = inttoptr i64 %35 to i8*
  %41 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %25, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #12
  %42 = inttoptr i64 %35 to %struct.VkExtensionProperties*
  %43 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %42, i64 %39
  %44 = ptrtoint %struct.VkExtensionProperties* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %87

47:                                               ; preds = %33
  %48 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %16, i64 %28
  store %struct.VkExtensionProperties* %48, %struct.VkExtensionProperties** %18, align 8
  br label %87

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %53 = bitcast %struct.VkExtensionProperties** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %16, i64 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %54) #14
  %55 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #12
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 70949015668113660
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #13
  unreachable

61:                                               ; preds = %56
  %62 = sdiv exact i64 %57, 260
  %63 = icmp ult i64 %62, 35474507834056830
  br i1 %63, label %64, label %68

64:                                               ; preds = %61
  %65 = shl nsw i64 %62, 1
  %66 = icmp ult i64 %65, %7
  %67 = select i1 %66, i64 %7, i64 %65
  br label %68

68:                                               ; preds = %64, %61
  %69 = phi i64 [ %67, %64 ], [ 70949015668113660, %61 ]
  %70 = mul i64 %69, 260
  %71 = tail call i8* @_Znwm(i64 %70) #14
  %72 = bitcast i8* %71 to %struct.VkExtensionProperties*
  %73 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %74 = bitcast %struct.VkExtensionProperties** %73 to i8**
  store i8* %71, i8** %74, align 8
  %75 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %71, i8** %75, align 8
  %76 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %72, i64 %69
  store %struct.VkExtensionProperties* %76, %struct.VkExtensionProperties** %8, align 8
  %77 = bitcast %struct.VkExtensionProperties** %73 to i64*
  %78 = ptrtoint i8* %71 to i64
  %79 = icmp sgt i64 %6, 0
  br i1 %79, label %80, label %85

80:                                               ; preds = %68
  %81 = udiv exact i64 %6, 260
  %82 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %1, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %71, i8* align 4 %82, i64 %6, i1 false) #12
  %83 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %72, i64 %81
  %84 = ptrtoint %struct.VkExtensionProperties* %83 to i64
  br label %85

85:                                               ; preds = %68, %80
  %86 = phi i64 [ %84, %80 ], [ %78, %68 ]
  store i64 %86, i64* %77, align 8
  br label %87

87:                                               ; preds = %45, %47, %85
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI23VkQueueFamilyPropertiesNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.1"*, %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %struct.VkQueueFamilyProperties* %2 to i64
  %5 = ptrtoint %struct.VkQueueFamilyProperties* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 24
  %8 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %struct.VkQueueFamilyProperties** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.1"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 24
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %struct.VkQueueFamilyProperties*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %struct.VkQueueFamilyProperties** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 24
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %struct.VkQueueFamilyProperties, %struct.VkQueueFamilyProperties* %1, i64 %22
  %25 = select i1 %23, %struct.VkQueueFamilyProperties* %24, %struct.VkQueueFamilyProperties* %2
  %26 = ptrtoint %struct.VkQueueFamilyProperties* %25 to i64
  %27 = sub i64 %26, %5
  %28 = sdiv exact i64 %27, 24
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %struct.VkQueueFamilyProperties* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #12
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = udiv exact i64 %36, 24
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast %struct.VkQueueFamilyProperties* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #12
  %42 = inttoptr i64 %35 to %struct.VkQueueFamilyProperties*
  %43 = getelementptr inbounds %struct.VkQueueFamilyProperties, %struct.VkQueueFamilyProperties* %42, i64 %39
  %44 = ptrtoint %struct.VkQueueFamilyProperties* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %87

47:                                               ; preds = %33
  %48 = getelementptr inbounds %struct.VkQueueFamilyProperties, %struct.VkQueueFamilyProperties* %16, i64 %28
  store %struct.VkQueueFamilyProperties* %48, %struct.VkQueueFamilyProperties** %18, align 8
  br label %87

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 1
  %53 = bitcast %struct.VkQueueFamilyProperties** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #14
  %55 = bitcast %"class.std::__1::vector.1"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #12
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 768614336404564650
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.1"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #13
  unreachable

61:                                               ; preds = %56
  %62 = sdiv exact i64 %57, 24
  %63 = icmp ult i64 %62, 384307168202282325
  br i1 %63, label %64, label %68

64:                                               ; preds = %61
  %65 = shl nsw i64 %62, 1
  %66 = icmp ult i64 %65, %7
  %67 = select i1 %66, i64 %7, i64 %65
  br label %68

68:                                               ; preds = %64, %61
  %69 = phi i64 [ %67, %64 ], [ 768614336404564650, %61 ]
  %70 = mul i64 %69, 24
  %71 = tail call i8* @_Znwm(i64 %70) #14
  %72 = bitcast i8* %71 to %struct.VkQueueFamilyProperties*
  %73 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 1
  %74 = bitcast %struct.VkQueueFamilyProperties** %73 to i8**
  store i8* %71, i8** %74, align 8
  %75 = bitcast %"class.std::__1::vector.1"* %0 to i8**
  store i8* %71, i8** %75, align 8
  %76 = getelementptr inbounds %struct.VkQueueFamilyProperties, %struct.VkQueueFamilyProperties* %72, i64 %69
  store %struct.VkQueueFamilyProperties* %76, %struct.VkQueueFamilyProperties** %8, align 8
  %77 = bitcast %struct.VkQueueFamilyProperties** %73 to i64*
  %78 = ptrtoint i8* %71 to i64
  %79 = icmp sgt i64 %6, 0
  br i1 %79, label %80, label %85

80:                                               ; preds = %68
  %81 = udiv exact i64 %6, 24
  %82 = bitcast %struct.VkQueueFamilyProperties* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %71, i8* align 4 %82, i64 %6, i1 false) #12
  %83 = getelementptr inbounds %struct.VkQueueFamilyProperties, %struct.VkQueueFamilyProperties* %72, i64 %81
  %84 = ptrtoint %struct.VkQueueFamilyProperties* %83 to i64
  br label %85

85:                                               ; preds = %68, %80
  %86 = phi i64 [ %84, %80 ], [ %78, %68 ]
  store i64 %86, i64* %77, align 8
  br label %87

87:                                               ; preds = %45, %47, %85
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI17VkLayerPropertiesNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.15"*, %struct.VkLayerProperties*, %struct.VkLayerProperties*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %struct.VkLayerProperties* %2 to i64
  %5 = ptrtoint %struct.VkLayerProperties* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 520
  %8 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %struct.VkLayerProperties** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.15"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 520
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %struct.VkLayerProperties*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %struct.VkLayerProperties** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 520
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %1, i64 %22
  %25 = select i1 %23, %struct.VkLayerProperties* %24, %struct.VkLayerProperties* %2
  %26 = ptrtoint %struct.VkLayerProperties* %25 to i64
  %27 = sub i64 %26, %5
  %28 = sdiv exact i64 %27, 520
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %16, i64 0, i32 0, i64 0
  %32 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %1, i64 0, i32 0, i64 0
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #12
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = udiv exact i64 %36, 520
  %40 = inttoptr i64 %35 to i8*
  %41 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %25, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #12
  %42 = inttoptr i64 %35 to %struct.VkLayerProperties*
  %43 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %42, i64 %39
  %44 = ptrtoint %struct.VkLayerProperties* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %87

47:                                               ; preds = %33
  %48 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %16, i64 %28
  store %struct.VkLayerProperties* %48, %struct.VkLayerProperties** %18, align 8
  br label %87

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 1
  %53 = bitcast %struct.VkLayerProperties** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %16, i64 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %54) #14
  %55 = bitcast %"class.std::__1::vector.15"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #12
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 35474507834056830
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.15"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #13
  unreachable

61:                                               ; preds = %56
  %62 = sdiv exact i64 %57, 520
  %63 = icmp ult i64 %62, 17737253917028415
  br i1 %63, label %64, label %68

64:                                               ; preds = %61
  %65 = shl nsw i64 %62, 1
  %66 = icmp ult i64 %65, %7
  %67 = select i1 %66, i64 %7, i64 %65
  br label %68

68:                                               ; preds = %64, %61
  %69 = phi i64 [ %67, %64 ], [ 35474507834056830, %61 ]
  %70 = mul i64 %69, 520
  %71 = tail call i8* @_Znwm(i64 %70) #14
  %72 = bitcast i8* %71 to %struct.VkLayerProperties*
  %73 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %0, i64 0, i32 0, i32 1
  %74 = bitcast %struct.VkLayerProperties** %73 to i8**
  store i8* %71, i8** %74, align 8
  %75 = bitcast %"class.std::__1::vector.15"* %0 to i8**
  store i8* %71, i8** %75, align 8
  %76 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %72, i64 %69
  store %struct.VkLayerProperties* %76, %struct.VkLayerProperties** %8, align 8
  %77 = bitcast %struct.VkLayerProperties** %73 to i64*
  %78 = ptrtoint i8* %71 to i64
  %79 = icmp sgt i64 %6, 0
  br i1 %79, label %80, label %85

80:                                               ; preds = %68
  %81 = udiv exact i64 %6, 520
  %82 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %1, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %71, i8* align 4 %82, i64 %6, i1 false) #12
  %83 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %72, i64 %81
  %84 = ptrtoint %struct.VkLayerProperties* %83 to i64
  br label %85

85:                                               ; preds = %68, %80
  %86 = phi i64 [ %84, %80 ], [ %78, %68 ]
  store i64 %86, i64* %77, align 8
  br label %87

87:                                               ; preds = %45, %47, %85
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3gpu24VulkanPhysicalDeviceInfoENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.22"*, %"class.gpu::VulkanPhysicalDeviceInfo"*, %"class.gpu::VulkanPhysicalDeviceInfo"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.gpu::VulkanPhysicalDeviceInfo"* %2 to i64
  %5 = ptrtoint %"class.gpu::VulkanPhysicalDeviceInfo"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 1640
  %8 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.gpu::VulkanPhysicalDeviceInfo"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.22"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 1640
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.gpu::VulkanPhysicalDeviceInfo"*
  br i1 %15, label %95, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.gpu::VulkanPhysicalDeviceInfo"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 1640
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %1, i64 %22
  %25 = select i1 %23, %"class.gpu::VulkanPhysicalDeviceInfo"* %24, %"class.gpu::VulkanPhysicalDeviceInfo"* %2
  %26 = icmp eq %"class.gpu::VulkanPhysicalDeviceInfo"* %25, %1
  br i1 %26, label %52, label %27

27:                                               ; preds = %17, %48
  %28 = phi %"class.gpu::VulkanPhysicalDeviceInfo"* [ %50, %48 ], [ %16, %17 ]
  %29 = phi %"class.gpu::VulkanPhysicalDeviceInfo"* [ %49, %48 ], [ %1, %17 ]
  %30 = bitcast %"class.gpu::VulkanPhysicalDeviceInfo"* %28 to i8*
  %31 = bitcast %"class.gpu::VulkanPhysicalDeviceInfo"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 1368, i1 false) #12
  %32 = icmp eq %"class.gpu::VulkanPhysicalDeviceInfo"* %28, %29
  br i1 %32, label %48, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %28, i64 0, i32 3
  %35 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %29, i64 0, i32 3, i32 0, i32 0
  %36 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %35, align 8
  %37 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %29, i64 0, i32 3, i32 0, i32 1
  %38 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %37, align 8
  tail call void @_ZNSt3__16vectorI21VkExtensionPropertiesNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector"* %34, %struct.VkExtensionProperties* %36, %struct.VkExtensionProperties* %38) #12
  %39 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %28, i64 0, i32 4
  %40 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %29, i64 0, i32 4
  %41 = bitcast %struct.VkPhysicalDeviceFeatures* %39 to i8*
  %42 = bitcast %struct.VkPhysicalDeviceFeatures* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 222, i1 false) #12
  %43 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %28, i64 0, i32 7
  %44 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %29, i64 0, i32 7, i32 0, i32 0
  %45 = load %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties** %44, align 8
  %46 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %29, i64 0, i32 7, i32 0, i32 1
  %47 = load %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties** %46, align 8
  tail call void @_ZNSt3__16vectorI23VkQueueFamilyPropertiesNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.1"* %43, %struct.VkQueueFamilyProperties* %45, %struct.VkQueueFamilyProperties* %47) #12
  br label %48

48:                                               ; preds = %33, %27
  %49 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %29, i64 1
  %50 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %28, i64 1
  %51 = icmp eq %"class.gpu::VulkanPhysicalDeviceInfo"* %49, %25
  br i1 %51, label %52, label %27

52:                                               ; preds = %48, %17
  %53 = phi %"class.gpu::VulkanPhysicalDeviceInfo"* [ %16, %17 ], [ %50, %48 ]
  br i1 %23, label %54, label %69

54:                                               ; preds = %52
  %55 = load i64, i64* %19, align 8
  %56 = icmp eq %"class.gpu::VulkanPhysicalDeviceInfo"* %25, %2
  br i1 %56, label %67, label %57

57:                                               ; preds = %54
  %58 = inttoptr i64 %55 to %"class.gpu::VulkanPhysicalDeviceInfo"*
  br label %59

59:                                               ; preds = %59, %57
  %60 = phi %"class.gpu::VulkanPhysicalDeviceInfo"* [ %63, %59 ], [ %58, %57 ]
  %61 = phi %"class.gpu::VulkanPhysicalDeviceInfo"* [ %62, %59 ], [ %24, %57 ]
  tail call void @_ZN3gpu24VulkanPhysicalDeviceInfoC2ERKS0_(%"class.gpu::VulkanPhysicalDeviceInfo"* %60, %"class.gpu::VulkanPhysicalDeviceInfo"* dereferenceable(1640) %61) #12
  %62 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %61, i64 1
  %63 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %60, i64 1
  %64 = icmp eq %"class.gpu::VulkanPhysicalDeviceInfo"* %62, %2
  br i1 %64, label %65, label %59

65:                                               ; preds = %59
  %66 = ptrtoint %"class.gpu::VulkanPhysicalDeviceInfo"* %63 to i64
  br label %67

67:                                               ; preds = %54, %65
  %68 = phi i64 [ %55, %54 ], [ %66, %65 ]
  store i64 %68, i64* %19, align 8
  br label %164

69:                                               ; preds = %52
  %70 = load %"class.gpu::VulkanPhysicalDeviceInfo"*, %"class.gpu::VulkanPhysicalDeviceInfo"** %18, align 8
  %71 = icmp eq %"class.gpu::VulkanPhysicalDeviceInfo"* %70, %53
  br i1 %71, label %94, label %72

72:                                               ; preds = %69, %92
  %73 = phi %"class.gpu::VulkanPhysicalDeviceInfo"* [ %74, %92 ], [ %70, %69 ]
  %74 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %73, i64 -1
  %75 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %73, i64 -1, i32 7, i32 0, i32 0
  %76 = load %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties** %75, align 8
  %77 = icmp eq %struct.VkQueueFamilyProperties* %76, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %72
  %79 = ptrtoint %struct.VkQueueFamilyProperties* %76 to i64
  %80 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %73, i64 -1, i32 7, i32 0, i32 1
  %81 = bitcast %struct.VkQueueFamilyProperties** %80 to i64*
  store i64 %79, i64* %81, align 8
  %82 = bitcast %struct.VkQueueFamilyProperties* %76 to i8*
  tail call void @_ZdlPv(i8* %82) #14
  br label %83

83:                                               ; preds = %78, %72
  %84 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %73, i64 -1, i32 3, i32 0, i32 0
  %85 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %84, align 8
  %86 = icmp eq %struct.VkExtensionProperties* %85, null
  br i1 %86, label %92, label %87

87:                                               ; preds = %83
  %88 = ptrtoint %struct.VkExtensionProperties* %85 to i64
  %89 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %73, i64 -1, i32 3, i32 0, i32 1
  %90 = bitcast %struct.VkExtensionProperties** %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %85, i64 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %91) #14
  br label %92

92:                                               ; preds = %87, %83
  %93 = icmp eq %"class.gpu::VulkanPhysicalDeviceInfo"* %74, %53
  br i1 %93, label %94, label %72

94:                                               ; preds = %92, %69
  store %"class.gpu::VulkanPhysicalDeviceInfo"* %53, %"class.gpu::VulkanPhysicalDeviceInfo"** %18, align 8
  br label %164

95:                                               ; preds = %3
  %96 = icmp eq i64 %12, 0
  br i1 %96, label %130, label %97

97:                                               ; preds = %95
  %98 = inttoptr i64 %12 to i8*
  %99 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %0, i64 0, i32 0, i32 1
  %100 = load %"class.gpu::VulkanPhysicalDeviceInfo"*, %"class.gpu::VulkanPhysicalDeviceInfo"** %99, align 8
  %101 = icmp eq %"class.gpu::VulkanPhysicalDeviceInfo"* %100, %16
  br i1 %101, label %127, label %102

102:                                              ; preds = %97, %122
  %103 = phi %"class.gpu::VulkanPhysicalDeviceInfo"* [ %104, %122 ], [ %100, %97 ]
  %104 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %103, i64 -1
  %105 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %103, i64 -1, i32 7, i32 0, i32 0
  %106 = load %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties** %105, align 8
  %107 = icmp eq %struct.VkQueueFamilyProperties* %106, null
  br i1 %107, label %113, label %108

108:                                              ; preds = %102
  %109 = ptrtoint %struct.VkQueueFamilyProperties* %106 to i64
  %110 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %103, i64 -1, i32 7, i32 0, i32 1
  %111 = bitcast %struct.VkQueueFamilyProperties** %110 to i64*
  store i64 %109, i64* %111, align 8
  %112 = bitcast %struct.VkQueueFamilyProperties* %106 to i8*
  tail call void @_ZdlPv(i8* %112) #14
  br label %113

113:                                              ; preds = %108, %102
  %114 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %103, i64 -1, i32 3, i32 0, i32 0
  %115 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %114, align 8
  %116 = icmp eq %struct.VkExtensionProperties* %115, null
  br i1 %116, label %122, label %117

117:                                              ; preds = %113
  %118 = ptrtoint %struct.VkExtensionProperties* %115 to i64
  %119 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %103, i64 -1, i32 3, i32 0, i32 1
  %120 = bitcast %struct.VkExtensionProperties** %119 to i64*
  store i64 %118, i64* %120, align 8
  %121 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %115, i64 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %121) #14
  br label %122

122:                                              ; preds = %117, %113
  %123 = icmp eq %"class.gpu::VulkanPhysicalDeviceInfo"* %104, %16
  br i1 %123, label %124, label %102

124:                                              ; preds = %122
  %125 = bitcast %"class.std::__1::vector.22"* %0 to i8**
  %126 = load i8*, i8** %125, align 8
  br label %127

127:                                              ; preds = %124, %97
  %128 = phi i8* [ %126, %124 ], [ %98, %97 ]
  store %"class.gpu::VulkanPhysicalDeviceInfo"* %16, %"class.gpu::VulkanPhysicalDeviceInfo"** %99, align 8
  tail call void @_ZdlPv(i8* %128) #14
  %129 = bitcast %"class.std::__1::vector.22"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %129, i8 0, i64 24, i1 false) #12
  br label %130

130:                                              ; preds = %95, %127
  %131 = phi i64 [ %10, %95 ], [ 0, %127 ]
  %132 = icmp ugt i64 %7, 11248014679091190
  br i1 %132, label %133, label %135

133:                                              ; preds = %130
  %134 = bitcast %"class.std::__1::vector.22"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %134) #13
  unreachable

135:                                              ; preds = %130
  %136 = sdiv exact i64 %131, 1640
  %137 = icmp ult i64 %136, 5624007339545595
  br i1 %137, label %138, label %142

138:                                              ; preds = %135
  %139 = shl nsw i64 %136, 1
  %140 = icmp ult i64 %139, %7
  %141 = select i1 %140, i64 %7, i64 %139
  br label %142

142:                                              ; preds = %138, %135
  %143 = phi i64 [ %141, %138 ], [ 11248014679091190, %135 ]
  %144 = mul i64 %143, 1640
  %145 = tail call i8* @_Znwm(i64 %144) #14
  %146 = bitcast i8* %145 to %"class.gpu::VulkanPhysicalDeviceInfo"*
  %147 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %0, i64 0, i32 0, i32 1
  %148 = bitcast %"class.gpu::VulkanPhysicalDeviceInfo"** %147 to i8**
  store i8* %145, i8** %148, align 8
  %149 = bitcast %"class.std::__1::vector.22"* %0 to i8**
  store i8* %145, i8** %149, align 8
  %150 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %146, i64 %143
  store %"class.gpu::VulkanPhysicalDeviceInfo"* %150, %"class.gpu::VulkanPhysicalDeviceInfo"** %8, align 8
  %151 = bitcast %"class.gpu::VulkanPhysicalDeviceInfo"** %147 to i64*
  %152 = ptrtoint i8* %145 to i64
  %153 = icmp eq %"class.gpu::VulkanPhysicalDeviceInfo"* %1, %2
  br i1 %153, label %162, label %154

154:                                              ; preds = %142, %154
  %155 = phi %"class.gpu::VulkanPhysicalDeviceInfo"* [ %158, %154 ], [ %146, %142 ]
  %156 = phi %"class.gpu::VulkanPhysicalDeviceInfo"* [ %157, %154 ], [ %1, %142 ]
  tail call void @_ZN3gpu24VulkanPhysicalDeviceInfoC2ERKS0_(%"class.gpu::VulkanPhysicalDeviceInfo"* %155, %"class.gpu::VulkanPhysicalDeviceInfo"* dereferenceable(1640) %156) #12
  %157 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %156, i64 1
  %158 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %155, i64 1
  %159 = icmp eq %"class.gpu::VulkanPhysicalDeviceInfo"* %157, %2
  br i1 %159, label %160, label %154

160:                                              ; preds = %154
  %161 = ptrtoint %"class.gpu::VulkanPhysicalDeviceInfo"* %158 to i64
  br label %162

162:                                              ; preds = %142, %160
  %163 = phi i64 [ %152, %142 ], [ %161, %160 ]
  store i64 %163, i64* %151, align 8
  br label %164

164:                                              ; preds = %67, %94, %162
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal13SerializeImplIN3gpu5mojom18VulkanInfoDataViewENSt3__16vectorIhNS5_9allocatorIhEEEEKNS2_10VulkanInfoEEET0_PT1_(%"class.std::__1::vector.29"* noalias sret, %"class.gpu::VulkanInfo"*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.mojo::internal::MessageFragment", align 8
  %4 = alloca %"class.mojo::Message", align 8
  %5 = bitcast %"class.mojo::Message"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %5) #12
  %6 = bitcast %"class.mojo::Message"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 120, i1 false)
  call void @_ZN4mojo7MessageC1EjjmmjPNSt3__16vectorINS_16ScopedHandleBaseINS_6HandleEEENS1_9allocatorIS5_EEEE(%"class.mojo::Message"* nonnull %4, i32 0, i32 0, i64 0, i64 0, i32 1, %"class.std::__1::vector.50"* null) #12
  %7 = bitcast %"class.mojo::internal::MessageFragment"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12, !noalias !3
  %8 = getelementptr inbounds %"class.mojo::internal::MessageFragment", %"class.mojo::internal::MessageFragment"* %3, i64 0, i32 0
  %9 = getelementptr inbounds %"class.mojo::internal::MessageFragment", %"class.mojo::internal::MessageFragment"* %3, i64 0, i32 1
  store %"class.mojo::Message"* %4, %"class.mojo::Message"** %8, align 8, !noalias !3
  store i64 -1, i64* %9, align 8, !noalias !3
  call void @_ZN4mojo8internal10SerializerIN3gpu5mojom18VulkanInfoDataViewEKNS2_10VulkanInfoEE9SerializeERS6_RNS0_15MessageFragmentINS3_8internal15VulkanInfo_DataEEE(%"class.gpu::VulkanInfo"* dereferenceable(104) %1, %"class.mojo::internal::MessageFragment"* nonnull dereferenceable(16) %3) #12
  call void @_ZN4mojo7Message16SerializeHandlesEPNS_25AssociatedGroupControllerE(%"class.mojo::Message"* nonnull %4, %"class.mojo::AssociatedGroupController"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12, !noalias !3
  %10 = call i32 @_ZNK4mojo7Message17payload_num_bytesEv(%"class.mojo::Message"* nonnull %4) #12
  %11 = zext i32 %10 to i64
  %12 = bitcast %"class.std::__1::vector.29"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #12
  %13 = icmp eq i32 %10, 0
  br i1 %13, label %27, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 1
  %18 = call i8* @_Znwm(i64 %11) #14
  store i8* %18, i8** %15, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 %11
  store i8* %19, i8** %16, align 8
  %20 = bitcast i8** %17 to i64*
  %21 = ptrtoint i8* %18 to i64
  %22 = sub i64 %11, %21
  %23 = getelementptr i8, i8* %18, i64 %22
  %24 = ptrtoint i8* %23 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %18, i8 0, i64 %24, i1 false) #12
  %25 = ptrtoint i8* %19 to i64
  store i64 %25, i64* %20, align 8
  %26 = call i8* @_ZNK4mojo7Message7payloadEv(%"class.mojo::Message"* nonnull %4) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %18, i8* align 1 %26, i64 %11, i1 false)
  br label %27

27:                                               ; preds = %2, %14
  call void @_ZN4mojo7MessageD1Ev(%"class.mojo::Message"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %5) #12
  ret void
}

declare i32 @_ZNK4mojo7Message17payload_num_bytesEv(%"class.mojo::Message"*) local_unnamed_addr #3

declare i8* @_ZNK4mojo7Message7payloadEv(%"class.mojo::Message"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4mojo7MessageD1Ev(%"class.mojo::Message"*) unnamed_addr #4

declare void @_ZN4mojo7MessageC1EjjmmjPNSt3__16vectorINS_16ScopedHandleBaseINS_6HandleEEENS1_9allocatorIS5_EEEE(%"class.mojo::Message"*, i32, i32, i64, i64, i32, %"class.std::__1::vector.50"*) unnamed_addr #3

declare void @_ZN4mojo7Message16SerializeHandlesEPNS_25AssociatedGroupControllerE(%"class.mojo::Message"*, %"class.mojo::AssociatedGroupController"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal10SerializerIN3gpu5mojom18VulkanInfoDataViewEKNS2_10VulkanInfoEE9SerializeERS6_RNS0_15MessageFragmentINS3_8internal15VulkanInfo_DataEEE(%"class.gpu::VulkanInfo"* dereferenceable(104), %"class.mojo::internal::MessageFragment"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.mojo::internal::MessageFragment.86", align 8
  %4 = alloca %"class.mojo::internal::MessageFragment.95", align 8
  %5 = alloca %"class.mojo::internal::MessageFragment.98", align 8
  %6 = alloca %"class.mojo::internal::ContainerValidateParams", align 8
  %7 = alloca %"class.std::__1::vector.42", align 8
  %8 = alloca %"class.mojo::internal::ContainerValidateParams", align 8
  %9 = alloca %"class.mojo::internal::ContainerValidateParams", align 8
  %10 = alloca %"class.mojo::internal::ContainerValidateParams", align 8
  %11 = getelementptr inbounds %"class.mojo::internal::MessageFragment", %"class.mojo::internal::MessageFragment"* %1, i64 0, i32 0
  %12 = load %"class.mojo::Message"*, %"class.mojo::Message"** %11, align 8
  %13 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %12, i64 0, i32 1
  %14 = tail call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %13, i64 48) #12
  %15 = getelementptr inbounds %"class.mojo::internal::MessageFragment", %"class.mojo::internal::MessageFragment"* %1, i64 0, i32 1
  store i64 %14, i64* %15, align 8
  %16 = load %"class.mojo::Message"*, %"class.mojo::Message"** %11, align 8
  %17 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %16, i64 0, i32 1, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 %14
  %20 = bitcast i8* %19 to %"class.gpu::mojom::internal::VulkanInfo_Data"*
  tail call void @_ZN3gpu5mojom8internal15VulkanInfo_DataC1Ev(%"class.gpu::mojom::internal::VulkanInfo_Data"* %20) #12
  %21 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %0, i64 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = load %"class.mojo::Message"*, %"class.mojo::Message"** %11, align 8
  %24 = load i64, i64* %15, align 8
  %25 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %23, i64 0, i32 1, i32 2
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 %24
  %28 = getelementptr inbounds i8, i8* %27, i64 8
  %29 = bitcast i8* %28 to i32*
  store i32 %22, i32* %29, align 1
  %30 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %0, i64 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = load %"class.mojo::Message"*, %"class.mojo::Message"** %11, align 8
  %33 = load i64, i64* %15, align 8
  %34 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %32, i64 0, i32 1, i32 2
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 %33
  %37 = getelementptr inbounds i8, i8* %36, i64 12
  %38 = bitcast i8* %37 to i32*
  store i32 %31, i32* %38, align 1
  %39 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %0, i64 0, i32 2
  %40 = load %"class.mojo::Message"*, %"class.mojo::Message"** %11, align 8
  %41 = ptrtoint %"class.mojo::Message"* %40 to i64
  %42 = bitcast %"class.mojo::internal::ContainerValidateParams"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #12
  %43 = bitcast %"class.mojo::internal::ContainerValidateParams"* %6 to i64*
  store i64 -6148914691236517206, i64* %43, align 8
  %44 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %6, i64 0, i32 0
  store i32 0, i32* %44, align 8
  %45 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %6, i64 0, i32 1
  store i8 0, i8* %45, align 4
  %46 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %6, i64 0, i32 2
  %47 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %0, i64 0, i32 2, i32 0, i32 1
  %48 = bitcast %struct.VkExtensionProperties** %47 to i64*
  %49 = bitcast %"class.mojo::internal::ContainerValidateParams"** %46 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 24, i1 false)
  %50 = load i64, i64* %48, align 8
  %51 = bitcast %"class.std::__1::vector"* %39 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %50, %52
  %54 = sdiv exact i64 %53, 260
  %55 = icmp ugt i64 %54, 536870910
  br i1 %55, label %73, label %56

56:                                               ; preds = %2
  %57 = trunc i64 %54 to i32
  %58 = shl i32 %57, 3
  %59 = add nuw i32 %58, 8
  %60 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %40, i64 0, i32 1
  %61 = zext i32 %59 to i64
  %62 = tail call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %60, i64 %61) #12
  %63 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %40, i64 0, i32 1, i32 2
  %64 = load i8*, i8** %63, align 8
  %65 = getelementptr inbounds i8, i8* %64, i64 %62
  %66 = bitcast i8* %65 to i32*
  store i32 %59, i32* %66, align 1
  %67 = getelementptr inbounds i8, i8* %65, i64 4
  %68 = bitcast i8* %67 to i32*
  store i32 %57, i32* %68, align 1
  %69 = load i64, i64* %48, align 8
  %70 = load i64, i64* %51, align 8
  %71 = sub i64 %69, %70
  %72 = sdiv exact i64 %71, 260
  br label %73

73:                                               ; preds = %56, %2
  %74 = phi i64 [ -1, %2 ], [ %62, %56 ]
  %75 = phi i64 [ %54, %2 ], [ %72, %56 ]
  %76 = phi i64 [ %53, %2 ], [ %71, %56 ]
  %77 = phi i64 [ %52, %2 ], [ %70, %56 ]
  %78 = icmp eq i64 %76, 0
  br i1 %78, label %116, label %79

79:                                               ; preds = %73
  %80 = inttoptr i64 %77 to %struct.VkExtensionProperties*
  %81 = bitcast %"class.mojo::internal::MessageFragment.86"* %3 to i8*
  %82 = getelementptr inbounds %"class.mojo::internal::MessageFragment.86", %"class.mojo::internal::MessageFragment.86"* %3, i64 0, i32 0
  %83 = getelementptr inbounds %"class.mojo::internal::MessageFragment.86", %"class.mojo::internal::MessageFragment.86"* %3, i64 0, i32 1
  %84 = bitcast %"class.mojo::internal::MessageFragment.86"* %3 to i64*
  %85 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %39, i64 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %40, i64 0, i32 1, i32 2
  br label %87

87:                                               ; preds = %114, %79
  %88 = phi %struct.VkExtensionProperties* [ %80, %79 ], [ %115, %114 ]
  %89 = phi i64 [ 0, %79 ], [ %90, %114 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #12
  store i64 %41, i64* %84, align 8
  store i64 -1, i64* %83, align 8
  %90 = add nuw i64 %89, 1
  %91 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %88, i64 %89
  call void @_ZN4mojo8internal10SerializerIN3gpu5mojom29VkExtensionPropertiesDataViewEK21VkExtensionPropertiesE9SerializeERS6_RNS0_15MessageFragmentINS3_8internal26VkExtensionProperties_DataEEE(%struct.VkExtensionProperties* dereferenceable(260) %91, %"class.mojo::internal::MessageFragment.86"* nonnull dereferenceable(16) %3) #12
  %92 = load i8*, i8** %86, align 8
  %93 = getelementptr inbounds i8, i8* %92, i64 8
  %94 = getelementptr inbounds i8, i8* %93, i64 %74
  %95 = bitcast i8* %94 to %"class.mojo::internal::Array_Data"*
  %96 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %95, i64 %89
  %97 = load i64, i64* %83, align 8
  %98 = icmp eq i64 %97, -1
  br i1 %98, label %105, label %99

99:                                               ; preds = %87
  %100 = load %"class.mojo::Message"*, %"class.mojo::Message"** %82, align 8
  %101 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %100, i64 0, i32 1, i32 2
  %102 = load i8*, i8** %101, align 8
  %103 = getelementptr inbounds i8, i8* %102, i64 %97
  %104 = bitcast i8* %103 to %"class.gpu::mojom::internal::VkExtensionProperties_Data"*
  br label %105

105:                                              ; preds = %99, %87
  %106 = phi %"class.gpu::mojom::internal::VkExtensionProperties_Data"* [ %104, %99 ], [ null, %87 ]
  %107 = bitcast %"class.mojo::internal::Array_Data"* %96 to i64*
  %108 = icmp eq %"class.gpu::mojom::internal::VkExtensionProperties_Data"* %106, null
  %109 = ptrtoint %"class.gpu::mojom::internal::VkExtensionProperties_Data"* %106 to i64
  %110 = ptrtoint %"class.mojo::internal::Array_Data"* %96 to i64
  %111 = sub i64 %109, %110
  %112 = select i1 %108, i64 0, i64 %111
  store i64 %112, i64* %107, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #12
  %113 = icmp ult i64 %90, %75
  br i1 %113, label %114, label %116

114:                                              ; preds = %105
  %115 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %85, align 8
  br label %87

116:                                              ; preds = %105, %73
  %117 = load %"class.mojo::Message"*, %"class.mojo::Message"** %11, align 8
  %118 = load i64, i64* %15, align 8
  %119 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %117, i64 0, i32 1, i32 2
  %120 = load i8*, i8** %119, align 8
  %121 = getelementptr inbounds i8, i8* %120, i64 %118
  %122 = getelementptr inbounds i8, i8* %121, i64 16
  %123 = icmp eq i64 %74, -1
  br i1 %123, label %129, label %124

124:                                              ; preds = %116
  %125 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %40, i64 0, i32 1, i32 2
  %126 = load i8*, i8** %125, align 8
  %127 = getelementptr inbounds i8, i8* %126, i64 %74
  %128 = bitcast i8* %127 to %"class.mojo::internal::Array_Data"*
  br label %129

129:                                              ; preds = %116, %124
  %130 = phi %"class.mojo::internal::Array_Data"* [ %128, %124 ], [ null, %116 ]
  %131 = bitcast i8* %122 to i64*
  %132 = icmp eq %"class.mojo::internal::Array_Data"* %130, null
  %133 = ptrtoint %"class.mojo::internal::Array_Data"* %130 to i64
  %134 = ptrtoint i8* %122 to i64
  %135 = sub i64 %133, %134
  %136 = select i1 %132, i64 0, i64 %135
  store i64 %136, i64* %131, align 8
  %137 = bitcast %"class.std::__1::vector.42"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %137) #12
  %138 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %7, i64 0, i32 0, i32 0
  %139 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %7, i64 0, i32 0, i32 1
  %140 = bitcast %"class.std::__1::vector.42"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %140, i8 -86, i64 24, i1 false)
  call void @_ZN4mojo12StructTraitsIN3gpu5mojom18VulkanInfoDataViewENS1_10VulkanInfoEE27enabled_instance_extensionsERKS4_(%"class.std::__1::vector.42"* nonnull sret %7, %"class.gpu::VulkanInfo"* dereferenceable(104) %0)
  %141 = load %"class.mojo::Message"*, %"class.mojo::Message"** %11, align 8
  %142 = bitcast %"class.mojo::internal::ContainerValidateParams"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %142) #12
  %143 = bitcast %"class.mojo::internal::ContainerValidateParams"* %8 to i64*
  store i64 -6148914691236517206, i64* %143, align 8
  %144 = call i8* @_Znwm(i64 32) #14
  %145 = bitcast i8* %144 to i32*
  store i32 0, i32* %145, align 8
  %146 = getelementptr inbounds i8, i8* %144, i64 4
  store i8 0, i8* %146, align 4
  %147 = getelementptr inbounds i8, i8* %144, i64 8
  %148 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %8, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %147, i8 0, i64 24, i1 false)
  store i32 0, i32* %148, align 8
  %149 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %8, i64 0, i32 1
  store i8 0, i8* %149, align 4
  %150 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %8, i64 0, i32 2
  store %"class.mojo::internal::ContainerValidateParams"* null, %"class.mojo::internal::ContainerValidateParams"** %150, align 8
  %151 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %8, i64 0, i32 3
  %152 = bitcast %"class.mojo::internal::ContainerValidateParams"** %151 to i8**
  store i8* %144, i8** %152, align 8
  %153 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %8, i64 0, i32 4
  store i1 (i32, %"class.mojo::internal::ValidationContext"*)* null, i1 (i32, %"class.mojo::internal::ValidationContext"*)** %153, align 8
  %154 = bitcast %"class.base::BasicStringPiece"** %139 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = bitcast %"class.std::__1::vector.42"* %7 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = sub i64 %155, %157
  %159 = ashr exact i64 %158, 4
  %160 = icmp ugt i64 %159, 536870910
  br i1 %160, label %179, label %161

161:                                              ; preds = %129
  %162 = trunc i64 %159 to i32
  %163 = lshr exact i64 %158, 1
  %164 = trunc i64 %163 to i32
  %165 = add nuw i32 %164, 8
  %166 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %141, i64 0, i32 1
  %167 = zext i32 %165 to i64
  %168 = call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %166, i64 %167) #12
  %169 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %141, i64 0, i32 1, i32 2
  %170 = load i8*, i8** %169, align 8
  %171 = getelementptr inbounds i8, i8* %170, i64 %168
  %172 = bitcast i8* %171 to i32*
  store i32 %165, i32* %172, align 1
  %173 = getelementptr inbounds i8, i8* %171, i64 4
  %174 = bitcast i8* %173 to i32*
  store i32 %162, i32* %174, align 1
  %175 = load i64, i64* %154, align 8
  %176 = load i64, i64* %156, align 8
  %177 = sub i64 %175, %176
  %178 = ashr exact i64 %177, 4
  br label %179

179:                                              ; preds = %129, %161
  %180 = phi i64 [ %159, %129 ], [ %178, %161 ]
  %181 = phi i64 [ %158, %129 ], [ %177, %161 ]
  %182 = phi i64 [ %157, %129 ], [ %176, %161 ]
  %183 = phi i64 [ -1, %129 ], [ %168, %161 ]
  %184 = icmp eq i64 %181, 0
  br i1 %184, label %231, label %185

185:                                              ; preds = %179
  %186 = inttoptr i64 %182 to %"class.base::BasicStringPiece"*
  %187 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %141, i64 0, i32 1
  %188 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %141, i64 0, i32 1, i32 2
  br label %189

189:                                              ; preds = %229, %185
  %190 = phi %"class.base::BasicStringPiece"* [ %230, %229 ], [ %186, %185 ]
  %191 = phi i64 [ %192, %229 ], [ 0, %185 ]
  %192 = add nuw i64 %191, 1
  %193 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %190, i64 %191, i32 0
  %194 = load i8*, i8** %193, align 8
  %195 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %190, i64 %191, i32 1
  %196 = load i64, i64* %195, align 8
  %197 = icmp ugt i64 %196, 4294967287
  br i1 %197, label %208, label %198

198:                                              ; preds = %189
  %199 = trunc i64 %196 to i32
  %200 = add nuw i32 %199, 8
  %201 = zext i32 %200 to i64
  %202 = call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %187, i64 %201) #12
  %203 = load i8*, i8** %188, align 8
  %204 = getelementptr inbounds i8, i8* %203, i64 %202
  %205 = bitcast i8* %204 to i32*
  store i32 %200, i32* %205, align 1
  %206 = getelementptr inbounds i8, i8* %204, i64 4
  %207 = bitcast i8* %206 to i32*
  store i32 %199, i32* %207, align 1
  br label %208

208:                                              ; preds = %198, %189
  %209 = phi i64 [ -1, %189 ], [ %202, %198 ]
  %210 = load i8*, i8** %188, align 8
  %211 = getelementptr inbounds i8, i8* %210, i64 8
  %212 = getelementptr inbounds i8, i8* %211, i64 %209
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %212, i8* align 1 %194, i64 %196, i1 false) #12
  %213 = load i8*, i8** %188, align 8
  %214 = getelementptr inbounds i8, i8* %213, i64 8
  %215 = getelementptr inbounds i8, i8* %214, i64 %183
  %216 = bitcast i8* %215 to %"class.mojo::internal::Array_Data.81"*
  %217 = getelementptr inbounds %"class.mojo::internal::Array_Data.81", %"class.mojo::internal::Array_Data.81"* %216, i64 %191
  %218 = icmp eq i64 %209, -1
  %219 = getelementptr inbounds i8, i8* %213, i64 %209
  %220 = bitcast i8* %219 to %"class.mojo::internal::Array_Data.90"*
  %221 = select i1 %218, %"class.mojo::internal::Array_Data.90"* null, %"class.mojo::internal::Array_Data.90"* %220
  %222 = bitcast %"class.mojo::internal::Array_Data.81"* %217 to i64*
  %223 = icmp eq %"class.mojo::internal::Array_Data.90"* %221, null
  %224 = ptrtoint %"class.mojo::internal::Array_Data.90"* %221 to i64
  %225 = ptrtoint %"class.mojo::internal::Array_Data.81"* %217 to i64
  %226 = sub i64 %224, %225
  %227 = select i1 %223, i64 0, i64 %226
  store i64 %227, i64* %222, align 8
  %228 = icmp ult i64 %192, %180
  br i1 %228, label %229, label %231

229:                                              ; preds = %208
  %230 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %138, align 8
  br label %189

231:                                              ; preds = %208, %179
  %232 = load %"class.mojo::Message"*, %"class.mojo::Message"** %11, align 8
  %233 = load i64, i64* %15, align 8
  %234 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %232, i64 0, i32 1, i32 2
  %235 = load i8*, i8** %234, align 8
  %236 = getelementptr inbounds i8, i8* %235, i64 %233
  %237 = getelementptr inbounds i8, i8* %236, i64 24
  %238 = icmp eq i64 %183, -1
  br i1 %238, label %244, label %239

239:                                              ; preds = %231
  %240 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %141, i64 0, i32 1, i32 2
  %241 = load i8*, i8** %240, align 8
  %242 = getelementptr inbounds i8, i8* %241, i64 %183
  %243 = bitcast i8* %242 to %"class.mojo::internal::Array_Data.81"*
  br label %244

244:                                              ; preds = %231, %239
  %245 = phi %"class.mojo::internal::Array_Data.81"* [ %243, %239 ], [ null, %231 ]
  %246 = bitcast i8* %237 to i64*
  %247 = icmp eq %"class.mojo::internal::Array_Data.81"* %245, null
  %248 = ptrtoint %"class.mojo::internal::Array_Data.81"* %245 to i64
  %249 = ptrtoint i8* %237 to i64
  %250 = sub i64 %248, %249
  %251 = select i1 %247, i64 0, i64 %250
  store i64 %251, i64* %246, align 8
  %252 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %0, i64 0, i32 4
  %253 = load %"class.mojo::Message"*, %"class.mojo::Message"** %11, align 8
  %254 = ptrtoint %"class.mojo::Message"* %253 to i64
  %255 = bitcast %"class.mojo::internal::ContainerValidateParams"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %255) #12
  %256 = bitcast %"class.mojo::internal::ContainerValidateParams"* %9 to i64*
  store i64 -6148914691236517206, i64* %256, align 8
  %257 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %9, i64 0, i32 0
  store i32 0, i32* %257, align 8
  %258 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %9, i64 0, i32 1
  store i8 0, i8* %258, align 4
  %259 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %9, i64 0, i32 2
  %260 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %0, i64 0, i32 4, i32 0, i32 1
  %261 = bitcast %struct.VkLayerProperties** %260 to i64*
  %262 = bitcast %"class.mojo::internal::ContainerValidateParams"** %259 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %262, i8 0, i64 24, i1 false)
  %263 = load i64, i64* %261, align 8
  %264 = bitcast %"class.std::__1::vector.15"* %252 to i64*
  %265 = load i64, i64* %264, align 8
  %266 = sub i64 %263, %265
  %267 = sdiv exact i64 %266, 520
  %268 = icmp ugt i64 %267, 536870910
  br i1 %268, label %286, label %269

269:                                              ; preds = %244
  %270 = trunc i64 %267 to i32
  %271 = shl i32 %270, 3
  %272 = add nuw i32 %271, 8
  %273 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %253, i64 0, i32 1
  %274 = zext i32 %272 to i64
  %275 = call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %273, i64 %274) #12
  %276 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %253, i64 0, i32 1, i32 2
  %277 = load i8*, i8** %276, align 8
  %278 = getelementptr inbounds i8, i8* %277, i64 %275
  %279 = bitcast i8* %278 to i32*
  store i32 %272, i32* %279, align 1
  %280 = getelementptr inbounds i8, i8* %278, i64 4
  %281 = bitcast i8* %280 to i32*
  store i32 %270, i32* %281, align 1
  %282 = load i64, i64* %261, align 8
  %283 = load i64, i64* %264, align 8
  %284 = sub i64 %282, %283
  %285 = sdiv exact i64 %284, 520
  br label %286

286:                                              ; preds = %269, %244
  %287 = phi i64 [ -1, %244 ], [ %275, %269 ]
  %288 = phi i64 [ %267, %244 ], [ %285, %269 ]
  %289 = phi i64 [ %266, %244 ], [ %284, %269 ]
  %290 = phi i64 [ %265, %244 ], [ %283, %269 ]
  %291 = icmp eq i64 %289, 0
  br i1 %291, label %329, label %292

292:                                              ; preds = %286
  %293 = inttoptr i64 %290 to %struct.VkLayerProperties*
  %294 = bitcast %"class.mojo::internal::MessageFragment.95"* %4 to i8*
  %295 = getelementptr inbounds %"class.mojo::internal::MessageFragment.95", %"class.mojo::internal::MessageFragment.95"* %4, i64 0, i32 0
  %296 = getelementptr inbounds %"class.mojo::internal::MessageFragment.95", %"class.mojo::internal::MessageFragment.95"* %4, i64 0, i32 1
  %297 = bitcast %"class.mojo::internal::MessageFragment.95"* %4 to i64*
  %298 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %252, i64 0, i32 0, i32 0
  %299 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %253, i64 0, i32 1, i32 2
  br label %300

300:                                              ; preds = %327, %292
  %301 = phi %struct.VkLayerProperties* [ %293, %292 ], [ %328, %327 ]
  %302 = phi i64 [ 0, %292 ], [ %303, %327 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %294) #12
  store i64 %254, i64* %297, align 8
  store i64 -1, i64* %296, align 8
  %303 = add nuw i64 %302, 1
  %304 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %301, i64 %302
  call void @_ZN4mojo8internal10SerializerIN3gpu5mojom25VkLayerPropertiesDataViewEK17VkLayerPropertiesE9SerializeERS6_RNS0_15MessageFragmentINS3_8internal22VkLayerProperties_DataEEE(%struct.VkLayerProperties* dereferenceable(520) %304, %"class.mojo::internal::MessageFragment.95"* nonnull dereferenceable(16) %4) #12
  %305 = load i8*, i8** %299, align 8
  %306 = getelementptr inbounds i8, i8* %305, i64 8
  %307 = getelementptr inbounds i8, i8* %306, i64 %287
  %308 = bitcast i8* %307 to %"class.mojo::internal::Array_Data.83"*
  %309 = getelementptr inbounds %"class.mojo::internal::Array_Data.83", %"class.mojo::internal::Array_Data.83"* %308, i64 %302
  %310 = load i64, i64* %296, align 8
  %311 = icmp eq i64 %310, -1
  br i1 %311, label %318, label %312

312:                                              ; preds = %300
  %313 = load %"class.mojo::Message"*, %"class.mojo::Message"** %295, align 8
  %314 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %313, i64 0, i32 1, i32 2
  %315 = load i8*, i8** %314, align 8
  %316 = getelementptr inbounds i8, i8* %315, i64 %310
  %317 = bitcast i8* %316 to %"class.gpu::mojom::internal::VkLayerProperties_Data"*
  br label %318

318:                                              ; preds = %312, %300
  %319 = phi %"class.gpu::mojom::internal::VkLayerProperties_Data"* [ %317, %312 ], [ null, %300 ]
  %320 = bitcast %"class.mojo::internal::Array_Data.83"* %309 to i64*
  %321 = icmp eq %"class.gpu::mojom::internal::VkLayerProperties_Data"* %319, null
  %322 = ptrtoint %"class.gpu::mojom::internal::VkLayerProperties_Data"* %319 to i64
  %323 = ptrtoint %"class.mojo::internal::Array_Data.83"* %309 to i64
  %324 = sub i64 %322, %323
  %325 = select i1 %321, i64 0, i64 %324
  store i64 %325, i64* %320, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %294) #12
  %326 = icmp ult i64 %303, %288
  br i1 %326, label %327, label %329

327:                                              ; preds = %318
  %328 = load %struct.VkLayerProperties*, %struct.VkLayerProperties** %298, align 8
  br label %300

329:                                              ; preds = %318, %286
  %330 = load %"class.mojo::Message"*, %"class.mojo::Message"** %11, align 8
  %331 = load i64, i64* %15, align 8
  %332 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %330, i64 0, i32 1, i32 2
  %333 = load i8*, i8** %332, align 8
  %334 = getelementptr inbounds i8, i8* %333, i64 %331
  %335 = getelementptr inbounds i8, i8* %334, i64 32
  %336 = icmp eq i64 %287, -1
  br i1 %336, label %342, label %337

337:                                              ; preds = %329
  %338 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %253, i64 0, i32 1, i32 2
  %339 = load i8*, i8** %338, align 8
  %340 = getelementptr inbounds i8, i8* %339, i64 %287
  %341 = bitcast i8* %340 to %"class.mojo::internal::Array_Data.83"*
  br label %342

342:                                              ; preds = %329, %337
  %343 = phi %"class.mojo::internal::Array_Data.83"* [ %341, %337 ], [ null, %329 ]
  %344 = bitcast i8* %335 to i64*
  %345 = icmp eq %"class.mojo::internal::Array_Data.83"* %343, null
  %346 = ptrtoint %"class.mojo::internal::Array_Data.83"* %343 to i64
  %347 = ptrtoint i8* %335 to i64
  %348 = sub i64 %346, %347
  %349 = select i1 %345, i64 0, i64 %348
  store i64 %349, i64* %344, align 8
  %350 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %0, i64 0, i32 5
  %351 = load %"class.mojo::Message"*, %"class.mojo::Message"** %11, align 8
  %352 = ptrtoint %"class.mojo::Message"* %351 to i64
  %353 = bitcast %"class.mojo::internal::ContainerValidateParams"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %353) #12
  %354 = bitcast %"class.mojo::internal::ContainerValidateParams"* %10 to i64*
  store i64 -6148914691236517206, i64* %354, align 8
  %355 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %10, i64 0, i32 0
  store i32 0, i32* %355, align 8
  %356 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %10, i64 0, i32 1
  store i8 0, i8* %356, align 4
  %357 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %10, i64 0, i32 2
  %358 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %0, i64 0, i32 5, i32 0, i32 1
  %359 = bitcast %"class.gpu::VulkanPhysicalDeviceInfo"** %358 to i64*
  %360 = bitcast %"class.mojo::internal::ContainerValidateParams"** %357 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %360, i8 0, i64 24, i1 false)
  %361 = load i64, i64* %359, align 8
  %362 = bitcast %"class.std::__1::vector.22"* %350 to i64*
  %363 = load i64, i64* %362, align 8
  %364 = sub i64 %361, %363
  %365 = sdiv exact i64 %364, 1640
  %366 = icmp ugt i64 %365, 536870910
  br i1 %366, label %384, label %367

367:                                              ; preds = %342
  %368 = trunc i64 %365 to i32
  %369 = shl i32 %368, 3
  %370 = add nuw i32 %369, 8
  %371 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %351, i64 0, i32 1
  %372 = zext i32 %370 to i64
  %373 = call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %371, i64 %372) #12
  %374 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %351, i64 0, i32 1, i32 2
  %375 = load i8*, i8** %374, align 8
  %376 = getelementptr inbounds i8, i8* %375, i64 %373
  %377 = bitcast i8* %376 to i32*
  store i32 %370, i32* %377, align 1
  %378 = getelementptr inbounds i8, i8* %376, i64 4
  %379 = bitcast i8* %378 to i32*
  store i32 %368, i32* %379, align 1
  %380 = load i64, i64* %359, align 8
  %381 = load i64, i64* %362, align 8
  %382 = sub i64 %380, %381
  %383 = sdiv exact i64 %382, 1640
  br label %384

384:                                              ; preds = %367, %342
  %385 = phi i64 [ -1, %342 ], [ %373, %367 ]
  %386 = phi i64 [ %365, %342 ], [ %383, %367 ]
  %387 = phi i64 [ %364, %342 ], [ %382, %367 ]
  %388 = phi i64 [ %363, %342 ], [ %381, %367 ]
  %389 = icmp eq i64 %387, 0
  br i1 %389, label %427, label %390

390:                                              ; preds = %384
  %391 = inttoptr i64 %388 to %"class.gpu::VulkanPhysicalDeviceInfo"*
  %392 = bitcast %"class.mojo::internal::MessageFragment.98"* %5 to i8*
  %393 = getelementptr inbounds %"class.mojo::internal::MessageFragment.98", %"class.mojo::internal::MessageFragment.98"* %5, i64 0, i32 0
  %394 = getelementptr inbounds %"class.mojo::internal::MessageFragment.98", %"class.mojo::internal::MessageFragment.98"* %5, i64 0, i32 1
  %395 = bitcast %"class.mojo::internal::MessageFragment.98"* %5 to i64*
  %396 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %350, i64 0, i32 0, i32 0
  %397 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %351, i64 0, i32 1, i32 2
  br label %398

398:                                              ; preds = %425, %390
  %399 = phi %"class.gpu::VulkanPhysicalDeviceInfo"* [ %391, %390 ], [ %426, %425 ]
  %400 = phi i64 [ 0, %390 ], [ %401, %425 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %392) #12
  store i64 %352, i64* %395, align 8
  store i64 -1, i64* %394, align 8
  %401 = add nuw i64 %400, 1
  %402 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %399, i64 %400
  call void @_ZN4mojo8internal10SerializerIN3gpu5mojom32VulkanPhysicalDeviceInfoDataViewEKNS2_24VulkanPhysicalDeviceInfoEE9SerializeERS6_RNS0_15MessageFragmentINS3_8internal29VulkanPhysicalDeviceInfo_DataEEE(%"class.gpu::VulkanPhysicalDeviceInfo"* dereferenceable(1640) %402, %"class.mojo::internal::MessageFragment.98"* nonnull dereferenceable(16) %5) #12
  %403 = load i8*, i8** %397, align 8
  %404 = getelementptr inbounds i8, i8* %403, i64 8
  %405 = getelementptr inbounds i8, i8* %404, i64 %385
  %406 = bitcast i8* %405 to %"class.mojo::internal::Array_Data.85"*
  %407 = getelementptr inbounds %"class.mojo::internal::Array_Data.85", %"class.mojo::internal::Array_Data.85"* %406, i64 %400
  %408 = load i64, i64* %394, align 8
  %409 = icmp eq i64 %408, -1
  br i1 %409, label %416, label %410

410:                                              ; preds = %398
  %411 = load %"class.mojo::Message"*, %"class.mojo::Message"** %393, align 8
  %412 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %411, i64 0, i32 1, i32 2
  %413 = load i8*, i8** %412, align 8
  %414 = getelementptr inbounds i8, i8* %413, i64 %408
  %415 = bitcast i8* %414 to %"class.gpu::mojom::internal::VulkanPhysicalDeviceInfo_Data"*
  br label %416

416:                                              ; preds = %410, %398
  %417 = phi %"class.gpu::mojom::internal::VulkanPhysicalDeviceInfo_Data"* [ %415, %410 ], [ null, %398 ]
  %418 = bitcast %"class.mojo::internal::Array_Data.85"* %407 to i64*
  %419 = icmp eq %"class.gpu::mojom::internal::VulkanPhysicalDeviceInfo_Data"* %417, null
  %420 = ptrtoint %"class.gpu::mojom::internal::VulkanPhysicalDeviceInfo_Data"* %417 to i64
  %421 = ptrtoint %"class.mojo::internal::Array_Data.85"* %407 to i64
  %422 = sub i64 %420, %421
  %423 = select i1 %419, i64 0, i64 %422
  store i64 %423, i64* %418, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %392) #12
  %424 = icmp ult i64 %401, %386
  br i1 %424, label %425, label %427

425:                                              ; preds = %416
  %426 = load %"class.gpu::VulkanPhysicalDeviceInfo"*, %"class.gpu::VulkanPhysicalDeviceInfo"** %396, align 8
  br label %398

427:                                              ; preds = %416, %384
  %428 = load %"class.mojo::Message"*, %"class.mojo::Message"** %11, align 8
  %429 = load i64, i64* %15, align 8
  %430 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %428, i64 0, i32 1, i32 2
  %431 = load i8*, i8** %430, align 8
  %432 = getelementptr inbounds i8, i8* %431, i64 %429
  %433 = getelementptr inbounds i8, i8* %432, i64 40
  %434 = icmp eq i64 %385, -1
  br i1 %434, label %440, label %435

435:                                              ; preds = %427
  %436 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %351, i64 0, i32 1, i32 2
  %437 = load i8*, i8** %436, align 8
  %438 = getelementptr inbounds i8, i8* %437, i64 %385
  %439 = bitcast i8* %438 to %"class.mojo::internal::Array_Data.85"*
  br label %440

440:                                              ; preds = %427, %435
  %441 = phi %"class.mojo::internal::Array_Data.85"* [ %439, %435 ], [ null, %427 ]
  %442 = bitcast i8* %433 to i64*
  %443 = icmp eq %"class.mojo::internal::Array_Data.85"* %441, null
  %444 = ptrtoint %"class.mojo::internal::Array_Data.85"* %441 to i64
  %445 = ptrtoint i8* %433 to i64
  %446 = sub i64 %444, %445
  %447 = select i1 %443, i64 0, i64 %446
  store i64 %447, i64* %442, align 8
  call void @_ZN4mojo8internal23ContainerValidateParamsD2Ev(%"class.mojo::internal::ContainerValidateParams"* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %353) #12
  call void @_ZN4mojo8internal23ContainerValidateParamsD2Ev(%"class.mojo::internal::ContainerValidateParams"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %255) #12
  call void @_ZN4mojo8internal23ContainerValidateParamsD2Ev(%"class.mojo::internal::ContainerValidateParams"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %142) #12
  %448 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %138, align 8
  %449 = icmp eq %"class.base::BasicStringPiece"* %448, null
  br i1 %449, label %453, label %450

450:                                              ; preds = %440
  %451 = ptrtoint %"class.base::BasicStringPiece"* %448 to i64
  store i64 %451, i64* %154, align 8
  %452 = bitcast %"class.base::BasicStringPiece"* %448 to i8*
  call void @_ZdlPv(i8* %452) #14
  br label %453

453:                                              ; preds = %450, %440
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %137) #12
  call void @_ZN4mojo8internal23ContainerValidateParamsD2Ev(%"class.mojo::internal::ContainerValidateParams"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo12StructTraitsIN3gpu5mojom18VulkanInfoDataViewENS1_10VulkanInfoEE27enabled_instance_extensionsERKS4_(%"class.std::__1::vector.42"* noalias sret, %"class.gpu::VulkanInfo"* dereferenceable(104)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca i8*, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %0, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = bitcast %"class.std::__1::vector.42"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #12
  %8 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %1, i64 0, i32 3
  %9 = getelementptr inbounds %"class.gpu::VulkanInfo", %"class.gpu::VulkanInfo"* %1, i64 0, i32 3, i32 0, i32 1
  %10 = bitcast i8*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.8"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 3
  %16 = bitcast %"class.base::BasicStringPiece"** %6 to i64*
  %17 = icmp eq i64 %14, 0
  %18 = inttoptr i64 %13 to i8**
  %19 = inttoptr i64 %11 to i8**
  br i1 %17, label %33, label %20

20:                                               ; preds = %2
  %21 = icmp ugt i64 %15, 1152921504606846975
  br i1 %21, label %22, label %23

22:                                               ; preds = %20
  tail call void @abort() #13
  unreachable

23:                                               ; preds = %20
  %24 = shl i64 %14, 1
  %25 = tail call i8* @_Znwm(i64 %24) #14
  %26 = bitcast i8* %25 to %"class.base::BasicStringPiece"*
  %27 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %26, i64 %15
  %28 = ptrtoint %"class.base::BasicStringPiece"* %27 to i64
  %29 = insertelement <2 x i8*> undef, i8* %25, i32 0
  %30 = shufflevector <2 x i8*> %29, <2 x i8*> undef, <2 x i32> zeroinitializer
  %31 = ptrtoint <2 x i8*> %30 to <2 x i64>
  %32 = bitcast %"class.std::__1::vector.42"* %0 to <2 x i64>*
  store <2 x i64> %31, <2 x i64>* %32, align 8
  store i64 %28, i64* %16, align 8
  br label %33

33:                                               ; preds = %23, %2
  %34 = phi %"class.base::BasicStringPiece"* [ null, %2 ], [ %27, %23 ]
  %35 = phi %"class.base::BasicStringPiece"* [ null, %2 ], [ %26, %23 ]
  %36 = icmp eq i8** %18, %19
  br i1 %36, label %42, label %37

37:                                               ; preds = %33
  %38 = bitcast i8** %4 to i8*
  %39 = bitcast i8** %4 to i64*
  %40 = bitcast %"class.logging::CheckError"* %3 to i8*
  %41 = bitcast %"class.base::BasicStringPiece"** %5 to i64*
  br label %43

42:                                               ; preds = %63, %33
  ret void

43:                                               ; preds = %66, %37
  %44 = phi %"class.base::BasicStringPiece"* [ %34, %37 ], [ %68, %66 ]
  %45 = phi %"class.base::BasicStringPiece"* [ %35, %37 ], [ %67, %66 ]
  %46 = phi i8** [ %18, %37 ], [ %64, %66 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %47 = bitcast i8** %46 to i64*
  %48 = load i64, i64* %47, align 8
  store i64 %48, i64* %39, align 8
  %49 = icmp ult %"class.base::BasicStringPiece"* %45, %44
  %50 = inttoptr i64 %48 to i8*
  br i1 %49, label %51, label %62

51:                                               ; preds = %43
  %52 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %45, i64 0, i32 0
  store i8* %50, i8** %52, align 8
  %53 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %45, i64 0, i32 1
  %54 = icmp eq i64 %48, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %51
  %56 = call i64 @strlen(i8* nonnull %50) #12
  store i64 %56, i64* %53, align 8
  br label %59

57:                                               ; preds = %51
  store i64 0, i64* %53, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #12
  %58 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #12
  br label %59

59:                                               ; preds = %57, %55
  %60 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %45, i64 1
  %61 = ptrtoint %"class.base::BasicStringPiece"* %60 to i64
  store i64 %61, i64* %41, align 8
  br label %63

62:                                               ; preds = %43
  call void @_ZNSt3__16vectorIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS5_EEE24__emplace_back_slow_pathIJRPKcEEEvDpOT_(%"class.std::__1::vector.42"* %0, i8** nonnull dereferenceable(8) %4) #12
  br label %63

63:                                               ; preds = %59, %62
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #12
  %64 = getelementptr inbounds i8*, i8** %46, i64 1
  %65 = icmp eq i8** %64, %19
  br i1 %65, label %42, label %66

66:                                               ; preds = %63
  %67 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %5, align 8
  %68 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %6, align 8
  br label %43
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal23ContainerValidateParamsD2Ev(%"class.mojo::internal::ContainerValidateParams"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %0, i64 0, i32 3
  %3 = load %"class.mojo::internal::ContainerValidateParams"*, %"class.mojo::internal::ContainerValidateParams"** %2, align 8
  %4 = icmp eq %"class.mojo::internal::ContainerValidateParams"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN4mojo8internal23ContainerValidateParamsD2Ev(%"class.mojo::internal::ContainerValidateParams"* nonnull %3) #12
  %6 = bitcast %"class.mojo::internal::ContainerValidateParams"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #14
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %0, i64 0, i32 2
  %9 = load %"class.mojo::internal::ContainerValidateParams"*, %"class.mojo::internal::ContainerValidateParams"** %8, align 8
  %10 = icmp eq %"class.mojo::internal::ContainerValidateParams"* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  tail call void @_ZN4mojo8internal23ContainerValidateParamsD2Ev(%"class.mojo::internal::ContainerValidateParams"* nonnull %9) #12
  %12 = bitcast %"class.mojo::internal::ContainerValidateParams"* %9 to i8*
  tail call void @_ZdlPv(i8* %12) #14
  ret void

13:                                               ; preds = %7
  ret void
}

declare i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"*, i64) local_unnamed_addr #3

declare void @_ZN3gpu5mojom8internal15VulkanInfo_DataC1Ev(%"class.gpu::mojom::internal::VulkanInfo_Data"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal10SerializerIN3gpu5mojom29VkExtensionPropertiesDataViewEK21VkExtensionPropertiesE9SerializeERS6_RNS0_15MessageFragmentINS3_8internal26VkExtensionProperties_DataEEE(%struct.VkExtensionProperties* dereferenceable(260), %"class.mojo::internal::MessageFragment.86"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.mojo::internal::MessageFragment.86", %"class.mojo::internal::MessageFragment.86"* %1, i64 0, i32 0
  %5 = load %"class.mojo::Message"*, %"class.mojo::Message"** %4, align 8
  %6 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %5, i64 0, i32 1
  %7 = tail call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %6, i64 24) #12
  %8 = getelementptr inbounds %"class.mojo::internal::MessageFragment.86", %"class.mojo::internal::MessageFragment.86"* %1, i64 0, i32 1
  store i64 %7, i64* %8, align 8
  %9 = load %"class.mojo::Message"*, %"class.mojo::Message"** %4, align 8
  %10 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %9, i64 0, i32 1, i32 2
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 %7
  %13 = bitcast i8* %12 to %"class.gpu::mojom::internal::VkExtensionProperties_Data"*
  tail call void @_ZN3gpu5mojom8internal26VkExtensionProperties_DataC1Ev(%"class.gpu::mojom::internal::VkExtensionProperties_Data"* %13) #12
  %14 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %0, i64 0, i32 0, i64 0
  %15 = icmp eq %struct.VkExtensionProperties* %0, null
  br i1 %15, label %16, label %20

16:                                               ; preds = %2
  %17 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  %19 = load %"class.mojo::Message"*, %"class.mojo::Message"** %4, align 8
  br label %24

20:                                               ; preds = %2
  %21 = tail call i64 @strlen(i8* nonnull %14) #12
  %22 = load %"class.mojo::Message"*, %"class.mojo::Message"** %4, align 8
  %23 = icmp ugt i64 %21, 4294967287
  br i1 %23, label %38, label %24

24:                                               ; preds = %16, %20
  %25 = phi %"class.mojo::Message"* [ %19, %16 ], [ %22, %20 ]
  %26 = phi i64 [ 0, %16 ], [ %21, %20 ]
  %27 = trunc i64 %26 to i32
  %28 = add nuw i32 %27, 8
  %29 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %25, i64 0, i32 1
  %30 = zext i32 %28 to i64
  %31 = call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %29, i64 %30) #12
  %32 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %25, i64 0, i32 1, i32 2
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  %35 = bitcast i8* %34 to i32*
  store i32 %28, i32* %35, align 1
  %36 = getelementptr inbounds i8, i8* %34, i64 4
  %37 = bitcast i8* %36 to i32*
  store i32 %27, i32* %37, align 1
  br label %38

38:                                               ; preds = %20, %24
  %39 = phi %"class.mojo::Message"* [ %22, %20 ], [ %25, %24 ]
  %40 = phi i64 [ %21, %20 ], [ %26, %24 ]
  %41 = phi i64 [ -1, %20 ], [ %31, %24 ]
  %42 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %39, i64 0, i32 1, i32 2
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds i8, i8* %43, i64 %41
  %45 = getelementptr inbounds i8, i8* %44, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %45, i8* align 1 %14, i64 %40, i1 false) #12
  %46 = load %"class.mojo::Message"*, %"class.mojo::Message"** %4, align 8
  %47 = load i64, i64* %8, align 8
  %48 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %46, i64 0, i32 1, i32 2
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr inbounds i8, i8* %49, i64 %47
  %51 = getelementptr inbounds i8, i8* %50, i64 8
  %52 = icmp eq i64 %41, -1
  br i1 %52, label %57, label %53

53:                                               ; preds = %38
  %54 = load i8*, i8** %42, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 %41
  %56 = bitcast i8* %55 to %"class.mojo::internal::Array_Data.90"*
  br label %57

57:                                               ; preds = %53, %38
  %58 = phi %"class.mojo::internal::Array_Data.90"* [ %56, %53 ], [ null, %38 ]
  %59 = bitcast i8* %51 to i64*
  %60 = icmp eq %"class.mojo::internal::Array_Data.90"* %58, null
  %61 = ptrtoint %"class.mojo::internal::Array_Data.90"* %58 to i64
  %62 = ptrtoint i8* %51 to i64
  %63 = sub i64 %61, %62
  %64 = select i1 %60, i64 0, i64 %63
  store i64 %64, i64* %59, align 8
  %65 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = load %"class.mojo::Message"*, %"class.mojo::Message"** %4, align 8
  %68 = load i64, i64* %8, align 8
  %69 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %67, i64 0, i32 1, i32 2
  %70 = load i8*, i8** %69, align 8
  %71 = getelementptr inbounds i8, i8* %70, i64 %68
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast i8* %72 to i32*
  store i32 %66, i32* %73, align 1
  ret void
}

declare void @_ZN3gpu5mojom8internal26VkExtensionProperties_DataC1Ev(%"class.gpu::mojom::internal::VkExtensionProperties_Data"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base16BasicStringPieceIcNS_11char_traitsIcEEEENS_9allocatorIS5_EEE24__emplace_back_slow_pathIJRPKcEEEvDpOT_(%"class.std::__1::vector.42"*, i8** dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.base::BasicStringPiece"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.42"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 4
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 1152921504606846975
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = bitcast %"class.std::__1::vector.42"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #13
  unreachable

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.base::BasicStringPiece"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = ashr exact i64 %19, 4
  %21 = icmp ult i64 %20, 576460752303423487
  br i1 %21, label %22, label %30

22:                                               ; preds = %15
  %23 = ashr exact i64 %19, 3
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %22
  %28 = icmp ugt i64 %25, 1152921504606846975
  br i1 %28, label %29, label %30

29:                                               ; preds = %27
  tail call void @abort() #13
  unreachable

30:                                               ; preds = %15, %27
  %31 = phi i64 [ %25, %27 ], [ 1152921504606846975, %15 ]
  %32 = shl i64 %31, 4
  %33 = tail call i8* @_Znwm(i64 %32) #14
  %34 = bitcast i8* %33 to %"class.base::BasicStringPiece"*
  br label %35

35:                                               ; preds = %22, %30
  %36 = phi i64 [ %31, %30 ], [ 0, %22 ]
  %37 = phi %"class.base::BasicStringPiece"* [ %34, %30 ], [ null, %22 ]
  %38 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %37, i64 %10
  %39 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %37, i64 %36
  %40 = ptrtoint %"class.base::BasicStringPiece"* %39 to i64
  %41 = load i8*, i8** %1, align 8
  %42 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %38, i64 0, i32 0
  store i8* %41, i8** %42, align 8
  %43 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %37, i64 %10, i32 1
  %44 = icmp eq i8* %41, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %35
  %46 = tail call i64 @strlen(i8* nonnull %41) #12
  store i64 %46, i64* %43, align 8
  br label %50

47:                                               ; preds = %35
  store i64 0, i64* %43, align 8
  %48 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #12
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #12
  br label %50

50:                                               ; preds = %45, %47
  %51 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %38, i64 1
  %52 = ptrtoint %"class.base::BasicStringPiece"* %51 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %0, i64 0, i32 0, i32 0
  %54 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %53, align 8
  %55 = load i64, i64* %5, align 8
  %56 = ptrtoint %"class.base::BasicStringPiece"* %54 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 4
  %59 = sub nsw i64 0, %58
  %60 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %38, i64 %59
  %61 = ptrtoint %"class.base::BasicStringPiece"* %60 to i64
  %62 = icmp sgt i64 %57, 0
  br i1 %62, label %63, label %67

63:                                               ; preds = %50
  %64 = bitcast %"class.base::BasicStringPiece"* %60 to i8*
  %65 = bitcast %"class.base::BasicStringPiece"* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 %57, i1 false) #12
  %66 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %53, align 8
  br label %67

67:                                               ; preds = %50, %63
  %68 = phi %"class.base::BasicStringPiece"* [ %54, %50 ], [ %66, %63 ]
  store i64 %61, i64* %7, align 8
  store i64 %52, i64* %5, align 8
  store i64 %40, i64* %17, align 8
  %69 = icmp eq %"class.base::BasicStringPiece"* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %67
  %71 = bitcast %"class.base::BasicStringPiece"* %68 to i8*
  call void @_ZdlPv(i8* %71) #14
  br label %72

72:                                               ; preds = %67, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal10SerializerIN3gpu5mojom25VkLayerPropertiesDataViewEK17VkLayerPropertiesE9SerializeERS6_RNS0_15MessageFragmentINS3_8internal22VkLayerProperties_DataEEE(%struct.VkLayerProperties* dereferenceable(520), %"class.mojo::internal::MessageFragment.95"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.mojo::internal::MessageFragment.95", %"class.mojo::internal::MessageFragment.95"* %1, i64 0, i32 0
  %5 = load %"class.mojo::Message"*, %"class.mojo::Message"** %4, align 8
  %6 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %5, i64 0, i32 1
  %7 = tail call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %6, i64 32) #12
  %8 = getelementptr inbounds %"class.mojo::internal::MessageFragment.95", %"class.mojo::internal::MessageFragment.95"* %1, i64 0, i32 1
  store i64 %7, i64* %8, align 8
  %9 = load %"class.mojo::Message"*, %"class.mojo::Message"** %4, align 8
  %10 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %9, i64 0, i32 1, i32 2
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 %7
  %13 = bitcast i8* %12 to %"class.gpu::mojom::internal::VkLayerProperties_Data"*
  tail call void @_ZN3gpu5mojom8internal22VkLayerProperties_DataC1Ev(%"class.gpu::mojom::internal::VkLayerProperties_Data"* %13) #12
  %14 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %0, i64 0, i32 0, i64 0
  %15 = icmp eq %struct.VkLayerProperties* %0, null
  br i1 %15, label %16, label %20

16:                                               ; preds = %2
  %17 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  %19 = load %"class.mojo::Message"*, %"class.mojo::Message"** %4, align 8
  br label %24

20:                                               ; preds = %2
  %21 = tail call i64 @strlen(i8* nonnull %14) #12
  %22 = load %"class.mojo::Message"*, %"class.mojo::Message"** %4, align 8
  %23 = icmp ugt i64 %21, 4294967287
  br i1 %23, label %38, label %24

24:                                               ; preds = %16, %20
  %25 = phi %"class.mojo::Message"* [ %19, %16 ], [ %22, %20 ]
  %26 = phi i64 [ 0, %16 ], [ %21, %20 ]
  %27 = trunc i64 %26 to i32
  %28 = add nuw i32 %27, 8
  %29 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %25, i64 0, i32 1
  %30 = zext i32 %28 to i64
  %31 = call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %29, i64 %30) #12
  %32 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %25, i64 0, i32 1, i32 2
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  %35 = bitcast i8* %34 to i32*
  store i32 %28, i32* %35, align 1
  %36 = getelementptr inbounds i8, i8* %34, i64 4
  %37 = bitcast i8* %36 to i32*
  store i32 %27, i32* %37, align 1
  br label %38

38:                                               ; preds = %20, %24
  %39 = phi %"class.mojo::Message"* [ %22, %20 ], [ %25, %24 ]
  %40 = phi i64 [ %21, %20 ], [ %26, %24 ]
  %41 = phi i64 [ -1, %20 ], [ %31, %24 ]
  %42 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %39, i64 0, i32 1, i32 2
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds i8, i8* %43, i64 %41
  %45 = getelementptr inbounds i8, i8* %44, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %45, i8* align 1 %14, i64 %40, i1 false) #12
  %46 = load %"class.mojo::Message"*, %"class.mojo::Message"** %4, align 8
  %47 = load i64, i64* %8, align 8
  %48 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %46, i64 0, i32 1, i32 2
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr inbounds i8, i8* %49, i64 %47
  %51 = getelementptr inbounds i8, i8* %50, i64 8
  %52 = icmp eq i64 %41, -1
  br i1 %52, label %57, label %53

53:                                               ; preds = %38
  %54 = load i8*, i8** %42, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 %41
  %56 = bitcast i8* %55 to %"class.mojo::internal::Array_Data.90"*
  br label %57

57:                                               ; preds = %38, %53
  %58 = phi %"class.mojo::internal::Array_Data.90"* [ %56, %53 ], [ null, %38 ]
  %59 = bitcast i8* %51 to i64*
  %60 = icmp eq %"class.mojo::internal::Array_Data.90"* %58, null
  %61 = ptrtoint %"class.mojo::internal::Array_Data.90"* %58 to i64
  %62 = ptrtoint i8* %51 to i64
  %63 = sub i64 %61, %62
  %64 = select i1 %60, i64 0, i64 %63
  store i64 %64, i64* %59, align 8
  %65 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = load %"class.mojo::Message"*, %"class.mojo::Message"** %4, align 8
  %68 = load i64, i64* %8, align 8
  %69 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %67, i64 0, i32 1, i32 2
  %70 = load i8*, i8** %69, align 8
  %71 = getelementptr inbounds i8, i8* %70, i64 %68
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast i8* %72 to i32*
  store i32 %66, i32* %73, align 1
  %74 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %0, i64 0, i32 2
  %75 = load i32, i32* %74, align 4
  %76 = load %"class.mojo::Message"*, %"class.mojo::Message"** %4, align 8
  %77 = load i64, i64* %8, align 8
  %78 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %76, i64 0, i32 1, i32 2
  %79 = load i8*, i8** %78, align 8
  %80 = getelementptr inbounds i8, i8* %79, i64 %77
  %81 = getelementptr inbounds i8, i8* %80, i64 20
  %82 = bitcast i8* %81 to i32*
  store i32 %75, i32* %82, align 1
  %83 = getelementptr inbounds %struct.VkLayerProperties, %struct.VkLayerProperties* %0, i64 0, i32 3, i64 0
  %84 = call i64 @strlen(i8* nonnull %83) #12
  %85 = load %"class.mojo::Message"*, %"class.mojo::Message"** %4, align 8
  %86 = icmp ugt i64 %84, 4294967287
  br i1 %86, label %99, label %87

87:                                               ; preds = %57
  %88 = trunc i64 %84 to i32
  %89 = add nuw i32 %88, 8
  %90 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %85, i64 0, i32 1
  %91 = zext i32 %89 to i64
  %92 = call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %90, i64 %91) #12
  %93 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %85, i64 0, i32 1, i32 2
  %94 = load i8*, i8** %93, align 8
  %95 = getelementptr inbounds i8, i8* %94, i64 %92
  %96 = bitcast i8* %95 to i32*
  store i32 %89, i32* %96, align 1
  %97 = getelementptr inbounds i8, i8* %95, i64 4
  %98 = bitcast i8* %97 to i32*
  store i32 %88, i32* %98, align 1
  br label %99

99:                                               ; preds = %57, %87
  %100 = phi i64 [ -1, %57 ], [ %92, %87 ]
  %101 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %85, i64 0, i32 1, i32 2
  %102 = load i8*, i8** %101, align 8
  %103 = getelementptr inbounds i8, i8* %102, i64 %100
  %104 = getelementptr inbounds i8, i8* %103, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %104, i8* align 1 %83, i64 %84, i1 false) #12
  %105 = load %"class.mojo::Message"*, %"class.mojo::Message"** %4, align 8
  %106 = load i64, i64* %8, align 8
  %107 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %105, i64 0, i32 1, i32 2
  %108 = load i8*, i8** %107, align 8
  %109 = getelementptr inbounds i8, i8* %108, i64 %106
  %110 = getelementptr inbounds i8, i8* %109, i64 24
  %111 = icmp eq i64 %100, -1
  br i1 %111, label %116, label %112

112:                                              ; preds = %99
  %113 = load i8*, i8** %101, align 8
  %114 = getelementptr inbounds i8, i8* %113, i64 %100
  %115 = bitcast i8* %114 to %"class.mojo::internal::Array_Data.90"*
  br label %116

116:                                              ; preds = %112, %99
  %117 = phi %"class.mojo::internal::Array_Data.90"* [ %115, %112 ], [ null, %99 ]
  %118 = bitcast i8* %110 to i64*
  %119 = icmp eq %"class.mojo::internal::Array_Data.90"* %117, null
  %120 = ptrtoint %"class.mojo::internal::Array_Data.90"* %117 to i64
  %121 = ptrtoint i8* %110 to i64
  %122 = sub i64 %120, %121
  %123 = select i1 %119, i64 0, i64 %122
  store i64 %123, i64* %118, align 8
  ret void
}

declare void @_ZN3gpu5mojom8internal22VkLayerProperties_DataC1Ev(%"class.gpu::mojom::internal::VkLayerProperties_Data"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal10SerializerIN3gpu5mojom32VulkanPhysicalDeviceInfoDataViewEKNS2_24VulkanPhysicalDeviceInfoEE9SerializeERS6_RNS0_15MessageFragmentINS3_8internal29VulkanPhysicalDeviceInfo_DataEEE(%"class.gpu::VulkanPhysicalDeviceInfo"* dereferenceable(1640), %"class.mojo::internal::MessageFragment.98"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.mojo::internal::MessageFragment.86", align 8
  %4 = alloca %"class.mojo::internal::MessageFragment.126", align 8
  %5 = alloca %"class.mojo::internal::MessageFragment.103", align 8
  %6 = alloca %"class.mojo::internal::ContainerValidateParams", align 8
  %7 = alloca %"class.mojo::internal::MessageFragment.107", align 8
  %8 = alloca %"class.mojo::internal::ContainerValidateParams", align 8
  %9 = getelementptr inbounds %"class.mojo::internal::MessageFragment.98", %"class.mojo::internal::MessageFragment.98"* %1, i64 0, i32 0
  %10 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %11 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %10, i64 0, i32 1
  %12 = tail call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %11, i64 48) #12
  %13 = getelementptr inbounds %"class.mojo::internal::MessageFragment.98", %"class.mojo::internal::MessageFragment.98"* %1, i64 0, i32 1
  store i64 %12, i64* %13, align 8
  %14 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %15 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %14, i64 0, i32 1, i32 2
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 %12
  %18 = bitcast i8* %17 to %"class.gpu::mojom::internal::VulkanPhysicalDeviceInfo_Data"*
  tail call void @_ZN3gpu5mojom8internal29VulkanPhysicalDeviceInfo_DataC1Ev(%"class.gpu::mojom::internal::VulkanPhysicalDeviceInfo_Data"* %18) #12
  %19 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %0, i64 0, i32 1
  %20 = bitcast %"class.mojo::internal::MessageFragment.103"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #12
  %21 = getelementptr inbounds %"class.mojo::internal::MessageFragment.103", %"class.mojo::internal::MessageFragment.103"* %5, i64 0, i32 1
  %22 = bitcast %"class.mojo::internal::MessageFragment.98"* %1 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.mojo::internal::MessageFragment.103"* %5 to i64*
  store i64 %23, i64* %24, align 8
  store i64 -1, i64* %21, align 8
  call void @_ZN4mojo8internal10SerializerIN3gpu5mojom34VkPhysicalDevicePropertiesDataViewEK26VkPhysicalDevicePropertiesE9SerializeERS6_RNS0_15MessageFragmentINS3_8internal31VkPhysicalDeviceProperties_DataEEE(%struct.VkPhysicalDeviceProperties* dereferenceable(824) %19, %"class.mojo::internal::MessageFragment.103"* nonnull dereferenceable(16) %5) #12
  %25 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %26 = load i64, i64* %13, align 8
  %27 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %25, i64 0, i32 1, i32 2
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds i8, i8* %28, i64 %26
  %30 = getelementptr inbounds i8, i8* %29, i64 8
  %31 = load i64, i64* %21, align 8
  %32 = icmp eq i64 %31, -1
  br i1 %32, label %40, label %33

33:                                               ; preds = %2
  %34 = getelementptr inbounds %"class.mojo::internal::MessageFragment.103", %"class.mojo::internal::MessageFragment.103"* %5, i64 0, i32 0
  %35 = load %"class.mojo::Message"*, %"class.mojo::Message"** %34, align 8
  %36 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %35, i64 0, i32 1, i32 2
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  %39 = bitcast i8* %38 to %"class.gpu::mojom::internal::VkPhysicalDeviceProperties_Data"*
  br label %40

40:                                               ; preds = %2, %33
  %41 = phi %"class.gpu::mojom::internal::VkPhysicalDeviceProperties_Data"* [ %39, %33 ], [ null, %2 ]
  %42 = bitcast i8* %30 to i64*
  %43 = icmp eq %"class.gpu::mojom::internal::VkPhysicalDeviceProperties_Data"* %41, null
  %44 = ptrtoint %"class.gpu::mojom::internal::VkPhysicalDeviceProperties_Data"* %41 to i64
  %45 = ptrtoint i8* %30 to i64
  %46 = sub i64 %44, %45
  %47 = select i1 %43, i64 0, i64 %46
  store i64 %47, i64* %42, align 8
  %48 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %0, i64 0, i32 3
  %49 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %50 = ptrtoint %"class.mojo::Message"* %49 to i64
  %51 = bitcast %"class.mojo::internal::ContainerValidateParams"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %51) #12
  %52 = bitcast %"class.mojo::internal::ContainerValidateParams"* %6 to i64*
  store i64 -6148914691236517206, i64* %52, align 8
  %53 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %6, i64 0, i32 0
  store i32 0, i32* %53, align 8
  %54 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %6, i64 0, i32 1
  store i8 0, i8* %54, align 4
  %55 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %6, i64 0, i32 2
  %56 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %0, i64 0, i32 3, i32 0, i32 1
  %57 = bitcast %struct.VkExtensionProperties** %56 to i64*
  %58 = bitcast %"class.mojo::internal::ContainerValidateParams"** %55 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 24, i1 false)
  %59 = load i64, i64* %57, align 8
  %60 = bitcast %"class.std::__1::vector"* %48 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = sub i64 %59, %61
  %63 = sdiv exact i64 %62, 260
  %64 = icmp ugt i64 %63, 536870910
  br i1 %64, label %82, label %65

65:                                               ; preds = %40
  %66 = trunc i64 %63 to i32
  %67 = shl i32 %66, 3
  %68 = add nuw i32 %67, 8
  %69 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %49, i64 0, i32 1
  %70 = zext i32 %68 to i64
  %71 = call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %69, i64 %70) #12
  %72 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %49, i64 0, i32 1, i32 2
  %73 = load i8*, i8** %72, align 8
  %74 = getelementptr inbounds i8, i8* %73, i64 %71
  %75 = bitcast i8* %74 to i32*
  store i32 %68, i32* %75, align 1
  %76 = getelementptr inbounds i8, i8* %74, i64 4
  %77 = bitcast i8* %76 to i32*
  store i32 %66, i32* %77, align 1
  %78 = load i64, i64* %57, align 8
  %79 = load i64, i64* %60, align 8
  %80 = sub i64 %78, %79
  %81 = sdiv exact i64 %80, 260
  br label %82

82:                                               ; preds = %65, %40
  %83 = phi i64 [ -1, %40 ], [ %71, %65 ]
  %84 = phi i64 [ %63, %40 ], [ %81, %65 ]
  %85 = phi i64 [ %62, %40 ], [ %80, %65 ]
  %86 = phi i64 [ %61, %40 ], [ %79, %65 ]
  %87 = icmp eq i64 %85, 0
  br i1 %87, label %125, label %88

88:                                               ; preds = %82
  %89 = inttoptr i64 %86 to %struct.VkExtensionProperties*
  %90 = bitcast %"class.mojo::internal::MessageFragment.86"* %3 to i8*
  %91 = getelementptr inbounds %"class.mojo::internal::MessageFragment.86", %"class.mojo::internal::MessageFragment.86"* %3, i64 0, i32 0
  %92 = getelementptr inbounds %"class.mojo::internal::MessageFragment.86", %"class.mojo::internal::MessageFragment.86"* %3, i64 0, i32 1
  %93 = bitcast %"class.mojo::internal::MessageFragment.86"* %3 to i64*
  %94 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %48, i64 0, i32 0, i32 0
  %95 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %49, i64 0, i32 1, i32 2
  br label %96

96:                                               ; preds = %123, %88
  %97 = phi %struct.VkExtensionProperties* [ %89, %88 ], [ %124, %123 ]
  %98 = phi i64 [ 0, %88 ], [ %99, %123 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %90) #12
  store i64 %50, i64* %93, align 8
  store i64 -1, i64* %92, align 8
  %99 = add nuw i64 %98, 1
  %100 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %97, i64 %98
  call void @_ZN4mojo8internal10SerializerIN3gpu5mojom29VkExtensionPropertiesDataViewEK21VkExtensionPropertiesE9SerializeERS6_RNS0_15MessageFragmentINS3_8internal26VkExtensionProperties_DataEEE(%struct.VkExtensionProperties* dereferenceable(260) %100, %"class.mojo::internal::MessageFragment.86"* nonnull dereferenceable(16) %3) #12
  %101 = load i8*, i8** %95, align 8
  %102 = getelementptr inbounds i8, i8* %101, i64 8
  %103 = getelementptr inbounds i8, i8* %102, i64 %83
  %104 = bitcast i8* %103 to %"class.mojo::internal::Array_Data"*
  %105 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %104, i64 %98
  %106 = load i64, i64* %92, align 8
  %107 = icmp eq i64 %106, -1
  br i1 %107, label %114, label %108

108:                                              ; preds = %96
  %109 = load %"class.mojo::Message"*, %"class.mojo::Message"** %91, align 8
  %110 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %109, i64 0, i32 1, i32 2
  %111 = load i8*, i8** %110, align 8
  %112 = getelementptr inbounds i8, i8* %111, i64 %106
  %113 = bitcast i8* %112 to %"class.gpu::mojom::internal::VkExtensionProperties_Data"*
  br label %114

114:                                              ; preds = %108, %96
  %115 = phi %"class.gpu::mojom::internal::VkExtensionProperties_Data"* [ %113, %108 ], [ null, %96 ]
  %116 = bitcast %"class.mojo::internal::Array_Data"* %105 to i64*
  %117 = icmp eq %"class.gpu::mojom::internal::VkExtensionProperties_Data"* %115, null
  %118 = ptrtoint %"class.gpu::mojom::internal::VkExtensionProperties_Data"* %115 to i64
  %119 = ptrtoint %"class.mojo::internal::Array_Data"* %105 to i64
  %120 = sub i64 %118, %119
  %121 = select i1 %117, i64 0, i64 %120
  store i64 %121, i64* %116, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %90) #12
  %122 = icmp ult i64 %99, %84
  br i1 %122, label %123, label %125

123:                                              ; preds = %114
  %124 = load %struct.VkExtensionProperties*, %struct.VkExtensionProperties** %94, align 8
  br label %96

125:                                              ; preds = %114, %82
  %126 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %127 = load i64, i64* %13, align 8
  %128 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %126, i64 0, i32 1, i32 2
  %129 = load i8*, i8** %128, align 8
  %130 = getelementptr inbounds i8, i8* %129, i64 %127
  %131 = getelementptr inbounds i8, i8* %130, i64 16
  %132 = icmp eq i64 %83, -1
  br i1 %132, label %138, label %133

133:                                              ; preds = %125
  %134 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %49, i64 0, i32 1, i32 2
  %135 = load i8*, i8** %134, align 8
  %136 = getelementptr inbounds i8, i8* %135, i64 %83
  %137 = bitcast i8* %136 to %"class.mojo::internal::Array_Data"*
  br label %138

138:                                              ; preds = %125, %133
  %139 = phi %"class.mojo::internal::Array_Data"* [ %137, %133 ], [ null, %125 ]
  %140 = bitcast i8* %131 to i64*
  %141 = icmp eq %"class.mojo::internal::Array_Data"* %139, null
  %142 = ptrtoint %"class.mojo::internal::Array_Data"* %139 to i64
  %143 = ptrtoint i8* %131 to i64
  %144 = sub i64 %142, %143
  %145 = select i1 %141, i64 0, i64 %144
  store i64 %145, i64* %140, align 8
  %146 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %0, i64 0, i32 4
  %147 = bitcast %"class.mojo::internal::MessageFragment.107"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %147) #12
  %148 = getelementptr inbounds %"class.mojo::internal::MessageFragment.107", %"class.mojo::internal::MessageFragment.107"* %7, i64 0, i32 1
  %149 = load i64, i64* %22, align 8
  %150 = bitcast %"class.mojo::internal::MessageFragment.107"* %7 to i64*
  store i64 %149, i64* %150, align 8
  store i64 -1, i64* %148, align 8
  call void @_ZN4mojo8internal10SerializerIN3gpu5mojom32VkPhysicalDeviceFeaturesDataViewEK24VkPhysicalDeviceFeaturesE9SerializeERS6_RNS0_15MessageFragmentINS3_8internal29VkPhysicalDeviceFeatures_DataEEE(%struct.VkPhysicalDeviceFeatures* dereferenceable(220) %146, %"class.mojo::internal::MessageFragment.107"* nonnull dereferenceable(16) %7) #12
  %151 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %152 = load i64, i64* %13, align 8
  %153 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %151, i64 0, i32 1, i32 2
  %154 = load i8*, i8** %153, align 8
  %155 = getelementptr inbounds i8, i8* %154, i64 %152
  %156 = getelementptr inbounds i8, i8* %155, i64 24
  %157 = load i64, i64* %148, align 8
  %158 = icmp eq i64 %157, -1
  br i1 %158, label %166, label %159

159:                                              ; preds = %138
  %160 = getelementptr inbounds %"class.mojo::internal::MessageFragment.107", %"class.mojo::internal::MessageFragment.107"* %7, i64 0, i32 0
  %161 = load %"class.mojo::Message"*, %"class.mojo::Message"** %160, align 8
  %162 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %161, i64 0, i32 1, i32 2
  %163 = load i8*, i8** %162, align 8
  %164 = getelementptr inbounds i8, i8* %163, i64 %157
  %165 = bitcast i8* %164 to %"class.gpu::mojom::internal::VkPhysicalDeviceFeatures_Data"*
  br label %166

166:                                              ; preds = %138, %159
  %167 = phi %"class.gpu::mojom::internal::VkPhysicalDeviceFeatures_Data"* [ %165, %159 ], [ null, %138 ]
  %168 = bitcast i8* %156 to i64*
  %169 = icmp eq %"class.gpu::mojom::internal::VkPhysicalDeviceFeatures_Data"* %167, null
  %170 = ptrtoint %"class.gpu::mojom::internal::VkPhysicalDeviceFeatures_Data"* %167 to i64
  %171 = ptrtoint i8* %156 to i64
  %172 = sub i64 %170, %171
  %173 = select i1 %169, i64 0, i64 %172
  store i64 %173, i64* %168, align 8
  %174 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %0, i64 0, i32 5
  %175 = load i8, i8* %174, align 4, !range !2
  %176 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %177 = load i64, i64* %13, align 8
  %178 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %176, i64 0, i32 1, i32 2
  %179 = load i8*, i8** %178, align 8
  %180 = getelementptr inbounds i8, i8* %179, i64 %177
  %181 = getelementptr inbounds i8, i8* %180, i64 32
  %182 = load i8, i8* %181, align 1
  %183 = and i8 %182, -2
  %184 = or i8 %183, %175
  store i8 %184, i8* %181, align 1
  %185 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %0, i64 0, i32 6
  %186 = load i8, i8* %185, align 1, !range !2
  %187 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %188 = load i64, i64* %13, align 8
  %189 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %187, i64 0, i32 1, i32 2
  %190 = load i8*, i8** %189, align 8
  %191 = getelementptr inbounds i8, i8* %190, i64 %188
  %192 = getelementptr inbounds i8, i8* %191, i64 32
  %193 = load i8, i8* %192, align 1
  %194 = shl nuw nsw i8 %186, 1
  %195 = and i8 %193, -3
  %196 = or i8 %195, %194
  store i8 %196, i8* %192, align 1
  %197 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %0, i64 0, i32 7
  %198 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %199 = ptrtoint %"class.mojo::Message"* %198 to i64
  %200 = bitcast %"class.mojo::internal::ContainerValidateParams"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %200) #12
  %201 = bitcast %"class.mojo::internal::ContainerValidateParams"* %8 to i64*
  store i64 -6148914691236517206, i64* %201, align 8
  %202 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %8, i64 0, i32 0
  store i32 0, i32* %202, align 8
  %203 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %8, i64 0, i32 1
  store i8 0, i8* %203, align 4
  %204 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %8, i64 0, i32 2
  %205 = getelementptr inbounds %"class.gpu::VulkanPhysicalDeviceInfo", %"class.gpu::VulkanPhysicalDeviceInfo"* %0, i64 0, i32 7, i32 0, i32 1
  %206 = bitcast %struct.VkQueueFamilyProperties** %205 to i64*
  %207 = bitcast %"class.mojo::internal::ContainerValidateParams"** %204 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %207, i8 0, i64 24, i1 false)
  %208 = load i64, i64* %206, align 8
  %209 = bitcast %"class.std::__1::vector.1"* %197 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = sub i64 %208, %210
  %212 = sdiv exact i64 %211, 24
  %213 = icmp ugt i64 %212, 536870910
  br i1 %213, label %231, label %214

214:                                              ; preds = %166
  %215 = trunc i64 %212 to i32
  %216 = shl i32 %215, 3
  %217 = add nuw i32 %216, 8
  %218 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %198, i64 0, i32 1
  %219 = zext i32 %217 to i64
  %220 = call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %218, i64 %219) #12
  %221 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %198, i64 0, i32 1, i32 2
  %222 = load i8*, i8** %221, align 8
  %223 = getelementptr inbounds i8, i8* %222, i64 %220
  %224 = bitcast i8* %223 to i32*
  store i32 %217, i32* %224, align 1
  %225 = getelementptr inbounds i8, i8* %223, i64 4
  %226 = bitcast i8* %225 to i32*
  store i32 %215, i32* %226, align 1
  %227 = load i64, i64* %206, align 8
  %228 = load i64, i64* %209, align 8
  %229 = sub i64 %227, %228
  %230 = sdiv exact i64 %229, 24
  br label %231

231:                                              ; preds = %214, %166
  %232 = phi i64 [ -1, %166 ], [ %220, %214 ]
  %233 = phi i64 [ %212, %166 ], [ %230, %214 ]
  %234 = phi i64 [ %211, %166 ], [ %229, %214 ]
  %235 = phi i64 [ %210, %166 ], [ %228, %214 ]
  %236 = icmp eq i64 %234, 0
  br i1 %236, label %274, label %237

237:                                              ; preds = %231
  %238 = inttoptr i64 %235 to %struct.VkQueueFamilyProperties*
  %239 = bitcast %"class.mojo::internal::MessageFragment.126"* %4 to i8*
  %240 = getelementptr inbounds %"class.mojo::internal::MessageFragment.126", %"class.mojo::internal::MessageFragment.126"* %4, i64 0, i32 0
  %241 = getelementptr inbounds %"class.mojo::internal::MessageFragment.126", %"class.mojo::internal::MessageFragment.126"* %4, i64 0, i32 1
  %242 = bitcast %"class.mojo::internal::MessageFragment.126"* %4 to i64*
  %243 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %197, i64 0, i32 0, i32 0
  %244 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %198, i64 0, i32 1, i32 2
  br label %245

245:                                              ; preds = %272, %237
  %246 = phi %struct.VkQueueFamilyProperties* [ %238, %237 ], [ %273, %272 ]
  %247 = phi i64 [ 0, %237 ], [ %248, %272 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %239) #12
  store i64 %199, i64* %242, align 8
  store i64 -1, i64* %241, align 8
  %248 = add nuw i64 %247, 1
  %249 = getelementptr inbounds %struct.VkQueueFamilyProperties, %struct.VkQueueFamilyProperties* %246, i64 %247
  call void @_ZN4mojo8internal10SerializerIN3gpu5mojom31VkQueueFamilyPropertiesDataViewEK23VkQueueFamilyPropertiesE9SerializeERS6_RNS0_15MessageFragmentINS3_8internal28VkQueueFamilyProperties_DataEEE(%struct.VkQueueFamilyProperties* dereferenceable(24) %249, %"class.mojo::internal::MessageFragment.126"* nonnull dereferenceable(16) %4) #12
  %250 = load i8*, i8** %244, align 8
  %251 = getelementptr inbounds i8, i8* %250, i64 8
  %252 = getelementptr inbounds i8, i8* %251, i64 %232
  %253 = bitcast i8* %252 to %"class.mojo::internal::Array_Data.109"*
  %254 = getelementptr inbounds %"class.mojo::internal::Array_Data.109", %"class.mojo::internal::Array_Data.109"* %253, i64 %247
  %255 = load i64, i64* %241, align 8
  %256 = icmp eq i64 %255, -1
  br i1 %256, label %263, label %257

257:                                              ; preds = %245
  %258 = load %"class.mojo::Message"*, %"class.mojo::Message"** %240, align 8
  %259 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %258, i64 0, i32 1, i32 2
  %260 = load i8*, i8** %259, align 8
  %261 = getelementptr inbounds i8, i8* %260, i64 %255
  %262 = bitcast i8* %261 to %"class.gpu::mojom::internal::VkQueueFamilyProperties_Data"*
  br label %263

263:                                              ; preds = %257, %245
  %264 = phi %"class.gpu::mojom::internal::VkQueueFamilyProperties_Data"* [ %262, %257 ], [ null, %245 ]
  %265 = bitcast %"class.mojo::internal::Array_Data.109"* %254 to i64*
  %266 = icmp eq %"class.gpu::mojom::internal::VkQueueFamilyProperties_Data"* %264, null
  %267 = ptrtoint %"class.gpu::mojom::internal::VkQueueFamilyProperties_Data"* %264 to i64
  %268 = ptrtoint %"class.mojo::internal::Array_Data.109"* %254 to i64
  %269 = sub i64 %267, %268
  %270 = select i1 %266, i64 0, i64 %269
  store i64 %270, i64* %265, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %239) #12
  %271 = icmp ult i64 %248, %233
  br i1 %271, label %272, label %274

272:                                              ; preds = %263
  %273 = load %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties** %243, align 8
  br label %245

274:                                              ; preds = %263, %231
  %275 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %276 = load i64, i64* %13, align 8
  %277 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %275, i64 0, i32 1, i32 2
  %278 = load i8*, i8** %277, align 8
  %279 = getelementptr inbounds i8, i8* %278, i64 %276
  %280 = getelementptr inbounds i8, i8* %279, i64 40
  %281 = icmp eq i64 %232, -1
  br i1 %281, label %287, label %282

282:                                              ; preds = %274
  %283 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %198, i64 0, i32 1, i32 2
  %284 = load i8*, i8** %283, align 8
  %285 = getelementptr inbounds i8, i8* %284, i64 %232
  %286 = bitcast i8* %285 to %"class.mojo::internal::Array_Data.109"*
  br label %287

287:                                              ; preds = %282, %274
  %288 = phi %"class.mojo::internal::Array_Data.109"* [ %286, %282 ], [ null, %274 ]
  %289 = bitcast i8* %280 to i64*
  %290 = icmp eq %"class.mojo::internal::Array_Data.109"* %288, null
  %291 = ptrtoint %"class.mojo::internal::Array_Data.109"* %288 to i64
  %292 = ptrtoint i8* %280 to i64
  %293 = sub i64 %291, %292
  %294 = select i1 %290, i64 0, i64 %293
  store i64 %294, i64* %289, align 8
  call void @_ZN4mojo8internal23ContainerValidateParamsD2Ev(%"class.mojo::internal::ContainerValidateParams"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %200) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %147) #12
  call void @_ZN4mojo8internal23ContainerValidateParamsD2Ev(%"class.mojo::internal::ContainerValidateParams"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %51) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #12
  ret void
}

declare void @_ZN3gpu5mojom8internal29VulkanPhysicalDeviceInfo_DataC1Ev(%"class.gpu::mojom::internal::VulkanPhysicalDeviceInfo_Data"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal10SerializerIN3gpu5mojom34VkPhysicalDevicePropertiesDataViewEK26VkPhysicalDevicePropertiesE9SerializeERS6_RNS0_15MessageFragmentINS3_8internal31VkPhysicalDeviceProperties_DataEEE(%struct.VkPhysicalDeviceProperties* dereferenceable(824), %"class.mojo::internal::MessageFragment.103"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.mojo::internal::ContainerValidateParams", align 8
  %4 = alloca %"class.mojo::internal::MessageFragment.112", align 8
  %5 = getelementptr inbounds %"class.mojo::internal::MessageFragment.103", %"class.mojo::internal::MessageFragment.103"* %1, i64 0, i32 0
  %6 = load %"class.mojo::Message"*, %"class.mojo::Message"** %5, align 8
  %7 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %6, i64 0, i32 1
  %8 = tail call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %7, i64 64) #12
  %9 = getelementptr inbounds %"class.mojo::internal::MessageFragment.103", %"class.mojo::internal::MessageFragment.103"* %1, i64 0, i32 1
  store i64 %8, i64* %9, align 8
  %10 = load %"class.mojo::Message"*, %"class.mojo::Message"** %5, align 8
  %11 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %10, i64 0, i32 1, i32 2
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds i8, i8* %12, i64 %8
  %14 = bitcast i8* %13 to %"class.gpu::mojom::internal::VkPhysicalDeviceProperties_Data"*
  tail call void @_ZN3gpu5mojom8internal31VkPhysicalDeviceProperties_DataC1Ev(%"class.gpu::mojom::internal::VkPhysicalDeviceProperties_Data"* %14) #12
  %15 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %0, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = load %"class.mojo::Message"*, %"class.mojo::Message"** %5, align 8
  %18 = load i64, i64* %9, align 8
  %19 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %17, i64 0, i32 1, i32 2
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds i8, i8* %20, i64 %18
  %22 = getelementptr inbounds i8, i8* %21, i64 8
  %23 = bitcast i8* %22 to i32*
  store i32 %16, i32* %23, align 1
  %24 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %0, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = load %"class.mojo::Message"*, %"class.mojo::Message"** %5, align 8
  %27 = load i64, i64* %9, align 8
  %28 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %26, i64 0, i32 1, i32 2
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds i8, i8* %29, i64 %27
  %31 = getelementptr inbounds i8, i8* %30, i64 12
  %32 = bitcast i8* %31 to i32*
  store i32 %25, i32* %32, align 1
  %33 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %0, i64 0, i32 2
  %34 = load i32, i32* %33, align 8
  %35 = load %"class.mojo::Message"*, %"class.mojo::Message"** %5, align 8
  %36 = load i64, i64* %9, align 8
  %37 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %35, i64 0, i32 1, i32 2
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds i8, i8* %38, i64 %36
  %40 = getelementptr inbounds i8, i8* %39, i64 16
  %41 = bitcast i8* %40 to i32*
  store i32 %34, i32* %41, align 1
  %42 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %0, i64 0, i32 3
  %43 = load i32, i32* %42, align 4
  %44 = load %"class.mojo::Message"*, %"class.mojo::Message"** %5, align 8
  %45 = load i64, i64* %9, align 8
  %46 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %44, i64 0, i32 1, i32 2
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds i8, i8* %47, i64 %45
  %49 = getelementptr inbounds i8, i8* %48, i64 20
  %50 = bitcast i8* %49 to i32*
  store i32 %43, i32* %50, align 1
  %51 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %0, i64 0, i32 4
  %52 = load i32, i32* %51, align 8
  %53 = load %"class.mojo::Message"*, %"class.mojo::Message"** %5, align 8
  %54 = load i64, i64* %9, align 8
  %55 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %53, i64 0, i32 1, i32 2
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %54
  %58 = getelementptr inbounds i8, i8* %57, i64 24
  %59 = bitcast i8* %58 to i32*
  %60 = icmp ult i32 %52, 5
  %61 = select i1 %60, i32 %52, i32 -1
  store i32 %61, i32* %59, align 4
  %62 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %0, i64 0, i32 5, i64 0
  %63 = tail call i64 @strlen(i8* nonnull %62) #12
  %64 = load %"class.mojo::Message"*, %"class.mojo::Message"** %5, align 8
  %65 = icmp ugt i64 %63, 4294967287
  br i1 %65, label %78, label %66

66:                                               ; preds = %2
  %67 = trunc i64 %63 to i32
  %68 = add nuw i32 %67, 8
  %69 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %64, i64 0, i32 1
  %70 = zext i32 %68 to i64
  %71 = tail call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %69, i64 %70) #12
  %72 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %64, i64 0, i32 1, i32 2
  %73 = load i8*, i8** %72, align 8
  %74 = getelementptr inbounds i8, i8* %73, i64 %71
  %75 = bitcast i8* %74 to i32*
  store i32 %68, i32* %75, align 1
  %76 = getelementptr inbounds i8, i8* %74, i64 4
  %77 = bitcast i8* %76 to i32*
  store i32 %67, i32* %77, align 1
  br label %78

78:                                               ; preds = %2, %66
  %79 = phi i64 [ -1, %2 ], [ %71, %66 ]
  %80 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %64, i64 0, i32 1, i32 2
  %81 = load i8*, i8** %80, align 8
  %82 = getelementptr inbounds i8, i8* %81, i64 %79
  %83 = getelementptr inbounds i8, i8* %82, i64 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %83, i8* align 1 %62, i64 %63, i1 false) #12
  %84 = load %"class.mojo::Message"*, %"class.mojo::Message"** %5, align 8
  %85 = load i64, i64* %9, align 8
  %86 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %84, i64 0, i32 1, i32 2
  %87 = load i8*, i8** %86, align 8
  %88 = getelementptr inbounds i8, i8* %87, i64 %85
  %89 = getelementptr inbounds i8, i8* %88, i64 32
  %90 = icmp eq i64 %79, -1
  br i1 %90, label %95, label %91

91:                                               ; preds = %78
  %92 = load i8*, i8** %80, align 8
  %93 = getelementptr inbounds i8, i8* %92, i64 %79
  %94 = bitcast i8* %93 to %"class.mojo::internal::Array_Data.90"*
  br label %95

95:                                               ; preds = %78, %91
  %96 = phi %"class.mojo::internal::Array_Data.90"* [ %94, %91 ], [ null, %78 ]
  %97 = bitcast i8* %89 to i64*
  %98 = icmp eq %"class.mojo::internal::Array_Data.90"* %96, null
  %99 = ptrtoint %"class.mojo::internal::Array_Data.90"* %96 to i64
  %100 = ptrtoint i8* %89 to i64
  %101 = sub i64 %99, %100
  %102 = select i1 %98, i64 0, i64 %101
  store i64 %102, i64* %97, align 8
  %103 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %0, i64 0, i32 6, i64 0
  %104 = load %"class.mojo::Message"*, %"class.mojo::Message"** %5, align 8
  %105 = bitcast %"class.mojo::internal::ContainerValidateParams"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %105) #12
  %106 = bitcast %"class.mojo::internal::ContainerValidateParams"* %3 to i64*
  store i64 -6148914691236517206, i64* %106, align 8
  %107 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %3, i64 0, i32 0
  store i32 16, i32* %107, align 8
  %108 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %3, i64 0, i32 1
  store i8 0, i8* %108, align 4
  %109 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %3, i64 0, i32 2
  %110 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %104, i64 0, i32 1
  %111 = bitcast %"class.mojo::internal::ContainerValidateParams"** %109 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %111, i8 0, i64 24, i1 false)
  %112 = tail call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %110, i64 24) #12
  %113 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %104, i64 0, i32 1, i32 2
  %114 = load i8*, i8** %113, align 8
  %115 = getelementptr inbounds i8, i8* %114, i64 %112
  %116 = bitcast i8* %115 to i32*
  store i32 24, i32* %116, align 1
  %117 = getelementptr inbounds i8, i8* %115, i64 4
  %118 = bitcast i8* %117 to i32*
  store i32 16, i32* %118, align 1
  %119 = load i8*, i8** %113, align 8
  %120 = getelementptr inbounds i8, i8* %119, i64 %112
  %121 = icmp eq i8* %103, null
  %122 = getelementptr inbounds i8, i8* %120, i64 8
  br i1 %121, label %123, label %170

123:                                              ; preds = %95
  %124 = load i8, i8* null, align 536870912
  store i8 %124, i8* %122, align 1
  %125 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %0, i64 0, i32 6, i64 1
  %126 = load i8, i8* %125, align 1
  %127 = getelementptr inbounds i8, i8* %122, i64 1
  store i8 %126, i8* %127, align 1
  %128 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %0, i64 0, i32 6, i64 2
  %129 = load i8, i8* %128, align 1
  %130 = getelementptr inbounds i8, i8* %122, i64 2
  store i8 %129, i8* %130, align 1
  %131 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %0, i64 0, i32 6, i64 3
  %132 = load i8, i8* %131, align 1
  %133 = getelementptr inbounds i8, i8* %122, i64 3
  store i8 %132, i8* %133, align 1
  %134 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %0, i64 0, i32 6, i64 4
  %135 = load i8, i8* %134, align 1
  %136 = getelementptr inbounds i8, i8* %122, i64 4
  store i8 %135, i8* %136, align 1
  %137 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %0, i64 0, i32 6, i64 5
  %138 = load i8, i8* %137, align 1
  %139 = getelementptr inbounds i8, i8* %122, i64 5
  store i8 %138, i8* %139, align 1
  %140 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %0, i64 0, i32 6, i64 6
  %141 = load i8, i8* %140, align 1
  %142 = getelementptr inbounds i8, i8* %122, i64 6
  store i8 %141, i8* %142, align 1
  %143 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %0, i64 0, i32 6, i64 7
  %144 = load i8, i8* %143, align 1
  %145 = getelementptr inbounds i8, i8* %122, i64 7
  store i8 %144, i8* %145, align 1
  %146 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %0, i64 0, i32 6, i64 8
  %147 = load i8, i8* %146, align 1
  %148 = getelementptr inbounds i8, i8* %122, i64 8
  store i8 %147, i8* %148, align 1
  %149 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %0, i64 0, i32 6, i64 9
  %150 = load i8, i8* %149, align 1
  %151 = getelementptr inbounds i8, i8* %122, i64 9
  store i8 %150, i8* %151, align 1
  %152 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %0, i64 0, i32 6, i64 10
  %153 = load i8, i8* %152, align 1
  %154 = getelementptr inbounds i8, i8* %122, i64 10
  store i8 %153, i8* %154, align 1
  %155 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %0, i64 0, i32 6, i64 11
  %156 = load i8, i8* %155, align 1
  %157 = getelementptr inbounds i8, i8* %122, i64 11
  store i8 %156, i8* %157, align 1
  %158 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %0, i64 0, i32 6, i64 12
  %159 = load i8, i8* %158, align 1
  %160 = getelementptr inbounds i8, i8* %122, i64 12
  store i8 %159, i8* %160, align 1
  %161 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %0, i64 0, i32 6, i64 13
  %162 = load i8, i8* %161, align 1
  %163 = getelementptr inbounds i8, i8* %122, i64 13
  store i8 %162, i8* %163, align 1
  %164 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %0, i64 0, i32 6, i64 14
  %165 = load i8, i8* %164, align 1
  %166 = getelementptr inbounds i8, i8* %122, i64 14
  store i8 %165, i8* %166, align 1
  %167 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %0, i64 0, i32 6, i64 15
  %168 = load i8, i8* %167, align 1
  %169 = getelementptr inbounds i8, i8* %122, i64 15
  store i8 %168, i8* %169, align 1
  br label %171

170:                                              ; preds = %95
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %122, i8* nonnull align 1 %103, i64 16, i1 false) #12
  br label %171

171:                                              ; preds = %123, %170
  %172 = load %"class.mojo::Message"*, %"class.mojo::Message"** %5, align 8
  %173 = load i64, i64* %9, align 8
  %174 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %172, i64 0, i32 1, i32 2
  %175 = load i8*, i8** %174, align 8
  %176 = getelementptr inbounds i8, i8* %175, i64 %173
  %177 = getelementptr inbounds i8, i8* %176, i64 40
  %178 = icmp eq i64 %112, -1
  br i1 %178, label %183, label %179

179:                                              ; preds = %171
  %180 = load i8*, i8** %113, align 8
  %181 = getelementptr inbounds i8, i8* %180, i64 %112
  %182 = bitcast i8* %181 to %"class.mojo::internal::Array_Data.111"*
  br label %183

183:                                              ; preds = %171, %179
  %184 = phi %"class.mojo::internal::Array_Data.111"* [ %182, %179 ], [ null, %171 ]
  %185 = bitcast i8* %177 to i64*
  %186 = icmp eq %"class.mojo::internal::Array_Data.111"* %184, null
  %187 = ptrtoint %"class.mojo::internal::Array_Data.111"* %184 to i64
  %188 = ptrtoint i8* %177 to i64
  %189 = sub i64 %187, %188
  %190 = select i1 %186, i64 0, i64 %189
  store i64 %190, i64* %185, align 8
  %191 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %0, i64 0, i32 7
  %192 = bitcast %"class.mojo::internal::MessageFragment.112"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %192) #12
  %193 = getelementptr inbounds %"class.mojo::internal::MessageFragment.112", %"class.mojo::internal::MessageFragment.112"* %4, i64 0, i32 1
  %194 = bitcast %"class.mojo::internal::MessageFragment.103"* %1 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = bitcast %"class.mojo::internal::MessageFragment.112"* %4 to i64*
  store i64 %195, i64* %196, align 8
  store i64 -1, i64* %193, align 8
  call void @_ZN4mojo8internal10SerializerIN3gpu5mojom30VkPhysicalDeviceLimitsDataViewEK22VkPhysicalDeviceLimitsE9SerializeERS6_RNS0_15MessageFragmentINS3_8internal27VkPhysicalDeviceLimits_DataEEE(%struct.VkPhysicalDeviceLimits* dereferenceable(504) %191, %"class.mojo::internal::MessageFragment.112"* nonnull dereferenceable(16) %4) #12
  %197 = load %"class.mojo::Message"*, %"class.mojo::Message"** %5, align 8
  %198 = load i64, i64* %9, align 8
  %199 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %197, i64 0, i32 1, i32 2
  %200 = load i8*, i8** %199, align 8
  %201 = getelementptr inbounds i8, i8* %200, i64 %198
  %202 = getelementptr inbounds i8, i8* %201, i64 48
  %203 = load i64, i64* %193, align 8
  %204 = icmp eq i64 %203, -1
  br i1 %204, label %212, label %205

205:                                              ; preds = %183
  %206 = getelementptr inbounds %"class.mojo::internal::MessageFragment.112", %"class.mojo::internal::MessageFragment.112"* %4, i64 0, i32 0
  %207 = load %"class.mojo::Message"*, %"class.mojo::Message"** %206, align 8
  %208 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %207, i64 0, i32 1, i32 2
  %209 = load i8*, i8** %208, align 8
  %210 = getelementptr inbounds i8, i8* %209, i64 %203
  %211 = bitcast i8* %210 to %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"*
  br label %212

212:                                              ; preds = %183, %205
  %213 = phi %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* [ %211, %205 ], [ null, %183 ]
  %214 = bitcast i8* %202 to i64*
  %215 = icmp eq %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %213, null
  %216 = ptrtoint %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %213 to i64
  %217 = ptrtoint i8* %202 to i64
  %218 = sub i64 %216, %217
  %219 = select i1 %215, i64 0, i64 %218
  store i64 %219, i64* %214, align 8
  %220 = load %"class.mojo::Message"*, %"class.mojo::Message"** %5, align 8
  %221 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %220, i64 0, i32 1
  %222 = call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %221, i64 16) #12
  %223 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %220, i64 0, i32 1, i32 2
  %224 = load i8*, i8** %223, align 8
  %225 = getelementptr inbounds i8, i8* %224, i64 %222
  %226 = bitcast i8* %225 to %"class.gpu::mojom::internal::VkPhysicalDeviceSparseProperties_Data"*
  call void @_ZN3gpu5mojom8internal37VkPhysicalDeviceSparseProperties_DataC1Ev(%"class.gpu::mojom::internal::VkPhysicalDeviceSparseProperties_Data"* %226) #12
  %227 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %0, i64 0, i32 8, i32 0
  %228 = load i32, i32* %227, align 4
  %229 = icmp ne i32 %228, 0
  %230 = zext i1 %229 to i8
  %231 = load i8*, i8** %223, align 8
  %232 = getelementptr inbounds i8, i8* %231, i64 %222
  %233 = getelementptr inbounds i8, i8* %232, i64 8
  %234 = load i8, i8* %233, align 1
  %235 = and i8 %234, -2
  %236 = or i8 %235, %230
  store i8 %236, i8* %233, align 1
  %237 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %0, i64 0, i32 8, i32 1
  %238 = load i32, i32* %237, align 4
  %239 = icmp ne i32 %238, 0
  %240 = zext i1 %239 to i8
  %241 = load i8*, i8** %223, align 8
  %242 = getelementptr inbounds i8, i8* %241, i64 %222
  %243 = getelementptr inbounds i8, i8* %242, i64 8
  %244 = load i8, i8* %243, align 1
  %245 = shl nuw nsw i8 %240, 1
  %246 = and i8 %244, -3
  %247 = or i8 %246, %245
  store i8 %247, i8* %243, align 1
  %248 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %0, i64 0, i32 8, i32 2
  %249 = load i32, i32* %248, align 4
  %250 = icmp ne i32 %249, 0
  %251 = zext i1 %250 to i8
  %252 = load i8*, i8** %223, align 8
  %253 = getelementptr inbounds i8, i8* %252, i64 %222
  %254 = getelementptr inbounds i8, i8* %253, i64 8
  %255 = load i8, i8* %254, align 1
  %256 = shl nuw nsw i8 %251, 2
  %257 = and i8 %255, -5
  %258 = or i8 %257, %256
  store i8 %258, i8* %254, align 1
  %259 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %0, i64 0, i32 8, i32 3
  %260 = load i32, i32* %259, align 4
  %261 = icmp ne i32 %260, 0
  %262 = zext i1 %261 to i8
  %263 = load i8*, i8** %223, align 8
  %264 = getelementptr inbounds i8, i8* %263, i64 %222
  %265 = getelementptr inbounds i8, i8* %264, i64 8
  %266 = load i8, i8* %265, align 1
  %267 = shl nuw nsw i8 %262, 3
  %268 = and i8 %266, -9
  %269 = or i8 %268, %267
  store i8 %269, i8* %265, align 1
  %270 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %0, i64 0, i32 8, i32 4
  %271 = load i32, i32* %270, align 4
  %272 = icmp ne i32 %271, 0
  %273 = zext i1 %272 to i8
  %274 = load i8*, i8** %223, align 8
  %275 = getelementptr inbounds i8, i8* %274, i64 %222
  %276 = getelementptr inbounds i8, i8* %275, i64 8
  %277 = load i8, i8* %276, align 1
  %278 = shl nuw nsw i8 %273, 4
  %279 = and i8 %277, -17
  %280 = or i8 %279, %278
  store i8 %280, i8* %276, align 1
  %281 = load %"class.mojo::Message"*, %"class.mojo::Message"** %5, align 8
  %282 = load i64, i64* %9, align 8
  %283 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %281, i64 0, i32 1, i32 2
  %284 = load i8*, i8** %283, align 8
  %285 = getelementptr inbounds i8, i8* %284, i64 %282
  %286 = getelementptr inbounds i8, i8* %285, i64 56
  %287 = icmp eq i64 %222, -1
  br i1 %287, label %292, label %288

288:                                              ; preds = %212
  %289 = load i8*, i8** %223, align 8
  %290 = getelementptr inbounds i8, i8* %289, i64 %222
  %291 = bitcast i8* %290 to %"class.gpu::mojom::internal::VkPhysicalDeviceSparseProperties_Data"*
  br label %292

292:                                              ; preds = %288, %212
  %293 = phi %"class.gpu::mojom::internal::VkPhysicalDeviceSparseProperties_Data"* [ %291, %288 ], [ null, %212 ]
  %294 = bitcast i8* %286 to i64*
  %295 = icmp eq %"class.gpu::mojom::internal::VkPhysicalDeviceSparseProperties_Data"* %293, null
  %296 = ptrtoint %"class.gpu::mojom::internal::VkPhysicalDeviceSparseProperties_Data"* %293 to i64
  %297 = ptrtoint i8* %286 to i64
  %298 = sub i64 %296, %297
  %299 = select i1 %295, i64 0, i64 %298
  store i64 %299, i64* %294, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %192) #12
  call void @_ZN4mojo8internal23ContainerValidateParamsD2Ev(%"class.mojo::internal::ContainerValidateParams"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %105) #12
  ret void
}

declare void @_ZN3gpu5mojom8internal31VkPhysicalDeviceProperties_DataC1Ev(%"class.gpu::mojom::internal::VkPhysicalDeviceProperties_Data"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal10SerializerIN3gpu5mojom30VkPhysicalDeviceLimitsDataViewEK22VkPhysicalDeviceLimitsE9SerializeERS6_RNS0_15MessageFragmentINS3_8internal27VkPhysicalDeviceLimits_DataEEE(%struct.VkPhysicalDeviceLimits* dereferenceable(504), %"class.mojo::internal::MessageFragment.112"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.mojo::internal::ContainerValidateParams", align 8
  %4 = alloca %"class.mojo::internal::ContainerValidateParams", align 8
  %5 = alloca %"class.mojo::internal::ContainerValidateParams", align 8
  %6 = alloca %"class.mojo::internal::ContainerValidateParams", align 8
  %7 = alloca %"class.mojo::internal::ContainerValidateParams", align 8
  %8 = alloca %"class.mojo::internal::ContainerValidateParams", align 8
  %9 = getelementptr inbounds %"class.mojo::internal::MessageFragment.112", %"class.mojo::internal::MessageFragment.112"* %1, i64 0, i32 0
  %10 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %11 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %10, i64 0, i32 1
  %12 = tail call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %11, i64 488) #12
  %13 = getelementptr inbounds %"class.mojo::internal::MessageFragment.112", %"class.mojo::internal::MessageFragment.112"* %1, i64 0, i32 1
  store i64 %12, i64* %13, align 8
  %14 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %15 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %14, i64 0, i32 1, i32 2
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 %12
  %18 = bitcast i8* %17 to %"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"*
  tail call void @_ZN3gpu5mojom8internal27VkPhysicalDeviceLimits_DataC1Ev(%"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"* %18) #12
  %19 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %22 = load i64, i64* %13, align 8
  %23 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %21, i64 0, i32 1, i32 2
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds i8, i8* %24, i64 %22
  %26 = getelementptr inbounds i8, i8* %25, i64 8
  %27 = bitcast i8* %26 to i32*
  store i32 %20, i32* %27, align 1
  %28 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %31 = load i64, i64* %13, align 8
  %32 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %30, i64 0, i32 1, i32 2
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  %35 = getelementptr inbounds i8, i8* %34, i64 12
  %36 = bitcast i8* %35 to i32*
  store i32 %29, i32* %36, align 1
  %37 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 2
  %38 = load i32, i32* %37, align 8
  %39 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %40 = load i64, i64* %13, align 8
  %41 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %39, i64 0, i32 1, i32 2
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds i8, i8* %42, i64 %40
  %44 = getelementptr inbounds i8, i8* %43, i64 16
  %45 = bitcast i8* %44 to i32*
  store i32 %38, i32* %45, align 1
  %46 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 3
  %47 = load i32, i32* %46, align 4
  %48 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %49 = load i64, i64* %13, align 8
  %50 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %48, i64 0, i32 1, i32 2
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 %49
  %53 = getelementptr inbounds i8, i8* %52, i64 20
  %54 = bitcast i8* %53 to i32*
  store i32 %47, i32* %54, align 1
  %55 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 4
  %56 = load i32, i32* %55, align 8
  %57 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %58 = load i64, i64* %13, align 8
  %59 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %57, i64 0, i32 1, i32 2
  %60 = load i8*, i8** %59, align 8
  %61 = getelementptr inbounds i8, i8* %60, i64 %58
  %62 = getelementptr inbounds i8, i8* %61, i64 24
  %63 = bitcast i8* %62 to i32*
  store i32 %56, i32* %63, align 1
  %64 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 5
  %65 = load i32, i32* %64, align 4
  %66 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %67 = load i64, i64* %13, align 8
  %68 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %66, i64 0, i32 1, i32 2
  %69 = load i8*, i8** %68, align 8
  %70 = getelementptr inbounds i8, i8* %69, i64 %67
  %71 = getelementptr inbounds i8, i8* %70, i64 28
  %72 = bitcast i8* %71 to i32*
  store i32 %65, i32* %72, align 1
  %73 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 6
  %74 = load i32, i32* %73, align 8
  %75 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %76 = load i64, i64* %13, align 8
  %77 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %75, i64 0, i32 1, i32 2
  %78 = load i8*, i8** %77, align 8
  %79 = getelementptr inbounds i8, i8* %78, i64 %76
  %80 = getelementptr inbounds i8, i8* %79, i64 32
  %81 = bitcast i8* %80 to i32*
  store i32 %74, i32* %81, align 1
  %82 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 7
  %83 = load i32, i32* %82, align 4
  %84 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %85 = load i64, i64* %13, align 8
  %86 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %84, i64 0, i32 1, i32 2
  %87 = load i8*, i8** %86, align 8
  %88 = getelementptr inbounds i8, i8* %87, i64 %85
  %89 = getelementptr inbounds i8, i8* %88, i64 36
  %90 = bitcast i8* %89 to i32*
  store i32 %83, i32* %90, align 1
  %91 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 8
  %92 = load i32, i32* %91, align 8
  %93 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %94 = load i64, i64* %13, align 8
  %95 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %93, i64 0, i32 1, i32 2
  %96 = load i8*, i8** %95, align 8
  %97 = getelementptr inbounds i8, i8* %96, i64 %94
  %98 = getelementptr inbounds i8, i8* %97, i64 40
  %99 = bitcast i8* %98 to i32*
  store i32 %92, i32* %99, align 1
  %100 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 9
  %101 = load i32, i32* %100, align 4
  %102 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %103 = load i64, i64* %13, align 8
  %104 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %102, i64 0, i32 1, i32 2
  %105 = load i8*, i8** %104, align 8
  %106 = getelementptr inbounds i8, i8* %105, i64 %103
  %107 = getelementptr inbounds i8, i8* %106, i64 44
  %108 = bitcast i8* %107 to i32*
  store i32 %101, i32* %108, align 1
  %109 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 10
  %110 = load i32, i32* %109, align 8
  %111 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %112 = load i64, i64* %13, align 8
  %113 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %111, i64 0, i32 1, i32 2
  %114 = load i8*, i8** %113, align 8
  %115 = getelementptr inbounds i8, i8* %114, i64 %112
  %116 = getelementptr inbounds i8, i8* %115, i64 48
  %117 = bitcast i8* %116 to i32*
  store i32 %110, i32* %117, align 1
  %118 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 11
  %119 = load i64, i64* %118, align 8
  %120 = icmp ne i64 %119, 0
  %121 = zext i1 %120 to i64
  %122 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %123 = load i64, i64* %13, align 8
  %124 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %122, i64 0, i32 1, i32 2
  %125 = load i8*, i8** %124, align 8
  %126 = getelementptr inbounds i8, i8* %125, i64 %123
  %127 = getelementptr inbounds i8, i8* %126, i64 56
  %128 = bitcast i8* %127 to i64*
  store i64 %121, i64* %128, align 1
  %129 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 12
  %130 = load i64, i64* %129, align 8
  %131 = icmp ne i64 %130, 0
  %132 = zext i1 %131 to i64
  %133 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %134 = load i64, i64* %13, align 8
  %135 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %133, i64 0, i32 1, i32 2
  %136 = load i8*, i8** %135, align 8
  %137 = getelementptr inbounds i8, i8* %136, i64 %134
  %138 = getelementptr inbounds i8, i8* %137, i64 64
  %139 = bitcast i8* %138 to i64*
  store i64 %132, i64* %139, align 1
  %140 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 13
  %141 = load i32, i32* %140, align 8
  %142 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %143 = load i64, i64* %13, align 8
  %144 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %142, i64 0, i32 1, i32 2
  %145 = load i8*, i8** %144, align 8
  %146 = getelementptr inbounds i8, i8* %145, i64 %143
  %147 = getelementptr inbounds i8, i8* %146, i64 52
  %148 = bitcast i8* %147 to i32*
  store i32 %141, i32* %148, align 1
  %149 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 14
  %150 = load i32, i32* %149, align 4
  %151 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %152 = load i64, i64* %13, align 8
  %153 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %151, i64 0, i32 1, i32 2
  %154 = load i8*, i8** %153, align 8
  %155 = getelementptr inbounds i8, i8* %154, i64 %152
  %156 = getelementptr inbounds i8, i8* %155, i64 72
  %157 = bitcast i8* %156 to i32*
  store i32 %150, i32* %157, align 1
  %158 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 15
  %159 = load i32, i32* %158, align 8
  %160 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %161 = load i64, i64* %13, align 8
  %162 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %160, i64 0, i32 1, i32 2
  %163 = load i8*, i8** %162, align 8
  %164 = getelementptr inbounds i8, i8* %163, i64 %161
  %165 = getelementptr inbounds i8, i8* %164, i64 76
  %166 = bitcast i8* %165 to i32*
  store i32 %159, i32* %166, align 1
  %167 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 16
  %168 = load i32, i32* %167, align 4
  %169 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %170 = load i64, i64* %13, align 8
  %171 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %169, i64 0, i32 1, i32 2
  %172 = load i8*, i8** %171, align 8
  %173 = getelementptr inbounds i8, i8* %172, i64 %170
  %174 = getelementptr inbounds i8, i8* %173, i64 80
  %175 = bitcast i8* %174 to i32*
  store i32 %168, i32* %175, align 1
  %176 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 17
  %177 = load i32, i32* %176, align 8
  %178 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %179 = load i64, i64* %13, align 8
  %180 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %178, i64 0, i32 1, i32 2
  %181 = load i8*, i8** %180, align 8
  %182 = getelementptr inbounds i8, i8* %181, i64 %179
  %183 = getelementptr inbounds i8, i8* %182, i64 84
  %184 = bitcast i8* %183 to i32*
  store i32 %177, i32* %184, align 1
  %185 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 18
  %186 = load i32, i32* %185, align 4
  %187 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %188 = load i64, i64* %13, align 8
  %189 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %187, i64 0, i32 1, i32 2
  %190 = load i8*, i8** %189, align 8
  %191 = getelementptr inbounds i8, i8* %190, i64 %188
  %192 = getelementptr inbounds i8, i8* %191, i64 88
  %193 = bitcast i8* %192 to i32*
  store i32 %186, i32* %193, align 1
  %194 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 19
  %195 = load i32, i32* %194, align 8
  %196 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %197 = load i64, i64* %13, align 8
  %198 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %196, i64 0, i32 1, i32 2
  %199 = load i8*, i8** %198, align 8
  %200 = getelementptr inbounds i8, i8* %199, i64 %197
  %201 = getelementptr inbounds i8, i8* %200, i64 92
  %202 = bitcast i8* %201 to i32*
  store i32 %195, i32* %202, align 1
  %203 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 20
  %204 = load i32, i32* %203, align 4
  %205 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %206 = load i64, i64* %13, align 8
  %207 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %205, i64 0, i32 1, i32 2
  %208 = load i8*, i8** %207, align 8
  %209 = getelementptr inbounds i8, i8* %208, i64 %206
  %210 = getelementptr inbounds i8, i8* %209, i64 96
  %211 = bitcast i8* %210 to i32*
  store i32 %204, i32* %211, align 1
  %212 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 21
  %213 = load i32, i32* %212, align 8
  %214 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %215 = load i64, i64* %13, align 8
  %216 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %214, i64 0, i32 1, i32 2
  %217 = load i8*, i8** %216, align 8
  %218 = getelementptr inbounds i8, i8* %217, i64 %215
  %219 = getelementptr inbounds i8, i8* %218, i64 100
  %220 = bitcast i8* %219 to i32*
  store i32 %213, i32* %220, align 1
  %221 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 22
  %222 = load i32, i32* %221, align 4
  %223 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %224 = load i64, i64* %13, align 8
  %225 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %223, i64 0, i32 1, i32 2
  %226 = load i8*, i8** %225, align 8
  %227 = getelementptr inbounds i8, i8* %226, i64 %224
  %228 = getelementptr inbounds i8, i8* %227, i64 104
  %229 = bitcast i8* %228 to i32*
  store i32 %222, i32* %229, align 1
  %230 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 23
  %231 = load i32, i32* %230, align 8
  %232 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %233 = load i64, i64* %13, align 8
  %234 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %232, i64 0, i32 1, i32 2
  %235 = load i8*, i8** %234, align 8
  %236 = getelementptr inbounds i8, i8* %235, i64 %233
  %237 = getelementptr inbounds i8, i8* %236, i64 108
  %238 = bitcast i8* %237 to i32*
  store i32 %231, i32* %238, align 1
  %239 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 24
  %240 = load i32, i32* %239, align 4
  %241 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %242 = load i64, i64* %13, align 8
  %243 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %241, i64 0, i32 1, i32 2
  %244 = load i8*, i8** %243, align 8
  %245 = getelementptr inbounds i8, i8* %244, i64 %242
  %246 = getelementptr inbounds i8, i8* %245, i64 112
  %247 = bitcast i8* %246 to i32*
  store i32 %240, i32* %247, align 1
  %248 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 25
  %249 = load i32, i32* %248, align 8
  %250 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %251 = load i64, i64* %13, align 8
  %252 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %250, i64 0, i32 1, i32 2
  %253 = load i8*, i8** %252, align 8
  %254 = getelementptr inbounds i8, i8* %253, i64 %251
  %255 = getelementptr inbounds i8, i8* %254, i64 116
  %256 = bitcast i8* %255 to i32*
  store i32 %249, i32* %256, align 1
  %257 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 26
  %258 = load i32, i32* %257, align 4
  %259 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %260 = load i64, i64* %13, align 8
  %261 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %259, i64 0, i32 1, i32 2
  %262 = load i8*, i8** %261, align 8
  %263 = getelementptr inbounds i8, i8* %262, i64 %260
  %264 = getelementptr inbounds i8, i8* %263, i64 120
  %265 = bitcast i8* %264 to i32*
  store i32 %258, i32* %265, align 1
  %266 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 27
  %267 = load i32, i32* %266, align 8
  %268 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %269 = load i64, i64* %13, align 8
  %270 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %268, i64 0, i32 1, i32 2
  %271 = load i8*, i8** %270, align 8
  %272 = getelementptr inbounds i8, i8* %271, i64 %269
  %273 = getelementptr inbounds i8, i8* %272, i64 124
  %274 = bitcast i8* %273 to i32*
  store i32 %267, i32* %274, align 1
  %275 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 28
  %276 = load i32, i32* %275, align 4
  %277 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %278 = load i64, i64* %13, align 8
  %279 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %277, i64 0, i32 1, i32 2
  %280 = load i8*, i8** %279, align 8
  %281 = getelementptr inbounds i8, i8* %280, i64 %278
  %282 = getelementptr inbounds i8, i8* %281, i64 128
  %283 = bitcast i8* %282 to i32*
  store i32 %276, i32* %283, align 1
  %284 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 29
  %285 = load i32, i32* %284, align 8
  %286 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %287 = load i64, i64* %13, align 8
  %288 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %286, i64 0, i32 1, i32 2
  %289 = load i8*, i8** %288, align 8
  %290 = getelementptr inbounds i8, i8* %289, i64 %287
  %291 = getelementptr inbounds i8, i8* %290, i64 132
  %292 = bitcast i8* %291 to i32*
  store i32 %285, i32* %292, align 1
  %293 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 30
  %294 = load i32, i32* %293, align 4
  %295 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %296 = load i64, i64* %13, align 8
  %297 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %295, i64 0, i32 1, i32 2
  %298 = load i8*, i8** %297, align 8
  %299 = getelementptr inbounds i8, i8* %298, i64 %296
  %300 = getelementptr inbounds i8, i8* %299, i64 136
  %301 = bitcast i8* %300 to i32*
  store i32 %294, i32* %301, align 1
  %302 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 31
  %303 = load i32, i32* %302, align 8
  %304 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %305 = load i64, i64* %13, align 8
  %306 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %304, i64 0, i32 1, i32 2
  %307 = load i8*, i8** %306, align 8
  %308 = getelementptr inbounds i8, i8* %307, i64 %305
  %309 = getelementptr inbounds i8, i8* %308, i64 140
  %310 = bitcast i8* %309 to i32*
  store i32 %303, i32* %310, align 1
  %311 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 32
  %312 = load i32, i32* %311, align 4
  %313 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %314 = load i64, i64* %13, align 8
  %315 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %313, i64 0, i32 1, i32 2
  %316 = load i8*, i8** %315, align 8
  %317 = getelementptr inbounds i8, i8* %316, i64 %314
  %318 = getelementptr inbounds i8, i8* %317, i64 144
  %319 = bitcast i8* %318 to i32*
  store i32 %312, i32* %319, align 1
  %320 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 33
  %321 = load i32, i32* %320, align 8
  %322 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %323 = load i64, i64* %13, align 8
  %324 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %322, i64 0, i32 1, i32 2
  %325 = load i8*, i8** %324, align 8
  %326 = getelementptr inbounds i8, i8* %325, i64 %323
  %327 = getelementptr inbounds i8, i8* %326, i64 148
  %328 = bitcast i8* %327 to i32*
  store i32 %321, i32* %328, align 1
  %329 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 34
  %330 = load i32, i32* %329, align 4
  %331 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %332 = load i64, i64* %13, align 8
  %333 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %331, i64 0, i32 1, i32 2
  %334 = load i8*, i8** %333, align 8
  %335 = getelementptr inbounds i8, i8* %334, i64 %332
  %336 = getelementptr inbounds i8, i8* %335, i64 152
  %337 = bitcast i8* %336 to i32*
  store i32 %330, i32* %337, align 1
  %338 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 35
  %339 = load i32, i32* %338, align 8
  %340 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %341 = load i64, i64* %13, align 8
  %342 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %340, i64 0, i32 1, i32 2
  %343 = load i8*, i8** %342, align 8
  %344 = getelementptr inbounds i8, i8* %343, i64 %341
  %345 = getelementptr inbounds i8, i8* %344, i64 156
  %346 = bitcast i8* %345 to i32*
  store i32 %339, i32* %346, align 1
  %347 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 36
  %348 = load i32, i32* %347, align 4
  %349 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %350 = load i64, i64* %13, align 8
  %351 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %349, i64 0, i32 1, i32 2
  %352 = load i8*, i8** %351, align 8
  %353 = getelementptr inbounds i8, i8* %352, i64 %350
  %354 = getelementptr inbounds i8, i8* %353, i64 160
  %355 = bitcast i8* %354 to i32*
  store i32 %348, i32* %355, align 1
  %356 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 37
  %357 = load i32, i32* %356, align 8
  %358 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %359 = load i64, i64* %13, align 8
  %360 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %358, i64 0, i32 1, i32 2
  %361 = load i8*, i8** %360, align 8
  %362 = getelementptr inbounds i8, i8* %361, i64 %359
  %363 = getelementptr inbounds i8, i8* %362, i64 164
  %364 = bitcast i8* %363 to i32*
  store i32 %357, i32* %364, align 1
  %365 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 38
  %366 = load i32, i32* %365, align 4
  %367 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %368 = load i64, i64* %13, align 8
  %369 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %367, i64 0, i32 1, i32 2
  %370 = load i8*, i8** %369, align 8
  %371 = getelementptr inbounds i8, i8* %370, i64 %368
  %372 = getelementptr inbounds i8, i8* %371, i64 168
  %373 = bitcast i8* %372 to i32*
  store i32 %366, i32* %373, align 1
  %374 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 39
  %375 = load i32, i32* %374, align 8
  %376 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %377 = load i64, i64* %13, align 8
  %378 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %376, i64 0, i32 1, i32 2
  %379 = load i8*, i8** %378, align 8
  %380 = getelementptr inbounds i8, i8* %379, i64 %377
  %381 = getelementptr inbounds i8, i8* %380, i64 172
  %382 = bitcast i8* %381 to i32*
  store i32 %375, i32* %382, align 1
  %383 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 40
  %384 = load i32, i32* %383, align 4
  %385 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %386 = load i64, i64* %13, align 8
  %387 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %385, i64 0, i32 1, i32 2
  %388 = load i8*, i8** %387, align 8
  %389 = getelementptr inbounds i8, i8* %388, i64 %386
  %390 = getelementptr inbounds i8, i8* %389, i64 176
  %391 = bitcast i8* %390 to i32*
  store i32 %384, i32* %391, align 1
  %392 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 41
  %393 = load i32, i32* %392, align 8
  %394 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %395 = load i64, i64* %13, align 8
  %396 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %394, i64 0, i32 1, i32 2
  %397 = load i8*, i8** %396, align 8
  %398 = getelementptr inbounds i8, i8* %397, i64 %395
  %399 = getelementptr inbounds i8, i8* %398, i64 180
  %400 = bitcast i8* %399 to i32*
  store i32 %393, i32* %400, align 1
  %401 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 42
  %402 = load i32, i32* %401, align 4
  %403 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %404 = load i64, i64* %13, align 8
  %405 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %403, i64 0, i32 1, i32 2
  %406 = load i8*, i8** %405, align 8
  %407 = getelementptr inbounds i8, i8* %406, i64 %404
  %408 = getelementptr inbounds i8, i8* %407, i64 184
  %409 = bitcast i8* %408 to i32*
  store i32 %402, i32* %409, align 1
  %410 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 43
  %411 = load i32, i32* %410, align 8
  %412 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %413 = load i64, i64* %13, align 8
  %414 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %412, i64 0, i32 1, i32 2
  %415 = load i8*, i8** %414, align 8
  %416 = getelementptr inbounds i8, i8* %415, i64 %413
  %417 = getelementptr inbounds i8, i8* %416, i64 188
  %418 = bitcast i8* %417 to i32*
  store i32 %411, i32* %418, align 1
  %419 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 44
  %420 = load i32, i32* %419, align 4
  %421 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %422 = load i64, i64* %13, align 8
  %423 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %421, i64 0, i32 1, i32 2
  %424 = load i8*, i8** %423, align 8
  %425 = getelementptr inbounds i8, i8* %424, i64 %422
  %426 = getelementptr inbounds i8, i8* %425, i64 192
  %427 = bitcast i8* %426 to i32*
  store i32 %420, i32* %427, align 1
  %428 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 45
  %429 = load i32, i32* %428, align 8
  %430 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %431 = load i64, i64* %13, align 8
  %432 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %430, i64 0, i32 1, i32 2
  %433 = load i8*, i8** %432, align 8
  %434 = getelementptr inbounds i8, i8* %433, i64 %431
  %435 = getelementptr inbounds i8, i8* %434, i64 196
  %436 = bitcast i8* %435 to i32*
  store i32 %429, i32* %436, align 1
  %437 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 46
  %438 = load i32, i32* %437, align 4
  %439 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %440 = load i64, i64* %13, align 8
  %441 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %439, i64 0, i32 1, i32 2
  %442 = load i8*, i8** %441, align 8
  %443 = getelementptr inbounds i8, i8* %442, i64 %440
  %444 = getelementptr inbounds i8, i8* %443, i64 200
  %445 = bitcast i8* %444 to i32*
  store i32 %438, i32* %445, align 1
  %446 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 47
  %447 = load i32, i32* %446, align 8
  %448 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %449 = load i64, i64* %13, align 8
  %450 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %448, i64 0, i32 1, i32 2
  %451 = load i8*, i8** %450, align 8
  %452 = getelementptr inbounds i8, i8* %451, i64 %449
  %453 = getelementptr inbounds i8, i8* %452, i64 204
  %454 = bitcast i8* %453 to i32*
  store i32 %447, i32* %454, align 1
  %455 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 48
  %456 = load i32, i32* %455, align 4
  %457 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %458 = load i64, i64* %13, align 8
  %459 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %457, i64 0, i32 1, i32 2
  %460 = load i8*, i8** %459, align 8
  %461 = getelementptr inbounds i8, i8* %460, i64 %458
  %462 = getelementptr inbounds i8, i8* %461, i64 208
  %463 = bitcast i8* %462 to i32*
  store i32 %456, i32* %463, align 1
  %464 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 49
  %465 = load i32, i32* %464, align 8
  %466 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %467 = load i64, i64* %13, align 8
  %468 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %466, i64 0, i32 1, i32 2
  %469 = load i8*, i8** %468, align 8
  %470 = getelementptr inbounds i8, i8* %469, i64 %467
  %471 = getelementptr inbounds i8, i8* %470, i64 212
  %472 = bitcast i8* %471 to i32*
  store i32 %465, i32* %472, align 1
  %473 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 50
  %474 = load i32, i32* %473, align 4
  %475 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %476 = load i64, i64* %13, align 8
  %477 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %475, i64 0, i32 1, i32 2
  %478 = load i8*, i8** %477, align 8
  %479 = getelementptr inbounds i8, i8* %478, i64 %476
  %480 = getelementptr inbounds i8, i8* %479, i64 216
  %481 = bitcast i8* %480 to i32*
  store i32 %474, i32* %481, align 1
  %482 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 51
  %483 = load i32, i32* %482, align 8
  %484 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %485 = load i64, i64* %13, align 8
  %486 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %484, i64 0, i32 1, i32 2
  %487 = load i8*, i8** %486, align 8
  %488 = getelementptr inbounds i8, i8* %487, i64 %485
  %489 = getelementptr inbounds i8, i8* %488, i64 220
  %490 = bitcast i8* %489 to i32*
  store i32 %483, i32* %490, align 1
  %491 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 52, i64 0
  %492 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %493 = bitcast %"class.mojo::internal::ContainerValidateParams"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %493) #12
  %494 = bitcast %"class.mojo::internal::ContainerValidateParams"* %3 to i64*
  store i64 -6148914691236517206, i64* %494, align 8
  %495 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %3, i64 0, i32 0
  store i32 3, i32* %495, align 8
  %496 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %3, i64 0, i32 1
  store i8 0, i8* %496, align 4
  %497 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %3, i64 0, i32 2
  %498 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %492, i64 0, i32 1
  %499 = bitcast %"class.mojo::internal::ContainerValidateParams"** %497 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %499, i8 0, i64 24, i1 false)
  %500 = tail call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %498, i64 20) #12
  %501 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %492, i64 0, i32 1, i32 2
  %502 = load i8*, i8** %501, align 8
  %503 = getelementptr inbounds i8, i8* %502, i64 %500
  %504 = bitcast i8* %503 to i32*
  store i32 20, i32* %504, align 1
  %505 = getelementptr inbounds i8, i8* %503, i64 4
  %506 = bitcast i8* %505 to i32*
  store i32 3, i32* %506, align 1
  %507 = load i8*, i8** %501, align 8
  %508 = getelementptr inbounds i8, i8* %507, i64 %500
  %509 = icmp eq i32* %491, null
  %510 = getelementptr inbounds i8, i8* %508, i64 8
  br i1 %509, label %511, label %522

511:                                              ; preds = %2
  %512 = bitcast i8* %510 to i32*
  %513 = load i32, i32* null, align 536870912
  store i32 %513, i32* %512, align 4
  %514 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 52, i64 1
  %515 = load i32, i32* %514, align 4
  %516 = getelementptr inbounds i8, i8* %510, i64 4
  %517 = bitcast i8* %516 to i32*
  store i32 %515, i32* %517, align 4
  %518 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 52, i64 2
  %519 = load i32, i32* %518, align 4
  %520 = getelementptr inbounds i8, i8* %510, i64 8
  %521 = bitcast i8* %520 to i32*
  store i32 %519, i32* %521, align 4
  br label %524

522:                                              ; preds = %2
  %523 = bitcast i32* %491 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %510, i8* nonnull align 4 %523, i64 12, i1 false) #12
  br label %524

524:                                              ; preds = %511, %522
  %525 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %526 = load i64, i64* %13, align 8
  %527 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %525, i64 0, i32 1, i32 2
  %528 = load i8*, i8** %527, align 8
  %529 = getelementptr inbounds i8, i8* %528, i64 %526
  %530 = getelementptr inbounds i8, i8* %529, i64 224
  %531 = icmp eq i64 %500, -1
  br i1 %531, label %536, label %532

532:                                              ; preds = %524
  %533 = load i8*, i8** %501, align 8
  %534 = getelementptr inbounds i8, i8* %533, i64 %500
  %535 = bitcast i8* %534 to %"class.mojo::internal::Array_Data.119"*
  br label %536

536:                                              ; preds = %524, %532
  %537 = phi %"class.mojo::internal::Array_Data.119"* [ %535, %532 ], [ null, %524 ]
  %538 = bitcast i8* %530 to i64*
  %539 = icmp eq %"class.mojo::internal::Array_Data.119"* %537, null
  %540 = ptrtoint %"class.mojo::internal::Array_Data.119"* %537 to i64
  %541 = ptrtoint i8* %530 to i64
  %542 = sub i64 %540, %541
  %543 = select i1 %539, i64 0, i64 %542
  store i64 %543, i64* %538, align 8
  %544 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 53
  %545 = load i32, i32* %544, align 8
  %546 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %547 = load i64, i64* %13, align 8
  %548 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %546, i64 0, i32 1, i32 2
  %549 = load i8*, i8** %548, align 8
  %550 = getelementptr inbounds i8, i8* %549, i64 %547
  %551 = getelementptr inbounds i8, i8* %550, i64 232
  %552 = bitcast i8* %551 to i32*
  store i32 %545, i32* %552, align 1
  %553 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 54, i64 0
  %554 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %555 = bitcast %"class.mojo::internal::ContainerValidateParams"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %555) #12
  %556 = bitcast %"class.mojo::internal::ContainerValidateParams"* %4 to i64*
  store i64 -6148914691236517206, i64* %556, align 8
  %557 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %4, i64 0, i32 0
  store i32 3, i32* %557, align 8
  %558 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %4, i64 0, i32 1
  store i8 0, i8* %558, align 4
  %559 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %4, i64 0, i32 2
  %560 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %554, i64 0, i32 1
  %561 = bitcast %"class.mojo::internal::ContainerValidateParams"** %559 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %561, i8 0, i64 24, i1 false)
  %562 = tail call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %560, i64 20) #12
  %563 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %554, i64 0, i32 1, i32 2
  %564 = load i8*, i8** %563, align 8
  %565 = getelementptr inbounds i8, i8* %564, i64 %562
  %566 = bitcast i8* %565 to i32*
  store i32 20, i32* %566, align 1
  %567 = getelementptr inbounds i8, i8* %565, i64 4
  %568 = bitcast i8* %567 to i32*
  store i32 3, i32* %568, align 1
  %569 = load i8*, i8** %563, align 8
  %570 = getelementptr inbounds i8, i8* %569, i64 %562
  %571 = icmp eq i32* %553, null
  %572 = getelementptr inbounds i8, i8* %570, i64 8
  br i1 %571, label %573, label %584

573:                                              ; preds = %536
  %574 = bitcast i8* %572 to i32*
  %575 = load i32, i32* null, align 536870912
  store i32 %575, i32* %574, align 4
  %576 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 54, i64 1
  %577 = load i32, i32* %576, align 4
  %578 = getelementptr inbounds i8, i8* %572, i64 4
  %579 = bitcast i8* %578 to i32*
  store i32 %577, i32* %579, align 4
  %580 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 54, i64 2
  %581 = load i32, i32* %580, align 4
  %582 = getelementptr inbounds i8, i8* %572, i64 8
  %583 = bitcast i8* %582 to i32*
  store i32 %581, i32* %583, align 4
  br label %586

584:                                              ; preds = %536
  %585 = bitcast i32* %553 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %572, i8* nonnull align 4 %585, i64 12, i1 false) #12
  br label %586

586:                                              ; preds = %573, %584
  %587 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %588 = load i64, i64* %13, align 8
  %589 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %587, i64 0, i32 1, i32 2
  %590 = load i8*, i8** %589, align 8
  %591 = getelementptr inbounds i8, i8* %590, i64 %588
  %592 = getelementptr inbounds i8, i8* %591, i64 240
  %593 = icmp eq i64 %562, -1
  br i1 %593, label %598, label %594

594:                                              ; preds = %586
  %595 = load i8*, i8** %563, align 8
  %596 = getelementptr inbounds i8, i8* %595, i64 %562
  %597 = bitcast i8* %596 to %"class.mojo::internal::Array_Data.119"*
  br label %598

598:                                              ; preds = %586, %594
  %599 = phi %"class.mojo::internal::Array_Data.119"* [ %597, %594 ], [ null, %586 ]
  %600 = bitcast i8* %592 to i64*
  %601 = icmp eq %"class.mojo::internal::Array_Data.119"* %599, null
  %602 = ptrtoint %"class.mojo::internal::Array_Data.119"* %599 to i64
  %603 = ptrtoint i8* %592 to i64
  %604 = sub i64 %602, %603
  %605 = select i1 %601, i64 0, i64 %604
  store i64 %605, i64* %600, align 8
  %606 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 55
  %607 = load i32, i32* %606, align 8
  %608 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %609 = load i64, i64* %13, align 8
  %610 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %608, i64 0, i32 1, i32 2
  %611 = load i8*, i8** %610, align 8
  %612 = getelementptr inbounds i8, i8* %611, i64 %609
  %613 = getelementptr inbounds i8, i8* %612, i64 236
  %614 = bitcast i8* %613 to i32*
  store i32 %607, i32* %614, align 1
  %615 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 56
  %616 = load i32, i32* %615, align 4
  %617 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %618 = load i64, i64* %13, align 8
  %619 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %617, i64 0, i32 1, i32 2
  %620 = load i8*, i8** %619, align 8
  %621 = getelementptr inbounds i8, i8* %620, i64 %618
  %622 = getelementptr inbounds i8, i8* %621, i64 248
  %623 = bitcast i8* %622 to i32*
  store i32 %616, i32* %623, align 1
  %624 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 57
  %625 = load i32, i32* %624, align 8
  %626 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %627 = load i64, i64* %13, align 8
  %628 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %626, i64 0, i32 1, i32 2
  %629 = load i8*, i8** %628, align 8
  %630 = getelementptr inbounds i8, i8* %629, i64 %627
  %631 = getelementptr inbounds i8, i8* %630, i64 252
  %632 = bitcast i8* %631 to i32*
  store i32 %625, i32* %632, align 1
  %633 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 58
  %634 = load i32, i32* %633, align 4
  %635 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %636 = load i64, i64* %13, align 8
  %637 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %635, i64 0, i32 1, i32 2
  %638 = load i8*, i8** %637, align 8
  %639 = getelementptr inbounds i8, i8* %638, i64 %636
  %640 = getelementptr inbounds i8, i8* %639, i64 256
  %641 = bitcast i8* %640 to i32*
  store i32 %634, i32* %641, align 1
  %642 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 59
  %643 = load i32, i32* %642, align 8
  %644 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %645 = load i64, i64* %13, align 8
  %646 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %644, i64 0, i32 1, i32 2
  %647 = load i8*, i8** %646, align 8
  %648 = getelementptr inbounds i8, i8* %647, i64 %645
  %649 = getelementptr inbounds i8, i8* %648, i64 260
  %650 = bitcast i8* %649 to i32*
  store i32 %643, i32* %650, align 1
  %651 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 60
  %652 = bitcast float* %651 to i32*
  %653 = load i32, i32* %652, align 4
  %654 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %655 = load i64, i64* %13, align 8
  %656 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %654, i64 0, i32 1, i32 2
  %657 = load i8*, i8** %656, align 8
  %658 = getelementptr inbounds i8, i8* %657, i64 %655
  %659 = getelementptr inbounds i8, i8* %658, i64 264
  %660 = bitcast i8* %659 to i32*
  store i32 %653, i32* %660, align 1
  %661 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 61
  %662 = bitcast float* %661 to i32*
  %663 = load i32, i32* %662, align 8
  %664 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %665 = load i64, i64* %13, align 8
  %666 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %664, i64 0, i32 1, i32 2
  %667 = load i8*, i8** %666, align 8
  %668 = getelementptr inbounds i8, i8* %667, i64 %665
  %669 = getelementptr inbounds i8, i8* %668, i64 268
  %670 = bitcast i8* %669 to i32*
  store i32 %663, i32* %670, align 1
  %671 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 62
  %672 = load i32, i32* %671, align 4
  %673 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %674 = load i64, i64* %13, align 8
  %675 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %673, i64 0, i32 1, i32 2
  %676 = load i8*, i8** %675, align 8
  %677 = getelementptr inbounds i8, i8* %676, i64 %674
  %678 = getelementptr inbounds i8, i8* %677, i64 272
  %679 = bitcast i8* %678 to i32*
  store i32 %672, i32* %679, align 1
  %680 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 63, i64 0
  %681 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %682 = bitcast %"class.mojo::internal::ContainerValidateParams"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %682) #12
  %683 = bitcast %"class.mojo::internal::ContainerValidateParams"* %5 to i64*
  store i64 -6148914691236517206, i64* %683, align 8
  %684 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %5, i64 0, i32 0
  store i32 2, i32* %684, align 8
  %685 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %5, i64 0, i32 1
  store i8 0, i8* %685, align 4
  %686 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %5, i64 0, i32 2
  %687 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %681, i64 0, i32 1
  %688 = bitcast %"class.mojo::internal::ContainerValidateParams"** %686 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %688, i8 0, i64 24, i1 false)
  %689 = tail call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %687, i64 16) #12
  %690 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %681, i64 0, i32 1, i32 2
  %691 = load i8*, i8** %690, align 8
  %692 = getelementptr inbounds i8, i8* %691, i64 %689
  %693 = bitcast i8* %692 to i32*
  store i32 16, i32* %693, align 1
  %694 = getelementptr inbounds i8, i8* %692, i64 4
  %695 = bitcast i8* %694 to i32*
  store i32 2, i32* %695, align 1
  %696 = load i8*, i8** %690, align 8
  %697 = getelementptr inbounds i8, i8* %696, i64 %689
  %698 = icmp eq i32* %680, null
  %699 = getelementptr inbounds i8, i8* %697, i64 8
  br i1 %698, label %700, label %707

700:                                              ; preds = %598
  %701 = bitcast i8* %699 to i32*
  %702 = load i32, i32* null, align 536870912
  store i32 %702, i32* %701, align 4
  %703 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 63, i64 1
  %704 = load i32, i32* %703, align 4
  %705 = getelementptr inbounds i8, i8* %699, i64 4
  %706 = bitcast i8* %705 to i32*
  store i32 %704, i32* %706, align 4
  br label %711

707:                                              ; preds = %598
  %708 = bitcast i32* %680 to i64*
  %709 = bitcast i8* %699 to i64*
  %710 = load i64, i64* %708, align 4
  store i64 %710, i64* %709, align 4
  br label %711

711:                                              ; preds = %700, %707
  %712 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %713 = load i64, i64* %13, align 8
  %714 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %712, i64 0, i32 1, i32 2
  %715 = load i8*, i8** %714, align 8
  %716 = getelementptr inbounds i8, i8* %715, i64 %713
  %717 = getelementptr inbounds i8, i8* %716, i64 280
  %718 = icmp eq i64 %689, -1
  br i1 %718, label %723, label %719

719:                                              ; preds = %711
  %720 = load i8*, i8** %690, align 8
  %721 = getelementptr inbounds i8, i8* %720, i64 %689
  %722 = bitcast i8* %721 to %"class.mojo::internal::Array_Data.119"*
  br label %723

723:                                              ; preds = %711, %719
  %724 = phi %"class.mojo::internal::Array_Data.119"* [ %722, %719 ], [ null, %711 ]
  %725 = bitcast i8* %717 to i64*
  %726 = icmp eq %"class.mojo::internal::Array_Data.119"* %724, null
  %727 = ptrtoint %"class.mojo::internal::Array_Data.119"* %724 to i64
  %728 = ptrtoint i8* %717 to i64
  %729 = sub i64 %727, %728
  %730 = select i1 %726, i64 0, i64 %729
  store i64 %730, i64* %725, align 8
  %731 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 64, i64 0
  %732 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %733 = bitcast %"class.mojo::internal::ContainerValidateParams"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %733) #12
  %734 = bitcast %"class.mojo::internal::ContainerValidateParams"* %6 to i64*
  store i64 -6148914691236517206, i64* %734, align 8
  %735 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %6, i64 0, i32 0
  store i32 2, i32* %735, align 8
  %736 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %6, i64 0, i32 1
  store i8 0, i8* %736, align 4
  %737 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %6, i64 0, i32 2
  %738 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %732, i64 0, i32 1
  %739 = bitcast %"class.mojo::internal::ContainerValidateParams"** %737 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %739, i8 0, i64 24, i1 false)
  %740 = tail call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %738, i64 16) #12
  %741 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %732, i64 0, i32 1, i32 2
  %742 = load i8*, i8** %741, align 8
  %743 = getelementptr inbounds i8, i8* %742, i64 %740
  %744 = bitcast i8* %743 to i32*
  store i32 16, i32* %744, align 1
  %745 = getelementptr inbounds i8, i8* %743, i64 4
  %746 = bitcast i8* %745 to i32*
  store i32 2, i32* %746, align 1
  %747 = load i8*, i8** %741, align 8
  %748 = getelementptr inbounds i8, i8* %747, i64 %740
  %749 = icmp eq float* %731, null
  %750 = getelementptr inbounds i8, i8* %748, i64 8
  br i1 %749, label %751, label %759

751:                                              ; preds = %723
  %752 = load i32, i32* null, align 536870912
  %753 = bitcast i8* %750 to i32*
  store i32 %752, i32* %753, align 4
  %754 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 64, i64 1
  %755 = bitcast float* %754 to i32*
  %756 = load i32, i32* %755, align 4
  %757 = getelementptr inbounds i8, i8* %750, i64 4
  %758 = bitcast i8* %757 to i32*
  store i32 %756, i32* %758, align 4
  br label %763

759:                                              ; preds = %723
  %760 = bitcast float* %731 to i64*
  %761 = bitcast i8* %750 to i64*
  %762 = load i64, i64* %760, align 4
  store i64 %762, i64* %761, align 4
  br label %763

763:                                              ; preds = %751, %759
  %764 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %765 = load i64, i64* %13, align 8
  %766 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %764, i64 0, i32 1, i32 2
  %767 = load i8*, i8** %766, align 8
  %768 = getelementptr inbounds i8, i8* %767, i64 %765
  %769 = getelementptr inbounds i8, i8* %768, i64 288
  %770 = icmp eq i64 %740, -1
  br i1 %770, label %775, label %771

771:                                              ; preds = %763
  %772 = load i8*, i8** %741, align 8
  %773 = getelementptr inbounds i8, i8* %772, i64 %740
  %774 = bitcast i8* %773 to %"class.mojo::internal::Array_Data.122"*
  br label %775

775:                                              ; preds = %763, %771
  %776 = phi %"class.mojo::internal::Array_Data.122"* [ %774, %771 ], [ null, %763 ]
  %777 = bitcast i8* %769 to i64*
  %778 = icmp eq %"class.mojo::internal::Array_Data.122"* %776, null
  %779 = ptrtoint %"class.mojo::internal::Array_Data.122"* %776 to i64
  %780 = ptrtoint i8* %769 to i64
  %781 = sub i64 %779, %780
  %782 = select i1 %778, i64 0, i64 %781
  store i64 %782, i64* %777, align 8
  %783 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 65
  %784 = load i32, i32* %783, align 8
  %785 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %786 = load i64, i64* %13, align 8
  %787 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %785, i64 0, i32 1, i32 2
  %788 = load i8*, i8** %787, align 8
  %789 = getelementptr inbounds i8, i8* %788, i64 %786
  %790 = getelementptr inbounds i8, i8* %789, i64 276
  %791 = bitcast i8* %790 to i32*
  store i32 %784, i32* %791, align 1
  %792 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 66
  %793 = load i64, i64* %792, align 8
  %794 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %795 = load i64, i64* %13, align 8
  %796 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %794, i64 0, i32 1, i32 2
  %797 = load i8*, i8** %796, align 8
  %798 = getelementptr inbounds i8, i8* %797, i64 %795
  %799 = getelementptr inbounds i8, i8* %798, i64 296
  %800 = bitcast i8* %799 to i64*
  store i64 %793, i64* %800, align 1
  %801 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 67
  %802 = load i64, i64* %801, align 8
  %803 = icmp ne i64 %802, 0
  %804 = zext i1 %803 to i64
  %805 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %806 = load i64, i64* %13, align 8
  %807 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %805, i64 0, i32 1, i32 2
  %808 = load i8*, i8** %807, align 8
  %809 = getelementptr inbounds i8, i8* %808, i64 %806
  %810 = getelementptr inbounds i8, i8* %809, i64 304
  %811 = bitcast i8* %810 to i64*
  store i64 %804, i64* %811, align 1
  %812 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 68
  %813 = load i64, i64* %812, align 8
  %814 = icmp ne i64 %813, 0
  %815 = zext i1 %814 to i64
  %816 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %817 = load i64, i64* %13, align 8
  %818 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %816, i64 0, i32 1, i32 2
  %819 = load i8*, i8** %818, align 8
  %820 = getelementptr inbounds i8, i8* %819, i64 %817
  %821 = getelementptr inbounds i8, i8* %820, i64 312
  %822 = bitcast i8* %821 to i64*
  store i64 %815, i64* %822, align 1
  %823 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 69
  %824 = load i64, i64* %823, align 8
  %825 = icmp ne i64 %824, 0
  %826 = zext i1 %825 to i64
  %827 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %828 = load i64, i64* %13, align 8
  %829 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %827, i64 0, i32 1, i32 2
  %830 = load i8*, i8** %829, align 8
  %831 = getelementptr inbounds i8, i8* %830, i64 %828
  %832 = getelementptr inbounds i8, i8* %831, i64 320
  %833 = bitcast i8* %832 to i64*
  store i64 %826, i64* %833, align 1
  %834 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 70
  %835 = load i32, i32* %834, align 8
  %836 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %837 = load i64, i64* %13, align 8
  %838 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %836, i64 0, i32 1, i32 2
  %839 = load i8*, i8** %838, align 8
  %840 = getelementptr inbounds i8, i8* %839, i64 %837
  %841 = getelementptr inbounds i8, i8* %840, i64 328
  %842 = bitcast i8* %841 to i32*
  store i32 %835, i32* %842, align 1
  %843 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 71
  %844 = load i32, i32* %843, align 4
  %845 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %846 = load i64, i64* %13, align 8
  %847 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %845, i64 0, i32 1, i32 2
  %848 = load i8*, i8** %847, align 8
  %849 = getelementptr inbounds i8, i8* %848, i64 %846
  %850 = getelementptr inbounds i8, i8* %849, i64 332
  %851 = bitcast i8* %850 to i32*
  store i32 %844, i32* %851, align 1
  %852 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 72
  %853 = load i32, i32* %852, align 8
  %854 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %855 = load i64, i64* %13, align 8
  %856 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %854, i64 0, i32 1, i32 2
  %857 = load i8*, i8** %856, align 8
  %858 = getelementptr inbounds i8, i8* %857, i64 %855
  %859 = getelementptr inbounds i8, i8* %858, i64 336
  %860 = bitcast i8* %859 to i32*
  store i32 %853, i32* %860, align 1
  %861 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 73
  %862 = load i32, i32* %861, align 4
  %863 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %864 = load i64, i64* %13, align 8
  %865 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %863, i64 0, i32 1, i32 2
  %866 = load i8*, i8** %865, align 8
  %867 = getelementptr inbounds i8, i8* %866, i64 %864
  %868 = getelementptr inbounds i8, i8* %867, i64 340
  %869 = bitcast i8* %868 to i32*
  store i32 %862, i32* %869, align 1
  %870 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 74
  %871 = bitcast float* %870 to i32*
  %872 = load i32, i32* %871, align 8
  %873 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %874 = load i64, i64* %13, align 8
  %875 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %873, i64 0, i32 1, i32 2
  %876 = load i8*, i8** %875, align 8
  %877 = getelementptr inbounds i8, i8* %876, i64 %874
  %878 = getelementptr inbounds i8, i8* %877, i64 344
  %879 = bitcast i8* %878 to i32*
  store i32 %872, i32* %879, align 1
  %880 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 75
  %881 = bitcast float* %880 to i32*
  %882 = load i32, i32* %881, align 4
  %883 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %884 = load i64, i64* %13, align 8
  %885 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %883, i64 0, i32 1, i32 2
  %886 = load i8*, i8** %885, align 8
  %887 = getelementptr inbounds i8, i8* %886, i64 %884
  %888 = getelementptr inbounds i8, i8* %887, i64 348
  %889 = bitcast i8* %888 to i32*
  store i32 %882, i32* %889, align 1
  %890 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 76
  %891 = load i32, i32* %890, align 8
  %892 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %893 = load i64, i64* %13, align 8
  %894 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %892, i64 0, i32 1, i32 2
  %895 = load i8*, i8** %894, align 8
  %896 = getelementptr inbounds i8, i8* %895, i64 %893
  %897 = getelementptr inbounds i8, i8* %896, i64 352
  %898 = bitcast i8* %897 to i32*
  store i32 %891, i32* %898, align 1
  %899 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 77
  %900 = load i32, i32* %899, align 4
  %901 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %902 = load i64, i64* %13, align 8
  %903 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %901, i64 0, i32 1, i32 2
  %904 = load i8*, i8** %903, align 8
  %905 = getelementptr inbounds i8, i8* %904, i64 %902
  %906 = getelementptr inbounds i8, i8* %905, i64 356
  %907 = bitcast i8* %906 to i32*
  store i32 %900, i32* %907, align 1
  %908 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 78
  %909 = load i32, i32* %908, align 8
  %910 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %911 = load i64, i64* %13, align 8
  %912 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %910, i64 0, i32 1, i32 2
  %913 = load i8*, i8** %912, align 8
  %914 = getelementptr inbounds i8, i8* %913, i64 %911
  %915 = getelementptr inbounds i8, i8* %914, i64 360
  %916 = bitcast i8* %915 to i32*
  store i32 %909, i32* %916, align 1
  %917 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 79
  %918 = load i32, i32* %917, align 4
  %919 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %920 = load i64, i64* %13, align 8
  %921 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %919, i64 0, i32 1, i32 2
  %922 = load i8*, i8** %921, align 8
  %923 = getelementptr inbounds i8, i8* %922, i64 %920
  %924 = getelementptr inbounds i8, i8* %923, i64 364
  %925 = bitcast i8* %924 to i32*
  store i32 %918, i32* %925, align 1
  %926 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 80
  %927 = load i32, i32* %926, align 8
  %928 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %929 = load i64, i64* %13, align 8
  %930 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %928, i64 0, i32 1, i32 2
  %931 = load i8*, i8** %930, align 8
  %932 = getelementptr inbounds i8, i8* %931, i64 %929
  %933 = getelementptr inbounds i8, i8* %932, i64 368
  %934 = bitcast i8* %933 to i32*
  store i32 %927, i32* %934, align 1
  %935 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 81
  %936 = load i32, i32* %935, align 4
  %937 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %938 = load i64, i64* %13, align 8
  %939 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %937, i64 0, i32 1, i32 2
  %940 = load i8*, i8** %939, align 8
  %941 = getelementptr inbounds i8, i8* %940, i64 %938
  %942 = getelementptr inbounds i8, i8* %941, i64 372
  %943 = bitcast i8* %942 to i32*
  store i32 %936, i32* %943, align 1
  %944 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 82
  %945 = load i32, i32* %944, align 8
  %946 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %947 = load i64, i64* %13, align 8
  %948 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %946, i64 0, i32 1, i32 2
  %949 = load i8*, i8** %948, align 8
  %950 = getelementptr inbounds i8, i8* %949, i64 %947
  %951 = getelementptr inbounds i8, i8* %950, i64 376
  %952 = bitcast i8* %951 to i32*
  store i32 %945, i32* %952, align 1
  %953 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 83
  %954 = load i32, i32* %953, align 4
  %955 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %956 = load i64, i64* %13, align 8
  %957 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %955, i64 0, i32 1, i32 2
  %958 = load i8*, i8** %957, align 8
  %959 = getelementptr inbounds i8, i8* %958, i64 %956
  %960 = getelementptr inbounds i8, i8* %959, i64 380
  %961 = bitcast i8* %960 to i32*
  store i32 %954, i32* %961, align 1
  %962 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 84
  %963 = load i32, i32* %962, align 8
  %964 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %965 = load i64, i64* %13, align 8
  %966 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %964, i64 0, i32 1, i32 2
  %967 = load i8*, i8** %966, align 8
  %968 = getelementptr inbounds i8, i8* %967, i64 %965
  %969 = getelementptr inbounds i8, i8* %968, i64 384
  %970 = bitcast i8* %969 to i32*
  store i32 %963, i32* %970, align 1
  %971 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 85
  %972 = load i32, i32* %971, align 4
  %973 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %974 = load i64, i64* %13, align 8
  %975 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %973, i64 0, i32 1, i32 2
  %976 = load i8*, i8** %975, align 8
  %977 = getelementptr inbounds i8, i8* %976, i64 %974
  %978 = getelementptr inbounds i8, i8* %977, i64 388
  %979 = bitcast i8* %978 to i32*
  store i32 %972, i32* %979, align 1
  %980 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 86
  %981 = load i32, i32* %980, align 8
  %982 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %983 = load i64, i64* %13, align 8
  %984 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %982, i64 0, i32 1, i32 2
  %985 = load i8*, i8** %984, align 8
  %986 = getelementptr inbounds i8, i8* %985, i64 %983
  %987 = getelementptr inbounds i8, i8* %986, i64 392
  %988 = bitcast i8* %987 to i32*
  store i32 %981, i32* %988, align 1
  %989 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 87
  %990 = load i32, i32* %989, align 4
  %991 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %992 = load i64, i64* %13, align 8
  %993 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %991, i64 0, i32 1, i32 2
  %994 = load i8*, i8** %993, align 8
  %995 = getelementptr inbounds i8, i8* %994, i64 %992
  %996 = getelementptr inbounds i8, i8* %995, i64 396
  %997 = bitcast i8* %996 to i32*
  store i32 %990, i32* %997, align 1
  %998 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 88
  %999 = load i32, i32* %998, align 8
  %1000 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %1001 = load i64, i64* %13, align 8
  %1002 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %1000, i64 0, i32 1, i32 2
  %1003 = load i8*, i8** %1002, align 8
  %1004 = getelementptr inbounds i8, i8* %1003, i64 %1001
  %1005 = getelementptr inbounds i8, i8* %1004, i64 400
  %1006 = bitcast i8* %1005 to i32*
  store i32 %999, i32* %1006, align 1
  %1007 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 89
  %1008 = load i32, i32* %1007, align 4
  %1009 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %1010 = load i64, i64* %13, align 8
  %1011 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %1009, i64 0, i32 1, i32 2
  %1012 = load i8*, i8** %1011, align 8
  %1013 = getelementptr inbounds i8, i8* %1012, i64 %1010
  %1014 = getelementptr inbounds i8, i8* %1013, i64 404
  %1015 = bitcast i8* %1014 to i32*
  store i32 %1008, i32* %1015, align 1
  %1016 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 90
  %1017 = load i32, i32* %1016, align 8
  %1018 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %1019 = load i64, i64* %13, align 8
  %1020 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %1018, i64 0, i32 1, i32 2
  %1021 = load i8*, i8** %1020, align 8
  %1022 = getelementptr inbounds i8, i8* %1021, i64 %1019
  %1023 = getelementptr inbounds i8, i8* %1022, i64 408
  %1024 = bitcast i8* %1023 to i32*
  store i32 %1017, i32* %1024, align 1
  %1025 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 91
  %1026 = load i32, i32* %1025, align 4
  %1027 = icmp ne i32 %1026, 0
  %1028 = zext i1 %1027 to i8
  %1029 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %1030 = load i64, i64* %13, align 8
  %1031 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %1029, i64 0, i32 1, i32 2
  %1032 = load i8*, i8** %1031, align 8
  %1033 = getelementptr inbounds i8, i8* %1032, i64 %1030
  %1034 = getelementptr inbounds i8, i8* %1033, i64 412
  %1035 = load i8, i8* %1034, align 1
  %1036 = and i8 %1035, -2
  %1037 = or i8 %1036, %1028
  store i8 %1037, i8* %1034, align 1
  %1038 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 92
  %1039 = bitcast float* %1038 to i32*
  %1040 = load i32, i32* %1039, align 8
  %1041 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %1042 = load i64, i64* %13, align 8
  %1043 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %1041, i64 0, i32 1, i32 2
  %1044 = load i8*, i8** %1043, align 8
  %1045 = getelementptr inbounds i8, i8* %1044, i64 %1042
  %1046 = getelementptr inbounds i8, i8* %1045, i64 416
  %1047 = bitcast i8* %1046 to i32*
  store i32 %1040, i32* %1047, align 1
  %1048 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 93
  %1049 = load i32, i32* %1048, align 4
  %1050 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %1051 = load i64, i64* %13, align 8
  %1052 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %1050, i64 0, i32 1, i32 2
  %1053 = load i8*, i8** %1052, align 8
  %1054 = getelementptr inbounds i8, i8* %1053, i64 %1051
  %1055 = getelementptr inbounds i8, i8* %1054, i64 420
  %1056 = bitcast i8* %1055 to i32*
  store i32 %1049, i32* %1056, align 1
  %1057 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 94
  %1058 = load i32, i32* %1057, align 8
  %1059 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %1060 = load i64, i64* %13, align 8
  %1061 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %1059, i64 0, i32 1, i32 2
  %1062 = load i8*, i8** %1061, align 8
  %1063 = getelementptr inbounds i8, i8* %1062, i64 %1060
  %1064 = getelementptr inbounds i8, i8* %1063, i64 424
  %1065 = bitcast i8* %1064 to i32*
  store i32 %1058, i32* %1065, align 1
  %1066 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 95
  %1067 = load i32, i32* %1066, align 4
  %1068 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %1069 = load i64, i64* %13, align 8
  %1070 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %1068, i64 0, i32 1, i32 2
  %1071 = load i8*, i8** %1070, align 8
  %1072 = getelementptr inbounds i8, i8* %1071, i64 %1069
  %1073 = getelementptr inbounds i8, i8* %1072, i64 428
  %1074 = bitcast i8* %1073 to i32*
  store i32 %1067, i32* %1074, align 1
  %1075 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 96
  %1076 = load i32, i32* %1075, align 8
  %1077 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %1078 = load i64, i64* %13, align 8
  %1079 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %1077, i64 0, i32 1, i32 2
  %1080 = load i8*, i8** %1079, align 8
  %1081 = getelementptr inbounds i8, i8* %1080, i64 %1078
  %1082 = getelementptr inbounds i8, i8* %1081, i64 432
  %1083 = bitcast i8* %1082 to i32*
  store i32 %1076, i32* %1083, align 1
  %1084 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 97, i64 0
  %1085 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %1086 = bitcast %"class.mojo::internal::ContainerValidateParams"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1086) #12
  %1087 = bitcast %"class.mojo::internal::ContainerValidateParams"* %7 to i64*
  store i64 -6148914691236517206, i64* %1087, align 8
  %1088 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %7, i64 0, i32 0
  store i32 2, i32* %1088, align 8
  %1089 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %7, i64 0, i32 1
  store i8 0, i8* %1089, align 4
  %1090 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %7, i64 0, i32 2
  %1091 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %1085, i64 0, i32 1
  %1092 = bitcast %"class.mojo::internal::ContainerValidateParams"** %1090 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1092, i8 0, i64 24, i1 false)
  %1093 = tail call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %1091, i64 16) #12
  %1094 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %1085, i64 0, i32 1, i32 2
  %1095 = load i8*, i8** %1094, align 8
  %1096 = getelementptr inbounds i8, i8* %1095, i64 %1093
  %1097 = bitcast i8* %1096 to i32*
  store i32 16, i32* %1097, align 1
  %1098 = getelementptr inbounds i8, i8* %1096, i64 4
  %1099 = bitcast i8* %1098 to i32*
  store i32 2, i32* %1099, align 1
  %1100 = load i8*, i8** %1094, align 8
  %1101 = getelementptr inbounds i8, i8* %1100, i64 %1093
  %1102 = icmp eq float* %1084, null
  %1103 = getelementptr inbounds i8, i8* %1101, i64 8
  br i1 %1102, label %1104, label %1112

1104:                                             ; preds = %775
  %1105 = load i32, i32* null, align 536870912
  %1106 = bitcast i8* %1103 to i32*
  store i32 %1105, i32* %1106, align 4
  %1107 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 97, i64 1
  %1108 = bitcast float* %1107 to i32*
  %1109 = load i32, i32* %1108, align 4
  %1110 = getelementptr inbounds i8, i8* %1103, i64 4
  %1111 = bitcast i8* %1110 to i32*
  store i32 %1109, i32* %1111, align 4
  br label %1116

1112:                                             ; preds = %775
  %1113 = bitcast float* %1084 to i64*
  %1114 = bitcast i8* %1103 to i64*
  %1115 = load i64, i64* %1113, align 4
  store i64 %1115, i64* %1114, align 4
  br label %1116

1116:                                             ; preds = %1104, %1112
  %1117 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %1118 = load i64, i64* %13, align 8
  %1119 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %1117, i64 0, i32 1, i32 2
  %1120 = load i8*, i8** %1119, align 8
  %1121 = getelementptr inbounds i8, i8* %1120, i64 %1118
  %1122 = getelementptr inbounds i8, i8* %1121, i64 440
  %1123 = icmp eq i64 %1093, -1
  br i1 %1123, label %1128, label %1124

1124:                                             ; preds = %1116
  %1125 = load i8*, i8** %1094, align 8
  %1126 = getelementptr inbounds i8, i8* %1125, i64 %1093
  %1127 = bitcast i8* %1126 to %"class.mojo::internal::Array_Data.122"*
  br label %1128

1128:                                             ; preds = %1116, %1124
  %1129 = phi %"class.mojo::internal::Array_Data.122"* [ %1127, %1124 ], [ null, %1116 ]
  %1130 = bitcast i8* %1122 to i64*
  %1131 = icmp eq %"class.mojo::internal::Array_Data.122"* %1129, null
  %1132 = ptrtoint %"class.mojo::internal::Array_Data.122"* %1129 to i64
  %1133 = ptrtoint i8* %1122 to i64
  %1134 = sub i64 %1132, %1133
  %1135 = select i1 %1131, i64 0, i64 %1134
  store i64 %1135, i64* %1130, align 8
  %1136 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 98, i64 0
  %1137 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %1138 = bitcast %"class.mojo::internal::ContainerValidateParams"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1138) #12
  %1139 = bitcast %"class.mojo::internal::ContainerValidateParams"* %8 to i64*
  store i64 -6148914691236517206, i64* %1139, align 8
  %1140 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %8, i64 0, i32 0
  store i32 2, i32* %1140, align 8
  %1141 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %8, i64 0, i32 1
  store i8 0, i8* %1141, align 4
  %1142 = getelementptr inbounds %"class.mojo::internal::ContainerValidateParams", %"class.mojo::internal::ContainerValidateParams"* %8, i64 0, i32 2
  %1143 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %1137, i64 0, i32 1
  %1144 = bitcast %"class.mojo::internal::ContainerValidateParams"** %1142 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1144, i8 0, i64 24, i1 false)
  %1145 = tail call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %1143, i64 16) #12
  %1146 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %1137, i64 0, i32 1, i32 2
  %1147 = load i8*, i8** %1146, align 8
  %1148 = getelementptr inbounds i8, i8* %1147, i64 %1145
  %1149 = bitcast i8* %1148 to i32*
  store i32 16, i32* %1149, align 1
  %1150 = getelementptr inbounds i8, i8* %1148, i64 4
  %1151 = bitcast i8* %1150 to i32*
  store i32 2, i32* %1151, align 1
  %1152 = load i8*, i8** %1146, align 8
  %1153 = getelementptr inbounds i8, i8* %1152, i64 %1145
  %1154 = icmp eq float* %1136, null
  %1155 = getelementptr inbounds i8, i8* %1153, i64 8
  br i1 %1154, label %1156, label %1164

1156:                                             ; preds = %1128
  %1157 = load i32, i32* null, align 536870912
  %1158 = bitcast i8* %1155 to i32*
  store i32 %1157, i32* %1158, align 4
  %1159 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 98, i64 1
  %1160 = bitcast float* %1159 to i32*
  %1161 = load i32, i32* %1160, align 4
  %1162 = getelementptr inbounds i8, i8* %1155, i64 4
  %1163 = bitcast i8* %1162 to i32*
  store i32 %1161, i32* %1163, align 4
  br label %1168

1164:                                             ; preds = %1128
  %1165 = bitcast float* %1136 to i64*
  %1166 = bitcast i8* %1155 to i64*
  %1167 = load i64, i64* %1165, align 4
  store i64 %1167, i64* %1166, align 4
  br label %1168

1168:                                             ; preds = %1156, %1164
  %1169 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %1170 = load i64, i64* %13, align 8
  %1171 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %1169, i64 0, i32 1, i32 2
  %1172 = load i8*, i8** %1171, align 8
  %1173 = getelementptr inbounds i8, i8* %1172, i64 %1170
  %1174 = getelementptr inbounds i8, i8* %1173, i64 448
  %1175 = icmp eq i64 %1145, -1
  br i1 %1175, label %1180, label %1176

1176:                                             ; preds = %1168
  %1177 = load i8*, i8** %1146, align 8
  %1178 = getelementptr inbounds i8, i8* %1177, i64 %1145
  %1179 = bitcast i8* %1178 to %"class.mojo::internal::Array_Data.122"*
  br label %1180

1180:                                             ; preds = %1176, %1168
  %1181 = phi %"class.mojo::internal::Array_Data.122"* [ %1179, %1176 ], [ null, %1168 ]
  %1182 = bitcast i8* %1174 to i64*
  %1183 = icmp eq %"class.mojo::internal::Array_Data.122"* %1181, null
  %1184 = ptrtoint %"class.mojo::internal::Array_Data.122"* %1181 to i64
  %1185 = ptrtoint i8* %1174 to i64
  %1186 = sub i64 %1184, %1185
  %1187 = select i1 %1183, i64 0, i64 %1186
  store i64 %1187, i64* %1182, align 8
  %1188 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 99
  %1189 = bitcast float* %1188 to i32*
  %1190 = load i32, i32* %1189, align 4
  %1191 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %1192 = load i64, i64* %13, align 8
  %1193 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %1191, i64 0, i32 1, i32 2
  %1194 = load i8*, i8** %1193, align 8
  %1195 = getelementptr inbounds i8, i8* %1194, i64 %1192
  %1196 = getelementptr inbounds i8, i8* %1195, i64 436
  %1197 = bitcast i8* %1196 to i32*
  store i32 %1190, i32* %1197, align 1
  %1198 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 100
  %1199 = bitcast float* %1198 to i32*
  %1200 = load i32, i32* %1199, align 8
  %1201 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %1202 = load i64, i64* %13, align 8
  %1203 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %1201, i64 0, i32 1, i32 2
  %1204 = load i8*, i8** %1203, align 8
  %1205 = getelementptr inbounds i8, i8* %1204, i64 %1202
  %1206 = getelementptr inbounds i8, i8* %1205, i64 456
  %1207 = bitcast i8* %1206 to i32*
  store i32 %1200, i32* %1207, align 1
  %1208 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 101
  %1209 = load i32, i32* %1208, align 4
  %1210 = icmp ne i32 %1209, 0
  %1211 = zext i1 %1210 to i8
  %1212 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %1213 = load i64, i64* %13, align 8
  %1214 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %1212, i64 0, i32 1, i32 2
  %1215 = load i8*, i8** %1214, align 8
  %1216 = getelementptr inbounds i8, i8* %1215, i64 %1213
  %1217 = getelementptr inbounds i8, i8* %1216, i64 412
  %1218 = load i8, i8* %1217, align 1
  %1219 = shl nuw nsw i8 %1211, 1
  %1220 = and i8 %1218, -3
  %1221 = or i8 %1220, %1219
  store i8 %1221, i8* %1217, align 1
  %1222 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 102
  %1223 = load i32, i32* %1222, align 8
  %1224 = icmp ne i32 %1223, 0
  %1225 = zext i1 %1224 to i8
  %1226 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %1227 = load i64, i64* %13, align 8
  %1228 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %1226, i64 0, i32 1, i32 2
  %1229 = load i8*, i8** %1228, align 8
  %1230 = getelementptr inbounds i8, i8* %1229, i64 %1227
  %1231 = getelementptr inbounds i8, i8* %1230, i64 412
  %1232 = load i8, i8* %1231, align 1
  %1233 = shl nuw nsw i8 %1225, 2
  %1234 = and i8 %1232, -5
  %1235 = or i8 %1234, %1233
  store i8 %1235, i8* %1231, align 1
  %1236 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 103
  %1237 = load i64, i64* %1236, align 8
  %1238 = icmp ne i64 %1237, 0
  %1239 = zext i1 %1238 to i64
  %1240 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %1241 = load i64, i64* %13, align 8
  %1242 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %1240, i64 0, i32 1, i32 2
  %1243 = load i8*, i8** %1242, align 8
  %1244 = getelementptr inbounds i8, i8* %1243, i64 %1241
  %1245 = getelementptr inbounds i8, i8* %1244, i64 464
  %1246 = bitcast i8* %1245 to i64*
  store i64 %1239, i64* %1246, align 1
  %1247 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 104
  %1248 = load i64, i64* %1247, align 8
  %1249 = icmp ne i64 %1248, 0
  %1250 = zext i1 %1249 to i64
  %1251 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %1252 = load i64, i64* %13, align 8
  %1253 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %1251, i64 0, i32 1, i32 2
  %1254 = load i8*, i8** %1253, align 8
  %1255 = getelementptr inbounds i8, i8* %1254, i64 %1252
  %1256 = getelementptr inbounds i8, i8* %1255, i64 472
  %1257 = bitcast i8* %1256 to i64*
  store i64 %1250, i64* %1257, align 1
  %1258 = getelementptr inbounds %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceLimits* %0, i64 0, i32 105
  %1259 = load i64, i64* %1258, align 8
  %1260 = icmp ne i64 %1259, 0
  %1261 = zext i1 %1260 to i64
  %1262 = load %"class.mojo::Message"*, %"class.mojo::Message"** %9, align 8
  %1263 = load i64, i64* %13, align 8
  %1264 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %1262, i64 0, i32 1, i32 2
  %1265 = load i8*, i8** %1264, align 8
  %1266 = getelementptr inbounds i8, i8* %1265, i64 %1263
  %1267 = getelementptr inbounds i8, i8* %1266, i64 480
  %1268 = bitcast i8* %1267 to i64*
  store i64 %1261, i64* %1268, align 1
  call void @_ZN4mojo8internal23ContainerValidateParamsD2Ev(%"class.mojo::internal::ContainerValidateParams"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1138) #12
  call void @_ZN4mojo8internal23ContainerValidateParamsD2Ev(%"class.mojo::internal::ContainerValidateParams"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1086) #12
  call void @_ZN4mojo8internal23ContainerValidateParamsD2Ev(%"class.mojo::internal::ContainerValidateParams"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %733) #12
  call void @_ZN4mojo8internal23ContainerValidateParamsD2Ev(%"class.mojo::internal::ContainerValidateParams"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %682) #12
  call void @_ZN4mojo8internal23ContainerValidateParamsD2Ev(%"class.mojo::internal::ContainerValidateParams"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %555) #12
  call void @_ZN4mojo8internal23ContainerValidateParamsD2Ev(%"class.mojo::internal::ContainerValidateParams"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %493) #12
  ret void
}

declare void @_ZN3gpu5mojom8internal27VkPhysicalDeviceLimits_DataC1Ev(%"class.gpu::mojom::internal::VkPhysicalDeviceLimits_Data"*) unnamed_addr #3

declare void @_ZN3gpu5mojom8internal37VkPhysicalDeviceSparseProperties_DataC1Ev(%"class.gpu::mojom::internal::VkPhysicalDeviceSparseProperties_Data"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal10SerializerIN3gpu5mojom32VkPhysicalDeviceFeaturesDataViewEK24VkPhysicalDeviceFeaturesE9SerializeERS6_RNS0_15MessageFragmentINS3_8internal29VkPhysicalDeviceFeatures_DataEEE(%struct.VkPhysicalDeviceFeatures* dereferenceable(220), %"class.mojo::internal::MessageFragment.107"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.mojo::internal::MessageFragment.107", %"class.mojo::internal::MessageFragment.107"* %1, i64 0, i32 0
  %4 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %5 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %4, i64 0, i32 1
  %6 = tail call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %5, i64 16) #12
  %7 = getelementptr inbounds %"class.mojo::internal::MessageFragment.107", %"class.mojo::internal::MessageFragment.107"* %1, i64 0, i32 1
  store i64 %6, i64* %7, align 8
  %8 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %9 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %8, i64 0, i32 1, i32 2
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %6
  %12 = bitcast i8* %11 to %"class.gpu::mojom::internal::VkPhysicalDeviceFeatures_Data"*
  tail call void @_ZN3gpu5mojom8internal29VkPhysicalDeviceFeatures_DataC1Ev(%"class.gpu::mojom::internal::VkPhysicalDeviceFeatures_Data"* %12) #12
  %13 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp ne i32 %14, 0
  %16 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %17 = load i64, i64* %7, align 8
  %18 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %16, i64 0, i32 1, i32 2
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %17
  %21 = getelementptr inbounds i8, i8* %20, i64 8
  %22 = bitcast i8* %21 to i56*
  %23 = zext i1 %15 to i56
  %24 = load i56, i56* %22, align 1
  %25 = and i56 %24, -2
  %26 = or i56 %25, %23
  store i56 %26, i56* %22, align 1
  %27 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = icmp ne i32 %28, 0
  %30 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %31 = load i64, i64* %7, align 8
  %32 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %30, i64 0, i32 1, i32 2
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  %35 = getelementptr inbounds i8, i8* %34, i64 8
  %36 = bitcast i8* %35 to i56*
  %37 = zext i1 %29 to i56
  %38 = load i56, i56* %36, align 1
  %39 = shl nuw nsw i56 %37, 1
  %40 = and i56 %38, -3
  %41 = or i56 %40, %39
  store i56 %41, i56* %36, align 1
  %42 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = icmp ne i32 %43, 0
  %45 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %46 = load i64, i64* %7, align 8
  %47 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %45, i64 0, i32 1, i32 2
  %48 = load i8*, i8** %47, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 %46
  %50 = getelementptr inbounds i8, i8* %49, i64 8
  %51 = bitcast i8* %50 to i56*
  %52 = zext i1 %44 to i56
  %53 = load i56, i56* %51, align 1
  %54 = shl nuw nsw i56 %52, 2
  %55 = and i56 %53, -5
  %56 = or i56 %55, %54
  store i56 %56, i56* %51, align 1
  %57 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 3
  %58 = load i32, i32* %57, align 4
  %59 = icmp ne i32 %58, 0
  %60 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %61 = load i64, i64* %7, align 8
  %62 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %60, i64 0, i32 1, i32 2
  %63 = load i8*, i8** %62, align 8
  %64 = getelementptr inbounds i8, i8* %63, i64 %61
  %65 = getelementptr inbounds i8, i8* %64, i64 8
  %66 = bitcast i8* %65 to i56*
  %67 = zext i1 %59 to i56
  %68 = load i56, i56* %66, align 1
  %69 = shl nuw nsw i56 %67, 3
  %70 = and i56 %68, -9
  %71 = or i56 %70, %69
  store i56 %71, i56* %66, align 1
  %72 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 4
  %73 = load i32, i32* %72, align 4
  %74 = icmp ne i32 %73, 0
  %75 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %76 = load i64, i64* %7, align 8
  %77 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %75, i64 0, i32 1, i32 2
  %78 = load i8*, i8** %77, align 8
  %79 = getelementptr inbounds i8, i8* %78, i64 %76
  %80 = getelementptr inbounds i8, i8* %79, i64 8
  %81 = bitcast i8* %80 to i56*
  %82 = zext i1 %74 to i56
  %83 = load i56, i56* %81, align 1
  %84 = shl nuw nsw i56 %82, 4
  %85 = and i56 %83, -17
  %86 = or i56 %85, %84
  store i56 %86, i56* %81, align 1
  %87 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 5
  %88 = load i32, i32* %87, align 4
  %89 = icmp ne i32 %88, 0
  %90 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %91 = load i64, i64* %7, align 8
  %92 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %90, i64 0, i32 1, i32 2
  %93 = load i8*, i8** %92, align 8
  %94 = getelementptr inbounds i8, i8* %93, i64 %91
  %95 = getelementptr inbounds i8, i8* %94, i64 8
  %96 = bitcast i8* %95 to i56*
  %97 = zext i1 %89 to i56
  %98 = load i56, i56* %96, align 1
  %99 = shl nuw nsw i56 %97, 5
  %100 = and i56 %98, -33
  %101 = or i56 %100, %99
  store i56 %101, i56* %96, align 1
  %102 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 6
  %103 = load i32, i32* %102, align 4
  %104 = icmp ne i32 %103, 0
  %105 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %106 = load i64, i64* %7, align 8
  %107 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %105, i64 0, i32 1, i32 2
  %108 = load i8*, i8** %107, align 8
  %109 = getelementptr inbounds i8, i8* %108, i64 %106
  %110 = getelementptr inbounds i8, i8* %109, i64 8
  %111 = bitcast i8* %110 to i56*
  %112 = zext i1 %104 to i56
  %113 = load i56, i56* %111, align 1
  %114 = shl nuw nsw i56 %112, 6
  %115 = and i56 %113, -65
  %116 = or i56 %115, %114
  store i56 %116, i56* %111, align 1
  %117 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 7
  %118 = load i32, i32* %117, align 4
  %119 = icmp ne i32 %118, 0
  %120 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %121 = load i64, i64* %7, align 8
  %122 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %120, i64 0, i32 1, i32 2
  %123 = load i8*, i8** %122, align 8
  %124 = getelementptr inbounds i8, i8* %123, i64 %121
  %125 = getelementptr inbounds i8, i8* %124, i64 8
  %126 = bitcast i8* %125 to i56*
  %127 = zext i1 %119 to i56
  %128 = load i56, i56* %126, align 1
  %129 = shl nuw nsw i56 %127, 7
  %130 = and i56 %128, -129
  %131 = or i56 %130, %129
  store i56 %131, i56* %126, align 1
  %132 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 8
  %133 = load i32, i32* %132, align 4
  %134 = icmp ne i32 %133, 0
  %135 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %136 = load i64, i64* %7, align 8
  %137 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %135, i64 0, i32 1, i32 2
  %138 = load i8*, i8** %137, align 8
  %139 = getelementptr inbounds i8, i8* %138, i64 %136
  %140 = getelementptr inbounds i8, i8* %139, i64 8
  %141 = bitcast i8* %140 to i56*
  %142 = zext i1 %134 to i56
  %143 = load i56, i56* %141, align 1
  %144 = shl nuw nsw i56 %142, 8
  %145 = and i56 %143, -257
  %146 = or i56 %145, %144
  store i56 %146, i56* %141, align 1
  %147 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 9
  %148 = load i32, i32* %147, align 4
  %149 = icmp ne i32 %148, 0
  %150 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %151 = load i64, i64* %7, align 8
  %152 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %150, i64 0, i32 1, i32 2
  %153 = load i8*, i8** %152, align 8
  %154 = getelementptr inbounds i8, i8* %153, i64 %151
  %155 = getelementptr inbounds i8, i8* %154, i64 8
  %156 = bitcast i8* %155 to i56*
  %157 = zext i1 %149 to i56
  %158 = load i56, i56* %156, align 1
  %159 = shl nuw nsw i56 %157, 9
  %160 = and i56 %158, -513
  %161 = or i56 %160, %159
  store i56 %161, i56* %156, align 1
  %162 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 10
  %163 = load i32, i32* %162, align 4
  %164 = icmp ne i32 %163, 0
  %165 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %166 = load i64, i64* %7, align 8
  %167 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %165, i64 0, i32 1, i32 2
  %168 = load i8*, i8** %167, align 8
  %169 = getelementptr inbounds i8, i8* %168, i64 %166
  %170 = getelementptr inbounds i8, i8* %169, i64 8
  %171 = bitcast i8* %170 to i56*
  %172 = zext i1 %164 to i56
  %173 = load i56, i56* %171, align 1
  %174 = shl nuw nsw i56 %172, 10
  %175 = and i56 %173, -1025
  %176 = or i56 %175, %174
  store i56 %176, i56* %171, align 1
  %177 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 11
  %178 = load i32, i32* %177, align 4
  %179 = icmp ne i32 %178, 0
  %180 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %181 = load i64, i64* %7, align 8
  %182 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %180, i64 0, i32 1, i32 2
  %183 = load i8*, i8** %182, align 8
  %184 = getelementptr inbounds i8, i8* %183, i64 %181
  %185 = getelementptr inbounds i8, i8* %184, i64 8
  %186 = bitcast i8* %185 to i56*
  %187 = zext i1 %179 to i56
  %188 = load i56, i56* %186, align 1
  %189 = shl nuw nsw i56 %187, 11
  %190 = and i56 %188, -2049
  %191 = or i56 %190, %189
  store i56 %191, i56* %186, align 1
  %192 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 12
  %193 = load i32, i32* %192, align 4
  %194 = icmp ne i32 %193, 0
  %195 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %196 = load i64, i64* %7, align 8
  %197 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %195, i64 0, i32 1, i32 2
  %198 = load i8*, i8** %197, align 8
  %199 = getelementptr inbounds i8, i8* %198, i64 %196
  %200 = getelementptr inbounds i8, i8* %199, i64 8
  %201 = bitcast i8* %200 to i56*
  %202 = zext i1 %194 to i56
  %203 = load i56, i56* %201, align 1
  %204 = shl nuw nsw i56 %202, 12
  %205 = and i56 %203, -4097
  %206 = or i56 %205, %204
  store i56 %206, i56* %201, align 1
  %207 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 13
  %208 = load i32, i32* %207, align 4
  %209 = icmp ne i32 %208, 0
  %210 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %211 = load i64, i64* %7, align 8
  %212 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %210, i64 0, i32 1, i32 2
  %213 = load i8*, i8** %212, align 8
  %214 = getelementptr inbounds i8, i8* %213, i64 %211
  %215 = getelementptr inbounds i8, i8* %214, i64 8
  %216 = bitcast i8* %215 to i56*
  %217 = zext i1 %209 to i56
  %218 = load i56, i56* %216, align 1
  %219 = shl nuw nsw i56 %217, 13
  %220 = and i56 %218, -8193
  %221 = or i56 %220, %219
  store i56 %221, i56* %216, align 1
  %222 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 14
  %223 = load i32, i32* %222, align 4
  %224 = icmp ne i32 %223, 0
  %225 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %226 = load i64, i64* %7, align 8
  %227 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %225, i64 0, i32 1, i32 2
  %228 = load i8*, i8** %227, align 8
  %229 = getelementptr inbounds i8, i8* %228, i64 %226
  %230 = getelementptr inbounds i8, i8* %229, i64 8
  %231 = bitcast i8* %230 to i56*
  %232 = zext i1 %224 to i56
  %233 = load i56, i56* %231, align 1
  %234 = shl nuw nsw i56 %232, 14
  %235 = and i56 %233, -16385
  %236 = or i56 %235, %234
  store i56 %236, i56* %231, align 1
  %237 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 15
  %238 = load i32, i32* %237, align 4
  %239 = icmp ne i32 %238, 0
  %240 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %241 = load i64, i64* %7, align 8
  %242 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %240, i64 0, i32 1, i32 2
  %243 = load i8*, i8** %242, align 8
  %244 = getelementptr inbounds i8, i8* %243, i64 %241
  %245 = getelementptr inbounds i8, i8* %244, i64 8
  %246 = bitcast i8* %245 to i56*
  %247 = zext i1 %239 to i56
  %248 = load i56, i56* %246, align 1
  %249 = shl nuw nsw i56 %247, 15
  %250 = and i56 %248, -32769
  %251 = or i56 %250, %249
  store i56 %251, i56* %246, align 1
  %252 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 16
  %253 = load i32, i32* %252, align 4
  %254 = icmp ne i32 %253, 0
  %255 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %256 = load i64, i64* %7, align 8
  %257 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %255, i64 0, i32 1, i32 2
  %258 = load i8*, i8** %257, align 8
  %259 = getelementptr inbounds i8, i8* %258, i64 %256
  %260 = getelementptr inbounds i8, i8* %259, i64 8
  %261 = bitcast i8* %260 to i56*
  %262 = zext i1 %254 to i56
  %263 = load i56, i56* %261, align 1
  %264 = shl nuw nsw i56 %262, 16
  %265 = and i56 %263, -65537
  %266 = or i56 %265, %264
  store i56 %266, i56* %261, align 1
  %267 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 17
  %268 = load i32, i32* %267, align 4
  %269 = icmp ne i32 %268, 0
  %270 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %271 = load i64, i64* %7, align 8
  %272 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %270, i64 0, i32 1, i32 2
  %273 = load i8*, i8** %272, align 8
  %274 = getelementptr inbounds i8, i8* %273, i64 %271
  %275 = getelementptr inbounds i8, i8* %274, i64 8
  %276 = bitcast i8* %275 to i56*
  %277 = zext i1 %269 to i56
  %278 = load i56, i56* %276, align 1
  %279 = shl nuw nsw i56 %277, 17
  %280 = and i56 %278, -131073
  %281 = or i56 %280, %279
  store i56 %281, i56* %276, align 1
  %282 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 18
  %283 = load i32, i32* %282, align 4
  %284 = icmp ne i32 %283, 0
  %285 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %286 = load i64, i64* %7, align 8
  %287 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %285, i64 0, i32 1, i32 2
  %288 = load i8*, i8** %287, align 8
  %289 = getelementptr inbounds i8, i8* %288, i64 %286
  %290 = getelementptr inbounds i8, i8* %289, i64 8
  %291 = bitcast i8* %290 to i56*
  %292 = zext i1 %284 to i56
  %293 = load i56, i56* %291, align 1
  %294 = shl nuw nsw i56 %292, 18
  %295 = and i56 %293, -262145
  %296 = or i56 %295, %294
  store i56 %296, i56* %291, align 1
  %297 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 19
  %298 = load i32, i32* %297, align 4
  %299 = icmp ne i32 %298, 0
  %300 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %301 = load i64, i64* %7, align 8
  %302 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %300, i64 0, i32 1, i32 2
  %303 = load i8*, i8** %302, align 8
  %304 = getelementptr inbounds i8, i8* %303, i64 %301
  %305 = getelementptr inbounds i8, i8* %304, i64 8
  %306 = bitcast i8* %305 to i56*
  %307 = zext i1 %299 to i56
  %308 = load i56, i56* %306, align 1
  %309 = shl nuw nsw i56 %307, 19
  %310 = and i56 %308, -524289
  %311 = or i56 %310, %309
  store i56 %311, i56* %306, align 1
  %312 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 20
  %313 = load i32, i32* %312, align 4
  %314 = icmp ne i32 %313, 0
  %315 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %316 = load i64, i64* %7, align 8
  %317 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %315, i64 0, i32 1, i32 2
  %318 = load i8*, i8** %317, align 8
  %319 = getelementptr inbounds i8, i8* %318, i64 %316
  %320 = getelementptr inbounds i8, i8* %319, i64 8
  %321 = bitcast i8* %320 to i56*
  %322 = zext i1 %314 to i56
  %323 = load i56, i56* %321, align 1
  %324 = shl nuw nsw i56 %322, 20
  %325 = and i56 %323, -1048577
  %326 = or i56 %325, %324
  store i56 %326, i56* %321, align 1
  %327 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 21
  %328 = load i32, i32* %327, align 4
  %329 = icmp ne i32 %328, 0
  %330 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %331 = load i64, i64* %7, align 8
  %332 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %330, i64 0, i32 1, i32 2
  %333 = load i8*, i8** %332, align 8
  %334 = getelementptr inbounds i8, i8* %333, i64 %331
  %335 = getelementptr inbounds i8, i8* %334, i64 8
  %336 = bitcast i8* %335 to i56*
  %337 = zext i1 %329 to i56
  %338 = load i56, i56* %336, align 1
  %339 = shl nuw nsw i56 %337, 21
  %340 = and i56 %338, -2097153
  %341 = or i56 %340, %339
  store i56 %341, i56* %336, align 1
  %342 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 22
  %343 = load i32, i32* %342, align 4
  %344 = icmp ne i32 %343, 0
  %345 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %346 = load i64, i64* %7, align 8
  %347 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %345, i64 0, i32 1, i32 2
  %348 = load i8*, i8** %347, align 8
  %349 = getelementptr inbounds i8, i8* %348, i64 %346
  %350 = getelementptr inbounds i8, i8* %349, i64 8
  %351 = bitcast i8* %350 to i56*
  %352 = zext i1 %344 to i56
  %353 = load i56, i56* %351, align 1
  %354 = shl nuw nsw i56 %352, 22
  %355 = and i56 %353, -4194305
  %356 = or i56 %355, %354
  store i56 %356, i56* %351, align 1
  %357 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 23
  %358 = load i32, i32* %357, align 4
  %359 = icmp ne i32 %358, 0
  %360 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %361 = load i64, i64* %7, align 8
  %362 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %360, i64 0, i32 1, i32 2
  %363 = load i8*, i8** %362, align 8
  %364 = getelementptr inbounds i8, i8* %363, i64 %361
  %365 = getelementptr inbounds i8, i8* %364, i64 8
  %366 = bitcast i8* %365 to i56*
  %367 = zext i1 %359 to i56
  %368 = load i56, i56* %366, align 1
  %369 = shl nuw nsw i56 %367, 23
  %370 = and i56 %368, -8388609
  %371 = or i56 %370, %369
  store i56 %371, i56* %366, align 1
  %372 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 24
  %373 = load i32, i32* %372, align 4
  %374 = icmp ne i32 %373, 0
  %375 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %376 = load i64, i64* %7, align 8
  %377 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %375, i64 0, i32 1, i32 2
  %378 = load i8*, i8** %377, align 8
  %379 = getelementptr inbounds i8, i8* %378, i64 %376
  %380 = getelementptr inbounds i8, i8* %379, i64 8
  %381 = bitcast i8* %380 to i56*
  %382 = zext i1 %374 to i56
  %383 = load i56, i56* %381, align 1
  %384 = shl nuw nsw i56 %382, 24
  %385 = and i56 %383, -16777217
  %386 = or i56 %385, %384
  store i56 %386, i56* %381, align 1
  %387 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 25
  %388 = load i32, i32* %387, align 4
  %389 = icmp ne i32 %388, 0
  %390 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %391 = load i64, i64* %7, align 8
  %392 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %390, i64 0, i32 1, i32 2
  %393 = load i8*, i8** %392, align 8
  %394 = getelementptr inbounds i8, i8* %393, i64 %391
  %395 = getelementptr inbounds i8, i8* %394, i64 8
  %396 = bitcast i8* %395 to i56*
  %397 = zext i1 %389 to i56
  %398 = load i56, i56* %396, align 1
  %399 = shl nuw nsw i56 %397, 25
  %400 = and i56 %398, -33554433
  %401 = or i56 %400, %399
  store i56 %401, i56* %396, align 1
  %402 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 26
  %403 = load i32, i32* %402, align 4
  %404 = icmp ne i32 %403, 0
  %405 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %406 = load i64, i64* %7, align 8
  %407 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %405, i64 0, i32 1, i32 2
  %408 = load i8*, i8** %407, align 8
  %409 = getelementptr inbounds i8, i8* %408, i64 %406
  %410 = getelementptr inbounds i8, i8* %409, i64 8
  %411 = bitcast i8* %410 to i56*
  %412 = zext i1 %404 to i56
  %413 = load i56, i56* %411, align 1
  %414 = shl nuw nsw i56 %412, 26
  %415 = and i56 %413, -67108865
  %416 = or i56 %415, %414
  store i56 %416, i56* %411, align 1
  %417 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 27
  %418 = load i32, i32* %417, align 4
  %419 = icmp ne i32 %418, 0
  %420 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %421 = load i64, i64* %7, align 8
  %422 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %420, i64 0, i32 1, i32 2
  %423 = load i8*, i8** %422, align 8
  %424 = getelementptr inbounds i8, i8* %423, i64 %421
  %425 = getelementptr inbounds i8, i8* %424, i64 8
  %426 = bitcast i8* %425 to i56*
  %427 = zext i1 %419 to i56
  %428 = load i56, i56* %426, align 1
  %429 = shl nuw nsw i56 %427, 27
  %430 = and i56 %428, -134217729
  %431 = or i56 %430, %429
  store i56 %431, i56* %426, align 1
  %432 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 28
  %433 = load i32, i32* %432, align 4
  %434 = icmp ne i32 %433, 0
  %435 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %436 = load i64, i64* %7, align 8
  %437 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %435, i64 0, i32 1, i32 2
  %438 = load i8*, i8** %437, align 8
  %439 = getelementptr inbounds i8, i8* %438, i64 %436
  %440 = getelementptr inbounds i8, i8* %439, i64 8
  %441 = bitcast i8* %440 to i56*
  %442 = zext i1 %434 to i56
  %443 = load i56, i56* %441, align 1
  %444 = shl nuw nsw i56 %442, 28
  %445 = and i56 %443, -268435457
  %446 = or i56 %445, %444
  store i56 %446, i56* %441, align 1
  %447 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 29
  %448 = load i32, i32* %447, align 4
  %449 = icmp ne i32 %448, 0
  %450 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %451 = load i64, i64* %7, align 8
  %452 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %450, i64 0, i32 1, i32 2
  %453 = load i8*, i8** %452, align 8
  %454 = getelementptr inbounds i8, i8* %453, i64 %451
  %455 = getelementptr inbounds i8, i8* %454, i64 8
  %456 = bitcast i8* %455 to i56*
  %457 = zext i1 %449 to i56
  %458 = load i56, i56* %456, align 1
  %459 = shl nuw nsw i56 %457, 29
  %460 = and i56 %458, -536870913
  %461 = or i56 %460, %459
  store i56 %461, i56* %456, align 1
  %462 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 30
  %463 = load i32, i32* %462, align 4
  %464 = icmp ne i32 %463, 0
  %465 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %466 = load i64, i64* %7, align 8
  %467 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %465, i64 0, i32 1, i32 2
  %468 = load i8*, i8** %467, align 8
  %469 = getelementptr inbounds i8, i8* %468, i64 %466
  %470 = getelementptr inbounds i8, i8* %469, i64 8
  %471 = bitcast i8* %470 to i56*
  %472 = zext i1 %464 to i56
  %473 = load i56, i56* %471, align 1
  %474 = shl nuw nsw i56 %472, 30
  %475 = and i56 %473, -1073741825
  %476 = or i56 %475, %474
  store i56 %476, i56* %471, align 1
  %477 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 31
  %478 = load i32, i32* %477, align 4
  %479 = icmp ne i32 %478, 0
  %480 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %481 = load i64, i64* %7, align 8
  %482 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %480, i64 0, i32 1, i32 2
  %483 = load i8*, i8** %482, align 8
  %484 = getelementptr inbounds i8, i8* %483, i64 %481
  %485 = getelementptr inbounds i8, i8* %484, i64 8
  %486 = bitcast i8* %485 to i56*
  %487 = zext i1 %479 to i56
  %488 = load i56, i56* %486, align 1
  %489 = shl nuw nsw i56 %487, 31
  %490 = and i56 %488, -2147483649
  %491 = or i56 %490, %489
  store i56 %491, i56* %486, align 1
  %492 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 32
  %493 = load i32, i32* %492, align 4
  %494 = icmp ne i32 %493, 0
  %495 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %496 = load i64, i64* %7, align 8
  %497 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %495, i64 0, i32 1, i32 2
  %498 = load i8*, i8** %497, align 8
  %499 = getelementptr inbounds i8, i8* %498, i64 %496
  %500 = getelementptr inbounds i8, i8* %499, i64 8
  %501 = bitcast i8* %500 to i56*
  %502 = zext i1 %494 to i56
  %503 = load i56, i56* %501, align 1
  %504 = shl nuw nsw i56 %502, 32
  %505 = and i56 %503, -4294967297
  %506 = or i56 %505, %504
  store i56 %506, i56* %501, align 1
  %507 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 33
  %508 = load i32, i32* %507, align 4
  %509 = icmp ne i32 %508, 0
  %510 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %511 = load i64, i64* %7, align 8
  %512 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %510, i64 0, i32 1, i32 2
  %513 = load i8*, i8** %512, align 8
  %514 = getelementptr inbounds i8, i8* %513, i64 %511
  %515 = getelementptr inbounds i8, i8* %514, i64 8
  %516 = bitcast i8* %515 to i56*
  %517 = zext i1 %509 to i56
  %518 = load i56, i56* %516, align 1
  %519 = shl nuw nsw i56 %517, 33
  %520 = and i56 %518, -8589934593
  %521 = or i56 %520, %519
  store i56 %521, i56* %516, align 1
  %522 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 34
  %523 = load i32, i32* %522, align 4
  %524 = icmp ne i32 %523, 0
  %525 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %526 = load i64, i64* %7, align 8
  %527 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %525, i64 0, i32 1, i32 2
  %528 = load i8*, i8** %527, align 8
  %529 = getelementptr inbounds i8, i8* %528, i64 %526
  %530 = getelementptr inbounds i8, i8* %529, i64 8
  %531 = bitcast i8* %530 to i56*
  %532 = zext i1 %524 to i56
  %533 = load i56, i56* %531, align 1
  %534 = shl nuw nsw i56 %532, 34
  %535 = and i56 %533, -17179869185
  %536 = or i56 %535, %534
  store i56 %536, i56* %531, align 1
  %537 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 35
  %538 = load i32, i32* %537, align 4
  %539 = icmp ne i32 %538, 0
  %540 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %541 = load i64, i64* %7, align 8
  %542 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %540, i64 0, i32 1, i32 2
  %543 = load i8*, i8** %542, align 8
  %544 = getelementptr inbounds i8, i8* %543, i64 %541
  %545 = getelementptr inbounds i8, i8* %544, i64 8
  %546 = bitcast i8* %545 to i56*
  %547 = zext i1 %539 to i56
  %548 = load i56, i56* %546, align 1
  %549 = shl nuw nsw i56 %547, 35
  %550 = and i56 %548, -34359738369
  %551 = or i56 %550, %549
  store i56 %551, i56* %546, align 1
  %552 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 36
  %553 = load i32, i32* %552, align 4
  %554 = icmp ne i32 %553, 0
  %555 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %556 = load i64, i64* %7, align 8
  %557 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %555, i64 0, i32 1, i32 2
  %558 = load i8*, i8** %557, align 8
  %559 = getelementptr inbounds i8, i8* %558, i64 %556
  %560 = getelementptr inbounds i8, i8* %559, i64 8
  %561 = bitcast i8* %560 to i56*
  %562 = zext i1 %554 to i56
  %563 = load i56, i56* %561, align 1
  %564 = shl nuw nsw i56 %562, 36
  %565 = and i56 %563, -68719476737
  %566 = or i56 %565, %564
  store i56 %566, i56* %561, align 1
  %567 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 37
  %568 = load i32, i32* %567, align 4
  %569 = icmp ne i32 %568, 0
  %570 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %571 = load i64, i64* %7, align 8
  %572 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %570, i64 0, i32 1, i32 2
  %573 = load i8*, i8** %572, align 8
  %574 = getelementptr inbounds i8, i8* %573, i64 %571
  %575 = getelementptr inbounds i8, i8* %574, i64 8
  %576 = bitcast i8* %575 to i56*
  %577 = zext i1 %569 to i56
  %578 = load i56, i56* %576, align 1
  %579 = shl nuw nsw i56 %577, 37
  %580 = and i56 %578, -137438953473
  %581 = or i56 %580, %579
  store i56 %581, i56* %576, align 1
  %582 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 38
  %583 = load i32, i32* %582, align 4
  %584 = icmp ne i32 %583, 0
  %585 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %586 = load i64, i64* %7, align 8
  %587 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %585, i64 0, i32 1, i32 2
  %588 = load i8*, i8** %587, align 8
  %589 = getelementptr inbounds i8, i8* %588, i64 %586
  %590 = getelementptr inbounds i8, i8* %589, i64 8
  %591 = bitcast i8* %590 to i56*
  %592 = zext i1 %584 to i56
  %593 = load i56, i56* %591, align 1
  %594 = shl nuw nsw i56 %592, 38
  %595 = and i56 %593, -274877906945
  %596 = or i56 %595, %594
  store i56 %596, i56* %591, align 1
  %597 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 39
  %598 = load i32, i32* %597, align 4
  %599 = icmp ne i32 %598, 0
  %600 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %601 = load i64, i64* %7, align 8
  %602 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %600, i64 0, i32 1, i32 2
  %603 = load i8*, i8** %602, align 8
  %604 = getelementptr inbounds i8, i8* %603, i64 %601
  %605 = getelementptr inbounds i8, i8* %604, i64 8
  %606 = bitcast i8* %605 to i56*
  %607 = zext i1 %599 to i56
  %608 = load i56, i56* %606, align 1
  %609 = shl nuw nsw i56 %607, 39
  %610 = and i56 %608, -549755813889
  %611 = or i56 %610, %609
  store i56 %611, i56* %606, align 1
  %612 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 40
  %613 = load i32, i32* %612, align 4
  %614 = icmp ne i32 %613, 0
  %615 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %616 = load i64, i64* %7, align 8
  %617 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %615, i64 0, i32 1, i32 2
  %618 = load i8*, i8** %617, align 8
  %619 = getelementptr inbounds i8, i8* %618, i64 %616
  %620 = getelementptr inbounds i8, i8* %619, i64 8
  %621 = bitcast i8* %620 to i56*
  %622 = zext i1 %614 to i56
  %623 = load i56, i56* %621, align 1
  %624 = shl nuw nsw i56 %622, 40
  %625 = and i56 %623, -1099511627777
  %626 = or i56 %625, %624
  store i56 %626, i56* %621, align 1
  %627 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 41
  %628 = load i32, i32* %627, align 4
  %629 = icmp ne i32 %628, 0
  %630 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %631 = load i64, i64* %7, align 8
  %632 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %630, i64 0, i32 1, i32 2
  %633 = load i8*, i8** %632, align 8
  %634 = getelementptr inbounds i8, i8* %633, i64 %631
  %635 = getelementptr inbounds i8, i8* %634, i64 8
  %636 = bitcast i8* %635 to i56*
  %637 = zext i1 %629 to i56
  %638 = load i56, i56* %636, align 1
  %639 = shl nuw nsw i56 %637, 41
  %640 = and i56 %638, -2199023255553
  %641 = or i56 %640, %639
  store i56 %641, i56* %636, align 1
  %642 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 42
  %643 = load i32, i32* %642, align 4
  %644 = icmp ne i32 %643, 0
  %645 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %646 = load i64, i64* %7, align 8
  %647 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %645, i64 0, i32 1, i32 2
  %648 = load i8*, i8** %647, align 8
  %649 = getelementptr inbounds i8, i8* %648, i64 %646
  %650 = getelementptr inbounds i8, i8* %649, i64 8
  %651 = bitcast i8* %650 to i56*
  %652 = zext i1 %644 to i56
  %653 = load i56, i56* %651, align 1
  %654 = shl nuw nsw i56 %652, 42
  %655 = and i56 %653, -4398046511105
  %656 = or i56 %655, %654
  store i56 %656, i56* %651, align 1
  %657 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 43
  %658 = load i32, i32* %657, align 4
  %659 = icmp ne i32 %658, 0
  %660 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %661 = load i64, i64* %7, align 8
  %662 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %660, i64 0, i32 1, i32 2
  %663 = load i8*, i8** %662, align 8
  %664 = getelementptr inbounds i8, i8* %663, i64 %661
  %665 = getelementptr inbounds i8, i8* %664, i64 8
  %666 = bitcast i8* %665 to i56*
  %667 = zext i1 %659 to i56
  %668 = load i56, i56* %666, align 1
  %669 = shl nuw nsw i56 %667, 43
  %670 = and i56 %668, -8796093022209
  %671 = or i56 %670, %669
  store i56 %671, i56* %666, align 1
  %672 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 44
  %673 = load i32, i32* %672, align 4
  %674 = icmp ne i32 %673, 0
  %675 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %676 = load i64, i64* %7, align 8
  %677 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %675, i64 0, i32 1, i32 2
  %678 = load i8*, i8** %677, align 8
  %679 = getelementptr inbounds i8, i8* %678, i64 %676
  %680 = getelementptr inbounds i8, i8* %679, i64 8
  %681 = bitcast i8* %680 to i56*
  %682 = zext i1 %674 to i56
  %683 = load i56, i56* %681, align 1
  %684 = shl nuw nsw i56 %682, 44
  %685 = and i56 %683, -17592186044417
  %686 = or i56 %685, %684
  store i56 %686, i56* %681, align 1
  %687 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 45
  %688 = load i32, i32* %687, align 4
  %689 = icmp ne i32 %688, 0
  %690 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %691 = load i64, i64* %7, align 8
  %692 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %690, i64 0, i32 1, i32 2
  %693 = load i8*, i8** %692, align 8
  %694 = getelementptr inbounds i8, i8* %693, i64 %691
  %695 = getelementptr inbounds i8, i8* %694, i64 8
  %696 = bitcast i8* %695 to i56*
  %697 = zext i1 %689 to i56
  %698 = load i56, i56* %696, align 1
  %699 = shl nuw nsw i56 %697, 45
  %700 = and i56 %698, -35184372088833
  %701 = or i56 %700, %699
  store i56 %701, i56* %696, align 1
  %702 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 46
  %703 = load i32, i32* %702, align 4
  %704 = icmp ne i32 %703, 0
  %705 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %706 = load i64, i64* %7, align 8
  %707 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %705, i64 0, i32 1, i32 2
  %708 = load i8*, i8** %707, align 8
  %709 = getelementptr inbounds i8, i8* %708, i64 %706
  %710 = getelementptr inbounds i8, i8* %709, i64 8
  %711 = bitcast i8* %710 to i56*
  %712 = zext i1 %704 to i56
  %713 = load i56, i56* %711, align 1
  %714 = shl nuw nsw i56 %712, 46
  %715 = and i56 %713, -70368744177665
  %716 = or i56 %715, %714
  store i56 %716, i56* %711, align 1
  %717 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 47
  %718 = load i32, i32* %717, align 4
  %719 = icmp ne i32 %718, 0
  %720 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %721 = load i64, i64* %7, align 8
  %722 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %720, i64 0, i32 1, i32 2
  %723 = load i8*, i8** %722, align 8
  %724 = getelementptr inbounds i8, i8* %723, i64 %721
  %725 = getelementptr inbounds i8, i8* %724, i64 8
  %726 = bitcast i8* %725 to i56*
  %727 = zext i1 %719 to i56
  %728 = load i56, i56* %726, align 1
  %729 = shl nuw nsw i56 %727, 47
  %730 = and i56 %728, -140737488355329
  %731 = or i56 %730, %729
  store i56 %731, i56* %726, align 1
  %732 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 48
  %733 = load i32, i32* %732, align 4
  %734 = icmp ne i32 %733, 0
  %735 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %736 = load i64, i64* %7, align 8
  %737 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %735, i64 0, i32 1, i32 2
  %738 = load i8*, i8** %737, align 8
  %739 = getelementptr inbounds i8, i8* %738, i64 %736
  %740 = getelementptr inbounds i8, i8* %739, i64 8
  %741 = bitcast i8* %740 to i56*
  %742 = zext i1 %734 to i56
  %743 = load i56, i56* %741, align 1
  %744 = shl nuw nsw i56 %742, 48
  %745 = and i56 %743, -281474976710657
  %746 = or i56 %745, %744
  store i56 %746, i56* %741, align 1
  %747 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 49
  %748 = load i32, i32* %747, align 4
  %749 = icmp ne i32 %748, 0
  %750 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %751 = load i64, i64* %7, align 8
  %752 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %750, i64 0, i32 1, i32 2
  %753 = load i8*, i8** %752, align 8
  %754 = getelementptr inbounds i8, i8* %753, i64 %751
  %755 = getelementptr inbounds i8, i8* %754, i64 8
  %756 = bitcast i8* %755 to i56*
  %757 = zext i1 %749 to i56
  %758 = load i56, i56* %756, align 1
  %759 = shl nuw nsw i56 %757, 49
  %760 = and i56 %758, -562949953421313
  %761 = or i56 %760, %759
  store i56 %761, i56* %756, align 1
  %762 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 50
  %763 = load i32, i32* %762, align 4
  %764 = icmp ne i32 %763, 0
  %765 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %766 = load i64, i64* %7, align 8
  %767 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %765, i64 0, i32 1, i32 2
  %768 = load i8*, i8** %767, align 8
  %769 = getelementptr inbounds i8, i8* %768, i64 %766
  %770 = getelementptr inbounds i8, i8* %769, i64 8
  %771 = bitcast i8* %770 to i56*
  %772 = zext i1 %764 to i56
  %773 = load i56, i56* %771, align 1
  %774 = shl nuw nsw i56 %772, 50
  %775 = and i56 %773, -1125899906842625
  %776 = or i56 %775, %774
  store i56 %776, i56* %771, align 1
  %777 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 51
  %778 = load i32, i32* %777, align 4
  %779 = icmp ne i32 %778, 0
  %780 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %781 = load i64, i64* %7, align 8
  %782 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %780, i64 0, i32 1, i32 2
  %783 = load i8*, i8** %782, align 8
  %784 = getelementptr inbounds i8, i8* %783, i64 %781
  %785 = getelementptr inbounds i8, i8* %784, i64 8
  %786 = bitcast i8* %785 to i56*
  %787 = zext i1 %779 to i56
  %788 = load i56, i56* %786, align 1
  %789 = shl nuw nsw i56 %787, 51
  %790 = and i56 %788, -2251799813685249
  %791 = or i56 %790, %789
  store i56 %791, i56* %786, align 1
  %792 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 52
  %793 = load i32, i32* %792, align 4
  %794 = icmp ne i32 %793, 0
  %795 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %796 = load i64, i64* %7, align 8
  %797 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %795, i64 0, i32 1, i32 2
  %798 = load i8*, i8** %797, align 8
  %799 = getelementptr inbounds i8, i8* %798, i64 %796
  %800 = getelementptr inbounds i8, i8* %799, i64 8
  %801 = bitcast i8* %800 to i56*
  %802 = zext i1 %794 to i56
  %803 = load i56, i56* %801, align 1
  %804 = shl nuw nsw i56 %802, 52
  %805 = and i56 %803, -4503599627370497
  %806 = or i56 %805, %804
  store i56 %806, i56* %801, align 1
  %807 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 53
  %808 = load i32, i32* %807, align 4
  %809 = icmp ne i32 %808, 0
  %810 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %811 = load i64, i64* %7, align 8
  %812 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %810, i64 0, i32 1, i32 2
  %813 = load i8*, i8** %812, align 8
  %814 = getelementptr inbounds i8, i8* %813, i64 %811
  %815 = getelementptr inbounds i8, i8* %814, i64 8
  %816 = bitcast i8* %815 to i56*
  %817 = zext i1 %809 to i56
  %818 = load i56, i56* %816, align 1
  %819 = shl nuw nsw i56 %817, 53
  %820 = and i56 %818, -9007199254740993
  %821 = or i56 %820, %819
  store i56 %821, i56* %816, align 1
  %822 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 54
  %823 = load i32, i32* %822, align 4
  %824 = icmp ne i32 %823, 0
  %825 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %826 = load i64, i64* %7, align 8
  %827 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %825, i64 0, i32 1, i32 2
  %828 = load i8*, i8** %827, align 8
  %829 = getelementptr inbounds i8, i8* %828, i64 %826
  %830 = getelementptr inbounds i8, i8* %829, i64 8
  %831 = bitcast i8* %830 to i56*
  %832 = zext i1 %824 to i56
  %833 = load i56, i56* %831, align 1
  %834 = shl nuw nsw i56 %832, 54
  %835 = and i56 %833, -18014398509481985
  %836 = or i56 %835, %834
  store i56 %836, i56* %831, align 1
  ret void
}

declare void @_ZN3gpu5mojom8internal29VkPhysicalDeviceFeatures_DataC1Ev(%"class.gpu::mojom::internal::VkPhysicalDeviceFeatures_Data"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal10SerializerIN3gpu5mojom31VkQueueFamilyPropertiesDataViewEK23VkQueueFamilyPropertiesE9SerializeERS6_RNS0_15MessageFragmentINS3_8internal28VkQueueFamilyProperties_DataEEE(%struct.VkQueueFamilyProperties* dereferenceable(24), %"class.mojo::internal::MessageFragment.126"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.mojo::internal::MessageFragment.126", %"class.mojo::internal::MessageFragment.126"* %1, i64 0, i32 0
  %4 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %5 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %4, i64 0, i32 1
  %6 = tail call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %5, i64 32) #12
  %7 = getelementptr inbounds %"class.mojo::internal::MessageFragment.126", %"class.mojo::internal::MessageFragment.126"* %1, i64 0, i32 1
  store i64 %6, i64* %7, align 8
  %8 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %9 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %8, i64 0, i32 1, i32 2
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %6
  %12 = bitcast i8* %11 to %"class.gpu::mojom::internal::VkQueueFamilyProperties_Data"*
  tail call void @_ZN3gpu5mojom8internal28VkQueueFamilyProperties_DataC1Ev(%"class.gpu::mojom::internal::VkQueueFamilyProperties_Data"* %12) #12
  %13 = getelementptr inbounds %struct.VkQueueFamilyProperties, %struct.VkQueueFamilyProperties* %0, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %16 = load i64, i64* %7, align 8
  %17 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %15, i64 0, i32 1, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 %16
  %20 = getelementptr inbounds i8, i8* %19, i64 8
  %21 = bitcast i8* %20 to i32*
  store i32 %14, i32* %21, align 1
  %22 = getelementptr inbounds %struct.VkQueueFamilyProperties, %struct.VkQueueFamilyProperties* %0, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %25 = load i64, i64* %7, align 8
  %26 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %24, i64 0, i32 1, i32 2
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds i8, i8* %27, i64 %25
  %29 = getelementptr inbounds i8, i8* %28, i64 12
  %30 = bitcast i8* %29 to i32*
  store i32 %23, i32* %30, align 1
  %31 = getelementptr inbounds %struct.VkQueueFamilyProperties, %struct.VkQueueFamilyProperties* %0, i64 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %34 = load i64, i64* %7, align 8
  %35 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %33, i64 0, i32 1, i32 2
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %34
  %38 = getelementptr inbounds i8, i8* %37, i64 16
  %39 = bitcast i8* %38 to i32*
  store i32 %32, i32* %39, align 1
  %40 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %41 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %40, i64 0, i32 1
  %42 = tail call i64 @_ZN4mojo8internal6Buffer8AllocateEm(%"class.mojo::internal::Buffer"* %41, i64 24) #12
  %43 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %40, i64 0, i32 1, i32 2
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds i8, i8* %44, i64 %42
  %46 = bitcast i8* %45 to %"class.gpu::mojom::internal::VkExtent3D_Data"*
  tail call void @_ZN3gpu5mojom8internal15VkExtent3D_DataC1Ev(%"class.gpu::mojom::internal::VkExtent3D_Data"* %46) #12
  %47 = getelementptr inbounds %struct.VkQueueFamilyProperties, %struct.VkQueueFamilyProperties* %0, i64 0, i32 3, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = load i8*, i8** %43, align 8
  %50 = getelementptr inbounds i8, i8* %49, i64 %42
  %51 = getelementptr inbounds i8, i8* %50, i64 8
  %52 = bitcast i8* %51 to i32*
  store i32 %48, i32* %52, align 1
  %53 = getelementptr inbounds %struct.VkQueueFamilyProperties, %struct.VkQueueFamilyProperties* %0, i64 0, i32 3, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = load i8*, i8** %43, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %42
  %57 = getelementptr inbounds i8, i8* %56, i64 12
  %58 = bitcast i8* %57 to i32*
  store i32 %54, i32* %58, align 1
  %59 = getelementptr inbounds %struct.VkQueueFamilyProperties, %struct.VkQueueFamilyProperties* %0, i64 0, i32 3, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = load i8*, i8** %43, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 %42
  %63 = getelementptr inbounds i8, i8* %62, i64 16
  %64 = bitcast i8* %63 to i32*
  store i32 %60, i32* %64, align 1
  %65 = load %"class.mojo::Message"*, %"class.mojo::Message"** %3, align 8
  %66 = load i64, i64* %7, align 8
  %67 = getelementptr inbounds %"class.mojo::Message", %"class.mojo::Message"* %65, i64 0, i32 1, i32 2
  %68 = load i8*, i8** %67, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 %66
  %70 = getelementptr inbounds i8, i8* %69, i64 24
  %71 = icmp eq i64 %42, -1
  br i1 %71, label %76, label %72

72:                                               ; preds = %2
  %73 = load i8*, i8** %43, align 8
  %74 = getelementptr inbounds i8, i8* %73, i64 %42
  %75 = bitcast i8* %74 to %"class.gpu::mojom::internal::VkExtent3D_Data"*
  br label %76

76:                                               ; preds = %72, %2
  %77 = phi %"class.gpu::mojom::internal::VkExtent3D_Data"* [ %75, %72 ], [ null, %2 ]
  %78 = bitcast i8* %70 to i64*
  %79 = icmp eq %"class.gpu::mojom::internal::VkExtent3D_Data"* %77, null
  %80 = ptrtoint %"class.gpu::mojom::internal::VkExtent3D_Data"* %77 to i64
  %81 = ptrtoint i8* %70 to i64
  %82 = sub i64 %80, %81
  %83 = select i1 %79, i64 0, i64 %82
  store i64 %83, i64* %78, align 8
  ret void
}

declare void @_ZN3gpu5mojom8internal28VkQueueFamilyProperties_DataC1Ev(%"class.gpu::mojom::internal::VkQueueFamilyProperties_Data"*) unnamed_addr #3

declare void @_ZN3gpu5mojom8internal15VkExtent3D_DataC1Ev(%"class.gpu::mojom::internal::VkExtent3D_Data"*) unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind readonly }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN4mojo8internal22SerializeAsMessageImplIN3gpu5mojom18VulkanInfoDataViewEKNS2_10VulkanInfoEEENS_7MessageEPT0_: argument 0"}
!5 = distinct !{!5, !"_ZN4mojo8internal22SerializeAsMessageImplIN3gpu5mojom18VulkanInfoDataViewEKNS2_10VulkanInfoEEENS_7MessageEPT0_"}
