; ModuleID = '../../base/metrics/user_metrics.cc'
source_filename = "../../base/metrics/user_metrics.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.base::LazyInstance" = type { i64, [8 x i8] }
%"class.base::LazyInstance.9" = type { i64, [24 x i8] }
%"struct.base::UserMetricsAction" = type { i8* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.3", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.3" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback"*, %"class.std::__1::__compressed_pair.4" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.base::RepeatingCallback"* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.11", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr", i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.21" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN20trace_event_internal13AddTraceEventIRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSG_yjySG_OT_ = comdat any

$_ZNK4base9TimeDeltamiES0_ = comdat any

$_ZN4base12LazyInstanceI13scoped_refptrINS_22SingleThreadTaskRunnerEENS_8internal34DestructorAtExitLazyInstanceTraitsIS3_EEE6OnExitEPv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_9TimeTicksEEJS9_SC_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_9TimeTicksEEJS8_SB_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__16vectorIN4base17RepeatingCallbackIFvRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS1_9TimeTicksEEEENS6_ISD_EEE21__push_back_slow_pathIRKSD_EEvOT_ = comdat any

$_ZN4base12LazyInstanceINSt3__16vectorINS_17RepeatingCallbackIFvRKNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_9TimeTicksEEEENS7_ISE_EEEENS_8internal34DestructorAtExitLazyInstanceTraitsISG_EEE6OnExitEPv = comdat any

@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [10 x i8] c"UserEvent\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"action\00", align 1
@_ZN4base12_GLOBAL__N_113g_task_runnerE = internal global %"class.base::LazyInstance" zeroinitializer, align 8
@.str.2 = private unnamed_addr constant [23 x i8] c"RecordComputedActionAt\00", align 1
@.str.3 = private unnamed_addr constant [35 x i8] c"../../base/metrics/user_metrics.cc\00", align 1
@_ZN4base12_GLOBAL__N_111g_callbacksE = internal global %"class.base::LazyInstance.9" zeroinitializer, align 8
@.str.4 = private unnamed_addr constant [23 x i8] c"delta_ != other.delta_\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base12RecordActionERKNS_17UserMetricsActionE(%"struct.base::UserMetricsAction"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #11
  %4 = getelementptr inbounds %"struct.base::UserMetricsAction", %"struct.base::UserMetricsAction"* %0, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = tail call i64 @strlen(i8* %5) #11
  %7 = icmp ugt i64 %6, -17
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %9) #12
  unreachable

10:                                               ; preds = %1
  %11 = icmp ult i64 %6, 23
  br i1 %11, label %21, label %12

12:                                               ; preds = %10
  %13 = add nuw i64 %6, 16
  %14 = and i64 %13, -16
  %15 = tail call i8* @_Znwm(i64 %14) #13
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = or i64 %14, -9223372036854775808
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %6, i64* %19, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %26

21:                                               ; preds = %10
  %22 = trunc i64 %6 to i8
  %23 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  store i8 %22, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %21, %12
  %27 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %23, %21 ], [ %20, %12 ]
  %28 = phi i8* [ %3, %21 ], [ %15, %12 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* align 1 %5, i64 %6, i1 false) #11
  br label %29

29:                                               ; preds = %21, %26
  %30 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %23, %21 ], [ %27, %26 ]
  %31 = phi i8* [ %3, %21 ], [ %28, %26 ]
  %32 = getelementptr inbounds i8, i8* %31, i64 %6
  store i8 0, i8* %32, align 1
  %33 = tail call i64 @_ZN4base9TimeTicks3NowEv() #11
  call void @_ZN4base22RecordComputedActionAtERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS_9TimeTicksE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, i64 %33) #11
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %39) #13
  br label %40

40:                                               ; preds = %29, %37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base20RecordComputedActionERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %2 = tail call i64 @_ZN4base9TimeTicks3NowEv() #11
  tail call void @_ZN4base22RecordComputedActionAtERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS_9TimeTicksE(%"class.std::__1::basic_string"* dereferenceable(24) %0, i64 %2)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base22RecordComputedActionAtERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS_9TimeTicksE(%"class.std::__1::basic_string"* dereferenceable(24), i64) #0 {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 129, i32 0), align 16
  %7 = and i8 %6, 25
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %11, label %9, !prof !2

9:                                                ; preds = %2
  %10 = tail call i64 @_ZN20trace_event_internal13AddTraceEventIRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSG_yjySG_OT_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 129, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), %"class.std::__1::basic_string"* dereferenceable(24) %0)
  br label %11

11:                                               ; preds = %2, %9
  %12 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_113g_task_runnerE, i64 0, i32 0) acquire, align 8
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %19, label %14

14:                                               ; preds = %11
  %15 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_113g_task_runnerE, i64 0, i32 0)) #11
  br i1 %15, label %16, label %17

16:                                               ; preds = %14
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_113g_task_runnerE, i64 0, i32 1, i64 0) to %"class.base::SingleThreadTaskRunner"**), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_113g_task_runnerE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_113g_task_runnerE, i64 0, i32 1, i64 0) to i64), void (i8*)* nonnull @_ZN4base12LazyInstanceI13scoped_refptrINS_22SingleThreadTaskRunnerEENS_8internal34DestructorAtExitLazyInstanceTraitsIS3_EEE6OnExitEPv, i8* bitcast (%"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_113g_task_runnerE to i8*)) #11
  br label %19

17:                                               ; preds = %14
  %18 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_113g_task_runnerE, i64 0, i32 0) acquire, align 8
  br label %19

19:                                               ; preds = %11, %16, %17
  %20 = phi i64 [ %12, %11 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_113g_task_runnerE, i64 0, i32 1, i64 0) to i64), %16 ], [ %18, %17 ]
  %21 = inttoptr i64 %20 to %class.scoped_refptr*
  %22 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %21, i64 0, i32 0
  %23 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %22, align 8
  %24 = icmp eq %"class.base::SingleThreadTaskRunner"* %23, null
  br i1 %24, label %108, label %25

25:                                               ; preds = %19
  %26 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_113g_task_runnerE, i64 0, i32 0) acquire, align 8
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %33, label %28

28:                                               ; preds = %25
  %29 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_113g_task_runnerE, i64 0, i32 0)) #11
  br i1 %29, label %30, label %31

30:                                               ; preds = %28
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_113g_task_runnerE, i64 0, i32 1, i64 0) to %"class.base::SingleThreadTaskRunner"**), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_113g_task_runnerE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_113g_task_runnerE, i64 0, i32 1, i64 0) to i64), void (i8*)* nonnull @_ZN4base12LazyInstanceI13scoped_refptrINS_22SingleThreadTaskRunnerEENS_8internal34DestructorAtExitLazyInstanceTraitsIS3_EEE6OnExitEPv, i8* bitcast (%"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_113g_task_runnerE to i8*)) #11
  br label %33

31:                                               ; preds = %28
  %32 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_113g_task_runnerE, i64 0, i32 0) acquire, align 8
  br label %33

33:                                               ; preds = %25, %30, %31
  %34 = phi i64 [ %26, %25 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_113g_task_runnerE, i64 0, i32 1, i64 0) to i64), %30 ], [ %32, %31 ]
  %35 = inttoptr i64 %34 to %class.scoped_refptr*
  %36 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %35, i64 0, i32 0
  %37 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %36, align 8
  %38 = bitcast %"class.base::SingleThreadTaskRunner"* %37 to %"class.base::SequencedTaskRunner"*
  %39 = bitcast %"class.base::SingleThreadTaskRunner"* %37 to i1 (%"class.base::SequencedTaskRunner"*)***
  %40 = load i1 (%"class.base::SequencedTaskRunner"*)**, i1 (%"class.base::SequencedTaskRunner"*)*** %39, align 8
  %41 = getelementptr inbounds i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %40, i64 5
  %42 = load i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %41, align 8
  %43 = tail call zeroext i1 %42(%"class.base::SequencedTaskRunner"* %38) #11
  br i1 %43, label %80, label %44

44:                                               ; preds = %33
  %45 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_113g_task_runnerE, i64 0, i32 0) acquire, align 8
  %46 = icmp ugt i64 %45, 1
  br i1 %46, label %52, label %47

47:                                               ; preds = %44
  %48 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_113g_task_runnerE, i64 0, i32 0)) #11
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_113g_task_runnerE, i64 0, i32 1, i64 0) to %"class.base::SingleThreadTaskRunner"**), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_113g_task_runnerE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_113g_task_runnerE, i64 0, i32 1, i64 0) to i64), void (i8*)* nonnull @_ZN4base12LazyInstanceI13scoped_refptrINS_22SingleThreadTaskRunnerEENS_8internal34DestructorAtExitLazyInstanceTraitsIS3_EEE6OnExitEPv, i8* bitcast (%"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_113g_task_runnerE to i8*)) #11
  br label %52

50:                                               ; preds = %47
  %51 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_113g_task_runnerE, i64 0, i32 0) acquire, align 8
  br label %52

52:                                               ; preds = %44, %49, %50
  %53 = phi i64 [ %45, %44 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_113g_task_runnerE, i64 0, i32 1, i64 0) to i64), %49 ], [ %51, %50 ]
  %54 = inttoptr i64 %53 to %"class.base::TaskRunner"**
  %55 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %54, align 8
  %56 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %56) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3, i64 0, i64 0), i32 52) #11
  %57 = call i8* @_Znwm(i64 72) #13, !noalias !3
  %58 = bitcast i8* %57 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %58, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_9TimeTicksEEJS9_SC_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_9TimeTicksEEJS8_SB_EE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !3
  %59 = getelementptr inbounds i8, i8* %57, i64 32
  %60 = bitcast i8* %59 to i64*
  store i64 ptrtoint (void (%"class.std::__1::basic_string"*, i64)* @_ZN4base22RecordComputedActionAtERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS_9TimeTicksE to i64), i64* %60, align 8, !noalias !3
  %61 = getelementptr inbounds i8, i8* %57, i64 40
  %62 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1, !noalias !3
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %68, label %66

66:                                               ; preds = %52
  %67 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %67, i64 24, i1 false) #11, !noalias !3
  br label %74

68:                                               ; preds = %52
  %69 = bitcast i8* %61 to %"class.std::__1::basic_string"*
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8, !noalias !3
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %73 = load i64, i64* %72, align 8, !noalias !3
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %69, i8* %71, i64 %73) #11, !noalias !3
  br label %74

74:                                               ; preds = %66, %68
  %75 = getelementptr inbounds i8, i8* %57, i64 64
  %76 = bitcast i8* %75 to i64*
  store i64 %1, i64* %76, align 8, !noalias !3
  %77 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %57, i8** %77, align 8, !alias.scope !3
  %78 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %55, %"class.base::Location"* nonnull dereferenceable(32) %4, %"class.base::OnceCallback"* nonnull %5) #11
  %79 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %79) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %56) #11
  br label %108

80:                                               ; preds = %33
  %81 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN4base12_GLOBAL__N_111g_callbacksE, i64 0, i32 0) acquire, align 8
  %82 = icmp ugt i64 %81, 1
  br i1 %82, label %88, label %83

83:                                               ; preds = %80
  %84 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN4base12_GLOBAL__N_111g_callbacksE, i64 0, i32 0)) #11
  br i1 %84, label %85, label %86

85:                                               ; preds = %83
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN4base12_GLOBAL__N_111g_callbacksE, i64 0, i32 1, i64 0), i8 0, i64 24, i1 false) #11
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN4base12_GLOBAL__N_111g_callbacksE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN4base12_GLOBAL__N_111g_callbacksE, i64 0, i32 1, i64 0) to i64), void (i8*)* nonnull @_ZN4base12LazyInstanceINSt3__16vectorINS_17RepeatingCallbackIFvRKNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_9TimeTicksEEEENS7_ISE_EEEENS_8internal34DestructorAtExitLazyInstanceTraitsISG_EEE6OnExitEPv, i8* bitcast (%"class.base::LazyInstance.9"* @_ZN4base12_GLOBAL__N_111g_callbacksE to i8*)) #11
  br label %88

86:                                               ; preds = %83
  %87 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN4base12_GLOBAL__N_111g_callbacksE, i64 0, i32 0) acquire, align 8
  br label %88

88:                                               ; preds = %80, %85, %86
  %89 = phi i64 [ %81, %80 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN4base12_GLOBAL__N_111g_callbacksE, i64 0, i32 1, i64 0) to i64), %85 ], [ %87, %86 ]
  %90 = inttoptr i64 %89 to %"class.std::__1::vector"*
  %91 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %90, i64 0, i32 0, i32 0
  %92 = load %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback"** %91, align 8
  %93 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %90, i64 0, i32 0, i32 1
  %94 = load %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback"** %93, align 8
  %95 = icmp eq %"class.base::RepeatingCallback"* %92, %94
  br i1 %95, label %108, label %96

96:                                               ; preds = %88
  %97 = bitcast %"class.base::TimeTicks"* %3 to i8*
  %98 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  br label %99

99:                                               ; preds = %96, %99
  %100 = phi %"class.base::RepeatingCallback"* [ %92, %96 ], [ %106, %99 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97)
  store i64 %1, i64* %98, align 8
  %101 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %100, i64 0, i32 0, i32 0, i32 0, i32 0
  %102 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %101, align 8
  %103 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %102, i64 0, i32 1
  %104 = bitcast void ()** %103 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*, %"class.base::TimeTicks"*)**
  %105 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*, %"class.base::TimeTicks"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*, %"class.base::TimeTicks"*)** %104, align 8
  call void %105(%"class.base::internal::BindStateBase"* %102, %"class.std::__1::basic_string"* dereferenceable(24) %0, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97)
  %106 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %100, i64 1
  %107 = icmp eq %"class.base::RepeatingCallback"* %106, %94
  br i1 %107, label %108, label %99

108:                                              ; preds = %99, %88, %19, %74
  ret void
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base25RecordComputedActionSinceERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS_9TimeDeltaE(%"class.std::__1::basic_string"* dereferenceable(24), i64) local_unnamed_addr #0 {
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = tail call i64 @_ZN4base9TimeTicks3NowEv() #11
  %5 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  store i64 %4, i64* %6, align 8
  %7 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %3, i64 %1) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  call void @_ZN4base22RecordComputedActionAtERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS_9TimeTicksE(%"class.std::__1::basic_string"* dereferenceable(24) %0, i64 %7)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSG_yjySG_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #11
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 7, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0
  %20 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %27 = select i1 %23, i8* %25, i8* %26
  %28 = bitcast %"union.base::trace_event::TraceValue"* %19 to i8**
  store i8* %27, i8** %28, align 8
  %29 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #11
  %30 = load i8, i8* %16, align 8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %66, label %32

32:                                               ; preds = %9, %61
  %33 = phi i64 [ %62, %61 ], [ 0, %9 ]
  %34 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 8
  br i1 %36, label %37, label %48

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %33
  %39 = bitcast %"union.base::trace_event::TraceValue"* %38 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %40 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %39, align 8
  %41 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %40, null
  br i1 %41, label %61, label %42

42:                                               ; preds = %37
  %43 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %40 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %44 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %44, i64 1
  %46 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %45, align 8
  call void %46(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %40) #11
  %47 = load i8, i8* %34, align 1
  br label %48

48:                                               ; preds = %42, %32
  %49 = phi i8 [ %35, %32 ], [ %47, %42 ]
  %50 = icmp eq i8 %49, 9
  br i1 %50, label %51, label %61

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %33
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.protozero::HeapBuffered"**
  %54 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %53, align 8
  %55 = icmp eq %"class.protozero::HeapBuffered"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %57) #11
  %58 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %58) #11
  %59 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %59) #11
  %60 = bitcast %"class.protozero::HeapBuffered"* %54 to i8*
  call void @_ZdlPv(i8* %60) #13
  br label %61

61:                                               ; preds = %56, %51, %48, %37
  %62 = add nuw nsw i64 %33, 1
  %63 = load i8, i8* %16, align 8
  %64 = zext i8 %63 to i64
  %65 = icmp ult i64 %62, %64
  br i1 %65, label %32, label %66

66:                                               ; preds = %61, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  ret i64 %29
}

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base17AddActionCallbackERKNS_17RepeatingCallbackIFvRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_9TimeTicksEEEE(%"class.base::RepeatingCallback"* dereferenceable(8)) local_unnamed_addr #0 {
  %2 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN4base12_GLOBAL__N_111g_callbacksE, i64 0, i32 0) acquire, align 8
  %3 = icmp ugt i64 %2, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN4base12_GLOBAL__N_111g_callbacksE, i64 0, i32 0)) #11
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN4base12_GLOBAL__N_111g_callbacksE, i64 0, i32 1, i64 0), i8 0, i64 24, i1 false) #11
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN4base12_GLOBAL__N_111g_callbacksE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN4base12_GLOBAL__N_111g_callbacksE, i64 0, i32 1, i64 0) to i64), void (i8*)* nonnull @_ZN4base12LazyInstanceINSt3__16vectorINS_17RepeatingCallbackIFvRKNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_9TimeTicksEEEENS7_ISE_EEEENS_8internal34DestructorAtExitLazyInstanceTraitsISG_EEE6OnExitEPv, i8* bitcast (%"class.base::LazyInstance.9"* @_ZN4base12_GLOBAL__N_111g_callbacksE to i8*)) #11
  br label %9

7:                                                ; preds = %4
  %8 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN4base12_GLOBAL__N_111g_callbacksE, i64 0, i32 0) acquire, align 8
  br label %9

9:                                                ; preds = %1, %6, %7
  %10 = phi i64 [ %2, %1 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN4base12_GLOBAL__N_111g_callbacksE, i64 0, i32 1, i64 0) to i64), %6 ], [ %8, %7 ]
  %11 = inttoptr i64 %10 to %"class.std::__1::vector"*
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 1
  %13 = load %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback"** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = load %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback"** %14, align 8
  %16 = icmp eq %"class.base::RepeatingCallback"* %13, %15
  br i1 %16, label %23, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %13, i64 0, i32 0
  %19 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %18, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %19) #11
  %20 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %13, i64 1
  %21 = ptrtoint %"class.base::RepeatingCallback"* %20 to i64
  %22 = bitcast %"class.base::RepeatingCallback"** %12 to i64*
  store i64 %21, i64* %22, align 8
  br label %24

23:                                               ; preds = %9
  tail call void @_ZNSt3__16vectorIN4base17RepeatingCallbackIFvRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS1_9TimeTicksEEEENS6_ISD_EEE21__push_back_slow_pathIRKSD_EEvOT_(%"class.std::__1::vector"* %11, %"class.base::RepeatingCallback"* dereferenceable(8) %0) #11
  br label %24

24:                                               ; preds = %17, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base20RemoveActionCallbackERKNS_17RepeatingCallbackIFvRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_9TimeTicksEEEE(%"class.base::RepeatingCallback"* dereferenceable(8)) local_unnamed_addr #0 {
  %2 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN4base12_GLOBAL__N_111g_callbacksE, i64 0, i32 0) acquire, align 8
  %3 = icmp ugt i64 %2, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN4base12_GLOBAL__N_111g_callbacksE, i64 0, i32 0)) #11
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN4base12_GLOBAL__N_111g_callbacksE, i64 0, i32 1, i64 0), i8 0, i64 24, i1 false) #11
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN4base12_GLOBAL__N_111g_callbacksE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN4base12_GLOBAL__N_111g_callbacksE, i64 0, i32 1, i64 0) to i64), void (i8*)* nonnull @_ZN4base12LazyInstanceINSt3__16vectorINS_17RepeatingCallbackIFvRKNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_9TimeTicksEEEENS7_ISE_EEEENS_8internal34DestructorAtExitLazyInstanceTraitsISG_EEE6OnExitEPv, i8* bitcast (%"class.base::LazyInstance.9"* @_ZN4base12_GLOBAL__N_111g_callbacksE to i8*)) #11
  br label %9

7:                                                ; preds = %4
  %8 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN4base12_GLOBAL__N_111g_callbacksE, i64 0, i32 0) acquire, align 8
  br label %9

9:                                                ; preds = %1, %6, %7
  %10 = phi i64 [ %2, %1 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.9", %"class.base::LazyInstance.9"* @_ZN4base12_GLOBAL__N_111g_callbacksE, i64 0, i32 1, i64 0) to i64), %6 ], [ %8, %7 ]
  %11 = inttoptr i64 %10 to %"class.std::__1::vector"*
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 1
  %13 = bitcast %"class.base::RepeatingCallback"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = inttoptr i64 %10 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %14, %16
  br i1 %17, label %61, label %18

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %0, i64 0, i32 0, i32 0
  br label %21

21:                                               ; preds = %18, %54
  %22 = phi i64 [ 0, %18 ], [ %55, %54 ]
  %23 = load %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback"** %19, align 8
  %24 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %23, i64 %22, i32 0, i32 0
  %25 = tail call zeroext i1 @_ZNK4base8internal12CallbackBase14EqualsInternalERKS1_(%"class.base::internal::CallbackBase"* %24, %"class.base::internal::CallbackBase"* dereferenceable(8) %20) #11
  br i1 %25, label %26, label %54

26:                                               ; preds = %21
  %27 = load %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback"** %19, align 8
  %28 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %27, i64 %22
  %29 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %28, i64 1
  %30 = load %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback"** %12, align 8
  %31 = icmp eq %"class.base::RepeatingCallback"* %29, %30
  br i1 %31, label %44, label %32

32:                                               ; preds = %26, %32
  %33 = phi %"class.base::RepeatingCallback"* [ %39, %32 ], [ %28, %26 ]
  %34 = phi %"class.base::RepeatingCallback"* [ %38, %32 ], [ %29, %26 ]
  %35 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %33, i64 0, i32 0
  %36 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %34, i64 0, i32 0
  %37 = tail call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"* %35, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %36) #11
  %38 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %34, i64 1
  %39 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %33, i64 1
  %40 = icmp eq %"class.base::RepeatingCallback"* %38, %30
  br i1 %40, label %41, label %32

41:                                               ; preds = %32
  %42 = load %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback"** %12, align 8
  %43 = icmp eq %"class.base::RepeatingCallback"* %42, %39
  br i1 %43, label %52, label %44

44:                                               ; preds = %41, %26
  %45 = phi %"class.base::RepeatingCallback"* [ %39, %41 ], [ %28, %26 ]
  %46 = phi %"class.base::RepeatingCallback"* [ %42, %41 ], [ %29, %26 ]
  br label %47

47:                                               ; preds = %47, %44
  %48 = phi %"class.base::RepeatingCallback"* [ %49, %47 ], [ %46, %44 ]
  %49 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %48, i64 -1
  %50 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %49, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %50) #11
  %51 = icmp eq %"class.base::RepeatingCallback"* %49, %45
  br i1 %51, label %52, label %47

52:                                               ; preds = %47, %41
  %53 = phi %"class.base::RepeatingCallback"* [ %39, %41 ], [ %45, %47 ]
  store %"class.base::RepeatingCallback"* %53, %"class.base::RepeatingCallback"** %12, align 8
  br label %61

54:                                               ; preds = %21
  %55 = add nuw i64 %22, 1
  %56 = load i64, i64* %13, align 8
  %57 = load i64, i64* %15, align 8
  %58 = sub i64 %56, %57
  %59 = ashr exact i64 %58, 3
  %60 = icmp ult i64 %55, %59
  br i1 %60, label %21, label %61

61:                                               ; preds = %54, %9, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base25SetRecordActionTaskRunnerE13scoped_refptrINS_22SingleThreadTaskRunnerEE(%"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #0 {
  %2 = icmp eq %"class.base::SingleThreadTaskRunner"* %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = atomicrmw add i32* %4, i32 1 monotonic
  br label %6

6:                                                ; preds = %1, %3
  %7 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_113g_task_runnerE, i64 0, i32 0) acquire, align 8
  %8 = icmp ugt i64 %7, 1
  br i1 %8, label %14, label %9

9:                                                ; preds = %6
  %10 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_113g_task_runnerE, i64 0, i32 0)) #11
  br i1 %10, label %11, label %12

11:                                               ; preds = %9
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_113g_task_runnerE, i64 0, i32 1, i64 0) to %"class.base::SingleThreadTaskRunner"**), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_113g_task_runnerE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_113g_task_runnerE, i64 0, i32 1, i64 0) to i64), void (i8*)* nonnull @_ZN4base12LazyInstanceI13scoped_refptrINS_22SingleThreadTaskRunnerEENS_8internal34DestructorAtExitLazyInstanceTraitsIS3_EEE6OnExitEPv, i8* bitcast (%"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_113g_task_runnerE to i8*)) #11
  br label %14

12:                                               ; preds = %9
  %13 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_113g_task_runnerE, i64 0, i32 0) acquire, align 8
  br label %14

14:                                               ; preds = %6, %11, %12
  %15 = phi i64 [ %7, %6 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_113g_task_runnerE, i64 0, i32 1, i64 0) to i64), %11 ], [ %13, %12 ]
  %16 = inttoptr i64 %15 to %class.scoped_refptr*
  %17 = ptrtoint %"class.base::SingleThreadTaskRunner"* %0 to i64
  %18 = inttoptr i64 %15 to i64*
  %19 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %16, i64 0, i32 0
  %20 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %19, align 8
  store i64 %17, i64* %18, align 8
  %21 = icmp eq %"class.base::SingleThreadTaskRunner"* %20, null
  br i1 %21, label %30, label %22

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %20, i64 0, i32 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw sub i32* %24, i32 1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %30

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %23, i64 -2
  %29 = bitcast %"class.base::RefCountedThreadSafe"* %28 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %29) #11
  br label %30

30:                                               ; preds = %14, %22, %27
  br i1 %2, label %39, label %31

31:                                               ; preds = %30
  %32 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %0, i64 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw sub i32* %33, i32 1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %39

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %32, i64 -2
  %38 = bitcast %"class.base::RefCountedThreadSafe"* %37 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %38) #11
  br label %39

39:                                               ; preds = %30, %31, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::SingleThreadTaskRunner"* @_ZN4base25GetRecordActionTaskRunnerEv() local_unnamed_addr #0 {
  %1 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_113g_task_runnerE, i64 0, i32 0) monotonic, align 8
  %2 = icmp eq i64 %1, 0
  br i1 %2, label %20, label %3

3:                                                ; preds = %0
  %4 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_113g_task_runnerE, i64 0, i32 0) acquire, align 8
  %5 = icmp ugt i64 %4, 1
  br i1 %5, label %11, label %6

6:                                                ; preds = %3
  %7 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_113g_task_runnerE, i64 0, i32 0)) #11
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_113g_task_runnerE, i64 0, i32 1, i64 0) to %"class.base::SingleThreadTaskRunner"**), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_113g_task_runnerE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_113g_task_runnerE, i64 0, i32 1, i64 0) to i64), void (i8*)* nonnull @_ZN4base12LazyInstanceI13scoped_refptrINS_22SingleThreadTaskRunnerEENS_8internal34DestructorAtExitLazyInstanceTraitsIS3_EEE6OnExitEPv, i8* bitcast (%"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_113g_task_runnerE to i8*)) #11
  br label %11

9:                                                ; preds = %6
  %10 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_113g_task_runnerE, i64 0, i32 0) acquire, align 8
  br label %11

11:                                               ; preds = %3, %8, %9
  %12 = phi i64 [ %4, %3 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base12_GLOBAL__N_113g_task_runnerE, i64 0, i32 1, i64 0) to i64), %8 ], [ %10, %9 ]
  %13 = inttoptr i64 %12 to %class.scoped_refptr*
  %14 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %13, i64 0, i32 0
  %15 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %14, align 8
  %16 = icmp eq %"class.base::SingleThreadTaskRunner"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %15, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 1 monotonic
  br label %20

20:                                               ; preds = %0, %17, %11
  %21 = phi %"class.base::SingleThreadTaskRunner"* [ null, %11 ], [ %15, %17 ], [ null, %0 ]
  ret %"class.base::SingleThreadTaskRunner"* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = add i64 %1, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %1, -1
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %10, i64 %1) #11
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !8
  ret i64 %16

17:                                               ; preds = %2
  %18 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i64 %21, %1
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %19, align 8
  br label %34

25:                                               ; preds = %17
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #11
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %26, i8* %27) #11
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %19, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i32 387, %"class.logging::CheckOpResult"* nonnull %4) #11
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #11
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  %35 = icmp slt i64 %1, 0
  %36 = select i1 %35, i64 9223372036854775807, i64 -9223372036854775808
  ret i64 %36
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #5

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12LazyInstanceI13scoped_refptrINS_22SingleThreadTaskRunnerEENS_8internal34DestructorAtExitLazyInstanceTraitsIS3_EEE6OnExitEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to i64*
  %3 = load atomic i64, i64* %2 monotonic, align 8
  %4 = inttoptr i64 %3 to %class.scoped_refptr*
  %5 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %4, i64 0, i32 0
  %6 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %5, align 8
  %7 = icmp eq %"class.base::SingleThreadTaskRunner"* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %6, i64 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %14 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %15) #11
  br label %16

16:                                               ; preds = %1, %8, %13
  store atomic volatile i64 0, i64* %2 monotonic, align 8
  ret void
}

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #2

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_9TimeTicksEEJS9_SC_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = bitcast %"class.base::internal::BindStateBase"* %2 to void (%"class.std::__1::basic_string"*, i64)**
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.std::__1::basic_string"*
  %6 = load void (%"class.std::__1::basic_string"*, i64)*, void (%"class.std::__1::basic_string"*, i64)** %3, align 8
  %7 = getelementptr inbounds void ()*, void ()** %4, i64 3
  %8 = bitcast void ()** %7 to i64*
  %9 = load i64, i64* %8, align 8
  tail call void %6(%"class.std::__1::basic_string"* dereferenceable(24) %5, i64 %9) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_9TimeTicksEEJS8_SB_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %14, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = bitcast void ()** %4 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZdlPv(i8* %11) #13
  br label %12

12:                                               ; preds = %3, %9
  %13 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #13
  br label %14

14:                                               ; preds = %12, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base17RepeatingCallbackIFvRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS1_9TimeTicksEEEENS6_ISD_EEE21__push_back_slow_pathIRKSD_EEvOT_(%"class.std::__1::vector"*, %"class.base::RepeatingCallback"* dereferenceable(8)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.base::RepeatingCallback"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.base::RepeatingCallback"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #13
  %33 = bitcast i8* %32 to %"class.base::RepeatingCallback"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.base::RepeatingCallback"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %36, i64 %9
  %38 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %36, i64 %35
  %39 = ptrtoint %"class.base::RepeatingCallback"* %38 to i64
  %40 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %37, i64 0, i32 0
  %41 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %40, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %41) #11
  %42 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %37, i64 1
  %43 = ptrtoint %"class.base::RepeatingCallback"* %42 to i64
  %44 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %45 = load %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback"** %44, align 8
  %46 = ptrtoint %"class.base::RepeatingCallback"* %45 to i64
  %47 = load %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback"** %3, align 8
  %48 = icmp eq %"class.base::RepeatingCallback"* %47, %45
  br i1 %48, label %130, label %49

49:                                               ; preds = %34
  %50 = getelementptr %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %47, i64 -1, i32 0, i32 0, i32 0, i32 0
  %51 = ptrtoint %"class.base::internal::BindStateBase"** %50 to i64
  %52 = sub i64 %51, %46
  %53 = lshr i64 %52, 3
  %54 = add nuw nsw i64 %53, 1
  %55 = and i64 %54, 7
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %49, %57
  %58 = phi %"class.base::RepeatingCallback"* [ %61, %57 ], [ %37, %49 ]
  %59 = phi %"class.base::RepeatingCallback"* [ %62, %57 ], [ %47, %49 ]
  %60 = phi i64 [ %67, %57 ], [ %55, %49 ]
  %61 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %58, i64 -1
  %62 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %59, i64 -1
  %63 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  %64 = bitcast %"class.base::RepeatingCallback"* %62 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.base::RepeatingCallback"* %61 to i64*
  store i64 %65, i64* %66, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %63, align 8
  %67 = add i64 %60, -1
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %57, !llvm.loop !9

69:                                               ; preds = %57, %49
  %70 = phi %"class.base::RepeatingCallback"* [ undef, %49 ], [ %61, %57 ]
  %71 = phi %"class.base::RepeatingCallback"* [ %37, %49 ], [ %61, %57 ]
  %72 = phi %"class.base::RepeatingCallback"* [ %47, %49 ], [ %62, %57 ]
  %73 = icmp ult i64 %52, 56
  br i1 %73, label %126, label %74

74:                                               ; preds = %69, %74
  %75 = phi %"class.base::RepeatingCallback"* [ %119, %74 ], [ %71, %69 ]
  %76 = phi %"class.base::RepeatingCallback"* [ %120, %74 ], [ %72, %69 ]
  %77 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %75, i64 -1
  %78 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %76, i64 -1
  %79 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %78, i64 0, i32 0, i32 0, i32 0, i32 0
  %80 = bitcast %"class.base::RepeatingCallback"* %78 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.base::RepeatingCallback"* %77 to i64*
  store i64 %81, i64* %82, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %79, align 8
  %83 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %75, i64 -2
  %84 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %76, i64 -2
  %85 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %84, i64 0, i32 0, i32 0, i32 0, i32 0
  %86 = bitcast %"class.base::RepeatingCallback"* %84 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.base::RepeatingCallback"* %83 to i64*
  store i64 %87, i64* %88, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %85, align 8
  %89 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %75, i64 -3
  %90 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %76, i64 -3
  %91 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %90, i64 0, i32 0, i32 0, i32 0, i32 0
  %92 = bitcast %"class.base::RepeatingCallback"* %90 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.base::RepeatingCallback"* %89 to i64*
  store i64 %93, i64* %94, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %91, align 8
  %95 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %75, i64 -4
  %96 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %76, i64 -4
  %97 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = bitcast %"class.base::RepeatingCallback"* %96 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.base::RepeatingCallback"* %95 to i64*
  store i64 %99, i64* %100, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %97, align 8
  %101 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %75, i64 -5
  %102 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %76, i64 -5
  %103 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %102, i64 0, i32 0, i32 0, i32 0, i32 0
  %104 = bitcast %"class.base::RepeatingCallback"* %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %"class.base::RepeatingCallback"* %101 to i64*
  store i64 %105, i64* %106, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %103, align 8
  %107 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %75, i64 -6
  %108 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %76, i64 -6
  %109 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %108, i64 0, i32 0, i32 0, i32 0, i32 0
  %110 = bitcast %"class.base::RepeatingCallback"* %108 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast %"class.base::RepeatingCallback"* %107 to i64*
  store i64 %111, i64* %112, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %109, align 8
  %113 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %75, i64 -7
  %114 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %76, i64 -7
  %115 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  %116 = bitcast %"class.base::RepeatingCallback"* %114 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %"class.base::RepeatingCallback"* %113 to i64*
  store i64 %117, i64* %118, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %115, align 8
  %119 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %75, i64 -8
  %120 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %76, i64 -8
  %121 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  %122 = bitcast %"class.base::RepeatingCallback"* %120 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.base::RepeatingCallback"* %119 to i64*
  store i64 %123, i64* %124, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %121, align 8
  %125 = icmp eq %"class.base::RepeatingCallback"* %120, %45
  br i1 %125, label %126, label %74

126:                                              ; preds = %74, %69
  %127 = phi %"class.base::RepeatingCallback"* [ %70, %69 ], [ %119, %74 ]
  %128 = load i64, i64* %6, align 8
  %129 = load %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback"** %3, align 8
  br label %130

130:                                              ; preds = %34, %126
  %131 = phi %"class.base::RepeatingCallback"* [ %129, %126 ], [ %45, %34 ]
  %132 = phi %"class.base::RepeatingCallback"* [ %127, %126 ], [ %37, %34 ]
  %133 = phi i64 [ %128, %126 ], [ %46, %34 ]
  %134 = ptrtoint %"class.base::RepeatingCallback"* %132 to i64
  store i64 %134, i64* %6, align 8
  store i64 %43, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %135 = inttoptr i64 %133 to %"class.base::RepeatingCallback"*
  %136 = icmp eq %"class.base::RepeatingCallback"* %131, %135
  br i1 %136, label %142, label %137

137:                                              ; preds = %130, %137
  %138 = phi %"class.base::RepeatingCallback"* [ %139, %137 ], [ %131, %130 ]
  %139 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %138, i64 -1
  %140 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %139, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %140) #11
  %141 = icmp eq %"class.base::RepeatingCallback"* %139, %135
  br i1 %141, label %142, label %137

142:                                              ; preds = %137, %130
  %143 = icmp eq i64 %133, 0
  br i1 %143, label %146, label %144

144:                                              ; preds = %142
  %145 = inttoptr i64 %133 to i8*
  tail call void @_ZdlPv(i8* %145) #13
  br label %146

146:                                              ; preds = %142, %144
  ret void
}

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12LazyInstanceINSt3__16vectorINS_17RepeatingCallbackIFvRKNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_9TimeTicksEEEENS7_ISE_EEEENS_8internal34DestructorAtExitLazyInstanceTraitsISG_EEE6OnExitEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to i64*
  %3 = load atomic i64, i64* %2 monotonic, align 8
  %4 = inttoptr i64 %3 to %"class.std::__1::vector"*
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback"** %5, align 8
  %7 = icmp eq %"class.base::RepeatingCallback"* %6, null
  br i1 %7, label %23, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.base::RepeatingCallback"* %6 to i8*
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %11 = load %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback"** %10, align 8
  %12 = icmp eq %"class.base::RepeatingCallback"* %11, %6
  br i1 %12, label %21, label %13

13:                                               ; preds = %8, %13
  %14 = phi %"class.base::RepeatingCallback"* [ %15, %13 ], [ %11, %8 ]
  %15 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %14, i64 -1
  %16 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %15, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %16) #11
  %17 = icmp eq %"class.base::RepeatingCallback"* %15, %6
  br i1 %17, label %18, label %13

18:                                               ; preds = %13
  %19 = inttoptr i64 %3 to i8**
  %20 = load i8*, i8** %19, align 8
  br label %21

21:                                               ; preds = %18, %8
  %22 = phi i8* [ %20, %18 ], [ %9, %8 ]
  store %"class.base::RepeatingCallback"* %6, %"class.base::RepeatingCallback"** %10, align 8
  tail call void @_ZdlPv(i8* %22) #13
  br label %23

23:                                               ; preds = %1, %21
  store atomic volatile i64 0, i64* %2 monotonic, align 8
  ret void
}

declare zeroext i1 @_ZNK4base8internal12CallbackBase14EqualsInternalERKS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) local_unnamed_addr #4

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_9TimeTicksEEJSB_RSC_EEEDcOT0_DpOT1_: argument 0"}
!5 = distinct !{!5, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_9TimeTicksEEJSB_RSC_EEEDcOT0_DpOT1_"}
!6 = distinct !{!6, !7, !"_ZN4base8BindOnceIPFvRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_9TimeTicksEEJS9_RSA_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_: argument 0"}
!7 = distinct !{!7, !"_ZN4base8BindOnceIPFvRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_9TimeTicksEEJS9_RSA_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_"}
!8 = !{!"branch_weights", i32 1, i32 2000}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
