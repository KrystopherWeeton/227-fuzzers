; ModuleID = '../../content/common/set_process_title_linux.cc'
source_filename = "../../content/common/set_process_title_linux.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::NoDestructor" = type { [24 x i8] }
%"class.base::NoDestructor.6" = type { [24 x i8] }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }

@_ZL12g_orig_argv0 = internal unnamed_addr global i8* null, align 8
@_ZL10g_envp_end = internal unnamed_addr global i8* null, align 8
@_ZL12g_argv_start = internal unnamed_addr global i8* null, align 8
@_ZZ12setproctitlePKczE12buggy_kernel = internal global i8 0, align 1
@_ZGVZ12setproctitlePKczE12buggy_kernel = internal global i64 0, align 8
@.str = private unnamed_addr constant [4 x i8] c"%s \00", align 1
@_ZL10g_argv_end = internal unnamed_addr global i8* null, align 8
@_ZZ17setproctitle_initPPKcE11init_called = internal unnamed_addr global i1 false, align 1
@environ = external local_unnamed_addr global i8**, align 8
@_ZZ17setproctitle_initPPKcE12environ_copy = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZ17setproctitle_initPPKcE12environ_copy = internal global i64 0, align 8
@_ZZ17setproctitle_initPPKcE13argv0_storage = internal global %"class.base::NoDestructor.6" zeroinitializer, align 8
@_ZGVZ17setproctitle_initPPKcE13argv0_storage = internal global i64 0, align 8
@.str.1 = private unnamed_addr constant [19 x i8] c"/proc/self/cmdline\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z12setproctitlePKcz(i8*, ...) local_unnamed_addr #0 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.base::FilePath", align 8
  %4 = alloca [1 x %struct.__va_list_tag], align 16
  %5 = bitcast [1 x %struct.__va_list_tag]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #3
  %6 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %4, i64 0, i64 0
  %7 = bitcast [1 x %struct.__va_list_tag]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 24, i1 false)
  %8 = load i8*, i8** @_ZL12g_orig_argv0, align 8
  %9 = icmp ne i8* %8, null
  %10 = icmp ne i8* %0, null
  %11 = and i1 %10, %9
  br i1 %11, label %12, label %88

12:                                               ; preds = %1
  %13 = load i64, i64* bitcast (i8** @_ZL10g_envp_end to i64*), align 8
  %14 = load i64, i64* bitcast (i8** @_ZL12g_argv_start to i64*), align 8
  %15 = sub i64 %13, %14
  %16 = add nsw i64 %15, -1
  %17 = load atomic i8, i8* bitcast (i64* @_ZGVZ12setproctitlePKczE12buggy_kernel to i8*) acquire, align 8
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %53, !prof !2

19:                                               ; preds = %12
  %20 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZ12setproctitlePKczE12buggy_kernel) #3
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %53, label %22

22:                                               ; preds = %19
  %23 = load i8*, i8** @_ZL12g_argv_start, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %23, i8 0, i64 %15, i1 false) #3
  %24 = load i8*, i8** @_ZL10g_argv_end, align 8
  %25 = getelementptr inbounds i8, i8* %24, i64 -1
  store i8 46, i8* %25, align 1
  %26 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #3
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 24, i1 false) #3
  %28 = bitcast %"class.base::FilePath"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #3
  call void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0), i64 18) #3
  %29 = call zeroext i1 @_ZN4base16ReadFileToStringERKNS_8FilePathEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.base::FilePath"* nonnull dereferenceable(24) %3, %"class.std::__1::basic_string"* nonnull %2) #3
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %3) #3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #3
  br i1 %29, label %34, label %30

30:                                               ; preds = %22
  %31 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  br label %45

34:                                               ; preds = %22
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  %40 = load i64, i64* %35, align 8
  %41 = zext i8 %38 to i64
  %42 = select i1 %39, i64 %40, i64 %41
  %43 = icmp ugt i64 %42, 1
  %44 = zext i1 %43 to i8
  br label %45

45:                                               ; preds = %34, %30
  %46 = phi i8 [ %38, %34 ], [ %33, %30 ]
  %47 = phi i8 [ %44, %34 ], [ 0, %30 ]
  %48 = icmp slt i8 %46, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %45
  %50 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %50) #14
  br label %51

51:                                               ; preds = %45, %49
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #3
  store i8 %47, i8* @_ZZ12setproctitlePKczE12buggy_kernel, align 1
  %52 = call {}* @llvm.invariant.start.p0i8(i64 1, i8* nonnull @_ZZ12setproctitlePKczE12buggy_kernel)
  call void @__cxa_guard_release(i64* nonnull @_ZGVZ12setproctitlePKczE12buggy_kernel) #3
  br label %53

53:                                               ; preds = %19, %51, %12
  %54 = load i8*, i8** @_ZL12g_argv_start, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %54, i8 0, i64 %15, i1 false)
  call void @llvm.va_start(i8* nonnull %5)
  %55 = load i8, i8* %0, align 1
  %56 = icmp eq i8 %55, 45
  br i1 %56, label %57, label %62

57:                                               ; preds = %53
  %58 = getelementptr inbounds i8, i8* %0, i64 1
  %59 = call i64 @llvm.objectsize.i64.p0i8(i8* %54, i1 false, i1 true, i1 false) #3
  %60 = call i32 @__vsnprintf_chk(i8* %54, i64 %16, i32 1, i64 %59, i8* %58, %struct.__va_list_tag* nonnull %6) #3
  %61 = sext i32 %60 to i64
  br label %75

62:                                               ; preds = %53
  %63 = load i8*, i8** @_ZL12g_orig_argv0, align 8
  %64 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %54, i64 %16, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i8* %63) #3
  %65 = sext i32 %64 to i64
  %66 = icmp ugt i64 %16, %65
  br i1 %66, label %67, label %75

67:                                               ; preds = %62
  %68 = load i8*, i8** @_ZL12g_argv_start, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 %65
  %70 = sub i64 %16, %65
  %71 = call i64 @llvm.objectsize.i64.p0i8(i8* %69, i1 false, i1 true, i1 false) #3
  %72 = call i32 @__vsnprintf_chk(i8* %69, i64 %70, i32 1, i64 %71, i8* nonnull %0, %struct.__va_list_tag* nonnull %6) #3
  %73 = sext i32 %72 to i64
  %74 = add nsw i64 %73, %65
  br label %75

75:                                               ; preds = %62, %67, %57
  %76 = phi i64 [ %61, %57 ], [ %74, %67 ], [ %65, %62 ]
  call void @llvm.va_end(i8* nonnull %5)
  %77 = load i8*, i8** @_ZL10g_argv_end, align 8
  %78 = load i8, i8* @_ZZ12setproctitlePKczE12buggy_kernel, align 1, !range !3
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %80, label %88

80:                                               ; preds = %75
  %81 = ptrtoint i8* %77 to i64
  %82 = load i64, i64* bitcast (i8** @_ZL12g_argv_start to i64*), align 8
  %83 = xor i64 %82, -1
  %84 = add i64 %83, %81
  %85 = icmp ult i64 %76, %84
  br i1 %85, label %86, label %88

86:                                               ; preds = %80
  %87 = getelementptr inbounds i8, i8* %77, i64 -1
  store i8 46, i8* %87, align 1
  br label %88

88:                                               ; preds = %80, %86, %75, %1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #3

; Function Attrs: nofree nounwind
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z17setproctitle_initPPKc(i8** readonly) local_unnamed_addr #0 {
  %2 = load i1, i1* @_ZZ17setproctitle_initPPKcE11init_called, align 1
  br i1 %2, label %158, label %3

3:                                                ; preds = %1
  store i1 true, i1* @_ZZ17setproctitle_initPPKcE11init_called, align 1
  %4 = icmp eq i8** %0, null
  br i1 %4, label %158, label %5

5:                                                ; preds = %3
  %6 = load i8*, i8** %0, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %13

8:                                                ; preds = %18, %5
  %9 = phi i8* [ null, %5 ], [ %21, %18 ]
  %10 = load i8**, i8*** @environ, align 8
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %39, label %26

13:                                               ; preds = %5, %18
  %14 = phi i8* [ %24, %18 ], [ %6, %5 ]
  %15 = phi i64 [ %22, %18 ], [ 0, %5 ]
  %16 = phi i8* [ %21, %18 ], [ %6, %5 ]
  %17 = icmp eq i8* %16, %14
  br i1 %17, label %18, label %158

18:                                               ; preds = %13
  %19 = tail call i64 @strlen(i8* nonnull %14) #15
  %20 = add i64 %19, 1
  %21 = getelementptr inbounds i8, i8* %14, i64 %20
  %22 = add i64 %15, 1
  %23 = getelementptr inbounds i8*, i8** %0, i64 %22
  %24 = load i8*, i8** %23, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %8, label %13

26:                                               ; preds = %8, %31
  %27 = phi i8* [ %37, %31 ], [ %11, %8 ]
  %28 = phi i64 [ %35, %31 ], [ 0, %8 ]
  %29 = phi i8* [ %34, %31 ], [ %9, %8 ]
  %30 = icmp eq i8* %29, %27
  br i1 %30, label %31, label %158

31:                                               ; preds = %26
  %32 = tail call i64 @strlen(i8* nonnull %27) #15
  %33 = add i64 %32, 1
  %34 = getelementptr inbounds i8, i8* %27, i64 %33
  %35 = add i64 %28, 1
  %36 = getelementptr inbounds i8*, i8** %10, i64 %35
  %37 = load i8*, i8** %36, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %39, label %26

39:                                               ; preds = %31, %8
  %40 = phi i64 [ 0, %8 ], [ %35, %31 ]
  %41 = phi i8* [ %9, %8 ], [ %34, %31 ]
  %42 = load atomic i8, i8* bitcast (i64* @_ZGVZ17setproctitle_initPPKcE12environ_copy to i8*) acquire, align 8
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %67, !prof !2

44:                                               ; preds = %39
  %45 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZ17setproctitle_initPPKcE12environ_copy) #3
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %67, label %47

47:                                               ; preds = %44
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZ17setproctitle_initPPKcE12environ_copy, i64 0, i32 0, i64 0), i8 0, i64 24, i1 false) #3
  %48 = icmp eq i64 %40, 0
  br i1 %48, label %66, label %49

49:                                               ; preds = %47
  %50 = icmp ugt i64 %40, 768614336404564650
  br i1 %50, label %51, label %52

51:                                               ; preds = %49
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* bitcast (%"class.base::NoDestructor"* @_ZZ17setproctitle_initPPKcE12environ_copy to %"class.std::__1::__vector_base_common"*)) #16
  unreachable

52:                                               ; preds = %49
  %53 = mul i64 %40, 24
  %54 = tail call i8* @_Znwm(i64 %53) #14
  %55 = bitcast i8* %54 to %"class.std::__1::basic_string"*
  store i8* %54, i8** bitcast (%"class.base::NoDestructor"* @_ZZ17setproctitle_initPPKcE12environ_copy to i8**), align 8
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 %40
  store %"class.std::__1::basic_string"* %56, %"class.std::__1::basic_string"** bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZ17setproctitle_initPPKcE12environ_copy, i64 0, i32 0, i64 16) to %"class.std::__1::basic_string"**), align 8
  %57 = ptrtoint i8* %54 to i64
  %58 = add nsw i64 %40, -1
  %59 = getelementptr %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 %58, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = ptrtoint i8** %59 to i64
  %61 = sub i64 %60, %57
  %62 = urem i64 %61, 24
  %63 = add i64 %61, 24
  %64 = sub i64 %63, %62
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 0, i64 %64, i1 false) #3
  %65 = ptrtoint %"class.std::__1::basic_string"* %56 to i64
  store i64 %65, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZ17setproctitle_initPPKcE12environ_copy, i64 0, i32 0, i64 8) to i64*), align 8
  br label %66

66:                                               ; preds = %47, %52
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZ17setproctitle_initPPKcE12environ_copy) #3
  br label %67

67:                                               ; preds = %44, %66, %39
  %68 = load i8**, i8*** @environ, align 8
  %69 = load i8*, i8** %68, align 8
  %70 = icmp eq i8* %69, null
  br i1 %70, label %71, label %74

71:                                               ; preds = %118, %67
  %72 = load i8*, i8** %0, align 8
  %73 = icmp eq i8* %72, null
  br i1 %73, label %158, label %127

74:                                               ; preds = %67, %118
  %75 = phi i8* [ %125, %118 ], [ %69, %67 ]
  %76 = phi i64 [ %122, %118 ], [ 0, %67 ]
  %77 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** bitcast (%"class.base::NoDestructor"* @_ZZ17setproctitle_initPPKcE12environ_copy to %"class.std::__1::basic_string"**), align 8
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 %76
  %79 = load i8, i8* %75, align 1
  %80 = tail call i1 @llvm.is.constant.i8(i8 %79) #3
  br i1 %80, label %81, label %104

81:                                               ; preds = %74
  %82 = tail call i64 @strlen(i8* nonnull %75) #3
  %83 = icmp ult i64 %82, 23
  br i1 %83, label %84, label %102

84:                                               ; preds = %81
  %85 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  %87 = load i8, i8* %86, align 1
  %88 = icmp slt i8 %87, 0
  br i1 %88, label %89, label %93

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 %76, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %82, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load i8*, i8** %91, align 8
  br label %96

93:                                               ; preds = %84
  %94 = trunc i64 %82 to i8
  store i8 %94, i8* %86, align 1
  %95 = bitcast %"class.std::__1::basic_string"* %78 to i8*
  br label %96

96:                                               ; preds = %93, %89
  %97 = phi i8* [ %92, %89 ], [ %95, %93 ]
  %98 = icmp eq i64 %82, 0
  br i1 %98, label %100, label %99

99:                                               ; preds = %96
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %97, i8* nonnull align 1 %75, i64 %82, i1 false) #3
  br label %100

100:                                              ; preds = %99, %96
  %101 = getelementptr inbounds i8, i8* %97, i64 %82
  store i8 0, i8* %101, align 1
  br label %106

102:                                              ; preds = %81
  %103 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %78, i8* nonnull %75, i64 %82) #3
  br label %106

104:                                              ; preds = %74
  %105 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"* %78, i8* nonnull %75) #3
  br label %106

106:                                              ; preds = %100, %102, %104
  %107 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** bitcast (%"class.base::NoDestructor"* @_ZZ17setproctitle_initPPKcE12environ_copy to %"class.std::__1::basic_string"**), align 8
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %107, i64 %76
  %109 = bitcast %"class.std::__1::basic_string"* %108 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %110 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %109, i64 0, i32 1, i32 0
  %111 = load i8, i8* %110, align 1
  %112 = icmp slt i8 %111, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %106
  %114 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load i8*, i8** %114, align 8
  br label %118

116:                                              ; preds = %106
  %117 = bitcast %"class.std::__1::basic_string"* %108 to i8*
  br label %118

118:                                              ; preds = %113, %116
  %119 = phi i8* [ %115, %113 ], [ %117, %116 ]
  %120 = load i8**, i8*** @environ, align 8
  %121 = getelementptr inbounds i8*, i8** %120, i64 %76
  store i8* %119, i8** %121, align 8
  %122 = add i64 %76, 1
  %123 = load i8**, i8*** @environ, align 8
  %124 = getelementptr inbounds i8*, i8** %123, i64 %122
  %125 = load i8*, i8** %124, align 8
  %126 = icmp eq i8* %125, null
  br i1 %126, label %71, label %74

127:                                              ; preds = %71
  %128 = load atomic i8, i8* bitcast (i64* @_ZGVZ17setproctitle_initPPKcE13argv0_storage to i8*) acquire, align 8
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %130, label %153, !prof !2

130:                                              ; preds = %127
  %131 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZ17setproctitle_initPPKcE13argv0_storage) #3
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %153, label %133

133:                                              ; preds = %130
  %134 = load i8*, i8** %0, align 8
  %135 = tail call i64 @strlen(i8* %134) #3
  %136 = icmp ugt i64 %135, -17
  br i1 %136, label %137, label %138

137:                                              ; preds = %133
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* bitcast (%"class.base::NoDestructor.6"* @_ZZ17setproctitle_initPPKcE13argv0_storage to %"class.std::__1::__basic_string_common"*)) #16
  unreachable

138:                                              ; preds = %133
  %139 = icmp ult i64 %135, 23
  br i1 %139, label %145, label %140

140:                                              ; preds = %138
  %141 = add nuw i64 %135, 16
  %142 = and i64 %141, -16
  %143 = tail call i8* @_Znwm(i64 %142) #14
  store i8* %143, i8** bitcast (%"class.base::NoDestructor.6"* @_ZZ17setproctitle_initPPKcE13argv0_storage to i8**), align 8
  %144 = or i64 %142, -9223372036854775808
  store i64 %144, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor.6", %"class.base::NoDestructor.6"* @_ZZ17setproctitle_initPPKcE13argv0_storage, i64 0, i32 0, i64 16) to i64*), align 8
  store i64 %135, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor.6", %"class.base::NoDestructor.6"* @_ZZ17setproctitle_initPPKcE13argv0_storage, i64 0, i32 0, i64 8) to i64*), align 8
  br label %148

145:                                              ; preds = %138
  %146 = trunc i64 %135 to i8
  store i8 %146, i8* getelementptr inbounds (%"class.base::NoDestructor.6", %"class.base::NoDestructor.6"* @_ZZ17setproctitle_initPPKcE13argv0_storage, i64 0, i32 0, i64 23), align 1
  %147 = icmp eq i64 %135, 0
  br i1 %147, label %150, label %148

148:                                              ; preds = %145, %140
  %149 = phi i8* [ %143, %140 ], [ getelementptr inbounds (%"class.base::NoDestructor.6", %"class.base::NoDestructor.6"* @_ZZ17setproctitle_initPPKcE13argv0_storage, i64 0, i32 0, i64 0), %145 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %149, i8* align 1 %134, i64 %135, i1 false) #3
  br label %150

150:                                              ; preds = %145, %148
  %151 = phi i8* [ getelementptr inbounds (%"class.base::NoDestructor.6", %"class.base::NoDestructor.6"* @_ZZ17setproctitle_initPPKcE13argv0_storage, i64 0, i32 0, i64 0), %145 ], [ %149, %148 ]
  %152 = getelementptr inbounds i8, i8* %151, i64 %135
  store i8 0, i8* %152, align 1
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZ17setproctitle_initPPKcE13argv0_storage) #3
  br label %153

153:                                              ; preds = %130, %150, %127
  %154 = load i8, i8* getelementptr inbounds (%"class.base::NoDestructor.6", %"class.base::NoDestructor.6"* @_ZZ17setproctitle_initPPKcE13argv0_storage, i64 0, i32 0, i64 23), align 1
  %155 = icmp slt i8 %154, 0
  %156 = load i8*, i8** bitcast (%"class.base::NoDestructor.6"* @_ZZ17setproctitle_initPPKcE13argv0_storage to i8**), align 8
  %157 = select i1 %155, i8* %156, i8* getelementptr inbounds (%"class.base::NoDestructor.6", %"class.base::NoDestructor.6"* @_ZZ17setproctitle_initPPKcE13argv0_storage, i64 0, i32 0, i64 0)
  store i8* %157, i8** @_ZL12g_orig_argv0, align 8
  store i8* %6, i8** @_ZL12g_argv_start, align 8
  store i8* %9, i8** @_ZL10g_argv_end, align 8
  store i8* %41, i8** @_ZL10g_envp_end, align 8
  br label %158

158:                                              ; preds = %13, %26, %71, %153, %3, %1
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

declare zeroext i1 @_ZN4base16ReadFileToStringERKNS_8FilePathEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.base::FilePath"* dereferenceable(24), %"class.std::__1::basic_string"*) local_unnamed_addr #6

declare void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"*, i8*, i64) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nofree
declare i32 @__vsnprintf_chk(i8*, i64, i32, i64, i8*, %struct.__va_list_tag*) local_unnamed_addr #9

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.objectsize.i64.p0i8(i8*, i1 immarg, i1 immarg, i1 immarg) #10

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i8(i8) #13

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #6

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #11

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind }
attributes #3 = { nounwind }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readnone }
attributes #14 = { builtin nounwind }
attributes #15 = { nounwind readonly }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{i8 0, i8 2}
