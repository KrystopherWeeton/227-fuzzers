; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/assign_variable.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/assign_variable.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, i32 (%struct.TfLiteContext*, %struct.TfLiteRegistration*, %struct.TfLiteIntArray*, %struct.TfLiteDelegate*)*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteRegistration = type { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, {}*, {}*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%"class.tflite::impl::Subgraph" = type { i32 (...)**, %"class.std::__1::vector", i32, %struct.TfLiteContext, %struct.TfLiteExternalContext**, %"class.std::__1::vector.1", i8, %"class.std::__1::vector.8", %"class.std::__1::vector.8", %"class.std::__1::vector.8", %"class.tflite::ErrorReporter"*, i32, i32, %"class.std::__1::vector.8", %"class.std::__1::vector.8", %"class.std::__1::vector.15", i8, %"class.std::__1::unique_ptr", %"class.std::__1::vector.25", i8, i8, %"class.std::__1::unique_ptr.32", i8, %"class.std::__1::unique_ptr.36", %"class.std::__1::vector.42"*, i8, i1 (i8*)*, i8*, %"class.std::__1::unordered_map"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %struct.TfLiteTensor*, %struct.TfLiteTensor*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %struct.TfLiteTensor* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.3" }
%"struct.std::__1::pair" = type { %struct.TfLiteNode, %struct.TfLiteRegistration }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::pair"* }
%"class.tflite::ErrorReporter" = type { i32 (...)** }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { i32*, i32*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { i32* }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %struct.TfLiteDelegate**, %struct.TfLiteDelegate**, %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %struct.TfLiteDelegate** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %struct.TfLiteIntArray* }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %struct.TfLiteDelegateParams*, %struct.TfLiteDelegateParams*, %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %struct.TfLiteDelegateParams* }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.tflite::MemoryPlanner"* }
%"class.tflite::MemoryPlanner" = type { i32 (...)** }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.tflite::impl::Subgraph::SubgraphAwareProfiler"* }
%"class.tflite::impl::Subgraph::SubgraphAwareProfiler" = type { %"class.tflite::Profiler", %"class.tflite::Profiler"*, i64 }
%"class.tflite::Profiler" = type { i32 (...)** }
%"class.std::__1::vector.42" = type opaque
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.43", %"class.std::__1::__compressed_pair.52", %"class.std::__1::__compressed_pair.57", %"class.std::__1::__compressed_pair.59", [4 x i8] }>
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45", %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { i64 }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { float }
%"class.tflite::resource::ResourceVariable" = type <{ %"class.tflite::resource::ResourceBase", %struct.TfLiteTensor, i8, [7 x i8] }>
%"class.tflite::resource::ResourceBase" = type { i32 (...)** }

@.str = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%d != %d)\00", align 1
@.str.1 = private unnamed_addr constant [72 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/assign_variable.cc\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"NumInputs(node)\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"NumOutputs(node)\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.6 = private unnamed_addr constant [31 x i8] c"input_resource_id_tensor->type\00", align 1
@.str.7 = private unnamed_addr constant [13 x i8] c"kTfLiteInt32\00", align 1
@.str.8 = private unnamed_addr constant [38 x i8] c"NumElements(input_resource_id_tensor)\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"%s:%d %s was not true.\00", align 1
@.str.11 = private unnamed_addr constant [20 x i8] c"variable != nullptr\00", align 1
@_ZZN6tflite3ops6custom24Register_ASSIGN_VARIABLEEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops6custom15assign_variable7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops6custom15assign_variable4EvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops6custom15assign_variable7PrepareEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #0 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %10 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %9, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %10(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1, i64 0, i64 0), i32 33, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i32 %6, i32 2) #3
  br label %187

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %13 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %12, align 8
  %14 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %19 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %18, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %19(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1, i64 0, i64 0), i32 41, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i32 %15, i32 0) #3
  br label %187

20:                                               ; preds = %11
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %26 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %25, align 8
  %27 = sext i32 %22 to i64
  %28 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 %27
  br label %29

29:                                               ; preds = %20, %24
  %30 = phi %struct.TfLiteTensor* [ %28, %24 ], [ null, %20 ]
  %31 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 2
  br i1 %33, label %37, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %36 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %35, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %36(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1, i64 0, i64 0), i32 45, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i32 %32, i32 2) #3
  br label %187

37:                                               ; preds = %29
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 2
  %39 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %38, align 8
  %40 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %39, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp sgt i32 %41, 0
  br i1 %42, label %43, label %187

43:                                               ; preds = %37
  %44 = sext i32 %41 to i64
  %45 = add nsw i64 %44, -1
  %46 = and i64 %44, 7
  %47 = icmp ult i64 %45, 7
  br i1 %47, label %96, label %48

48:                                               ; preds = %43
  %49 = sub nsw i64 %44, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %93, %50 ]
  %52 = phi i64 [ 1, %48 ], [ %92, %50 ]
  %53 = phi i64 [ %49, %48 ], [ %94, %50 ]
  %54 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %39, i64 0, i32 1, i64 %51
  %55 = load i32, i32* %54, align 4
  %56 = sext i32 %55 to i64
  %57 = mul nsw i64 %52, %56
  %58 = or i64 %51, 1
  %59 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %39, i64 0, i32 1, i64 %58
  %60 = load i32, i32* %59, align 4
  %61 = sext i32 %60 to i64
  %62 = mul nsw i64 %57, %61
  %63 = or i64 %51, 2
  %64 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %39, i64 0, i32 1, i64 %63
  %65 = load i32, i32* %64, align 4
  %66 = sext i32 %65 to i64
  %67 = mul nsw i64 %62, %66
  %68 = or i64 %51, 3
  %69 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %39, i64 0, i32 1, i64 %68
  %70 = load i32, i32* %69, align 4
  %71 = sext i32 %70 to i64
  %72 = mul nsw i64 %67, %71
  %73 = or i64 %51, 4
  %74 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %39, i64 0, i32 1, i64 %73
  %75 = load i32, i32* %74, align 4
  %76 = sext i32 %75 to i64
  %77 = mul nsw i64 %72, %76
  %78 = or i64 %51, 5
  %79 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %39, i64 0, i32 1, i64 %78
  %80 = load i32, i32* %79, align 4
  %81 = sext i32 %80 to i64
  %82 = mul nsw i64 %77, %81
  %83 = or i64 %51, 6
  %84 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %39, i64 0, i32 1, i64 %83
  %85 = load i32, i32* %84, align 4
  %86 = sext i32 %85 to i64
  %87 = mul nsw i64 %82, %86
  %88 = or i64 %51, 7
  %89 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %39, i64 0, i32 1, i64 %88
  %90 = load i32, i32* %89, align 4
  %91 = sext i32 %90 to i64
  %92 = mul nsw i64 %87, %91
  %93 = add nuw nsw i64 %51, 8
  %94 = add i64 %53, -8
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %96, label %50

96:                                               ; preds = %50, %43
  %97 = phi i64 [ undef, %43 ], [ %92, %50 ]
  %98 = phi i64 [ 0, %43 ], [ %93, %50 ]
  %99 = phi i64 [ 1, %43 ], [ %92, %50 ]
  %100 = icmp eq i64 %46, 0
  br i1 %100, label %112, label %101

101:                                              ; preds = %96, %101
  %102 = phi i64 [ %109, %101 ], [ %98, %96 ]
  %103 = phi i64 [ %108, %101 ], [ %99, %96 ]
  %104 = phi i64 [ %110, %101 ], [ %46, %96 ]
  %105 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %39, i64 0, i32 1, i64 %102
  %106 = load i32, i32* %105, align 4
  %107 = sext i32 %106 to i64
  %108 = mul nsw i64 %103, %107
  %109 = add nuw nsw i64 %102, 1
  %110 = add i64 %104, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %101, !llvm.loop !2

112:                                              ; preds = %101, %96
  %113 = phi i64 [ %97, %96 ], [ %108, %101 ]
  %114 = icmp eq i64 %113, 1
  br i1 %114, label %187, label %115

115:                                              ; preds = %112
  %116 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %117 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %116, align 8
  %118 = add nsw i64 %44, -1
  %119 = and i64 %44, 7
  %120 = icmp ult i64 %118, 7
  br i1 %120, label %169, label %121

121:                                              ; preds = %115
  %122 = sub nsw i64 %44, %119
  br label %123

123:                                              ; preds = %123, %121
  %124 = phi i64 [ 0, %121 ], [ %166, %123 ]
  %125 = phi i64 [ 1, %121 ], [ %165, %123 ]
  %126 = phi i64 [ %122, %121 ], [ %167, %123 ]
  %127 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %39, i64 0, i32 1, i64 %124
  %128 = load i32, i32* %127, align 4
  %129 = sext i32 %128 to i64
  %130 = mul nsw i64 %125, %129
  %131 = or i64 %124, 1
  %132 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %39, i64 0, i32 1, i64 %131
  %133 = load i32, i32* %132, align 4
  %134 = sext i32 %133 to i64
  %135 = mul nsw i64 %130, %134
  %136 = or i64 %124, 2
  %137 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %39, i64 0, i32 1, i64 %136
  %138 = load i32, i32* %137, align 4
  %139 = sext i32 %138 to i64
  %140 = mul nsw i64 %135, %139
  %141 = or i64 %124, 3
  %142 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %39, i64 0, i32 1, i64 %141
  %143 = load i32, i32* %142, align 4
  %144 = sext i32 %143 to i64
  %145 = mul nsw i64 %140, %144
  %146 = or i64 %124, 4
  %147 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %39, i64 0, i32 1, i64 %146
  %148 = load i32, i32* %147, align 4
  %149 = sext i32 %148 to i64
  %150 = mul nsw i64 %145, %149
  %151 = or i64 %124, 5
  %152 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %39, i64 0, i32 1, i64 %151
  %153 = load i32, i32* %152, align 4
  %154 = sext i32 %153 to i64
  %155 = mul nsw i64 %150, %154
  %156 = or i64 %124, 6
  %157 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %39, i64 0, i32 1, i64 %156
  %158 = load i32, i32* %157, align 4
  %159 = sext i32 %158 to i64
  %160 = mul nsw i64 %155, %159
  %161 = or i64 %124, 7
  %162 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %39, i64 0, i32 1, i64 %161
  %163 = load i32, i32* %162, align 4
  %164 = sext i32 %163 to i64
  %165 = mul nsw i64 %160, %164
  %166 = add nuw nsw i64 %124, 8
  %167 = add i64 %126, -8
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %169, label %123

169:                                              ; preds = %123, %115
  %170 = phi i64 [ undef, %115 ], [ %165, %123 ]
  %171 = phi i64 [ 0, %115 ], [ %166, %123 ]
  %172 = phi i64 [ 1, %115 ], [ %165, %123 ]
  %173 = icmp eq i64 %119, 0
  br i1 %173, label %185, label %174

174:                                              ; preds = %169, %174
  %175 = phi i64 [ %182, %174 ], [ %171, %169 ]
  %176 = phi i64 [ %181, %174 ], [ %172, %169 ]
  %177 = phi i64 [ %183, %174 ], [ %119, %169 ]
  %178 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %39, i64 0, i32 1, i64 %175
  %179 = load i32, i32* %178, align 4
  %180 = sext i32 %179 to i64
  %181 = mul nsw i64 %176, %180
  %182 = add nuw nsw i64 %175, 1
  %183 = add i64 %177, -1
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %185, label %174, !llvm.loop !4

185:                                              ; preds = %174, %169
  %186 = phi i64 [ %170, %169 ], [ %181, %174 ]
  tail call void (%struct.TfLiteContext*, i8*, ...) %117(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1, i64 0, i64 0), i32 46, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i64 %186, i32 1) #3
  br label %187

187:                                              ; preds = %37, %34, %185, %112, %17, %8
  %188 = phi i32 [ 1, %8 ], [ 1, %17 ], [ 1, %34 ], [ 1, %185 ], [ 0, %112 ], [ 0, %37 ]
  ret i32 %188
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops6custom15assign_variable4EvalEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #0 {
  %3 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 3
  %4 = bitcast i8** %3 to %"class.tflite::impl::Subgraph"**
  %5 = load %"class.tflite::impl::Subgraph"*, %"class.tflite::impl::Subgraph"** %4, align 8
  %6 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %7 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %6, align 8
  %8 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %7, i64 0, i32 1, i64 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %13 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %12, align 8
  %14 = sext i32 %9 to i64
  %15 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %13, i64 %14
  br label %16

16:                                               ; preds = %2, %11
  %17 = phi %struct.TfLiteTensor* [ %15, %11 ], [ null, %2 ]
  %18 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %7, i64 0, i32 1, i64 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %23 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %22, align 8
  %24 = sext i32 %19 to i64
  %25 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %23, i64 %24
  br label %26

26:                                               ; preds = %16, %21
  %27 = phi %struct.TfLiteTensor* [ %25, %21 ], [ null, %16 ]
  %28 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %17, i64 0, i32 1, i32 0
  %29 = load i32*, i32** %28, align 8
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.tflite::impl::Subgraph", %"class.tflite::impl::Subgraph"* %5, i64 0, i32 28
  %32 = load %"class.std::__1::unordered_map"*, %"class.std::__1::unordered_map"** %31, align 8
  tail call void @_ZN6tflite8resource36CreateResourceVariableIfNotAvailableEPNSt3__113unordered_mapIiNS1_10unique_ptrINS0_12ResourceBaseENS1_14default_deleteIS4_EEEENS1_4hashIiEENS1_8equal_toIiEENS1_9allocatorINS1_4pairIKiS7_EEEEEEi(%"class.std::__1::unordered_map"* %32, i32 %30) #3
  %33 = tail call %"class.tflite::resource::ResourceVariable"* @_ZN6tflite8resource19GetResourceVariableEPNSt3__113unordered_mapIiNS1_10unique_ptrINS0_12ResourceBaseENS1_14default_deleteIS4_EEEENS1_4hashIiEENS1_8equal_toIiEENS1_9allocatorINS1_4pairIKiS7_EEEEEEi(%"class.std::__1::unordered_map"* %32, i32 %30) #3
  %34 = icmp eq %"class.tflite::resource::ResourceVariable"* %33, null
  br i1 %34, label %35, label %38

35:                                               ; preds = %26
  %36 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %37 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %36, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %37(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1, i64 0, i64 0), i32 62, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.11, i64 0, i64 0)) #3
  br label %40

38:                                               ; preds = %26
  %39 = tail call i32 @_ZN6tflite8resource16ResourceVariable10AssignFromEPK12TfLiteTensor(%"class.tflite::resource::ResourceVariable"* nonnull %33, %struct.TfLiteTensor* %27) #3
  br label %40

40:                                               ; preds = %38, %35
  %41 = phi i32 [ 0, %38 ], [ 1, %35 ]
  ret i32 %41
}

declare void @_ZN6tflite8resource36CreateResourceVariableIfNotAvailableEPNSt3__113unordered_mapIiNS1_10unique_ptrINS0_12ResourceBaseENS1_14default_deleteIS4_EEEENS1_4hashIiEENS1_8equal_toIiEENS1_9allocatorINS1_4pairIKiS7_EEEEEEi(%"class.std::__1::unordered_map"*, i32) local_unnamed_addr #1

declare %"class.tflite::resource::ResourceVariable"* @_ZN6tflite8resource19GetResourceVariableEPNSt3__113unordered_mapIiNS1_10unique_ptrINS0_12ResourceBaseENS1_14default_deleteIS4_EEEENS1_4hashIiEENS1_8equal_toIiEENS1_9allocatorINS1_4pairIKiS7_EEEEEEi(%"class.std::__1::unordered_map"*, i32) local_unnamed_addr #1

declare i32 @_ZN6tflite8resource16ResourceVariable10AssignFromEPK12TfLiteTensor(%"class.tflite::resource::ResourceVariable"*, %struct.TfLiteTensor*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops6custom24Register_ASSIGN_VARIABLEEv() local_unnamed_addr #2 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops6custom24Register_ASSIGN_VARIABLEEvE1r to %struct.TfLiteRegistration*)
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
