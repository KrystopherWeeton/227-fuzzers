; ModuleID = '../../third_party/blink/renderer/core/inspector/request_debug_header_scope.cc'
source_filename = "../../third_party/blink/renderer/core/inspector/request_debug_header_scope.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::RequestDebugHeaderScope" = type { %"class.blink::ThreadDebugger"*, %"struct.v8_inspector::V8StackTraceId" }
%"class.blink::ThreadDebugger" = type { %"class.v8_inspector::V8InspectorClient", %"class.blink::V8PerIsolateData::Data", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.221", %"class.WTF::Vector.227", %"class.WTF::Vector.233", %"class.WTF::Vector.238" }
%"class.v8_inspector::V8InspectorClient" = type { i32 (...)** }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.v8_inspector::V8Inspector"* }
%"class.v8_inspector::V8Inspector" = type { i32 (...)** }
%"class.WTF::Vector.227" = type { %"class.WTF::VectorBuffer.228" }
%"class.WTF::VectorBuffer.228" = type { %"class.WTF::VectorBufferBase.229" }
%"class.WTF::VectorBufferBase.229" = type { %"class.std::__1::unique_ptr.230"*, i32, i32 }
%"class.std::__1::unique_ptr.230" = type opaque
%"class.WTF::Vector.233" = type { %"class.WTF::VectorBuffer.234" }
%"class.WTF::VectorBuffer.234" = type { %"class.WTF::VectorBufferBase.235" }
%"class.WTF::VectorBufferBase.235" = type { void (i8*)**, i32, i32 }
%"class.WTF::Vector.238" = type { %"class.WTF::VectorBuffer.239" }
%"class.WTF::VectorBuffer.239" = type { %"class.WTF::VectorBufferBase.240" }
%"class.WTF::VectorBufferBase.240" = type { i8**, i32, i32 }
%"struct.v8_inspector::V8StackTraceId" = type <{ i64, %"struct.std::__1::pair.941", i8, [7 x i8] }>
%"struct.std::__1::pair.941" = type { i64, i64 }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.47", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.54", %"class.blink::Member.56", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.65", %"class.blink::Member.206", %"class.blink::Member.208", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.5" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.3" }
%"class.WTF::HashTable.3" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Supplementable.5" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.6" }
%"class.blink::HeapHashMap.6" = type { %"class.WTF::HashMap.9" }
%"class.WTF::HashMap.9" = type { %"class.WTF::HashTable.10" }
%"class.WTF::HashTable.10" = type <{ %"struct.WTF::KeyValuePair.12"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.12" = type { i8*, %"class.blink::Member.2505" }
%"class.blink::Member.2505" = type { %"class.blink::MemberBase.2506" }
%"class.blink::MemberBase.2506" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2507" }
%"class.blink::Member.2507" = type { %"class.blink::MemberBase.2508" }
%"class.blink::MemberBase.2508" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.13, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.38", %"class.blink::Member", i32, [4 x i8], %"class.WTF::HashSet.44", i32, i32 }
%class.scoped_refptr.13 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.14 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.14 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.27", %"class.std::__1::map.36"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.17 }
%union.anon.17 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.19", %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { i64 }
%"class.std::__1::map.27" = type { %"class.std::__1::__tree.28" }
%"class.std::__1::__tree.28" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.29", %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::map.36" = type opaque
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.44" = type { %"class.WTF::HashTable.45" }
%"class.WTF::HashTable.45" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.47" = type { %"class.blink::MemberBase.48" }
%"class.blink::MemberBase.48" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member.51"*, i32, i32 }
%"class.blink::Member.51" = type { %"class.blink::MemberBase.52" }
%"class.blink::MemberBase.52" = type { %"class.blink::ErrorEvent"* }
%"class.blink::ErrorEvent" = type opaque
%"class.blink::Member.54" = type { %"class.blink::MemberBase.55" }
%"class.blink::MemberBase.55" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.56" = type { %"class.blink::MemberBase.57" }
%"class.blink::MemberBase.57" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.58", i32, i32 }
%"class.blink::HeapHashMap.58" = type { %"class.WTF::HashMap.61" }
%"class.WTF::HashMap.61" = type { %"class.WTF::HashTable.62" }
%"class.WTF::HashTable.62" = type <{ %"struct.WTF::KeyValuePair.64"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.64" = type opaque
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.68" }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.71" }
%"class.WTF::Vector.71" = type { %"class.WTF::VectorBuffer.72" }
%"class.WTF::VectorBuffer.72" = type { %"class.WTF::VectorBufferBase.73" }
%"class.WTF::VectorBufferBase.73" = type { %"class.mojo::StructPtr.74"*, i32, i32 }
%"class.mojo::StructPtr.74" = type { %"class.std::__1::unique_ptr.75" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.78", %"class.WTF::HashMap.85", %"class.WTF::HashMap.90", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.95", i32, %"class.mojo::StructPtr.100", %"class.WTF::Vector.95" }
%"class.mojo::StructPtr.78" = type { %"class.std::__1::unique_ptr.79" }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.85" = type { %"class.WTF::HashTable.86" }
%"class.WTF::HashTable.86" = type <{ %"struct.WTF::KeyValuePair.89"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.89" = type opaque
%"class.WTF::HashMap.90" = type { %"class.WTF::HashTable.91" }
%"class.WTF::HashTable.91" = type <{ %"struct.WTF::KeyValuePair.94"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.94" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.100" = type { %"class.std::__1::unique_ptr.101" }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.95", i8, i8, [6 x i8] }>
%"class.WTF::Vector.95" = type { %"class.WTF::VectorBuffer.96" }
%"class.WTF::VectorBuffer.96" = type { %"class.WTF::VectorBufferBase.97" }
%"class.WTF::VectorBufferBase.97" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.197" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.115", i32 }>
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.absl::optional.124", %"class.absl::optional.129", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.150", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.172", %"class.std::__1::map.183", i64, %"class.base::OnceCallback.143", %"class.base::OnceCallback.192", i8, %class.scoped_refptr.134, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.193" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.118 }
%class.scoped_refptr.118 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.119" }
%"struct.std::__1::atomic.119" = type { %"struct.std::__1::__atomic_base.120" }
%"struct.std::__1::__atomic_base.120" = type { %"struct.std::__1::__atomic_base.121" }
%"struct.std::__1::__atomic_base.121" = type { %"struct.std::__1::__cxx_atomic_impl.122" }
%"struct.std::__1::__cxx_atomic_impl.122" = type { %"struct.std::__1::__cxx_atomic_base_impl.123" }
%"struct.std::__1::__cxx_atomic_base_impl.123" = type { i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.124" = type { %"class.absl::optional_internal::optional_data.125" }
%"class.absl::optional_internal::optional_data.125" = type { %"class.absl::optional_internal::optional_data_base.126" }
%"class.absl::optional_internal::optional_data_base.126" = type { %"class.absl::optional_internal::optional_data_dtor_base.127" }
%"class.absl::optional_internal::optional_data_dtor_base.127" = type { i8, %union.anon.128 }
%union.anon.128 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.129" = type { %"class.absl::optional_internal::optional_data.130" }
%"class.absl::optional_internal::optional_data.130" = type { %"class.absl::optional_internal::optional_data_base.131" }
%"class.absl::optional_internal::optional_data_base.131" = type { %"class.absl::optional_internal::optional_data_dtor_base.132" }
%"class.absl::optional_internal::optional_data_dtor_base.132" = type { i8, %union.anon.133 }
%union.anon.133 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.143" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.134, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.136 }
%class.scoped_refptr.136 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.137", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.137" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.138" }
%"struct.std::__1::atomic.138" = type { %"struct.std::__1::__atomic_base.139" }
%"struct.std::__1::__atomic_base.139" = type { %"struct.std::__1::__atomic_base.140" }
%"struct.std::__1::__atomic_base.140" = type { %"struct.std::__1::__cxx_atomic_impl.141" }
%"struct.std::__1::__cxx_atomic_impl.141" = type { %"struct.std::__1::__cxx_atomic_base_impl.142" }
%"struct.std::__1::__cxx_atomic_base_impl.142" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.148 }
%class.scoped_refptr.148 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.220", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.134, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.220" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.149 }
%class.scoped_refptr.149 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.153", %class.scoped_refptr.154 }
%"class.base::RepeatingCallback.153" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.154 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.155", [4 x i8] }>
%"class.base::RefCountedThreadSafe.155" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.159", %"class.std::__1::unique_ptr.165", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.171" }
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.171" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.172" = type { %"class.std::__1::__tree.173" }
%"class.std::__1::__tree.173" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.174", %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::map.183" = type { %"class.std::__1::__tree.184" }
%"class.std::__1::__tree.184" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.base::OnceCallback.143" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.192" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.134 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.135" }>
%"class.base::RefCountedThreadSafe.135" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.143" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.193" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.206" = type { %"class.blink::MemberBase.207" }
%"class.blink::MemberBase.207" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.208" = type { %"class.blink::MemberBase.209" }
%"class.blink::MemberBase.209" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.56", i8, [7 x i8], %"class.WTF::Vector.71", %"class.blink::HeapVector.212", i8, [7 x i8], %"class.WTF::HashSet.44", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.212" = type { %"class.WTF::Vector.215" }
%"class.WTF::Vector.215" = type { %"class.WTF::VectorBuffer.216" }
%"class.WTF::VectorBuffer.216" = type { %"class.WTF::VectorBufferBase.217" }
%"class.WTF::VectorBufferBase.217" = type { %"class.blink::Member.218"*, i32, i32 }
%"class.blink::Member.218" = type opaque
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::WorkerThread" = type { %"class.base::TaskObserver", %"class.base::TimeTicks", i32, i8, i32, i32, %"class.base::TimeDelta", %class.scoped_refptr.542, %"class.base::UnguessableToken", %"class.blink::InspectorIssueStorage", i32, %"class.blink::WorkerReportingProxy"*, %class.scoped_refptr.755, %"class.std::__1::unique_ptr.756", %"class.WTF::HashMap.781", %"class.WTF::Mutex", i32, %"class.blink::Platform::NestedMessageLoopRunner"*, %"class.blink::CrossThreadPersistent.786", %"class.blink::CrossThreadPersistent.788", %"class.blink::CrossThreadPersistent.790", %class.scoped_refptr.792, %"class.blink::TaskHandle", %"class.WTF::HashSet.794", %"class.WTF::HashSet.798" }
%"class.base::TaskObserver" = type { i32 (...)** }
%class.scoped_refptr.542 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.543" }
%"class.WTF::Deque.543" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.546" }
%"class.WTF::VectorBuffer.546" = type { %"class.WTF::VectorBufferBase.547" }
%"class.WTF::VectorBufferBase.547" = type { %"class.std::__1::unique_ptr.548"*, i32, i32 }
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type { %"class.crdtp::ProtocolObject", %"class.WTF::String", %"class.std::__1::unique_ptr.551" }
%"class.crdtp::ProtocolObject" = type { %"class.crdtp::Serializable" }
%"class.crdtp::Serializable" = type { i32 (...)** }
%"class.std::__1::unique_ptr.551" = type { %"class.std::__1::__compressed_pair.552" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.553" }
%"struct.std::__1::__compressed_pair_elem.553" = type { %"class.blink::protocol::Audits::InspectorIssueDetails"* }
%"class.blink::protocol::Audits::InspectorIssueDetails" = type { %"class.crdtp::ProtocolObject.554", %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe.599", %"class.crdtp::detail::PtrMaybe.619", %"class.crdtp::detail::PtrMaybe.629", %"class.crdtp::detail::PtrMaybe.639", %"class.crdtp::detail::PtrMaybe.660", %"class.crdtp::detail::PtrMaybe.670", %"class.crdtp::detail::PtrMaybe.680", %"class.crdtp::detail::PtrMaybe.690", %"class.crdtp::detail::PtrMaybe.719", %"class.crdtp::detail::PtrMaybe.729", %"class.crdtp::detail::PtrMaybe.739" }
%"class.crdtp::ProtocolObject.554" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe" = type { %"class.std::__1::unique_ptr.557" }
%"class.std::__1::unique_ptr.557" = type { %"class.std::__1::__compressed_pair.558" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.559" }
%"struct.std::__1::__compressed_pair_elem.559" = type { %"class.blink::protocol::Audits::SameSiteCookieIssueDetails"* }
%"class.blink::protocol::Audits::SameSiteCookieIssueDetails" = type { %"class.crdtp::ProtocolObject.560", %"class.crdtp::detail::PtrMaybe.563", %"class.crdtp::detail::ValueMaybe", %"class.std::__1::unique_ptr.573", %"class.std::__1::unique_ptr.573", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe.586" }
%"class.crdtp::ProtocolObject.560" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.563" = type { %"class.std::__1::unique_ptr.564" }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::protocol::Audits::AffectedCookie"* }
%"class.blink::protocol::Audits::AffectedCookie" = type { %"class.crdtp::ProtocolObject.567", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.567" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.575" }
%"struct.std::__1::__compressed_pair_elem.575" = type { %"class.std::__1::vector.576"* }
%"class.std::__1::vector.576" = type { %"class.std::__1::__vector_base.577" }
%"class.std::__1::__vector_base.577" = type { %"class.WTF::String"*, %"class.WTF::String"*, %"class.std::__1::__compressed_pair.578" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"class.WTF::String"* }
%"class.crdtp::detail::ValueMaybe" = type { i8, %"class.WTF::String" }
%"class.crdtp::detail::PtrMaybe.586" = type { %"class.std::__1::unique_ptr.587" }
%"class.std::__1::unique_ptr.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.589" = type { %"class.blink::protocol::Audits::AffectedRequest"* }
%"class.blink::protocol::Audits::AffectedRequest" = type { %"class.crdtp::ProtocolObject.590", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.590" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.599" = type { %"class.std::__1::unique_ptr.600" }
%"class.std::__1::unique_ptr.600" = type { %"class.std::__1::__compressed_pair.601" }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.blink::protocol::Audits::MixedContentIssueDetails"* }
%"class.blink::protocol::Audits::MixedContentIssueDetails" = type { %"class.crdtp::ProtocolObject.603", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.586", %"class.crdtp::detail::PtrMaybe.606" }
%"class.crdtp::ProtocolObject.603" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.606" = type { %"class.std::__1::unique_ptr.607" }
%"class.std::__1::unique_ptr.607" = type { %"class.std::__1::__compressed_pair.608" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"class.blink::protocol::Audits::AffectedFrame"* }
%"class.blink::protocol::Audits::AffectedFrame" = type { %"class.crdtp::ProtocolObject.610", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.610" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.619" = type { %"class.std::__1::unique_ptr.620" }
%"class.std::__1::unique_ptr.620" = type { %"class.std::__1::__compressed_pair.621" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.622" }
%"struct.std::__1::__compressed_pair_elem.622" = type { %"class.blink::protocol::Audits::BlockedByResponseIssueDetails"* }
%"class.blink::protocol::Audits::BlockedByResponseIssueDetails" = type { %"class.crdtp::ProtocolObject.623", %"class.std::__1::unique_ptr.587", %"class.crdtp::detail::PtrMaybe.606", %"class.crdtp::detail::PtrMaybe.606", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.623" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.629" = type { %"class.std::__1::unique_ptr.630" }
%"class.std::__1::unique_ptr.630" = type { %"class.std::__1::__compressed_pair.631" }
%"class.std::__1::__compressed_pair.631" = type { %"struct.std::__1::__compressed_pair_elem.632" }
%"struct.std::__1::__compressed_pair_elem.632" = type { %"class.blink::protocol::Audits::HeavyAdIssueDetails"* }
%"class.blink::protocol::Audits::HeavyAdIssueDetails" = type { %"class.crdtp::ProtocolObject.633", %"class.WTF::String", %"class.WTF::String", %"class.std::__1::unique_ptr.607" }
%"class.crdtp::ProtocolObject.633" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.639" = type { %"class.std::__1::unique_ptr.640" }
%"class.std::__1::unique_ptr.640" = type { %"class.std::__1::__compressed_pair.641" }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails"* }
%"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails" = type { %"class.crdtp::ProtocolObject.643", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", i8, %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.606", %"class.crdtp::detail::PtrMaybe.646", %"class.crdtp::detail::ValueMaybe.656" }
%"class.crdtp::ProtocolObject.643" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.646" = type { %"class.std::__1::unique_ptr.647" }
%"class.std::__1::unique_ptr.647" = type { %"class.std::__1::__compressed_pair.648" }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.649" }
%"struct.std::__1::__compressed_pair_elem.649" = type { %"class.blink::protocol::Audits::SourceCodeLocation"* }
%"class.blink::protocol::Audits::SourceCodeLocation" = type { %"class.crdtp::ProtocolObject.650", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", i32, i32 }
%"class.crdtp::ProtocolObject.650" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::ValueMaybe.656" = type { i8, i32 }
%"class.crdtp::detail::PtrMaybe.660" = type { %"class.std::__1::unique_ptr.661" }
%"class.std::__1::unique_ptr.661" = type { %"class.std::__1::__compressed_pair.662" }
%"class.std::__1::__compressed_pair.662" = type { %"struct.std::__1::__compressed_pair_elem.663" }
%"struct.std::__1::__compressed_pair_elem.663" = type { %"class.blink::protocol::Audits::SharedArrayBufferIssueDetails"* }
%"class.blink::protocol::Audits::SharedArrayBufferIssueDetails" = type { %"class.crdtp::ProtocolObject.664", %"class.std::__1::unique_ptr.647", i8, %"class.WTF::String" }
%"class.crdtp::ProtocolObject.664" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.670" = type { %"class.std::__1::unique_ptr.671" }
%"class.std::__1::unique_ptr.671" = type { %"class.std::__1::__compressed_pair.672" }
%"class.std::__1::__compressed_pair.672" = type { %"struct.std::__1::__compressed_pair_elem.673" }
%"struct.std::__1::__compressed_pair_elem.673" = type { %"class.blink::protocol::Audits::TrustedWebActivityIssueDetails"* }
%"class.blink::protocol::Audits::TrustedWebActivityIssueDetails" = type { %"class.crdtp::ProtocolObject.674", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe.656", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.674" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.680" = type { %"class.std::__1::unique_ptr.681" }
%"class.std::__1::unique_ptr.681" = type { %"class.std::__1::__compressed_pair.682" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.683" }
%"struct.std::__1::__compressed_pair_elem.683" = type { %"class.blink::protocol::Audits::LowTextContrastIssueDetails"* }
%"class.blink::protocol::Audits::LowTextContrastIssueDetails" = type { %"class.crdtp::ProtocolObject.684", i32, %"class.WTF::String", double, double, double, %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.684" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.690" = type { %"class.std::__1::unique_ptr.691" }
%"class.std::__1::unique_ptr.691" = type { %"class.std::__1::__compressed_pair.692" }
%"class.std::__1::__compressed_pair.692" = type { %"struct.std::__1::__compressed_pair_elem.693" }
%"struct.std::__1::__compressed_pair_elem.693" = type { %"class.blink::protocol::Audits::CorsIssueDetails"* }
%"class.blink::protocol::Audits::CorsIssueDetails" = type { %"class.crdtp::ProtocolObject.694", %"class.std::__1::unique_ptr.697", i8, %"class.std::__1::unique_ptr.587", %"class.crdtp::detail::PtrMaybe.646", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe.706" }
%"class.crdtp::ProtocolObject.694" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.697" = type { %"class.std::__1::__compressed_pair.698" }
%"class.std::__1::__compressed_pair.698" = type { %"struct.std::__1::__compressed_pair_elem.699" }
%"struct.std::__1::__compressed_pair_elem.699" = type { %"class.blink::protocol::Network::CorsErrorStatus"* }
%"class.blink::protocol::Network::CorsErrorStatus" = type { %"class.crdtp::ProtocolObject.700", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.700" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.706" = type { %"class.std::__1::unique_ptr.707" }
%"class.std::__1::unique_ptr.707" = type { %"class.std::__1::__compressed_pair.708" }
%"class.std::__1::__compressed_pair.708" = type { %"struct.std::__1::__compressed_pair_elem.709" }
%"struct.std::__1::__compressed_pair_elem.709" = type { %"class.blink::protocol::Network::ClientSecurityState"* }
%"class.blink::protocol::Network::ClientSecurityState" = type { %"class.crdtp::ProtocolObject.710", i8, %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.710" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.719" = type { %"class.std::__1::unique_ptr.720" }
%"class.std::__1::unique_ptr.720" = type { %"class.std::__1::__compressed_pair.721" }
%"class.std::__1::__compressed_pair.721" = type { %"struct.std::__1::__compressed_pair_elem.722" }
%"struct.std::__1::__compressed_pair_elem.722" = type { %"class.blink::protocol::Audits::AttributionReportingIssueDetails"* }
%"class.blink::protocol::Audits::AttributionReportingIssueDetails" = type { %"class.crdtp::ProtocolObject.723", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.606", %"class.crdtp::detail::PtrMaybe.586", %"class.crdtp::detail::ValueMaybe.656", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.723" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.729" = type { %"class.std::__1::unique_ptr.730" }
%"class.std::__1::unique_ptr.730" = type { %"class.std::__1::__compressed_pair.731" }
%"class.std::__1::__compressed_pair.731" = type { %"struct.std::__1::__compressed_pair_elem.732" }
%"struct.std::__1::__compressed_pair_elem.732" = type { %"class.blink::protocol::Audits::QuirksModeIssueDetails"* }
%"class.blink::protocol::Audits::QuirksModeIssueDetails" = type { %"class.crdtp::ProtocolObject.733", i8, i32, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.733" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.739" = type { %"class.std::__1::unique_ptr.740" }
%"class.std::__1::unique_ptr.740" = type { %"class.std::__1::__compressed_pair.741" }
%"class.std::__1::__compressed_pair.741" = type { %"struct.std::__1::__compressed_pair_elem.742" }
%"struct.std::__1::__compressed_pair_elem.742" = type { %"class.blink::protocol::Audits::NavigatorUserAgentIssueDetails"* }
%"class.blink::protocol::Audits::NavigatorUserAgentIssueDetails" = type { %"class.crdtp::ProtocolObject.743", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.646" }
%"class.crdtp::ProtocolObject.743" = type { %"class.crdtp::Serializable" }
%"class.blink::WorkerReportingProxy" = type opaque
%class.scoped_refptr.755 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::scheduler::WorkerScheduler"* }
%"class.blink::scheduler::WorkerScheduler" = type { %"class.blink::FrameOrWorkerScheduler", %class.scoped_refptr.765, %class.scoped_refptr.765, %class.scoped_refptr.765, %"class.std::__1::map.766", i32, %"class.blink::scheduler::WorkerThreadScheduler"*, i8, i32, %"class.base::WeakPtrFactory.777" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.759", %"class.base::WeakPtrFactory.764" }
%"class.WTF::HashMap.759" = type { %"class.WTF::HashTable.760" }
%"class.WTF::HashTable.760" = type <{ %"struct.WTF::KeyValuePair.763"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.763" = type opaque
%"class.base::WeakPtrFactory.764" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.765 = type { %"class.blink::scheduler::NonMainThreadTaskQueue"* }
%"class.blink::scheduler::NonMainThreadTaskQueue" = type opaque
%"class.std::__1::map.766" = type { %"class.std::__1::__tree.767" }
%"class.std::__1::__tree.767" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.768", %"class.std::__1::__compressed_pair.772" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.blink::scheduler::WorkerThreadScheduler" = type opaque
%"class.base::WeakPtrFactory.777" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.WTF::HashMap.781" = type { %"class.WTF::HashTable.782" }
%"class.WTF::HashTable.782" = type <{ %"struct.WTF::KeyValuePair.785"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.785" = type opaque
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.blink::Platform::NestedMessageLoopRunner" = type { i32 (...)** }
%"class.blink::CrossThreadPersistent.786" = type { %"class.blink::PersistentBase.787" }
%"class.blink::PersistentBase.787" = type { %"class.blink::ConsoleMessageStorage"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.275" }
%"struct.std::__1::atomic.275" = type { %"struct.std::__1::__atomic_base.276" }
%"struct.std::__1::__atomic_base.276" = type { %"struct.std::__1::__cxx_atomic_impl.277" }
%"struct.std::__1::__cxx_atomic_impl.277" = type { %"struct.std::__1::__cxx_atomic_base_impl.278" }
%"struct.std::__1::__cxx_atomic_base_impl.278" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.279", i32, [4 x i8], %"class.std::__1::unique_ptr.417", %"class.std::__1::unique_ptr.417", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.428", %"class.std::__1::unique_ptr.434", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.446", %"class.std::__1::unique_ptr.452", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.459", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.279" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.282", %"class.std::__1::unique_ptr.288", %"class.std::__1::unique_ptr.294", %"class.std::__1::unique_ptr.300", %"class.std::__1::unique_ptr.306", %"class.std::__1::unique_ptr.312", %"class.std::__1::unique_ptr.323", %"class.std::__1::unique_ptr.330", %"class.std::__1::unique_ptr.330", %"class.std::__1::unique_ptr.337", %"class.std::__1::unique_ptr.344", %"class.std::__1::unique_ptr.351", %"class.std::__1::unique_ptr.351", %"class.std::__1::unique_ptr.358", %"class.std::__1::unique_ptr.365", %"class.std::__1::unique_ptr.372", %"class.std::__1::unique_ptr.397", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.282" = type { %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.294" = type { %"class.std::__1::__compressed_pair.295" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.300" = type { %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.315" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.315" = type { %"struct.std::__1::__atomic_base.316" }
%"struct.std::__1::__atomic_base.316" = type { %"struct.std::__1::__atomic_base.317" }
%"struct.std::__1::__atomic_base.317" = type { %"struct.std::__1::__cxx_atomic_impl.318" }
%"struct.std::__1::__cxx_atomic_impl.318" = type { %"struct.std::__1::__cxx_atomic_base_impl.319" }
%"struct.std::__1::__cxx_atomic_base_impl.319" = type { i64 }
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"class.blink::Worklist.326"* }
%"class.blink::Worklist.326" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.315" }
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"class.blink::Worklist.333"* }
%"class.blink::Worklist.333" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.315" }
%"class.std::__1::unique_ptr.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"class.blink::Worklist.340"* }
%"class.blink::Worklist.340" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.315" }
%"class.std::__1::unique_ptr.344" = type { %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"class.blink::Worklist.347"* }
%"class.blink::Worklist.347" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.315" }
%"class.std::__1::unique_ptr.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.blink::Worklist.354"* }
%"class.blink::Worklist.354" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.315" }
%"class.std::__1::unique_ptr.358" = type { %"class.std::__1::__compressed_pair.359" }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.360" }
%"struct.std::__1::__compressed_pair_elem.360" = type { %"class.blink::Worklist.361"* }
%"class.blink::Worklist.361" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.315" }
%"class.std::__1::unique_ptr.365" = type { %"class.std::__1::__compressed_pair.366" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"struct.std::__1::__compressed_pair_elem.367" = type { %"class.blink::Worklist.368"* }
%"class.blink::Worklist.368" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.315" }
%"class.std::__1::unique_ptr.372" = type { %"class.std::__1::__compressed_pair.373" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.374" }
%"struct.std::__1::__compressed_pair_elem.374" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.375", %"class.std::__1::__compressed_pair.383", %"class.std::__1::__compressed_pair.388", %"class.std::__1::__compressed_pair.390", [4 x i8] }>
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377", %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { float }
%"class.std::__1::unique_ptr.397" = type { %"class.std::__1::__compressed_pair.398" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.399" }
%"struct.std::__1::__compressed_pair_elem.399" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.400", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.409" }
%"class.WTF::Vector.409" = type { %"class.WTF::VectorBuffer.410" }
%"class.WTF::VectorBuffer.410" = type { %"class.WTF::VectorBufferBase.411" }
%"class.WTF::VectorBufferBase.411" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.417" = type { %"class.std::__1::__compressed_pair.418" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.419" }
%"struct.std::__1::__compressed_pair_elem.419" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.425" }
%"class.WTF::VectorBuffer.425" = type { %"class.WTF::VectorBufferBase.426" }
%"class.WTF::VectorBufferBase.426" = type { %"struct.std::__1::pair.427"*, i32, i32 }
%"struct.std::__1::pair.427" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.440" }
%"class.std::__1::unique_ptr.440" = type { %"class.std::__1::__compressed_pair.441" }
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.326"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.333"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.340"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.347"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.354"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1483", i64 }
%"class.std::__1::vector.1483" = type { %"class.std::__1::__vector_base.1484" }
%"class.std::__1::__vector_base.1484" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1485" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1485" = type { %"struct.std::__1::__compressed_pair_elem.1486" }
%"struct.std::__1::__compressed_pair_elem.1486" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.452" = type { %"class.std::__1::__compressed_pair.453" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.458 }
%class.scoped_refptr.458 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.459" = type { %"struct.std::__1::__atomic_base.460" }
%"struct.std::__1::__atomic_base.460" = type { %"struct.std::__1::__cxx_atomic_impl.461" }
%"struct.std::__1::__cxx_atomic_impl.461" = type { %"struct.std::__1::__cxx_atomic_base_impl.462" }
%"struct.std::__1::__cxx_atomic_base_impl.462" = type { i8 }
%"class.blink::CrossThreadPersistent.788" = type { %"class.blink::PersistentBase.789" }
%"class.blink::PersistentBase.789" = type { %"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerOrWorkletGlobalScope" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ExecutionContext.base", i8, %"class.WTF::String", %"class.base::UnguessableToken", %"class.blink::CrossThreadPersistent", %"class.std::__1::unique_ptr.463", %"class.blink::Member.469", %"class.blink::HeapHashSet.471", %class.scoped_refptr.478, %"class.blink::Member.480", %"class.blink::Member.482", i32, %"class.WTF::Vector.71", %"class.blink::WorkerReportingProxy"*, %"class.std::__1::bitset", %"class.blink::Deprecation", %"class.blink::Member.486" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.258" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.247" }
%"class.blink::HeapVector.247" = type { %"class.WTF::Vector.250" }
%"class.WTF::Vector.250" = type { %"class.WTF::VectorBuffer.251" }
%"class.WTF::VectorBuffer.251" = type { %"class.WTF::VectorBufferBase.252", [32 x i8] }
%"class.WTF::VectorBufferBase.252" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member.253" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.253" = type { %"class.blink::MemberBase.254" }
%"class.blink::MemberBase.254" = type { %"class.blink::HeapVector.255"* }
%"class.blink::HeapVector.255" = type opaque
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.WTF::Vector.261"* }
%"class.WTF::Vector.261" = type opaque
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.47", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.54", %"class.blink::Member.56", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.65", %"class.blink::Member.206", %"class.blink::Member.208", i8 }>
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::WorkerClients"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerClients" = type { %"class.blink::Supplementable.267" }
%"class.blink::Supplementable.267" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.268" }
%"class.blink::HeapHashMap.268" = type { %"class.WTF::HashMap.271" }
%"class.WTF::HashMap.271" = type { %"class.WTF::HashTable.272" }
%"class.WTF::HashTable.272" = type <{ %"struct.WTF::KeyValuePair.274"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.274" = type { i8*, %"class.blink::Member.2590" }
%"class.blink::Member.2590" = type { %"class.blink::MemberBase.2591" }
%"class.blink::MemberBase.2591" = type { %"class.blink::Supplement.2592"* }
%"class.blink::Supplement.2592" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2593" }
%"class.blink::Member.2593" = type { %"class.blink::MemberBase.2594" }
%"class.blink::MemberBase.2594" = type { %"class.blink::WorkerClients"* }
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.blink::WebContentSettingsClient"* }
%"class.blink::WebContentSettingsClient" = type { i32 (...)** }
%"class.blink::Member.469" = type { %"class.blink::MemberBase.470" }
%"class.blink::MemberBase.470" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.1186", %"class.blink::Member.1188", %"class.blink::Member.1192", %class.scoped_refptr.755, %class.scoped_refptr.755, %"class.blink::Member.1194", %"class.blink::Member.1196", %"class.blink::Member.1202", %"class.blink::Member.1206", %"class.blink::Member.1258", %"class.blink::HeapHashMap.1260", %"class.blink::HeapHashSet.1267", %"class.blink::HeapHashSet.1267", %"class.blink::HeapHashMap.1431", %"class.blink::HeapVector.1438", %"class.blink::Member.1446", %"class.blink::HeapTaskRunnerTimer", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.1449", %"class.WTF::Vector.1456", %"class.blink::HeapHashSet.1462", %"class.blink::HeapHashSet.1462", %"class.std::__1::unique_ptr.1468", %"class.base::WeakPtr.1251", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote", %"class.blink::Member.1480", i8, i8, %"class.base::WeakPtrFactory.1482" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1186" = type { %"class.blink::MemberBase.1187" }
%"class.blink::MemberBase.1187" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.1188" = type { %"class.blink::MemberBase.1189" }
%"class.blink::MemberBase.1189" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type { i32 (...)** }
%"class.blink::Member.1192" = type { %"class.blink::MemberBase.1193" }
%"class.blink::MemberBase.1193" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%"class.blink::Member.1194" = type { %"class.blink::MemberBase.1195" }
%"class.blink::MemberBase.1195" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.1196" = type { %"class.blink::MemberBase.1197" }
%"class.blink::MemberBase.1197" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.1200" }
%"class.blink::Member.1200" = type { %"class.blink::MemberBase.1201" }
%"class.blink::MemberBase.1201" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.1202" = type { %"class.blink::MemberBase.1203" }
%"class.blink::MemberBase.1203" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.1206" = type { %"class.blink::MemberBase.1207" }
%"class.blink::MemberBase.1207" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.1210", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.1212", %"class.WTF::HashSet.1217", i8, [3 x i8], i32, %"class.blink::HeapHashMap.1221", %"class.std::__1::map.1228", %"class.std::__1::map.1239", %"class.std::__1::unique_ptr.1248", %"class.blink::Member.1196", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.1255", %"class.mojo::InlinedStructPtr.1257", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.1210" = type { %"class.blink::MemberBase.1211" }
%"class.blink::MemberBase.1211" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.1212" = type { %"class.WTF::HashTable.1213" }
%"class.WTF::HashTable.1213" = type <{ %"struct.WTF::KeyValuePair.1216"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1216" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.1217" = type { %"class.WTF::HashTable.1218" }
%"class.WTF::HashTable.1218" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.1221" = type { %"class.WTF::HashMap.1224" }
%"class.WTF::HashMap.1224" = type { %"class.WTF::HashTable.1225" }
%"class.WTF::HashTable.1225" = type <{ %"struct.WTF::KeyValuePair.1227"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1227" = type opaque
%"class.std::__1::map.1228" = type { %"class.std::__1::__tree.1229" }
%"class.std::__1::__tree.1229" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1230", %"class.std::__1::__compressed_pair.1234" }
%"class.std::__1::__compressed_pair.1230" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.1234" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::map.1239" = type { %"class.std::__1::__tree.1240" }
%"class.std::__1::__tree.1240" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1241", %"class.std::__1::__compressed_pair.1245" }
%"class.std::__1::__compressed_pair.1241" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.1245" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::unique_ptr.1248" = type { %"class.std::__1::__compressed_pair.1249" }
%"class.std::__1::__compressed_pair.1249" = type { %"struct.std::__1::__compressed_pair_elem.1250" }
%"struct.std::__1::__compressed_pair_elem.1250" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr.1251", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.1255" = type { %"class.blink::MemberBase.1256" }
%"class.blink::MemberBase.1256" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.mojo::InlinedStructPtr.1257" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1258" = type { %"class.blink::MemberBase.1259" }
%"class.blink::MemberBase.1259" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.1260" = type { %"class.WTF::HashMap.1263" }
%"class.WTF::HashMap.1263" = type { %"class.WTF::HashTable.1264" }
%"class.WTF::HashTable.1264" = type <{ %"struct.WTF::KeyValuePair.1266"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1266" = type opaque
%"class.blink::HeapHashSet.1267" = type { %"class.WTF::HashSet.1270" }
%"class.WTF::HashSet.1270" = type { %"class.WTF::HashTable.1271" }
%"class.WTF::HashTable.1271" = type <{ %"class.blink::WeakMember.1273"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1273" = type { %"class.blink::MemberBase.1274" }
%"class.blink::MemberBase.1274" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.1277", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.1297", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.1380", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.1406", %"class.blink::ResourceResponse", %class.scoped_refptr.1408, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.1277" = type { %"class.absl::optional_internal::optional_data.1278" }
%"class.absl::optional_internal::optional_data.1278" = type { %"class.absl::optional_internal::optional_data_base.1279" }
%"class.absl::optional_internal::optional_data_base.1279" = type { %"class.absl::optional_internal::optional_data_dtor_base.1280" }
%"class.absl::optional_internal::optional_data_dtor_base.1280" = type { i8, %union.anon.1281 }
%union.anon.1281 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.1282", i8, %"class.absl::optional.1287", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.498" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.498" = type { %"class.std::__1::__compressed_pair.499" }
%"class.std::__1::__compressed_pair.499" = type { %"struct.std::__1::__compressed_pair_elem.500" }
%"struct.std::__1::__compressed_pair_elem.500" = type { %"class.blink::KURL"* }
%"class.absl::optional.1282" = type { %"class.absl::optional_internal::optional_data.1283" }
%"class.absl::optional_internal::optional_data.1283" = type { %"class.absl::optional_internal::optional_data_base.1284" }
%"class.absl::optional_internal::optional_data_base.1284" = type { %"class.absl::optional_internal::optional_data_dtor_base.1285" }
%"class.absl::optional_internal::optional_data_dtor_base.1285" = type { i8, [7 x i8], %union.anon.1286 }
%union.anon.1286 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.1287" = type { %"class.absl::optional_internal::optional_data.1288" }
%"class.absl::optional_internal::optional_data.1288" = type { %"class.absl::optional_internal::optional_data_base.1289" }
%"class.absl::optional_internal::optional_data_base.1289" = type { %"class.absl::optional_internal::optional_data_dtor_base.1290" }
%"class.absl::optional_internal::optional_data_dtor_base.1290" = type { i8, %union.anon.1291 }
%union.anon.1291 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.1292", %"class.WTF::Vector.95" }
%"class.WTF::Vector.1292" = type { %"class.WTF::VectorBuffer.1293" }
%"class.WTF::VectorBuffer.1293" = type { %"class.WTF::VectorBufferBase.1294" }
%"class.WTF::VectorBufferBase.1294" = type { i32*, i32, i32 }
%"class.WTF::Vector.1297" = type { %"class.WTF::VectorBuffer.1298" }
%"class.WTF::VectorBuffer.1298" = type { %"class.WTF::VectorBufferBase.1299" }
%"class.WTF::VectorBufferBase.1299" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.1376" }
%"class.WTF::HashMap.1376" = type { %"class.WTF::HashTable.1377" }
%"class.WTF::HashTable.1377" = type <{ %"struct.WTF::KeyValuePair.1379"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1379" = type <{ %"class.blink::WeakMember.2595", i32, [4 x i8] }>
%"class.blink::WeakMember.2595" = type { %"class.blink::MemberBase.2596" }
%"class.blink::MemberBase.2596" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2597", [7 x i8], %"class.blink::Member.1444", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.2597" = type { i8 }
%"class.blink::Member.1444" = type { %"class.blink::MemberBase.1274" }
%"class.blink::HeapHashSet.1380" = type { %"class.WTF::HashSet.1383" }
%"class.WTF::HashSet.1383" = type { %"class.WTF::HashTable.1384" }
%"class.WTF::HashTable.1384" = type <{ %"class.blink::WeakMember.1386"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1386" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet.931", i8, i8, %class.scoped_refptr.1387, %class.scoped_refptr.1402, %class.scoped_refptr.1404 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet.931" = type { %"class.WTF::HashTable.932" }
%"class.WTF::HashTable.932" = type <{ %"struct.std::__1::pair.935"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.935" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.1387 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1388", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.1388" = type { %"class.base::RefCounted.1389" }
%"class.base::RefCounted.1389" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.1390" }
%"class.blink::PersistentBase.1390" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1393" }
%"class.blink::HeapHashMap.1393" = type { %"class.WTF::HashMap.1396" }
%"class.WTF::HashMap.1396" = type { %"class.WTF::HashTable.1397" }
%"class.WTF::HashTable.1397" = type <{ %"struct.WTF::KeyValuePair.1399"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1399" = type { %"class.blink::WeakMember.1400", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1400" = type { %"class.blink::MemberBase.1401" }
%"class.blink::MemberBase.1401" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%class.scoped_refptr.1402 = type { %"class.base::RefCountedData.1403"* }
%"class.base::RefCountedData.1403" = type opaque
%class.scoped_refptr.1404 = type { %"class.base::RefCountedData.1405"* }
%"class.base::RefCountedData.1405" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.955" }
%"class.base::time_internal::TimeBase.955" = type { i64 }
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.14, %class.scoped_refptr.14, %class.scoped_refptr.14, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.1305, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.1317", %"class.absl::optional.1322", %"class.absl::optional.1332", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.1151", %"class.absl::optional.1332", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.1332", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.1151", %"class.absl::optional.1337", i8, %class.scoped_refptr.1343 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.1300" }
%"class.WTF::HashMap.1300" = type { %"class.WTF::HashTable.1301" }
%"class.WTF::HashTable.1301" = type <{ %"struct.WTF::KeyValuePair.1304"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1304" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.1305 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.1306", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.1315, i8, %"class.url::Origin" }
%"class.base::RefCounted.1306" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::WebVector" = type { %"class.std::__1::vector.1307" }
%"class.std::__1::vector.1307" = type { %"class.std::__1::__vector_base.1308" }
%"class.std::__1::__vector_base.1308" = type { %"class.std::__1::unique_ptr.1309"*, %"class.std::__1::unique_ptr.1309"*, %"class.std::__1::__compressed_pair.1310" }
%"class.std::__1::unique_ptr.1309" = type { %"class.std::__1::__compressed_pair.2576" }
%"class.std::__1::__compressed_pair.2576" = type { %"struct.std::__1::__compressed_pair_elem.2577" }
%"struct.std::__1::__compressed_pair_elem.2577" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1310" = type { %"struct.std::__1::__compressed_pair_elem.1311" }
%"struct.std::__1::__compressed_pair_elem.1311" = type { %"class.std::__1::unique_ptr.1309"* }
%class.scoped_refptr.1315 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1316", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1316" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.1317" = type { %"class.absl::optional_internal::optional_data.1318" }
%"class.absl::optional_internal::optional_data.1318" = type { %"class.absl::optional_internal::optional_data_base.1319" }
%"class.absl::optional_internal::optional_data_base.1319" = type { %"class.absl::optional_internal::optional_data_dtor_base.1320" }
%"class.absl::optional_internal::optional_data_dtor_base.1320" = type { i8, %union.anon.1321 }
%union.anon.1321 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.1322" = type { %"class.absl::optional_internal::optional_data.1323" }
%"class.absl::optional_internal::optional_data.1323" = type { %"class.absl::optional_internal::optional_data_base.1324" }
%"class.absl::optional_internal::optional_data_base.1324" = type { %"class.absl::optional_internal::optional_data_dtor_base.1325" }
%"class.absl::optional_internal::optional_data_dtor_base.1325" = type { i8, %union.anon.1326 }
%union.anon.1326 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.1327", %"class.WTF::Vector.95", %"class.WTF::String" }
%"class.WTF::Vector.1327" = type { %"class.WTF::VectorBuffer.1328" }
%"class.WTF::VectorBuffer.1328" = type { %"class.WTF::VectorBufferBase.1329" }
%"class.WTF::VectorBufferBase.1329" = type { %class.scoped_refptr.14*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.124", %"class.absl::optional.124" }
%"class.absl::optional.1332" = type { %"class.absl::optional_internal::optional_data.1333" }
%"class.absl::optional_internal::optional_data.1333" = type { %"class.absl::optional_internal::optional_data_base.1334" }
%"class.absl::optional_internal::optional_data_base.1334" = type { %"class.absl::optional_internal::optional_data_dtor_base.1335" }
%"class.absl::optional_internal::optional_data_dtor_base.1335" = type { i8, %union.anon.1336 }
%union.anon.1336 = type { %"class.WTF::String" }
%"class.absl::optional.1151" = type { %"class.absl::optional_internal::optional_data.1152" }
%"class.absl::optional_internal::optional_data.1152" = type { %"class.absl::optional_internal::optional_data_base.1153" }
%"class.absl::optional_internal::optional_data_base.1153" = type { %"class.absl::optional_internal::optional_data_dtor_base.1154" }
%"class.absl::optional_internal::optional_data_dtor_base.1154" = type { i8, %union.anon.1155 }
%union.anon.1155 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.1337" = type { %"class.absl::optional_internal::optional_data.1338" }
%"class.absl::optional_internal::optional_data.1338" = type { %"class.absl::optional_internal::optional_data_base.1339" }
%"class.absl::optional_internal::optional_data_base.1339" = type { %"class.absl::optional_internal::optional_data_dtor_base.1340" }
%"class.absl::optional_internal::optional_data_dtor_base.1340" = type { i8, %union.anon.1341 }
%union.anon.1341 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1342" }
%"class.mojo::PendingRemote.1342" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.1343 = type { %"class.base::RefCountedData.1344"* }
%"class.base::RefCountedData.1344" = type { %"class.base::RefCountedThreadSafe.2581", %"class.base::internal::flat_tree.2582" }
%"class.base::RefCountedThreadSafe.2581" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.2582" = type { %"class.std::__1::vector.2583" }
%"class.std::__1::vector.2583" = type { %"class.std::__1::__vector_base.2584" }
%"class.std::__1::__vector_base.2584" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2585" }
%"class.std::__1::__compressed_pair.2585" = type { %"struct.std::__1::__compressed_pair_elem.2586" }
%"struct.std::__1::__compressed_pair_elem.2586" = type { i32* }
%"class.blink::Member.1406" = type { %"class.blink::MemberBase.1407" }
%"class.blink::MemberBase.1407" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.1345", %class.scoped_refptr.1360, %class.scoped_refptr.1361, %"struct.blink::CacheControlHeader", %"class.absl::optional.124", %"class.absl::optional.1362", %"class.absl::optional.1362", %"class.absl::optional.1362", i64, %"class.blink::KURL", %"class.WTF::Vector.1367", %"class.WTF::String", %"class.WTF::Vector.95", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.1151", %"class.WTF::Vector.95", %"class.blink::KURL", %"class.absl::optional.1035" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.1345" = type { %"class.absl::optional_internal::optional_data.1346" }
%"class.absl::optional_internal::optional_data.1346" = type { %"class.absl::optional_internal::optional_data_base.1347" }
%"class.absl::optional_internal::optional_data_base.1347" = type { %"class.absl::optional_internal::optional_data_dtor_base.1348" }
%"class.absl::optional_internal::optional_data_dtor_base.1348" = type { i8, %union.anon.1349 }
%union.anon.1349 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.95", %"class.WTF::String", i64, i64, %"class.WTF::Vector.1350", %"class.WTF::Vector.1355" }
%"class.WTF::Vector.1350" = type { %"class.WTF::VectorBuffer.1351" }
%"class.WTF::VectorBuffer.1351" = type { %"class.WTF::VectorBufferBase.1352" }
%"class.WTF::VectorBufferBase.1352" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.1355" = type { %"class.WTF::VectorBuffer.1356" }
%"class.WTF::VectorBuffer.1356" = type { %"class.WTF::VectorBufferBase.1357" }
%"class.WTF::VectorBufferBase.1357" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1360 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.1361 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.1362" = type { %"class.absl::optional_internal::optional_data.1363" }
%"class.absl::optional_internal::optional_data.1363" = type { %"class.absl::optional_internal::optional_data_base.1364" }
%"class.absl::optional_internal::optional_data_base.1364" = type { %"class.absl::optional_internal::optional_data_dtor_base.1365" }
%"class.absl::optional_internal::optional_data_dtor_base.1365" = type { i8, %union.anon.1366 }
%union.anon.1366 = type { %"class.base::Time" }
%"class.WTF::Vector.1367" = type { %"class.WTF::VectorBuffer.1368" }
%"class.WTF::VectorBuffer.1368" = type { %"class.WTF::VectorBufferBase.1369" }
%"class.WTF::VectorBufferBase.1369" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.1035" = type { %"class.absl::optional_internal::optional_data.1036" }
%"class.absl::optional_internal::optional_data.1036" = type { %"class.absl::optional_internal::optional_data_base.1037" }
%"class.absl::optional_internal::optional_data_base.1037" = type { %"class.absl::optional_internal::optional_data_dtor_base.1038" }
%"class.absl::optional_internal::optional_data_dtor_base.1038" = type { i8, %union.anon.1039 }
%union.anon.1039 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.1408 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1409", i64, %"class.WTF::Vector.1411", %"class.WTF::Vector.1416" }
%"class.WTF::RefCounted.1409" = type { %"class.base::RefCounted.1410" }
%"class.base::RefCounted.1410" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1411" = type { %"class.WTF::VectorBuffer.1412" }
%"class.WTF::VectorBuffer.1412" = type { %"class.WTF::VectorBufferBase.1413" }
%"class.WTF::VectorBufferBase.1413" = type { i8*, i32, i32 }
%"class.WTF::Vector.1416" = type { %"class.WTF::VectorBuffer.1417" }
%"class.WTF::VectorBuffer.1417" = type { %"class.WTF::VectorBufferBase.1418" }
%"class.WTF::VectorBufferBase.1418" = type { %"class.std::__1::unique_ptr.1419"*, i32, i32 }
%"class.std::__1::unique_ptr.1419" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.1422" }
%"class.std::__1::__tree.1422" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1423", %"class.std::__1::__compressed_pair.1427" }
%"class.std::__1::__compressed_pair.1423" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.1427" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.blink::HeapHashMap.1431" = type { %"class.WTF::HashMap.1434" }
%"class.WTF::HashMap.1434" = type { %"class.WTF::HashTable.1435" }
%"class.WTF::HashTable.1435" = type <{ %"struct.WTF::KeyValuePair.1437"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1437" = type opaque
%"class.blink::HeapVector.1438" = type { %"class.WTF::Vector.1441" }
%"class.WTF::Vector.1441" = type { %"class.WTF::VectorBuffer.1442" }
%"class.WTF::VectorBuffer.1442" = type { %"class.WTF::VectorBufferBase.1443" }
%"class.WTF::VectorBufferBase.1443" = type { %"class.blink::Member.1444"*, i32, i32 }
%"class.blink::Member.1446" = type { %"class.blink::MemberBase.1447" }
%"class.blink::MemberBase.1447" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.477", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.755, %"class.base::WeakPtrFactory.1448" }
%"class.base::WeakPtrFactory.1448" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.477" = type { %"class.blink::MemberBase.470" }
%"class.blink::HeapHashMap.1449" = type { %"class.WTF::HashMap.1452" }
%"class.WTF::HashMap.1452" = type { %"class.WTF::HashTable.1453" }
%"class.WTF::HashTable.1453" = type <{ %"struct.WTF::KeyValuePair.1455"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1455" = type opaque
%"class.WTF::Vector.1456" = type { %"class.WTF::VectorBuffer.1457" }
%"class.WTF::VectorBuffer.1457" = type { %"class.WTF::VectorBufferBase.1458" }
%"class.WTF::VectorBufferBase.1458" = type { %class.scoped_refptr.1459*, i32, i32 }
%class.scoped_refptr.1459 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.1462" = type { %"class.WTF::HashSet.1465" }
%"class.WTF::HashSet.1465" = type { %"class.WTF::HashTable.1466" }
%"class.WTF::HashTable.1466" = type <{ %"class.blink::Member.1406"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1468" = type { %"class.std::__1::__compressed_pair.1469" }
%"class.std::__1::__compressed_pair.1469" = type { %"struct.std::__1::__compressed_pair_elem.1470" }
%"struct.std::__1::__compressed_pair_elem.1470" = type { %"class.WTF::HashSet.1471"* }
%"class.WTF::HashSet.1471" = type { %"class.WTF::HashTable.1472" }
%"class.WTF::HashTable.1472" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.base::WeakPtr.1251" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.874 }
%class.scoped_refptr.874 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1478" }
%"class.blink::Member.1478" = type { %"class.blink::MemberBase.1479" }
%"class.blink::MemberBase.1479" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1480" = type { %"class.blink::MemberBase.1481" }
%"class.blink::MemberBase.1481" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.1482" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.471" = type { %"class.WTF::HashSet.474" }
%"class.WTF::HashSet.474" = type { %"class.WTF::HashTable.475" }
%"class.WTF::HashTable.475" = type <{ %"class.blink::WeakMember.477"*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.478 = type { %"class.blink::WebWorkerFetchContext"* }
%"class.blink::WebWorkerFetchContext" = type <{ i32 (...)**, %"class.base::RefCounted.479", [4 x i8] }>
%"class.base::RefCounted.479" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.480" = type { %"class.blink::MemberBase.481" }
%"class.blink::MemberBase.481" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"class.blink::Member.482" = type { %"class.blink::MemberBase.483" }
%"class.blink::MemberBase.483" = type { %"class.blink::WorkerOrWorkletScriptController"* }
%"class.blink::WorkerOrWorkletScriptController" = type opaque
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.484", i32, [4 x i8] }>
%"class.std::__1::bitset.484" = type { %"class.std::__1::__bitset.485" }
%"class.std::__1::__bitset.485" = type { [25 x i64] }
%"class.blink::Member.486" = type { %"class.blink::MemberBase.487" }
%"class.blink::MemberBase.487" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type { %"class.blink::V8PerContextData::Data", %"class.blink::NameClient" }
%"class.blink::V8PerContextData::Data" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::CrossThreadPersistent.790" = type { %"class.blink::PersistentBase.791" }
%"class.blink::PersistentBase.791" = type { %"class.blink::WorkerInspectorController"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerInspectorController" = type opaque
%class.scoped_refptr.792 = type { %"class.blink::WorkerThread::RefCountedWaitableEvent"* }
%"class.blink::WorkerThread::RefCountedWaitableEvent" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.793 }
%class.scoped_refptr.793 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::HashSet.794" = type { %"class.WTF::HashTable.795" }
%"class.WTF::HashTable.795" = type <{ %"class.blink::WorkerThread"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashSet.798" = type { %"class.WTF::HashTable.799" }
%"class.WTF::HashTable.799" = type <{ %"class.std::__1::unique_ptr.802"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.802" = type opaque
%"class.blink::WorkerThreadDebugger" = type { %"class.blink::ThreadDebugger", i32, [4 x i8], %"class.WTF::HashMap.1490" }
%"class.WTF::HashMap.1490" = type { %"class.WTF::HashTable.1491" }
%"class.WTF::HashTable.1491" = type <{ %"struct.WTF::KeyValuePair.1494"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1494" = type opaque
%"class.blink::MainThreadDebugger" = type { %"class.blink::ThreadDebugger", %"class.std::__1::unique_ptr.2486", i8, %"class.std::__1::unique_ptr.2492" }
%"class.std::__1::unique_ptr.2486" = type { %"class.std::__1::__compressed_pair.2487" }
%"class.std::__1::__compressed_pair.2487" = type { %"struct.std::__1::__compressed_pair_elem.2488" }
%"struct.std::__1::__compressed_pair_elem.2488" = type { %"class.blink::MainThreadDebugger::ClientMessageLoop"* }
%"class.blink::MainThreadDebugger::ClientMessageLoop" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2492" = type { %"class.std::__1::__compressed_pair.2493" }
%"class.std::__1::__compressed_pair.2493" = type { %"struct.std::__1::__compressed_pair_elem.2494" }
%"struct.std::__1::__compressed_pair_elem.2494" = type { %"class.blink::DocumentLifecycle::PostponeTransitionScope"* }
%"class.blink::DocumentLifecycle::PostponeTransitionScope" = type { %"class.blink::DocumentLifecycle"* }
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.v8_inspector::StringBuffer" = type { i32 (...)** }
%"class.v8_inspector::StringView" = type { i8, i64, %union.anon.2504 }
%union.anon.2504 = type { i8* }

@.str = private unnamed_addr constant [16 x i8] c"network request\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8

@_ZN5blink23RequestDebugHeaderScopeC1EPNS_16ExecutionContextERKN3WTF6StringE = hidden unnamed_addr alias void (%"class.blink::RequestDebugHeaderScope"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*), void (%"class.blink::RequestDebugHeaderScope"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*)* @_ZN5blink23RequestDebugHeaderScopeC2EPNS_16ExecutionContextERKN3WTF6StringE
@_ZN5blink23RequestDebugHeaderScopeD1Ev = hidden unnamed_addr alias void (%"class.blink::RequestDebugHeaderScope"*), void (%"class.blink::RequestDebugHeaderScope"*)* @_ZN5blink23RequestDebugHeaderScopeD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink23RequestDebugHeaderScope32CaptureStackIdForCurrentLocationEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.v8_inspector::V8StackTraceId", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = icmp eq %"class.blink::ExecutionContext"* %0, null
  br i1 %4, label %47, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::ExecutionContext"* %0 to i1 (%"class.blink::ExecutionContext"*)***
  %7 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %7, i64 3
  %9 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::ExecutionContext"* nonnull %0) #3
  br i1 %10, label %11, label %21

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 -1, i32 22
  %13 = icmp eq %"class.blink::DOMTimerCoordinator"* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.blink::DOMTimerCoordinator", %"class.blink::DOMTimerCoordinator"* %12, i64 67
  %16 = bitcast %"class.blink::DOMTimerCoordinator"* %15 to %"class.blink::WorkerThread"**
  %17 = load %"class.blink::WorkerThread"*, %"class.blink::WorkerThread"** %16, align 8
  %18 = tail call %"class.v8::Isolate"* @_ZN5blink12WorkerThread10GetIsolateEv(%"class.blink::WorkerThread"* %17) #3
  %19 = tail call %"class.blink::WorkerThreadDebugger"* @_ZN5blink20WorkerThreadDebugger4FromEPN2v87IsolateE(%"class.v8::Isolate"* %18) #3
  %20 = getelementptr inbounds %"class.blink::WorkerThreadDebugger", %"class.blink::WorkerThreadDebugger"* %19, i64 0, i32 0
  br label %33

21:                                               ; preds = %11, %5
  %22 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %6, align 8
  %23 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %22, i64 1
  %24 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %23, align 8
  %25 = tail call zeroext i1 %24(%"class.blink::ExecutionContext"* nonnull %0) #3
  %26 = xor i1 %25, true
  %27 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 -1, i32 8
  %28 = icmp eq i32* %27, null
  %29 = or i1 %28, %26
  br i1 %29, label %47, label %30

30:                                               ; preds = %21
  %31 = tail call %"class.blink::MainThreadDebugger"* @_ZN5blink18MainThreadDebugger8InstanceEv() #3
  %32 = getelementptr inbounds %"class.blink::MainThreadDebugger", %"class.blink::MainThreadDebugger"* %31, i64 0, i32 0
  br label %33

33:                                               ; preds = %30, %14
  %34 = phi %"class.blink::ThreadDebugger"* [ %20, %14 ], [ %32, %30 ]
  %35 = icmp eq %"class.blink::ThreadDebugger"* %34, null
  br i1 %35, label %47, label %36

36:                                               ; preds = %33
  %37 = bitcast %"struct.v8_inspector::V8StackTraceId"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %37) #3
  %38 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #3
  %39 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %40 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i8** %41, align 8
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 15, i32* %42, align 8
  call void @_ZN5blink14ThreadDebugger22StoreCurrentStackTraceERKN3WTF10StringViewE(%"struct.v8_inspector::V8StackTraceId"* nonnull sret %2, %"class.blink::ThreadDebugger"* nonnull %34, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #3
  %43 = call %"class.v8_inspector::StringBuffer"* @_ZN12v8_inspector14V8StackTraceId8ToStringEv(%"struct.v8_inspector::V8StackTraceId"* nonnull %2) #3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %37) #3
  %44 = icmp eq %"class.v8_inspector::StringBuffer"* %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %36
  %46 = call %"class.WTF::StringImpl"* @_ZN5blink12ToCoreStringENSt3__110unique_ptrIN12v8_inspector12StringBufferENS0_14default_deleteIS3_EEEE(%"class.v8_inspector::StringBuffer"* nonnull %43) #3
  br label %47

47:                                               ; preds = %36, %21, %1, %45, %33
  %48 = phi %"class.WTF::StringImpl"* [ null, %33 ], [ %46, %45 ], [ null, %21 ], [ null, %1 ], [ null, %36 ]
  ret %"class.WTF::StringImpl"* %48
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::WorkerThreadDebugger"* @_ZN5blink20WorkerThreadDebugger4FromEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Isolate"* @_ZN5blink12WorkerThread10GetIsolateEv(%"class.blink::WorkerThread"*) local_unnamed_addr #2

declare %"class.blink::MainThreadDebugger"* @_ZN5blink18MainThreadDebugger8InstanceEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink14ThreadDebugger22StoreCurrentStackTraceERKN3WTF10StringViewE(%"struct.v8_inspector::V8StackTraceId"* sret, %"class.blink::ThreadDebugger"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare %"class.v8_inspector::StringBuffer"* @_ZN12v8_inspector14V8StackTraceId8ToStringEv(%"struct.v8_inspector::V8StackTraceId"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink12ToCoreStringENSt3__110unique_ptrIN12v8_inspector12StringBufferENS0_14default_deleteIS3_EEEE(%"class.v8_inspector::StringBuffer"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23RequestDebugHeaderScopeC2EPNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::RequestDebugHeaderScope"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"struct.v8_inspector::V8StackTraceId", align 16
  %5 = alloca %"class.v8_inspector::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = getelementptr inbounds %"class.blink::RequestDebugHeaderScope", %"class.blink::RequestDebugHeaderScope"* %0, i64 0, i32 0
  store %"class.blink::ThreadDebugger"* null, %"class.blink::ThreadDebugger"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::RequestDebugHeaderScope", %"class.blink::RequestDebugHeaderScope"* %0, i64 0, i32 1
  tail call void @_ZN12v8_inspector14V8StackTraceIdC1Ev(%"struct.v8_inspector::V8StackTraceId"* %8) #3
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %71, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %71, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.v8_inspector::V8StackTraceId"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #3
  %18 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #3
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %19, align 8
  %20 = load i32, i32* %13, align 4
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 1
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %23 = bitcast i8** %22 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %20, i32* %24, align 8
  call void @_ZN5blink23ToV8InspectorStringViewERKN3WTF10StringViewE(%"class.v8_inspector::StringView"* nonnull sret %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #3
  call void @_ZN12v8_inspector14V8StackTraceIdC1ENS_10StringViewE(%"struct.v8_inspector::V8StackTraceId"* nonnull %4, %"class.v8_inspector::StringView"* nonnull byval(%"class.v8_inspector::StringView") align 8 %5) #3
  %25 = bitcast %"struct.v8_inspector::V8StackTraceId"* %4 to <2 x i64>*
  %26 = load <2 x i64>, <2 x i64>* %25, align 16
  %27 = bitcast %"struct.v8_inspector::V8StackTraceId"* %8 to <2 x i64>*
  store <2 x i64> %26, <2 x i64>* %27, align 8
  %28 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %4, i64 0, i32 1, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.blink::RequestDebugHeaderScope", %"class.blink::RequestDebugHeaderScope"* %0, i64 0, i32 1, i32 1, i32 1
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"struct.v8_inspector::V8StackTraceId", %"struct.v8_inspector::V8StackTraceId"* %4, i64 0, i32 2
  %32 = load i8, i8* %31, align 8, !range !2
  %33 = getelementptr inbounds %"class.blink::RequestDebugHeaderScope", %"class.blink::RequestDebugHeaderScope"* %0, i64 0, i32 1, i32 2
  store i8 %32, i8* %33, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #3
  %34 = call zeroext i1 @_ZNK12v8_inspector14V8StackTraceId9IsInvalidEv(%"struct.v8_inspector::V8StackTraceId"* %8) #3
  br i1 %34, label %71, label %35

35:                                               ; preds = %16
  %36 = icmp eq %"class.blink::ExecutionContext"* %1, null
  br i1 %36, label %65, label %37

37:                                               ; preds = %35
  %38 = bitcast %"class.blink::ExecutionContext"* %1 to i1 (%"class.blink::ExecutionContext"*)***
  %39 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %38, align 8
  %40 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %39, i64 3
  %41 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %40, align 8
  %42 = call zeroext i1 %41(%"class.blink::ExecutionContext"* nonnull %1) #3
  br i1 %42, label %43, label %53

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %1, i64 -1, i32 22
  %45 = icmp eq %"class.blink::DOMTimerCoordinator"* %44, null
  br i1 %45, label %53, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"class.blink::DOMTimerCoordinator", %"class.blink::DOMTimerCoordinator"* %44, i64 67
  %48 = bitcast %"class.blink::DOMTimerCoordinator"* %47 to %"class.blink::WorkerThread"**
  %49 = load %"class.blink::WorkerThread"*, %"class.blink::WorkerThread"** %48, align 8
  %50 = call %"class.v8::Isolate"* @_ZN5blink12WorkerThread10GetIsolateEv(%"class.blink::WorkerThread"* %49) #3
  %51 = call %"class.blink::WorkerThreadDebugger"* @_ZN5blink20WorkerThreadDebugger4FromEPN2v87IsolateE(%"class.v8::Isolate"* %50) #3
  %52 = getelementptr inbounds %"class.blink::WorkerThreadDebugger", %"class.blink::WorkerThreadDebugger"* %51, i64 0, i32 0
  store %"class.blink::ThreadDebugger"* %52, %"class.blink::ThreadDebugger"** %7, align 8
  br label %67

53:                                               ; preds = %43, %37
  %54 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %38, align 8
  %55 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %54, i64 1
  %56 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %55, align 8
  %57 = call zeroext i1 %56(%"class.blink::ExecutionContext"* nonnull %1) #3
  %58 = xor i1 %57, true
  %59 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %1, i64 -1, i32 8
  %60 = icmp eq i32* %59, null
  %61 = or i1 %60, %58
  br i1 %61, label %65, label %62

62:                                               ; preds = %53
  %63 = call %"class.blink::MainThreadDebugger"* @_ZN5blink18MainThreadDebugger8InstanceEv() #3
  %64 = getelementptr inbounds %"class.blink::MainThreadDebugger", %"class.blink::MainThreadDebugger"* %63, i64 0, i32 0
  store %"class.blink::ThreadDebugger"* %64, %"class.blink::ThreadDebugger"** %7, align 8
  br label %67

65:                                               ; preds = %53, %35
  %66 = load %"class.blink::ThreadDebugger"*, %"class.blink::ThreadDebugger"** %7, align 8
  br label %67

67:                                               ; preds = %65, %62, %46
  %68 = phi %"class.blink::ThreadDebugger"* [ %66, %65 ], [ %64, %62 ], [ %52, %46 ]
  %69 = icmp eq %"class.blink::ThreadDebugger"* %68, null
  br i1 %69, label %71, label %70

70:                                               ; preds = %67
  call void @_ZN5blink14ThreadDebugger24ExternalAsyncTaskStartedERKN12v8_inspector14V8StackTraceIdE(%"class.blink::ThreadDebugger"* nonnull %68, %"struct.v8_inspector::V8StackTraceId"* dereferenceable(32) %8) #3
  br label %71

71:                                               ; preds = %3, %67, %16, %12, %70
  ret void
}

declare void @_ZN12v8_inspector14V8StackTraceIdC1Ev(%"struct.v8_inspector::V8StackTraceId"*) unnamed_addr #2

declare void @_ZN5blink23ToV8InspectorStringViewERKN3WTF10StringViewE(%"class.v8_inspector::StringView"* sret, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN12v8_inspector14V8StackTraceIdC1ENS_10StringViewE(%"struct.v8_inspector::V8StackTraceId"*, %"class.v8_inspector::StringView"* byval(%"class.v8_inspector::StringView") align 8) unnamed_addr #2

declare zeroext i1 @_ZNK12v8_inspector14V8StackTraceId9IsInvalidEv(%"struct.v8_inspector::V8StackTraceId"*) local_unnamed_addr #2

declare void @_ZN5blink14ThreadDebugger24ExternalAsyncTaskStartedERKN12v8_inspector14V8StackTraceIdE(%"class.blink::ThreadDebugger"*, %"struct.v8_inspector::V8StackTraceId"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23RequestDebugHeaderScopeD2Ev(%"class.blink::RequestDebugHeaderScope"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RequestDebugHeaderScope", %"class.blink::RequestDebugHeaderScope"* %0, i64 0, i32 0
  %3 = load %"class.blink::ThreadDebugger"*, %"class.blink::ThreadDebugger"** %2, align 8
  %4 = icmp eq %"class.blink::ThreadDebugger"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::RequestDebugHeaderScope", %"class.blink::RequestDebugHeaderScope"* %0, i64 0, i32 1
  tail call void @_ZN5blink14ThreadDebugger25ExternalAsyncTaskFinishedERKN12v8_inspector14V8StackTraceIdE(%"class.blink::ThreadDebugger"* nonnull %3, %"struct.v8_inspector::V8StackTraceId"* dereferenceable(32) %6) #3
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

declare void @_ZN5blink14ThreadDebugger25ExternalAsyncTaskFinishedERKN12v8_inspector14V8StackTraceIdE(%"class.blink::ThreadDebugger"*, %"struct.v8_inspector::V8StackTraceId"* dereferenceable(32)) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
