; ModuleID = '../../ui/gl/gl_surface_egl_x11.cc'
source_filename = "../../ui/gl/gl_surface_egl_x11.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gl::NativeViewGLSurfaceEGLX11" = type <{ %"class.gl::NativeViewGLSurfaceEGL", %"class.x11::EventObserver", %"class.std::__1::vector.38", i8, i8, [6 x i8] }>
%"class.gl::NativeViewGLSurfaceEGL" = type { %"class.gl::GLSurfaceEGL", %"class.gl::EGLTimestampClient", i64, %"class.gfx::Size", i8, i8*, i8, i8, i32, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::vector", i8, %"class.std::__1::vector.18", %"class.std::__1::vector.25", i32, i32, i32, i32, %"class.std::__1::queue", i8, %"class.std::__1::unique_ptr.32" }
%"class.gl::GLSurfaceEGL" = type { %"class.gl::GLSurface", i8*, %"class.gl::GLSurfaceFormat" }
%"class.gl::GLSurface" = type { i32 (...)**, %"class.base::RefCounted", %"class.base::SupportsWeakPtr" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.gl::GLSurfaceFormat" = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.gl::EGLTimestampClient" = type { i32 (...)** }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.gfx::VSyncProvider"* }
%"class.gfx::VSyncProvider" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.gl::GLSurfaceOverlay"*, %"class.gl::GLSurfaceOverlay"*, %"class.std::__1::__compressed_pair.15" }
%"class.gl::GLSurfaceOverlay" = type { i32, i32, %class.scoped_refptr.7, %"class.gfx::Rect", %"class.gfx::RectF", i8, %"class.std::__1::unique_ptr.9" }
%class.scoped_refptr.7 = type { %"class.gl::GLImage"* }
%"class.gl::GLImage" = type { i32 (...)**, %"class.base::RefCounted.8", %"class.gfx::ColorSpace" }
%"class.base::RefCounted.8" = type { %"class.base::subtle::RefCountedBase" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.gfx::GpuFence"* }
%"class.gfx::GpuFence" = type { %"struct.gfx::GpuFenceHandle" }
%"struct.gfx::GpuFenceHandle" = type { %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.gl::GLSurfaceOverlay"* }
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { i32*, i32*, %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { i32* }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { i8**, i8**, %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { i8** }
%"class.std::__1::queue" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"struct.gl::NativeViewGLSurfaceEGL::SwapInfo"*, i64 }
%"struct.gl::NativeViewGLSurfaceEGL::SwapInfo" = type { i8, i64 }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.gl::GLSurfacePresentationHelper"* }
%"class.gl::GLSurfacePresentationHelper" = type opaque
%"class.x11::EventObserver" = type { i32 (...)** }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { i32*, i32*, %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { i32* }
%"class.x11::Future" = type { %"class.std::__1::unique_ptr.320" }
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.x11::Connection::FutureImpl"* }
%"class.x11::Connection::FutureImpl" = type { %"class.x11::Connection"*, i32, i8, i8* }
%"class.x11::Connection" = type { %"class.x11::XProto", %"class.x11::ExtensionManager", %"class.std::__1::unique_ptr.225", %struct.xcb_connection_t*, %"class.std::__1::unique_ptr.242", i8, i8, i32, %"class.std::__1::basic_string", i32, %"struct.x11::Setup", %"struct.x11::Screen"*, %"struct.x11::Depth"*, %"struct.x11::VisualType"*, %"class.base::flat_map", %"class.std::__1::unique_ptr.288", %"class.base::circular_deque.294", %"class.base::ObserverList.296", %"class.x11::Event"*, %"class.base::circular_deque.300", i32, %"class.absl::optional", %"struct.std::__1::array", %"class.base::RepeatingCallback", %"class.base::OnceCallback.313" }
%"class.x11::XProto" = type { %"class.x11::Connection"* }
%"class.x11::ExtensionManager" = type { %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.99", %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.123", %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.153", %"class.std::__1::unique_ptr.159", %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.171", %"class.std::__1::unique_ptr.177", %"class.std::__1::unique_ptr.183", %"class.std::__1::unique_ptr.189", %"class.std::__1::unique_ptr.195", %"class.std::__1::unique_ptr.201", %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.x11::BigRequests"* }
%"class.x11::BigRequests" = type opaque
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.x11::Composite"* }
%"class.x11::Composite" = type opaque
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.x11::Damage"* }
%"class.x11::Damage" = type opaque
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.x11::Dpms"* }
%"class.x11::Dpms" = type opaque
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.x11::Dri2"* }
%"class.x11::Dri2" = type opaque
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.x11::Dri3"* }
%"class.x11::Dri3" = type opaque
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.x11::GenericEvent"* }
%"class.x11::GenericEvent" = type opaque
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.x11::Glx"* }
%"class.x11::Glx" = type opaque
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.x11::Present"* }
%"class.x11::Present" = type opaque
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.x11::RandR"* }
%"class.x11::RandR" = type opaque
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.x11::Record"* }
%"class.x11::Record" = type opaque
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.x11::Render"* }
%"class.x11::Render" = type opaque
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.x11::Res"* }
%"class.x11::Res" = type opaque
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.x11::ScreenSaver"* }
%"class.x11::ScreenSaver" = type opaque
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.x11::Shape"* }
%"class.x11::Shape" = type opaque
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.x11::Shm"* }
%"class.x11::Shm" = type opaque
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.x11::Sync"* }
%"class.x11::Sync" = type opaque
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.x11::XCMisc"* }
%"class.x11::XCMisc" = type opaque
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.x11::Xevie"* }
%"class.x11::Xevie" = type opaque
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.x11::XF86Dri"* }
%"class.x11::XF86Dri" = type opaque
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.x11::XF86VidMode"* }
%"class.x11::XF86VidMode" = type opaque
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.x11::XFixes"* }
%"class.x11::XFixes" = type opaque
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.x11::Xinerama"* }
%"class.x11::Xinerama" = type opaque
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.x11::Input"* }
%"class.x11::Input" = type opaque
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.x11::Xkb"* }
%"class.x11::Xkb" = type opaque
%"class.std::__1::unique_ptr.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.x11::XPrint"* }
%"class.x11::XPrint" = type opaque
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.x11::SELinux"* }
%"class.x11::SELinux" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.x11::Test"* }
%"class.x11::Test" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.x11::Xv"* }
%"class.x11::Xv" = type opaque
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.x11::XvMC"* }
%"class.x11::XvMC" = type opaque
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.ui::PlatformEventSource"* }
%"class.ui::PlatformEventSource" = type { i32 (...)**, %"class.base::ObserverList", %"class.ui::PlatformEventDispatcher"*, i8, [7 x i8], %"class.base::ObserverList.235" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.228", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.228" = type { %"class.std::__1::__vector_base.229" }
%"class.std::__1::__vector_base.229" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.230" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::PlatformEventDispatcher" = type opaque
%"class.base::ObserverList.235" = type <{ %"class.std::__1::vector.228", %"class.base::LinkedList.236", i64, i32, [4 x i8] }>
%"class.base::LinkedList.236" = type { %"class.base::LinkNode.237" }
%"class.base::LinkNode.237" = type { %"class.base::internal::LinkNodeBase" }
%struct.xcb_connection_t = type opaque
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.x11::XlibDisplay"* }
%"class.x11::XlibDisplay" = type { %struct._XDisplay* }
%struct._XDisplay = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.x11::Setup" = type { i8, i16, i16, i16, i32, i32, i32, i32, i16, i32, i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::vector.253", %"class.std::__1::vector.260" }
%"class.std::__1::vector.253" = type { %"class.std::__1::__vector_base.254" }
%"class.std::__1::__vector_base.254" = type { %"struct.x11::Format"*, %"struct.x11::Format"*, %"class.std::__1::__compressed_pair.255" }
%"struct.x11::Format" = type { i8, i8, i8 }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"struct.x11::Format"* }
%"class.std::__1::vector.260" = type { %"class.std::__1::__vector_base.261" }
%"class.std::__1::__vector_base.261" = type { %"struct.x11::Screen"*, %"struct.x11::Screen"*, %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"struct.x11::Screen"* }
%"struct.x11::Screen" = type { i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i32, i32, i8, i8, %"class.std::__1::vector.262" }
%"class.std::__1::vector.262" = type { %"class.std::__1::__vector_base.263" }
%"class.std::__1::__vector_base.263" = type { %"struct.x11::Depth"*, %"struct.x11::Depth"*, %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"struct.x11::Depth"* }
%"struct.x11::Depth" = type { i8, %"class.std::__1::vector.264" }
%"class.std::__1::vector.264" = type { %"class.std::__1::__vector_base.265" }
%"class.std::__1::__vector_base.265" = type { %"struct.x11::VisualType"*, %"struct.x11::VisualType"*, %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"struct.x11::VisualType"* }
%"struct.x11::VisualType" = type { i32, i32, i8, i16, i32, i32, i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.281" }
%"class.std::__1::vector.281" = type { %"class.std::__1::__vector_base.282" }
%"class.std::__1::__vector_base.282" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.283" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"class.x11::KeyboardState"* }
%"class.x11::KeyboardState" = type opaque
%"class.base::circular_deque.294" = type { %"class.base::internal::VectorBuffer.295", i64, i64 }
%"class.base::internal::VectorBuffer.295" = type { %"class.x11::Event"*, i64 }
%"class.base::ObserverList.296" = type <{ %"class.std::__1::vector.228", %"class.base::LinkedList.297", i64, i32, [4 x i8] }>
%"class.base::LinkedList.297" = type { %"class.base::LinkNode.298" }
%"class.base::LinkNode.298" = type { %"class.base::internal::LinkNodeBase" }
%"class.x11::Event" = type { i16, i32, void (i8*)*, i8*, i32* }
%"class.base::circular_deque.300" = type { %"class.base::internal::VectorBuffer.301", i64, i64 }
%"class.base::internal::VectorBuffer.301" = type { %"struct.x11::Connection::Request"*, i64 }
%"struct.x11::Connection::Request" = type { %"class.base::OnceCallback", i8, %class.scoped_refptr.304, %"class.std::__1::unique_ptr.306" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.302 }
%class.scoped_refptr.302 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.303", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.303" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.304 = type { %"class.base::RefCountedMemory"* }
%"class.base::RefCountedMemory" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.305", [4 x i8] }>
%"class.base::RefCountedThreadSafe.305" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.x11::Error"* }
%"class.x11::Error" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.312 }
%union.anon.312 = type { i32 }
%"struct.std::__1::array" = type { [256 x %"class.x11::Error"* (%"class.base::RefCountedMemory"*)*] }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.313" = type { %"class.base::internal::CallbackBase" }
%"struct.x11::ChangeWindowAttributesRequest" = type { i32, %"class.absl::optional.327", %"class.absl::optional", %"class.absl::optional.327", %"class.absl::optional", %"class.absl::optional.332", %"class.absl::optional.332", %"class.absl::optional.337", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.342", %"class.absl::optional.342", %"class.absl::optional.347", %"class.absl::optional.347", %"class.absl::optional.352", %"class.absl::optional.357" }
%"class.absl::optional.327" = type { %"class.absl::optional_internal::optional_data.328" }
%"class.absl::optional_internal::optional_data.328" = type { %"class.absl::optional_internal::optional_data_base.329" }
%"class.absl::optional_internal::optional_data_base.329" = type { %"class.absl::optional_internal::optional_data_dtor_base.330" }
%"class.absl::optional_internal::optional_data_dtor_base.330" = type { i8, %union.anon.331 }
%union.anon.331 = type { i32 }
%"class.absl::optional.332" = type { %"class.absl::optional_internal::optional_data.333" }
%"class.absl::optional_internal::optional_data.333" = type { %"class.absl::optional_internal::optional_data_base.334" }
%"class.absl::optional_internal::optional_data_base.334" = type { %"class.absl::optional_internal::optional_data_dtor_base.335" }
%"class.absl::optional_internal::optional_data_dtor_base.335" = type { i8, %union.anon.336 }
%union.anon.336 = type { i32 }
%"class.absl::optional.337" = type { %"class.absl::optional_internal::optional_data.338" }
%"class.absl::optional_internal::optional_data.338" = type { %"class.absl::optional_internal::optional_data_base.339" }
%"class.absl::optional_internal::optional_data_base.339" = type { %"class.absl::optional_internal::optional_data_dtor_base.340" }
%"class.absl::optional_internal::optional_data_dtor_base.340" = type { i8, %union.anon.341 }
%union.anon.341 = type { i32 }
%"class.absl::optional.342" = type { %"class.absl::optional_internal::optional_data.343" }
%"class.absl::optional_internal::optional_data.343" = type { %"class.absl::optional_internal::optional_data_base.344" }
%"class.absl::optional_internal::optional_data_base.344" = type { %"class.absl::optional_internal::optional_data_dtor_base.345" }
%"class.absl::optional_internal::optional_data_dtor_base.345" = type { i8, %union.anon.346 }
%union.anon.346 = type { i32 }
%"class.absl::optional.347" = type { %"class.absl::optional_internal::optional_data.348" }
%"class.absl::optional_internal::optional_data.348" = type { %"class.absl::optional_internal::optional_data_base.349" }
%"class.absl::optional_internal::optional_data_base.349" = type { %"class.absl::optional_internal::optional_data_dtor_base.350" }
%"class.absl::optional_internal::optional_data_dtor_base.350" = type { i8, %union.anon.351 }
%union.anon.351 = type { i32 }
%"class.absl::optional.352" = type { %"class.absl::optional_internal::optional_data.353" }
%"class.absl::optional_internal::optional_data.353" = type { %"class.absl::optional_internal::optional_data_base.354" }
%"class.absl::optional_internal::optional_data_base.354" = type { %"class.absl::optional_internal::optional_data_dtor_base.355" }
%"class.absl::optional_internal::optional_data_dtor_base.355" = type { i8, %union.anon.356 }
%union.anon.356 = type { i32 }
%"class.absl::optional.357" = type { %"class.absl::optional_internal::optional_data.358" }
%"class.absl::optional_internal::optional_data.358" = type { %"class.absl::optional_internal::optional_data_base.359" }
%"class.absl::optional_internal::optional_data_base.359" = type { %"class.absl::optional_internal::optional_data_dtor_base.360" }
%"class.absl::optional_internal::optional_data_dtor_base.360" = type { i8, %union.anon.361 }
%union.anon.361 = type { i32 }
%"struct.x11::QueryTreeReply" = type { i16, i32, i32, %"class.std::__1::vector.38" }
%"struct.x11::ReadBuffer" = type { %class.scoped_refptr.304, i64, i32* }
%"class.base::OnceCallback.362" = type { %"class.base::internal::CallbackBase" }
%"class.ui::XrandrIntervalOnlyVSyncProvider" = type <{ %"class.gfx::VSyncProvider", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.base::TimeDelta" = type { i64 }
%"class.x11::WriteBuffer" = type { %"class.std::__1::vector.379", %"class.std::__1::vector.386", i64, %"class.std::__1::vector.18" }
%"class.std::__1::vector.379" = type { %"class.std::__1::__vector_base.380" }
%"class.std::__1::__vector_base.380" = type { %class.scoped_refptr.304*, %class.scoped_refptr.304*, %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %class.scoped_refptr.304* }
%"class.std::__1::vector.386" = type { %"class.std::__1::__vector_base.387" }
%"class.std::__1::__vector_base.387" = type { i8*, i8*, %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { i8* }
%"struct.x11::SendEventRequest" = type { i8, i32, i32, %"struct.std::__1::array.393" }
%"struct.std::__1::array.393" = type { [32 x i8] }
%"struct.x11::ExposeEvent" = type <{ i8, i8, i16, i32, i16, i16, i16, i16, i16, [2 x i8] }>
%"class.std::__1::vector.369" = type opaque
%"class.gl::GLContext" = type opaque
%"struct.ui::CARendererLayerParams" = type opaque
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }

$_ZN3x116FutureINS_14QueryTreeReplyEE4SyncEv = comdat any

$_ZN2gl9GLSurface28PreserveChildSurfaceControlsEv = comdat any

$_ZN2gl9GLSurface19SetDisplayTransformEN3gfx16OverlayTransformE = comdat any

$_ZN2gl9GLSurface12SetFrameRateEf = comdat any

$_ZN2gl9GLSurface30SetDelegatedInkTrailStartPointENSt3__110unique_ptrIN3gfx20DelegatedInkMetadataENS1_14default_deleteIS4_EEEE = comdat any

@_ZTVN2gl25NativeViewGLSurfaceEGLX11E = hidden unnamed_addr constant { [70 x i8*], [6 x i8*], [5 x i8*] } { [70 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.gl::NativeViewGLSurfaceEGLX11"*, %"class.gl::GLSurfaceFormat"*)* @_ZN2gl25NativeViewGLSurfaceEGLX1110InitializeENS_15GLSurfaceFormatE to i8*), i8* bitcast (void (%"class.gl::NativeViewGLSurfaceEGLX11"*)* @_ZN2gl25NativeViewGLSurfaceEGLX117DestroyEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*, i1)* @_ZN2gl9GLSurface16PrepareToDestroyEb to i8*), i8* bitcast (i1 (%"class.gl::NativeViewGLSurfaceEGL"*, %"class.gfx::Size"*, float, %"class.gfx::ColorSpace"*, i1)* @_ZN2gl22NativeViewGLSurfaceEGL6ResizeERKN3gfx4SizeEfRKNS1_10ColorSpaceEb to i8*), i8* bitcast (i1 (%"class.gl::NativeViewGLSurfaceEGL"*)* @_ZN2gl22NativeViewGLSurfaceEGL8RecreateEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface10DeferDrawsEv to i8*), i8* bitcast (i1 (%"class.gl::NativeViewGLSurfaceEGL"*)* @_ZN2gl22NativeViewGLSurfaceEGL11IsOffscreenEv to i8*), i8* bitcast (i32 (%"class.gl::NativeViewGLSurfaceEGLX11"*, %"class.base::OnceCallback.362"*)* @_ZN2gl25NativeViewGLSurfaceEGLX1111SwapBuffersEN4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEE to i8*), i8* bitcast (i64 (%"class.gl::NativeViewGLSurfaceEGL"*)* @_ZN2gl22NativeViewGLSurfaceEGL7GetSizeEv to i8*), i8* bitcast (i8* (%"class.gl::NativeViewGLSurfaceEGL"*)* @_ZN2gl22NativeViewGLSurfaceEGL9GetHandleEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface28PreserveChildSurfaceControlsEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface29SupportsSwapBuffersWithBoundsEv to i8*), i8* bitcast (i1 (%"class.gl::NativeViewGLSurfaceEGL"*)* @_ZN2gl22NativeViewGLSurfaceEGL21SupportsPostSubBufferEv to i8*), i8* bitcast (i1 (%"class.gl::NativeViewGLSurfaceEGL"*)* @_ZN2gl22NativeViewGLSurfaceEGL27SupportsCommitOverlayPlanesEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface17SupportsAsyncSwapEv to i8*), i8* bitcast (i32 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface27GetBackingFramebufferObjectEv to i8*), i8* bitcast (void ()* @_ZN2gl9GLSurface16SwapBuffersAsyncEN4base12OnceCallbackIFvN3gfx20SwapCompletionResultEEEENS2_IFvRKNS3_20PresentationFeedbackEEEE to i8*), i8* bitcast (i32 (%"class.gl::GLSurface"*, %"class.std::__1::vector.369"*, %"class.base::OnceCallback.362"*)* @_ZN2gl9GLSurface21SwapBuffersWithBoundsERKNSt3__16vectorIN3gfx4RectENS1_9allocatorIS4_EEEEN4base12OnceCallbackIFvRKNS3_20PresentationFeedbackEEEE to i8*), i8* bitcast (i32 (%"class.gl::NativeViewGLSurfaceEGL"*, i32, i32, i32, i32, %"class.base::OnceCallback.362"*)* @_ZN2gl22NativeViewGLSurfaceEGL13PostSubBufferEiiiiN4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEE to i8*), i8* bitcast (void ()* @_ZN2gl9GLSurface18PostSubBufferAsyncEiiiiN4base12OnceCallbackIFvN3gfx20SwapCompletionResultEEEENS2_IFvRKNS3_20PresentationFeedbackEEEE to i8*), i8* bitcast (i32 (%"class.gl::NativeViewGLSurfaceEGL"*, %"class.base::OnceCallback.362"*)* @_ZN2gl22NativeViewGLSurfaceEGL19CommitOverlayPlanesEN4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEE to i8*), i8* bitcast (void ()* @_ZN2gl9GLSurface24CommitOverlayPlanesAsyncEN4base12OnceCallbackIFvN3gfx20SwapCompletionResultEEEENS2_IFvRKNS3_20PresentationFeedbackEEEE to i8*), i8* bitcast (i1 (%"class.gl::NativeViewGLSurfaceEGL"*, %"class.gl::GLContext"*)* @_ZN2gl22NativeViewGLSurfaceEGL13OnMakeCurrentEPNS_9GLContextE to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*, i1)* @_ZN2gl9GLSurface23SetBackbufferAllocationEb to i8*), i8* bitcast (void (%"class.gl::GLSurface"*, i1)* @_ZN2gl9GLSurface24SetFrontbufferAllocationEb to i8*), i8* bitcast (i8* (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface14GetShareHandleEv to i8*), i8* bitcast (i8* (%"class.gl::GLSurfaceEGL"*)* @_ZN2gl12GLSurfaceEGL10GetDisplayEv to i8*), i8* bitcast (i8* (%"class.gl::GLSurfaceEGL"*)* @_ZN2gl12GLSurfaceEGL9GetConfigEv to i8*), i8* bitcast (void (%"class.gl::GLSurfaceFormat"*, %"class.gl::GLSurfaceEGL"*)* @_ZN2gl12GLSurfaceEGL9GetFormatEv to i8*), i8* bitcast (%"class.gfx::VSyncProvider"* (%"class.gl::NativeViewGLSurfaceEGL"*)* @_ZN2gl22NativeViewGLSurfaceEGL16GetVSyncProviderEv to i8*), i8* bitcast (void (%"class.gl::NativeViewGLSurfaceEGL"*, i1)* @_ZN2gl22NativeViewGLSurfaceEGL15SetVSyncEnabledEb to i8*), i8* bitcast (i1 (%"class.gl::NativeViewGLSurfaceEGL"*, i32, i32, %"class.gl::GLImage"*, %"class.gfx::Rect"*, %"class.gfx::RectF"*, i1, i64)* @_ZN2gl22NativeViewGLSurfaceEGL20ScheduleOverlayPlaneEiN3gfx16OverlayTransformEPNS_7GLImageERKNS1_4RectERKNS1_5RectFEbNSt3__110unique_ptrINS1_8GpuFenceENSB_14default_deleteISD_EEEE to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*, %"struct.ui::CARendererLayerParams"*)* @_ZN2gl9GLSurface15ScheduleCALayerERKN2ui21CARendererLayerParamsE to i8*), i8* bitcast (void ()* @_ZN2gl9GLSurface25ScheduleCALayerInUseQueryENSt3__16vectorINS0_17CALayerInUseQueryENS1_9allocatorIS3_EEEE to i8*), i8* bitcast (void ()* @_ZN2gl9GLSurface15ScheduleDCLayerENSt3__110unique_ptrIN2ui21DCRendererLayerParamsENS1_14default_deleteIS4_EEEE to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*, i1)* @_ZN2gl9GLSurface17SetEnableDCLayersEb to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface13IsSurfacelessEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface18SupportsViewporterEv to i8*), i8* bitcast (i32 (%"class.gl::NativeViewGLSurfaceEGL"*)* @_ZNK2gl22NativeViewGLSurfaceEGL9GetOriginEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface14BuffersFlippedEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface16SupportsDCLayersEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface22SupportsProtectedVideoEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface28SupportsOverridePlatformSizeEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*, %"class.gfx::Rect"*)* @_ZN2gl9GLSurface16SetDrawRectangleERKN3gfx4RectE to i8*), i8* bitcast (i64 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface13GetDrawOffsetEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface21SetRelyOnImplicitSyncEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface28SetForceGlFlushOnSwapBuffersEv to i8*), i8* bitcast (i1 (%"class.gl::NativeViewGLSurfaceEGL"*)* @_ZNK2gl22NativeViewGLSurfaceEGL22SupportsSwapTimestampsEv to i8*), i8* bitcast (void (%"class.gl::NativeViewGLSurfaceEGL"*)* @_ZN2gl22NativeViewGLSurfaceEGL23SetEnableSwapTimestampsEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface22SupportsPlaneGpuFencesEv to i8*), i8* bitcast (i32 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface14GetBufferCountEv to i8*), i8* bitcast (%"class.gl::EGLTimestampClient"* (%"class.gl::NativeViewGLSurfaceEGL"*)* @_ZN2gl22NativeViewGLSurfaceEGL21GetEGLTimestampClientEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZNK2gl9GLSurface16SupportsGpuVSyncEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*, i1)* @_ZN2gl9GLSurface18SetGpuVSyncEnabledEb to i8*), i8* bitcast (void (%"class.gl::GLSurface"*, i32)* @_ZN2gl9GLSurface19SetDisplayTransformEN3gfx16OverlayTransformE to i8*), i8* bitcast (void (%"class.gl::GLSurface"*, float)* @_ZN2gl9GLSurface12SetFrameRateEf to i8*), i8* bitcast (void (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface10SetCurrentEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface9IsCurrentEv to i8*), i8* bitcast (i1 (%"class.gl::GLSurface"*)* @_ZN2gl9GLSurface20SupportsDelegatedInkEv to i8*), i8* bitcast (void (%"class.gl::GLSurface"*, %"class.gfx::DelegatedInkMetadata"*)* @_ZN2gl9GLSurface30SetDelegatedInkTrailStartPointENSt3__110unique_ptrIN3gfx20DelegatedInkMetadataENS1_14default_deleteIS4_EEEE to i8*), i8* bitcast (void ()* @_ZN2gl9GLSurface37InitDelegatedInkPointRendererReceiverEN4mojo15PendingReceiverIN3gfx5mojom25DelegatedInkPointRendererEEE to i8*), i8* bitcast (void (%"class.gl::NativeViewGLSurfaceEGLX11"*)* @_ZN2gl25NativeViewGLSurfaceEGLX11D2Ev to i8*), i8* bitcast (void (%"class.gl::NativeViewGLSurfaceEGLX11"*)* @_ZN2gl25NativeViewGLSurfaceEGLX11D0Ev to i8*), i8* bitcast (i1 (%"class.gl::NativeViewGLSurfaceEGL"*)* @_ZNK2gl22NativeViewGLSurfaceEGL23IsEGLTimestampSupportedEv to i8*), i8* bitcast (i1 (%"class.gl::NativeViewGLSurfaceEGL"*, %"class.base::TimeTicks"*, %"class.base::TimeDelta"*, %"class.base::TimeTicks"*, i32*, i32)* @_ZN2gl22NativeViewGLSurfaceEGL32GetFrameTimestampInfoIfAvailableEPN4base9TimeTicksEPNS1_9TimeDeltaES3_Pji to i8*), i8* bitcast (i1 (%"class.gl::NativeViewGLSurfaceEGL"*)* @_ZN2gl22NativeViewGLSurfaceEGL22InitializeNativeWindowEv to i8*), i8* bitcast (%"class.gfx::VSyncProvider"* (%"class.gl::NativeViewGLSurfaceEGLX11"*)* @_ZN2gl25NativeViewGLSurfaceEGLX1127CreateVsyncProviderInternalEv to i8*), i8* bitcast (void (%"class.gl::NativeViewGLSurfaceEGLX11"*, %"class.x11::Event"*)* @_ZN2gl25NativeViewGLSurfaceEGLX117OnEventERKN3x115EventE to i8*)], [6 x i8*] [i8* inttoptr (i64 -64 to i8*), i8* null, i8* bitcast (void (%"class.gl::NativeViewGLSurfaceEGLX11"*)* @_ZThn64_N2gl25NativeViewGLSurfaceEGLX11D1Ev to i8*), i8* bitcast (void (%"class.gl::NativeViewGLSurfaceEGLX11"*)* @_ZThn64_N2gl25NativeViewGLSurfaceEGLX11D0Ev to i8*), i8* bitcast (i1 (%"class.gl::NativeViewGLSurfaceEGL"*)* @_ZThn64_NK2gl22NativeViewGLSurfaceEGL23IsEGLTimestampSupportedEv to i8*), i8* bitcast (i1 (%"class.gl::NativeViewGLSurfaceEGL"*, %"class.base::TimeTicks"*, %"class.base::TimeDelta"*, %"class.base::TimeTicks"*, i32*, i32)* @_ZThn64_N2gl22NativeViewGLSurfaceEGL32GetFrameTimestampInfoIfAvailableEPN4base9TimeTicksEPNS1_9TimeDeltaES3_Pji to i8*)], [5 x i8*] [i8* inttoptr (i64 -272 to i8*), i8* null, i8* bitcast (void (%"class.gl::NativeViewGLSurfaceEGLX11"*, %"class.x11::Event"*)* @_ZThn272_N2gl25NativeViewGLSurfaceEGLX117OnEventERKN3x115EventE to i8*), i8* bitcast (void (%"class.gl::NativeViewGLSurfaceEGLX11"*)* @_ZThn272_N2gl25NativeViewGLSurfaceEGLX11D1Ev to i8*), i8* bitcast (void (%"class.gl::NativeViewGLSurfaceEGLX11"*)* @_ZThn272_N2gl25NativeViewGLSurfaceEGLX11D0Ev to i8*)] }, align 8

@_ZN2gl25NativeViewGLSurfaceEGLX11C1EN3x116WindowE = hidden unnamed_addr alias void (%"class.gl::NativeViewGLSurfaceEGLX11"*, i32), void (%"class.gl::NativeViewGLSurfaceEGLX11"*, i32)* @_ZN2gl25NativeViewGLSurfaceEGLX11C2EN3x116WindowE
@_ZN2gl25NativeViewGLSurfaceEGLX11D1Ev = hidden unnamed_addr alias void (%"class.gl::NativeViewGLSurfaceEGLX11"*), void (%"class.gl::NativeViewGLSurfaceEGLX11"*)* @_ZN2gl25NativeViewGLSurfaceEGLX11D2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl25NativeViewGLSurfaceEGLX11C2EN3x116WindowE(%"class.gl::NativeViewGLSurfaceEGLX11"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 0, i32 0
  %4 = zext i32 %1 to i64
  tail call void @_ZN2gl22NativeViewGLSurfaceEGLC2ElNSt3__110unique_ptrIN3gfx13VSyncProviderENS1_14default_deleteIS4_EEEE(%"class.gl::NativeViewGLSurfaceEGL"* %3, i64 %4, %"class.gfx::VSyncProvider"* null) #6
  %5 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 0, i32 1, i32 0
  %6 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [70 x i8*], [6 x i8*], [5 x i8*] }, { [70 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN2gl25NativeViewGLSurfaceEGLX11E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [70 x i8*], [6 x i8*], [5 x i8*] }, { [70 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN2gl25NativeViewGLSurfaceEGLX11E, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [70 x i8*], [6 x i8*], [5 x i8*] }, { [70 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN2gl25NativeViewGLSurfaceEGLX11E, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %8 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 0, i32 2
  %9 = bitcast %"class.std::__1::vector.38"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 26, i1 false)
  ret void
}

declare void @_ZN2gl22NativeViewGLSurfaceEGLC2ElNSt3__110unique_ptrIN3gfx13VSyncProviderENS1_14default_deleteIS4_EEEE(%"class.gl::NativeViewGLSurfaceEGL"*, i64, %"class.gfx::VSyncProvider"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl25NativeViewGLSurfaceEGLX1110InitializeENS_15GLSurfaceFormatE(%"class.gl::NativeViewGLSurfaceEGLX11"*, %"class.gl::GLSurfaceFormat"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.gl::GLSurfaceFormat", align 4
  %4 = alloca %"class.x11::Future", align 8
  %5 = alloca i32, align 4
  %6 = alloca %"struct.x11::ChangeWindowAttributesRequest", align 4
  %7 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 0, i32 0
  call void @_ZN2gl15GLSurfaceFormatC1ERKS0_(%"class.gl::GLSurfaceFormat"* nonnull %3, %"class.gl::GLSurfaceFormat"* dereferenceable(32) %1) #6
  %8 = call zeroext i1 @_ZN2gl22NativeViewGLSurfaceEGL10InitializeENS_15GLSurfaceFormatE(%"class.gl::NativeViewGLSurfaceEGL"* %7, %"class.gl::GLSurfaceFormat"* nonnull %3) #6
  call void @_ZN2gl15GLSurfaceFormatD1Ev(%"class.gl::GLSurfaceFormat"* nonnull %3) #6
  br i1 %8, label %9, label %112

9:                                                ; preds = %2
  %10 = call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #6
  %11 = bitcast %"class.x11::Future"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #6
  %12 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %10, i64 0, i32 0
  %13 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #6
  %14 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 0, i32 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = trunc i64 %15 to i32
  store i32 %16, i32* %5, align 4
  %17 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto9QueryTreeERKNS_6WindowE(%"class.x11::XProto"* %12, i32* nonnull dereferenceable(4) %5) #6
  %18 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.x11::Connection::FutureImpl"* %17, %"class.x11::Connection::FutureImpl"** %18, align 8
  %19 = call { %"struct.x11::QueryTreeReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_14QueryTreeReplyEE4SyncEv(%"class.x11::Future"* nonnull %4)
  %20 = extractvalue { %"struct.x11::QueryTreeReply"*, %"class.x11::Error"* } %19, 0
  %21 = extractvalue { %"struct.x11::QueryTreeReply"*, %"class.x11::Error"* } %19, 1
  %22 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %18, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %18, align 8
  %23 = icmp eq %"class.x11::Connection::FutureImpl"* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %9
  %25 = bitcast %"class.x11::Connection::FutureImpl"* %22 to i8*
  call void @_ZdlPv(i8* %25) #7
  br label %26

26:                                               ; preds = %9, %24
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #6
  %27 = icmp eq %"struct.x11::QueryTreeReply"* %20, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"struct.x11::QueryTreeReply", %"struct.x11::QueryTreeReply"* %20, i64 0, i32 3
  %30 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 0, i32 2
  %31 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %30, i64 0, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = icmp eq i32* %32, null
  br i1 %33, label %40, label %34

34:                                               ; preds = %28
  %35 = ptrtoint i32* %32 to i64
  %36 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 0, i32 2, i32 0, i32 1
  %37 = bitcast i32** %36 to i64*
  store i64 %35, i64* %37, align 8
  %38 = bitcast i32* %32 to i8*
  call void @_ZdlPv(i8* %38) #7
  %39 = bitcast %"class.std::__1::vector.38"* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 24, i1 false) #6
  br label %40

40:                                               ; preds = %28, %34
  %41 = bitcast %"class.std::__1::vector.38"* %29 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::vector.38"* %30 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.x11::QueryTreeReply", %"struct.x11::QueryTreeReply"* %20, i64 0, i32 3, i32 0, i32 1
  %45 = bitcast i32** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 0, i32 2, i32 0, i32 1
  %48 = bitcast i32** %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.x11::QueryTreeReply", %"struct.x11::QueryTreeReply"* %20, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %50 = bitcast i32** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %53 = bitcast i32** %52 to i64*
  store i64 %51, i64* %53, align 8
  %54 = bitcast %"class.std::__1::vector.38"* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 24, i1 false) #6
  br label %55

55:                                               ; preds = %26, %40
  %56 = icmp eq %"class.x11::Error"* %21, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %55
  %58 = bitcast %"class.x11::Error"* %21 to void (%"class.x11::Error"*)***
  %59 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %59, i64 1
  %61 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %60, align 8
  call void %61(%"class.x11::Error"* nonnull %21) #6
  br label %62

62:                                               ; preds = %57, %55
  br i1 %27, label %74, label %63

63:                                               ; preds = %62
  %64 = getelementptr inbounds %"struct.x11::QueryTreeReply", %"struct.x11::QueryTreeReply"* %20, i64 0, i32 3, i32 0, i32 0
  %65 = load i32*, i32** %64, align 8
  %66 = icmp eq i32* %65, null
  br i1 %66, label %72, label %67

67:                                               ; preds = %63
  %68 = ptrtoint i32* %65 to i64
  %69 = getelementptr inbounds %"struct.x11::QueryTreeReply", %"struct.x11::QueryTreeReply"* %20, i64 0, i32 3, i32 0, i32 1
  %70 = bitcast i32** %69 to i64*
  store i64 %68, i64* %70, align 8
  %71 = bitcast i32* %65 to i8*
  call void @_ZdlPv(i8* %71) #7
  br label %72

72:                                               ; preds = %67, %63
  %73 = bitcast %"struct.x11::QueryTreeReply"* %20 to i8*
  call void @_ZdlPv(i8* %73) #7
  br label %74

74:                                               ; preds = %62, %72
  %75 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 0, i32 2, i32 0, i32 0
  %76 = load i32*, i32** %75, align 8
  %77 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 0, i32 2, i32 0, i32 1
  %78 = load i32*, i32** %77, align 8
  %79 = icmp eq i32* %76, %78
  br i1 %79, label %99, label %80

80:                                               ; preds = %74
  %81 = bitcast %"struct.x11::ChangeWindowAttributesRequest"* %6 to i8*
  %82 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %6, i64 0, i32 0
  %83 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %85 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %6, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %86 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %6, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %87 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %6, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %6, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %89 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %6, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %90 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %6, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %91 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %6, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %92 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %6, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %93 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %6, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %6, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %95 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %6, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %96 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %6, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %97 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %6, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %98 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %6, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  br label %102

99:                                               ; preds = %109, %74
  %100 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 0, i32 3
  store i8 1, i8* %100, align 8
  %101 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 0, i32 1
  call void @_ZN3x1110Connection16AddEventObserverEPNS_13EventObserverE(%"class.x11::Connection"* %10, %"class.x11::EventObserver"* %101) #6
  br label %112

102:                                              ; preds = %80, %109
  %103 = phi i32* [ %76, %80 ], [ %110, %109 ]
  %104 = load i32, i32* %103, align 4
  call void @llvm.lifetime.start.p0i8(i64 124, i8* nonnull %81) #6
  store i32 %104, i32* %82, align 4
  store i8 0, i8* %83, align 4
  store i8 0, i8* %84, align 4
  store i8 0, i8* %85, align 4
  store i8 0, i8* %86, align 4
  store i8 0, i8* %87, align 4
  store i8 0, i8* %88, align 4
  store i8 0, i8* %89, align 4
  store i8 0, i8* %90, align 4
  store i8 0, i8* %91, align 4
  store i8 0, i8* %92, align 4
  store i8 0, i8* %93, align 4
  store i8 1, i8* %94, align 4
  store i32 32768, i32* %95, align 4
  store i8 0, i8* %96, align 4
  store i8 0, i8* %97, align 4
  store i8 0, i8* %98, align 4
  %105 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto22ChangeWindowAttributesERKNS_29ChangeWindowAttributesRequestE(%"class.x11::XProto"* %12, %"struct.x11::ChangeWindowAttributesRequest"* nonnull dereferenceable(124) %6) #6
  %106 = icmp eq %"class.x11::Connection::FutureImpl"* %105, null
  br i1 %106, label %109, label %107

107:                                              ; preds = %102
  %108 = bitcast %"class.x11::Connection::FutureImpl"* %105 to i8*
  call void @_ZdlPv(i8* %108) #7
  br label %109

109:                                              ; preds = %102, %107
  call void @llvm.lifetime.end.p0i8(i64 124, i8* nonnull %81) #6
  %110 = getelementptr inbounds i32, i32* %103, i64 1
  %111 = icmp eq i32* %110, %78
  br i1 %111, label %99, label %102

112:                                              ; preds = %2, %99
  %113 = phi i1 [ true, %99 ], [ false, %2 ]
  ret i1 %113
}

declare zeroext i1 @_ZN2gl22NativeViewGLSurfaceEGL10InitializeENS_15GLSurfaceFormatE(%"class.gl::NativeViewGLSurfaceEGL"*, %"class.gl::GLSurfaceFormat"*) unnamed_addr #1

declare void @_ZN2gl15GLSurfaceFormatC1ERKS0_(%"class.gl::GLSurfaceFormat"*, %"class.gl::GLSurfaceFormat"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2gl15GLSurfaceFormatD1Ev(%"class.gl::GLSurfaceFormat"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() local_unnamed_addr #1

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto9QueryTreeERKNS_6WindowE(%"class.x11::XProto"*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.x11::QueryTreeReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_14QueryTreeReplyEE4SyncEv(%"class.x11::Future"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.scoped_refptr.304, align 8
  %3 = alloca %"class.std::__1::unique_ptr.306", align 8
  %4 = alloca %"struct.x11::ReadBuffer", align 8
  %5 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %5, align 8
  %7 = icmp eq %"class.x11::Connection::FutureImpl"* %6, null
  br i1 %7, label %43, label %8

8:                                                ; preds = %1
  %9 = bitcast %class.scoped_refptr.304* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #6
  %10 = getelementptr inbounds %class.scoped_refptr.304, %class.scoped_refptr.304* %2, i64 0, i32 0
  store %"class.base::RefCountedMemory"* null, %"class.base::RefCountedMemory"** %10, align 8
  %11 = bitcast %"class.std::__1::unique_ptr.306"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #6
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.306", %"class.std::__1::unique_ptr.306"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::unique_ptr.306"* %3 to i64*
  store i64 0, i64* %13, align 8
  call void @_ZN3x1110Connection10FutureImpl4SyncEP13scoped_refptrIN4base16RefCountedMemoryEEPNSt3__110unique_ptrINS_5ErrorENS7_14default_deleteIS9_EEEE(%"class.x11::Connection::FutureImpl"* nonnull %6, %class.scoped_refptr.304* nonnull %2, %"class.std::__1::unique_ptr.306"* nonnull %3) #6
  %14 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %15 = icmp eq %"class.base::RefCountedMemory"* %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %8
  %17 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #6
  br label %40

18:                                               ; preds = %8
  %19 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #6
  %20 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  %22 = atomicrmw add i32* %20, i32 1 monotonic
  call void @_ZN3x1110ReadBufferC1E13scoped_refptrIN4base16RefCountedMemoryEEb(%"struct.x11::ReadBuffer"* nonnull %4, %"class.base::RefCountedMemory"* nonnull %14, i1 zeroext false) #6
  %23 = call %"struct.x11::QueryTreeReply"* @_ZN3x116detail9ReadReplyINS_14QueryTreeReplyEEENSt3__110unique_ptrIT_NS3_14default_deleteIS5_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nonnull %4) #6
  %24 = ptrtoint %"struct.x11::QueryTreeReply"* %23 to i64
  call void @_ZN3x1110ReadBufferD1Ev(%"struct.x11::ReadBuffer"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #6
  %25 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %26 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #6
  %27 = icmp eq %"class.base::RefCountedMemory"* %25, null
  br i1 %27, label %40, label %28

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %25, i64 0, i32 1
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe.305", %"class.base::RefCountedThreadSafe.305"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw sub i32* %30, i32 1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %40

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe.305", %"class.base::RefCountedThreadSafe.305"* %29, i64 -2
  %35 = bitcast %"class.base::RefCountedThreadSafe.305"* %34 to %"class.base::RefCountedMemory"*
  %36 = bitcast %"class.base::RefCountedThreadSafe.305"* %34 to void (%"class.base::RefCountedMemory"*)***
  %37 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %37, i64 3
  %39 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %38, align 8
  call void %39(%"class.base::RefCountedMemory"* nonnull %35) #6
  br label %40

40:                                               ; preds = %16, %18, %28, %33
  %41 = phi %"class.x11::Error"* [ %17, %16 ], [ %26, %18 ], [ %26, %28 ], [ %26, %33 ]
  %42 = phi i64 [ 0, %16 ], [ %24, %18 ], [ %24, %28 ], [ %24, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #6
  br label %43

43:                                               ; preds = %1, %40
  %44 = phi i64 [ %42, %40 ], [ 0, %1 ]
  %45 = phi %"class.x11::Error"* [ %41, %40 ], [ null, %1 ]
  %46 = inttoptr i64 %44 to %"struct.x11::QueryTreeReply"*
  %47 = insertvalue { %"struct.x11::QueryTreeReply"*, %"class.x11::Error"* } undef, %"struct.x11::QueryTreeReply"* %46, 0
  %48 = insertvalue { %"struct.x11::QueryTreeReply"*, %"class.x11::Error"* } %47, %"class.x11::Error"* %45, 1
  ret { %"struct.x11::QueryTreeReply"*, %"class.x11::Error"* } %48
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto22ChangeWindowAttributesERKNS_29ChangeWindowAttributesRequestE(%"class.x11::XProto"*, %"struct.x11::ChangeWindowAttributesRequest"* dereferenceable(124)) local_unnamed_addr #1

declare void @_ZN3x1110Connection16AddEventObserverEPNS_13EventObserverE(%"class.x11::Connection"*, %"class.x11::EventObserver"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl25NativeViewGLSurfaceEGLX117DestroyEv(%"class.gl::NativeViewGLSurfaceEGLX11"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 0, i32 0
  tail call void @_ZN2gl22NativeViewGLSurfaceEGL7DestroyEv(%"class.gl::NativeViewGLSurfaceEGL"* %2) #6
  %3 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 0, i32 3
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = tail call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #6
  %8 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 0, i32 1
  tail call void @_ZN3x1110Connection19RemoveEventObserverEPNS_13EventObserverE(%"class.x11::Connection"* %7, %"class.x11::EventObserver"* %8) #6
  br label %9

9:                                                ; preds = %1, %6
  ret void
}

declare void @_ZN2gl22NativeViewGLSurfaceEGL7DestroyEv(%"class.gl::NativeViewGLSurfaceEGL"*) unnamed_addr #1

declare void @_ZN3x1110Connection19RemoveEventObserverEPNS_13EventObserverE(%"class.x11::Connection"*, %"class.x11::EventObserver"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl25NativeViewGLSurfaceEGLX1111SwapBuffersEN4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEE(%"class.gl::NativeViewGLSurfaceEGLX11"*, %"class.base::OnceCallback.362"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.362", align 8
  %4 = alloca %"struct.x11::ChangeWindowAttributesRequest", align 4
  %5 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.base::OnceCallback.362", %"class.base::OnceCallback.362"* %1, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.base::OnceCallback.362"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::OnceCallback.362"* %3 to i64*
  store i64 %8, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8
  %10 = call i32 @_ZN2gl22NativeViewGLSurfaceEGL11SwapBuffersEN4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEE(%"class.gl::NativeViewGLSurfaceEGL"* %5, %"class.base::OnceCallback.362"* nonnull %3) #6
  %11 = getelementptr inbounds %"class.base::OnceCallback.362", %"class.base::OnceCallback.362"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %11) #6
  %12 = icmp eq i32 %10, 1
  br i1 %12, label %50, label %13

13:                                               ; preds = %2
  %14 = call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #6
  %15 = call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %14) #6
  br i1 %15, label %16, label %50

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 0, i32 4
  %18 = load i8, i8* %17, align 1, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %50

20:                                               ; preds = %16
  %21 = call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #6
  %22 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %21, i64 0, i32 0
  %23 = bitcast %"struct.x11::ChangeWindowAttributesRequest"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 124, i8* nonnull %23) #6
  %24 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %4, i64 0, i32 0
  %25 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 0, i32 0, i32 2
  %26 = load i64, i64* %25, align 8
  %27 = trunc i64 %26 to i32
  store i32 %27, i32* %24, align 4
  %28 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %28, align 4
  %29 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 0, i32* %29, align 4
  %30 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %30, align 4
  %31 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %4, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %31, align 4
  %32 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %4, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %32, align 4
  %33 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %4, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %33, align 4
  %34 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %4, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %34, align 4
  %35 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %4, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %35, align 4
  %36 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %4, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %36, align 4
  %37 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %4, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %37, align 4
  %38 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %4, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %38, align 4
  %39 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %4, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %39, align 4
  %40 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %4, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %40, align 4
  %41 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %4, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %41, align 4
  %42 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %4, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %42, align 4
  %43 = getelementptr inbounds %"struct.x11::ChangeWindowAttributesRequest", %"struct.x11::ChangeWindowAttributesRequest"* %4, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %43, align 4
  %44 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto22ChangeWindowAttributesERKNS_29ChangeWindowAttributesRequestE(%"class.x11::XProto"* %22, %"struct.x11::ChangeWindowAttributesRequest"* nonnull dereferenceable(124) %4) #6
  %45 = icmp eq %"class.x11::Connection::FutureImpl"* %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %20
  %47 = bitcast %"class.x11::Connection::FutureImpl"* %44 to i8*
  call void @_ZdlPv(i8* %47) #7
  br label %48

48:                                               ; preds = %20, %46
  call void @llvm.lifetime.end.p0i8(i64 124, i8* nonnull %23) #6
  %49 = call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #6
  call void @_ZN3x1110Connection5FlushEv(%"class.x11::Connection"* %49) #6
  store i8 1, i8* %17, align 1
  br label %50

50:                                               ; preds = %13, %48, %16, %2
  ret i32 %10
}

declare i32 @_ZN2gl22NativeViewGLSurfaceEGL11SwapBuffersEN4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEE(%"class.gl::NativeViewGLSurfaceEGL"*, %"class.base::OnceCallback.362"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection"* @_ZNK2gl25NativeViewGLSurfaceEGLX1120GetXNativeConnectionEv(%"class.gl::NativeViewGLSurfaceEGLX11"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #6
  ret %"class.x11::Connection"* %2
}

declare zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"*) local_unnamed_addr #1

declare void @_ZN3x1110Connection5FlushEv(%"class.x11::Connection"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl25NativeViewGLSurfaceEGLX11D2Ev(%"class.gl::NativeViewGLSurfaceEGLX11"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [70 x i8*], [6 x i8*], [5 x i8*] }, { [70 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN2gl25NativeViewGLSurfaceEGLX11E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [70 x i8*], [6 x i8*], [5 x i8*] }, { [70 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN2gl25NativeViewGLSurfaceEGLX11E, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [70 x i8*], [6 x i8*], [5 x i8*] }, { [70 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN2gl25NativeViewGLSurfaceEGLX11E, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 0, i32 0
  tail call void @_ZN2gl22NativeViewGLSurfaceEGL7DestroyEv(%"class.gl::NativeViewGLSurfaceEGL"* %5) #6
  %6 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 0, i32 3
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = tail call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #6
  %11 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 0, i32 1
  tail call void @_ZN3x1110Connection19RemoveEventObserverEPNS_13EventObserverE(%"class.x11::Connection"* %10, %"class.x11::EventObserver"* %11) #6
  br label %12

12:                                               ; preds = %1, %9
  %13 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 0, i32 2, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = ptrtoint i32* %14 to i64
  %18 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 0, i32 2, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast i32* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #7
  br label %21

21:                                               ; preds = %12, %16
  tail call void @_ZN2gl22NativeViewGLSurfaceEGLD2Ev(%"class.gl::NativeViewGLSurfaceEGL"* %5) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2gl22NativeViewGLSurfaceEGLD2Ev(%"class.gl::NativeViewGLSurfaceEGL"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn64_N2gl25NativeViewGLSurfaceEGLX11D1Ev(%"class.gl::NativeViewGLSurfaceEGLX11"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 -1, i32 0, i32 19, i32 0, i32 2
  %3 = bitcast i64* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [70 x i8*], [6 x i8*], [5 x i8*] }, { [70 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN2gl25NativeViewGLSurfaceEGLX11E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i64, i64* %2, i64 8
  %5 = bitcast i64* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [70 x i8*], [6 x i8*], [5 x i8*] }, { [70 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN2gl25NativeViewGLSurfaceEGLX11E, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i64, i64* %2, i64 34
  %7 = bitcast i64* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [70 x i8*], [6 x i8*], [5 x i8*] }, { [70 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN2gl25NativeViewGLSurfaceEGLX11E, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = bitcast i64* %2 to %"class.gl::NativeViewGLSurfaceEGL"*
  tail call void @_ZN2gl22NativeViewGLSurfaceEGL7DestroyEv(%"class.gl::NativeViewGLSurfaceEGL"* %8) #6
  %9 = getelementptr inbounds i64, i64* %2, i64 38
  %10 = bitcast i64* %9 to i8*
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %1
  %14 = tail call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #6
  %15 = bitcast i64* %6 to %"class.x11::EventObserver"*
  tail call void @_ZN3x1110Connection19RemoveEventObserverEPNS_13EventObserverE(%"class.x11::Connection"* %14, %"class.x11::EventObserver"* %15) #6
  br label %16

16:                                               ; preds = %13, %1
  %17 = getelementptr inbounds i64, i64* %2, i64 35
  %18 = bitcast i64* %17 to i32**
  %19 = load i32*, i32** %18, align 8
  %20 = icmp eq i32* %19, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %16
  %22 = ptrtoint i32* %19 to i64
  %23 = getelementptr inbounds i64, i64* %2, i64 36
  store i64 %22, i64* %23, align 8
  %24 = bitcast i32* %19 to i8*
  tail call void @_ZdlPv(i8* %24) #7
  br label %25

25:                                               ; preds = %16, %21
  tail call void @_ZN2gl22NativeViewGLSurfaceEGLD2Ev(%"class.gl::NativeViewGLSurfaceEGL"* %8) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn272_N2gl25NativeViewGLSurfaceEGLX11D1Ev(%"class.gl::NativeViewGLSurfaceEGLX11"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 -1, i32 0, i32 0, i32 2, i32 2
  %3 = bitcast i32* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [70 x i8*], [6 x i8*], [5 x i8*] }, { [70 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN2gl25NativeViewGLSurfaceEGLX11E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i32, i32* %2, i64 16
  %5 = bitcast i32* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [70 x i8*], [6 x i8*], [5 x i8*] }, { [70 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN2gl25NativeViewGLSurfaceEGLX11E, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i32, i32* %2, i64 68
  %7 = bitcast i32* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [70 x i8*], [6 x i8*], [5 x i8*] }, { [70 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN2gl25NativeViewGLSurfaceEGLX11E, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = bitcast i32* %2 to %"class.gl::NativeViewGLSurfaceEGL"*
  tail call void @_ZN2gl22NativeViewGLSurfaceEGL7DestroyEv(%"class.gl::NativeViewGLSurfaceEGL"* %8) #6
  %9 = getelementptr inbounds i32, i32* %2, i64 76
  %10 = bitcast i32* %9 to i8*
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %1
  %14 = tail call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #6
  %15 = bitcast i32* %6 to %"class.x11::EventObserver"*
  tail call void @_ZN3x1110Connection19RemoveEventObserverEPNS_13EventObserverE(%"class.x11::Connection"* %14, %"class.x11::EventObserver"* %15) #6
  br label %16

16:                                               ; preds = %13, %1
  %17 = getelementptr inbounds i32, i32* %2, i64 70
  %18 = bitcast i32* %17 to i32**
  %19 = load i32*, i32** %18, align 8
  %20 = icmp eq i32* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %16
  %22 = ptrtoint i32* %19 to i64
  %23 = getelementptr inbounds i32, i32* %2, i64 72
  %24 = bitcast i32* %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = bitcast i32* %19 to i8*
  tail call void @_ZdlPv(i8* %25) #7
  br label %26

26:                                               ; preds = %16, %21
  tail call void @_ZN2gl22NativeViewGLSurfaceEGLD2Ev(%"class.gl::NativeViewGLSurfaceEGL"* %8) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl25NativeViewGLSurfaceEGLX11D0Ev(%"class.gl::NativeViewGLSurfaceEGLX11"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [70 x i8*], [6 x i8*], [5 x i8*] }, { [70 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN2gl25NativeViewGLSurfaceEGLX11E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [70 x i8*], [6 x i8*], [5 x i8*] }, { [70 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN2gl25NativeViewGLSurfaceEGLX11E, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [70 x i8*], [6 x i8*], [5 x i8*] }, { [70 x i8*], [6 x i8*], [5 x i8*] }* @_ZTVN2gl25NativeViewGLSurfaceEGLX11E, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 0, i32 0
  tail call void @_ZN2gl22NativeViewGLSurfaceEGL7DestroyEv(%"class.gl::NativeViewGLSurfaceEGL"* %5) #6
  %6 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 0, i32 3
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = tail call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #6
  %11 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 0, i32 1
  tail call void @_ZN3x1110Connection19RemoveEventObserverEPNS_13EventObserverE(%"class.x11::Connection"* %10, %"class.x11::EventObserver"* %11) #6
  br label %12

12:                                               ; preds = %9, %1
  %13 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 0, i32 2, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = ptrtoint i32* %14 to i64
  %18 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 0, i32 2, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast i32* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #7
  br label %21

21:                                               ; preds = %12, %16
  tail call void @_ZN2gl22NativeViewGLSurfaceEGLD2Ev(%"class.gl::NativeViewGLSurfaceEGL"* %5) #6
  %22 = bitcast %"class.gl::NativeViewGLSurfaceEGLX11"* %0 to i8*
  tail call void @_ZdlPv(i8* %22) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn64_N2gl25NativeViewGLSurfaceEGLX11D0Ev(%"class.gl::NativeViewGLSurfaceEGLX11"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 -1, i32 0, i32 19, i32 0, i32 2
  %3 = bitcast i64* %2 to %"class.gl::NativeViewGLSurfaceEGLX11"*
  tail call void @_ZN2gl25NativeViewGLSurfaceEGLX11D0Ev(%"class.gl::NativeViewGLSurfaceEGLX11"* %3) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn272_N2gl25NativeViewGLSurfaceEGLX11D0Ev(%"class.gl::NativeViewGLSurfaceEGLX11"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 -1, i32 0, i32 0, i32 2, i32 2
  %3 = bitcast i32* %2 to %"class.gl::NativeViewGLSurfaceEGLX11"*
  tail call void @_ZN2gl25NativeViewGLSurfaceEGLX11D0Ev(%"class.gl::NativeViewGLSurfaceEGLX11"* %3) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gfx::VSyncProvider"* @_ZN2gl25NativeViewGLSurfaceEGLX1127CreateVsyncProviderInternalEv(%"class.gl::NativeViewGLSurfaceEGLX11"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #7
  %3 = bitcast i8* %2 to %"class.ui::XrandrIntervalOnlyVSyncProvider"*
  tail call void @_ZN2ui31XrandrIntervalOnlyVSyncProviderC1Ev(%"class.ui::XrandrIntervalOnlyVSyncProvider"* nonnull %3) #6
  %4 = bitcast i8* %2 to %"class.gfx::VSyncProvider"*
  ret %"class.gfx::VSyncProvider"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl25NativeViewGLSurfaceEGLX117OnEventERKN3x115EventE(%"class.gl::NativeViewGLSurfaceEGLX11"* nocapture readonly, %"class.x11::Event"* nocapture readonly dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.x11::WriteBuffer", align 8
  %4 = alloca %"struct.x11::SendEventRequest", align 4
  %5 = alloca %"struct.x11::ExposeEvent", align 4
  %6 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 58
  br i1 %8, label %9, label %74

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %1, i64 0, i32 3
  %11 = bitcast i8** %10 to %"struct.x11::ExposeEvent"**
  %12 = load %"struct.x11::ExposeEvent"*, %"struct.x11::ExposeEvent"** %11, align 8
  %13 = icmp eq %"struct.x11::ExposeEvent"* %12, null
  br i1 %13, label %74, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 0, i32 2, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 0, i32 2, i32 0, i32 1
  %18 = load i32*, i32** %17, align 8
  %19 = icmp eq i32* %16, %18
  br i1 %19, label %30, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.x11::ExposeEvent", %"struct.x11::ExposeEvent"* %12, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  br label %23

23:                                               ; preds = %27, %20
  %24 = phi i32* [ %16, %20 ], [ %28, %27 ]
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, %22
  br i1 %26, label %30, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds i32, i32* %24, i64 1
  %29 = icmp eq i32* %28, %18
  br i1 %29, label %74, label %23

30:                                               ; preds = %23, %14
  %31 = phi i32* [ %16, %14 ], [ %24, %23 ]
  %32 = icmp eq i32* %31, %18
  br i1 %32, label %74, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"struct.x11::ExposeEvent", %"struct.x11::ExposeEvent"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %34) #6
  %35 = getelementptr inbounds %"struct.x11::ExposeEvent", %"struct.x11::ExposeEvent"* %5, i64 0, i32 3
  %36 = getelementptr inbounds %"struct.x11::ExposeEvent", %"struct.x11::ExposeEvent"* %12, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %34, i8* align 4 %36, i64 20, i1 false)
  %37 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 0, i32 0, i32 2
  %38 = load i64, i64* %37, align 8
  %39 = trunc i64 %38 to i32
  store i32 %39, i32* %35, align 4
  %40 = tail call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #6
  %41 = bitcast %"class.x11::WriteBuffer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %41) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 80, i1 false) #6
  call void @_ZN3x115WriteINS_11ExposeEventEEENS_11WriteBufferERKT_(%"class.x11::WriteBuffer"* nonnull sret %3, %"struct.x11::ExposeEvent"* nonnull dereferenceable(20) %5) #6
  %42 = call dereferenceable(24) %"class.std::__1::vector.379"* @_ZN3x1111WriteBuffer10GetBuffersEv(%"class.x11::WriteBuffer"* nonnull %3) #6
  %43 = getelementptr inbounds %"class.std::__1::vector.379", %"class.std::__1::vector.379"* %42, i64 0, i32 0, i32 0
  %44 = load %class.scoped_refptr.304*, %class.scoped_refptr.304** %43, align 8
  %45 = call i8* @_Znwm(i64 32) #7
  %46 = ptrtoint i8* %45 to i64
  %47 = sub i64 32, %46
  %48 = getelementptr i8, i8* %45, i64 %47
  %49 = ptrtoint i8* %48 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %45, i8 0, i64 %49, i1 false) #6
  %50 = getelementptr inbounds %class.scoped_refptr.304, %class.scoped_refptr.304* %44, i64 0, i32 0
  %51 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %50, align 8
  %52 = bitcast %"class.base::RefCountedMemory"* %51 to i8* (%"class.base::RefCountedMemory"*)***
  %53 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %52, align 8
  %54 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %53, align 8
  %55 = call i8* %54(%"class.base::RefCountedMemory"* %51) #6
  %56 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %50, align 8
  %57 = bitcast %"class.base::RefCountedMemory"* %56 to i64 (%"class.base::RefCountedMemory"*)***
  %58 = load i64 (%"class.base::RefCountedMemory"*)**, i64 (%"class.base::RefCountedMemory"*)*** %57, align 8
  %59 = getelementptr inbounds i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %58, i64 1
  %60 = load i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %59, align 8
  %61 = call i64 %60(%"class.base::RefCountedMemory"* %56) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %45, i8* align 1 %55, i64 %61, i1 false) #6
  %62 = getelementptr inbounds %"struct.x11::SendEventRequest", %"struct.x11::SendEventRequest"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %62) #6
  %63 = bitcast %"struct.x11::SendEventRequest"* %4 to i32*
  store i32 -1431655936, i32* %63, align 4
  %64 = getelementptr inbounds %"struct.x11::SendEventRequest", %"struct.x11::SendEventRequest"* %4, i64 0, i32 1
  store i32 %39, i32* %64, align 4
  %65 = getelementptr inbounds %"struct.x11::SendEventRequest", %"struct.x11::SendEventRequest"* %4, i64 0, i32 2
  store i32 32768, i32* %65, align 4
  %66 = getelementptr inbounds %"struct.x11::SendEventRequest", %"struct.x11::SendEventRequest"* %4, i64 0, i32 3, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %66, i8* nonnull align 1 %45, i64 32, i1 false) #6
  %67 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %40, i64 0, i32 0
  %68 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto9SendEventERKNS_16SendEventRequestE(%"class.x11::XProto"* %67, %"struct.x11::SendEventRequest"* nonnull dereferenceable(44) %4) #6
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %62) #6
  call void @_ZdlPv(i8* nonnull %45) #7
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %41) #6
  %69 = icmp eq %"class.x11::Connection::FutureImpl"* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %33
  %71 = bitcast %"class.x11::Connection::FutureImpl"* %68 to i8*
  call void @_ZdlPv(i8* %71) #7
  br label %72

72:                                               ; preds = %33, %70
  %73 = call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #6
  call void @_ZN3x1110Connection5FlushEv(%"class.x11::Connection"* %73) #6
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %34) #6
  br label %74

74:                                               ; preds = %27, %30, %2, %9, %72
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn272_N2gl25NativeViewGLSurfaceEGLX117OnEventERKN3x115EventE(%"class.gl::NativeViewGLSurfaceEGLX11"* nocapture readonly, %"class.x11::Event"* nocapture readonly dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::NativeViewGLSurfaceEGLX11", %"class.gl::NativeViewGLSurfaceEGLX11"* %0, i64 -1, i32 0, i32 0, i32 2, i32 2
  %4 = bitcast i32* %3 to %"class.gl::NativeViewGLSurfaceEGLX11"*
  tail call void @_ZN2gl25NativeViewGLSurfaceEGLX117OnEventERKN3x115EventE(%"class.gl::NativeViewGLSurfaceEGLX11"* %4, %"class.x11::Event"* dereferenceable(32) %1)
  ret void
}

declare void @_ZN2gl9GLSurface16PrepareToDestroyEb(%"class.gl::GLSurface"*, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZN2gl22NativeViewGLSurfaceEGL6ResizeERKN3gfx4SizeEfRKNS1_10ColorSpaceEb(%"class.gl::NativeViewGLSurfaceEGL"*, %"class.gfx::Size"* dereferenceable(8), float, %"class.gfx::ColorSpace"* dereferenceable(68), i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZN2gl22NativeViewGLSurfaceEGL8RecreateEv(%"class.gl::NativeViewGLSurfaceEGL"*) unnamed_addr #1

declare zeroext i1 @_ZN2gl9GLSurface10DeferDrawsEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare zeroext i1 @_ZN2gl22NativeViewGLSurfaceEGL11IsOffscreenEv(%"class.gl::NativeViewGLSurfaceEGL"*) unnamed_addr #1

declare i64 @_ZN2gl22NativeViewGLSurfaceEGL7GetSizeEv(%"class.gl::NativeViewGLSurfaceEGL"*) unnamed_addr #1

declare i8* @_ZN2gl22NativeViewGLSurfaceEGL9GetHandleEv(%"class.gl::NativeViewGLSurfaceEGL"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl9GLSurface28PreserveChildSurfaceControlsEv(%"class.gl::GLSurface"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZN2gl9GLSurface29SupportsSwapBuffersWithBoundsEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare zeroext i1 @_ZN2gl22NativeViewGLSurfaceEGL21SupportsPostSubBufferEv(%"class.gl::NativeViewGLSurfaceEGL"*) unnamed_addr #1

declare zeroext i1 @_ZN2gl22NativeViewGLSurfaceEGL27SupportsCommitOverlayPlanesEv(%"class.gl::NativeViewGLSurfaceEGL"*) unnamed_addr #1

declare zeroext i1 @_ZN2gl9GLSurface17SupportsAsyncSwapEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare i32 @_ZN2gl9GLSurface27GetBackingFramebufferObjectEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare void @_ZN2gl9GLSurface16SwapBuffersAsyncEN4base12OnceCallbackIFvN3gfx20SwapCompletionResultEEEENS2_IFvRKNS3_20PresentationFeedbackEEEE() unnamed_addr

declare i32 @_ZN2gl9GLSurface21SwapBuffersWithBoundsERKNSt3__16vectorIN3gfx4RectENS1_9allocatorIS4_EEEEN4base12OnceCallbackIFvRKNS3_20PresentationFeedbackEEEE(%"class.gl::GLSurface"*, %"class.std::__1::vector.369"*, %"class.base::OnceCallback.362"*) unnamed_addr #1

declare i32 @_ZN2gl22NativeViewGLSurfaceEGL13PostSubBufferEiiiiN4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEE(%"class.gl::NativeViewGLSurfaceEGL"*, i32, i32, i32, i32, %"class.base::OnceCallback.362"*) unnamed_addr #1

declare void @_ZN2gl9GLSurface18PostSubBufferAsyncEiiiiN4base12OnceCallbackIFvN3gfx20SwapCompletionResultEEEENS2_IFvRKNS3_20PresentationFeedbackEEEE() unnamed_addr

declare i32 @_ZN2gl22NativeViewGLSurfaceEGL19CommitOverlayPlanesEN4base12OnceCallbackIFvRKN3gfx20PresentationFeedbackEEEE(%"class.gl::NativeViewGLSurfaceEGL"*, %"class.base::OnceCallback.362"*) unnamed_addr #1

declare void @_ZN2gl9GLSurface24CommitOverlayPlanesAsyncEN4base12OnceCallbackIFvN3gfx20SwapCompletionResultEEEENS2_IFvRKNS3_20PresentationFeedbackEEEE() unnamed_addr

declare zeroext i1 @_ZN2gl22NativeViewGLSurfaceEGL13OnMakeCurrentEPNS_9GLContextE(%"class.gl::NativeViewGLSurfaceEGL"*, %"class.gl::GLContext"*) unnamed_addr #1

declare zeroext i1 @_ZN2gl9GLSurface23SetBackbufferAllocationEb(%"class.gl::GLSurface"*, i1 zeroext) unnamed_addr #1

declare void @_ZN2gl9GLSurface24SetFrontbufferAllocationEb(%"class.gl::GLSurface"*, i1 zeroext) unnamed_addr #1

declare i8* @_ZN2gl9GLSurface14GetShareHandleEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare i8* @_ZN2gl12GLSurfaceEGL10GetDisplayEv(%"class.gl::GLSurfaceEGL"*) unnamed_addr #1

declare i8* @_ZN2gl12GLSurfaceEGL9GetConfigEv(%"class.gl::GLSurfaceEGL"*) unnamed_addr #1

declare void @_ZN2gl12GLSurfaceEGL9GetFormatEv(%"class.gl::GLSurfaceFormat"* sret, %"class.gl::GLSurfaceEGL"*) unnamed_addr #1

declare %"class.gfx::VSyncProvider"* @_ZN2gl22NativeViewGLSurfaceEGL16GetVSyncProviderEv(%"class.gl::NativeViewGLSurfaceEGL"*) unnamed_addr #1

declare void @_ZN2gl22NativeViewGLSurfaceEGL15SetVSyncEnabledEb(%"class.gl::NativeViewGLSurfaceEGL"*, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZN2gl22NativeViewGLSurfaceEGL20ScheduleOverlayPlaneEiN3gfx16OverlayTransformEPNS_7GLImageERKNS1_4RectERKNS1_5RectFEbNSt3__110unique_ptrINS1_8GpuFenceENSB_14default_deleteISD_EEEE(%"class.gl::NativeViewGLSurfaceEGL"*, i32, i32, %"class.gl::GLImage"*, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::RectF"* dereferenceable(16), i1 zeroext, i64) unnamed_addr #1

declare zeroext i1 @_ZN2gl9GLSurface15ScheduleCALayerERKN2ui21CARendererLayerParamsE(%"class.gl::GLSurface"*, %"struct.ui::CARendererLayerParams"*) unnamed_addr #1

declare void @_ZN2gl9GLSurface25ScheduleCALayerInUseQueryENSt3__16vectorINS0_17CALayerInUseQueryENS1_9allocatorIS3_EEEE() unnamed_addr

declare void @_ZN2gl9GLSurface15ScheduleDCLayerENSt3__110unique_ptrIN2ui21DCRendererLayerParamsENS1_14default_deleteIS4_EEEE() unnamed_addr

declare zeroext i1 @_ZN2gl9GLSurface17SetEnableDCLayersEb(%"class.gl::GLSurface"*, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZNK2gl9GLSurface13IsSurfacelessEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare zeroext i1 @_ZNK2gl9GLSurface18SupportsViewporterEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare i32 @_ZNK2gl22NativeViewGLSurfaceEGL9GetOriginEv(%"class.gl::NativeViewGLSurfaceEGL"*) unnamed_addr #1

declare zeroext i1 @_ZNK2gl9GLSurface14BuffersFlippedEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare zeroext i1 @_ZNK2gl9GLSurface16SupportsDCLayersEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare zeroext i1 @_ZNK2gl9GLSurface22SupportsProtectedVideoEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare zeroext i1 @_ZNK2gl9GLSurface28SupportsOverridePlatformSizeEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare zeroext i1 @_ZN2gl9GLSurface16SetDrawRectangleERKN3gfx4RectE(%"class.gl::GLSurface"*, %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #1

declare i64 @_ZNK2gl9GLSurface13GetDrawOffsetEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare void @_ZN2gl9GLSurface21SetRelyOnImplicitSyncEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare void @_ZN2gl9GLSurface28SetForceGlFlushOnSwapBuffersEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare zeroext i1 @_ZNK2gl22NativeViewGLSurfaceEGL22SupportsSwapTimestampsEv(%"class.gl::NativeViewGLSurfaceEGL"*) unnamed_addr #1

declare void @_ZN2gl22NativeViewGLSurfaceEGL23SetEnableSwapTimestampsEv(%"class.gl::NativeViewGLSurfaceEGL"*) unnamed_addr #1

declare zeroext i1 @_ZNK2gl9GLSurface22SupportsPlaneGpuFencesEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare i32 @_ZNK2gl9GLSurface14GetBufferCountEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare %"class.gl::EGLTimestampClient"* @_ZN2gl22NativeViewGLSurfaceEGL21GetEGLTimestampClientEv(%"class.gl::NativeViewGLSurfaceEGL"*) unnamed_addr #1

declare zeroext i1 @_ZNK2gl9GLSurface16SupportsGpuVSyncEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare void @_ZN2gl9GLSurface18SetGpuVSyncEnabledEb(%"class.gl::GLSurface"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl9GLSurface19SetDisplayTransformEN3gfx16OverlayTransformE(%"class.gl::GLSurface"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl9GLSurface12SetFrameRateEf(%"class.gl::GLSurface"*, float) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN2gl9GLSurface10SetCurrentEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare zeroext i1 @_ZN2gl9GLSurface9IsCurrentEv(%"class.gl::GLSurface"*) unnamed_addr #1

declare zeroext i1 @_ZN2gl9GLSurface20SupportsDelegatedInkEv(%"class.gl::GLSurface"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl9GLSurface30SetDelegatedInkTrailStartPointENSt3__110unique_ptrIN3gfx20DelegatedInkMetadataENS1_14default_deleteIS4_EEEE(%"class.gl::GLSurface"*, %"class.gfx::DelegatedInkMetadata"*) unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.gfx::DelegatedInkMetadata"* %1, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.gfx::DelegatedInkMetadata"* %1 to i8*
  tail call void @_ZdlPv(i8* %5) #7
  br label %6

6:                                                ; preds = %2, %4
  ret void
}

declare void @_ZN2gl9GLSurface37InitDelegatedInkPointRendererReceiverEN4mojo15PendingReceiverIN3gfx5mojom25DelegatedInkPointRendererEEE() unnamed_addr

declare zeroext i1 @_ZNK2gl22NativeViewGLSurfaceEGL23IsEGLTimestampSupportedEv(%"class.gl::NativeViewGLSurfaceEGL"*) unnamed_addr #1

declare zeroext i1 @_ZN2gl22NativeViewGLSurfaceEGL32GetFrameTimestampInfoIfAvailableEPN4base9TimeTicksEPNS1_9TimeDeltaES3_Pji(%"class.gl::NativeViewGLSurfaceEGL"*, %"class.base::TimeTicks"*, %"class.base::TimeDelta"*, %"class.base::TimeTicks"*, i32*, i32) unnamed_addr #1

declare zeroext i1 @_ZN2gl22NativeViewGLSurfaceEGL22InitializeNativeWindowEv(%"class.gl::NativeViewGLSurfaceEGL"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn64_NK2gl22NativeViewGLSurfaceEGL23IsEGLTimestampSupportedEv(%"class.gl::NativeViewGLSurfaceEGL"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn64_N2gl22NativeViewGLSurfaceEGL32GetFrameTimestampInfoIfAvailableEPN4base9TimeTicksEPNS1_9TimeDeltaES3_Pji(%"class.gl::NativeViewGLSurfaceEGL"*, %"class.base::TimeTicks"*, %"class.base::TimeDelta"*, %"class.base::TimeTicks"*, i32*, i32) unnamed_addr #0 align 2

declare void @_ZN3x1110Connection10FutureImpl4SyncEP13scoped_refptrIN4base16RefCountedMemoryEEPNSt3__110unique_ptrINS_5ErrorENS7_14default_deleteIS9_EEEE(%"class.x11::Connection::FutureImpl"*, %class.scoped_refptr.304*, %"class.std::__1::unique_ptr.306"*) local_unnamed_addr #1

declare void @_ZN3x1110ReadBufferC1E13scoped_refptrIN4base16RefCountedMemoryEEb(%"struct.x11::ReadBuffer"*, %"class.base::RefCountedMemory"*, i1 zeroext) unnamed_addr #1

declare %"struct.x11::QueryTreeReply"* @_ZN3x116detail9ReadReplyINS_14QueryTreeReplyEEENSt3__110unique_ptrIT_NS3_14default_deleteIS5_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3x1110ReadBufferD1Ev(%"struct.x11::ReadBuffer"*) unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN2ui31XrandrIntervalOnlyVSyncProviderC1Ev(%"class.ui::XrandrIntervalOnlyVSyncProvider"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN3x115WriteINS_11ExposeEventEEENS_11WriteBufferERKT_(%"class.x11::WriteBuffer"* sret, %"struct.x11::ExposeEvent"* dereferenceable(20)) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::vector.379"* @_ZN3x1111WriteBuffer10GetBuffersEv(%"class.x11::WriteBuffer"*) local_unnamed_addr #1

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto9SendEventERKNS_16SendEventRequestE(%"class.x11::XProto"*, %"struct.x11::SendEventRequest"* dereferenceable(44)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
