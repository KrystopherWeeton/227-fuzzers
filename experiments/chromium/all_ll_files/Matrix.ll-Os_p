; ModuleID = '../../third_party/swiftshader/src/Renderer/Matrix.cpp'
source_filename = "../../third_party/swiftshader/src/Renderer/Matrix.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.sw::Matrix" = type { [4 x [4 x float]] }
%"struct.sw::float4" = type { float, float, float, float }
%"struct.sw::Vector" = type { %union.anon }
%union.anon = type { [3 x float] }

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZN2sw6Matrix4diagEffff(%"struct.sw::Matrix"* noalias nocapture sret, float, float, float, float) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 0
  store float %1, float* %6, align 4
  %7 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 1
  %8 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 1
  %9 = bitcast float* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 16, i1 false)
  store float %2, float* %8, align 4
  %10 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 2
  %11 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 2
  %12 = bitcast float* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 16, i1 false)
  store float %3, float* %11, align 4
  %13 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 3
  %14 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 3
  %15 = bitcast float* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %15, i8 0, i64 16, i1 false)
  store float %4, float* %14, align 4
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden float* @_ZN2sw6MatrixcvPfEv(%"struct.sw::Matrix"* readnone) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 0
  ret float* %2
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK2sw6MatrixpsEv(%"struct.sw::Matrix"* noalias nocapture sret, %"struct.sw::Matrix"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"struct.sw::Matrix"* %0 to i8*
  %4 = bitcast %"struct.sw::Matrix"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 64, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZNK2sw6MatrixngEv(%"struct.sw::Matrix"* noalias nocapture sret, %"struct.sw::Matrix"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %3 = bitcast %"struct.sw::Matrix"* %1 to <4 x float>*
  %4 = load <4 x float>, <4 x float>* %3, align 4
  %5 = fsub <4 x float> <float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00>, %4
  %6 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 1, i64 0
  %7 = bitcast float* %6 to <4 x float>*
  %8 = load <4 x float>, <4 x float>* %7, align 4
  %9 = fsub <4 x float> <float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00>, %8
  %10 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 2, i64 0
  %11 = bitcast float* %10 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 4
  %13 = fsub <4 x float> <float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00>, %12
  %14 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 3, i64 0
  %15 = bitcast float* %14 to <4 x float>*
  %16 = load <4 x float>, <4 x float>* %15, align 4
  %17 = fsub <4 x float> <float -0.000000e+00, float -0.000000e+00, float -0.000000e+00, float -0.000000e+00>, %16
  %18 = bitcast %"struct.sw::Matrix"* %0 to <4 x float>*
  store <4 x float> %5, <4 x float>* %18, align 4
  %19 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 0
  %20 = bitcast float* %19 to <4 x float>*
  store <4 x float> %9, <4 x float>* %20, align 4
  %21 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 0
  %22 = bitcast float* %21 to <4 x float>*
  store <4 x float> %13, <4 x float>* %22, align 4
  %23 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 0
  %24 = bitcast float* %23 to <4 x float>*
  store <4 x float> %17, <4 x float>* %24, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK2sw6MatrixntEv(%"struct.sw::Matrix"* noalias sret, %"struct.sw::Matrix"* readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 1
  %4 = bitcast float* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 -1, i64 60, i1 false)
  %5 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 2, i64 2
  %6 = load float, float* %5, align 4
  %7 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 3, i64 3
  %8 = load float, float* %7, align 4
  %9 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 3, i64 2
  %10 = load float, float* %9, align 4
  %11 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 2, i64 3
  %12 = load float, float* %11, align 4
  %13 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 1, i64 2
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 1, i64 3
  %16 = load float, float* %15, align 4
  %17 = fmul float %12, %14
  %18 = fmul float %6, %16
  %19 = fsub float %17, %18
  %20 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 2, i64 1
  %21 = load float, float* %20, align 4
  %22 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 3, i64 1
  %23 = load float, float* %22, align 4
  %24 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 1, i64 1
  %25 = load float, float* %24, align 4
  %26 = fmul float %12, %25
  %27 = fmul float %16, %21
  %28 = fsub float %26, %27
  %29 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 0, i64 2
  %30 = load float, float* %29, align 4
  %31 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 0, i64 3
  %32 = load float, float* %31, align 4
  %33 = insertelement <4 x float> undef, float %6, i32 0
  %34 = insertelement <4 x float> %33, float %8, i32 1
  %35 = insertelement <4 x float> %34, float %8, i32 2
  %36 = insertelement <4 x float> %35, float %12, i32 3
  %37 = insertelement <4 x float> undef, float %8, i32 0
  %38 = insertelement <4 x float> %37, float %30, i32 1
  %39 = insertelement <4 x float> %38, float %14, i32 2
  %40 = insertelement <4 x float> %39, float %30, i32 3
  %41 = fmul <4 x float> %36, %40
  %42 = insertelement <2 x float> undef, float %10, i32 0
  %43 = insertelement <2 x float> %42, float %6, i32 1
  %44 = shufflevector <2 x float> %43, <2 x float> undef, <4 x i32> <i32 0, i32 0, i32 0, i32 1>
  %45 = insertelement <4 x float> undef, float %12, i32 0
  %46 = insertelement <4 x float> %45, float %32, i32 1
  %47 = insertelement <4 x float> %46, float %16, i32 2
  %48 = insertelement <4 x float> %47, float %32, i32 3
  %49 = fmul <4 x float> %44, %48
  %50 = fsub <4 x float> %41, %49
  %51 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 0, i64 1
  %52 = load float, float* %51, align 4
  %53 = insertelement <2 x float> undef, float %8, i32 0
  %54 = insertelement <2 x float> %53, float %12, i32 1
  %55 = shufflevector <2 x float> %54, <2 x float> undef, <4 x i32> <i32 0, i32 0, i32 0, i32 1>
  %56 = insertelement <4 x float> undef, float %21, i32 0
  %57 = insertelement <4 x float> %56, float %52, i32 1
  %58 = insertelement <4 x float> %57, float %25, i32 2
  %59 = insertelement <4 x float> %58, float %52, i32 3
  %60 = fmul <4 x float> %55, %59
  %61 = insertelement <4 x float> %45, float %23, i32 1
  %62 = insertelement <4 x float> %61, float %16, i32 2
  %63 = insertelement <4 x float> %62, float %21, i32 3
  %64 = insertelement <2 x float> undef, float %23, i32 0
  %65 = insertelement <2 x float> %64, float %32, i32 1
  %66 = shufflevector <2 x float> %65, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %67 = fmul <4 x float> %63, %66
  %68 = fsub <4 x float> %60, %67
  %69 = shufflevector <2 x float> %43, <2 x float> undef, <4 x i32> <i32 0, i32 0, i32 0, i32 1>
  %70 = insertelement <4 x float> undef, float %25, i32 0
  %71 = insertelement <4 x float> %70, float %21, i32 1
  %72 = insertelement <4 x float> %71, float %52, i32 2
  %73 = insertelement <4 x float> %72, float %25, i32 3
  %74 = fmul <4 x float> %69, %73
  %75 = insertelement <4 x float> undef, float %14, i32 0
  %76 = insertelement <4 x float> %75, float %6, i32 1
  %77 = insertelement <4 x float> %76, float %23, i32 2
  %78 = insertelement <4 x float> %77, float %14, i32 3
  %79 = insertelement <4 x float> undef, float %23, i32 0
  %80 = insertelement <4 x float> %79, float %23, i32 1
  %81 = insertelement <4 x float> %80, float %30, i32 2
  %82 = insertelement <4 x float> %81, float %21, i32 3
  %83 = fmul <4 x float> %78, %82
  %84 = fsub <4 x float> %74, %83
  %85 = fmul float %6, %52
  %86 = fmul float %21, %30
  %87 = fsub float %85, %86
  %88 = fmul float %16, %30
  %89 = fmul float %14, %32
  %90 = fsub float %88, %89
  %91 = fmul float %16, %52
  %92 = fmul float %25, %32
  %93 = fsub float %91, %92
  %94 = fmul float %14, %52
  %95 = fmul float %25, %30
  %96 = fsub float %94, %95
  %97 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 1, i64 0
  %98 = load float, float* %97, align 4
  %99 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 2, i64 0
  %100 = load float, float* %99, align 4
  %101 = extractelement <4 x float> %50, i32 2
  %102 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 3, i64 0
  %103 = load float, float* %102, align 4
  %104 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 0
  %105 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 0
  %106 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 0
  %107 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 0, i64 0
  %108 = load float, float* %107, align 4
  %109 = extractelement <4 x float> %50, i32 0
  %110 = extractelement <4 x float> %50, i32 3
  %111 = extractelement <4 x float> %50, i32 1
  %112 = insertelement <4 x float> undef, float %101, i32 0
  %113 = insertelement <4 x float> %112, float %109, i32 1
  %114 = insertelement <4 x float> %113, float %111, i32 2
  %115 = insertelement <4 x float> %114, float %19, i32 3
  %116 = fmul <4 x float> %59, %115
  %117 = fmul <4 x float> %50, %73
  %118 = fsub <4 x float> %117, %116
  %119 = insertelement <2 x float> %64, float %21, i32 1
  %120 = shufflevector <2 x float> %119, <2 x float> undef, <4 x i32> <i32 0, i32 0, i32 0, i32 1>
  %121 = insertelement <4 x float> undef, float %19, i32 0
  %122 = insertelement <4 x float> %121, float %110, i32 1
  %123 = insertelement <4 x float> %122, float %90, i32 2
  %124 = insertelement <4 x float> %123, float %90, i32 3
  %125 = fmul <4 x float> %120, %124
  %126 = fadd <4 x float> %118, %125
  %127 = fsub <4 x float> %118, %125
  %128 = shufflevector <4 x float> %126, <4 x float> %127, <4 x i32> <i32 0, i32 5, i32 2, i32 7>
  %129 = bitcast %"struct.sw::Matrix"* %0 to <4 x float>*
  store <4 x float> %128, <4 x float>* %129, align 4
  %130 = insertelement <4 x float> undef, float %100, i32 0
  %131 = insertelement <4 x float> %130, float %108, i32 1
  %132 = insertelement <4 x float> %131, float %98, i32 2
  %133 = insertelement <4 x float> %132, float %108, i32 3
  %134 = fmul <4 x float> %115, %133
  %135 = insertelement <4 x float> undef, float %98, i32 0
  %136 = insertelement <4 x float> %135, float %100, i32 1
  %137 = insertelement <4 x float> %136, float %108, i32 2
  %138 = insertelement <4 x float> %137, float %98, i32 3
  %139 = fmul <4 x float> %50, %138
  %140 = fsub <4 x float> %134, %139
  %141 = insertelement <2 x float> undef, float %103, i32 0
  %142 = insertelement <2 x float> %141, float %100, i32 1
  %143 = shufflevector <2 x float> %142, <2 x float> undef, <4 x i32> <i32 0, i32 0, i32 0, i32 1>
  %144 = fmul <4 x float> %124, %143
  %145 = fsub <4 x float> %140, %144
  %146 = fadd <4 x float> %140, %144
  %147 = shufflevector <4 x float> %145, <4 x float> %146, <4 x i32> <i32 0, i32 5, i32 2, i32 7>
  %148 = bitcast float* %104 to <4 x float>*
  store <4 x float> %147, <4 x float>* %148, align 4
  %149 = extractelement <4 x float> %68, i32 2
  %150 = insertelement <4 x float> undef, float %149, i32 0
  %151 = extractelement <4 x float> %68, i32 0
  %152 = insertelement <4 x float> %150, float %151, i32 1
  %153 = extractelement <4 x float> %68, i32 1
  %154 = insertelement <4 x float> %152, float %153, i32 2
  %155 = insertelement <4 x float> %154, float %28, i32 3
  %156 = fmul <4 x float> %155, %133
  %157 = fmul <4 x float> %68, %138
  %158 = fsub <4 x float> %157, %156
  %159 = insertelement <4 x float> undef, float %28, i32 0
  %160 = extractelement <4 x float> %68, i32 3
  %161 = insertelement <4 x float> %159, float %160, i32 1
  %162 = insertelement <4 x float> %161, float %93, i32 2
  %163 = insertelement <4 x float> %162, float %93, i32 3
  %164 = shufflevector <2 x float> %142, <2 x float> undef, <4 x i32> <i32 0, i32 0, i32 0, i32 1>
  %165 = fmul <4 x float> %163, %164
  %166 = fadd <4 x float> %158, %165
  %167 = fsub <4 x float> %158, %165
  %168 = shufflevector <4 x float> %166, <4 x float> %167, <4 x i32> <i32 0, i32 5, i32 2, i32 7>
  %169 = bitcast float* %105 to <4 x float>*
  store <4 x float> %168, <4 x float>* %169, align 4
  %170 = fmul <4 x float> %84, %133
  %171 = extractelement <4 x float> %84, i32 1
  %172 = insertelement <4 x float> undef, float %171, i32 0
  %173 = extractelement <4 x float> %84, i32 2
  %174 = insertelement <4 x float> %172, float %173, i32 1
  %175 = extractelement <4 x float> %84, i32 0
  %176 = insertelement <4 x float> %174, float %175, i32 2
  %177 = insertelement <4 x float> %176, float %87, i32 3
  %178 = fmul <4 x float> %177, %138
  %179 = fsub <4 x float> %170, %178
  %180 = extractelement <4 x float> %84, i32 3
  %181 = insertelement <4 x float> undef, float %180, i32 0
  %182 = insertelement <4 x float> %181, float %87, i32 1
  %183 = insertelement <4 x float> %182, float %96, i32 2
  %184 = insertelement <4 x float> %183, float %96, i32 3
  %185 = shufflevector <2 x float> %142, <2 x float> undef, <4 x i32> <i32 0, i32 0, i32 0, i32 1>
  %186 = fmul <4 x float> %184, %185
  %187 = fsub <4 x float> %179, %186
  %188 = fadd <4 x float> %179, %186
  %189 = shufflevector <4 x float> %187, <4 x float> %188, <4 x i32> <i32 0, i32 5, i32 2, i32 7>
  %190 = bitcast float* %106 to <4 x float>*
  store <4 x float> %189, <4 x float>* %190, align 4
  %191 = extractelement <4 x float> %126, i32 0
  %192 = fmul float %191, %108
  %193 = extractelement <4 x float> %127, i32 1
  %194 = fmul float %98, %193
  %195 = fadd float %194, %192
  %196 = shufflevector <4 x float> %127, <4 x float> %126, <2 x i32> <i32 3, i32 6>
  %197 = fmul <2 x float> %142, %196
  %198 = extractelement <2 x float> %197, i32 1
  %199 = fadd float %198, %195
  %200 = extractelement <2 x float> %197, i32 0
  %201 = fadd float %200, %199
  %202 = fdiv float 1.000000e+00, %201
  %203 = tail call dereferenceable(64) %"struct.sw::Matrix"* @_ZN2sw6MatrixmLEf(%"struct.sw::Matrix"* %0, float %202) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden dereferenceable(64) %"struct.sw::Matrix"* @_ZN2sw6MatrixdVEf(%"struct.sw::Matrix"* returned, float) local_unnamed_addr #4 align 2 {
  %3 = fdiv float 1.000000e+00, %1
  %4 = tail call dereferenceable(64) %"struct.sw::Matrix"* @_ZN2sw6MatrixmLEf(%"struct.sw::Matrix"* %0, float %3) #10
  ret %"struct.sw::Matrix"* %4
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZNK2sw6MatrixcoEv(%"struct.sw::Matrix"* noalias nocapture sret, %"struct.sw::Matrix"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %3 = bitcast %"struct.sw::Matrix"* %1 to i32*
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 1, i64 0
  %6 = bitcast float* %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 2, i64 0
  %9 = bitcast float* %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 3, i64 0
  %12 = bitcast float* %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 0, i64 1
  %15 = bitcast float* %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 1, i64 1
  %18 = bitcast float* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 2, i64 1
  %21 = bitcast float* %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 3, i64 1
  %24 = bitcast float* %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 0, i64 2
  %27 = bitcast float* %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 1, i64 2
  %30 = bitcast float* %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 2, i64 2
  %33 = bitcast float* %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 3, i64 2
  %36 = bitcast float* %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 0, i64 3
  %39 = bitcast float* %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 1, i64 3
  %42 = bitcast float* %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 2, i64 3
  %45 = bitcast float* %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 3, i64 3
  %48 = bitcast float* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = bitcast %"struct.sw::Matrix"* %0 to i32*
  store i32 %4, i32* %50, align 4
  %51 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 1
  %52 = bitcast float* %51 to i32*
  store i32 %7, i32* %52, align 4
  %53 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 2
  %54 = bitcast float* %53 to i32*
  store i32 %10, i32* %54, align 4
  %55 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 3
  %56 = bitcast float* %55 to i32*
  store i32 %13, i32* %56, align 4
  %57 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 0
  %58 = bitcast float* %57 to i32*
  store i32 %16, i32* %58, align 4
  %59 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 1
  %60 = bitcast float* %59 to i32*
  store i32 %19, i32* %60, align 4
  %61 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 2
  %62 = bitcast float* %61 to i32*
  store i32 %22, i32* %62, align 4
  %63 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 3
  %64 = bitcast float* %63 to i32*
  store i32 %25, i32* %64, align 4
  %65 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 0
  %66 = bitcast float* %65 to i32*
  store i32 %28, i32* %66, align 4
  %67 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 1
  %68 = bitcast float* %67 to i32*
  store i32 %31, i32* %68, align 4
  %69 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 2
  %70 = bitcast float* %69 to i32*
  store i32 %34, i32* %70, align 4
  %71 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 3
  %72 = bitcast float* %71 to i32*
  store i32 %37, i32* %72, align 4
  %73 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 0
  %74 = bitcast float* %73 to i32*
  store i32 %40, i32* %74, align 4
  %75 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 1
  %76 = bitcast float* %75 to i32*
  store i32 %43, i32* %76, align 4
  %77 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 2
  %78 = bitcast float* %77 to i32*
  store i32 %46, i32* %78, align 4
  %79 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 3
  %80 = bitcast float* %79 to i32*
  store i32 %49, i32* %80, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden dereferenceable(64) %"struct.sw::Matrix"* @_ZN2sw6MatrixpLERKS0_(%"struct.sw::Matrix"* returned, %"struct.sw::Matrix"* nocapture readonly dereferenceable(64)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 0, i64 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 0
  %6 = load float, float* %5, align 4
  %7 = fadd float %4, %6
  store float %7, float* %5, align 4
  %8 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 0, i64 1
  %9 = load float, float* %8, align 4
  %10 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 1
  %11 = load float, float* %10, align 4
  %12 = fadd float %9, %11
  store float %12, float* %10, align 4
  %13 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 0, i64 2
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 2
  %16 = load float, float* %15, align 4
  %17 = fadd float %14, %16
  store float %17, float* %15, align 4
  %18 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 0, i64 3
  %19 = load float, float* %18, align 4
  %20 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 3
  %21 = load float, float* %20, align 4
  %22 = fadd float %19, %21
  store float %22, float* %20, align 4
  %23 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 1, i64 0
  %24 = load float, float* %23, align 4
  %25 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 0
  %26 = load float, float* %25, align 4
  %27 = fadd float %24, %26
  store float %27, float* %25, align 4
  %28 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 1, i64 1
  %29 = load float, float* %28, align 4
  %30 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 1
  %31 = load float, float* %30, align 4
  %32 = fadd float %29, %31
  store float %32, float* %30, align 4
  %33 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 1, i64 2
  %34 = load float, float* %33, align 4
  %35 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 2
  %36 = load float, float* %35, align 4
  %37 = fadd float %34, %36
  store float %37, float* %35, align 4
  %38 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 1, i64 3
  %39 = load float, float* %38, align 4
  %40 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 3
  %41 = load float, float* %40, align 4
  %42 = fadd float %39, %41
  store float %42, float* %40, align 4
  %43 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 2, i64 0
  %44 = load float, float* %43, align 4
  %45 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 0
  %46 = load float, float* %45, align 4
  %47 = fadd float %44, %46
  store float %47, float* %45, align 4
  %48 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 2, i64 1
  %49 = load float, float* %48, align 4
  %50 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 1
  %51 = load float, float* %50, align 4
  %52 = fadd float %49, %51
  store float %52, float* %50, align 4
  %53 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 2, i64 2
  %54 = load float, float* %53, align 4
  %55 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 2
  %56 = load float, float* %55, align 4
  %57 = fadd float %54, %56
  store float %57, float* %55, align 4
  %58 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 2, i64 3
  %59 = load float, float* %58, align 4
  %60 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 3
  %61 = load float, float* %60, align 4
  %62 = fadd float %59, %61
  store float %62, float* %60, align 4
  %63 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 3, i64 0
  %64 = load float, float* %63, align 4
  %65 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 0
  %66 = load float, float* %65, align 4
  %67 = fadd float %64, %66
  store float %67, float* %65, align 4
  %68 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 3, i64 1
  %69 = load float, float* %68, align 4
  %70 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 1
  %71 = load float, float* %70, align 4
  %72 = fadd float %69, %71
  store float %72, float* %70, align 4
  %73 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 3, i64 2
  %74 = load float, float* %73, align 4
  %75 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 2
  %76 = load float, float* %75, align 4
  %77 = fadd float %74, %76
  store float %77, float* %75, align 4
  %78 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 3, i64 3
  %79 = load float, float* %78, align 4
  %80 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 3
  %81 = load float, float* %80, align 4
  %82 = fadd float %79, %81
  store float %82, float* %80, align 4
  ret %"struct.sw::Matrix"* %0
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden dereferenceable(64) %"struct.sw::Matrix"* @_ZN2sw6MatrixmIERKS0_(%"struct.sw::Matrix"* returned, %"struct.sw::Matrix"* nocapture readonly dereferenceable(64)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 0, i64 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 0
  %6 = load float, float* %5, align 4
  %7 = fsub float %6, %4
  store float %7, float* %5, align 4
  %8 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 0, i64 1
  %9 = load float, float* %8, align 4
  %10 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 1
  %11 = load float, float* %10, align 4
  %12 = fsub float %11, %9
  store float %12, float* %10, align 4
  %13 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 0, i64 2
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 2
  %16 = load float, float* %15, align 4
  %17 = fsub float %16, %14
  store float %17, float* %15, align 4
  %18 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 0, i64 3
  %19 = load float, float* %18, align 4
  %20 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 3
  %21 = load float, float* %20, align 4
  %22 = fsub float %21, %19
  store float %22, float* %20, align 4
  %23 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 1, i64 0
  %24 = load float, float* %23, align 4
  %25 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 0
  %26 = load float, float* %25, align 4
  %27 = fsub float %26, %24
  store float %27, float* %25, align 4
  %28 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 1, i64 1
  %29 = load float, float* %28, align 4
  %30 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 1
  %31 = load float, float* %30, align 4
  %32 = fsub float %31, %29
  store float %32, float* %30, align 4
  %33 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 1, i64 2
  %34 = load float, float* %33, align 4
  %35 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 2
  %36 = load float, float* %35, align 4
  %37 = fsub float %36, %34
  store float %37, float* %35, align 4
  %38 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 1, i64 3
  %39 = load float, float* %38, align 4
  %40 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 3
  %41 = load float, float* %40, align 4
  %42 = fsub float %41, %39
  store float %42, float* %40, align 4
  %43 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 2, i64 0
  %44 = load float, float* %43, align 4
  %45 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 0
  %46 = load float, float* %45, align 4
  %47 = fsub float %46, %44
  store float %47, float* %45, align 4
  %48 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 2, i64 1
  %49 = load float, float* %48, align 4
  %50 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 1
  %51 = load float, float* %50, align 4
  %52 = fsub float %51, %49
  store float %52, float* %50, align 4
  %53 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 2, i64 2
  %54 = load float, float* %53, align 4
  %55 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 2
  %56 = load float, float* %55, align 4
  %57 = fsub float %56, %54
  store float %57, float* %55, align 4
  %58 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 2, i64 3
  %59 = load float, float* %58, align 4
  %60 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 3
  %61 = load float, float* %60, align 4
  %62 = fsub float %61, %59
  store float %62, float* %60, align 4
  %63 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 3, i64 0
  %64 = load float, float* %63, align 4
  %65 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 0
  %66 = load float, float* %65, align 4
  %67 = fsub float %66, %64
  store float %67, float* %65, align 4
  %68 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 3, i64 1
  %69 = load float, float* %68, align 4
  %70 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 1
  %71 = load float, float* %70, align 4
  %72 = fsub float %71, %69
  store float %72, float* %70, align 4
  %73 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 3, i64 2
  %74 = load float, float* %73, align 4
  %75 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 2
  %76 = load float, float* %75, align 4
  %77 = fsub float %76, %74
  store float %77, float* %75, align 4
  %78 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 3, i64 3
  %79 = load float, float* %78, align 4
  %80 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 3
  %81 = load float, float* %80, align 4
  %82 = fsub float %81, %79
  store float %82, float* %80, align 4
  ret %"struct.sw::Matrix"* %0
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden dereferenceable(64) %"struct.sw::Matrix"* @_ZN2sw6MatrixmLEf(%"struct.sw::Matrix"* returned, float) local_unnamed_addr #4 align 2 {
  %3 = bitcast %"struct.sw::Matrix"* %0 to <4 x float>*
  %4 = load <4 x float>, <4 x float>* %3, align 4
  %5 = insertelement <4 x float> undef, float %1, i32 0
  %6 = shufflevector <4 x float> %5, <4 x float> undef, <4 x i32> zeroinitializer
  %7 = fmul <4 x float> %4, %6
  %8 = bitcast %"struct.sw::Matrix"* %0 to <4 x float>*
  store <4 x float> %7, <4 x float>* %8, align 4
  %9 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 0
  %10 = bitcast float* %9 to <4 x float>*
  %11 = load <4 x float>, <4 x float>* %10, align 4
  %12 = fmul <4 x float> %11, %6
  %13 = bitcast float* %9 to <4 x float>*
  store <4 x float> %12, <4 x float>* %13, align 4
  %14 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 0
  %15 = bitcast float* %14 to <4 x float>*
  %16 = load <4 x float>, <4 x float>* %15, align 4
  %17 = fmul <4 x float> %16, %6
  %18 = bitcast float* %14 to <4 x float>*
  store <4 x float> %17, <4 x float>* %18, align 4
  %19 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 0
  %20 = bitcast float* %19 to <4 x float>*
  %21 = load <4 x float>, <4 x float>* %20, align 4
  %22 = fmul <4 x float> %21, %6
  %23 = bitcast float* %19 to <4 x float>*
  store <4 x float> %22, <4 x float>* %23, align 4
  ret %"struct.sw::Matrix"* %0
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden dereferenceable(64) %"struct.sw::Matrix"* @_ZN2sw6MatrixmLERKS0_(%"struct.sw::Matrix"* returned, %"struct.sw::Matrix"* readonly dereferenceable(64)) local_unnamed_addr #2 align 2 {
  %3 = alloca %"struct.sw::Matrix", align 16
  %4 = bitcast %"struct.sw::Matrix"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #11
  call void @_ZN2swmlERKNS_6MatrixES2_(%"struct.sw::Matrix"* nonnull sret %3, %"struct.sw::Matrix"* dereferenceable(64) %0, %"struct.sw::Matrix"* dereferenceable(64) %1) #10
  %5 = bitcast %"struct.sw::Matrix"* %3 to <4 x i32>*
  %6 = load <4 x i32>, <4 x i32>* %5, align 16
  %7 = bitcast %"struct.sw::Matrix"* %0 to <4 x i32>*
  store <4 x i32> %6, <4 x i32>* %7, align 4
  %8 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 1, i64 0
  %9 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 0
  %10 = bitcast float* %8 to <4 x i32>*
  %11 = load <4 x i32>, <4 x i32>* %10, align 16
  %12 = bitcast float* %9 to <4 x i32>*
  store <4 x i32> %11, <4 x i32>* %12, align 4
  %13 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 2, i64 0
  %14 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 0
  %15 = bitcast float* %13 to <4 x i32>*
  %16 = load <4 x i32>, <4 x i32>* %15, align 16
  %17 = bitcast float* %14 to <4 x i32>*
  store <4 x i32> %16, <4 x i32>* %17, align 4
  %18 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %3, i64 0, i32 0, i64 3, i64 0
  %19 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 0
  %20 = bitcast float* %18 to <4 x i32>*
  %21 = load <4 x i32>, <4 x i32>* %20, align 16
  %22 = bitcast float* %19 to <4 x i32>*
  store <4 x i32> %21, <4 x i32>* %22, align 4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #11
  ret %"struct.sw::Matrix"* %0
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN2swmlERKNS_6MatrixES2_(%"struct.sw::Matrix"* noalias nocapture sret, %"struct.sw::Matrix"* readonly dereferenceable(64), %"struct.sw::Matrix"* readonly dereferenceable(64)) local_unnamed_addr #4 {
  %4 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 0, i64 0
  %5 = load float, float* %4, align 4
  %6 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 0, i64 1
  %7 = load float, float* %6, align 4
  %8 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %2, i64 0, i32 0, i64 1, i64 0
  %9 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 0, i64 2
  %10 = load float, float* %9, align 4
  %11 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %2, i64 0, i32 0, i64 2, i64 0
  %12 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 0, i64 3
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %2, i64 0, i32 0, i64 3, i64 0
  %15 = bitcast %"struct.sw::Matrix"* %2 to <4 x float>*
  %16 = load <4 x float>, <4 x float>* %15, align 4
  %17 = insertelement <4 x float> undef, float %5, i32 0
  %18 = shufflevector <4 x float> %17, <4 x float> undef, <4 x i32> zeroinitializer
  %19 = fmul <4 x float> %18, %16
  %20 = bitcast float* %8 to <4 x float>*
  %21 = load <4 x float>, <4 x float>* %20, align 4
  %22 = insertelement <4 x float> undef, float %7, i32 0
  %23 = shufflevector <4 x float> %22, <4 x float> undef, <4 x i32> zeroinitializer
  %24 = fmul <4 x float> %23, %21
  %25 = fadd <4 x float> %19, %24
  %26 = bitcast float* %11 to <4 x float>*
  %27 = load <4 x float>, <4 x float>* %26, align 4
  %28 = insertelement <4 x float> undef, float %10, i32 0
  %29 = shufflevector <4 x float> %28, <4 x float> undef, <4 x i32> zeroinitializer
  %30 = fmul <4 x float> %29, %27
  %31 = fadd <4 x float> %25, %30
  %32 = bitcast float* %14 to <4 x float>*
  %33 = load <4 x float>, <4 x float>* %32, align 4
  %34 = insertelement <4 x float> undef, float %13, i32 0
  %35 = shufflevector <4 x float> %34, <4 x float> undef, <4 x i32> zeroinitializer
  %36 = fmul <4 x float> %35, %33
  %37 = fadd <4 x float> %31, %36
  %38 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 1, i64 0
  %39 = load float, float* %38, align 4
  %40 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 1, i64 1
  %41 = load float, float* %40, align 4
  %42 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 1, i64 2
  %43 = load float, float* %42, align 4
  %44 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 1, i64 3
  %45 = load float, float* %44, align 4
  %46 = insertelement <4 x float> undef, float %39, i32 0
  %47 = shufflevector <4 x float> %46, <4 x float> undef, <4 x i32> zeroinitializer
  %48 = fmul <4 x float> %16, %47
  %49 = insertelement <4 x float> undef, float %41, i32 0
  %50 = shufflevector <4 x float> %49, <4 x float> undef, <4 x i32> zeroinitializer
  %51 = fmul <4 x float> %21, %50
  %52 = fadd <4 x float> %48, %51
  %53 = insertelement <4 x float> undef, float %43, i32 0
  %54 = shufflevector <4 x float> %53, <4 x float> undef, <4 x i32> zeroinitializer
  %55 = fmul <4 x float> %27, %54
  %56 = fadd <4 x float> %52, %55
  %57 = insertelement <4 x float> undef, float %45, i32 0
  %58 = shufflevector <4 x float> %57, <4 x float> undef, <4 x i32> zeroinitializer
  %59 = fmul <4 x float> %33, %58
  %60 = fadd <4 x float> %56, %59
  %61 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 2, i64 0
  %62 = load float, float* %61, align 4
  %63 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 2, i64 1
  %64 = load float, float* %63, align 4
  %65 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 2, i64 2
  %66 = load float, float* %65, align 4
  %67 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 2, i64 3
  %68 = load float, float* %67, align 4
  %69 = insertelement <4 x float> undef, float %62, i32 0
  %70 = shufflevector <4 x float> %69, <4 x float> undef, <4 x i32> zeroinitializer
  %71 = fmul <4 x float> %16, %70
  %72 = insertelement <4 x float> undef, float %64, i32 0
  %73 = shufflevector <4 x float> %72, <4 x float> undef, <4 x i32> zeroinitializer
  %74 = fmul <4 x float> %21, %73
  %75 = fadd <4 x float> %71, %74
  %76 = insertelement <4 x float> undef, float %66, i32 0
  %77 = shufflevector <4 x float> %76, <4 x float> undef, <4 x i32> zeroinitializer
  %78 = fmul <4 x float> %27, %77
  %79 = fadd <4 x float> %75, %78
  %80 = insertelement <4 x float> undef, float %68, i32 0
  %81 = shufflevector <4 x float> %80, <4 x float> undef, <4 x i32> zeroinitializer
  %82 = fmul <4 x float> %33, %81
  %83 = fadd <4 x float> %79, %82
  %84 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 3, i64 0
  %85 = load float, float* %84, align 4
  %86 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 3, i64 1
  %87 = load float, float* %86, align 4
  %88 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 3, i64 2
  %89 = load float, float* %88, align 4
  %90 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 3, i64 3
  %91 = load float, float* %90, align 4
  %92 = insertelement <4 x float> undef, float %85, i32 0
  %93 = shufflevector <4 x float> %92, <4 x float> undef, <4 x i32> zeroinitializer
  %94 = fmul <4 x float> %16, %93
  %95 = insertelement <4 x float> undef, float %87, i32 0
  %96 = shufflevector <4 x float> %95, <4 x float> undef, <4 x i32> zeroinitializer
  %97 = fmul <4 x float> %21, %96
  %98 = fadd <4 x float> %94, %97
  %99 = insertelement <4 x float> undef, float %89, i32 0
  %100 = shufflevector <4 x float> %99, <4 x float> undef, <4 x i32> zeroinitializer
  %101 = fmul <4 x float> %27, %100
  %102 = fadd <4 x float> %98, %101
  %103 = insertelement <4 x float> undef, float %91, i32 0
  %104 = shufflevector <4 x float> %103, <4 x float> undef, <4 x i32> zeroinitializer
  %105 = fmul <4 x float> %33, %104
  %106 = fadd <4 x float> %102, %105
  %107 = bitcast %"struct.sw::Matrix"* %0 to <4 x float>*
  store <4 x float> %37, <4 x float>* %107, align 4
  %108 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 0
  %109 = bitcast float* %108 to <4 x float>*
  store <4 x float> %60, <4 x float>* %109, align 4
  %110 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 0
  %111 = bitcast float* %110 to <4 x float>*
  store <4 x float> %83, <4 x float>* %111, align 4
  %112 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 0
  %113 = bitcast float* %112 to <4 x float>*
  store <4 x float> %106, <4 x float>* %113, align 4
  ret void
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZN2sweqERKNS_6MatrixES2_(%"struct.sw::Matrix"* nocapture readonly dereferenceable(64), %"struct.sw::Matrix"* nocapture readonly dereferenceable(64)) local_unnamed_addr #5 {
  %3 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 0, i64 0
  %6 = load float, float* %5, align 4
  %7 = fcmp oeq float %4, %6
  br i1 %7, label %8, label %98

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 1
  %10 = load float, float* %9, align 4
  %11 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 0, i64 1
  %12 = load float, float* %11, align 4
  %13 = fcmp oeq float %10, %12
  br i1 %13, label %14, label %98

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 2
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 0, i64 2
  %18 = load float, float* %17, align 4
  %19 = fcmp oeq float %16, %18
  br i1 %19, label %20, label %98

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 3
  %22 = load float, float* %21, align 4
  %23 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 0, i64 3
  %24 = load float, float* %23, align 4
  %25 = fcmp oeq float %22, %24
  br i1 %25, label %26, label %98

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 0
  %28 = load float, float* %27, align 4
  %29 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 1, i64 0
  %30 = load float, float* %29, align 4
  %31 = fcmp oeq float %28, %30
  br i1 %31, label %32, label %98

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 1
  %34 = load float, float* %33, align 4
  %35 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 1, i64 1
  %36 = load float, float* %35, align 4
  %37 = fcmp oeq float %34, %36
  br i1 %37, label %38, label %98

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 2
  %40 = load float, float* %39, align 4
  %41 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 1, i64 2
  %42 = load float, float* %41, align 4
  %43 = fcmp oeq float %40, %42
  br i1 %43, label %44, label %98

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 3
  %46 = load float, float* %45, align 4
  %47 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 1, i64 3
  %48 = load float, float* %47, align 4
  %49 = fcmp oeq float %46, %48
  br i1 %49, label %50, label %98

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 0
  %52 = load float, float* %51, align 4
  %53 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 2, i64 0
  %54 = load float, float* %53, align 4
  %55 = fcmp oeq float %52, %54
  br i1 %55, label %56, label %98

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 1
  %58 = load float, float* %57, align 4
  %59 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 2, i64 1
  %60 = load float, float* %59, align 4
  %61 = fcmp oeq float %58, %60
  br i1 %61, label %62, label %98

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 2
  %64 = load float, float* %63, align 4
  %65 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 2, i64 2
  %66 = load float, float* %65, align 4
  %67 = fcmp oeq float %64, %66
  br i1 %67, label %68, label %98

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 3
  %70 = load float, float* %69, align 4
  %71 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 2, i64 3
  %72 = load float, float* %71, align 4
  %73 = fcmp oeq float %70, %72
  br i1 %73, label %74, label %98

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 0
  %76 = load float, float* %75, align 4
  %77 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 3, i64 0
  %78 = load float, float* %77, align 4
  %79 = fcmp oeq float %76, %78
  br i1 %79, label %80, label %98

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 1
  %82 = load float, float* %81, align 4
  %83 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 3, i64 1
  %84 = load float, float* %83, align 4
  %85 = fcmp oeq float %82, %84
  br i1 %85, label %86, label %98

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 2
  %88 = load float, float* %87, align 4
  %89 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 3, i64 2
  %90 = load float, float* %89, align 4
  %91 = fcmp oeq float %88, %90
  br i1 %91, label %92, label %98

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 3
  %94 = load float, float* %93, align 4
  %95 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 3, i64 3
  %96 = load float, float* %95, align 4
  %97 = fcmp oeq float %94, %96
  br i1 %97, label %99, label %98

98:                                               ; preds = %92, %86, %80, %74, %68, %62, %56, %50, %44, %38, %32, %26, %20, %14, %8, %2
  br label %99

99:                                               ; preds = %92, %98
  %100 = phi i1 [ false, %98 ], [ true, %92 ]
  ret i1 %100
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZN2swneERKNS_6MatrixES2_(%"struct.sw::Matrix"* nocapture readonly dereferenceable(64), %"struct.sw::Matrix"* nocapture readonly dereferenceable(64)) local_unnamed_addr #5 {
  %3 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 0, i64 0
  %6 = load float, float* %5, align 4
  %7 = fcmp une float %4, %6
  br i1 %7, label %99, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 1
  %10 = load float, float* %9, align 4
  %11 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 0, i64 1
  %12 = load float, float* %11, align 4
  %13 = fcmp une float %10, %12
  br i1 %13, label %99, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 2
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 0, i64 2
  %18 = load float, float* %17, align 4
  %19 = fcmp une float %16, %18
  br i1 %19, label %99, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 3
  %22 = load float, float* %21, align 4
  %23 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 0, i64 3
  %24 = load float, float* %23, align 4
  %25 = fcmp une float %22, %24
  br i1 %25, label %99, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 0
  %28 = load float, float* %27, align 4
  %29 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 1, i64 0
  %30 = load float, float* %29, align 4
  %31 = fcmp une float %28, %30
  br i1 %31, label %99, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 1
  %34 = load float, float* %33, align 4
  %35 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 1, i64 1
  %36 = load float, float* %35, align 4
  %37 = fcmp une float %34, %36
  br i1 %37, label %99, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 2
  %40 = load float, float* %39, align 4
  %41 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 1, i64 2
  %42 = load float, float* %41, align 4
  %43 = fcmp une float %40, %42
  br i1 %43, label %99, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 3
  %46 = load float, float* %45, align 4
  %47 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 1, i64 3
  %48 = load float, float* %47, align 4
  %49 = fcmp une float %46, %48
  br i1 %49, label %99, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 0
  %52 = load float, float* %51, align 4
  %53 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 2, i64 0
  %54 = load float, float* %53, align 4
  %55 = fcmp une float %52, %54
  br i1 %55, label %99, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 1
  %58 = load float, float* %57, align 4
  %59 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 2, i64 1
  %60 = load float, float* %59, align 4
  %61 = fcmp une float %58, %60
  br i1 %61, label %99, label %62

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 2
  %64 = load float, float* %63, align 4
  %65 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 2, i64 2
  %66 = load float, float* %65, align 4
  %67 = fcmp une float %64, %66
  br i1 %67, label %99, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 3
  %70 = load float, float* %69, align 4
  %71 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 2, i64 3
  %72 = load float, float* %71, align 4
  %73 = fcmp une float %70, %72
  br i1 %73, label %99, label %74

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 0
  %76 = load float, float* %75, align 4
  %77 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 3, i64 0
  %78 = load float, float* %77, align 4
  %79 = fcmp une float %76, %78
  br i1 %79, label %99, label %80

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 1
  %82 = load float, float* %81, align 4
  %83 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 3, i64 1
  %84 = load float, float* %83, align 4
  %85 = fcmp une float %82, %84
  br i1 %85, label %99, label %86

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 2
  %88 = load float, float* %87, align 4
  %89 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 3, i64 2
  %90 = load float, float* %89, align 4
  %91 = fcmp une float %88, %90
  br i1 %91, label %99, label %92

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 3
  %94 = load float, float* %93, align 4
  %95 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 3, i64 3
  %96 = load float, float* %95, align 4
  %97 = fcmp une float %94, %96
  br i1 %97, label %99, label %98

98:                                               ; preds = %92
  br label %99

99:                                               ; preds = %2, %8, %14, %20, %26, %32, %38, %44, %50, %56, %62, %68, %74, %80, %86, %92, %98
  %100 = phi i1 [ false, %98 ], [ true, %92 ], [ true, %86 ], [ true, %80 ], [ true, %74 ], [ true, %68 ], [ true, %62 ], [ true, %56 ], [ true, %50 ], [ true, %44 ], [ true, %38 ], [ true, %32 ], [ true, %26 ], [ true, %20 ], [ true, %14 ], [ true, %8 ], [ true, %2 ]
  ret i1 %100
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN2swplERKNS_6MatrixES2_(%"struct.sw::Matrix"* noalias nocapture sret, %"struct.sw::Matrix"* nocapture readonly dereferenceable(64), %"struct.sw::Matrix"* nocapture readonly dereferenceable(64)) local_unnamed_addr #4 {
  %4 = bitcast %"struct.sw::Matrix"* %1 to <4 x float>*
  %5 = load <4 x float>, <4 x float>* %4, align 4
  %6 = bitcast %"struct.sw::Matrix"* %2 to <4 x float>*
  %7 = load <4 x float>, <4 x float>* %6, align 4
  %8 = fadd <4 x float> %5, %7
  %9 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 1, i64 0
  %10 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %2, i64 0, i32 0, i64 1, i64 0
  %11 = bitcast float* %9 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 4
  %13 = bitcast float* %10 to <4 x float>*
  %14 = load <4 x float>, <4 x float>* %13, align 4
  %15 = fadd <4 x float> %12, %14
  %16 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 2, i64 0
  %17 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %2, i64 0, i32 0, i64 2, i64 0
  %18 = bitcast float* %16 to <4 x float>*
  %19 = load <4 x float>, <4 x float>* %18, align 4
  %20 = bitcast float* %17 to <4 x float>*
  %21 = load <4 x float>, <4 x float>* %20, align 4
  %22 = fadd <4 x float> %19, %21
  %23 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 3, i64 0
  %24 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %2, i64 0, i32 0, i64 3, i64 0
  %25 = bitcast float* %23 to <4 x float>*
  %26 = load <4 x float>, <4 x float>* %25, align 4
  %27 = bitcast float* %24 to <4 x float>*
  %28 = load <4 x float>, <4 x float>* %27, align 4
  %29 = fadd <4 x float> %26, %28
  %30 = bitcast %"struct.sw::Matrix"* %0 to <4 x float>*
  store <4 x float> %8, <4 x float>* %30, align 4
  %31 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 0
  %32 = bitcast float* %31 to <4 x float>*
  store <4 x float> %15, <4 x float>* %32, align 4
  %33 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 0
  %34 = bitcast float* %33 to <4 x float>*
  store <4 x float> %22, <4 x float>* %34, align 4
  %35 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 0
  %36 = bitcast float* %35 to <4 x float>*
  store <4 x float> %29, <4 x float>* %36, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN2swmiERKNS_6MatrixES2_(%"struct.sw::Matrix"* noalias nocapture sret, %"struct.sw::Matrix"* nocapture readonly dereferenceable(64), %"struct.sw::Matrix"* nocapture readonly dereferenceable(64)) local_unnamed_addr #4 {
  %4 = bitcast %"struct.sw::Matrix"* %1 to <4 x float>*
  %5 = load <4 x float>, <4 x float>* %4, align 4
  %6 = bitcast %"struct.sw::Matrix"* %2 to <4 x float>*
  %7 = load <4 x float>, <4 x float>* %6, align 4
  %8 = fsub <4 x float> %5, %7
  %9 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 1, i64 0
  %10 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %2, i64 0, i32 0, i64 1, i64 0
  %11 = bitcast float* %9 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 4
  %13 = bitcast float* %10 to <4 x float>*
  %14 = load <4 x float>, <4 x float>* %13, align 4
  %15 = fsub <4 x float> %12, %14
  %16 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 2, i64 0
  %17 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %2, i64 0, i32 0, i64 2, i64 0
  %18 = bitcast float* %16 to <4 x float>*
  %19 = load <4 x float>, <4 x float>* %18, align 4
  %20 = bitcast float* %17 to <4 x float>*
  %21 = load <4 x float>, <4 x float>* %20, align 4
  %22 = fsub <4 x float> %19, %21
  %23 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 3, i64 0
  %24 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %2, i64 0, i32 0, i64 3, i64 0
  %25 = bitcast float* %23 to <4 x float>*
  %26 = load <4 x float>, <4 x float>* %25, align 4
  %27 = bitcast float* %24 to <4 x float>*
  %28 = load <4 x float>, <4 x float>* %27, align 4
  %29 = fsub <4 x float> %26, %28
  %30 = bitcast %"struct.sw::Matrix"* %0 to <4 x float>*
  store <4 x float> %8, <4 x float>* %30, align 4
  %31 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 0
  %32 = bitcast float* %31 to <4 x float>*
  store <4 x float> %15, <4 x float>* %32, align 4
  %33 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 0
  %34 = bitcast float* %33 to <4 x float>*
  store <4 x float> %22, <4 x float>* %34, align 4
  %35 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 0
  %36 = bitcast float* %35 to <4 x float>*
  store <4 x float> %29, <4 x float>* %36, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN2swmlEfRKNS_6MatrixE(%"struct.sw::Matrix"* noalias nocapture sret, float, %"struct.sw::Matrix"* nocapture readonly dereferenceable(64)) local_unnamed_addr #4 {
  %4 = bitcast %"struct.sw::Matrix"* %2 to <4 x float>*
  %5 = load <4 x float>, <4 x float>* %4, align 4
  %6 = insertelement <4 x float> undef, float %1, i32 0
  %7 = shufflevector <4 x float> %6, <4 x float> undef, <4 x i32> zeroinitializer
  %8 = fmul <4 x float> %5, %7
  %9 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %2, i64 0, i32 0, i64 1, i64 0
  %10 = bitcast float* %9 to <4 x float>*
  %11 = load <4 x float>, <4 x float>* %10, align 4
  %12 = fmul <4 x float> %11, %7
  %13 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %2, i64 0, i32 0, i64 2, i64 0
  %14 = bitcast float* %13 to <4 x float>*
  %15 = load <4 x float>, <4 x float>* %14, align 4
  %16 = fmul <4 x float> %15, %7
  %17 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %2, i64 0, i32 0, i64 3, i64 0
  %18 = bitcast float* %17 to <4 x float>*
  %19 = load <4 x float>, <4 x float>* %18, align 4
  %20 = fmul <4 x float> %19, %7
  %21 = bitcast %"struct.sw::Matrix"* %0 to <4 x float>*
  store <4 x float> %8, <4 x float>* %21, align 4
  %22 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 0
  %23 = bitcast float* %22 to <4 x float>*
  store <4 x float> %12, <4 x float>* %23, align 4
  %24 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 0
  %25 = bitcast float* %24 to <4 x float>*
  store <4 x float> %16, <4 x float>* %25, align 4
  %26 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 0
  %27 = bitcast float* %26 to <4 x float>*
  store <4 x float> %20, <4 x float>* %27, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN2swmlERKNS_6MatrixEf(%"struct.sw::Matrix"* noalias nocapture sret, %"struct.sw::Matrix"* nocapture readonly dereferenceable(64), float) local_unnamed_addr #4 {
  %4 = bitcast %"struct.sw::Matrix"* %1 to <4 x float>*
  %5 = load <4 x float>, <4 x float>* %4, align 4
  %6 = insertelement <4 x float> undef, float %2, i32 0
  %7 = shufflevector <4 x float> %6, <4 x float> undef, <4 x i32> zeroinitializer
  %8 = fmul <4 x float> %5, %7
  %9 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 1, i64 0
  %10 = bitcast float* %9 to <4 x float>*
  %11 = load <4 x float>, <4 x float>* %10, align 4
  %12 = fmul <4 x float> %11, %7
  %13 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 2, i64 0
  %14 = bitcast float* %13 to <4 x float>*
  %15 = load <4 x float>, <4 x float>* %14, align 4
  %16 = fmul <4 x float> %15, %7
  %17 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %1, i64 0, i32 0, i64 3, i64 0
  %18 = bitcast float* %17 to <4 x float>*
  %19 = load <4 x float>, <4 x float>* %18, align 4
  %20 = fmul <4 x float> %19, %7
  %21 = bitcast %"struct.sw::Matrix"* %0 to <4 x float>*
  store <4 x float> %8, <4 x float>* %21, align 4
  %22 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 0
  %23 = bitcast float* %22 to <4 x float>*
  store <4 x float> %12, <4 x float>* %23, align 4
  %24 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 0
  %25 = bitcast float* %24 to <4 x float>*
  store <4 x float> %16, <4 x float>* %25, align 4
  %26 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 0
  %27 = bitcast float* %26 to <4 x float>*
  store <4 x float> %20, <4 x float>* %27, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN2swdvERKNS_6MatrixEf(%"struct.sw::Matrix"* noalias nocapture sret, %"struct.sw::Matrix"* nocapture readonly dereferenceable(64), float) local_unnamed_addr #4 {
  %4 = fdiv float 1.000000e+00, %2
  tail call void @_ZN2swmlERKNS_6MatrixEf(%"struct.sw::Matrix"* sret %0, %"struct.sw::Matrix"* dereferenceable(64) %1, float %4) #10
  ret void
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK2sw6MatrixmlERKNS_6float4E(%"struct.sw::Matrix"* nocapture readonly, %"struct.sw::float4"* nocapture readonly dereferenceable(16)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %"struct.sw::float4", %"struct.sw::float4"* %1, i64 0, i32 0
  %6 = load float, float* %5, align 16
  %7 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 1
  %8 = load float, float* %7, align 4
  %9 = getelementptr inbounds %"struct.sw::float4", %"struct.sw::float4"* %1, i64 0, i32 1
  %10 = load float, float* %9, align 4
  %11 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 2
  %12 = getelementptr inbounds %"struct.sw::float4", %"struct.sw::float4"* %1, i64 0, i32 2
  %13 = bitcast float* %12 to <2 x float>*
  %14 = load <2 x float>, <2 x float>* %13, align 8
  %15 = bitcast float* %11 to <2 x float>*
  %16 = load <2 x float>, <2 x float>* %15, align 4
  %17 = fmul <2 x float> %16, %14
  %18 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 0
  %19 = load float, float* %18, align 4
  %20 = insertelement <2 x float> undef, float %4, i32 0
  %21 = insertelement <2 x float> %20, float %6, i32 1
  %22 = insertelement <2 x float> undef, float %6, i32 0
  %23 = insertelement <2 x float> %22, float %19, i32 1
  %24 = fmul <2 x float> %21, %23
  %25 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 1
  %26 = load float, float* %25, align 4
  %27 = insertelement <2 x float> undef, float %8, i32 0
  %28 = insertelement <2 x float> %27, float %10, i32 1
  %29 = insertelement <2 x float> undef, float %10, i32 0
  %30 = insertelement <2 x float> %29, float %26, i32 1
  %31 = fmul <2 x float> %28, %30
  %32 = fadd <2 x float> %24, %31
  %33 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 2
  %34 = bitcast float* %33 to <2 x float>*
  %35 = load <2 x float>, <2 x float>* %34, align 4
  %36 = fmul <2 x float> %14, %35
  %37 = shufflevector <2 x float> %17, <2 x float> %36, <2 x i32> <i32 0, i32 2>
  %38 = fadd <2 x float> %32, %37
  %39 = shufflevector <2 x float> %17, <2 x float> %36, <2 x i32> <i32 1, i32 3>
  %40 = fadd <2 x float> %38, %39
  %41 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 0
  %42 = load float, float* %41, align 4
  %43 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 1
  %44 = load float, float* %43, align 4
  %45 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 2
  %46 = bitcast float* %45 to <2 x float>*
  %47 = load <2 x float>, <2 x float>* %46, align 4
  %48 = fmul <2 x float> %14, %47
  %49 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 0
  %50 = load float, float* %49, align 4
  %51 = shufflevector <2 x float> %22, <2 x float> undef, <2 x i32> zeroinitializer
  %52 = insertelement <2 x float> undef, float %42, i32 0
  %53 = insertelement <2 x float> %52, float %50, i32 1
  %54 = fmul <2 x float> %51, %53
  %55 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 1
  %56 = load float, float* %55, align 4
  %57 = shufflevector <2 x float> %29, <2 x float> undef, <2 x i32> zeroinitializer
  %58 = insertelement <2 x float> undef, float %44, i32 0
  %59 = insertelement <2 x float> %58, float %56, i32 1
  %60 = fmul <2 x float> %57, %59
  %61 = fadd <2 x float> %54, %60
  %62 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 2
  %63 = bitcast float* %62 to <2 x float>*
  %64 = load <2 x float>, <2 x float>* %63, align 4
  %65 = fmul <2 x float> %14, %64
  %66 = shufflevector <2 x float> %48, <2 x float> %65, <2 x i32> <i32 0, i32 2>
  %67 = fadd <2 x float> %61, %66
  %68 = shufflevector <2 x float> %48, <2 x float> %65, <2 x i32> <i32 1, i32 3>
  %69 = fadd <2 x float> %67, %68
  %70 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %40, 0
  %71 = insertvalue { <2 x float>, <2 x float> } %70, <2 x float> %69, 1
  ret { <2 x float>, <2 x float> } %71
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden float @_ZN2sw6Matrix3detERKS0_(%"struct.sw::Matrix"* readonly dereferenceable(64)) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 2
  %3 = load float, float* %2, align 4
  %4 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 3
  %5 = load float, float* %4, align 4
  %6 = fmul float %3, %5
  %7 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 2
  %8 = load float, float* %7, align 4
  %9 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 3
  %10 = load float, float* %9, align 4
  %11 = fmul float %8, %10
  %12 = fsub float %6, %11
  %13 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 2
  %14 = load float, float* %13, align 4
  %15 = fmul float %5, %14
  %16 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 3
  %17 = load float, float* %16, align 4
  %18 = fmul float %8, %17
  %19 = fsub float %15, %18
  %20 = fmul float %10, %14
  %21 = fmul float %3, %17
  %22 = fsub float %20, %21
  %23 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 2
  %24 = load float, float* %23, align 4
  %25 = fmul float %5, %24
  %26 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 3
  %27 = load float, float* %26, align 4
  %28 = fmul float %8, %27
  %29 = fsub float %25, %28
  %30 = fmul float %10, %24
  %31 = fmul float %3, %27
  %32 = fsub float %30, %31
  %33 = fmul float %17, %24
  %34 = fmul float %14, %27
  %35 = fsub float %33, %34
  %36 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 0
  %37 = bitcast float* %36 to <2 x float>*
  %38 = load <2 x float>, <2 x float>* %37, align 4
  %39 = extractelement <2 x float> %38, i32 1
  %40 = fmul float %12, %39
  %41 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 0
  %42 = bitcast float* %41 to <2 x float>*
  %43 = load <2 x float>, <2 x float>* %42, align 4
  %44 = extractelement <2 x float> %43, i32 1
  %45 = fmul float %19, %44
  %46 = fsub float %40, %45
  %47 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 1
  %48 = load float, float* %47, align 4
  %49 = fmul float %22, %48
  %50 = fadd float %46, %49
  %51 = bitcast %"struct.sw::Matrix"* %0 to <2 x float>*
  %52 = load <2 x float>, <2 x float>* %51, align 4
  %53 = extractelement <2 x float> %52, i32 1
  %54 = fmul float %12, %53
  %55 = fmul float %29, %44
  %56 = fsub float %54, %55
  %57 = fmul float %32, %48
  %58 = fadd float %57, %56
  %59 = fmul float %19, %53
  %60 = fmul float %39, %29
  %61 = fsub float %59, %60
  %62 = fmul float %35, %48
  %63 = fadd float %62, %61
  %64 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 0
  %65 = load float, float* %64, align 4
  %66 = insertelement <2 x float> undef, float %50, i32 0
  %67 = insertelement <2 x float> %66, float %22, i32 1
  %68 = fmul <2 x float> %52, %67
  %69 = insertelement <2 x float> undef, float %58, i32 0
  %70 = insertelement <2 x float> %69, float %32, i32 1
  %71 = fmul <2 x float> %38, %70
  %72 = fsub <2 x float> %68, %71
  %73 = insertelement <2 x float> undef, float %63, i32 0
  %74 = insertelement <2 x float> %73, float %35, i32 1
  %75 = fmul <2 x float> %43, %74
  %76 = fadd <2 x float> %75, %72
  %77 = extractelement <2 x float> %76, i32 1
  %78 = fmul float %65, %77
  %79 = extractelement <2 x float> %76, i32 0
  %80 = fsub float %79, %78
  ret float %80
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden float @_ZN2sw6Matrix3detEf(float returned) local_unnamed_addr #1 align 2 {
  ret float %0
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden float @_ZN2sw6Matrix3detEffff(float, float, float, float) local_unnamed_addr #1 align 2 {
  %5 = fmul float %0, %3
  %6 = fmul float %1, %2
  %7 = fsub float %5, %6
  ret float %7
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden float @_ZN2sw6Matrix3detEfffffffff(float, float, float, float, float, float, float, float, float) local_unnamed_addr #1 align 2 {
  %10 = fmul float %1, %8
  %11 = fmul float %2, %7
  %12 = fsub float %10, %11
  %13 = fmul float %12, %3
  %14 = insertelement <2 x float> undef, float %1, i32 0
  %15 = insertelement <2 x float> %14, float %4, i32 1
  %16 = insertelement <2 x float> undef, float %5, i32 0
  %17 = insertelement <2 x float> %16, float %8, i32 1
  %18 = fmul <2 x float> %15, %17
  %19 = insertelement <2 x float> undef, float %2, i32 0
  %20 = insertelement <2 x float> %19, float %5, i32 1
  %21 = insertelement <2 x float> undef, float %4, i32 0
  %22 = insertelement <2 x float> %21, float %7, i32 1
  %23 = fmul <2 x float> %20, %22
  %24 = fsub <2 x float> %18, %23
  %25 = insertelement <2 x float> undef, float %6, i32 0
  %26 = insertelement <2 x float> %25, float %0, i32 1
  %27 = fmul <2 x float> %24, %26
  %28 = extractelement <2 x float> %27, i32 1
  %29 = fsub float %28, %13
  %30 = extractelement <2 x float> %27, i32 0
  %31 = fadd float %30, %29
  ret float %31
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden float @_ZN2sw6Matrix3detEffffffffffffffff(float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float) local_unnamed_addr #1 align 2 {
  %17 = fmul float %10, %15
  %18 = fmul float %11, %14
  %19 = fsub float %17, %18
  %20 = fmul float %6, %15
  %21 = fmul float %7, %14
  %22 = fsub float %20, %21
  %23 = fmul float %6, %11
  %24 = fmul float %7, %10
  %25 = fsub float %23, %24
  %26 = fmul float %2, %15
  %27 = fmul float %3, %14
  %28 = fsub float %26, %27
  %29 = fmul float %2, %11
  %30 = fmul float %3, %10
  %31 = fsub float %29, %30
  %32 = fmul float %2, %7
  %33 = fmul float %3, %6
  %34 = fsub float %32, %33
  %35 = fmul float %19, %5
  %36 = fmul float %22, %9
  %37 = fsub float %35, %36
  %38 = fmul float %25, %13
  %39 = fadd float %38, %37
  %40 = fmul float %19, %1
  %41 = fmul float %28, %9
  %42 = fsub float %40, %41
  %43 = fmul float %31, %13
  %44 = fadd float %43, %42
  %45 = fmul float %22, %1
  %46 = fmul float %28, %5
  %47 = fsub float %45, %46
  %48 = fmul float %34, %13
  %49 = fadd float %48, %47
  %50 = insertelement <2 x float> undef, float %39, i32 0
  %51 = insertelement <2 x float> %50, float %25, i32 1
  %52 = insertelement <2 x float> undef, float %0, i32 0
  %53 = insertelement <2 x float> %52, float %1, i32 1
  %54 = fmul <2 x float> %51, %53
  %55 = insertelement <2 x float> undef, float %44, i32 0
  %56 = insertelement <2 x float> %55, float %31, i32 1
  %57 = insertelement <2 x float> undef, float %4, i32 0
  %58 = insertelement <2 x float> %57, float %5, i32 1
  %59 = fmul <2 x float> %56, %58
  %60 = fsub <2 x float> %54, %59
  %61 = insertelement <2 x float> undef, float %49, i32 0
  %62 = insertelement <2 x float> %61, float %34, i32 1
  %63 = insertelement <2 x float> undef, float %8, i32 0
  %64 = insertelement <2 x float> %63, float %9, i32 1
  %65 = fmul <2 x float> %62, %64
  %66 = fadd <2 x float> %65, %60
  %67 = extractelement <2 x float> %66, i32 1
  %68 = fmul float %67, %12
  %69 = extractelement <2 x float> %66, i32 0
  %70 = fsub float %69, %68
  ret float %70
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden float @_ZN2sw6Matrix3detERKNS_6VectorES3_S3_(%"struct.sw::Vector"* dereferenceable(12), %"struct.sw::Vector"* dereferenceable(12), %"struct.sw::Vector"* dereferenceable(12)) local_unnamed_addr #2 align 2 {
  %4 = alloca %"struct.sw::Vector", align 4
  %5 = bitcast %"struct.sw::Vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %5) #11
  call void @_ZN2swrmERKNS_6VectorES2_(%"struct.sw::Vector"* nonnull sret %4, %"struct.sw::Vector"* dereferenceable(12) %1, %"struct.sw::Vector"* dereferenceable(12) %2) #9
  %6 = call float @_ZN2swmlERKNS_6VectorES2_(%"struct.sw::Vector"* dereferenceable(12) %0, %"struct.sw::Vector"* nonnull dereferenceable(12) %4) #9
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %5) #11
  ret float %6
}

; Function Attrs: optsize
declare float @_ZN2swmlERKNS_6VectorES2_(%"struct.sw::Vector"* dereferenceable(12), %"struct.sw::Vector"* dereferenceable(12)) local_unnamed_addr #6

; Function Attrs: optsize
declare void @_ZN2swrmERKNS_6VectorES2_(%"struct.sw::Vector"* sret, %"struct.sw::Vector"* dereferenceable(12), %"struct.sw::Vector"* dereferenceable(12)) local_unnamed_addr #6

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden float @_ZN2sw6Matrix4det3ERKS0_(%"struct.sw::Matrix"* nocapture readonly dereferenceable(64)) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 0
  %3 = load float, float* %2, align 4
  %4 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 1
  %5 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 2
  %6 = load float, float* %5, align 4
  %7 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 1
  %8 = load float, float* %7, align 4
  %9 = bitcast float* %4 to <2 x float>*
  %10 = load <2 x float>, <2 x float>* %9, align 4
  %11 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 0
  %12 = load float, float* %11, align 4
  %13 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 1
  %14 = load float, float* %13, align 4
  %15 = fmul float %6, %14
  %16 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 2
  %17 = load float, float* %16, align 4
  %18 = fmul float %8, %17
  %19 = fsub float %15, %18
  %20 = fmul float %12, %19
  %21 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 0
  %22 = load float, float* %21, align 4
  %23 = insertelement <2 x float> undef, float %6, i32 0
  %24 = insertelement <2 x float> %23, float %14, i32 1
  %25 = fmul <2 x float> %10, %24
  %26 = insertelement <2 x float> undef, float %8, i32 0
  %27 = shufflevector <2 x float> %26, <2 x float> %10, <2 x i32> <i32 0, i32 2>
  %28 = extractelement <2 x float> %10, i32 1
  %29 = insertelement <2 x float> undef, float %28, i32 0
  %30 = insertelement <2 x float> %29, float %17, i32 1
  %31 = fmul <2 x float> %27, %30
  %32 = fsub <2 x float> %25, %31
  %33 = insertelement <2 x float> undef, float %3, i32 0
  %34 = insertelement <2 x float> %33, float %22, i32 1
  %35 = fmul <2 x float> %34, %32
  %36 = extractelement <2 x float> %35, i32 0
  %37 = fsub float %36, %20
  %38 = extractelement <2 x float> %35, i32 1
  %39 = fadd float %38, %37
  ret float %39
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden float @_ZN2sw6Matrix2trERKS0_(%"struct.sw::Matrix"* nocapture readonly dereferenceable(64)) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 0
  %3 = load float, float* %2, align 4
  %4 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 1
  %5 = load float, float* %4, align 4
  %6 = fadd float %3, %5
  %7 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 2
  %8 = load float, float* %7, align 4
  %9 = fadd float %6, %8
  %10 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 3
  %11 = load float, float* %10, align 4
  %12 = fadd float %9, %11
  ret float %12
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden dereferenceable(64) %"struct.sw::Matrix"* @_ZN2sw6Matrix13orthogonaliseEv(%"struct.sw::Matrix"* returned) local_unnamed_addr #2 align 2 {
  %2 = alloca %"struct.sw::Vector", align 4
  %3 = alloca %"struct.sw::Vector", align 4
  %4 = alloca %"struct.sw::Vector", align 4
  %5 = alloca %"struct.sw::Vector", align 4
  %6 = alloca %"struct.sw::Vector", align 4
  %7 = alloca %"struct.sw::Vector", align 4
  %8 = alloca %"struct.sw::Vector", align 4
  %9 = alloca %"struct.sw::Vector", align 4
  %10 = alloca %"struct.sw::Vector", align 4
  %11 = bitcast %"struct.sw::Vector"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"struct.sw::Vector", %"struct.sw::Vector"* %2, i64 0, i32 0, i32 0, i64 1
  %13 = getelementptr inbounds %"struct.sw::Vector", %"struct.sw::Vector"* %2, i64 0, i32 0, i32 0, i64 2
  %14 = bitcast %"struct.sw::Matrix"* %0 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 0
  %17 = bitcast float* %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 0
  %20 = bitcast float* %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = bitcast %"struct.sw::Vector"* %2 to i32*
  store i32 %15, i32* %22, align 4
  %23 = bitcast float* %12 to i32*
  store i32 %18, i32* %23, align 4
  %24 = bitcast float* %13 to i32*
  store i32 %21, i32* %24, align 4
  %25 = bitcast %"struct.sw::Vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %25) #11
  %26 = getelementptr inbounds %"struct.sw::Vector", %"struct.sw::Vector"* %3, i64 0, i32 0, i32 0, i64 1
  %27 = getelementptr inbounds %"struct.sw::Vector", %"struct.sw::Vector"* %3, i64 0, i32 0, i32 0, i64 2
  %28 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 1
  %29 = bitcast float* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 1
  %32 = bitcast float* %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 1
  %35 = bitcast float* %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = bitcast %"struct.sw::Vector"* %3 to i32*
  store i32 %30, i32* %37, align 4
  %38 = bitcast float* %26 to i32*
  store i32 %33, i32* %38, align 4
  %39 = bitcast float* %27 to i32*
  store i32 %36, i32* %39, align 4
  %40 = bitcast %"struct.sw::Vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %40) #11
  %41 = getelementptr inbounds %"struct.sw::Vector", %"struct.sw::Vector"* %4, i64 0, i32 0, i32 0, i64 1
  %42 = getelementptr inbounds %"struct.sw::Vector", %"struct.sw::Vector"* %4, i64 0, i32 0, i32 0, i64 2
  %43 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 2
  %44 = bitcast float* %43 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 2
  %47 = bitcast float* %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 2
  %50 = bitcast float* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = bitcast %"struct.sw::Vector"* %4 to i32*
  store i32 %45, i32* %52, align 4
  %53 = bitcast float* %41 to i32*
  store i32 %48, i32* %53, align 4
  %54 = bitcast float* %42 to i32*
  store i32 %51, i32* %54, align 4
  %55 = bitcast %"struct.sw::Vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %55) #11
  %56 = bitcast %"struct.sw::Vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %56) #11
  %57 = call float @_ZN2swmlERKNS_6VectorES2_(%"struct.sw::Vector"* nonnull dereferenceable(12) %2, %"struct.sw::Vector"* nonnull dereferenceable(12) %3) #9
  call void @_ZN2swmlERKNS_6VectorEf(%"struct.sw::Vector"* nonnull sret %6, %"struct.sw::Vector"* nonnull dereferenceable(12) %2, float %57) #9
  %58 = call float @_ZN2swmlERKNS_6VectorES2_(%"struct.sw::Vector"* nonnull dereferenceable(12) %2, %"struct.sw::Vector"* nonnull dereferenceable(12) %2) #9
  call void @_ZN2swdvERKNS_6VectorEf(%"struct.sw::Vector"* nonnull sret %5, %"struct.sw::Vector"* nonnull dereferenceable(12) %6, float %58) #9
  %59 = call dereferenceable(12) %"struct.sw::Vector"* @_ZN2sw6VectormIERKS0_(%"struct.sw::Vector"* nonnull %3, %"struct.sw::Vector"* nonnull dereferenceable(12) %5) #9
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %56) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %55) #11
  %60 = bitcast %"struct.sw::Vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %60) #11
  %61 = bitcast %"struct.sw::Vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %61) #11
  %62 = call float @_ZN2swmlERKNS_6VectorES2_(%"struct.sw::Vector"* nonnull dereferenceable(12) %2, %"struct.sw::Vector"* nonnull dereferenceable(12) %4) #9
  call void @_ZN2swmlERKNS_6VectorEf(%"struct.sw::Vector"* nonnull sret %8, %"struct.sw::Vector"* nonnull dereferenceable(12) %2, float %62) #9
  %63 = call float @_ZN2swmlERKNS_6VectorES2_(%"struct.sw::Vector"* nonnull dereferenceable(12) %2, %"struct.sw::Vector"* nonnull dereferenceable(12) %2) #9
  call void @_ZN2swdvERKNS_6VectorEf(%"struct.sw::Vector"* nonnull sret %7, %"struct.sw::Vector"* nonnull dereferenceable(12) %8, float %63) #9
  %64 = call dereferenceable(12) %"struct.sw::Vector"* @_ZN2sw6VectormIERKS0_(%"struct.sw::Vector"* nonnull %4, %"struct.sw::Vector"* nonnull dereferenceable(12) %7) #9
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %61) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %60) #11
  %65 = bitcast %"struct.sw::Vector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %65) #11
  %66 = bitcast %"struct.sw::Vector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %66) #11
  %67 = call float @_ZN2swmlERKNS_6VectorES2_(%"struct.sw::Vector"* nonnull dereferenceable(12) %3, %"struct.sw::Vector"* nonnull dereferenceable(12) %4) #9
  call void @_ZN2swmlERKNS_6VectorEf(%"struct.sw::Vector"* nonnull sret %10, %"struct.sw::Vector"* nonnull dereferenceable(12) %3, float %67) #9
  %68 = call float @_ZN2swmlERKNS_6VectorES2_(%"struct.sw::Vector"* nonnull dereferenceable(12) %3, %"struct.sw::Vector"* nonnull dereferenceable(12) %3) #9
  call void @_ZN2swdvERKNS_6VectorEf(%"struct.sw::Vector"* nonnull sret %9, %"struct.sw::Vector"* nonnull dereferenceable(12) %10, float %68) #9
  %69 = call dereferenceable(12) %"struct.sw::Vector"* @_ZN2sw6VectormIERKS0_(%"struct.sw::Vector"* nonnull %4, %"struct.sw::Vector"* nonnull dereferenceable(12) %9) #9
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %66) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %65) #11
  %70 = call float @_ZN2sw6Vector1NERKS0_(%"struct.sw::Vector"* nonnull dereferenceable(12) %2) #9
  %71 = call dereferenceable(12) %"struct.sw::Vector"* @_ZN2sw6VectordVEf(%"struct.sw::Vector"* nonnull %2, float %70) #9
  %72 = call float @_ZN2sw6Vector1NERKS0_(%"struct.sw::Vector"* nonnull dereferenceable(12) %3) #9
  %73 = call dereferenceable(12) %"struct.sw::Vector"* @_ZN2sw6VectordVEf(%"struct.sw::Vector"* nonnull %3, float %72) #9
  %74 = call float @_ZN2sw6Vector1NERKS0_(%"struct.sw::Vector"* nonnull dereferenceable(12) %4) #9
  %75 = call dereferenceable(12) %"struct.sw::Vector"* @_ZN2sw6VectordVEf(%"struct.sw::Vector"* nonnull %4, float %74) #9
  %76 = load i32, i32* %22, align 4
  store i32 %76, i32* %14, align 4
  %77 = load i32, i32* %37, align 4
  store i32 %77, i32* %29, align 4
  %78 = load i32, i32* %52, align 4
  store i32 %78, i32* %44, align 4
  %79 = load i32, i32* %23, align 4
  store i32 %79, i32* %17, align 4
  %80 = load i32, i32* %38, align 4
  store i32 %80, i32* %32, align 4
  %81 = load i32, i32* %53, align 4
  store i32 %81, i32* %47, align 4
  %82 = load i32, i32* %24, align 4
  store i32 %82, i32* %20, align 4
  %83 = load i32, i32* %39, align 4
  store i32 %83, i32* %35, align 4
  %84 = load i32, i32* %54, align 4
  store i32 %84, i32* %50, align 4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %40) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #11
  ret %"struct.sw::Matrix"* %0
}

; Function Attrs: optsize
declare void @_ZN2swdvERKNS_6VectorEf(%"struct.sw::Vector"* sret, %"struct.sw::Vector"* dereferenceable(12), float) local_unnamed_addr #6

; Function Attrs: optsize
declare void @_ZN2swmlERKNS_6VectorEf(%"struct.sw::Vector"* sret, %"struct.sw::Vector"* dereferenceable(12), float) local_unnamed_addr #6

; Function Attrs: optsize
declare dereferenceable(12) %"struct.sw::Vector"* @_ZN2sw6VectormIERKS0_(%"struct.sw::Vector"*, %"struct.sw::Vector"* dereferenceable(12)) local_unnamed_addr #6

; Function Attrs: optsize
declare float @_ZN2sw6Vector1NERKS0_(%"struct.sw::Vector"* dereferenceable(12)) local_unnamed_addr #6

; Function Attrs: optsize
declare dereferenceable(12) %"struct.sw::Vector"* @_ZN2sw6VectordVEf(%"struct.sw::Vector"*, float) local_unnamed_addr #6

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw6Matrix11eulerRotateERKNS_6VectorE(%"struct.sw::Matrix"* noalias nocapture sret, %"struct.sw::Vector"* nocapture readonly dereferenceable(12)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"struct.sw::Vector", %"struct.sw::Vector"* %1, i64 0, i32 0, i32 0, i64 2
  %4 = load float, float* %3, align 4
  %5 = tail call float @cosf(float %4) #9
  %6 = load float, float* %3, align 4
  %7 = tail call float @sinf(float %6) #9
  %8 = getelementptr inbounds %"struct.sw::Vector", %"struct.sw::Vector"* %1, i64 0, i32 0, i32 0, i64 0
  %9 = load float, float* %8, align 4
  %10 = tail call float @cosf(float %9) #9
  %11 = load float, float* %8, align 4
  %12 = tail call float @sinf(float %11) #9
  %13 = getelementptr inbounds %"struct.sw::Vector", %"struct.sw::Vector"* %1, i64 0, i32 0, i32 0, i64 1
  %14 = load float, float* %13, align 4
  %15 = tail call float @cosf(float %14) #9
  %16 = load float, float* %13, align 4
  %17 = tail call float @sinf(float %16) #9
  %18 = fmul float %12, %17
  %19 = fmul float %12, %15
  %20 = fmul float %5, %15
  %21 = fmul float %7, %18
  %22 = fsub float %20, %21
  %23 = fmul float %7, %15
  %24 = fsub float -0.000000e+00, %23
  %25 = fmul float %5, %18
  %26 = fsub float %24, %25
  %27 = fsub float -0.000000e+00, %17
  %28 = fmul float %10, %27
  %29 = fmul float %7, %10
  %30 = fmul float %5, %10
  %31 = fsub float -0.000000e+00, %12
  %32 = fmul float %5, %17
  %33 = fmul float %7, %19
  %34 = fadd float %33, %32
  %35 = fmul float %7, %27
  %36 = fmul float %5, %19
  %37 = fadd float %36, %35
  %38 = fmul float %10, %15
  %39 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 0
  store float %22, float* %39, align 4
  %40 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 1
  store float %26, float* %40, align 4
  %41 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 2
  store float %28, float* %41, align 4
  %42 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 3
  store float 0.000000e+00, float* %42, align 4
  %43 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 0
  store float %29, float* %43, align 4
  %44 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 1
  store float %30, float* %44, align 4
  %45 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 2
  store float %31, float* %45, align 4
  %46 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 3
  store float 0.000000e+00, float* %46, align 4
  %47 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 0
  store float %34, float* %47, align 4
  %48 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 1
  store float %37, float* %48, align 4
  %49 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 2
  store float %38, float* %49, align 4
  %50 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 3
  %51 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 3
  %52 = bitcast float* %50 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %52, i8 0, i64 16, i1 false) #11
  store float 1.000000e+00, float* %51, align 4
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw6Matrix11eulerRotateEfff(%"struct.sw::Matrix"* noalias nocapture sret, float, float, float) local_unnamed_addr #2 align 2 {
  %5 = alloca %"struct.sw::Vector", align 4
  %6 = bitcast %"struct.sw::Vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"struct.sw::Vector", %"struct.sw::Vector"* %5, i64 0, i32 0, i32 0, i64 0
  store float %1, float* %7, align 4
  %8 = getelementptr inbounds %"struct.sw::Vector", %"struct.sw::Vector"* %5, i64 0, i32 0, i32 0, i64 1
  store float %2, float* %8, align 4
  %9 = getelementptr inbounds %"struct.sw::Vector", %"struct.sw::Vector"* %5, i64 0, i32 0, i32 0, i64 2
  store float %3, float* %9, align 4
  call void @_ZN2sw6Matrix11eulerRotateERKNS_6VectorE(%"struct.sw::Matrix"* sret %0, %"struct.sw::Vector"* nonnull dereferenceable(12) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #11
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN2sw6Matrix9translateERKNS_6VectorE(%"struct.sw::Matrix"* noalias nocapture sret, %"struct.sw::Vector"* nocapture readonly dereferenceable(12)) local_unnamed_addr #4 align 2 {
  %3 = bitcast %"struct.sw::Vector"* %1 to i32*
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.sw::Vector", %"struct.sw::Vector"* %1, i64 0, i32 0, i32 0, i64 1
  %6 = bitcast float* %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"struct.sw::Vector", %"struct.sw::Vector"* %1, i64 0, i32 0, i32 0, i64 2
  %9 = bitcast float* %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 0
  store float 1.000000e+00, float* %11, align 4
  %12 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 1
  store float 0.000000e+00, float* %12, align 4
  %13 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 2
  store float 0.000000e+00, float* %13, align 4
  %14 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 3
  %15 = bitcast float* %14 to i32*
  store i32 %4, i32* %15, align 4
  %16 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 0
  store float 0.000000e+00, float* %16, align 4
  %17 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 1
  store float 1.000000e+00, float* %17, align 4
  %18 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 2
  store float 0.000000e+00, float* %18, align 4
  %19 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 3
  %20 = bitcast float* %19 to i32*
  store i32 %7, i32* %20, align 4
  %21 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 0
  store float 0.000000e+00, float* %21, align 4
  %22 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 1
  store float 0.000000e+00, float* %22, align 4
  %23 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 2
  store float 1.000000e+00, float* %23, align 4
  %24 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 3
  %25 = bitcast float* %24 to i32*
  store i32 %10, i32* %25, align 4
  %26 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 0
  %27 = bitcast float* %26 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %27, align 4
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable writeonly
define hidden void @_ZN2sw6Matrix9translateEfff(%"struct.sw::Matrix"* noalias nocapture sret, float, float, float) local_unnamed_addr #7 align 2 {
  %5 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 0
  store float 1.000000e+00, float* %5, align 4, !alias.scope !2
  %6 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 1
  store float 0.000000e+00, float* %6, align 4, !alias.scope !2
  %7 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 2
  store float 0.000000e+00, float* %7, align 4, !alias.scope !2
  %8 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 3
  store float %1, float* %8, align 4, !alias.scope !2
  %9 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 0
  store float 0.000000e+00, float* %9, align 4, !alias.scope !2
  %10 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 1
  store float 1.000000e+00, float* %10, align 4, !alias.scope !2
  %11 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 2
  store float 0.000000e+00, float* %11, align 4, !alias.scope !2
  %12 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 3
  store float %2, float* %12, align 4, !alias.scope !2
  %13 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 0
  store float 0.000000e+00, float* %13, align 4, !alias.scope !2
  %14 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 1
  store float 0.000000e+00, float* %14, align 4, !alias.scope !2
  %15 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 2
  store float 1.000000e+00, float* %15, align 4, !alias.scope !2
  %16 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 3
  store float %3, float* %16, align 4, !alias.scope !2
  %17 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 0
  %18 = bitcast float* %17 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %18, align 4, !alias.scope !2
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw6Matrix5scaleERKNS_6VectorE(%"struct.sw::Matrix"* noalias nocapture sret, %"struct.sw::Vector"* nocapture readonly dereferenceable(12)) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"struct.sw::Vector"* %1 to i32*
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.sw::Vector", %"struct.sw::Vector"* %1, i64 0, i32 0, i32 0, i64 1
  %6 = bitcast float* %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"struct.sw::Vector", %"struct.sw::Vector"* %1, i64 0, i32 0, i32 0, i64 2
  %9 = bitcast float* %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %"struct.sw::Matrix"* %0 to i32*
  store i32 %4, i32* %11, align 4
  %12 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 1
  %13 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 1
  %14 = bitcast float* %13 to i32*
  %15 = bitcast float* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %15, i8 0, i64 16, i1 false)
  store i32 %7, i32* %14, align 4
  %16 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 2
  %17 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 2
  %18 = bitcast float* %17 to i32*
  %19 = bitcast float* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 0, i64 16, i1 false)
  store i32 %10, i32* %18, align 4
  %20 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 3
  %21 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 3
  %22 = bitcast float* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %22, i8 0, i64 16, i1 false) #11
  store float 1.000000e+00, float* %21, align 4
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw6Matrix5scaleEfff(%"struct.sw::Matrix"* noalias nocapture sret, float, float, float) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 0
  store float %1, float* %5, align 4, !alias.scope !5
  %6 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 1
  %7 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 1
  %8 = bitcast float* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %8, i8 0, i64 16, i1 false) #11, !alias.scope !5
  store float %2, float* %7, align 4, !alias.scope !5
  %9 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 2
  %10 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 2
  %11 = bitcast float* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 16, i1 false) #11, !alias.scope !5
  store float %3, float* %10, align 4, !alias.scope !5
  %12 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 3
  %13 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 3
  %14 = bitcast float* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %14, i8 0, i64 16, i1 false) #11, !alias.scope !5
  store float 1.000000e+00, float* %13, align 4, !alias.scope !5
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw6Matrix6lookAtERKNS_6VectorE(%"struct.sw::Matrix"* noalias nocapture sret, %"struct.sw::Vector"* nocapture readonly dereferenceable(12)) local_unnamed_addr #2 align 2 {
  %3 = alloca %"struct.sw::Vector", align 4
  %4 = alloca %"struct.sw::Vector", align 4
  %5 = alloca %"struct.sw::Vector", align 4
  %6 = alloca %"struct.sw::Vector", align 4
  %7 = bitcast %"struct.sw::Vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"struct.sw::Vector", %"struct.sw::Vector"* %3, i64 0, i32 0, i32 0, i64 1
  %9 = getelementptr inbounds %"struct.sw::Vector", %"struct.sw::Vector"* %3, i64 0, i32 0, i32 0, i64 2
  %10 = bitcast %"struct.sw::Vector"* %1 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = bitcast %"struct.sw::Vector"* %3 to i32*
  store i32 %11, i32* %12, align 4
  %13 = getelementptr inbounds %"struct.sw::Vector", %"struct.sw::Vector"* %1, i64 0, i32 0, i32 0, i64 1
  %14 = bitcast float* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = bitcast float* %8 to i32*
  store i32 %15, i32* %16, align 4
  %17 = getelementptr inbounds %"struct.sw::Vector", %"struct.sw::Vector"* %1, i64 0, i32 0, i32 0, i64 2
  %18 = bitcast float* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = bitcast float* %9 to i32*
  store i32 %19, i32* %20, align 4
  %21 = call float @_ZN2sw6Vector1NERKS0_(%"struct.sw::Vector"* nonnull dereferenceable(12) %3) #9
  %22 = call dereferenceable(12) %"struct.sw::Vector"* @_ZN2sw6VectordVEf(%"struct.sw::Vector"* nonnull %3, float %21) #9
  %23 = bitcast %"struct.sw::Vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %23) #11
  %24 = getelementptr inbounds %"struct.sw::Vector", %"struct.sw::Vector"* %4, i64 0, i32 0, i32 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %24, align 4
  %25 = getelementptr inbounds %"struct.sw::Vector", %"struct.sw::Vector"* %4, i64 0, i32 0, i32 0, i64 1
  store float 0xFFFFFFFFE0000000, float* %25, align 4
  %26 = getelementptr inbounds %"struct.sw::Vector", %"struct.sw::Vector"* %4, i64 0, i32 0, i32 0, i64 2
  store float 0xFFFFFFFFE0000000, float* %26, align 4
  %27 = bitcast %"struct.sw::Vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %27) #11
  %28 = getelementptr inbounds %"struct.sw::Vector", %"struct.sw::Vector"* %5, i64 0, i32 0, i32 0, i64 0
  store float 0.000000e+00, float* %28, align 4
  %29 = getelementptr inbounds %"struct.sw::Vector", %"struct.sw::Vector"* %5, i64 0, i32 0, i32 0, i64 1
  store float 0.000000e+00, float* %29, align 4
  %30 = getelementptr inbounds %"struct.sw::Vector", %"struct.sw::Vector"* %5, i64 0, i32 0, i32 0, i64 2
  store float 1.000000e+00, float* %30, align 4
  call void @_ZN2swrmERKNS_6VectorES2_(%"struct.sw::Vector"* nonnull sret %4, %"struct.sw::Vector"* nonnull dereferenceable(12) %3, %"struct.sw::Vector"* nonnull dereferenceable(12) %5) #9
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %27) #11
  %31 = call float @_ZN2sw6Vector1NERKS0_(%"struct.sw::Vector"* nonnull dereferenceable(12) %4) #9
  %32 = call dereferenceable(12) %"struct.sw::Vector"* @_ZN2sw6VectordVEf(%"struct.sw::Vector"* nonnull %4, float %31) #9
  %33 = bitcast %"struct.sw::Vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %33) #11
  %34 = getelementptr inbounds %"struct.sw::Vector", %"struct.sw::Vector"* %6, i64 0, i32 0, i32 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %34, align 4
  %35 = getelementptr inbounds %"struct.sw::Vector", %"struct.sw::Vector"* %6, i64 0, i32 0, i32 0, i64 1
  store float 0xFFFFFFFFE0000000, float* %35, align 4
  %36 = getelementptr inbounds %"struct.sw::Vector", %"struct.sw::Vector"* %6, i64 0, i32 0, i32 0, i64 2
  store float 0xFFFFFFFFE0000000, float* %36, align 4
  call void @_ZN2swrmERKNS_6VectorES2_(%"struct.sw::Vector"* nonnull sret %6, %"struct.sw::Vector"* nonnull dereferenceable(12) %4, %"struct.sw::Vector"* nonnull dereferenceable(12) %3) #9
  %37 = call float @_ZN2sw6Vector1NERKS0_(%"struct.sw::Vector"* nonnull dereferenceable(12) %6) #9
  %38 = call dereferenceable(12) %"struct.sw::Vector"* @_ZN2sw6VectordVEf(%"struct.sw::Vector"* nonnull %6, float %37) #9
  %39 = bitcast %"struct.sw::Vector"* %4 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = load i32, i32* %12, align 4
  %42 = bitcast %"struct.sw::Vector"* %6 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = bitcast float* %25 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = load i32, i32* %16, align 4
  %47 = bitcast float* %35 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = bitcast float* %26 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = load i32, i32* %20, align 4
  %52 = bitcast float* %36 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = bitcast %"struct.sw::Matrix"* %0 to i32*
  store i32 %40, i32* %54, align 4, !alias.scope !8
  %55 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 1
  %56 = bitcast float* %55 to i32*
  store i32 %45, i32* %56, align 4, !alias.scope !8
  %57 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 2
  %58 = bitcast float* %57 to i32*
  store i32 %50, i32* %58, align 4, !alias.scope !8
  %59 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 3
  %60 = bitcast float* %59 to i32*
  store i32 0, i32* %60, align 4, !alias.scope !8
  %61 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 0
  %62 = bitcast float* %61 to i32*
  store i32 %41, i32* %62, align 4, !alias.scope !8
  %63 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 1
  %64 = bitcast float* %63 to i32*
  store i32 %46, i32* %64, align 4, !alias.scope !8
  %65 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 2
  %66 = bitcast float* %65 to i32*
  store i32 %51, i32* %66, align 4, !alias.scope !8
  %67 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 3
  %68 = bitcast float* %67 to i32*
  store i32 0, i32* %68, align 4, !alias.scope !8
  %69 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 0
  %70 = bitcast float* %69 to i32*
  store i32 %43, i32* %70, align 4, !alias.scope !8
  %71 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 1
  %72 = bitcast float* %71 to i32*
  store i32 %48, i32* %72, align 4, !alias.scope !8
  %73 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 2
  %74 = bitcast float* %73 to i32*
  store i32 %53, i32* %74, align 4, !alias.scope !8
  %75 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 3
  %76 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 3
  %77 = bitcast float* %76 to i32*
  %78 = bitcast float* %75 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %78, i8 0, i64 16, i1 false)
  store i32 1065353216, i32* %77, align 4, !alias.scope !8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %33) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %23) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable writeonly
define hidden void @_ZN2sw6Matrix6lookAtEfff(%"struct.sw::Matrix"* noalias nocapture sret, float, float, float) local_unnamed_addr #7 align 2 {
  %5 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 0
  store float 1.000000e+00, float* %5, align 4, !alias.scope !11
  %6 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 1
  store float 0.000000e+00, float* %6, align 4, !alias.scope !11
  %7 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 2
  store float 0.000000e+00, float* %7, align 4, !alias.scope !11
  %8 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 0, i64 3
  store float %1, float* %8, align 4, !alias.scope !11
  %9 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 0
  store float 0.000000e+00, float* %9, align 4, !alias.scope !11
  %10 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 1
  store float 1.000000e+00, float* %10, align 4, !alias.scope !11
  %11 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 2
  store float 0.000000e+00, float* %11, align 4, !alias.scope !11
  %12 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 1, i64 3
  store float %2, float* %12, align 4, !alias.scope !11
  %13 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 0
  store float 0.000000e+00, float* %13, align 4, !alias.scope !11
  %14 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 1
  store float 0.000000e+00, float* %14, align 4, !alias.scope !11
  %15 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 2
  store float 1.000000e+00, float* %15, align 4, !alias.scope !11
  %16 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 2, i64 3
  store float %3, float* %16, align 4, !alias.scope !11
  %17 = getelementptr inbounds %"struct.sw::Matrix", %"struct.sw::Matrix"* %0, i64 0, i32 0, i64 3, i64 0
  %18 = bitcast float* %17 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %18, align 4, !alias.scope !11
  ret void
}

; Function Attrs: nofree nounwind optsize
declare float @cosf(float) local_unnamed_addr #8

; Function Attrs: nofree nounwind optsize
declare float @sinf(float) local_unnamed_addr #8

attributes #0 = { nofree norecurse nounwind optsize ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind optsize readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree norecurse nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind optsize ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind optsize }
attributes #10 = { optsize }
attributes #11 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN2sw6Matrix9translateERKNS_6VectorE: argument 0"}
!4 = distinct !{!4, !"_ZN2sw6Matrix9translateERKNS_6VectorE"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN2sw6Matrix5scaleERKNS_6VectorE: argument 0"}
!7 = distinct !{!7, !"_ZN2sw6Matrix5scaleERKNS_6VectorE"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK2sw6MatrixcoEv: argument 0"}
!10 = distinct !{!10, !"_ZNK2sw6MatrixcoEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN2sw6Matrix9translateERKNS_6VectorE: argument 0"}
!13 = distinct !{!13, !"_ZN2sw6Matrix9translateERKNS_6VectorE"}
