; ModuleID = '../../base/power_monitor/power_monitor_source.cc'
source_filename = "../../base/power_monitor/power_monitor_source.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::PowerMonitorSource" = type { i32 (...)** }

@_ZTVN4base18PowerMonitorSourceE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::PowerMonitorSource"*)* @_ZN4base18PowerMonitorSourceD2Ev to i8*), i8* bitcast (void (%"class.base::PowerMonitorSource"*)* @_ZN4base18PowerMonitorSourceD0Ev to i8*), i8* bitcast (i32 (%"class.base::PowerMonitorSource"*)* @_ZN4base18PowerMonitorSource22GetCurrentThermalStateEv to i8*), i8* bitcast (void (%"class.base::PowerMonitorSource"*, i32)* @_ZN4base18PowerMonitorSource22SetCurrentThermalStateENS_20PowerThermalObserver18DeviceThermalStateE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str = private unnamed_addr constant [8 x i8] c"Unknown\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"Nominal\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"Fair\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"Serious\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"Critical\00", align 1
@switch.table._ZN4base18PowerMonitorSource26DeviceThermalStateToStringENS_20PowerThermalObserver18DeviceThermalStateE = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0)], align 8

@_ZN4base18PowerMonitorSourceD1Ev = hidden unnamed_addr alias void (%"class.base::PowerMonitorSource"*), void (%"class.base::PowerMonitorSource"*)* @_ZN4base18PowerMonitorSourceD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base18PowerMonitorSourceC2Ev(%"class.base::PowerMonitorSource"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::PowerMonitorSource", %"class.base::PowerMonitorSource"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4base18PowerMonitorSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4base18PowerMonitorSourceD2Ev(%"class.base::PowerMonitorSource"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN4base18PowerMonitorSourceD0Ev(%"class.base::PowerMonitorSource"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #6
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN4base18PowerMonitorSource22GetCurrentThermalStateEv(%"class.base::PowerMonitorSource"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4base18PowerMonitorSource22SetCurrentThermalStateENS_20PowerThermalObserver18DeviceThermalStateE(%"class.base::PowerMonitorSource"* nocapture, i32) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base18PowerMonitorSource17ProcessPowerEventENS0_10PowerEventE(i32) local_unnamed_addr #4 align 2 {
  %2 = tail call zeroext i1 @_ZN4base12PowerMonitor13IsInitializedEv() #7
  br i1 %2, label %3, label %13

3:                                                ; preds = %1
  switch i32 %0, label %13 [
    i32 0, label %4
    i32 2, label %11
    i32 1, label %12
  ]

4:                                                ; preds = %3
  %5 = tail call %"class.base::PowerMonitorSource"* @_ZN4base12PowerMonitor6SourceEv() #7
  %6 = bitcast %"class.base::PowerMonitorSource"* %5 to i1 (%"class.base::PowerMonitorSource"*)***
  %7 = load i1 (%"class.base::PowerMonitorSource"*)**, i1 (%"class.base::PowerMonitorSource"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.base::PowerMonitorSource"*)*, i1 (%"class.base::PowerMonitorSource"*)** %7, i64 4
  %9 = load i1 (%"class.base::PowerMonitorSource"*)*, i1 (%"class.base::PowerMonitorSource"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.base::PowerMonitorSource"* %5) #7
  tail call void @_ZN4base12PowerMonitor22NotifyPowerStateChangeEb(i1 zeroext %10) #7
  br label %13

11:                                               ; preds = %3
  tail call void @_ZN4base12PowerMonitor12NotifyResumeEv() #7
  br label %13

12:                                               ; preds = %3
  tail call void @_ZN4base12PowerMonitor13NotifySuspendEv() #7
  br label %13

13:                                               ; preds = %1, %3, %12, %11, %4
  ret void
}

declare zeroext i1 @_ZN4base12PowerMonitor13IsInitializedEv() local_unnamed_addr #5

declare void @_ZN4base12PowerMonitor22NotifyPowerStateChangeEb(i1 zeroext) local_unnamed_addr #5

declare %"class.base::PowerMonitorSource"* @_ZN4base12PowerMonitor6SourceEv() local_unnamed_addr #5

declare void @_ZN4base12PowerMonitor12NotifyResumeEv() local_unnamed_addr #5

declare void @_ZN4base12PowerMonitor13NotifySuspendEv() local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base18PowerMonitorSource19ProcessThermalEventENS_20PowerThermalObserver18DeviceThermalStateE(i32) local_unnamed_addr #4 align 2 {
  %2 = tail call zeroext i1 @_ZN4base12PowerMonitor13IsInitializedEv() #7
  br i1 %2, label %3, label %4

3:                                                ; preds = %1
  tail call void @_ZN4base12PowerMonitor24NotifyThermalStateChangeENS_20PowerThermalObserver18DeviceThermalStateE(i32 %0) #7
  br label %4

4:                                                ; preds = %1, %3
  ret void
}

declare void @_ZN4base12PowerMonitor24NotifyThermalStateChangeENS_20PowerThermalObserver18DeviceThermalStateE(i32) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN4base18PowerMonitorSource26DeviceThermalStateToStringENS_20PowerThermalObserver18DeviceThermalStateE(i32) local_unnamed_addr #1 align 2 {
  %2 = add i32 %0, -1
  %3 = icmp ult i32 %2, 4
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = sext i32 %2 to i64
  %6 = getelementptr inbounds [4 x i8*], [4 x i8*]* @switch.table._ZN4base18PowerMonitorSource26DeviceThermalStateToStringENS_20PowerThermalObserver18DeviceThermalStateE, i64 0, i64 %5
  %7 = load i8*, i8** %6, align 8
  ret i8* %7

8:                                                ; preds = %1
  ret i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0)
}

declare void @__cxa_pure_virtual() unnamed_addr

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
