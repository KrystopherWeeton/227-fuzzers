; ModuleID = '../../cc/layers/tile_size_calculator.cc'
source_filename = "../../cc/layers/tile_size_calculator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::TileSizeCalculator" = type { %"class.cc::PictureLayerImpl"*, %"struct.cc::TileSizeCalculator::AffectingParams", %"class.gfx::Size" }
%"struct.cc::TileSizeCalculator::AffectingParams" = type { i32, i8, float, %"class.gfx::Size", i32, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.cc::PictureLayerImpl" = type { %"class.cc::LayerImpl.base", %"class.cc::PictureLayerTilingClient", %"class.cc::ImageAnimationController::AnimationDriver", %"class.cc::PictureLayerImpl"*, %"class.std::__1::unique_ptr.1196", %class.scoped_refptr.1204, %"class.cc::Region", float, float, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", float, float, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", float, i8, i8, %"class.absl::optional.1256", float, %"class.gfx::Rect", %"class.gfx::Size", %"class.std::__1::vector.1261", %"class.base::flat_map.1268", %"class.gfx::Size", %"class.cc::TileSizeCalculator", %"class.gfx::Rect" }
%"class.cc::LayerImpl.base" = type <{ i32 (...)**, i32, [4 x i8], %"class.cc::LayerTreeImpl"*, i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::Size", %"class.gfx::Size", i16, [2 x i8], %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.cc::ElementId", %"class.gfx::Rect", %"struct.cc::DrawProperties", %"struct.cc::PerformanceProperties", [4 x i8], %"class.std::__1::unique_ptr.1170", %"class.std::__1::unique_ptr.1190", i8 }>
%"class.cc::LayerTreeImpl" = type { i32 (...)**, %"class.cc::LayerTreeHostImpl"*, i32, i32, %"class.cc::HeadsUpDisplayLayerImpl"*, %"class.cc::PropertyTrees", i32, i32, %"struct.cc::LayerTreeHost::ViewportPropertyIds", %"struct.viz::Selection.975", %class.scoped_refptr.976, float, float, float, float, float, %"class.gfx::DisplayColorSpaces", %"class.viz::LocalSurfaceId", i8, i8, %"class.gfx::Rect", %class.scoped_refptr.982, %"class.std::__1::vector.986", %"class.std::__1::unordered_map.999", %"class.base::internal::flat_tree.1023", %"class.std::__1::unordered_map.1031", %"class.std::__1::unordered_map.1055", %"class.std::__1::unordered_map.1079", %"class.std::__1::unordered_map.1079", %"class.base::flat_map.1103", %"class.std::__1::vector.1113", %"class.base::internal::flat_tree.1120", %"class.base::internal::flat_tree.598", %"class.std::__1::vector.1121", %"class.cc::Region", i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.114", %"class.std::__1::vector.114", %"class.std::__1::vector.1128", i8, [4 x i32], %"struct.cc::BrowserControlsParams", %"struct.cc::OverscrollBehavior", %class.scoped_refptr.1135, %class.scoped_refptr.1135, %"class.std::__1::unique_ptr.1140", i8, %"class.cc::LayerTreeLifecycle", i32, %"class.std::__1::vector.633", %"class.std::__1::vector.756", %"class.std::__1::unique_ptr.1146", %"class.std::__1::vector.1152" }
%"class.cc::LayerTreeHostImpl" = type { %"class.cc::TileManagerClient", %"class.cc::LayerTreeFrameSinkClient", %"class.cc::BrowserControlsOffsetManagerClient", %"class.cc::ScrollbarAnimationControllerClient", %"class.cc::VideoFrameControllerClient", %"class.cc::MutatorHostClient", %"class.cc::ImageAnimationController::Client", %"class.cc::CompositorDelegateForInput", %"class.cc::LayerTreeHostImplClient"*, %"class.cc::LayerTreeHostSchedulingClient"*, %"class.cc::TaskRunnerProvider"*, %"class.cc::BeginFrameTracker", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.5", %"class.cc::LayerTreeSettings", i8, %"class.viz::ClientResourceProvider", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.cc::LayerTreeFrameSink"*, i32, %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57", i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.102", %"class.cc::GlobalStateThatImpactsTilePriority", %"class.std::__1::unique_ptr.108", %"class.std::__1::unique_ptr.108", %"class.std::__1::unique_ptr.108", %"class.gfx::Vector2dF", %"class.std::__1::vector.114", i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, %"struct.cc::ManagedMemoryPolicy", %"class.cc::TileManager", %"class.std::__1::unique_ptr.394", %"class.std::__1::unique_ptr.406", %"class.cc::DroppedFrameCounter", %"class.cc::TotalFrameCounter", %"class.std::__1::unique_ptr.456", %"class.std::__1::unique_ptr.463", i64, %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", i8, %"class.gfx::Rect", %"class.std::__1::unique_ptr.469", %"class.std::__1::unique_ptr.475", %"class.std::__1::set.481", %"class.cc::RasterDarkModeFilter"*, %"class.std::__1::unordered_map.491", %"class.cc::RenderingStatsInstrumentation"*, %"class.cc::MicroBenchmarkControllerImpl", %"class.std::__1::unique_ptr.532", %"class.base::RepeatingCallback.328", %"class.cc::TaskGraphRunner"*, i32, %"class.std::__1::set.538", i8, i8, i8, i32, %"class.std::__1::unique_ptr.548", %"class.gfx::Size", i8, %"class.std::__1::unique_ptr.554", %"class.std::__1::vector.560", i32, [4 x i8], %"class.cc::ImageAnimationController", %"class.std::__1::unique_ptr.580", %"class.std::__1::unique_ptr.592", %"class.viz::FrameTokenGenerator", %"class.viz::LocalSurfaceId", %"class.base::internal::flat_tree.598", %"class.absl::optional.611", %"class.viz::LocalSurfaceId", %"class.viz::ChildLocalSurfaceIdAllocator", i32, %"class.std::__1::unique_ptr.82", %"class.cc::PresentationTimeCallbackBuffer", i32, %"class.cc::FrameSequenceTrackerCollection", %"class.std::__1::unique_ptr.686", i8, i8, %"class.cc::AnimatedPaintWorkletTracker", %"class.cc::AverageLagTrackingManager", %"class.cc::DeJellyState", %"class.cc::EventsMetricsManager", %"class.std::__1::unique_ptr.764", %"class.cc::FrameRateEstimator", i8, i8, i8, %"class.base::WritableSharedMemoryMapping", %"class.base::MRUCache", %"class.cc::ThrottleDecider", %"class.std::__1::vector.807", %"class.base::WeakPtrFactory.814" }
%"class.cc::TileManagerClient" = type { i32 (...)** }
%"class.cc::LayerTreeFrameSinkClient" = type { i32 (...)** }
%"class.cc::BrowserControlsOffsetManagerClient" = type { i32 (...)** }
%"class.cc::ScrollbarAnimationControllerClient" = type { i32 (...)** }
%"class.cc::VideoFrameControllerClient" = type { i32 (...)** }
%"class.cc::MutatorHostClient" = type { i32 (...)** }
%"class.cc::ImageAnimationController::Client" = type { i32 (...)** }
%"class.cc::CompositorDelegateForInput" = type { i32 (...)** }
%"class.cc::LayerTreeHostImplClient" = type { i32 (...)** }
%"class.cc::LayerTreeHostSchedulingClient" = type { i32 (...)** }
%"class.cc::TaskRunnerProvider" = type { i32 (...)**, %class.scoped_refptr, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.cc::BeginFrameTracker" = type { %"class.base::Location", %"class.std::__1::basic_string", %"class.base::TimeTicks", %"struct.viz::BeginFrameArgs", %"class.base::TimeTicks" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.viz::BeginFrameArgs" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", %"struct.viz::BeginFrameId", i64, i32, i8, i8, i64 }
%"class.base::TimeDelta" = type { i64 }
%"struct.viz::BeginFrameId" = type { i64, i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.cc::CompositorFrameReportingController"* }
%"class.cc::CompositorFrameReportingController" = type opaque
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.cc::InputDelegateForCompositor"* }
%"class.cc::InputDelegateForCompositor" = type { i32 (...)** }
%"class.cc::LayerTreeSettings" = type <{ i32 (...)**, %"class.viz::ResourceSettings", i8, i8, i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, float, i8, i8, [2 x i8], i32, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [3 x i8], i32, %"class.base::TimeDelta", i8, i8, [2 x i8], float, float, float, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", i32, %"class.gfx::Size", i32, float, i32, i64, i8, i8, i8, [5 x i8], i64, i8, i8, [2 x i8], i32, %"struct.cc::ManagedMemoryPolicy", i64, i32, i8, i8, i8, i8, i64, i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8] }>
%"class.viz::ResourceSettings" = type { i8, i8 }
%"class.viz::ClientResourceProvider" = type { %"class.base::flat_map", %"class.viz::ResourceIdGenerator" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.11" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::pair"* }
%"class.viz::ResourceIdGenerator" = type { i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.16", %"class.std::__1::__compressed_pair.25", %"class.std::__1::__compressed_pair.30", %"class.std::__1::__compressed_pair.32", [4 x i8] }>
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18", %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { i64 }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.35", %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.cc::LayerTreeFrameSink" = type { %"class.viz::SharedBitmapReporter", %"class.viz::ContextLostObserver", %"class.cc::LayerTreeFrameSinkClient"*, %class.scoped_refptr.42, %class.scoped_refptr.43, %class.scoped_refptr, %"class.gpu::GpuMemoryBufferManager"*, %"class.std::__1::unique_ptr.44", i64, %"class.base::WeakPtrFactory" }
%"class.viz::SharedBitmapReporter" = type { i32 (...)** }
%"class.viz::ContextLostObserver" = type { i32 (...)** }
%class.scoped_refptr.42 = type { %"class.viz::ContextProvider"* }
%"class.viz::ContextProvider" = type { i32 (...)** }
%class.scoped_refptr.43 = type { %"class.viz::RasterContextProvider"* }
%"class.viz::RasterContextProvider" = type { i32 (...)** }
%"class.gpu::GpuMemoryBufferManager" = type opaque
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.cc::LayerTreeFrameSink::ContextLostForwarder"* }
%"class.cc::LayerTreeFrameSink::ContextLostForwarder" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.50 }
%class.scoped_refptr.50 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.51", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.51" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.52" }
%"struct.std::__1::atomic.52" = type { %"struct.std::__1::__atomic_base.53" }
%"struct.std::__1::__atomic_base.53" = type { %"struct.std::__1::__atomic_base.54" }
%"struct.std::__1::__atomic_base.54" = type { %"struct.std::__1::__cxx_atomic_impl.55" }
%"struct.std::__1::__cxx_atomic_impl.55" = type { %"struct.std::__1::__cxx_atomic_base_impl.56" }
%"struct.std::__1::__cxx_atomic_base_impl.56" = type { i8 }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.viz::ContextCacheController::ScopedToken"* }
%"class.viz::ContextCacheController::ScopedToken" = type { i8 }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.cc::RasterBufferProvider"* }
%"class.cc::RasterBufferProvider" = type { i32 (...)** }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.cc::ResourcePool"* }
%"class.cc::ResourcePool" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.viz::ClientResourceProvider"*, %"class.viz::ContextProvider"*, %class.scoped_refptr, %"class.base::TimeDelta", i8, i32, i64, i64, i64, i64, i64, i64, i8, i8, %"class.base::circular_deque", %"class.base::circular_deque", %"class.std::__1::map", %"class.std::__1::unique_ptr.82", %"class.base::TimeTicks", %"class.base::TickClock"*, %"class.base::WeakPtrFactory.90" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.72"*, i64 }
%"class.std::__1::unique_ptr.72" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree.73" }
%"class.std::__1::__tree.73" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.90" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.cc::RasterQueryQueue"* }
%"class.cc::RasterQueryQueue" = type { i32 (...)**, %"class.viz::RasterContextProvider"*, i8, %"class.base::Lock", %"class.base::circular_deque.97" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::circular_deque.97" = type { %"class.base::internal::VectorBuffer.98", i64, i64 }
%"class.base::internal::VectorBuffer.98" = type { %"struct.cc::RasterQuery"*, i64 }
%"struct.cc::RasterQuery" = type <{ i32, [4 x i8], %"class.base::TimeDelta", i32, [4 x i8], %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.cc::ImageDecodeCache"* }
%"class.cc::ImageDecodeCache" = type { i32 (...)** }
%"class.cc::GlobalStateThatImpactsTilePriority" = type <{ i32, [4 x i8], i64, i64, i64, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.cc::LayerTreeImpl"* }
%"class.cc::LayerTreeDebugState" = type <{ i8, [7 x i8], %"class.std::__1::bitset", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"struct.cc::ManagedMemoryPolicy" = type { i64, i32, i64 }
%"class.cc::TileManager" = type { %"class.cc::CheckerImageTrackerClient", %"class.cc::TileManagerClient"*, %"class.base::SequencedTaskRunner"*, %"class.cc::ResourcePool"*, %"class.std::__1::unique_ptr.122", %"class.cc::RasterBufferProvider"*, %"class.cc::GlobalStateThatImpactsTilePriority", i64, %"struct.cc::TileManagerSettings", i8, i8, %"class.cc::RasterQueryQueue"*, %"class.std::__1::unordered_map.128", i8, [7 x i8], %"struct.cc::MemoryHistory::Entry", i8, i8, %"class.cc::ImageController", %"class.cc::DecodedImageTracker", %"class.cc::CheckerImageTracker", %"struct.cc::RasterTaskCompletionStats", %"struct.cc::TaskGraph", %"class.cc::UniqueNotifier", %"struct.cc::TileManager::Signals", %"class.cc::UniqueNotifier", i8, i64, i64, %"class.std::__1::unordered_set", i64, i64, i8, [7 x i8], %"class.std::__1::unordered_map.355", %"class.std::__1::vector.210", i32, %class.GURL, i8, %"class.base::internal::CancelableCallbackImpl", %"class.base::WaitableEvent", %"class.base::WeakPtrFactory.393", %"class.base::WeakPtrFactory.393" }
%"class.cc::CheckerImageTrackerClient" = type { i32 (...)** }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.cc::TileTaskManager"* }
%"class.cc::TileTaskManager" = type { i32 (...)** }
%"struct.cc::TileManagerSettings" = type { i8, i8, i64 }
%"class.std::__1::unordered_map.128" = type { %"class.std::__1::__hash_table.129" }
%"class.std::__1::__hash_table.129" = type <{ %"class.std::__1::unique_ptr.130", %"class.std::__1::__compressed_pair.140", %"class.std::__1::__compressed_pair.145", %"class.std::__1::__compressed_pair.150", [4 x i8] }>
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132", %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"struct.std::__1::__hash_node_base.133"** }
%"struct.std::__1::__hash_node_base.133" = type { %"struct.std::__1::__hash_node_base.133"* }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.std::__1::__bucket_list_deallocator.135" }
%"class.std::__1::__bucket_list_deallocator.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"struct.std::__1::__hash_node_base.133" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.cc::MemoryHistory::Entry" = type <{ i64, i64, i8, [7 x i8] }>
%"class.cc::ImageController" = type { i32 (...)**, %class.scoped_refptr.155, %"class.base::WeakPtr", %"class.cc::ImageDecodeCache"*, %"class.std::__1::vector.157", %"class.base::flat_map.187", %"class.base::SequencedTaskRunner"*, i64, %"class.base::Lock", %"class.std::__1::map.197", %"class.std::__1::map.197", i8, %"class.std::__1::vector.206", %"class.base::WeakPtrFactory.222" }
%class.scoped_refptr.155 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.156 }
%class.scoped_refptr.156 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::vector.157" = type { %"class.std::__1::__vector_base.158" }
%"class.std::__1::__vector_base.158" = type { %"class.cc::DrawImage"*, %"class.cc::DrawImage"*, %"class.std::__1::__compressed_pair.182" }
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional", %"class.absl::optional.177", float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp, %class.sk_sp.160, %"class.gfx::Rect", i32, %class.sk_sp.165, %class.sk_sp.173, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp, %class.scoped_refptr.174 }
%class.sk_sp.160 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.161", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { i8* }
%class.sk_sp.165 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.166" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.159, i32, i32 }
%class.sk_sp.159 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.52" }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector.166" = type { %"class.std::__1::__vector_base.167" }
%"class.std::__1::__vector_base.167" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.168" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.173 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.sk_sp = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.scoped_refptr.174 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.175", [4 x i8] }>
%"class.base::RefCountedThreadSafe.175" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkSize = type { float, float }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.176 }
%union.anon.176 = type { i64 }
%"class.absl::optional.177" = type { %"class.absl::optional_internal::optional_data.178" }
%"class.absl::optional_internal::optional_data.178" = type { %"class.absl::optional_internal::optional_data_base.179" }
%"class.absl::optional_internal::optional_data_base.179" = type { %"class.absl::optional_internal::optional_data_dtor_base.180" }
%"class.absl::optional_internal::optional_data_dtor_base.180" = type { i8, %union.anon.181 }
%union.anon.181 = type { %"class.gfx::ColorSpace" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.cc::DrawImage"* }
%"class.base::flat_map.187" = type { %"class.base::internal::flat_tree.188" }
%"class.base::internal::flat_tree.188" = type { %"class.std::__1::vector.189" }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"struct.std::__1::pair.191"*, %"struct.std::__1::pair.191"*, %"class.std::__1::__compressed_pair.192" }
%"struct.std::__1::pair.191" = type opaque
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"struct.std::__1::pair.191"* }
%"class.std::__1::map.197" = type { %"class.std::__1::__tree.198" }
%"class.std::__1::__tree.198" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.199", %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::vector.206" = type { %"class.std::__1::__vector_base.207" }
%"class.std::__1::__vector_base.207" = type { %"struct.cc::ImageController::ImageDecodeRequest"*, %"struct.cc::ImageController::ImageDecodeRequest"*, %"class.std::__1::__compressed_pair.217" }
%"struct.cc::ImageController::ImageDecodeRequest" = type <{ i64, %"class.cc::DrawImage", %"class.base::OnceCallback", %class.scoped_refptr.208, i8, [7 x i8] }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.85 }
%class.scoped_refptr.85 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.86", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.86" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.208 = type { %"class.cc::TileTask"* }
%"class.cc::TileTask" = type <{ %"class.cc::Task", i32, i32, %"class.std::__1::vector.210", i8, [7 x i8] }>
%"class.cc::Task" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.209", %"class.cc::TaskState", i64 }
%"class.base::RefCountedThreadSafe.209" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.cc::TaskState" = type { i16 }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"struct.cc::ImageController::ImageDecodeRequest"* }
%"class.base::WeakPtrFactory.222" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::DecodedImageTracker" = type { %"class.cc::ImageController"*, %"class.base::flat_map.223", i8, %class.scoped_refptr.155, %"class.base::TickClock"*, %"class.base::WeakPtrFactory.233" }
%"class.base::flat_map.223" = type { %"class.base::internal::flat_tree.224" }
%"class.base::internal::flat_tree.224" = type { %"class.std::__1::vector.225" }
%"class.std::__1::vector.225" = type { %"class.std::__1::__vector_base.226" }
%"class.std::__1::__vector_base.226" = type { %"struct.std::__1::pair.227"*, %"struct.std::__1::pair.227"*, %"class.std::__1::__compressed_pair.228" }
%"struct.std::__1::pair.227" = type { i32, %"class.std::__1::unique_ptr.1301" }
%"class.std::__1::unique_ptr.1301" = type { %"class.std::__1::__compressed_pair.1302" }
%"class.std::__1::__compressed_pair.1302" = type { %"struct.std::__1::__compressed_pair_elem.1303" }
%"struct.std::__1::__compressed_pair_elem.1303" = type { %"class.cc::DecodedImageTracker::ImageLock"* }
%"class.cc::DecodedImageTracker::ImageLock" = type { %"class.cc::DecodedImageTracker"*, i64, %"class.base::TimeTicks" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::pair.227"* }
%"class.base::WeakPtrFactory.233" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::CheckerImageTracker" = type { %"class.cc::ImageController"*, %"class.cc::CheckerImageTrackerClient"*, i8, i64, i8, %"class.base::internal::flat_tree.234", %"class.base::internal::flat_tree.234", %"class.std::__1::vector.242", i32, %"class.absl::optional.249", %"class.std::__1::unordered_map.254", %"class.std::__1::unordered_map.278", %"class.base::flat_map.302", %"class.base::WeakPtrFactory.312" }
%"class.base::internal::flat_tree.234" = type { %"class.std::__1::vector.235" }
%"class.std::__1::vector.235" = type { %"class.std::__1::__vector_base.236" }
%"class.std::__1::__vector_base.236" = type { i32*, i32*, %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { i32* }
%"class.std::__1::vector.242" = type { %"class.std::__1::__vector_base.243" }
%"class.std::__1::__vector_base.243" = type { %"struct.cc::CheckerImageTracker::ImageDecodeRequest"*, %"struct.cc::CheckerImageTracker::ImageDecodeRequest"*, %"class.std::__1::__compressed_pair.244" }
%"struct.cc::CheckerImageTracker::ImageDecodeRequest" = type <{ %"class.cc::PaintImage", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"struct.cc::CheckerImageTracker::ImageDecodeRequest"* }
%"class.absl::optional.249" = type { %"class.absl::optional_internal::optional_data.250" }
%"class.absl::optional_internal::optional_data.250" = type { %"class.absl::optional_internal::optional_data_base.251" }
%"class.absl::optional_internal::optional_data_base.251" = type { %"class.absl::optional_internal::optional_data_dtor_base.252" }
%"class.absl::optional_internal::optional_data_dtor_base.252" = type { i8, %union.anon.253 }
%union.anon.253 = type { %"class.cc::PaintImage" }
%"class.std::__1::unordered_map.254" = type { %"class.std::__1::__hash_table.255" }
%"class.std::__1::__hash_table.255" = type <{ %"class.std::__1::unique_ptr.256", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.271", %"class.std::__1::__compressed_pair.274", [4 x i8] }>
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258", %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"struct.std::__1::__hash_node_base.259"** }
%"struct.std::__1::__hash_node_base.259" = type { %"struct.std::__1::__hash_node_base.259"* }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.std::__1::__bucket_list_deallocator.261" }
%"class.std::__1::__bucket_list_deallocator.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"struct.std::__1::__hash_node_base.259" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::unordered_map.278" = type { %"class.std::__1::__hash_table.279" }
%"class.std::__1::__hash_table.279" = type <{ %"class.std::__1::unique_ptr.280", %"class.std::__1::__compressed_pair.290", %"class.std::__1::__compressed_pair.295", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282", %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"struct.std::__1::__hash_node_base.283"** }
%"struct.std::__1::__hash_node_base.283" = type { %"struct.std::__1::__hash_node_base.283"* }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.std::__1::__bucket_list_deallocator.285" }
%"class.std::__1::__bucket_list_deallocator.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::__hash_node_base.283" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.base::flat_map.302" = type { %"class.base::internal::flat_tree.303" }
%"class.base::internal::flat_tree.303" = type { %"class.std::__1::vector.304" }
%"class.std::__1::vector.304" = type { %"class.std::__1::__vector_base.305" }
%"class.std::__1::__vector_base.305" = type { %"struct.std::__1::pair.306"*, %"struct.std::__1::pair.306"*, %"class.std::__1::__compressed_pair.307" }
%"struct.std::__1::pair.306" = type { i32, i32 }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::pair.306"* }
%"class.base::WeakPtrFactory.312" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.cc::RasterTaskCompletionStats" = type { i64, i64 }
%"struct.cc::TaskGraph" = type { %"class.std::__1::vector.313", %"class.std::__1::vector.321" }
%"class.std::__1::vector.313" = type { %"class.std::__1::__vector_base.314" }
%"class.std::__1::__vector_base.314" = type { %"struct.cc::TaskGraph::Node"*, %"struct.cc::TaskGraph::Node"*, %"class.std::__1::__compressed_pair.316" }
%"struct.cc::TaskGraph::Node" = type { %class.scoped_refptr.315, i16, i16, i32 }
%class.scoped_refptr.315 = type { %"class.cc::Task"* }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.cc::TaskGraph::Node"* }
%"class.std::__1::vector.321" = type { %"class.std::__1::__vector_base.322" }
%"class.std::__1::__vector_base.322" = type { %"struct.cc::TaskGraph::Edge"*, %"struct.cc::TaskGraph::Edge"*, %"class.std::__1::__compressed_pair.323" }
%"struct.cc::TaskGraph::Edge" = type { %"class.cc::Task"*, %"class.cc::Task"* }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"struct.cc::TaskGraph::Edge"* }
%"struct.cc::TileManager::Signals" = type { i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.cc::UniqueNotifier" = type { %"class.base::SequencedTaskRunner"*, %"class.base::RepeatingCallback.328", %"class.base::Lock", i8, %"class.base::WeakPtrFactory.329" }
%"class.base::WeakPtrFactory.329" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.330" }
%"class.std::__1::__hash_table.330" = type <{ %"class.std::__1::unique_ptr.331", %"class.std::__1::__compressed_pair.341", %"class.std::__1::__compressed_pair.346", %"class.std::__1::__compressed_pair.350", [4 x i8] }>
%"class.std::__1::unique_ptr.331" = type { %"class.std::__1::__compressed_pair.332" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333", %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"struct.std::__1::__hash_node_base.334"** }
%"struct.std::__1::__hash_node_base.334" = type { %"struct.std::__1::__hash_node_base.334"* }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.std::__1::__bucket_list_deallocator.336" }
%"class.std::__1::__bucket_list_deallocator.336" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"struct.std::__1::__hash_node_base.334" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::unordered_map.355" = type { %"class.std::__1::__hash_table.356" }
%"class.std::__1::__hash_table.356" = type <{ %"class.std::__1::unique_ptr.357", %"class.std::__1::__compressed_pair.367", %"class.std::__1::__compressed_pair.372", %"class.std::__1::__compressed_pair.375", [4 x i8] }>
%"class.std::__1::unique_ptr.357" = type { %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359", %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %"struct.std::__1::__hash_node_base.360"** }
%"struct.std::__1::__hash_node_base.360" = type { %"struct.std::__1::__hash_node_base.360"* }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.std::__1::__bucket_list_deallocator.362" }
%"class.std::__1::__bucket_list_deallocator.362" = type { %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"struct.std::__1::__hash_node_base.360" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::vector.210" = type { %"class.std::__1::__vector_base.211" }
%"class.std::__1::__vector_base.211" = type { %class.scoped_refptr.208*, %class.scoped_refptr.208*, %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %class.scoped_refptr.208* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.379" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.379" = type { %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.381" }
%"struct.std::__1::__compressed_pair_elem.381" = type { %class.GURL* }
%"class.base::internal::CancelableCallbackImpl" = type { %"class.base::OnceCallback.385", %"class.base::WeakPtrFactory.386" }
%"class.base::OnceCallback.385" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.386" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.387, i8, [7 x i8] }>
%class.scoped_refptr.387 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.388", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.388" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.389" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.base::WeakPtrFactory.393" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.394" = type { %"class.std::__1::__compressed_pair.395" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.cc::BrowserControlsOffsetManager"* }
%"class.cc::BrowserControlsOffsetManager" = type { i32 (...)**, %"class.cc::BrowserControlsOffsetManagerClient"*, i32, float, float, float, float, float, i8, i8, [2 x i8], %"struct.cc::BrowserControlsParams", i8, i8, float, float, %"class.absl::optional.397", %"class.absl::optional.397", [4 x i8], %"class.cc::BrowserControlsOffsetManager::Animation", %"class.cc::BrowserControlsOffsetManager::Animation" }
%"class.absl::optional.397" = type { %"class.absl::optional_internal::optional_data.398" }
%"class.absl::optional_internal::optional_data.398" = type { %"class.absl::optional_internal::optional_data_base.399" }
%"class.absl::optional_internal::optional_data_base.399" = type { %"class.absl::optional_internal::optional_data_dtor_base.400" }
%"class.absl::optional_internal::optional_data_dtor_base.400" = type { i8, %union.anon.401 }
%union.anon.401 = type { %"struct.std::__1::pair.402" }
%"struct.std::__1::pair.402" = type { float, float }
%"class.cc::BrowserControlsOffsetManager::Animation" = type <{ i8, i8, [2 x i8], i32, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", float, float, float, float, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.406" = type { %"class.std::__1::__compressed_pair.407" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.cc::PageScaleAnimation"* }
%"class.cc::PageScaleAnimation" = type opaque
%"class.cc::DroppedFrameCounter" = type { %"class.base::TimeDelta", %"class.std::__1::queue", i32, double, %"class.cc::DroppedFrameCounter::SlidingWindowHistogram", %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::RingBuffer", i64, i64, i64, i64, i8, double, %"class.absl::optional.422", %"class.absl::optional.422", %"class.absl::optional.422", %"class.base::TimeTicks", %"class.base::TimeDelta", %"struct.cc::SharedMetricsBuffer"*, %"class.cc::FrameSorter", %"class.cc::TotalFrameCounter"*, %struct.anon.441, %"class.absl::optional.442", %"class.std::__1::map.447" }
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.418" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.412"**, %"struct.std::__1::pair.412"**, %"struct.std::__1::pair.412"**, %"class.std::__1::__compressed_pair.413" }
%"struct.std::__1::pair.412" = type opaque
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"struct.std::__1::pair.412"** }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.cc::DroppedFrameCounter::SlidingWindowHistogram" = type { [101 x i32], i32 }
%"class.base::RingBuffer" = type { [180 x i32], i64 }
%"class.absl::optional.422" = type { %"class.absl::optional_internal::optional_data.423" }
%"class.absl::optional_internal::optional_data.423" = type { %"class.absl::optional_internal::optional_data_base.424" }
%"class.absl::optional_internal::optional_data_base.424" = type { %"class.absl::optional_internal::optional_data_dtor_base.425" }
%"class.absl::optional_internal::optional_data_dtor_base.425" = type { i8, %union.anon.426 }
%union.anon.426 = type { double }
%"struct.cc::SharedMetricsBuffer" = type opaque
%"class.cc::FrameSorter" = type { i64, %"class.base::RepeatingCallback.427", %"class.base::circular_deque.428", %"class.std::__1::map.430", %"class.absl::optional" }
%"class.base::RepeatingCallback.427" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::circular_deque.428" = type { %"class.base::internal::VectorBuffer.429", i64, i64 }
%"class.base::internal::VectorBuffer.429" = type { %"struct.viz::BeginFrameArgs"*, i64 }
%"class.std::__1::map.430" = type { %"class.std::__1::__tree.431" }
%"class.std::__1::__tree.431" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.432", %"class.std::__1::__compressed_pair.436" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%struct.anon.441 = type { double, double }
%"class.absl::optional.442" = type { %"class.absl::optional_internal::optional_data.443" }
%"class.absl::optional_internal::optional_data.443" = type { %"class.absl::optional_internal::optional_data_base.444" }
%"class.absl::optional_internal::optional_data_base.444" = type { %"class.absl::optional_internal::optional_data_dtor_base.445" }
%"class.absl::optional_internal::optional_data_dtor_base.445" = type { i8, %union.anon.446 }
%union.anon.446 = type { %"struct.cc::DroppedFrameCounter::ScrollStartInfo" }
%"struct.cc::DroppedFrameCounter::ScrollStartInfo" = type { %"class.base::TimeTicks", %"struct.viz::BeginFrameId" }
%"class.std::__1::map.447" = type { %"class.std::__1::__tree.448" }
%"class.std::__1::__tree.448" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.449", %"class.std::__1::__compressed_pair.453" }
%"class.std::__1::__compressed_pair.449" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.cc::TotalFrameCounter" = type { i64, %"class.base::TimeDelta", %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.cc::MemoryHistory"* }
%"class.cc::MemoryHistory" = type { %"class.base::RingBuffer.459" }
%"class.base::RingBuffer.459" = type { [80 x %"struct.cc::MemoryHistory::Entry"], i64 }
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.cc::DebugRectHistory"* }
%"class.cc::DebugRectHistory" = type opaque
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.469" = type { %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"class.cc::MutatorHost"* }
%"class.cc::MutatorHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.475" = type { %"class.std::__1::__compressed_pair.476" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.477" = type { %"class.cc::MutatorEvents"* }
%"class.cc::MutatorEvents" = type { i32 (...)** }
%"class.std::__1::set.481" = type { %"class.std::__1::__tree.482" }
%"class.std::__1::__tree.482" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.483", %"class.std::__1::__compressed_pair.487" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.cc::RasterDarkModeFilter" = type opaque
%"class.std::__1::unordered_map.491" = type { %"class.std::__1::__hash_table.492" }
%"class.std::__1::__hash_table.492" = type <{ %"class.std::__1::unique_ptr.493", %"class.std::__1::__compressed_pair.503", %"class.std::__1::__compressed_pair.508", %"class.std::__1::__compressed_pair.511", [4 x i8] }>
%"class.std::__1::unique_ptr.493" = type { %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.495", %"struct.std::__1::__compressed_pair_elem.497" }
%"struct.std::__1::__compressed_pair_elem.495" = type { %"struct.std::__1::__hash_node_base.496"** }
%"struct.std::__1::__hash_node_base.496" = type { %"struct.std::__1::__hash_node_base.496"* }
%"struct.std::__1::__compressed_pair_elem.497" = type { %"class.std::__1::__bucket_list_deallocator.498" }
%"class.std::__1::__bucket_list_deallocator.498" = type { %"class.std::__1::__compressed_pair.499" }
%"class.std::__1::__compressed_pair.499" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.504" }
%"struct.std::__1::__compressed_pair_elem.504" = type { %"struct.std::__1::__hash_node_base.496" }
%"class.std::__1::__compressed_pair.508" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.cc::RenderingStatsInstrumentation" = type { i32 (...)**, %"struct.cc::RenderingStats", i8, %"class.base::Lock" }
%"struct.cc::RenderingStats" = type { i64, i64, i64, i64, i64, i64, %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList" }
%"class.cc::RenderingStats::TimeDeltaList" = type { %"class.std::__1::vector.517" }
%"class.std::__1::vector.517" = type { %"class.std::__1::__vector_base.518" }
%"class.std::__1::__vector_base.518" = type { %"class.base::TimeDelta"*, %"class.base::TimeDelta"*, %"class.std::__1::__compressed_pair.519" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"class.base::TimeDelta"* }
%"class.cc::MicroBenchmarkControllerImpl" = type { %"class.cc::LayerTreeHostImpl"*, %"class.std::__1::vector.524" }
%"class.std::__1::vector.524" = type { %"class.std::__1::__vector_base.525" }
%"class.std::__1::__vector_base.525" = type { %"class.std::__1::unique_ptr.526"*, %"class.std::__1::unique_ptr.526"*, %"class.std::__1::__compressed_pair.527" }
%"class.std::__1::unique_ptr.526" = type opaque
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.528" }
%"struct.std::__1::__compressed_pair_elem.528" = type { %"class.std::__1::unique_ptr.526"* }
%"class.std::__1::unique_ptr.532" = type { %"class.std::__1::__compressed_pair.533" }
%"class.std::__1::__compressed_pair.533" = type { %"struct.std::__1::__compressed_pair_elem.534" }
%"struct.std::__1::__compressed_pair_elem.534" = type { %"class.cc::SynchronousTaskGraphRunner"* }
%"class.cc::SynchronousTaskGraphRunner" = type opaque
%"class.base::RepeatingCallback.328" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.cc::TaskGraphRunner" = type { i32 (...)** }
%"class.std::__1::set.538" = type { %"class.std::__1::__tree.539" }
%"class.std::__1::__tree.539" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.540", %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.cc::Viewport"* }
%"class.cc::Viewport" = type opaque
%"class.std::__1::unique_ptr.554" = type { %"class.std::__1::__compressed_pair.555" }
%"class.std::__1::__compressed_pair.555" = type { %"struct.std::__1::__compressed_pair_elem.556" }
%"struct.std::__1::__compressed_pair_elem.556" = type { %"class.cc::PendingTreeRasterDurationHistogramTimer"* }
%"class.cc::PendingTreeRasterDurationHistogramTimer" = type opaque
%"class.std::__1::vector.560" = type { %"class.std::__1::__vector_base.561" }
%"class.std::__1::__vector_base.561" = type { %"struct.std::__1::pair.562"*, %"struct.std::__1::pair.562"*, %"class.std::__1::__compressed_pair.563" }
%"struct.std::__1::pair.562" = type opaque
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.564" }
%"struct.std::__1::__compressed_pair_elem.564" = type { %"struct.std::__1::pair.562"* }
%"class.cc::ImageAnimationController" = type <{ %"class.base::flat_map.568", %"class.base::internal::flat_tree.234", %"class.base::internal::flat_tree.234", %"class.cc::ImageAnimationController::InvalidationScheduler", i8, i8, i8, [5 x i8] }>
%"class.base::flat_map.568" = type { %"class.base::internal::flat_tree.569" }
%"class.base::internal::flat_tree.569" = type { %"class.std::__1::vector.570" }
%"class.std::__1::vector.570" = type { %"class.std::__1::__vector_base.571" }
%"class.std::__1::__vector_base.571" = type { %"struct.std::__1::pair.572"*, %"struct.std::__1::pair.572"*, %"class.std::__1::__compressed_pair.573" }
%"struct.std::__1::pair.572" = type { i32, %"class.cc::ImageAnimationController::AnimationState" }
%"class.cc::ImageAnimationController::AnimationState" = type { i32, %"class.std::__1::vector.166", i32, %"struct.cc::ImageAnimationController::AnimationState::AnimationAdvancementState", %"class.base::internal::flat_tree.1288", i64, i8, i8, %"class.base::TimeTicks", i32, i32, i64 }
%"struct.cc::ImageAnimationController::AnimationState::AnimationAdvancementState" = type { i64, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i64 }
%"class.base::internal::flat_tree.1288" = type { %"class.std::__1::vector.1289" }
%"class.std::__1::vector.1289" = type { %"class.std::__1::__vector_base.1290" }
%"class.std::__1::__vector_base.1290" = type { %"class.cc::ImageAnimationController::AnimationDriver"**, %"class.cc::ImageAnimationController::AnimationDriver"**, %"class.std::__1::__compressed_pair.1291" }
%"class.std::__1::__compressed_pair.1291" = type { %"struct.std::__1::__compressed_pair_elem.1292" }
%"struct.std::__1::__compressed_pair_elem.1292" = type { %"class.cc::ImageAnimationController::AnimationDriver"** }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.574" }
%"struct.std::__1::__compressed_pair_elem.574" = type { %"struct.std::__1::pair.572"* }
%"class.cc::ImageAnimationController::InvalidationScheduler" = type { %"class.base::SingleThreadTaskRunner"*, %"class.cc::ImageAnimationController::Client"*, %"class.base::RepeatingCallback.578", i32, %"class.base::TimeTicks", %"class.base::WeakPtrFactory.579" }
%"class.base::RepeatingCallback.578" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.579" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.580" = type { %"class.std::__1::__compressed_pair.581" }
%"class.std::__1::__compressed_pair.581" = type { %"struct.std::__1::__compressed_pair_elem.582" }
%"struct.std::__1::__compressed_pair_elem.582" = type { %"class.cc::UkmManager"* }
%"class.cc::UkmManager" = type { i8, i64, i64, i64, i64, i64, i32, i64, %"class.std::__1::unique_ptr.583" }
%"class.std::__1::unique_ptr.583" = type { %"class.std::__1::__compressed_pair.584" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.585" }
%"struct.std::__1::__compressed_pair_elem.585" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.592" = type { %"class.std::__1::__compressed_pair.593" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"struct.std::__1::__compressed_pair_elem.594" = type { %"class.cc::RenderFrameMetadataObserver"* }
%"class.cc::RenderFrameMetadataObserver" = type opaque
%"class.viz::FrameTokenGenerator" = type { i32 }
%"class.absl::optional.611" = type { %"class.absl::optional_internal::optional_data.612" }
%"class.absl::optional_internal::optional_data.612" = type { %"class.absl::optional_internal::optional_data_base.613" }
%"class.absl::optional_internal::optional_data_base.613" = type { %"class.absl::optional_internal::optional_data_dtor_base.614" }
%"class.absl::optional_internal::optional_data_dtor_base.614" = type { i8, [7 x i8], %union.anon.615 }
%union.anon.615 = type { %"class.cc::RenderFrameMetadata" }
%"class.cc::RenderFrameMetadata" = type <{ i8, [3 x i8], i32, %"class.absl::optional.616", %"struct.viz::Selection", i8, %"class.absl::optional.621", i8, float, %"class.gfx::Size", [4 x i8], %"class.absl::optional.626", float, float, float, float, i32, [4 x i8] }>
%"class.absl::optional.616" = type { %"class.absl::optional_internal::optional_data.617" }
%"class.absl::optional_internal::optional_data.617" = type { %"class.absl::optional_internal::optional_data_base.618" }
%"class.absl::optional_internal::optional_data_base.618" = type { %"class.absl::optional_internal::optional_data_dtor_base.619" }
%"class.absl::optional_internal::optional_data_dtor_base.619" = type { i8, %union.anon.620 }
%union.anon.620 = type { %"class.gfx::Vector2dF" }
%"struct.viz::Selection" = type { %"class.gfx::SelectionBound", %"class.gfx::SelectionBound" }
%"class.gfx::SelectionBound" = type <{ i32, %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::Point", %"class.gfx::Point", i8, [3 x i8] }>
%"class.gfx::PointF" = type { float, float }
%"class.gfx::Point" = type { i32, i32 }
%"class.absl::optional.621" = type { %"class.absl::optional_internal::optional_data.622" }
%"class.absl::optional_internal::optional_data.622" = type { %"class.absl::optional_internal::optional_data_base.623" }
%"class.absl::optional_internal::optional_data_base.623" = type { %"class.absl::optional_internal::optional_data_dtor_base.624" }
%"class.absl::optional_internal::optional_data_dtor_base.624" = type { i8, %union.anon.625 }
%union.anon.625 = type { %"struct.cc::DelegatedInkBrowserMetadata" }
%"struct.cc::DelegatedInkBrowserMetadata" = type { i8 }
%"class.absl::optional.626" = type { %"class.absl::optional_internal::optional_data.627" }
%"class.absl::optional_internal::optional_data.627" = type { %"class.absl::optional_internal::optional_data_base.628" }
%"class.absl::optional_internal::optional_data_base.628" = type { %"class.absl::optional_internal::optional_data_dtor_base.629" }
%"class.absl::optional_internal::optional_data_dtor_base.629" = type { i8, %union.anon.630 }
%union.anon.630 = type { %"class.viz::LocalSurfaceId" }
%"class.viz::ChildLocalSurfaceIdAllocator" = type { %"class.viz::LocalSurfaceId" }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.base::MemoryPressureListener"* }
%"class.base::MemoryPressureListener" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback", %"class.base::Location" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.cc::PresentationTimeCallbackBuffer" = type { %"class.base::circular_deque.631" }
%"class.base::circular_deque.631" = type { %"class.base::internal::VectorBuffer.632", i64, i64 }
%"class.base::internal::VectorBuffer.632" = type { %"struct.cc::PresentationTimeCallbackBuffer::FrameTokenInfo"*, i64 }
%"struct.cc::PresentationTimeCallbackBuffer::FrameTokenInfo" = type { i32, %"class.std::__1::vector.633", %"class.std::__1::vector.633" }
%"class.cc::FrameSequenceTrackerCollection" = type { i8, %"class.std::__1::unique_ptr.641", %"class.base::flat_map.647", %"class.base::flat_map.657", %"class.base::RepeatingCallback.667", %"class.std::__1::vector.668", %"class.cc::CompositorFrameReportingController"*, %"class.base::flat_map.676", i64, i64 }
%"class.std::__1::unique_ptr.641" = type { %"class.std::__1::__compressed_pair.642" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"class.cc::ThroughputUkmReporter"* }
%"class.cc::ThroughputUkmReporter" = type opaque
%"class.base::flat_map.647" = type { %"class.base::internal::flat_tree.648" }
%"class.base::internal::flat_tree.648" = type { %"class.std::__1::vector.649" }
%"class.std::__1::vector.649" = type { %"class.std::__1::__vector_base.650" }
%"class.std::__1::__vector_base.650" = type { %"struct.std::__1::pair.651"*, %"struct.std::__1::pair.651"*, %"class.std::__1::__compressed_pair.652" }
%"struct.std::__1::pair.651" = type opaque
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"struct.std::__1::pair.651"* }
%"class.base::flat_map.657" = type { %"class.base::internal::flat_tree.658" }
%"class.base::internal::flat_tree.658" = type { %"class.std::__1::vector.659" }
%"class.std::__1::vector.659" = type { %"class.std::__1::__vector_base.660" }
%"class.std::__1::__vector_base.660" = type { %"struct.std::__1::pair.661"*, %"struct.std::__1::pair.661"*, %"class.std::__1::__compressed_pair.662" }
%"struct.std::__1::pair.661" = type opaque
%"class.std::__1::__compressed_pair.662" = type { %"struct.std::__1::__compressed_pair_elem.663" }
%"struct.std::__1::__compressed_pair_elem.663" = type { %"struct.std::__1::pair.661"* }
%"class.base::RepeatingCallback.667" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::vector.668" = type { %"class.std::__1::__vector_base.669" }
%"class.std::__1::__vector_base.669" = type { %"class.std::__1::unique_ptr.670"*, %"class.std::__1::unique_ptr.670"*, %"class.std::__1::__compressed_pair.671" }
%"class.std::__1::unique_ptr.670" = type opaque
%"class.std::__1::__compressed_pair.671" = type { %"struct.std::__1::__compressed_pair_elem.672" }
%"struct.std::__1::__compressed_pair_elem.672" = type { %"class.std::__1::unique_ptr.670"* }
%"class.base::flat_map.676" = type { %"class.base::internal::flat_tree.677" }
%"class.base::internal::flat_tree.677" = type { %"class.std::__1::vector.678" }
%"class.std::__1::vector.678" = type { %"class.std::__1::__vector_base.679" }
%"class.std::__1::__vector_base.679" = type { %"struct.std::__1::pair.680"*, %"struct.std::__1::pair.680"*, %"class.std::__1::__compressed_pair.681" }
%"struct.std::__1::pair.680" = type opaque
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"struct.std::__1::pair.680"* }
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.cc::PaintWorkletLayerPainter"* }
%"class.cc::PaintWorkletLayerPainter" = type opaque
%"class.cc::AnimatedPaintWorkletTracker" = type { %"class.base::flat_map.692", %"class.base::internal::flat_tree.702" }
%"class.base::flat_map.692" = type { %"class.base::internal::flat_tree.693" }
%"class.base::internal::flat_tree.693" = type { %"class.std::__1::vector.694" }
%"class.std::__1::vector.694" = type { %"class.std::__1::__vector_base.695" }
%"class.std::__1::__vector_base.695" = type { %"struct.std::__1::pair.696"*, %"struct.std::__1::pair.696"*, %"class.std::__1::__compressed_pair.697" }
%"struct.std::__1::pair.696" = type opaque
%"class.std::__1::__compressed_pair.697" = type { %"struct.std::__1::__compressed_pair_elem.698" }
%"struct.std::__1::__compressed_pair_elem.698" = type { %"struct.std::__1::pair.696"* }
%"class.base::internal::flat_tree.702" = type { %"class.std::__1::vector.703" }
%"class.std::__1::vector.703" = type { %"class.std::__1::__vector_base.704" }
%"class.std::__1::__vector_base.704" = type { %"struct.cc::PaintWorkletInput::PropertyKey"*, %"struct.cc::PaintWorkletInput::PropertyKey"*, %"class.std::__1::__compressed_pair.715" }
%"struct.cc::PaintWorkletInput::PropertyKey" = type { %"class.absl::optional.705", %"class.absl::optional.710", %"struct.cc::ElementId" }
%"class.absl::optional.705" = type { %"class.absl::optional_internal::optional_data.706" }
%"class.absl::optional_internal::optional_data.706" = type { %"class.absl::optional_internal::optional_data_base.707" }
%"class.absl::optional_internal::optional_data_base.707" = type { %"class.absl::optional_internal::optional_data_dtor_base.708" }
%"class.absl::optional_internal::optional_data_dtor_base.708" = type { i8, %union.anon.709 }
%union.anon.709 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.710" = type { %"class.absl::optional_internal::optional_data.711" }
%"class.absl::optional_internal::optional_data.711" = type { %"class.absl::optional_internal::optional_data_base.712" }
%"class.absl::optional_internal::optional_data_base.712" = type { %"class.absl::optional_internal::optional_data_dtor_base.713" }
%"class.absl::optional_internal::optional_data_dtor_base.713" = type { i8, %union.anon.714 }
%union.anon.714 = type { i32 }
%"class.std::__1::__compressed_pair.715" = type { %"struct.std::__1::__compressed_pair_elem.716" }
%"struct.std::__1::__compressed_pair_elem.716" = type { %"struct.cc::PaintWorkletInput::PropertyKey"* }
%"class.cc::AverageLagTrackingManager" = type { %"class.cc::AverageLagTracker", %"class.cc::AverageLagTracker", %"class.base::circular_deque.732" }
%"class.cc::AverageLagTracker" = type <{ i32, [4 x i8], %"class.std::__1::deque.720", %"class.base::TimeTicks", %"class.base::TimeTicks", float, float, %"class.base::TimeTicks", i8, [3 x i8], float, float, [4 x i8] }>
%"class.std::__1::deque.720" = type { %"class.std::__1::__deque_base.721" }
%"class.std::__1::__deque_base.721" = type { %"struct.std::__1::__split_buffer.722", i64, %"class.std::__1::__compressed_pair.728" }
%"struct.std::__1::__split_buffer.722" = type { %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"class.std::__1::__compressed_pair.723" }
%"struct.cc::AverageLagTracker::LagAreaInFrame" = type { %"class.base::TimeTicks", float, float, float, float }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"struct.cc::AverageLagTracker::LagAreaInFrame"** }
%"class.std::__1::__compressed_pair.728" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.base::circular_deque.732" = type { %"class.base::internal::VectorBuffer.733", i64, i64 }
%"class.base::internal::VectorBuffer.733" = type { %"struct.std::__1::pair.734"*, i64 }
%"struct.std::__1::pair.734" = type opaque
%"class.cc::DeJellyState" = type { i8, i32, float, float, %"class.absl::optional.735", %"class.std::__1::map.740", %"class.std::__1::map.740" }
%"class.absl::optional.735" = type { %"class.absl::optional_internal::optional_data.736" }
%"class.absl::optional_internal::optional_data.736" = type { %"class.absl::optional_internal::optional_data_base.737" }
%"class.absl::optional_internal::optional_data_base.737" = type { %"class.absl::optional_internal::optional_data_dtor_base.738" }
%"class.absl::optional_internal::optional_data_dtor_base.738" = type { i8, [3 x i8], %union.anon.739 }
%union.anon.739 = type { %"class.gfx::Transform" }
%"class.std::__1::map.740" = type { %"class.std::__1::__tree.741" }
%"class.std::__1::__tree.741" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.742", %"class.std::__1::__compressed_pair.746" }
%"class.std::__1::__compressed_pair.742" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.cc::EventsMetricsManager" = type { %"class.std::__1::vector.749", %"class.std::__1::vector.756" }
%"class.std::__1::vector.749" = type { %"class.std::__1::__vector_base.750" }
%"class.std::__1::__vector_base.750" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.std::__1::__compressed_pair.751" }
%"class.cc::EventsMetricsManager::ScopedMonitorImpl" = type opaque
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** }
%"class.std::__1::unique_ptr.764" = type { %"class.std::__1::__compressed_pair.765" }
%"class.std::__1::__compressed_pair.765" = type { %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.cc::LCDTextMetricsReporter"* }
%"class.cc::LCDTextMetricsReporter" = type opaque
%"class.cc::FrameRateEstimator" = type { i8, %"class.base::TimeTicks", i64, i8, %"class.cc::DelayedUniqueNotifier" }
%"class.cc::DelayedUniqueNotifier" = type { i32 (...)**, %"class.base::SequencedTaskRunner"*, %"class.base::RepeatingCallback.328", %"class.base::TimeDelta", %"class.base::TimeTicks", i8, %"class.base::WeakPtrFactory.770" }
%"class.base::WeakPtrFactory.770" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list.771", %"class.std::__1::map.778", i64 }
%"class.std::__1::list.771" = type { %"class.std::__1::__list_imp.772" }
%"class.std::__1::__list_imp.772" = type { %"struct.std::__1::__list_node_base.773", %"class.std::__1::__compressed_pair.774" }
%"struct.std::__1::__list_node_base.773" = type { %"struct.std::__1::__list_node_base.773"*, %"struct.std::__1::__list_node_base.773"* }
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::map.778" = type { %"class.std::__1::__tree.779" }
%"class.std::__1::__tree.779" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.780", %"class.std::__1::__compressed_pair.784" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.784" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.cc::ThrottleDecider" = type { %"class.base::flat_map.789", %"class.base::internal::flat_tree.799", %"class.base::internal::flat_tree.799" }
%"class.base::flat_map.789" = type { %"class.base::internal::flat_tree.790" }
%"class.base::internal::flat_tree.790" = type { %"class.std::__1::vector.791" }
%"class.std::__1::vector.791" = type { %"class.std::__1::__vector_base.792" }
%"class.std::__1::__vector_base.792" = type { %"struct.std::__1::pair.793"*, %"struct.std::__1::pair.793"*, %"class.std::__1::__compressed_pair.794" }
%"struct.std::__1::pair.793" = type opaque
%"class.std::__1::__compressed_pair.794" = type { %"struct.std::__1::__compressed_pair_elem.795" }
%"struct.std::__1::__compressed_pair_elem.795" = type { %"struct.std::__1::pair.793"* }
%"class.base::internal::flat_tree.799" = type { %"class.std::__1::vector.800" }
%"class.std::__1::vector.800" = type { %"class.std::__1::__vector_base.801" }
%"class.std::__1::__vector_base.801" = type { %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"*, %"class.std::__1::__compressed_pair.802" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::__compressed_pair.802" = type { %"struct.std::__1::__compressed_pair_elem.803" }
%"struct.std::__1::__compressed_pair_elem.803" = type { %"class.viz::FrameSinkId"* }
%"class.std::__1::vector.807" = type { %"class.std::__1::__vector_base.808" }
%"class.std::__1::__vector_base.808" = type { i32*, i32*, %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { i32* }
%"class.base::WeakPtrFactory.814" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::HeadsUpDisplayLayerImpl" = type opaque
%"class.cc::PropertyTrees" = type { %"class.base::flat_map.815", %"class.base::flat_map.815", %"class.base::flat_map.815", %"class.cc::TransformTree", %"class.cc::EffectTree", %"class.cc::ClipTree", %"class.cc::ScrollTree", i8, i8, i8, i32, i8, i8, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", %"struct.cc::PropertyTreesCachedData" }
%"class.base::flat_map.815" = type { %"class.base::internal::flat_tree.816" }
%"class.base::internal::flat_tree.816" = type { %"class.std::__1::vector.817" }
%"class.std::__1::vector.817" = type { %"class.std::__1::__vector_base.818" }
%"class.std::__1::__vector_base.818" = type { %"struct.std::__1::pair.819"*, %"struct.std::__1::pair.819"*, %"class.std::__1::__compressed_pair.820" }
%"struct.std::__1::pair.819" = type opaque
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.821" }
%"struct.std::__1::__compressed_pair_elem.821" = type { %"struct.std::__1::pair.819"* }
%"class.cc::TransformTree" = type { %"class.cc::PropertyTree", float, float, float, %"class.std::__1::vector.235", %"class.std::__1::vector.832", %"class.std::__1::vector.839" }
%"class.cc::PropertyTree" = type { i32 (...)**, %"class.std::__1::vector.825", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.825" = type { %"class.std::__1::__vector_base.826" }
%"class.std::__1::__vector_base.826" = type { %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"*, %"class.std::__1::__compressed_pair.827" }
%"struct.cc::TransformNode" = type opaque
%"class.std::__1::__compressed_pair.827" = type { %"struct.std::__1::__compressed_pair_elem.828" }
%"struct.std::__1::__compressed_pair_elem.828" = type { %"struct.cc::TransformNode"* }
%"class.std::__1::vector.832" = type { %"class.std::__1::__vector_base.833" }
%"class.std::__1::__vector_base.833" = type { %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"*, %"class.std::__1::__compressed_pair.834" }
%"struct.cc::TransformCachedNodeData" = type opaque
%"class.std::__1::__compressed_pair.834" = type { %"struct.std::__1::__compressed_pair_elem.835" }
%"struct.std::__1::__compressed_pair_elem.835" = type { %"struct.cc::TransformCachedNodeData"* }
%"class.std::__1::vector.839" = type { %"class.std::__1::__vector_base.840" }
%"class.std::__1::__vector_base.840" = type { %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"*, %"class.std::__1::__compressed_pair.841" }
%"struct.cc::StickyPositionNodeData" = type { i32, %"struct.cc::StickyPositionConstraint", i32, i32, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::__compressed_pair.841" = type { %"struct.std::__1::__compressed_pair_elem.842" }
%"struct.std::__1::__compressed_pair_elem.842" = type { %"struct.cc::StickyPositionNodeData"* }
%"class.cc::EffectTree" = type { %"class.cc::PropertyTree.846", %"class.std::__1::unordered_multimap", %"class.std::__1::vector.904" }
%"class.cc::PropertyTree.846" = type { i32 (...)**, %"class.std::__1::vector.847", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.847" = type { %"class.std::__1::__vector_base.848" }
%"class.std::__1::__vector_base.848" = type { %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"*, %"class.std::__1::__compressed_pair.876" }
%"struct.cc::EffectNode" = type { i32, i32, i64, float, float, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.870", float, %"class.gfx::PointF", %"struct.cc::ElementId", %"class.gfx::MaskFilterInfo", i32, %"class.gfx::Vector2dF", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [3 x i8], i8, i32, i32, i32, i32, i32, i32, %"class.cc::DocumentTransitionSharedElementId" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.849" }
%"class.std::__1::vector.849" = type { %"class.std::__1::__vector_base.850" }
%"class.std::__1::__vector_base.850" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.865" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.851, [20 x float], i32, [4 x i8], %"class.std::__1::vector.858", i32, [4 x i8] }>
%class.sk_sp.851 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.852, i32, %"class.absl::optional.853", i8, i32 }
%class.sk_sp.852 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.853" = type { %"class.absl::optional_internal::optional_data.854" }
%"class.absl::optional_internal::optional_data.854" = type { %"class.absl::optional_internal::optional_data_base.855" }
%"class.absl::optional_internal::optional_data_base.855" = type { %"class.absl::optional_internal::optional_data_dtor_base.856" }
%"class.absl::optional_internal::optional_data_dtor_base.856" = type { i8, %union.anon.857 }
%union.anon.857 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.858" = type { %"class.std::__1::__vector_base.859" }
%"class.std::__1::__vector_base.859" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.860" }
%"class.std::__1::__compressed_pair.860" = type { %"struct.std::__1::__compressed_pair_elem.861" }
%"struct.std::__1::__compressed_pair_elem.861" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.865" = type { %"struct.std::__1::__compressed_pair_elem.866" }
%"struct.std::__1::__compressed_pair_elem.866" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.870" = type { %"class.absl::optional_internal::optional_data.871" }
%"class.absl::optional_internal::optional_data.871" = type { %"class.absl::optional_internal::optional_data_base.872" }
%"class.absl::optional_internal::optional_data_base.872" = type { %"class.absl::optional_internal::optional_data_dtor_base.873" }
%"class.absl::optional_internal::optional_data_dtor_base.873" = type { i8, %union.anon.874 }
%union.anon.874 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.875" }
%"class.base::internal::flat_tree.875" = type { %"class.std::__1::vector.807" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"struct.cc::EffectNode"* }
%"class.std::__1::unordered_multimap" = type { %"class.std::__1::__hash_table.881" }
%"class.std::__1::__hash_table.881" = type <{ %"class.std::__1::unique_ptr.882", %"class.std::__1::__compressed_pair.892", %"class.std::__1::__compressed_pair.897", %"class.std::__1::__compressed_pair.900", [4 x i8] }>
%"class.std::__1::unique_ptr.882" = type { %"class.std::__1::__compressed_pair.883" }
%"class.std::__1::__compressed_pair.883" = type { %"struct.std::__1::__compressed_pair_elem.884", %"struct.std::__1::__compressed_pair_elem.886" }
%"struct.std::__1::__compressed_pair_elem.884" = type { %"struct.std::__1::__hash_node_base.885"** }
%"struct.std::__1::__hash_node_base.885" = type { %"struct.std::__1::__hash_node_base.885"* }
%"struct.std::__1::__compressed_pair_elem.886" = type { %"class.std::__1::__bucket_list_deallocator.887" }
%"class.std::__1::__bucket_list_deallocator.887" = type { %"class.std::__1::__compressed_pair.888" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"struct.std::__1::__hash_node_base.885" }
%"class.std::__1::__compressed_pair.897" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.900" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::vector.904" = type { %"class.std::__1::__vector_base.905" }
%"class.std::__1::__vector_base.905" = type { %"class.std::__1::unique_ptr.906"*, %"class.std::__1::unique_ptr.906"*, %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::unique_ptr.906" = type { %"class.std::__1::__compressed_pair.907" }
%"class.std::__1::__compressed_pair.907" = type { %"struct.std::__1::__compressed_pair_elem.908" }
%"struct.std::__1::__compressed_pair_elem.908" = type { %"class.cc::RenderSurfaceImpl"* }
%"class.cc::RenderSurfaceImpl" = type { i32 (...)**, %"class.cc::LayerTreeImpl"*, i64, i32, %"struct.cc::RenderSurfaceImpl::DrawProperties", %"class.gfx::Rect", i32, i8, %"class.cc::Occlusion", %"class.cc::RenderSurfaceImpl"*, %"class.std::__1::unique_ptr.909" }
%"struct.cc::RenderSurfaceImpl::DrawProperties" = type { float, %"class.gfx::Transform", %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", i8, %"class.gfx::MaskFilterInfo" }
%"class.cc::Occlusion" = type { %"class.gfx::Transform", %"class.cc::SimpleEnclosedRegion", %"class.cc::SimpleEnclosedRegion" }
%"class.cc::SimpleEnclosedRegion" = type { %"class.gfx::Rect" }
%"class.std::__1::unique_ptr.909" = type { %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.911" }
%"struct.std::__1::__compressed_pair_elem.911" = type { %"class.cc::DamageTracker"* }
%"class.cc::DamageTracker" = type opaque
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"class.std::__1::unique_ptr.906"* }
%"class.cc::ClipTree" = type { %"class.cc::PropertyTree.923" }
%"class.cc::PropertyTree.923" = type { i32 (...)**, %"class.std::__1::vector.924", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.924" = type { %"class.std::__1::__vector_base.925" }
%"class.std::__1::__vector_base.925" = type { %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"*, %"class.std::__1::__compressed_pair.926" }
%"struct.cc::ClipNode" = type opaque
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"struct.cc::ClipNode"* }
%"class.cc::ScrollTree" = type { %"class.cc::PropertyTree.931", i32, %"class.base::flat_map.939", %"class.base::flat_map.949", %"class.base::WeakPtr.959" }
%"class.cc::PropertyTree.931" = type { i32 (...)**, %"class.std::__1::vector.932", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.932" = type { %"class.std::__1::__vector_base.933" }
%"class.std::__1::__vector_base.933" = type { %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"*, %"class.std::__1::__compressed_pair.934" }
%"struct.cc::ScrollNode" = type opaque
%"class.std::__1::__compressed_pair.934" = type { %"struct.std::__1::__compressed_pair_elem.935" }
%"struct.std::__1::__compressed_pair_elem.935" = type { %"struct.cc::ScrollNode"* }
%"class.base::flat_map.939" = type { %"class.base::internal::flat_tree.940" }
%"class.base::internal::flat_tree.940" = type { %"class.std::__1::vector.941" }
%"class.std::__1::vector.941" = type { %"class.std::__1::__vector_base.942" }
%"class.std::__1::__vector_base.942" = type { %"struct.std::__1::pair.943"*, %"struct.std::__1::pair.943"*, %"class.std::__1::__compressed_pair.944" }
%"struct.std::__1::pair.943" = type opaque
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.945" }
%"struct.std::__1::__compressed_pair_elem.945" = type { %"struct.std::__1::pair.943"* }
%"class.base::flat_map.949" = type { %"class.base::internal::flat_tree.950" }
%"class.base::internal::flat_tree.950" = type { %"class.std::__1::vector.951" }
%"class.std::__1::vector.951" = type { %"class.std::__1::__vector_base.952" }
%"class.std::__1::__vector_base.952" = type { %"struct.std::__1::pair.953"*, %"struct.std::__1::pair.953"*, %"class.std::__1::__compressed_pair.954" }
%"struct.std::__1::pair.953" = type opaque
%"class.std::__1::__compressed_pair.954" = type { %"struct.std::__1::__compressed_pair_elem.955" }
%"struct.std::__1::__compressed_pair_elem.955" = type { %"struct.std::__1::pair.953"* }
%"class.base::WeakPtr.959" = type { %"class.base::internal::WeakPtrBase" }
%"struct.cc::PropertyTreesCachedData" = type { i32, %"class.std::__1::vector.960", %"class.std::__1::vector.967" }
%"class.std::__1::vector.960" = type { %"class.std::__1::__vector_base.961" }
%"class.std::__1::__vector_base.961" = type { %"struct.cc::AnimationScaleData"*, %"struct.cc::AnimationScaleData"*, %"class.std::__1::__compressed_pair.962" }
%"struct.cc::AnimationScaleData" = type <{ i32, float, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.962" = type { %"struct.std::__1::__compressed_pair_elem.963" }
%"struct.std::__1::__compressed_pair_elem.963" = type { %"struct.cc::AnimationScaleData"* }
%"class.std::__1::vector.967" = type { %"class.std::__1::__vector_base.968" }
%"class.std::__1::__vector_base.968" = type { %"class.std::__1::vector.969"*, %"class.std::__1::vector.969"*, %"class.std::__1::__compressed_pair.970" }
%"class.std::__1::vector.969" = type opaque
%"class.std::__1::__compressed_pair.970" = type { %"struct.std::__1::__compressed_pair_elem.971" }
%"struct.std::__1::__compressed_pair_elem.971" = type { %"class.std::__1::vector.969"* }
%"struct.cc::LayerTreeHost::ViewportPropertyIds" = type { i32, i32, i32, i32, i32 }
%"struct.viz::Selection.975" = type { %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound" }
%"struct.cc::LayerSelectionBound" = type <{ i32, %"class.gfx::Point", %"class.gfx::Point", i32, i8, [3 x i8] }>
%class.scoped_refptr.976 = type { %"class.cc::SyncedProperty"* }
%"class.cc::SyncedProperty" = type <{ %"class.base::RefCounted", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", i8, [3 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.cc::ScaleGroup" = type { float }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.977" }
%"class.absl::optional.977" = type { %"class.absl::optional_internal::optional_data.978" }
%"class.absl::optional_internal::optional_data.978" = type { %"class.absl::optional_internal::optional_data_base.979" }
%"class.absl::optional_internal::optional_data_base.979" = type { %"class.absl::optional_internal::optional_data_dtor_base.980" }
%"class.absl::optional_internal::optional_data_dtor_base.980" = type { i8, %union.anon.981 }
%union.anon.981 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%class.scoped_refptr.982 = type { %"class.cc::SyncedProperty.983"* }
%"class.cc::SyncedProperty.983" = type <{ %"class.base::RefCounted.984", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", i8, [3 x i8] }>
%"class.base::RefCounted.984" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::AdditionGroup" = type { %"class.gfx::Vector2dF" }
%"class.std::__1::vector.986" = type { %"class.std::__1::__vector_base.987" }
%"class.std::__1::__vector_base.987" = type { %"class.std::__1::unique_ptr.988"*, %"class.std::__1::unique_ptr.988"*, %"class.std::__1::__compressed_pair.994" }
%"class.std::__1::unique_ptr.988" = type { %"class.std::__1::__compressed_pair.989" }
%"class.std::__1::__compressed_pair.989" = type { %"struct.std::__1::__compressed_pair_elem.990" }
%"struct.std::__1::__compressed_pair_elem.990" = type { %"class.cc::LayerImpl"* }
%"class.cc::LayerImpl" = type <{ i32 (...)**, i32, [4 x i8], %"class.cc::LayerTreeImpl"*, i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::Size", %"class.gfx::Size", i16, [2 x i8], %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.cc::ElementId", %"class.gfx::Rect", %"struct.cc::DrawProperties", %"struct.cc::PerformanceProperties", [4 x i8], %"class.std::__1::unique_ptr.1170", %"class.std::__1::unique_ptr.1190", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.994" = type { %"struct.std::__1::__compressed_pair_elem.995" }
%"struct.std::__1::__compressed_pair_elem.995" = type { %"class.std::__1::unique_ptr.988"* }
%"class.std::__1::unordered_map.999" = type { %"class.std::__1::__hash_table.1000" }
%"class.std::__1::__hash_table.1000" = type <{ %"class.std::__1::unique_ptr.1001", %"class.std::__1::__compressed_pair.1011", %"class.std::__1::__compressed_pair.1016", %"class.std::__1::__compressed_pair.1019", [4 x i8] }>
%"class.std::__1::unique_ptr.1001" = type { %"class.std::__1::__compressed_pair.1002" }
%"class.std::__1::__compressed_pair.1002" = type { %"struct.std::__1::__compressed_pair_elem.1003", %"struct.std::__1::__compressed_pair_elem.1005" }
%"struct.std::__1::__compressed_pair_elem.1003" = type { %"struct.std::__1::__hash_node_base.1004"** }
%"struct.std::__1::__hash_node_base.1004" = type { %"struct.std::__1::__hash_node_base.1004"* }
%"struct.std::__1::__compressed_pair_elem.1005" = type { %"class.std::__1::__bucket_list_deallocator.1006" }
%"class.std::__1::__bucket_list_deallocator.1006" = type { %"class.std::__1::__compressed_pair.1007" }
%"class.std::__1::__compressed_pair.1007" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.1011" = type { %"struct.std::__1::__compressed_pair_elem.1012" }
%"struct.std::__1::__compressed_pair_elem.1012" = type { %"struct.std::__1::__hash_node_base.1004" }
%"class.std::__1::__compressed_pair.1016" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.1019" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.base::internal::flat_tree.1023" = type { %"class.std::__1::vector.1024" }
%"class.std::__1::vector.1024" = type { %"class.std::__1::__vector_base.1025" }
%"class.std::__1::__vector_base.1025" = type { %"class.cc::LayerImpl"**, %"class.cc::LayerImpl"**, %"class.std::__1::__compressed_pair.1026" }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.1027" }
%"struct.std::__1::__compressed_pair_elem.1027" = type { %"class.cc::LayerImpl"** }
%"class.std::__1::unordered_map.1031" = type { %"class.std::__1::__hash_table.1032" }
%"class.std::__1::__hash_table.1032" = type <{ %"class.std::__1::unique_ptr.1033", %"class.std::__1::__compressed_pair.1043", %"class.std::__1::__compressed_pair.1048", %"class.std::__1::__compressed_pair.1051", [4 x i8] }>
%"class.std::__1::unique_ptr.1033" = type { %"class.std::__1::__compressed_pair.1034" }
%"class.std::__1::__compressed_pair.1034" = type { %"struct.std::__1::__compressed_pair_elem.1035", %"struct.std::__1::__compressed_pair_elem.1037" }
%"struct.std::__1::__compressed_pair_elem.1035" = type { %"struct.std::__1::__hash_node_base.1036"** }
%"struct.std::__1::__hash_node_base.1036" = type { %"struct.std::__1::__hash_node_base.1036"* }
%"struct.std::__1::__compressed_pair_elem.1037" = type { %"class.std::__1::__bucket_list_deallocator.1038" }
%"class.std::__1::__bucket_list_deallocator.1038" = type { %"class.std::__1::__compressed_pair.1039" }
%"class.std::__1::__compressed_pair.1039" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.1043" = type { %"struct.std::__1::__compressed_pair_elem.1044" }
%"struct.std::__1::__compressed_pair_elem.1044" = type { %"struct.std::__1::__hash_node_base.1036" }
%"class.std::__1::__compressed_pair.1048" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.1051" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::unordered_map.1055" = type { %"class.std::__1::__hash_table.1056" }
%"class.std::__1::__hash_table.1056" = type <{ %"class.std::__1::unique_ptr.1057", %"class.std::__1::__compressed_pair.1067", %"class.std::__1::__compressed_pair.1072", %"class.std::__1::__compressed_pair.1075", [4 x i8] }>
%"class.std::__1::unique_ptr.1057" = type { %"class.std::__1::__compressed_pair.1058" }
%"class.std::__1::__compressed_pair.1058" = type { %"struct.std::__1::__compressed_pair_elem.1059", %"struct.std::__1::__compressed_pair_elem.1061" }
%"struct.std::__1::__compressed_pair_elem.1059" = type { %"struct.std::__1::__hash_node_base.1060"** }
%"struct.std::__1::__hash_node_base.1060" = type { %"struct.std::__1::__hash_node_base.1060"* }
%"struct.std::__1::__compressed_pair_elem.1061" = type { %"class.std::__1::__bucket_list_deallocator.1062" }
%"class.std::__1::__bucket_list_deallocator.1062" = type { %"class.std::__1::__compressed_pair.1063" }
%"class.std::__1::__compressed_pair.1063" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.1067" = type { %"struct.std::__1::__compressed_pair_elem.1068" }
%"struct.std::__1::__compressed_pair_elem.1068" = type { %"struct.std::__1::__hash_node_base.1060" }
%"class.std::__1::__compressed_pair.1072" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.1075" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::unordered_map.1079" = type { %"class.std::__1::__hash_table.1080" }
%"class.std::__1::__hash_table.1080" = type <{ %"class.std::__1::unique_ptr.1081", %"class.std::__1::__compressed_pair.1091", %"class.std::__1::__compressed_pair.1096", %"class.std::__1::__compressed_pair.1099", [4 x i8] }>
%"class.std::__1::unique_ptr.1081" = type { %"class.std::__1::__compressed_pair.1082" }
%"class.std::__1::__compressed_pair.1082" = type { %"struct.std::__1::__compressed_pair_elem.1083", %"struct.std::__1::__compressed_pair_elem.1085" }
%"struct.std::__1::__compressed_pair_elem.1083" = type { %"struct.std::__1::__hash_node_base.1084"** }
%"struct.std::__1::__hash_node_base.1084" = type { %"struct.std::__1::__hash_node_base.1084"* }
%"struct.std::__1::__compressed_pair_elem.1085" = type { %"class.std::__1::__bucket_list_deallocator.1086" }
%"class.std::__1::__bucket_list_deallocator.1086" = type { %"class.std::__1::__compressed_pair.1087" }
%"class.std::__1::__compressed_pair.1087" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.1091" = type { %"struct.std::__1::__compressed_pair_elem.1092" }
%"struct.std::__1::__compressed_pair_elem.1092" = type { %"struct.std::__1::__hash_node_base.1084" }
%"class.std::__1::__compressed_pair.1096" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.1099" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.base::flat_map.1103" = type { %"class.base::internal::flat_tree.1104" }
%"class.base::internal::flat_tree.1104" = type { %"class.std::__1::vector.1105" }
%"class.std::__1::vector.1105" = type { %"class.std::__1::__vector_base.1106" }
%"class.std::__1::__vector_base.1106" = type { %"struct.std::__1::pair.1107"*, %"struct.std::__1::pair.1107"*, %"class.std::__1::__compressed_pair.1108" }
%"struct.std::__1::pair.1107" = type opaque
%"class.std::__1::__compressed_pair.1108" = type { %"struct.std::__1::__compressed_pair_elem.1109" }
%"struct.std::__1::__compressed_pair_elem.1109" = type { %"struct.std::__1::pair.1107"* }
%"class.std::__1::vector.1113" = type { %"class.std::__1::__vector_base.1114" }
%"class.std::__1::__vector_base.1114" = type { %"class.cc::PictureLayerImpl"**, %"class.cc::PictureLayerImpl"**, %"class.std::__1::__compressed_pair.1115" }
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.1116" }
%"struct.std::__1::__compressed_pair_elem.1116" = type { %"class.cc::PictureLayerImpl"** }
%"class.base::internal::flat_tree.1120" = type { %"class.std::__1::vector.1113" }
%"class.base::internal::flat_tree.598" = type { %"class.std::__1::vector.599" }
%"class.std::__1::vector.599" = type { %"class.std::__1::__vector_base.600" }
%"class.std::__1::__vector_base.600" = type { %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"*, %"class.std::__1::__compressed_pair.606" }
%"class.viz::SurfaceRange" = type { %"class.absl::optional.601", %"class.viz::SurfaceId" }
%"class.absl::optional.601" = type { %"class.absl::optional_internal::optional_data.602" }
%"class.absl::optional_internal::optional_data.602" = type { %"class.absl::optional_internal::optional_data_base.603" }
%"class.absl::optional_internal::optional_data_base.603" = type { %"class.absl::optional_internal::optional_data_dtor_base.604" }
%"class.absl::optional_internal::optional_data_dtor_base.604" = type { i8, %union.anon.605 }
%union.anon.605 = type { %"class.viz::SurfaceId" }
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.std::__1::__compressed_pair.606" = type { %"struct.std::__1::__compressed_pair_elem.607" }
%"struct.std::__1::__compressed_pair_elem.607" = type { %"class.viz::SurfaceRange"* }
%"class.std::__1::vector.1121" = type { %"class.std::__1::__vector_base.1122" }
%"class.std::__1::__vector_base.1122" = type { %"class.cc::RenderSurfaceImpl"**, %"class.cc::RenderSurfaceImpl"**, %"class.std::__1::__compressed_pair.1123" }
%"class.std::__1::__compressed_pair.1123" = type { %"struct.std::__1::__compressed_pair_elem.1124" }
%"struct.std::__1::__compressed_pair_elem.1124" = type { %"class.cc::RenderSurfaceImpl"** }
%"class.std::__1::vector.114" = type { %"class.std::__1::__vector_base.115" }
%"class.std::__1::__vector_base.115" = type { %"class.std::__1::unique_ptr.116"*, %"class.std::__1::unique_ptr.116"*, %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.1296" }
%"class.std::__1::__compressed_pair.1296" = type { %"struct.std::__1::__compressed_pair_elem.1297" }
%"struct.std::__1::__compressed_pair_elem.1297" = type { %"class.cc::SwapPromise"* }
%"class.cc::SwapPromise" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.std::__1::unique_ptr.116"* }
%"class.std::__1::vector.1128" = type { %"class.std::__1::__vector_base.1129" }
%"class.std::__1::__vector_base.1129" = type { %"class.cc::UIResourceRequest"*, %"class.cc::UIResourceRequest"*, %"class.std::__1::__compressed_pair.1130" }
%"class.cc::UIResourceRequest" = type opaque
%"class.std::__1::__compressed_pair.1130" = type { %"struct.std::__1::__compressed_pair_elem.1131" }
%"struct.std::__1::__compressed_pair_elem.1131" = type { %"class.cc::UIResourceRequest"* }
%"struct.cc::BrowserControlsParams" = type <{ float, float, float, float, i8, i8, i8, i8 }>
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%class.scoped_refptr.1135 = type { %"class.cc::SyncedProperty.1136"* }
%"class.cc::SyncedProperty.1136" = type <{ %"class.base::RefCounted.1137", %"class.cc::AdditionGroup.1138", %"class.cc::AdditionGroup.1138", %"class.cc::AdditionGroup.1138", %"class.cc::AdditionGroup.1138", %"class.cc::AdditionGroup.1138", i8, [3 x i8] }>
%"class.base::RefCounted.1137" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::AdditionGroup.1138" = type { float }
%"class.std::__1::unique_ptr.1140" = type { %"class.std::__1::__compressed_pair.1141" }
%"class.std::__1::__compressed_pair.1141" = type { %"struct.std::__1::__compressed_pair_elem.1142" }
%"struct.std::__1::__compressed_pair_elem.1142" = type { %"struct.cc::PendingPageScaleAnimation"* }
%"struct.cc::PendingPageScaleAnimation" = type opaque
%"class.cc::LayerTreeLifecycle" = type { i32 }
%"class.std::__1::vector.633" = type { %"class.std::__1::__vector_base.634" }
%"class.std::__1::__vector_base.634" = type { %"class.base::OnceCallback.635"*, %"class.base::OnceCallback.635"*, %"class.std::__1::__compressed_pair.636" }
%"class.base::OnceCallback.635" = type opaque
%"class.std::__1::__compressed_pair.636" = type { %"struct.std::__1::__compressed_pair_elem.637" }
%"struct.std::__1::__compressed_pair_elem.637" = type { %"class.base::OnceCallback.635"* }
%"class.std::__1::vector.756" = type { %"class.std::__1::__vector_base.757" }
%"class.std::__1::__vector_base.757" = type { %"class.std::__1::unique_ptr.758"*, %"class.std::__1::unique_ptr.758"*, %"class.std::__1::__compressed_pair.759" }
%"class.std::__1::unique_ptr.758" = type { %"class.std::__1::__compressed_pair.1278" }
%"class.std::__1::__compressed_pair.1278" = type { %"struct.std::__1::__compressed_pair_elem.1279" }
%"struct.std::__1::__compressed_pair_elem.1279" = type { %"class.cc::EventMetrics"* }
%"class.cc::EventMetrics" = type { i32, %"class.absl::optional.1280", %"class.base::TickClock"*, [6 x %"class.base::TimeTicks"] }
%"class.absl::optional.1280" = type { %"class.absl::optional_internal::optional_data.1281" }
%"class.absl::optional_internal::optional_data.1281" = type { %"class.absl::optional_internal::optional_data_base.1282" }
%"class.absl::optional_internal::optional_data_base.1282" = type { %"class.absl::optional_internal::optional_data_dtor_base.1283" }
%"class.absl::optional_internal::optional_data_dtor_base.1283" = type { i8, %union.anon.1284 }
%union.anon.1284 = type { i32 }
%"class.std::__1::__compressed_pair.759" = type { %"struct.std::__1::__compressed_pair_elem.760" }
%"struct.std::__1::__compressed_pair_elem.760" = type { %"class.std::__1::unique_ptr.758"* }
%"class.std::__1::unique_ptr.1146" = type { %"class.std::__1::__compressed_pair.1147" }
%"class.std::__1::__compressed_pair.1147" = type { %"struct.std::__1::__compressed_pair_elem.1148" }
%"struct.std::__1::__compressed_pair_elem.1148" = type { %"class.gfx::DelegatedInkMetadata"* }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.std::__1::vector.1152" = type { %"class.std::__1::__vector_base.1153" }
%"class.std::__1::__vector_base.1153" = type { %"class.std::__1::unique_ptr.1154"*, %"class.std::__1::unique_ptr.1154"*, %"class.std::__1::__compressed_pair.1155" }
%"class.std::__1::unique_ptr.1154" = type opaque
%"class.std::__1::__compressed_pair.1155" = type { %"struct.std::__1::__compressed_pair_elem.1156" }
%"struct.std::__1::__compressed_pair_elem.1156" = type { %"class.std::__1::unique_ptr.1154"* }
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map.1160" }
%"class.base::flat_map.1160" = type { %"class.base::internal::flat_tree.1161" }
%"class.base::internal::flat_tree.1161" = type { %"class.std::__1::vector.1162" }
%"class.std::__1::vector.1162" = type { %"class.std::__1::__vector_base.1163" }
%"class.std::__1::__vector_base.1163" = type { %"struct.std::__1::pair.1164"*, %"struct.std::__1::pair.1164"*, %"class.std::__1::__compressed_pair.1165" }
%"struct.std::__1::pair.1164" = type opaque
%"class.std::__1::__compressed_pair.1165" = type { %"struct.std::__1::__compressed_pair_elem.1166" }
%"struct.std::__1::__compressed_pair_elem.1166" = type { %"struct.std::__1::pair.1164"* }
%"struct.cc::ElementId" = type { i64 }
%"struct.cc::DrawProperties" = type { %"class.gfx::Transform", %"class.gfx::Transform", %"class.cc::Occlusion", float, i8, i8, i8, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::MaskFilterInfo" }
%"struct.cc::PerformanceProperties" = type { i32, float, %"class.gfx::Transform" }
%"class.std::__1::unique_ptr.1170" = type { %"class.std::__1::__compressed_pair.1171" }
%"class.std::__1::__compressed_pair.1171" = type { %"struct.std::__1::__compressed_pair_elem.1172" }
%"struct.std::__1::__compressed_pair_elem.1172" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.1173", %"class.std::__1::vector.1173", %"class.std::__1::vector.1180" }
%"class.std::__1::vector.1173" = type { %"class.std::__1::__vector_base.1174" }
%"class.std::__1::__vector_base.1174" = type { i8**, i8**, %"class.std::__1::__compressed_pair.1175" }
%"class.std::__1::__compressed_pair.1175" = type { %"struct.std::__1::__compressed_pair_elem.1176" }
%"struct.std::__1::__compressed_pair_elem.1176" = type { i8** }
%"class.std::__1::vector.1180" = type { %"class.std::__1::__vector_base.1181" }
%"class.std::__1::__vector_base.1181" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.1182" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1182" = type { %"struct.std::__1::__compressed_pair_elem.1183" }
%"struct.std::__1::__compressed_pair_elem.1183" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"class.std::__1::unique_ptr.1190" = type { %"class.std::__1::__compressed_pair.1191" }
%"class.std::__1::__compressed_pair.1191" = type { %"struct.std::__1::__compressed_pair_elem.1192" }
%"struct.std::__1::__compressed_pair_elem.1192" = type { %"class.cc::Region"* }
%"class.cc::PictureLayerTilingClient" = type { i32 (...)** }
%"class.cc::ImageAnimationController::AnimationDriver" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1196" = type { %"class.std::__1::__compressed_pair.1197" }
%"class.std::__1::__compressed_pair.1197" = type { %"struct.std::__1::__compressed_pair_elem.1198" }
%"struct.std::__1::__compressed_pair_elem.1198" = type { %"class.cc::PictureLayerTilingSet"* }
%"class.cc::PictureLayerTilingSet" = type { %"class.std::__1::vector.1199", i32, float, i32, i32, %"class.cc::PictureLayerTilingClient"*, float, %"class.std::__1::deque.1241", %"struct.cc::PictureLayerTilingSet::StateSinceLastTilePriorityUpdate", %class.scoped_refptr.1204, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect" }
%"class.std::__1::vector.1199" = type { %"class.std::__1::__vector_base.1200" }
%"class.std::__1::__vector_base.1200" = type { %"class.std::__1::unique_ptr.1201"*, %"class.std::__1::unique_ptr.1201"*, %"class.std::__1::__compressed_pair.1236" }
%"class.std::__1::unique_ptr.1201" = type { %"class.std::__1::__compressed_pair.1202" }
%"class.std::__1::__compressed_pair.1202" = type { %"struct.std::__1::__compressed_pair_elem.1203" }
%"struct.std::__1::__compressed_pair_elem.1203" = type { %"class.cc::PictureLayerTiling"* }
%"class.cc::PictureLayerTiling" = type <{ %"class.gfx::AxisTransform2d", %"class.cc::PictureLayerTilingClient"*, i32, [4 x i8], %class.scoped_refptr.1204, float, float, i32, i8, [3 x i8], %"class.cc::TilingData", [4 x i8], %"class.std::__1::unordered_map.1207", %"class.gfx::Rect", i8, [3 x i8], %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", float, %"class.cc::Occlusion", float, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.gfx::AxisTransform2d" = type { %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"class.cc::TilingData" = type { %"class.gfx::Size", %"class.gfx::Size", i32, i32, i32 }
%"class.std::__1::unordered_map.1207" = type { %"class.std::__1::__hash_table.1208" }
%"class.std::__1::__hash_table.1208" = type <{ %"class.std::__1::unique_ptr.1209", %"class.std::__1::__compressed_pair.1219", %"class.std::__1::__compressed_pair.1224", %"class.std::__1::__compressed_pair.1227", [4 x i8] }>
%"class.std::__1::unique_ptr.1209" = type { %"class.std::__1::__compressed_pair.1210" }
%"class.std::__1::__compressed_pair.1210" = type { %"struct.std::__1::__compressed_pair_elem.1211", %"struct.std::__1::__compressed_pair_elem.1213" }
%"struct.std::__1::__compressed_pair_elem.1211" = type { %"struct.std::__1::__hash_node_base.1212"** }
%"struct.std::__1::__hash_node_base.1212" = type { %"struct.std::__1::__hash_node_base.1212"* }
%"struct.std::__1::__compressed_pair_elem.1213" = type { %"class.std::__1::__bucket_list_deallocator.1214" }
%"class.std::__1::__bucket_list_deallocator.1214" = type { %"class.std::__1::__compressed_pair.1215" }
%"class.std::__1::__compressed_pair.1215" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.1219" = type { %"struct.std::__1::__compressed_pair_elem.1220" }
%"struct.std::__1::__compressed_pair_elem.1220" = type { %"struct.std::__1::__hash_node_base.1212" }
%"class.std::__1::__compressed_pair.1224" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.1227" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.1236" = type { %"struct.std::__1::__compressed_pair_elem.1237" }
%"struct.std::__1::__compressed_pair_elem.1237" = type { %"class.std::__1::unique_ptr.1201"* }
%"class.std::__1::deque.1241" = type { %"class.std::__1::__deque_base.1242" }
%"class.std::__1::__deque_base.1242" = type { %"struct.std::__1::__split_buffer.1243", i64, %"class.std::__1::__compressed_pair.1249" }
%"struct.std::__1::__split_buffer.1243" = type { %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"class.std::__1::__compressed_pair.1244" }
%"struct.cc::PictureLayerTilingSet::FrameVisibleRect" = type { %"class.gfx::Rect", double }
%"class.std::__1::__compressed_pair.1244" = type { %"struct.std::__1::__compressed_pair_elem.1245" }
%"struct.std::__1::__compressed_pair_elem.1245" = type { %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"** }
%"class.std::__1::__compressed_pair.1249" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.cc::PictureLayerTilingSet::StateSinceLastTilePriorityUpdate" = type { i8, i8 }
%class.scoped_refptr.1204 = type { %"class.cc::RasterSource"* }
%"class.cc::RasterSource" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1205", [4 x i8], i64, %class.scoped_refptr.1206, i32, i8, i8, [2 x i8], i32, %"class.gfx::Rect", %"class.gfx::Size", i32, float, [4 x i8] }>
%"class.base::RefCountedThreadSafe.1205" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.1206 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type opaque
%"class.gfx::Vector2dF" = type { float, float }
%"class.absl::optional.1256" = type { %"class.absl::optional_internal::optional_data.1257" }
%"class.absl::optional_internal::optional_data.1257" = type { %"class.absl::optional_internal::optional_data_base.1258" }
%"class.absl::optional_internal::optional_data_base.1258" = type { %"class.absl::optional_internal::optional_data_dtor_base.1259" }
%"class.absl::optional_internal::optional_data_dtor_base.1259" = type { i8, %union.anon.1260 }
%union.anon.1260 = type { %"class.gfx::Size" }
%"class.std::__1::vector.1261" = type { %"class.std::__1::__vector_base.1262" }
%"class.std::__1::__vector_base.1262" = type { %"class.cc::PictureLayerTiling"**, %"class.cc::PictureLayerTiling"**, %"class.std::__1::__compressed_pair.1263" }
%"class.std::__1::__compressed_pair.1263" = type { %"struct.std::__1::__compressed_pair_elem.1264" }
%"struct.std::__1::__compressed_pair_elem.1264" = type { %"class.cc::PictureLayerTiling"** }
%"class.base::flat_map.1268" = type { %"class.base::internal::flat_tree.1269" }
%"class.base::internal::flat_tree.1269" = type { %"class.std::__1::vector.1270" }
%"class.std::__1::vector.1270" = type { %"class.std::__1::__vector_base.1271" }
%"class.std::__1::__vector_base.1271" = type { %"struct.std::__1::pair.1272"*, %"struct.std::__1::pair.1272"*, %"class.std::__1::__compressed_pair.1273" }
%"struct.std::__1::pair.1272" = type opaque
%"class.std::__1::__compressed_pair.1273" = type { %"struct.std::__1::__compressed_pair_elem.1274" }
%"struct.std::__1::__compressed_pair_elem.1274" = type { %"struct.std::__1::pair.1272"* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }

@_ZN2cc18TileSizeCalculatorC1EPNS_16PictureLayerImplE = hidden unnamed_addr alias void (%"class.cc::TileSizeCalculator"*, %"class.cc::PictureLayerImpl"*), void (%"class.cc::TileSizeCalculator"*, %"class.cc::PictureLayerImpl"*)* @_ZN2cc18TileSizeCalculatorC2EPNS_16PictureLayerImplE

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2cc18TileSizeCalculator15AffectingParamseqERKS1_(%"struct.cc::TileSizeCalculator::AffectingParams"* nocapture readonly, %"struct.cc::TileSizeCalculator::AffectingParams"* nocapture readonly dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.cc::TileSizeCalculator::AffectingParams", %"struct.cc::TileSizeCalculator::AffectingParams"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.cc::TileSizeCalculator::AffectingParams", %"struct.cc::TileSizeCalculator::AffectingParams"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %80

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.cc::TileSizeCalculator::AffectingParams", %"struct.cc::TileSizeCalculator::AffectingParams"* %0, i64 0, i32 1
  %10 = load i8, i8* %9, align 4, !range !2
  %11 = getelementptr inbounds %"struct.cc::TileSizeCalculator::AffectingParams", %"struct.cc::TileSizeCalculator::AffectingParams"* %1, i64 0, i32 1
  %12 = load i8, i8* %11, align 4, !range !2
  %13 = icmp eq i8 %10, %12
  br i1 %13, label %14, label %80

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.cc::TileSizeCalculator::AffectingParams", %"struct.cc::TileSizeCalculator::AffectingParams"* %0, i64 0, i32 2
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %"struct.cc::TileSizeCalculator::AffectingParams", %"struct.cc::TileSizeCalculator::AffectingParams"* %1, i64 0, i32 2
  %18 = load float, float* %17, align 4
  %19 = fcmp oeq float %16, %18
  br i1 %19, label %20, label %80

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.cc::TileSizeCalculator::AffectingParams", %"struct.cc::TileSizeCalculator::AffectingParams"* %0, i64 0, i32 3, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"struct.cc::TileSizeCalculator::AffectingParams", %"struct.cc::TileSizeCalculator::AffectingParams"* %1, i64 0, i32 3, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %26, label %80

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"struct.cc::TileSizeCalculator::AffectingParams", %"struct.cc::TileSizeCalculator::AffectingParams"* %0, i64 0, i32 3, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"struct.cc::TileSizeCalculator::AffectingParams", %"struct.cc::TileSizeCalculator::AffectingParams"* %1, i64 0, i32 3, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %28, %30
  br i1 %31, label %32, label %80

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"struct.cc::TileSizeCalculator::AffectingParams", %"struct.cc::TileSizeCalculator::AffectingParams"* %0, i64 0, i32 5, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"struct.cc::TileSizeCalculator::AffectingParams", %"struct.cc::TileSizeCalculator::AffectingParams"* %1, i64 0, i32 5, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %34, %36
  br i1 %37, label %38, label %80

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"struct.cc::TileSizeCalculator::AffectingParams", %"struct.cc::TileSizeCalculator::AffectingParams"* %0, i64 0, i32 5, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"struct.cc::TileSizeCalculator::AffectingParams", %"struct.cc::TileSizeCalculator::AffectingParams"* %1, i64 0, i32 5, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %40, %42
  br i1 %43, label %44, label %80

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"struct.cc::TileSizeCalculator::AffectingParams", %"struct.cc::TileSizeCalculator::AffectingParams"* %0, i64 0, i32 6, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"struct.cc::TileSizeCalculator::AffectingParams", %"struct.cc::TileSizeCalculator::AffectingParams"* %1, i64 0, i32 6, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %46, %48
  br i1 %49, label %50, label %80

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"struct.cc::TileSizeCalculator::AffectingParams", %"struct.cc::TileSizeCalculator::AffectingParams"* %0, i64 0, i32 6, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"struct.cc::TileSizeCalculator::AffectingParams", %"struct.cc::TileSizeCalculator::AffectingParams"* %1, i64 0, i32 6, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %52, %54
  br i1 %55, label %56, label %80

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"struct.cc::TileSizeCalculator::AffectingParams", %"struct.cc::TileSizeCalculator::AffectingParams"* %0, i64 0, i32 7, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"struct.cc::TileSizeCalculator::AffectingParams", %"struct.cc::TileSizeCalculator::AffectingParams"* %1, i64 0, i32 7, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %58, %60
  br i1 %61, label %62, label %80

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"struct.cc::TileSizeCalculator::AffectingParams", %"struct.cc::TileSizeCalculator::AffectingParams"* %0, i64 0, i32 7, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"struct.cc::TileSizeCalculator::AffectingParams", %"struct.cc::TileSizeCalculator::AffectingParams"* %1, i64 0, i32 7, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %64, %66
  br i1 %67, label %68, label %80

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"struct.cc::TileSizeCalculator::AffectingParams", %"struct.cc::TileSizeCalculator::AffectingParams"* %0, i64 0, i32 8, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %"struct.cc::TileSizeCalculator::AffectingParams", %"struct.cc::TileSizeCalculator::AffectingParams"* %1, i64 0, i32 8, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %70, %72
  br i1 %73, label %74, label %80

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"struct.cc::TileSizeCalculator::AffectingParams", %"struct.cc::TileSizeCalculator::AffectingParams"* %0, i64 0, i32 8, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %"struct.cc::TileSizeCalculator::AffectingParams", %"struct.cc::TileSizeCalculator::AffectingParams"* %1, i64 0, i32 8, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %76, %78
  br label %80

80:                                               ; preds = %56, %44, %32, %20, %74, %68, %62, %50, %38, %26, %14, %8, %2
  %81 = phi i1 [ false, %62 ], [ false, %50 ], [ false, %38 ], [ false, %26 ], [ false, %14 ], [ false, %8 ], [ false, %2 ], [ false, %68 ], [ %79, %74 ], [ false, %20 ], [ false, %32 ], [ false, %44 ], [ false, %56 ]
  ret i1 %81
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc18TileSizeCalculatorC2EPNS_16PictureLayerImplE(%"class.cc::TileSizeCalculator"* nocapture, %"class.cc::PictureLayerImpl"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %0, i64 0, i32 0
  store %"class.cc::PictureLayerImpl"* %1, %"class.cc::PictureLayerImpl"** %3, align 8
  %4 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %0, i64 0, i32 1, i32 0
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %0, i64 0, i32 1, i32 1
  store i8 0, i8* %5, align 4
  %6 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %0, i64 0, i32 1, i32 2
  store float 0.000000e+00, float* %6, align 4
  %7 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %0, i64 0, i32 1, i32 3, i32 0
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %0, i64 0, i32 1, i32 3, i32 1
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %0, i64 0, i32 1, i32 5, i32 0
  %10 = bitcast i32* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %10, i8 0, i64 40, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc18TileSizeCalculator24IsAffectingParamsChangedEv(%"class.cc::TileSizeCalculator"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %0, i64 0, i32 0
  %3 = bitcast %"class.cc::TileSizeCalculator"* %0 to %"class.cc::LayerImpl"**
  %4 = load %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %3, align 8, !noalias !3
  %5 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %4, i64 0, i32 3
  %6 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %5, align 8, !noalias !3
  %7 = tail call i32 @_ZNK2cc13LayerTreeImpl16max_texture_sizeEv(%"class.cc::LayerTreeImpl"* %6) #4, !noalias !3
  %8 = tail call zeroext i1 @_ZNK2cc13LayerTreeImpl21use_gpu_rasterizationEv(%"class.cc::LayerTreeImpl"* %6) #4, !noalias !3
  %9 = tail call dereferenceable(296) %"class.cc::LayerTreeSettings"* @_ZNK2cc13LayerTreeImpl8settingsEv(%"class.cc::LayerTreeImpl"* %6) #4, !noalias !3
  %10 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %9, i64 0, i32 33
  %11 = bitcast %"class.gfx::Size"* %10 to i64*
  %12 = load i64, i64* %11, align 4, !noalias !3
  %13 = trunc i64 %12 to i32
  %14 = lshr i64 %12, 32
  %15 = trunc i64 %14 to i32
  %16 = tail call dereferenceable(296) %"class.cc::LayerTreeSettings"* @_ZNK2cc13LayerTreeImpl8settingsEv(%"class.cc::LayerTreeImpl"* %6) #4, !noalias !3
  %17 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %16, i64 0, i32 34
  %18 = load i32, i32* %17, align 8, !noalias !3
  %19 = load %"class.cc::PictureLayerImpl"*, %"class.cc::PictureLayerImpl"** %2, align 8, !noalias !3
  %20 = getelementptr inbounds %"class.cc::PictureLayerImpl", %"class.cc::PictureLayerImpl"* %19, i64 0, i32 21
  %21 = bitcast %"class.gfx::Size"* %20 to i64*
  %22 = load i64, i64* %21, align 8, !noalias !3
  %23 = trunc i64 %22 to i32
  %24 = lshr i64 %22, 32
  %25 = trunc i64 %24 to i32
  %26 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %6, i64 0, i32 14
  %27 = bitcast float* %26 to i32*
  %28 = load i32, i32* %27, align 4, !noalias !3
  %29 = tail call dereferenceable(296) %"class.cc::LayerTreeSettings"* @_ZNK2cc13LayerTreeImpl8settingsEv(%"class.cc::LayerTreeImpl"* %6) #4, !noalias !3
  %30 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %29, i64 0, i32 32
  %31 = bitcast %"class.gfx::Size"* %30 to i64*
  %32 = load i64, i64* %31, align 4, !noalias !3
  %33 = trunc i64 %32 to i32
  %34 = lshr i64 %32, 32
  %35 = trunc i64 %34 to i32
  %36 = tail call dereferenceable(296) %"class.cc::LayerTreeSettings"* @_ZNK2cc13LayerTreeImpl8settingsEv(%"class.cc::LayerTreeImpl"* %6) #4, !noalias !3
  %37 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %36, i64 0, i32 31
  %38 = bitcast %"class.gfx::Size"* %37 to i64*
  %39 = load i64, i64* %38, align 4, !noalias !3
  %40 = trunc i64 %39 to i32
  %41 = lshr i64 %39, 32
  %42 = trunc i64 %41 to i32
  %43 = load %"class.cc::PictureLayerImpl"*, %"class.cc::PictureLayerImpl"** %2, align 8, !noalias !3
  %44 = getelementptr inbounds %"class.cc::PictureLayerImpl", %"class.cc::PictureLayerImpl"* %43, i64 0, i32 24
  %45 = bitcast %"class.gfx::Size"* %44 to i64*
  %46 = load i64, i64* %45, align 8, !noalias !3
  %47 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %0, i64 0, i32 1
  %48 = getelementptr inbounds %"struct.cc::TileSizeCalculator::AffectingParams", %"struct.cc::TileSizeCalculator::AffectingParams"* %47, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, %7
  br i1 %50, label %51, label %104

51:                                               ; preds = %1
  %52 = zext i1 %8 to i8
  %53 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %0, i64 0, i32 1, i32 1
  %54 = load i8, i8* %53, align 4, !range !2
  %55 = icmp eq i8 %54, %52
  br i1 %55, label %56, label %104

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %0, i64 0, i32 1, i32 2
  %58 = load float, float* %57, align 4
  %59 = bitcast i32 %28 to float
  %60 = fcmp oeq float %58, %59
  br i1 %60, label %61, label %104

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %0, i64 0, i32 1, i32 3, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, %13
  br i1 %64, label %65, label %104

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %0, i64 0, i32 1, i32 3, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, %15
  br i1 %68, label %69, label %104

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %0, i64 0, i32 1, i32 5, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, %23
  br i1 %72, label %73, label %104

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %0, i64 0, i32 1, i32 5, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, %25
  br i1 %76, label %77, label %104

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %0, i64 0, i32 1, i32 6, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, %33
  br i1 %80, label %81, label %104

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %0, i64 0, i32 1, i32 6, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, %35
  br i1 %84, label %85, label %104

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %0, i64 0, i32 1, i32 7, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %87, %40
  br i1 %88, label %89, label %104

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %0, i64 0, i32 1, i32 7, i32 1
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, %42
  br i1 %92, label %93, label %104

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %0, i64 0, i32 1, i32 8, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = trunc i64 %46 to i32
  %97 = icmp eq i32 %95, %96
  br i1 %97, label %98, label %104

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %0, i64 0, i32 1, i32 8, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = lshr i64 %46, 32
  %102 = trunc i64 %101 to i32
  %103 = icmp eq i32 %100, %102
  br i1 %103, label %124, label %104

104:                                              ; preds = %85, %77, %69, %61, %93, %1, %51, %56, %65, %73, %81, %89, %98
  %105 = bitcast %"struct.cc::TileSizeCalculator::AffectingParams"* %47 to i64*
  %106 = zext i1 %8 to i64
  %107 = shl nuw nsw i64 %106, 32
  %108 = zext i32 %7 to i64
  %109 = or i64 %107, %108
  %110 = or i64 %109, -6148915424244269056
  store i64 %110, i64* %105, align 8
  %111 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %0, i64 0, i32 1, i32 2
  %112 = bitcast float* %111 to i32*
  store i32 %28, i32* %112, align 8
  %113 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %0, i64 0, i32 1, i32 3
  %114 = bitcast %"class.gfx::Size"* %113 to i64*
  store i64 %12, i64* %114, align 4
  %115 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %0, i64 0, i32 1, i32 4
  store i32 %18, i32* %115, align 4
  %116 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %0, i64 0, i32 1, i32 5
  %117 = bitcast %"class.gfx::Size"* %116 to i64*
  store i64 %22, i64* %117, align 8
  %118 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %0, i64 0, i32 1, i32 6
  %119 = bitcast %"class.gfx::Size"* %118 to i64*
  store i64 %32, i64* %119, align 8
  %120 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %0, i64 0, i32 1, i32 7
  %121 = bitcast %"class.gfx::Size"* %120 to i64*
  store i64 %39, i64* %121, align 8
  %122 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %0, i64 0, i32 1, i32 8
  %123 = bitcast %"class.gfx::Size"* %122 to i64*
  store i64 %46, i64* %123, align 8
  br label %124

124:                                              ; preds = %98, %104
  %125 = phi i1 [ true, %104 ], [ false, %98 ]
  ret i1 %125
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc18TileSizeCalculator18GetAffectingParamsEv(%"struct.cc::TileSizeCalculator::AffectingParams"* noalias nocapture sret, %"class.cc::TileSizeCalculator"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.cc::TileSizeCalculator::AffectingParams"* %0 to i64*
  store i64 -6148914691236517206, i64* %3, align 4
  %4 = getelementptr inbounds %"struct.cc::TileSizeCalculator::AffectingParams", %"struct.cc::TileSizeCalculator::AffectingParams"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"struct.cc::TileSizeCalculator::AffectingParams", %"struct.cc::TileSizeCalculator::AffectingParams"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.cc::TileSizeCalculator::AffectingParams", %"struct.cc::TileSizeCalculator::AffectingParams"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %1, i64 0, i32 0
  %8 = bitcast %"class.cc::TileSizeCalculator"* %1 to %"class.cc::LayerImpl"**
  %9 = load %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %9, i64 0, i32 3
  %11 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %10, align 8
  %12 = tail call i32 @_ZNK2cc13LayerTreeImpl16max_texture_sizeEv(%"class.cc::LayerTreeImpl"* %11) #4
  store i32 %12, i32* %4, align 4
  %13 = tail call zeroext i1 @_ZNK2cc13LayerTreeImpl21use_gpu_rasterizationEv(%"class.cc::LayerTreeImpl"* %11) #4
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %5, align 4
  %15 = tail call dereferenceable(296) %"class.cc::LayerTreeSettings"* @_ZNK2cc13LayerTreeImpl8settingsEv(%"class.cc::LayerTreeImpl"* %11) #4
  %16 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %15, i64 0, i32 33
  %17 = getelementptr inbounds %"struct.cc::TileSizeCalculator::AffectingParams", %"struct.cc::TileSizeCalculator::AffectingParams"* %0, i64 0, i32 3
  %18 = bitcast %"class.gfx::Size"* %16 to i64*
  %19 = bitcast %"class.gfx::Size"* %17 to i64*
  %20 = load i64, i64* %18, align 4
  store i64 %20, i64* %19, align 4
  %21 = tail call dereferenceable(296) %"class.cc::LayerTreeSettings"* @_ZNK2cc13LayerTreeImpl8settingsEv(%"class.cc::LayerTreeImpl"* %11) #4
  %22 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %21, i64 0, i32 34
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %"struct.cc::TileSizeCalculator::AffectingParams", %"struct.cc::TileSizeCalculator::AffectingParams"* %0, i64 0, i32 4
  store i32 %23, i32* %24, align 4
  %25 = load %"class.cc::PictureLayerImpl"*, %"class.cc::PictureLayerImpl"** %7, align 8
  %26 = getelementptr inbounds %"class.cc::PictureLayerImpl", %"class.cc::PictureLayerImpl"* %25, i64 0, i32 21
  %27 = bitcast %"class.gfx::Size"* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"struct.cc::TileSizeCalculator::AffectingParams", %"struct.cc::TileSizeCalculator::AffectingParams"* %0, i64 0, i32 5
  %30 = bitcast %"class.gfx::Size"* %29 to i64*
  store i64 %28, i64* %30, align 4
  %31 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %11, i64 0, i32 14
  %32 = bitcast float* %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = bitcast float* %6 to i32*
  store i32 %33, i32* %34, align 4
  %35 = tail call dereferenceable(296) %"class.cc::LayerTreeSettings"* @_ZNK2cc13LayerTreeImpl8settingsEv(%"class.cc::LayerTreeImpl"* %11) #4
  %36 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %35, i64 0, i32 32
  %37 = getelementptr inbounds %"struct.cc::TileSizeCalculator::AffectingParams", %"struct.cc::TileSizeCalculator::AffectingParams"* %0, i64 0, i32 6
  %38 = bitcast %"class.gfx::Size"* %36 to i64*
  %39 = bitcast %"class.gfx::Size"* %37 to i64*
  %40 = load i64, i64* %38, align 4
  store i64 %40, i64* %39, align 4
  %41 = tail call dereferenceable(296) %"class.cc::LayerTreeSettings"* @_ZNK2cc13LayerTreeImpl8settingsEv(%"class.cc::LayerTreeImpl"* %11) #4
  %42 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %41, i64 0, i32 31
  %43 = getelementptr inbounds %"struct.cc::TileSizeCalculator::AffectingParams", %"struct.cc::TileSizeCalculator::AffectingParams"* %0, i64 0, i32 7
  %44 = bitcast %"class.gfx::Size"* %42 to i64*
  %45 = bitcast %"class.gfx::Size"* %43 to i64*
  %46 = load i64, i64* %44, align 4
  store i64 %46, i64* %45, align 4
  %47 = load %"class.cc::PictureLayerImpl"*, %"class.cc::PictureLayerImpl"** %7, align 8
  %48 = getelementptr inbounds %"class.cc::PictureLayerImpl", %"class.cc::PictureLayerImpl"* %47, i64 0, i32 24
  %49 = bitcast %"class.gfx::Size"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"struct.cc::TileSizeCalculator::AffectingParams", %"struct.cc::TileSizeCalculator::AffectingParams"* %0, i64 0, i32 8
  %52 = bitcast %"class.gfx::Size"* %51 to i64*
  store i64 %50, i64* %52, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare i32 @_ZNK2cc13LayerTreeImpl16max_texture_sizeEv(%"class.cc::LayerTreeImpl"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK2cc13LayerTreeImpl21use_gpu_rasterizationEv(%"class.cc::LayerTreeImpl"*) local_unnamed_addr #3

declare dereferenceable(296) %"class.cc::LayerTreeSettings"* @_ZNK2cc13LayerTreeImpl8settingsEv(%"class.cc::LayerTreeImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2cc18TileSizeCalculator17CalculateTileSizeEv(%"class.cc::TileSizeCalculator"*) local_unnamed_addr #1 align 2 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %0, i64 0, i32 0
  %4 = load %"class.cc::PictureLayerImpl"*, %"class.cc::PictureLayerImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.cc::PictureLayerImpl", %"class.cc::PictureLayerImpl"* %4, i64 0, i32 24
  %6 = bitcast %"class.gfx::Size"* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = trunc i64 %7 to i32
  %9 = lshr i64 %7, 32
  %10 = trunc i64 %9 to i32
  %11 = getelementptr inbounds %"class.cc::PictureLayerImpl", %"class.cc::PictureLayerImpl"* %4, i64 0, i32 16
  %12 = load i8, i8* %11, align 4
  %13 = and i8 %12, 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %205

15:                                               ; preds = %1
  %16 = tail call zeroext i1 @_ZN2cc18TileSizeCalculator24IsAffectingParamsChangedEv(%"class.cc::TileSizeCalculator"* %0)
  br i1 %16, label %21, label %17

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %0, i64 0, i32 2
  %19 = bitcast %"class.gfx::Size"* %18 to i64*
  %20 = load i64, i64* %19, align 8
  br label %205

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %0, i64 0, i32 1, i32 1
  %23 = load i8, i8* %22, align 4, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %132, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %0, i64 0, i32 1, i32 3
  %27 = bitcast %"class.gfx::Size"* %26 to i64*
  %28 = load i64, i64* %27, align 4
  %29 = trunc i64 %28 to i32
  %30 = lshr i64 %28, 32
  %31 = trunc i64 %30 to i32
  %32 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %0, i64 0, i32 1, i32 5
  %33 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %0, i64 0, i32 1, i32 2
  %34 = load float, float* %33, align 8
  %35 = bitcast i64* %2 to %"class.gfx::Size"*
  %36 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #4
  %37 = fdiv float 1.000000e+00, %34
  %38 = tail call i64 @_ZN3gfx17ScaleToCeiledSizeERKNS_4SizeEf(%"class.gfx::Size"* dereferenceable(8) %32, float %37) #4
  store i64 %38, i64* %2, align 8
  %39 = call i64 @_ZN3gfx17ScaleToCeiledSizeERKNS_4SizeEf(%"class.gfx::Size"* nonnull dereferenceable(8) %35, float %34) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #4
  %40 = trunc i64 %39 to i32
  %41 = lshr i64 %39, 32
  %42 = trunc i64 %41 to i32
  %43 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %0, i64 0, i32 1, i32 4
  %44 = load i32, i32* %43, align 4
  %45 = sdiv i32 %40, 2
  %46 = icmp slt i32 %45, %8
  %47 = select i1 %46, i32 4, i32 2
  %48 = sdiv i32 %40, 4
  %49 = icmp slt i32 %48, %8
  %50 = select i1 %49, i32 %47, i32 1
  %51 = icmp sgt i32 %42, 0
  %52 = add nsw i32 %42, -1
  %53 = add nuw i32 %52, %50
  %54 = select i1 %51, i32 %53, i32 %42
  %55 = select i1 %51, i32 %53, i32 %42
  %56 = srem i32 %54, %50
  %57 = sub i32 %55, %56
  %58 = sdiv i32 %57, %50
  %59 = add nsw i32 %40, 2
  %60 = add nsw i32 %58, 2
  %61 = icmp sgt i32 %59, 0
  %62 = add i32 %40, 33
  %63 = select i1 %61, i32 %62, i32 %59
  %64 = select i1 %61, i32 %62, i32 %59
  %65 = srem i32 %63, 32
  %66 = sub i32 %64, %65
  %67 = icmp sgt i32 %60, 0
  %68 = add i32 %58, 33
  %69 = select i1 %67, i32 %68, i32 %60
  %70 = select i1 %67, i32 %68, i32 %60
  %71 = srem i32 %69, 32
  %72 = sub i32 %70, %71
  %73 = icmp slt i32 %72, %44
  %74 = select i1 %73, i32 %44, i32 %72
  %75 = icmp eq i32 %29, 0
  %76 = icmp eq i32 %31, 0
  %77 = or i1 %75, %76
  br i1 %77, label %83, label %78

78:                                               ; preds = %25
  %79 = icmp sgt i32 %66, %29
  %80 = select i1 %79, i32 %29, i32 %66
  %81 = icmp sgt i32 %74, %31
  %82 = select i1 %81, i32 %31, i32 %74
  br label %83

83:                                               ; preds = %25, %78
  %84 = phi i32 [ %82, %78 ], [ %74, %25 ]
  %85 = phi i32 [ %80, %78 ], [ %66, %25 ]
  %86 = icmp sgt i32 %85, 0
  %87 = select i1 %86, i32 %85, i32 0
  %88 = icmp sgt i32 %84, 0
  %89 = select i1 %88, i32 %84, i32 0
  %90 = icmp slt i32 %87, %8
  br i1 %90, label %91, label %150

91:                                               ; preds = %83
  %92 = add nsw i32 %40, 1
  %93 = sdiv i32 %92, 2
  %94 = icmp sgt i32 %93, 0
  %95 = select i1 %94, i32 %93, i32 0
  %96 = lshr i32 %95, 1
  %97 = icmp slt i32 %96, %8
  %98 = select i1 %97, i32 4, i32 2
  %99 = lshr i32 %95, 2
  %100 = icmp slt i32 %99, %8
  %101 = select i1 %100, i32 %98, i32 1
  %102 = add nsw i32 %42, -1
  %103 = add nuw i32 %102, %101
  %104 = select i1 %51, i32 %103, i32 %42
  %105 = select i1 %51, i32 %103, i32 %42
  %106 = srem i32 %104, %101
  %107 = sub i32 %105, %106
  %108 = sdiv i32 %107, %101
  %109 = add nsw i32 %108, 2
  %110 = add nuw nsw i32 %95, 33
  %111 = and i32 %110, 2147483616
  %112 = icmp sgt i32 %109, 0
  %113 = add i32 %108, 33
  %114 = select i1 %112, i32 %113, i32 %109
  %115 = select i1 %112, i32 %113, i32 %109
  %116 = srem i32 %114, 32
  %117 = sub i32 %115, %116
  %118 = icmp slt i32 %117, %44
  %119 = select i1 %118, i32 %44, i32 %117
  br i1 %77, label %125, label %120

120:                                              ; preds = %91
  %121 = icmp sgt i32 %111, %29
  %122 = select i1 %121, i32 %29, i32 %111
  %123 = icmp sgt i32 %119, %31
  %124 = select i1 %123, i32 %31, i32 %119
  br label %125

125:                                              ; preds = %91, %120
  %126 = phi i32 [ %124, %120 ], [ %119, %91 ]
  %127 = phi i32 [ %122, %120 ], [ %111, %91 ]
  %128 = icmp sgt i32 %127, 0
  %129 = select i1 %128, i32 %127, i32 0
  %130 = icmp sgt i32 %126, 0
  %131 = select i1 %130, i32 %126, i32 0
  br label %150

132:                                              ; preds = %21
  %133 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %0, i64 0, i32 1, i32 6, i32 0
  %134 = load i32, i32* %133, align 4
  %135 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %0, i64 0, i32 1, i32 6, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %0, i64 0, i32 1, i32 7, i32 0
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %0, i64 0, i32 1, i32 7, i32 1
  %140 = load i32, i32* %139, align 4
  %141 = icmp sgt i32 %138, %8
  %142 = select i1 %141, i32 %136, i32 %140
  %143 = icmp sgt i32 %142, %10
  %144 = icmp sgt i32 %134, %8
  %145 = icmp sgt i32 %136, %10
  %146 = and i1 %144, %145
  %147 = select i1 %146, i32 %136, i32 %142
  %148 = or i1 %146, %143
  %149 = select i1 %148, i32 %134, i32 %138
  br label %150

150:                                              ; preds = %132, %83, %125
  %151 = phi i32 [ %131, %125 ], [ %89, %83 ], [ %147, %132 ]
  %152 = phi i32 [ %129, %125 ], [ %87, %83 ], [ %149, %132 ]
  %153 = icmp sgt i32 %152, %8
  br i1 %153, label %154, label %163

154:                                              ; preds = %150
  %155 = icmp sgt i32 %8, 0
  %156 = add nuw i32 %8, 63
  %157 = select i1 %155, i32 %156, i32 %8
  %158 = select i1 %155, i32 %156, i32 %8
  %159 = srem i32 %157, 64
  %160 = sub i32 %158, %159
  %161 = icmp slt i32 %152, %160
  %162 = select i1 %161, i32 %152, i32 %160
  br label %163

163:                                              ; preds = %154, %150
  %164 = phi i32 [ %162, %154 ], [ %152, %150 ]
  %165 = icmp sgt i32 %151, %10
  br i1 %165, label %166, label %175

166:                                              ; preds = %163
  %167 = icmp sgt i32 %10, 0
  %168 = add nuw i32 %10, 63
  %169 = select i1 %167, i32 %168, i32 %10
  %170 = select i1 %167, i32 %168, i32 %10
  %171 = srem i32 %169, 64
  %172 = sub i32 %170, %171
  %173 = icmp slt i32 %151, %172
  %174 = select i1 %173, i32 %151, i32 %172
  br label %175

175:                                              ; preds = %166, %163
  %176 = phi i32 [ %174, %166 ], [ %151, %163 ]
  %177 = icmp sgt i32 %164, 0
  %178 = add nuw i32 %164, 3
  %179 = select i1 %177, i32 %178, i32 %164
  %180 = select i1 %177, i32 %178, i32 %164
  %181 = srem i32 %179, 4
  %182 = sub i32 %180, %181
  %183 = icmp sgt i32 %176, 0
  %184 = add nuw i32 %176, 3
  %185 = select i1 %183, i32 %184, i32 %176
  %186 = select i1 %183, i32 %184, i32 %176
  %187 = srem i32 %185, 4
  %188 = sub i32 %186, %187
  %189 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %0, i64 0, i32 1, i32 0
  %190 = load i32, i32* %189, align 4
  %191 = icmp slt i32 %190, %182
  %192 = select i1 %191, i32 %190, i32 %182
  %193 = icmp slt i32 %190, %188
  %194 = select i1 %193, i32 %190, i32 %188
  %195 = icmp sgt i32 %192, 0
  %196 = select i1 %195, i32 %192, i32 0
  %197 = icmp sgt i32 %194, 0
  %198 = select i1 %197, i32 %194, i32 0
  %199 = getelementptr inbounds %"class.cc::TileSizeCalculator", %"class.cc::TileSizeCalculator"* %0, i64 0, i32 2
  %200 = bitcast %"class.gfx::Size"* %199 to i64*
  %201 = zext i32 %198 to i64
  %202 = shl nuw nsw i64 %201, 32
  %203 = zext i32 %196 to i64
  %204 = or i64 %202, %203
  store i64 %204, i64* %200, align 8
  br label %205

205:                                              ; preds = %1, %175, %17
  %206 = phi i64 [ %204, %175 ], [ %20, %17 ], [ %7, %1 ]
  ret i64 %206
}

declare i64 @_ZN3gfx17ScaleToCeiledSizeERKNS_4SizeEf(%"class.gfx::Size"* dereferenceable(8), float) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN2cc18TileSizeCalculator18GetAffectingParamsEv: argument 0"}
!5 = distinct !{!5, !"_ZN2cc18TileSizeCalculator18GetAffectingParamsEv"}
