; ModuleID = '../../third_party/brotli/enc/encode.c'
source_filename = "../../third_party/brotli/enc/encode.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.BrotliEncoderStateStruct = type { %struct.BrotliEncoderParams, %struct.MemoryManager, i64, %struct.RingBuffer, i64, %struct.Command*, i64, i64, i64, i64, i64, [16 x i32], [4 x i32], i16, i8, i8, i8, i8, i64, i8*, %struct.Hasher, [1024 x i32], i32*, i64, [128 x i8], [128 x i16], [512 x i8], i64, i32*, i8*, i8*, i64, i64, %union.anon.0, i32, i32, i32, i32 }
%struct.BrotliEncoderParams = type { i32, i32, i32, i32, i64, i64, i32, i32, %struct.BrotliHasherParams, %struct.BrotliDistanceParams, %struct.BrotliEncoderDictionary }
%struct.BrotliHasherParams = type { i32, i32, i32, i32, i32 }
%struct.BrotliDistanceParams = type { i32, i32, i32, i32, i64 }
%struct.BrotliEncoderDictionary = type { %struct.BrotliDictionary*, i32, i32, i64, i16*, i8*, i16*, %struct.DictWord* }
%struct.BrotliDictionary = type { [32 x i8], [32 x i32], i64, i8* }
%struct.DictWord = type { i8, i8, i16 }
%struct.MemoryManager = type { i8* (i8*, i64)*, void (i8*, i8*)*, i8* }
%struct.RingBuffer = type { i32, i32, i32, i32, i32, i32, i8*, i8* }
%struct.Command = type { i32, i32, i32, i16, i16 }
%struct.Hasher = type { %struct.HasherCommon, %union.anon }
%struct.HasherCommon = type { i8*, i64, i64, %struct.BrotliHasherParams, i32 }
%union.anon = type { %struct.H42 }
%struct.H42 = type { [512 x i16], i64, i8*, %struct.HasherCommon* }
%union.anon.0 = type { [2 x i64] }
%struct.MetaBlockSplit = type { %struct.BlockSplit, %struct.BlockSplit, %struct.BlockSplit, i32*, i64, i32*, i64, %struct.HistogramLiteral*, i64, %struct.HistogramCommand*, i64, %struct.HistogramDistance*, i64 }
%struct.BlockSplit = type { i64, i64, i8*, i32*, i64, i64 }
%struct.HistogramLiteral = type { [256 x i32], i64, double }
%struct.HistogramCommand = type { [704 x i32], i64, double }
%struct.HistogramDistance = type { [544 x i32], i64, double }
%struct.ZopfliNode = type { i32, i32, i32, %union.anon.1 }
%union.anon.1 = type { float }
%struct.BankH40 = type { [65536 x %struct.SlotH40] }
%struct.SlotH40 = type { i16, i16 }
%struct.BankH41 = type { [65536 x %struct.SlotH41] }
%struct.SlotH41 = type { i16, i16 }
%struct.BankH42 = type { [512 x %struct.SlotH42] }
%struct.SlotH42 = type { i16, i16 }

@__const.BrotliCompressBufferQuality10.saved_dist_cache = private unnamed_addr constant [4 x i32] [i32 4, i32 11, i32 15, i32 16], align 16
@_kBrotliContextLookupTable = external constant [2048 x i8], align 16
@kBrotliLog2Table = external hidden local_unnamed_addr constant [256 x double], align 16
@InitCommandPrefixCodes.kDefaultCommandDepths = internal unnamed_addr constant [128 x i8] c"\00\04\04\05\06\06\07\07\07\07\07\08\08\08\08\08\00\00\00\04\04\04\04\04\05\05\06\06\06\06\07\07\07\07\0A\0A\0A\0A\0A\0A\00\04\04\05\05\05\06\06\07\08\08\09\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\05\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\06\06\06\06\06\06\05\05\05\05\05\05\04\04\04\04\04\04\04\05\05\05\05\05\05\06\06\07\07\07\08\0A\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\0C\00\00\00\00", align 16
@InitCommandPrefixCodes.kDefaultCommandBits = internal unnamed_addr constant [128 x i16] [i16 0, i16 0, i16 8, i16 9, i16 3, i16 35, i16 7, i16 71, i16 39, i16 103, i16 23, i16 47, i16 175, i16 111, i16 239, i16 31, i16 0, i16 0, i16 0, i16 4, i16 12, i16 2, i16 10, i16 6, i16 13, i16 29, i16 11, i16 43, i16 27, i16 59, i16 87, i16 55, i16 15, i16 79, i16 319, i16 831, i16 191, i16 703, i16 447, i16 959, i16 0, i16 14, i16 1, i16 25, i16 5, i16 21, i16 19, i16 51, i16 119, i16 159, i16 95, i16 223, i16 479, i16 991, i16 63, i16 575, i16 127, i16 639, i16 383, i16 895, i16 255, i16 767, i16 511, i16 1023, i16 14, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 27, i16 59, i16 7, i16 39, i16 23, i16 55, i16 30, i16 1, i16 17, i16 9, i16 25, i16 5, i16 0, i16 8, i16 4, i16 12, i16 2, i16 10, i16 6, i16 21, i16 13, i16 29, i16 3, i16 19, i16 11, i16 15, i16 47, i16 31, i16 95, i16 63, i16 127, i16 255, i16 767, i16 2815, i16 1791, i16 3839, i16 511, i16 2559, i16 1535, i16 3583, i16 1023, i16 3071, i16 2047, i16 4095, i16 0, i16 0, i16 0, i16 0], align 16
@InitCommandPrefixCodes.kDefaultCommandCode = internal unnamed_addr constant [57 x i8] c"\FFw\D5\BF\E7\DE\EA\9EQ]\DE\C6pW\BCXXX\D8\D8X\D5\CB\8C\EA\E0\C3\87\1F\83\C1`\1Cg\B2\AA\06\83\C1`0\18\CC\A1\CE\88T\94F\E1\B0\D0N\B2\F7\04\00", align 16
@DecideOverLiteralContextModeling.lut = internal unnamed_addr constant [4 x i32] [i32 0, i32 0, i32 1, i32 2], align 16
@ShouldUseComplexStaticContextMap.kStaticContextMapComplexUTF8 = internal constant [64 x i32] [i32 11, i32 11, i32 12, i32 12, i32 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 9, i32 9, i32 2, i32 2, i32 2, i32 2, i32 1, i32 1, i32 1, i32 1, i32 8, i32 3, i32 3, i32 3, i32 1, i32 1, i32 1, i32 1, i32 2, i32 2, i32 2, i32 2, i32 8, i32 4, i32 4, i32 4, i32 8, i32 7, i32 4, i32 4, i32 8, i32 0, i32 0, i32 0, i32 3, i32 3, i32 3, i32 3, i32 5, i32 5, i32 10, i32 5, i32 5, i32 5, i32 10, i32 5, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6], align 16
@ChooseContextMap.kStaticContextMapContinuation = internal constant <{ i32, i32, i32, i32, [60 x i32] }> <{ i32 1, i32 1, i32 2, i32 2, [60 x i32] zeroinitializer }>, align 16
@ChooseContextMap.kStaticContextMapSimpleUTF8 = internal constant <{ i32, i32, i32, i32, [60 x i32] }> <{ i32 0, i32 0, i32 1, i32 1, [60 x i32] zeroinitializer }>, align 16

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @BrotliEncoderSetParameter(%struct.BrotliEncoderStateStruct* nocapture, i32, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 37
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %38

7:                                                ; preds = %3
  switch i32 %1, label %38 [
    i32 0, label %8
    i32 1, label %10
    i32 2, label %12
    i32 3, label %14
    i32 4, label %16
    i32 5, label %22
    i32 6, label %25
    i32 7, label %29
    i32 8, label %31
    i32 9, label %33
  ]

8:                                                ; preds = %7
  %9 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 0
  store i32 %2, i32* %9, align 8
  br label %38

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 1
  store i32 %2, i32* %11, align 4
  br label %38

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 2
  store i32 %2, i32* %13, align 8
  br label %38

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 3
  store i32 %2, i32* %15, align 4
  br label %38

16:                                               ; preds = %7
  %17 = icmp ugt i32 %2, 1
  br i1 %17, label %38, label %18

18:                                               ; preds = %16
  %19 = icmp ne i32 %2, 0
  %20 = zext i1 %19 to i32
  %21 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 6
  store i32 %20, i32* %21, align 8
  br label %38

22:                                               ; preds = %7
  %23 = zext i32 %2 to i64
  %24 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 5
  store i64 %23, i64* %24, align 8
  br label %38

25:                                               ; preds = %7
  %26 = icmp ne i32 %2, 0
  %27 = zext i1 %26 to i32
  %28 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 7
  store i32 %27, i32* %28, align 4
  br label %38

29:                                               ; preds = %7
  %30 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 9, i32 0
  store i32 %2, i32* %30, align 8
  br label %38

31:                                               ; preds = %7
  %32 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 9, i32 1
  store i32 %2, i32* %32, align 4
  br label %38

33:                                               ; preds = %7
  %34 = icmp ugt i32 %2, 1073741824
  br i1 %34, label %38, label %35

35:                                               ; preds = %33
  %36 = zext i32 %2 to i64
  %37 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 4
  store i64 %36, i64* %37, align 8
  br label %38

38:                                               ; preds = %7, %33, %16, %3, %35, %31, %29, %25, %22, %18, %14, %12, %10, %8
  %39 = phi i32 [ 1, %35 ], [ 1, %31 ], [ 1, %29 ], [ 1, %25 ], [ 1, %22 ], [ 1, %18 ], [ 1, %14 ], [ 1, %12 ], [ 1, %10 ], [ 1, %8 ], [ 0, %3 ], [ 0, %16 ], [ 0, %33 ], [ 0, %7 ]
  ret i32 %39
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.BrotliEncoderStateStruct* @BrotliEncoderCreateInstance(i8* (i8*, i64)*, void (i8*, i8*)*, i8*) local_unnamed_addr #1 {
  %4 = icmp ne i8* (i8*, i64)* %0, null
  %5 = icmp ne void (i8*, i8*)* %1, null
  %6 = or i1 %4, %5
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = tail call noalias i8* @malloc(i64 6560) #8
  br label %13

9:                                                ; preds = %3
  %10 = and i1 %4, %5
  br i1 %10, label %11, label %57

11:                                               ; preds = %9
  %12 = tail call i8* %0(i8* %2, i64 6560) #8
  br label %13

13:                                               ; preds = %11, %7
  %14 = phi i8* [ %12, %11 ], [ %8, %7 ]
  %15 = icmp eq i8* %14, null
  br i1 %15, label %57, label %16

16:                                               ; preds = %13
  %17 = bitcast i8* %14 to %struct.BrotliEncoderStateStruct*
  %18 = getelementptr inbounds i8, i8* %14, i64 144
  %19 = bitcast i8* %18 to %struct.MemoryManager*
  tail call void @BrotliInitMemoryManager(%struct.MemoryManager* %19, i8* (i8*, i64)* %0, void (i8*, i8*)* %1, i8* %2) #8
  %20 = bitcast i8* %14 to i32*
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds i8, i8* %14, i64 36
  %22 = bitcast i8* %21 to i32*
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %14, i64 4
  %24 = bitcast i8* %23 to i32*
  store i32 11, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %14, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 22, i32* %26, align 8
  %27 = getelementptr inbounds i8, i8* %14, i64 12
  %28 = getelementptr inbounds i8, i8* %14, i64 88
  %29 = bitcast i8* %28 to %struct.BrotliEncoderDictionary*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %27, i8 0, i64 24, i1 false) #8
  tail call void @BrotliInitEncoderDictionary(%struct.BrotliEncoderDictionary* %29) #8
  %30 = getelementptr inbounds i8, i8* %14, i64 64
  %31 = bitcast i8* %30 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 64, i32 64>, <4 x i32>* %31, align 8
  %32 = getelementptr inbounds i8, i8* %14, i64 80
  %33 = bitcast i8* %32 to i64*
  store i64 67108860, i64* %33, align 8
  %34 = getelementptr inbounds i8, i8* %14, i64 168
  %35 = bitcast i8* %34 to i64*
  store i64 0, i64* %35, align 8
  %36 = getelementptr inbounds i8, i8* %14, i64 356
  store i8 0, i8* %36, align 4
  %37 = getelementptr inbounds i8, i8* %14, i64 357
  store i8 0, i8* %37, align 1
  %38 = getelementptr inbounds i8, i8* %14, i64 360
  %39 = getelementptr inbounds i8, i8* %14, i64 5568
  %40 = getelementptr inbounds i8, i8* %14, i64 6480
  %41 = getelementptr inbounds i8, i8* %14, i64 6548
  %42 = bitcast i8* %41 to i32*
  store i32 0, i32* %42, align 4
  %43 = getelementptr inbounds i8, i8* %14, i64 6552
  %44 = bitcast i8* %43 to i32*
  store i32 0, i32* %44, align 8
  %45 = getelementptr inbounds i8, i8* %14, i64 6556
  %46 = bitcast i8* %45 to i32*
  store i32 0, i32* %46, align 4
  %47 = getelementptr inbounds i8, i8* %14, i64 192
  %48 = getelementptr inbounds i8, i8* %14, i64 272
  %49 = bitcast i8* %48 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 80, i1 false) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 48, i1 false) #8
  store i32 4, i32* %49, align 8
  %50 = getelementptr inbounds i8, i8* %14, i64 276
  %51 = bitcast i8* %50 to i32*
  store i32 11, i32* %51, align 4
  %52 = getelementptr inbounds i8, i8* %14, i64 280
  %53 = bitcast i8* %52 to i32*
  store i32 15, i32* %53, align 8
  %54 = getelementptr inbounds i8, i8* %14, i64 284
  %55 = bitcast i8* %54 to i32*
  store i32 16, i32* %55, align 4
  %56 = getelementptr inbounds i8, i8* %14, i64 336
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %48, i64 16, i1 false) #8
  br label %57

57:                                               ; preds = %9, %13, %16
  %58 = phi %struct.BrotliEncoderStateStruct* [ %17, %16 ], [ null, %13 ], [ null, %9 ]
  ret %struct.BrotliEncoderStateStruct* %58
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #3

declare hidden void @BrotliInitMemoryManager(%struct.MemoryManager*, i8* (i8*, i64)*, void (i8*, i8*)*, i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @BrotliEncoderDestroyInstance(%struct.BrotliEncoderStateStruct*) local_unnamed_addr #1 {
  %2 = icmp eq %struct.BrotliEncoderStateStruct* %0, null
  br i1 %2, label %30, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 1, i32 1
  %5 = load void (i8*, i8*)*, void (i8*, i8*)** %4, align 8
  %6 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 1, i32 2
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 1
  %9 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 19
  %10 = load i8*, i8** %9, align 8
  tail call void @BrotliFree(%struct.MemoryManager* %8, i8* %10) #8
  store i8* null, i8** %9, align 8
  %11 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 5
  %12 = bitcast %struct.Command** %11 to i8**
  %13 = load i8*, i8** %12, align 8
  tail call void @BrotliFree(%struct.MemoryManager* %8, i8* %13) #8
  store %struct.Command* null, %struct.Command** %11, align 8
  %14 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 3, i32 6
  %15 = load i8*, i8** %14, align 8
  tail call void @BrotliFree(%struct.MemoryManager* %8, i8* %15) #8
  store i8* null, i8** %14, align 8
  %16 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %20, label %19

19:                                               ; preds = %3
  tail call void @BrotliFree(%struct.MemoryManager* %8, i8* nonnull %17) #8
  store i8* null, i8** %16, align 8
  br label %20

20:                                               ; preds = %3, %19
  %21 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 22
  %22 = bitcast i32** %21 to i8**
  %23 = load i8*, i8** %22, align 8
  tail call void @BrotliFree(%struct.MemoryManager* %8, i8* %23) #8
  store i32* null, i32** %21, align 8
  %24 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 28
  %25 = bitcast i32** %24 to i8**
  %26 = load i8*, i8** %25, align 8
  tail call void @BrotliFree(%struct.MemoryManager* %8, i8* %26) #8
  store i32* null, i32** %24, align 8
  %27 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 29
  %28 = load i8*, i8** %27, align 8
  tail call void @BrotliFree(%struct.MemoryManager* %8, i8* %28) #8
  store i8* null, i8** %27, align 8
  %29 = bitcast %struct.BrotliEncoderStateStruct* %0 to i8*
  tail call void %5(i8* %7, i8* nonnull %29) #8
  br label %30

30:                                               ; preds = %1, %20
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @BrotliEncoderMaxCompressedSize(i64) local_unnamed_addr #5 {
  %2 = lshr i64 %0, 14
  %3 = shl nuw nsw i64 %2, 2
  %4 = or i64 %3, 2
  %5 = add i64 %0, 4
  %6 = add i64 %5, %4
  %7 = icmp eq i64 %0, 0
  %8 = icmp ult i64 %6, %0
  %9 = select i1 %8, i64 0, i64 %6
  %10 = select i1 %7, i64 2, i64 %9
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @BrotliEncoderCompress(i32, i32, i32, i64, i8*, i64* nocapture, i8*) local_unnamed_addr #1 {
  %8 = alloca %struct.MemoryManager, align 8
  %9 = alloca [4 x i32], align 16
  %10 = alloca [4 x i32], align 16
  %11 = alloca %struct.BrotliEncoderParams, align 8
  %12 = alloca %struct.Hasher, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca %struct.MetaBlockSplit, align 8
  %17 = alloca %struct.BrotliEncoderParams, align 8
  %18 = alloca i64, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i64, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i64, align 8
  %23 = load i64, i64* %5, align 8
  %24 = lshr i64 %3, 14
  %25 = shl nuw nsw i64 %24, 2
  %26 = or i64 %25, 2
  %27 = add i64 %3, 4
  %28 = add i64 %27, %26
  %29 = icmp eq i64 %3, 0
  %30 = icmp ult i64 %28, %3
  %31 = select i1 %30, i64 0, i64 %28
  %32 = select i1 %29, i64 2, i64 %31
  %33 = icmp eq i64 %23, 0
  br i1 %33, label %2117, label %34

34:                                               ; preds = %7
  br i1 %29, label %35, label %36

35:                                               ; preds = %34
  store i64 1, i64* %5, align 8
  store i8 6, i8* %6, align 1
  br label %2117

36:                                               ; preds = %34
  %37 = icmp eq i32 %0, 10
  br i1 %37, label %38, label %1990

38:                                               ; preds = %36
  %39 = icmp sgt i32 %1, 16
  %40 = select i1 %39, i32 %1, i32 16
  %41 = icmp slt i32 %40, 30
  %42 = select i1 %41, i32 %40, i32 30
  %43 = bitcast %struct.MemoryManager* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #8
  %44 = bitcast [4 x i32]* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 24, i1 false) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %44, i8* align 16 bitcast ([4 x i32]* @__const.BrotliCompressBufferQuality10.saved_dist_cache to i8*), i64 16, i1 false) #8
  %45 = bitcast [4 x i32]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %45, i8* align 16 bitcast ([4 x i32]* @__const.BrotliCompressBufferQuality10.saved_dist_cache to i8*), i64 16, i1 false) #8
  %46 = zext i32 %42 to i64
  %47 = shl i64 1, %46
  %48 = icmp ugt i64 %47, %3
  %49 = select i1 %48, i64 %3, i64 %47
  %50 = bitcast %struct.BrotliEncoderParams* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %50) #8
  %51 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %11, i64 0, i32 8
  %52 = bitcast %struct.BrotliHasherParams* %51 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 104, i1 false) #8
  %53 = icmp slt i32 %42, 23
  %54 = add nuw i32 %40, 1
  %55 = select i1 %53, i32 %54, i32 24
  %56 = zext i32 %55 to i64
  %57 = shl i64 1, %56
  %58 = lshr i64 %57, 3
  %59 = bitcast %struct.Hasher* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1096, i8* nonnull %59) #8
  %60 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 0, i32 1
  %61 = bitcast i64* %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 1088, i1 false) #8
  %62 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 0, i32 0
  store i8* null, i8** %62, align 8
  %63 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %11, i64 0, i32 0
  store i32 0, i32* %63, align 8
  %64 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %11, i64 0, i32 7
  store i32 0, i32* %64, align 4
  %65 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %11, i64 0, i32 1
  store i32 11, i32* %65, align 4
  %66 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %11, i64 0, i32 2
  store i32 22, i32* %66, align 8
  %67 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %11, i64 0, i32 3
  %68 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %11, i64 0, i32 10
  %69 = bitcast i32* %67 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %69, i8 0, i64 24, i1 false) #8
  call void @BrotliInitEncoderDictionary(%struct.BrotliEncoderDictionary* %68) #8
  %70 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %11, i64 0, i32 9, i32 0
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 64, i32 64>, <4 x i32>* %71, align 8
  %72 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %11, i64 0, i32 9, i32 4
  store i64 67108860, i64* %72, align 8
  store i32 10, i32* %65, align 4
  store i32 %42, i32* %66, align 8
  %73 = icmp sgt i32 %42, 24
  br i1 %73, label %74, label %75

74:                                               ; preds = %38
  store i32 1, i32* %64, align 4
  store i32 10, i32* %65, align 4
  br label %81

75:                                               ; preds = %38
  store i32 10, i32* %65, align 4
  %76 = load i32, i32* %64, align 4
  %77 = icmp eq i32 %76, 0
  %78 = select i1 %77, i32 24, i32 30
  %79 = icmp slt i32 %78, %42
  br i1 %79, label %80, label %81

80:                                               ; preds = %75
  store i32 %78, i32* %66, align 8
  br label %81

81:                                               ; preds = %74, %80, %75
  %82 = phi i32 [ %40, %75 ], [ %78, %80 ], [ %42, %74 ]
  %83 = load i32, i32* %67, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %90

85:                                               ; preds = %81
  %86 = icmp sgt i32 %82, 16
  br i1 %86, label %87, label %95

87:                                               ; preds = %85
  %88 = icmp eq i32 %82, 17
  %89 = select i1 %88, i32 17, i32 18
  br label %95

90:                                               ; preds = %81
  %91 = icmp sgt i32 %83, 16
  %92 = select i1 %91, i32 %83, i32 16
  %93 = icmp slt i32 %92, 24
  %94 = select i1 %93, i32 %92, i32 24
  br label %95

95:                                               ; preds = %90, %87, %85
  %96 = phi i32 [ %89, %87 ], [ 16, %85 ], [ %94, %90 ]
  store i32 %96, i32* %67, align 4
  %97 = load i32, i32* %63, align 8
  %98 = icmp eq i32 %97, 2
  %99 = zext i1 %98 to i32
  %100 = select i1 %98, i32 12, i32 0
  %101 = lshr i32 %100, %99
  %102 = and i32 %101, 15
  %103 = shl i32 %102, %99
  %104 = icmp eq i32 %103, %100
  %105 = and i1 %98, %104
  %106 = zext i1 %105 to i32
  %107 = select i1 %104, i32 %100, i32 0
  call void @BrotliInitDistanceParams(%struct.BrotliEncoderParams* nonnull %11, i32 %106, i32 %107) #8
  %108 = load i32, i32* %67, align 4
  %109 = zext i32 %108 to i64
  %110 = shl i64 1, %109
  call void @BrotliInitMemoryManager(%struct.MemoryManager* nonnull %8, i8* (i8*, i64)* null, void (i8*, i8*)* null, i8* null) #8
  %111 = load i32, i32* %64, align 4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %117, label %113

113:                                              ; preds = %95
  %114 = trunc i32 %42 to i16
  %115 = shl nuw nsw i16 %114, 8
  %116 = or i16 %115, 17
  br label %130

117:                                              ; preds = %95
  switch i32 %42, label %119 [
    i32 16, label %130
    i32 17, label %118
  ]

118:                                              ; preds = %117
  br label %130

119:                                              ; preds = %117
  %120 = icmp sgt i32 %42, 17
  %121 = trunc i32 %42 to i16
  br i1 %120, label %122, label %126

122:                                              ; preds = %119
  %123 = shl nuw nsw i16 %121, 1
  %124 = add nsw i16 %123, -34
  %125 = or i16 %124, 1
  br label %130

126:                                              ; preds = %119
  %127 = shl nuw nsw i16 %121, 4
  %128 = add nsw i16 %127, -128
  %129 = or i16 %128, 1
  br label %130

130:                                              ; preds = %126, %122, %118, %117, %113
  %131 = phi i16 [ %125, %122 ], [ %129, %126 ], [ 1, %118 ], [ %116, %113 ], [ 0, %117 ]
  %132 = phi i64 [ 4, %122 ], [ 7, %126 ], [ 7, %118 ], [ 14, %113 ], [ 1, %117 ]
  %133 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 0
  %134 = load i8*, i8** %62, align 8
  %135 = icmp eq i8* %134, null
  br i1 %135, label %136, label %443

136:                                              ; preds = %130
  %137 = load i32, i32* %65, align 4
  %138 = icmp sgt i32 %137, 9
  br i1 %138, label %139, label %141

139:                                              ; preds = %136
  %140 = getelementptr inbounds %struct.BrotliHasherParams, %struct.BrotliHasherParams* %51, i64 0, i32 0
  store i32 10, i32* %140, align 8
  br label %189

141:                                              ; preds = %136
  %142 = icmp eq i32 %137, 4
  br i1 %142, label %143, label %149

143:                                              ; preds = %141
  %144 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %11, i64 0, i32 5
  %145 = load i64, i64* %144, align 8
  %146 = icmp ugt i64 %145, 1048575
  br i1 %146, label %147, label %151

147:                                              ; preds = %143
  %148 = getelementptr inbounds %struct.BrotliHasherParams, %struct.BrotliHasherParams* %51, i64 0, i32 0
  store i32 54, i32* %148, align 8
  br label %189

149:                                              ; preds = %141
  %150 = icmp slt i32 %137, 5
  br i1 %150, label %151, label %153

151:                                              ; preds = %149, %143
  %152 = getelementptr inbounds %struct.BrotliHasherParams, %struct.BrotliHasherParams* %51, i64 0, i32 0
  store i32 %137, i32* %152, align 8
  br label %189

153:                                              ; preds = %149
  %154 = load i32, i32* %66, align 8
  %155 = icmp slt i32 %154, 17
  br i1 %155, label %156, label %162

156:                                              ; preds = %153
  %157 = icmp slt i32 %137, 7
  %158 = icmp slt i32 %137, 9
  %159 = select i1 %158, i32 41, i32 42
  %160 = select i1 %157, i32 40, i32 %159
  %161 = getelementptr inbounds %struct.BrotliHasherParams, %struct.BrotliHasherParams* %51, i64 0, i32 0
  store i32 %160, i32* %161, align 8
  br label %189

162:                                              ; preds = %153
  %163 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %11, i64 0, i32 5
  %164 = load i64, i64* %163, align 8
  %165 = icmp ugt i64 %164, 1048575
  %166 = icmp sgt i32 %154, 18
  %167 = and i1 %166, %165
  %168 = getelementptr inbounds %struct.BrotliHasherParams, %struct.BrotliHasherParams* %51, i64 0, i32 0
  br i1 %167, label %169, label %179

169:                                              ; preds = %162
  store i32 6, i32* %168, align 8
  %170 = add nsw i32 %137, -1
  %171 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %11, i64 0, i32 8, i32 2
  store i32 %170, i32* %171, align 8
  %172 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %11, i64 0, i32 8, i32 1
  store i32 15, i32* %172, align 4
  %173 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %11, i64 0, i32 8, i32 3
  store i32 5, i32* %173, align 4
  %174 = icmp slt i32 %137, 7
  %175 = icmp slt i32 %137, 9
  %176 = select i1 %175, i32 10, i32 16
  %177 = select i1 %174, i32 4, i32 %176
  %178 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %11, i64 0, i32 8, i32 4
  store i32 %177, i32* %178, align 8
  br label %189

179:                                              ; preds = %162
  store i32 5, i32* %168, align 8
  %180 = add nsw i32 %137, -1
  %181 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %11, i64 0, i32 8, i32 2
  store i32 %180, i32* %181, align 8
  %182 = icmp slt i32 %137, 7
  %183 = select i1 %182, i32 14, i32 15
  %184 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %11, i64 0, i32 8, i32 1
  store i32 %183, i32* %184, align 4
  %185 = icmp slt i32 %137, 9
  %186 = select i1 %185, i32 10, i32 16
  %187 = select i1 %182, i32 4, i32 %186
  %188 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %11, i64 0, i32 8, i32 4
  store i32 %187, i32* %188, align 8
  br label %189

189:                                              ; preds = %179, %169, %156, %151, %147, %139
  %190 = phi i32 [ 54, %147 ], [ %160, %156 ], [ 5, %179 ], [ 6, %169 ], [ %137, %151 ], [ 10, %139 ]
  %191 = load i32, i32* %66, align 8
  %192 = icmp sgt i32 %191, 24
  br i1 %192, label %193, label %210

193:                                              ; preds = %189
  %194 = getelementptr inbounds %struct.BrotliHasherParams, %struct.BrotliHasherParams* %51, i64 0, i32 0
  switch i32 %190, label %254 [
    i32 3, label %195
    i32 54, label %196
    i32 6, label %197
    i32 2, label %251
    i32 4, label %211
    i32 5, label %212
    i32 40, label %236
    i32 41, label %237
    i32 42, label %238
    i32 35, label %240
    i32 10, label %241
  ]

195:                                              ; preds = %193
  store i32 35, i32* %194, align 8
  br label %240

196:                                              ; preds = %193
  store i32 55, i32* %194, align 8
  br label %251

197:                                              ; preds = %193
  store i32 65, i32* %194, align 8
  %198 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %11, i64 0, i32 8, i32 1
  %199 = load i32, i32* %198, align 4
  %200 = zext i32 %199 to i64
  %201 = shl i64 1, %200
  %202 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %11, i64 0, i32 8, i32 2
  %203 = load i32, i32* %202, align 8
  %204 = zext i32 %203 to i64
  %205 = shl i64 %201, 1
  %206 = shl i64 %201, 2
  %207 = shl i64 %206, %204
  %208 = add i64 %205, 67108864
  %209 = add i64 %208, %207
  br label %248

210:                                              ; preds = %189
  switch i32 %190, label %254 [
    i32 2, label %251
    i32 3, label %251
    i32 4, label %211
    i32 5, label %212
    i32 6, label %224
    i32 40, label %236
    i32 41, label %237
    i32 42, label %238
    i32 54, label %239
    i32 35, label %240
    i32 10, label %241
  ]

211:                                              ; preds = %210, %193
  br label %251

212:                                              ; preds = %210, %193
  %213 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %11, i64 0, i32 8, i32 1
  %214 = load i32, i32* %213, align 4
  %215 = zext i32 %214 to i64
  %216 = shl i64 1, %215
  %217 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %11, i64 0, i32 8, i32 2
  %218 = load i32, i32* %217, align 8
  %219 = zext i32 %218 to i64
  %220 = shl i64 %216, 1
  %221 = shl i64 %216, 2
  %222 = shl i64 %221, %219
  %223 = add i64 %222, %220
  br label %248

224:                                              ; preds = %210
  %225 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %11, i64 0, i32 8, i32 1
  %226 = load i32, i32* %225, align 4
  %227 = zext i32 %226 to i64
  %228 = shl i64 1, %227
  %229 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %11, i64 0, i32 8, i32 2
  %230 = load i32, i32* %229, align 8
  %231 = zext i32 %230 to i64
  %232 = shl i64 %228, 1
  %233 = shl i64 %228, 2
  %234 = shl i64 %233, %231
  %235 = add i64 %234, %232
  br label %248

236:                                              ; preds = %210, %193
  br label %251

237:                                              ; preds = %210, %193
  br label %251

238:                                              ; preds = %210, %193
  br label %251

239:                                              ; preds = %210
  br label %251

240:                                              ; preds = %210, %195, %193
  br label %251

241:                                              ; preds = %210, %193
  %242 = zext i32 %191 to i64
  %243 = shl i64 1, %242
  %244 = icmp ugt i64 %243, %49
  %245 = select i1 %244, i64 %49, i64 %243
  %246 = shl nuw i64 %245, 3
  %247 = add i64 %246, 524288
  br label %248

248:                                              ; preds = %241, %224, %212, %197
  %249 = phi i64 [ %247, %241 ], [ %209, %197 ], [ %235, %224 ], [ %223, %212 ]
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %254, label %251

251:                                              ; preds = %248, %240, %239, %238, %237, %236, %211, %210, %210, %196, %193
  %252 = phi i64 [ %249, %248 ], [ 524288, %211 ], [ 524288, %236 ], [ 524288, %237 ], [ 1310720, %238 ], [ 4194304, %239 ], [ 67371008, %240 ], [ 71303168, %196 ], [ 262144, %210 ], [ 262144, %210 ], [ 262144, %193 ]
  %253 = call i8* @BrotliAllocate(%struct.MemoryManager* nonnull %8, i64 %252) #8
  br label %254

254:                                              ; preds = %251, %248, %210, %193
  %255 = phi i8* [ %253, %251 ], [ null, %248 ], [ null, %210 ], [ null, %193 ]
  store i8* %255, i8** %62, align 8
  %256 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 0, i32 3
  %257 = bitcast %struct.BrotliHasherParams* %256 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %257, i8* align 8 %52, i64 20, i1 false) #8
  %258 = getelementptr inbounds %struct.BrotliHasherParams, %struct.BrotliHasherParams* %256, i64 0, i32 0
  %259 = load i32, i32* %258, align 8
  %260 = ptrtoint i8* %255 to i64
  %261 = bitcast i8* %255 to i16*
  switch i32 %259, label %441 [
    i32 2, label %262
    i32 3, label %267
    i32 4, label %272
    i32 5, label %277
    i32 6, label %310
    i32 40, label %351
    i32 41, label %364
    i32 42, label %377
    i32 54, label %388
    i32 35, label %393
    i32 55, label %404
    i32 65, label %415
    i32 10, label %426
  ]

262:                                              ; preds = %254
  %263 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1
  %264 = bitcast %union.anon* %263 to %struct.HasherCommon**
  store %struct.HasherCommon* %133, %struct.HasherCommon** %264, align 8, !alias.scope !2
  %265 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 4
  %266 = bitcast i16* %265 to i64*
  store i64 %260, i64* %266, align 8, !alias.scope !2
  br label %441

267:                                              ; preds = %254
  %268 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1
  %269 = bitcast %union.anon* %268 to %struct.HasherCommon**
  store %struct.HasherCommon* %133, %struct.HasherCommon** %269, align 8, !alias.scope !5
  %270 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 4
  %271 = bitcast i16* %270 to i64*
  store i64 %260, i64* %271, align 8, !alias.scope !5
  br label %441

272:                                              ; preds = %254
  %273 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1
  %274 = bitcast %union.anon* %273 to %struct.HasherCommon**
  store %struct.HasherCommon* %133, %struct.HasherCommon** %274, align 8, !alias.scope !8
  %275 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 4
  %276 = bitcast i16* %275 to i64*
  store i64 %260, i64* %276, align 8, !alias.scope !8
  br label %441

277:                                              ; preds = %254
  %278 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1
  %279 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 16
  %280 = bitcast i16* %279 to %struct.HasherCommon**
  store %struct.HasherCommon* %133, %struct.HasherCommon** %280, align 8, !alias.scope !11
  %281 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 0, i32 3, i32 1
  %282 = load i32, i32* %281, align 4, !noalias !11
  %283 = sub nsw i32 32, %282
  %284 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 8
  %285 = bitcast i16* %284 to i32*
  store i32 %283, i32* %285, align 8, !alias.scope !11
  %286 = zext i32 %282 to i64
  %287 = shl i64 1, %286
  %288 = bitcast %union.anon* %278 to i64*
  store i64 %287, i64* %288, align 8, !alias.scope !11
  %289 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 0, i32 3, i32 2
  %290 = load i32, i32* %289, align 8, !noalias !11
  %291 = zext i32 %290 to i64
  %292 = shl i64 1, %291
  %293 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 4
  %294 = bitcast i16* %293 to i64*
  store i64 %292, i64* %294, align 8, !alias.scope !11
  %295 = trunc i64 %292 to i32
  %296 = add i32 %295, -1
  %297 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 10
  %298 = bitcast i16* %297 to i32*
  store i32 %296, i32* %298, align 4, !alias.scope !11
  %299 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 20
  %300 = bitcast i16* %299 to i8**
  store i8* %255, i8** %300, align 8, !alias.scope !11
  %301 = getelementptr inbounds i16, i16* %261, i64 %287
  %302 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 24
  %303 = bitcast i16* %302 to i16**
  store i16* %301, i16** %303, align 8, !alias.scope !11
  %304 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 12
  %305 = bitcast i16* %304 to i32*
  store i32 %290, i32* %305, align 8, !alias.scope !11
  %306 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 0, i32 3, i32 4
  %307 = load i32, i32* %306, align 8, !noalias !11
  %308 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 14
  %309 = bitcast i16* %308 to i32*
  store i32 %307, i32* %309, align 4, !alias.scope !11
  br label %441

310:                                              ; preds = %254
  %311 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1
  %312 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 24
  %313 = bitcast i16* %312 to %struct.HasherCommon**
  store %struct.HasherCommon* %133, %struct.HasherCommon** %313, align 8, !alias.scope !14
  %314 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 0, i32 3, i32 1
  %315 = load i32, i32* %314, align 4, !noalias !14
  %316 = sub nsw i32 64, %315
  %317 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 8
  %318 = bitcast i16* %317 to i32*
  store i32 %316, i32* %318, align 8, !alias.scope !14
  %319 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 0, i32 3, i32 3
  %320 = load i32, i32* %319, align 4, !noalias !14
  %321 = shl nsw i32 %320, 3
  %322 = sub nsw i32 64, %321
  %323 = zext i32 %322 to i64
  %324 = lshr i64 -1, %323
  %325 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 12
  %326 = bitcast i16* %325 to i64*
  store i64 %324, i64* %326, align 8, !alias.scope !14
  %327 = zext i32 %315 to i64
  %328 = shl i64 1, %327
  %329 = bitcast %union.anon* %311 to i64*
  store i64 %328, i64* %329, align 8, !alias.scope !14
  %330 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 0, i32 3, i32 2
  %331 = load i32, i32* %330, align 8, !noalias !14
  %332 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 18
  %333 = bitcast i16* %332 to i32*
  store i32 %331, i32* %333, align 4, !alias.scope !14
  %334 = zext i32 %331 to i64
  %335 = shl i64 1, %334
  %336 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 4
  %337 = bitcast i16* %336 to i64*
  store i64 %335, i64* %337, align 8, !alias.scope !14
  %338 = trunc i64 %335 to i32
  %339 = add i32 %338, -1
  %340 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 16
  %341 = bitcast i16* %340 to i32*
  store i32 %339, i32* %341, align 8, !alias.scope !14
  %342 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 0, i32 3, i32 4
  %343 = load i32, i32* %342, align 8, !noalias !14
  %344 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 20
  %345 = bitcast i16* %344 to i32*
  store i32 %343, i32* %345, align 8, !alias.scope !14
  %346 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 28
  %347 = bitcast i16* %346 to i8**
  store i8* %255, i8** %347, align 8, !alias.scope !14
  %348 = getelementptr inbounds i16, i16* %261, i64 %328
  %349 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 32
  %350 = bitcast i16* %349 to i16**
  store i16* %348, i16** %350, align 8, !alias.scope !14
  br label %441

351:                                              ; preds = %254
  %352 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 12
  %353 = bitcast i16* %352 to %struct.HasherCommon**
  store %struct.HasherCommon* %133, %struct.HasherCommon** %353, align 8, !alias.scope !17
  %354 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 8
  %355 = bitcast i16* %354 to i64*
  store i64 %260, i64* %355, align 8, !alias.scope !17
  %356 = load i32, i32* %65, align 4, !noalias !17
  %357 = icmp sgt i32 %356, 6
  %358 = select i1 %357, i32 7, i32 8
  %359 = add nsw i32 %356, -4
  %360 = shl i32 %358, %359
  %361 = zext i32 %360 to i64
  %362 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 4
  %363 = bitcast i16* %362 to i64*
  store i64 %361, i64* %363, align 8, !alias.scope !17
  br label %441

364:                                              ; preds = %254
  %365 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 12
  %366 = bitcast i16* %365 to %struct.HasherCommon**
  store %struct.HasherCommon* %133, %struct.HasherCommon** %366, align 8, !alias.scope !20
  %367 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 8
  %368 = bitcast i16* %367 to i64*
  store i64 %260, i64* %368, align 8, !alias.scope !20
  %369 = load i32, i32* %65, align 4, !noalias !20
  %370 = icmp sgt i32 %369, 6
  %371 = select i1 %370, i32 7, i32 8
  %372 = add nsw i32 %369, -4
  %373 = shl i32 %371, %372
  %374 = zext i32 %373 to i64
  %375 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 4
  %376 = bitcast i16* %375 to i64*
  store i64 %374, i64* %376, align 8, !alias.scope !20
  br label %441

377:                                              ; preds = %254
  %378 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 3
  store %struct.HasherCommon* %133, %struct.HasherCommon** %378, align 8, !alias.scope !23
  %379 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 2
  %380 = bitcast i8** %379 to i64*
  store i64 %260, i64* %380, align 8, !alias.scope !23
  %381 = load i32, i32* %65, align 4, !noalias !23
  %382 = icmp sgt i32 %381, 6
  %383 = select i1 %382, i32 7, i32 8
  %384 = add nsw i32 %381, -4
  %385 = shl i32 %383, %384
  %386 = zext i32 %385 to i64
  %387 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 1
  store i64 %386, i64* %387, align 8, !alias.scope !23
  br label %441

388:                                              ; preds = %254
  %389 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1
  %390 = bitcast %union.anon* %389 to %struct.HasherCommon**
  store %struct.HasherCommon* %133, %struct.HasherCommon** %390, align 8, !alias.scope !26
  %391 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 4
  %392 = bitcast i16* %391 to i64*
  store i64 %260, i64* %392, align 8, !alias.scope !26
  br label %441

393:                                              ; preds = %254
  %394 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 56
  %395 = bitcast i16* %394 to %struct.HasherCommon**
  store %struct.HasherCommon* %133, %struct.HasherCommon** %395, align 8, !alias.scope !29
  %396 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 52
  %397 = bitcast i16* %396 to i64*
  store i64 %260, i64* %397, align 8, !alias.scope !29
  %398 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 28
  %399 = bitcast i16* %398 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %399, i8* nonnull align 8 %59, i64 48, i1 false) #8
  %400 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 60
  %401 = bitcast i16* %400 to i32*
  store i32 1, i32* %401, align 8, !alias.scope !29
  %402 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 64
  %403 = bitcast i16* %402 to %struct.BrotliEncoderParams**
  store %struct.BrotliEncoderParams* %11, %struct.BrotliEncoderParams** %403, align 8, !alias.scope !29
  br label %441

404:                                              ; preds = %254
  %405 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 56
  %406 = bitcast i16* %405 to %struct.HasherCommon**
  store %struct.HasherCommon* %133, %struct.HasherCommon** %406, align 8, !alias.scope !32
  %407 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 52
  %408 = bitcast i16* %407 to i64*
  store i64 %260, i64* %408, align 8, !alias.scope !32
  %409 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 28
  %410 = bitcast i16* %409 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %410, i8* nonnull align 8 %59, i64 48, i1 false) #8
  %411 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 60
  %412 = bitcast i16* %411 to i32*
  store i32 1, i32* %412, align 8, !alias.scope !32
  %413 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 64
  %414 = bitcast i16* %413 to %struct.BrotliEncoderParams**
  store %struct.BrotliEncoderParams* %11, %struct.BrotliEncoderParams** %414, align 8, !alias.scope !32
  br label %441

415:                                              ; preds = %254
  %416 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 84
  %417 = bitcast i16* %416 to %struct.HasherCommon**
  store %struct.HasherCommon* %133, %struct.HasherCommon** %417, align 8, !alias.scope !35
  %418 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 80
  %419 = bitcast i16* %418 to i64*
  store i64 %260, i64* %419, align 8, !alias.scope !35
  %420 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 56
  %421 = bitcast i16* %420 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %421, i8* nonnull align 8 %59, i64 48, i1 false) #8
  %422 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 88
  %423 = bitcast i16* %422 to i32*
  store i32 1, i32* %423, align 8, !alias.scope !35
  %424 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 92
  %425 = bitcast i16* %424 to %struct.BrotliEncoderParams**
  store %struct.BrotliEncoderParams* %11, %struct.BrotliEncoderParams** %425, align 8, !alias.scope !35
  br label %441

426:                                              ; preds = %254
  %427 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1
  %428 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 4
  %429 = bitcast i16* %428 to i8**
  store i8* %255, i8** %429, align 8, !alias.scope !38
  %430 = getelementptr inbounds i8, i8* %255, i64 524288
  %431 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 12
  %432 = bitcast i16* %431 to i8**
  store i8* %430, i8** %432, align 8, !alias.scope !38
  %433 = load i32, i32* %66, align 8, !noalias !38
  %434 = shl nsw i32 -1, %433
  %435 = xor i32 %434, -1
  %436 = zext i32 %435 to i64
  %437 = bitcast %union.anon* %427 to i64*
  store i64 %436, i64* %437, align 8, !alias.scope !38
  %438 = add nsw i32 %434, 1
  %439 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 8
  %440 = bitcast i16* %439 to i32*
  store i32 %438, i32* %440, align 8, !alias.scope !38
  br label %441

441:                                              ; preds = %426, %415, %404, %393, %388, %377, %364, %351, %310, %277, %272, %267, %262, %254
  %442 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 0, i32 4
  store i32 0, i32* %442, align 4
  br label %450

443:                                              ; preds = %130
  %444 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 0, i32 4
  %445 = load i32, i32* %444, align 4
  %446 = icmp eq i32 %445, 0
  br i1 %446, label %447, label %1420

447:                                              ; preds = %443
  %448 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 0, i32 3, i32 0
  %449 = load i32, i32* %448, align 8
  br label %450

450:                                              ; preds = %447, %441
  %451 = phi i32 [ %449, %447 ], [ %259, %441 ]
  %452 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 0, i32 4
  switch i32 %451, label %1419 [
    i32 2, label %453
    i32 3, label %501
    i32 4, label %540
    i32 5, label %568
    i32 6, label %628
    i32 40, label %677
    i32 41, label %731
    i32 42, label %785
    i32 54, label %839
    i32 35, label %867
    i32 55, label %1007
    i32 65, label %1123
    i32 10, label %1309
  ]

453:                                              ; preds = %450
  %454 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 4
  %455 = bitcast i16* %454 to i32**
  %456 = load i32*, i32** %455, align 8, !alias.scope !41, !noalias !44
  %457 = icmp ult i64 %49, 2049
  br i1 %457, label %458, label %499

458:                                              ; preds = %453
  %459 = icmp eq i64 %49, 0
  br i1 %459, label %1419, label %460

460:                                              ; preds = %458
  %461 = add nsw i64 %49, -1
  %462 = and i64 %49, 3
  %463 = icmp ult i64 %461, 3
  br i1 %463, label %1363, label %464

464:                                              ; preds = %460
  %465 = sub nsw i64 %49, %462
  br label %466

466:                                              ; preds = %466, %464
  %467 = phi i64 [ 0, %464 ], [ %496, %466 ]
  %468 = phi i64 [ %465, %464 ], [ %497, %466 ]
  %469 = getelementptr inbounds i8, i8* %4, i64 %467
  %470 = bitcast i8* %469 to i64*
  %471 = load i64, i64* %470, align 8, !alias.scope !44, !noalias !41
  %472 = mul i64 %471, -4819355556693147648
  %473 = lshr i64 %472, 48
  %474 = getelementptr inbounds i32, i32* %456, i64 %473
  store i32 0, i32* %474, align 4, !noalias !46
  %475 = or i64 %467, 1
  %476 = getelementptr inbounds i8, i8* %4, i64 %475
  %477 = bitcast i8* %476 to i64*
  %478 = load i64, i64* %477, align 8, !alias.scope !44, !noalias !41
  %479 = mul i64 %478, -4819355556693147648
  %480 = lshr i64 %479, 48
  %481 = getelementptr inbounds i32, i32* %456, i64 %480
  store i32 0, i32* %481, align 4, !noalias !46
  %482 = or i64 %467, 2
  %483 = getelementptr inbounds i8, i8* %4, i64 %482
  %484 = bitcast i8* %483 to i64*
  %485 = load i64, i64* %484, align 8, !alias.scope !44, !noalias !41
  %486 = mul i64 %485, -4819355556693147648
  %487 = lshr i64 %486, 48
  %488 = getelementptr inbounds i32, i32* %456, i64 %487
  store i32 0, i32* %488, align 4, !noalias !46
  %489 = or i64 %467, 3
  %490 = getelementptr inbounds i8, i8* %4, i64 %489
  %491 = bitcast i8* %490 to i64*
  %492 = load i64, i64* %491, align 8, !alias.scope !44, !noalias !41
  %493 = mul i64 %492, -4819355556693147648
  %494 = lshr i64 %493, 48
  %495 = getelementptr inbounds i32, i32* %456, i64 %494
  store i32 0, i32* %495, align 4, !noalias !46
  %496 = add nuw i64 %467, 4
  %497 = add i64 %468, -4
  %498 = icmp eq i64 %497, 0
  br i1 %498, label %1363, label %466

499:                                              ; preds = %453
  %500 = bitcast i32* %456 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %500, i8 0, i64 262144, i1 false) #8, !noalias !46
  br label %1419

501:                                              ; preds = %450
  %502 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 4
  %503 = bitcast i16* %502 to i32**
  %504 = load i32*, i32** %503, align 8, !alias.scope !47, !noalias !50
  %505 = icmp ult i64 %49, 2049
  br i1 %505, label %506, label %538

506:                                              ; preds = %501
  %507 = icmp eq i64 %49, 0
  br i1 %507, label %1419, label %508

508:                                              ; preds = %506
  %509 = and i64 %49, 1
  %510 = icmp eq i64 %49, 1
  br i1 %510, label %1378, label %511

511:                                              ; preds = %508
  %512 = sub nsw i64 %49, %509
  br label %513

513:                                              ; preds = %513, %511
  %514 = phi i64 [ 0, %511 ], [ %535, %513 ]
  %515 = phi i64 [ %512, %511 ], [ %536, %513 ]
  %516 = getelementptr inbounds i8, i8* %4, i64 %514
  %517 = bitcast i8* %516 to i64*
  %518 = load i64, i64* %517, align 8, !alias.scope !50, !noalias !47
  %519 = mul i64 %518, -4819355556693147648
  %520 = lshr i64 %519, 48
  %521 = getelementptr inbounds i32, i32* %504, i64 %520
  store i32 0, i32* %521, align 4, !noalias !52
  %522 = add nuw nsw i64 %520, 8
  %523 = and i64 %522, 65535
  %524 = getelementptr inbounds i32, i32* %504, i64 %523
  store i32 0, i32* %524, align 4, !noalias !52
  %525 = or i64 %514, 1
  %526 = getelementptr inbounds i8, i8* %4, i64 %525
  %527 = bitcast i8* %526 to i64*
  %528 = load i64, i64* %527, align 8, !alias.scope !50, !noalias !47
  %529 = mul i64 %528, -4819355556693147648
  %530 = lshr i64 %529, 48
  %531 = getelementptr inbounds i32, i32* %504, i64 %530
  store i32 0, i32* %531, align 4, !noalias !52
  %532 = add nuw nsw i64 %530, 8
  %533 = and i64 %532, 65535
  %534 = getelementptr inbounds i32, i32* %504, i64 %533
  store i32 0, i32* %534, align 4, !noalias !52
  %535 = add nuw i64 %514, 2
  %536 = add i64 %515, -2
  %537 = icmp eq i64 %536, 0
  br i1 %537, label %1378, label %513

538:                                              ; preds = %501
  %539 = bitcast i32* %504 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %539, i8 0, i64 262144, i1 false) #8, !noalias !52
  br label %1419

540:                                              ; preds = %450
  %541 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 4
  %542 = bitcast i16* %541 to i32**
  %543 = load i32*, i32** %542, align 8, !alias.scope !53, !noalias !56
  %544 = icmp ult i64 %49, 4097
  br i1 %544, label %545, label %566

545:                                              ; preds = %540
  %546 = icmp eq i64 %49, 0
  br i1 %546, label %1419, label %547

547:                                              ; preds = %545, %547
  %548 = phi i64 [ %564, %547 ], [ 0, %545 ]
  %549 = getelementptr inbounds i8, i8* %4, i64 %548
  %550 = bitcast i8* %549 to i64*
  %551 = load i64, i64* %550, align 8, !alias.scope !56, !noalias !53
  %552 = mul i64 %551, -4819355556693147648
  %553 = lshr i64 %552, 47
  %554 = getelementptr inbounds i32, i32* %543, i64 %553
  store i32 0, i32* %554, align 4, !noalias !58
  %555 = add nuw nsw i64 %553, 8
  %556 = and i64 %555, 131071
  %557 = getelementptr inbounds i32, i32* %543, i64 %556
  store i32 0, i32* %557, align 4, !noalias !58
  %558 = add nuw nsw i64 %553, 16
  %559 = and i64 %558, 131071
  %560 = getelementptr inbounds i32, i32* %543, i64 %559
  store i32 0, i32* %560, align 4, !noalias !58
  %561 = add nuw nsw i64 %553, 24
  %562 = and i64 %561, 131071
  %563 = getelementptr inbounds i32, i32* %543, i64 %562
  store i32 0, i32* %563, align 4, !noalias !58
  %564 = add nuw i64 %548, 1
  %565 = icmp eq i64 %564, %49
  br i1 %565, label %1419, label %547

566:                                              ; preds = %540
  %567 = bitcast i32* %543 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %567, i8 0, i64 524288, i1 false) #8, !noalias !58
  br label %1419

568:                                              ; preds = %450
  %569 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1
  %570 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 20
  %571 = bitcast i16* %570 to i16**
  %572 = load i16*, i16** %571, align 8, !alias.scope !59, !noalias !62
  %573 = bitcast %union.anon* %569 to i64*
  %574 = load i64, i64* %573, align 8, !alias.scope !59, !noalias !62
  %575 = lshr i64 %574, 6
  %576 = icmp ult i64 %575, %49
  br i1 %576, label %625, label %577

577:                                              ; preds = %568
  %578 = icmp eq i64 %49, 0
  br i1 %578, label %1419, label %579

579:                                              ; preds = %577
  %580 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 8
  %581 = bitcast i16* %580 to i32*
  %582 = load i32, i32* %581, align 8, !alias.scope !59, !noalias !62
  %583 = add nsw i64 %49, -1
  %584 = and i64 %49, 3
  %585 = icmp ult i64 %583, 3
  br i1 %585, label %1391, label %586

586:                                              ; preds = %579
  %587 = sub nsw i64 %49, %584
  br label %588

588:                                              ; preds = %588, %586
  %589 = phi i64 [ 0, %586 ], [ %622, %588 ]
  %590 = phi i64 [ %587, %586 ], [ %623, %588 ]
  %591 = getelementptr inbounds i8, i8* %4, i64 %589
  %592 = bitcast i8* %591 to i32*
  %593 = load i32, i32* %592, align 4, !alias.scope !64, !noalias !59
  %594 = mul i32 %593, 506832829
  %595 = lshr i32 %594, %582
  %596 = zext i32 %595 to i64
  %597 = getelementptr inbounds i16, i16* %572, i64 %596
  store i16 0, i16* %597, align 2, !noalias !67
  %598 = or i64 %589, 1
  %599 = getelementptr inbounds i8, i8* %4, i64 %598
  %600 = bitcast i8* %599 to i32*
  %601 = load i32, i32* %600, align 4, !alias.scope !64, !noalias !59
  %602 = mul i32 %601, 506832829
  %603 = lshr i32 %602, %582
  %604 = zext i32 %603 to i64
  %605 = getelementptr inbounds i16, i16* %572, i64 %604
  store i16 0, i16* %605, align 2, !noalias !67
  %606 = or i64 %589, 2
  %607 = getelementptr inbounds i8, i8* %4, i64 %606
  %608 = bitcast i8* %607 to i32*
  %609 = load i32, i32* %608, align 4, !alias.scope !64, !noalias !59
  %610 = mul i32 %609, 506832829
  %611 = lshr i32 %610, %582
  %612 = zext i32 %611 to i64
  %613 = getelementptr inbounds i16, i16* %572, i64 %612
  store i16 0, i16* %613, align 2, !noalias !67
  %614 = or i64 %589, 3
  %615 = getelementptr inbounds i8, i8* %4, i64 %614
  %616 = bitcast i8* %615 to i32*
  %617 = load i32, i32* %616, align 4, !alias.scope !64, !noalias !59
  %618 = mul i32 %617, 506832829
  %619 = lshr i32 %618, %582
  %620 = zext i32 %619 to i64
  %621 = getelementptr inbounds i16, i16* %572, i64 %620
  store i16 0, i16* %621, align 2, !noalias !67
  %622 = add nuw i64 %589, 4
  %623 = add i64 %590, -4
  %624 = icmp eq i64 %623, 0
  br i1 %624, label %1391, label %588

625:                                              ; preds = %568
  %626 = bitcast i16* %572 to i8*
  %627 = shl i64 %574, 1
  call void @llvm.memset.p0i8.i64(i8* align 2 %626, i8 0, i64 %627, i1 false) #8, !noalias !67
  br label %1419

628:                                              ; preds = %450
  %629 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1
  %630 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 28
  %631 = bitcast i16* %630 to i16**
  %632 = load i16*, i16** %631, align 8, !alias.scope !68, !noalias !71
  %633 = bitcast %union.anon* %629 to i64*
  %634 = load i64, i64* %633, align 8, !alias.scope !68, !noalias !71
  %635 = lshr i64 %634, 6
  %636 = icmp ult i64 %635, %49
  br i1 %636, label %674, label %637

637:                                              ; preds = %628
  %638 = icmp eq i64 %49, 0
  br i1 %638, label %1419, label %639

639:                                              ; preds = %637
  %640 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 12
  %641 = bitcast i16* %640 to i64*
  %642 = load i64, i64* %641, align 8, !alias.scope !68, !noalias !71
  %643 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 8
  %644 = bitcast i16* %643 to i32*
  %645 = load i32, i32* %644, align 8, !alias.scope !68, !noalias !71
  %646 = zext i32 %645 to i64
  %647 = and i64 %49, 1
  %648 = icmp eq i64 %49, 1
  br i1 %648, label %1407, label %649

649:                                              ; preds = %639
  %650 = sub nsw i64 %49, %647
  br label %651

651:                                              ; preds = %651, %649
  %652 = phi i64 [ 0, %649 ], [ %671, %651 ]
  %653 = phi i64 [ %650, %649 ], [ %672, %651 ]
  %654 = getelementptr inbounds i8, i8* %4, i64 %652
  %655 = bitcast i8* %654 to i64*
  %656 = load i64, i64* %655, align 8, !alias.scope !73, !noalias !68
  %657 = and i64 %656, %642
  %658 = mul i64 %657, 2297779722762296275
  %659 = lshr i64 %658, %646
  %660 = and i64 %659, 4294967295
  %661 = getelementptr inbounds i16, i16* %632, i64 %660
  store i16 0, i16* %661, align 2, !noalias !76
  %662 = or i64 %652, 1
  %663 = getelementptr inbounds i8, i8* %4, i64 %662
  %664 = bitcast i8* %663 to i64*
  %665 = load i64, i64* %664, align 8, !alias.scope !73, !noalias !68
  %666 = and i64 %665, %642
  %667 = mul i64 %666, 2297779722762296275
  %668 = lshr i64 %667, %646
  %669 = and i64 %668, 4294967295
  %670 = getelementptr inbounds i16, i16* %632, i64 %669
  store i16 0, i16* %670, align 2, !noalias !76
  %671 = add nuw i64 %652, 2
  %672 = add i64 %653, -2
  %673 = icmp eq i64 %672, 0
  br i1 %673, label %1407, label %651

674:                                              ; preds = %628
  %675 = bitcast i16* %632 to i8*
  %676 = shl i64 %634, 1
  call void @llvm.memset.p0i8.i64(i8* align 2 %675, i8 0, i64 %676, i1 false) #8, !noalias !76
  br label %1419

677:                                              ; preds = %450
  %678 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 8
  %679 = bitcast i16* %678 to i8**
  %680 = load i8*, i8** %679, align 8, !alias.scope !77, !noalias !80
  %681 = bitcast i8* %680 to i32*
  %682 = getelementptr inbounds i8, i8* %680, i64 131072
  %683 = bitcast i8* %682 to i16*
  %684 = getelementptr inbounds i8, i8* %680, i64 196608
  %685 = icmp ult i64 %49, 513
  br i1 %685, label %686, label %716

686:                                              ; preds = %677
  %687 = icmp eq i64 %49, 0
  br i1 %687, label %729, label %688

688:                                              ; preds = %686
  %689 = and i64 %49, 1
  %690 = icmp eq i64 %49, 1
  br i1 %690, label %717, label %691

691:                                              ; preds = %688
  %692 = sub nsw i64 %49, %689
  br label %693

693:                                              ; preds = %693, %691
  %694 = phi i64 [ 0, %691 ], [ %713, %693 ]
  %695 = phi i64 [ %692, %691 ], [ %714, %693 ]
  %696 = getelementptr inbounds i8, i8* %4, i64 %694
  %697 = bitcast i8* %696 to i32*
  %698 = load i32, i32* %697, align 4, !alias.scope !82, !noalias !77
  %699 = mul i32 %698, 506832829
  %700 = lshr i32 %699, 17
  %701 = zext i32 %700 to i64
  %702 = getelementptr inbounds i32, i32* %681, i64 %701
  store i32 -858993460, i32* %702, align 4, !noalias !85
  %703 = getelementptr inbounds i16, i16* %683, i64 %701
  store i16 -13108, i16* %703, align 2, !noalias !85
  %704 = or i64 %694, 1
  %705 = getelementptr inbounds i8, i8* %4, i64 %704
  %706 = bitcast i8* %705 to i32*
  %707 = load i32, i32* %706, align 4, !alias.scope !82, !noalias !77
  %708 = mul i32 %707, 506832829
  %709 = lshr i32 %708, 17
  %710 = zext i32 %709 to i64
  %711 = getelementptr inbounds i32, i32* %681, i64 %710
  store i32 -858993460, i32* %711, align 4, !noalias !85
  %712 = getelementptr inbounds i16, i16* %683, i64 %710
  store i16 -13108, i16* %712, align 2, !noalias !85
  %713 = add nuw i64 %694, 2
  %714 = add i64 %695, -2
  %715 = icmp eq i64 %714, 0
  br i1 %715, label %717, label %693

716:                                              ; preds = %677
  call void @llvm.memset.p0i8.i64(i8* align 4 %680, i8 -52, i64 131072, i1 false) #8, !noalias !85
  call void @llvm.memset.p0i8.i64(i8* align 2 %682, i8 0, i64 65536, i1 false) #8, !noalias !85
  br label %729

717:                                              ; preds = %693, %688
  %718 = phi i64 [ 0, %688 ], [ %713, %693 ]
  %719 = icmp eq i64 %689, 0
  br i1 %719, label %729, label %720

720:                                              ; preds = %717
  %721 = getelementptr inbounds i8, i8* %4, i64 %718
  %722 = bitcast i8* %721 to i32*
  %723 = load i32, i32* %722, align 4, !alias.scope !82, !noalias !77
  %724 = mul i32 %723, 506832829
  %725 = lshr i32 %724, 17
  %726 = zext i32 %725 to i64
  %727 = getelementptr inbounds i32, i32* %681, i64 %726
  store i32 -858993460, i32* %727, align 4, !noalias !85
  %728 = getelementptr inbounds i16, i16* %683, i64 %726
  store i16 -13108, i16* %728, align 2, !noalias !85
  br label %729

729:                                              ; preds = %720, %717, %716, %686
  call void @llvm.memset.p0i8.i64(i8* align 1 %684, i8 0, i64 65536, i1 false) #8, !noalias !85
  %730 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 0
  store i16 0, i16* %730, align 8, !alias.scope !77, !noalias !80
  br label %1419

731:                                              ; preds = %450
  %732 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 8
  %733 = bitcast i16* %732 to i8**
  %734 = load i8*, i8** %733, align 8, !alias.scope !86, !noalias !89
  %735 = bitcast i8* %734 to i32*
  %736 = getelementptr inbounds i8, i8* %734, i64 131072
  %737 = bitcast i8* %736 to i16*
  %738 = getelementptr inbounds i8, i8* %734, i64 196608
  %739 = icmp ult i64 %49, 513
  br i1 %739, label %740, label %770

740:                                              ; preds = %731
  %741 = icmp eq i64 %49, 0
  br i1 %741, label %783, label %742

742:                                              ; preds = %740
  %743 = and i64 %49, 1
  %744 = icmp eq i64 %49, 1
  br i1 %744, label %771, label %745

745:                                              ; preds = %742
  %746 = sub nsw i64 %49, %743
  br label %747

747:                                              ; preds = %747, %745
  %748 = phi i64 [ 0, %745 ], [ %767, %747 ]
  %749 = phi i64 [ %746, %745 ], [ %768, %747 ]
  %750 = getelementptr inbounds i8, i8* %4, i64 %748
  %751 = bitcast i8* %750 to i32*
  %752 = load i32, i32* %751, align 4, !alias.scope !91, !noalias !86
  %753 = mul i32 %752, 506832829
  %754 = lshr i32 %753, 17
  %755 = zext i32 %754 to i64
  %756 = getelementptr inbounds i32, i32* %735, i64 %755
  store i32 -858993460, i32* %756, align 4, !noalias !94
  %757 = getelementptr inbounds i16, i16* %737, i64 %755
  store i16 -13108, i16* %757, align 2, !noalias !94
  %758 = or i64 %748, 1
  %759 = getelementptr inbounds i8, i8* %4, i64 %758
  %760 = bitcast i8* %759 to i32*
  %761 = load i32, i32* %760, align 4, !alias.scope !91, !noalias !86
  %762 = mul i32 %761, 506832829
  %763 = lshr i32 %762, 17
  %764 = zext i32 %763 to i64
  %765 = getelementptr inbounds i32, i32* %735, i64 %764
  store i32 -858993460, i32* %765, align 4, !noalias !94
  %766 = getelementptr inbounds i16, i16* %737, i64 %764
  store i16 -13108, i16* %766, align 2, !noalias !94
  %767 = add nuw i64 %748, 2
  %768 = add i64 %749, -2
  %769 = icmp eq i64 %768, 0
  br i1 %769, label %771, label %747

770:                                              ; preds = %731
  call void @llvm.memset.p0i8.i64(i8* align 4 %734, i8 -52, i64 131072, i1 false) #8, !noalias !94
  call void @llvm.memset.p0i8.i64(i8* align 2 %736, i8 0, i64 65536, i1 false) #8, !noalias !94
  br label %783

771:                                              ; preds = %747, %742
  %772 = phi i64 [ 0, %742 ], [ %767, %747 ]
  %773 = icmp eq i64 %743, 0
  br i1 %773, label %783, label %774

774:                                              ; preds = %771
  %775 = getelementptr inbounds i8, i8* %4, i64 %772
  %776 = bitcast i8* %775 to i32*
  %777 = load i32, i32* %776, align 4, !alias.scope !91, !noalias !86
  %778 = mul i32 %777, 506832829
  %779 = lshr i32 %778, 17
  %780 = zext i32 %779 to i64
  %781 = getelementptr inbounds i32, i32* %735, i64 %780
  store i32 -858993460, i32* %781, align 4, !noalias !94
  %782 = getelementptr inbounds i16, i16* %737, i64 %780
  store i16 -13108, i16* %782, align 2, !noalias !94
  br label %783

783:                                              ; preds = %774, %771, %770, %740
  call void @llvm.memset.p0i8.i64(i8* align 1 %738, i8 0, i64 65536, i1 false) #8, !noalias !94
  %784 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 0
  store i16 0, i16* %784, align 8, !alias.scope !86, !noalias !89
  br label %1419

785:                                              ; preds = %450
  %786 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0
  %787 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 2
  %788 = load i8*, i8** %787, align 8, !alias.scope !95, !noalias !98
  %789 = bitcast i8* %788 to i32*
  %790 = getelementptr inbounds i8, i8* %788, i64 131072
  %791 = bitcast i8* %790 to i16*
  %792 = getelementptr inbounds i8, i8* %788, i64 196608
  %793 = icmp ult i64 %49, 513
  br i1 %793, label %794, label %824

794:                                              ; preds = %785
  %795 = icmp eq i64 %49, 0
  br i1 %795, label %837, label %796

796:                                              ; preds = %794
  %797 = and i64 %49, 1
  %798 = icmp eq i64 %49, 1
  br i1 %798, label %825, label %799

799:                                              ; preds = %796
  %800 = sub nsw i64 %49, %797
  br label %801

801:                                              ; preds = %801, %799
  %802 = phi i64 [ 0, %799 ], [ %821, %801 ]
  %803 = phi i64 [ %800, %799 ], [ %822, %801 ]
  %804 = getelementptr inbounds i8, i8* %4, i64 %802
  %805 = bitcast i8* %804 to i32*
  %806 = load i32, i32* %805, align 4, !alias.scope !100, !noalias !95
  %807 = mul i32 %806, 506832829
  %808 = lshr i32 %807, 17
  %809 = zext i32 %808 to i64
  %810 = getelementptr inbounds i32, i32* %789, i64 %809
  store i32 -858993460, i32* %810, align 4, !noalias !103
  %811 = getelementptr inbounds i16, i16* %791, i64 %809
  store i16 -13108, i16* %811, align 2, !noalias !103
  %812 = or i64 %802, 1
  %813 = getelementptr inbounds i8, i8* %4, i64 %812
  %814 = bitcast i8* %813 to i32*
  %815 = load i32, i32* %814, align 4, !alias.scope !100, !noalias !95
  %816 = mul i32 %815, 506832829
  %817 = lshr i32 %816, 17
  %818 = zext i32 %817 to i64
  %819 = getelementptr inbounds i32, i32* %789, i64 %818
  store i32 -858993460, i32* %819, align 4, !noalias !103
  %820 = getelementptr inbounds i16, i16* %791, i64 %818
  store i16 -13108, i16* %820, align 2, !noalias !103
  %821 = add nuw i64 %802, 2
  %822 = add i64 %803, -2
  %823 = icmp eq i64 %822, 0
  br i1 %823, label %825, label %801

824:                                              ; preds = %785
  call void @llvm.memset.p0i8.i64(i8* align 4 %788, i8 -52, i64 131072, i1 false) #8, !noalias !103
  call void @llvm.memset.p0i8.i64(i8* align 2 %790, i8 0, i64 65536, i1 false) #8, !noalias !103
  br label %837

825:                                              ; preds = %801, %796
  %826 = phi i64 [ 0, %796 ], [ %821, %801 ]
  %827 = icmp eq i64 %797, 0
  br i1 %827, label %837, label %828

828:                                              ; preds = %825
  %829 = getelementptr inbounds i8, i8* %4, i64 %826
  %830 = bitcast i8* %829 to i32*
  %831 = load i32, i32* %830, align 4, !alias.scope !100, !noalias !95
  %832 = mul i32 %831, 506832829
  %833 = lshr i32 %832, 17
  %834 = zext i32 %833 to i64
  %835 = getelementptr inbounds i32, i32* %789, i64 %834
  store i32 -858993460, i32* %835, align 4, !noalias !103
  %836 = getelementptr inbounds i16, i16* %791, i64 %834
  store i16 -13108, i16* %836, align 2, !noalias !103
  br label %837

837:                                              ; preds = %828, %825, %824, %794
  call void @llvm.memset.p0i8.i64(i8* align 1 %792, i8 0, i64 65536, i1 false) #8, !noalias !103
  %838 = bitcast %struct.H42* %786 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %838, i8 0, i64 1024, i1 false) #8, !alias.scope !95, !noalias !98
  br label %1419

839:                                              ; preds = %450
  %840 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 4
  %841 = bitcast i16* %840 to i32**
  %842 = load i32*, i32** %841, align 8, !alias.scope !104, !noalias !107
  %843 = icmp ult i64 %49, 32769
  br i1 %843, label %844, label %865

844:                                              ; preds = %839
  %845 = icmp eq i64 %49, 0
  br i1 %845, label %1419, label %846

846:                                              ; preds = %844, %846
  %847 = phi i64 [ %863, %846 ], [ 0, %844 ]
  %848 = getelementptr inbounds i8, i8* %4, i64 %847
  %849 = bitcast i8* %848 to i64*
  %850 = load i64, i64* %849, align 8, !alias.scope !107, !noalias !104
  %851 = mul i64 %850, 3866266742567714048
  %852 = lshr i64 %851, 44
  %853 = getelementptr inbounds i32, i32* %842, i64 %852
  store i32 0, i32* %853, align 4, !noalias !109
  %854 = add nuw nsw i64 %852, 8
  %855 = and i64 %854, 1048575
  %856 = getelementptr inbounds i32, i32* %842, i64 %855
  store i32 0, i32* %856, align 4, !noalias !109
  %857 = add nuw nsw i64 %852, 16
  %858 = and i64 %857, 1048575
  %859 = getelementptr inbounds i32, i32* %842, i64 %858
  store i32 0, i32* %859, align 4, !noalias !109
  %860 = add nuw nsw i64 %852, 24
  %861 = and i64 %860, 1048575
  %862 = getelementptr inbounds i32, i32* %842, i64 %861
  store i32 0, i32* %862, align 4, !noalias !109
  %863 = add nuw i64 %847, 1
  %864 = icmp eq i64 %863, %49
  br i1 %864, label %1419, label %846

865:                                              ; preds = %839
  %866 = bitcast i32* %842 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %866, i8 0, i64 4194304, i1 false) #8, !noalias !109
  br label %1419

867:                                              ; preds = %450
  %868 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 60
  %869 = bitcast i16* %868 to i32*
  %870 = load i32, i32* %869, align 8, !alias.scope !110, !noalias !113
  %871 = icmp eq i32 %870, 0
  br i1 %871, label %872, label %876

872:                                              ; preds = %867
  %873 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 4
  %874 = bitcast i16* %873 to i32**
  %875 = load i32*, i32** %874, align 8, !alias.scope !115, !noalias !118
  br label %904

876:                                              ; preds = %867
  %877 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1
  store i32 0, i32* %869, align 8, !alias.scope !110, !noalias !113
  %878 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 52
  %879 = bitcast i16* %878 to i8**
  %880 = load i8*, i8** %879, align 8, !alias.scope !110, !noalias !113
  %881 = getelementptr inbounds i8, i8* %880, i64 262144
  %882 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 28
  %883 = bitcast i16* %882 to i8**
  store i8* %881, i8** %883, align 8, !alias.scope !110, !noalias !113
  %884 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 56
  %885 = bitcast i16* %884 to %struct.HasherCommon**
  %886 = load %struct.HasherCommon*, %struct.HasherCommon** %885, align 8, !alias.scope !110, !noalias !113
  %887 = bitcast %union.anon* %877 to %struct.HasherCommon**
  store %struct.HasherCommon* %886, %struct.HasherCommon** %887, align 8, !alias.scope !120, !noalias !113
  %888 = bitcast %struct.HasherCommon* %886 to i64*
  %889 = load i64, i64* %888, align 8, !noalias !123
  %890 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 4
  %891 = bitcast i16* %890 to i64*
  store i64 %889, i64* %891, align 8, !alias.scope !120, !noalias !113
  %892 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 8
  %893 = bitcast i16* %892 to i32*
  store i32 0, i32* %893, align 8, !alias.scope !124, !noalias !113
  %894 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 16
  %895 = bitcast i16* %894 to i64*
  store i64 0, i64* %895, align 8, !alias.scope !124, !noalias !113
  %896 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 22
  %897 = bitcast i16* %896 to i32*
  store i32 69069, i32* %897, align 4, !alias.scope !124, !noalias !113
  %898 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 24
  %899 = bitcast i16* %898 to i32*
  store i32 381957665, i32* %899, align 8, !alias.scope !124, !noalias !113
  %900 = ptrtoint i8* %881 to i64
  %901 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 12
  %902 = bitcast i16* %901 to i64*
  store i64 %900, i64* %902, align 8, !alias.scope !124, !noalias !113
  call void @llvm.memset.p0i8.i64(i8* align 4 %881, i8 -1, i64 67108864, i1 false) #8, !noalias !127
  %903 = inttoptr i64 %889 to i32*
  br label %904

904:                                              ; preds = %876, %872
  %905 = phi i32* [ %875, %872 ], [ %903, %876 ]
  %906 = icmp ult i64 %49, 2049
  br i1 %906, label %907, label %939

907:                                              ; preds = %904
  %908 = icmp eq i64 %49, 0
  br i1 %908, label %1419, label %909

909:                                              ; preds = %907
  %910 = and i64 %49, 1
  %911 = icmp eq i64 %49, 1
  br i1 %911, label %941, label %912

912:                                              ; preds = %909
  %913 = sub nsw i64 %49, %910
  br label %914

914:                                              ; preds = %914, %912
  %915 = phi i64 [ 0, %912 ], [ %936, %914 ]
  %916 = phi i64 [ %913, %912 ], [ %937, %914 ]
  %917 = getelementptr inbounds i8, i8* %4, i64 %915
  %918 = bitcast i8* %917 to i64*
  %919 = load i64, i64* %918, align 8, !alias.scope !118, !noalias !115
  %920 = mul i64 %919, -4819355556693147648
  %921 = lshr i64 %920, 48
  %922 = getelementptr inbounds i32, i32* %905, i64 %921
  store i32 0, i32* %922, align 4, !noalias !128
  %923 = add nuw nsw i64 %921, 8
  %924 = and i64 %923, 65535
  %925 = getelementptr inbounds i32, i32* %905, i64 %924
  store i32 0, i32* %925, align 4, !noalias !128
  %926 = or i64 %915, 1
  %927 = getelementptr inbounds i8, i8* %4, i64 %926
  %928 = bitcast i8* %927 to i64*
  %929 = load i64, i64* %928, align 8, !alias.scope !118, !noalias !115
  %930 = mul i64 %929, -4819355556693147648
  %931 = lshr i64 %930, 48
  %932 = getelementptr inbounds i32, i32* %905, i64 %931
  store i32 0, i32* %932, align 4, !noalias !128
  %933 = add nuw nsw i64 %931, 8
  %934 = and i64 %933, 65535
  %935 = getelementptr inbounds i32, i32* %905, i64 %934
  store i32 0, i32* %935, align 4, !noalias !128
  %936 = add nuw i64 %915, 2
  %937 = add i64 %916, -2
  %938 = icmp eq i64 %937, 0
  br i1 %938, label %941, label %914

939:                                              ; preds = %904
  %940 = bitcast i32* %905 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %940, i8 0, i64 262144, i1 false) #8, !noalias !128
  br label %956

941:                                              ; preds = %914, %909
  %942 = phi i64 [ 0, %909 ], [ %936, %914 ]
  %943 = icmp eq i64 %910, 0
  br i1 %943, label %954, label %944

944:                                              ; preds = %941
  %945 = getelementptr inbounds i8, i8* %4, i64 %942
  %946 = bitcast i8* %945 to i64*
  %947 = load i64, i64* %946, align 8, !alias.scope !118, !noalias !115
  %948 = mul i64 %947, -4819355556693147648
  %949 = lshr i64 %948, 48
  %950 = getelementptr inbounds i32, i32* %905, i64 %949
  store i32 0, i32* %950, align 4, !noalias !128
  %951 = add nuw nsw i64 %949, 8
  %952 = and i64 %951, 65535
  %953 = getelementptr inbounds i32, i32* %905, i64 %952
  store i32 0, i32* %953, align 4, !noalias !128
  br label %954

954:                                              ; preds = %941, %944
  %955 = icmp ult i64 %49, 32
  br i1 %955, label %1419, label %956

956:                                              ; preds = %954, %939
  %957 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 8
  %958 = bitcast i16* %957 to i32*
  %959 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 22
  %960 = bitcast i16* %959 to i32*
  %961 = load i32, i32* %960, align 4, !alias.scope !129, !noalias !132
  %962 = load i8, i8* %4, align 1, !alias.scope !132, !noalias !129
  %963 = zext i8 %962 to i32
  %964 = add nuw nsw i32 %963, 1
  %965 = getelementptr inbounds i8, i8* %4, i64 4
  %966 = load i8, i8* %965, align 1, !alias.scope !132, !noalias !129
  %967 = mul i32 %964, %961
  %968 = zext i8 %966 to i32
  %969 = add nuw nsw i32 %968, 1
  %970 = add i32 %969, %967
  %971 = getelementptr inbounds i8, i8* %4, i64 8
  %972 = load i8, i8* %971, align 1, !alias.scope !132, !noalias !129
  %973 = mul i32 %970, %961
  %974 = zext i8 %972 to i32
  %975 = add nuw nsw i32 %974, 1
  %976 = add i32 %975, %973
  %977 = getelementptr inbounds i8, i8* %4, i64 12
  %978 = load i8, i8* %977, align 1, !alias.scope !132, !noalias !129
  %979 = mul i32 %976, %961
  %980 = zext i8 %978 to i32
  %981 = add nuw nsw i32 %980, 1
  %982 = add i32 %981, %979
  %983 = getelementptr inbounds i8, i8* %4, i64 16
  %984 = load i8, i8* %983, align 1, !alias.scope !132, !noalias !129
  %985 = mul i32 %982, %961
  %986 = zext i8 %984 to i32
  %987 = add nuw nsw i32 %986, 1
  %988 = add i32 %987, %985
  %989 = getelementptr inbounds i8, i8* %4, i64 20
  %990 = load i8, i8* %989, align 1, !alias.scope !132, !noalias !129
  %991 = mul i32 %988, %961
  %992 = zext i8 %990 to i32
  %993 = add nuw nsw i32 %992, 1
  %994 = add i32 %993, %991
  %995 = getelementptr inbounds i8, i8* %4, i64 24
  %996 = load i8, i8* %995, align 1, !alias.scope !132, !noalias !129
  %997 = mul i32 %994, %961
  %998 = zext i8 %996 to i32
  %999 = add nuw nsw i32 %998, 1
  %1000 = add i32 %999, %997
  %1001 = getelementptr inbounds i8, i8* %4, i64 28
  %1002 = load i8, i8* %1001, align 1, !alias.scope !132, !noalias !129
  %1003 = mul i32 %1000, %961
  %1004 = zext i8 %1002 to i32
  %1005 = add nuw nsw i32 %1004, 1
  %1006 = add i32 %1005, %1003
  store i32 %1006, i32* %958, align 8, !alias.scope !129, !noalias !132
  br label %1419

1007:                                             ; preds = %450
  %1008 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 60
  %1009 = bitcast i16* %1008 to i32*
  %1010 = load i32, i32* %1009, align 8, !alias.scope !134, !noalias !137
  %1011 = icmp eq i32 %1010, 0
  br i1 %1011, label %1012, label %1016

1012:                                             ; preds = %1007
  %1013 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 4
  %1014 = bitcast i16* %1013 to i32**
  %1015 = load i32*, i32** %1014, align 8, !alias.scope !139, !noalias !142
  br label %1044

1016:                                             ; preds = %1007
  %1017 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1
  store i32 0, i32* %1009, align 8, !alias.scope !134, !noalias !137
  %1018 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 52
  %1019 = bitcast i16* %1018 to i8**
  %1020 = load i8*, i8** %1019, align 8, !alias.scope !134, !noalias !137
  %1021 = getelementptr inbounds i8, i8* %1020, i64 4194304
  %1022 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 28
  %1023 = bitcast i16* %1022 to i8**
  store i8* %1021, i8** %1023, align 8, !alias.scope !134, !noalias !137
  %1024 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 56
  %1025 = bitcast i16* %1024 to %struct.HasherCommon**
  %1026 = load %struct.HasherCommon*, %struct.HasherCommon** %1025, align 8, !alias.scope !134, !noalias !137
  %1027 = bitcast %union.anon* %1017 to %struct.HasherCommon**
  store %struct.HasherCommon* %1026, %struct.HasherCommon** %1027, align 8, !alias.scope !144, !noalias !137
  %1028 = bitcast %struct.HasherCommon* %1026 to i64*
  %1029 = load i64, i64* %1028, align 8, !noalias !147
  %1030 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 4
  %1031 = bitcast i16* %1030 to i64*
  store i64 %1029, i64* %1031, align 8, !alias.scope !144, !noalias !137
  %1032 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 8
  %1033 = bitcast i16* %1032 to i32*
  store i32 0, i32* %1033, align 8, !alias.scope !148, !noalias !137
  %1034 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 16
  %1035 = bitcast i16* %1034 to i64*
  store i64 0, i64* %1035, align 8, !alias.scope !148, !noalias !137
  %1036 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 22
  %1037 = bitcast i16* %1036 to i32*
  store i32 69069, i32* %1037, align 4, !alias.scope !148, !noalias !137
  %1038 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 24
  %1039 = bitcast i16* %1038 to i32*
  store i32 381957665, i32* %1039, align 8, !alias.scope !148, !noalias !137
  %1040 = ptrtoint i8* %1021 to i64
  %1041 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 12
  %1042 = bitcast i16* %1041 to i64*
  store i64 %1040, i64* %1042, align 8, !alias.scope !148, !noalias !137
  call void @llvm.memset.p0i8.i64(i8* align 4 %1021, i8 -1, i64 67108864, i1 false) #8, !noalias !151
  %1043 = inttoptr i64 %1029 to i32*
  br label %1044

1044:                                             ; preds = %1016, %1012
  %1045 = phi i32* [ %1015, %1012 ], [ %1043, %1016 ]
  %1046 = icmp ult i64 %49, 32769
  br i1 %1046, label %1047, label %1068

1047:                                             ; preds = %1044
  %1048 = icmp eq i64 %49, 0
  br i1 %1048, label %1419, label %1049

1049:                                             ; preds = %1047, %1049
  %1050 = phi i64 [ %1066, %1049 ], [ 0, %1047 ]
  %1051 = getelementptr inbounds i8, i8* %4, i64 %1050
  %1052 = bitcast i8* %1051 to i64*
  %1053 = load i64, i64* %1052, align 8, !alias.scope !142, !noalias !139
  %1054 = mul i64 %1053, 3866266742567714048
  %1055 = lshr i64 %1054, 44
  %1056 = getelementptr inbounds i32, i32* %1045, i64 %1055
  store i32 0, i32* %1056, align 4, !noalias !152
  %1057 = add nuw nsw i64 %1055, 8
  %1058 = and i64 %1057, 1048575
  %1059 = getelementptr inbounds i32, i32* %1045, i64 %1058
  store i32 0, i32* %1059, align 4, !noalias !152
  %1060 = add nuw nsw i64 %1055, 16
  %1061 = and i64 %1060, 1048575
  %1062 = getelementptr inbounds i32, i32* %1045, i64 %1061
  store i32 0, i32* %1062, align 4, !noalias !152
  %1063 = add nuw nsw i64 %1055, 24
  %1064 = and i64 %1063, 1048575
  %1065 = getelementptr inbounds i32, i32* %1045, i64 %1064
  store i32 0, i32* %1065, align 4, !noalias !152
  %1066 = add nuw i64 %1050, 1
  %1067 = icmp eq i64 %1066, %49
  br i1 %1067, label %1070, label %1049

1068:                                             ; preds = %1044
  %1069 = bitcast i32* %1045 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %1069, i8 0, i64 4194304, i1 false) #8, !noalias !152
  br label %1072

1070:                                             ; preds = %1049
  %1071 = icmp ult i64 %49, 32
  br i1 %1071, label %1419, label %1072

1072:                                             ; preds = %1070, %1068
  %1073 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 8
  %1074 = bitcast i16* %1073 to i32*
  %1075 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 22
  %1076 = bitcast i16* %1075 to i32*
  %1077 = load i32, i32* %1076, align 4, !alias.scope !153, !noalias !156
  %1078 = load i8, i8* %4, align 1, !alias.scope !156, !noalias !153
  %1079 = zext i8 %1078 to i32
  %1080 = add nuw nsw i32 %1079, 1
  %1081 = getelementptr inbounds i8, i8* %4, i64 4
  %1082 = load i8, i8* %1081, align 1, !alias.scope !156, !noalias !153
  %1083 = mul i32 %1080, %1077
  %1084 = zext i8 %1082 to i32
  %1085 = add nuw nsw i32 %1084, 1
  %1086 = add i32 %1085, %1083
  %1087 = getelementptr inbounds i8, i8* %4, i64 8
  %1088 = load i8, i8* %1087, align 1, !alias.scope !156, !noalias !153
  %1089 = mul i32 %1086, %1077
  %1090 = zext i8 %1088 to i32
  %1091 = add nuw nsw i32 %1090, 1
  %1092 = add i32 %1091, %1089
  %1093 = getelementptr inbounds i8, i8* %4, i64 12
  %1094 = load i8, i8* %1093, align 1, !alias.scope !156, !noalias !153
  %1095 = mul i32 %1092, %1077
  %1096 = zext i8 %1094 to i32
  %1097 = add nuw nsw i32 %1096, 1
  %1098 = add i32 %1097, %1095
  %1099 = getelementptr inbounds i8, i8* %4, i64 16
  %1100 = load i8, i8* %1099, align 1, !alias.scope !156, !noalias !153
  %1101 = mul i32 %1098, %1077
  %1102 = zext i8 %1100 to i32
  %1103 = add nuw nsw i32 %1102, 1
  %1104 = add i32 %1103, %1101
  %1105 = getelementptr inbounds i8, i8* %4, i64 20
  %1106 = load i8, i8* %1105, align 1, !alias.scope !156, !noalias !153
  %1107 = mul i32 %1104, %1077
  %1108 = zext i8 %1106 to i32
  %1109 = add nuw nsw i32 %1108, 1
  %1110 = add i32 %1109, %1107
  %1111 = getelementptr inbounds i8, i8* %4, i64 24
  %1112 = load i8, i8* %1111, align 1, !alias.scope !156, !noalias !153
  %1113 = mul i32 %1110, %1077
  %1114 = zext i8 %1112 to i32
  %1115 = add nuw nsw i32 %1114, 1
  %1116 = add i32 %1115, %1113
  %1117 = getelementptr inbounds i8, i8* %4, i64 28
  %1118 = load i8, i8* %1117, align 1, !alias.scope !156, !noalias !153
  %1119 = mul i32 %1116, %1077
  %1120 = zext i8 %1118 to i32
  %1121 = add nuw nsw i32 %1120, 1
  %1122 = add i32 %1121, %1119
  store i32 %1122, i32* %1074, align 8, !alias.scope !153, !noalias !156
  br label %1419

1123:                                             ; preds = %450
  %1124 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1
  %1125 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 88
  %1126 = bitcast i16* %1125 to i32*
  %1127 = load i32, i32* %1126, align 8, !alias.scope !158, !noalias !161
  %1128 = icmp eq i32 %1127, 0
  br i1 %1128, label %1129, label %1135

1129:                                             ; preds = %1123
  %1130 = bitcast %union.anon* %1124 to i64*
  %1131 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 28
  %1132 = bitcast i16* %1131 to i16**
  %1133 = load i16*, i16** %1132, align 8, !alias.scope !163, !noalias !166
  %1134 = load i64, i64* %1130, align 8, !alias.scope !163, !noalias !166
  br label %1211

1135:                                             ; preds = %1123
  store i32 0, i32* %1126, align 8, !alias.scope !158, !noalias !161
  %1136 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 80
  %1137 = bitcast i16* %1136 to i8**
  %1138 = load i8*, i8** %1137, align 8, !alias.scope !158, !noalias !161
  %1139 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 92
  %1140 = bitcast i16* %1139 to %struct.BrotliEncoderParams**
  %1141 = load %struct.BrotliEncoderParams*, %struct.BrotliEncoderParams** %1140, align 8, !alias.scope !158, !noalias !161
  %1142 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %1141, i64 0, i32 8, i32 1
  %1143 = load i32, i32* %1142, align 4, !noalias !161
  %1144 = zext i32 %1143 to i64
  %1145 = shl i64 1, %1144
  %1146 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %1141, i64 0, i32 8, i32 2
  %1147 = load i32, i32* %1146, align 8, !noalias !161
  %1148 = zext i32 %1147 to i64
  %1149 = shl i64 %1145, 1
  %1150 = shl i64 %1145, 2
  %1151 = shl i64 %1150, %1148
  %1152 = add i64 %1151, %1149
  %1153 = getelementptr inbounds i8, i8* %1138, i64 %1152
  %1154 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 56
  %1155 = bitcast i16* %1154 to i8**
  store i8* %1153, i8** %1155, align 8, !alias.scope !158, !noalias !161
  %1156 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 84
  %1157 = bitcast i16* %1156 to %struct.HasherCommon**
  %1158 = load %struct.HasherCommon*, %struct.HasherCommon** %1157, align 8, !alias.scope !158, !noalias !161
  %1159 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 24
  %1160 = bitcast i16* %1159 to %struct.HasherCommon**
  store %struct.HasherCommon* %1158, %struct.HasherCommon** %1160, align 8, !alias.scope !168, !noalias !161
  %1161 = getelementptr inbounds %struct.HasherCommon, %struct.HasherCommon* %1158, i64 0, i32 3, i32 1
  %1162 = load i32, i32* %1161, align 4, !noalias !171
  %1163 = sub nsw i32 64, %1162
  %1164 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 8
  %1165 = bitcast i16* %1164 to i32*
  store i32 %1163, i32* %1165, align 8, !alias.scope !168, !noalias !161
  %1166 = getelementptr inbounds %struct.HasherCommon, %struct.HasherCommon* %1158, i64 0, i32 3, i32 3
  %1167 = load i32, i32* %1166, align 4, !noalias !171
  %1168 = shl nsw i32 %1167, 3
  %1169 = sub nsw i32 64, %1168
  %1170 = zext i32 %1169 to i64
  %1171 = lshr i64 -1, %1170
  %1172 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 12
  %1173 = bitcast i16* %1172 to i64*
  store i64 %1171, i64* %1173, align 8, !alias.scope !168, !noalias !161
  %1174 = zext i32 %1162 to i64
  %1175 = shl i64 1, %1174
  %1176 = bitcast %union.anon* %1124 to i64*
  store i64 %1175, i64* %1176, align 8, !alias.scope !168, !noalias !161
  %1177 = getelementptr inbounds %struct.HasherCommon, %struct.HasherCommon* %1158, i64 0, i32 3, i32 2
  %1178 = load i32, i32* %1177, align 8, !noalias !171
  %1179 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 18
  %1180 = bitcast i16* %1179 to i32*
  store i32 %1178, i32* %1180, align 4, !alias.scope !168, !noalias !161
  %1181 = zext i32 %1178 to i64
  %1182 = shl i64 1, %1181
  %1183 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 4
  %1184 = bitcast i16* %1183 to i64*
  store i64 %1182, i64* %1184, align 8, !alias.scope !168, !noalias !161
  %1185 = trunc i64 %1182 to i32
  %1186 = add i32 %1185, -1
  %1187 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 16
  %1188 = bitcast i16* %1187 to i32*
  store i32 %1186, i32* %1188, align 8, !alias.scope !168, !noalias !161
  %1189 = getelementptr inbounds %struct.HasherCommon, %struct.HasherCommon* %1158, i64 0, i32 3, i32 4
  %1190 = load i32, i32* %1189, align 8, !noalias !171
  %1191 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 20
  %1192 = bitcast i16* %1191 to i32*
  store i32 %1190, i32* %1192, align 8, !alias.scope !168, !noalias !161
  %1193 = bitcast %struct.HasherCommon* %1158 to i16**
  %1194 = load i16*, i16** %1193, align 8, !noalias !171
  %1195 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 28
  %1196 = bitcast i16* %1195 to i16**
  store i16* %1194, i16** %1196, align 8, !alias.scope !168, !noalias !161
  %1197 = getelementptr inbounds i16, i16* %1194, i64 %1175
  %1198 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 32
  %1199 = bitcast i16* %1198 to i16**
  store i16* %1197, i16** %1199, align 8, !alias.scope !168, !noalias !161
  %1200 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 36
  %1201 = bitcast i16* %1200 to i32*
  store i32 0, i32* %1201, align 8, !alias.scope !172, !noalias !161
  %1202 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 44
  %1203 = bitcast i16* %1202 to i64*
  store i64 0, i64* %1203, align 8, !alias.scope !172, !noalias !161
  %1204 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 50
  %1205 = bitcast i16* %1204 to i32*
  store i32 69069, i32* %1205, align 4, !alias.scope !172, !noalias !161
  %1206 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 52
  %1207 = bitcast i16* %1206 to i32*
  store i32 -236195711, i32* %1207, align 8, !alias.scope !172, !noalias !161
  %1208 = ptrtoint i8* %1153 to i64
  %1209 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 40
  %1210 = bitcast i16* %1209 to i64*
  store i64 %1208, i64* %1210, align 8, !alias.scope !172, !noalias !161
  call void @llvm.memset.p0i8.i64(i8* align 4 %1153, i8 -1, i64 67108864, i1 false) #8, !noalias !175
  br label %1211

1211:                                             ; preds = %1135, %1129
  %1212 = phi i64 [ %1134, %1129 ], [ %1175, %1135 ]
  %1213 = phi i16* [ %1133, %1129 ], [ %1194, %1135 ]
  %1214 = lshr i64 %1212, 6
  %1215 = icmp ult i64 %1214, %49
  br i1 %1215, label %1253, label %1216

1216:                                             ; preds = %1211
  %1217 = icmp eq i64 %49, 0
  br i1 %1217, label %1419, label %1218

1218:                                             ; preds = %1216
  %1219 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 12
  %1220 = bitcast i16* %1219 to i64*
  %1221 = load i64, i64* %1220, align 8, !alias.scope !163, !noalias !166
  %1222 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 8
  %1223 = bitcast i16* %1222 to i32*
  %1224 = load i32, i32* %1223, align 8, !alias.scope !163, !noalias !166
  %1225 = zext i32 %1224 to i64
  %1226 = and i64 %49, 1
  %1227 = icmp eq i64 %49, 1
  br i1 %1227, label %1256, label %1228

1228:                                             ; preds = %1218
  %1229 = sub nsw i64 %49, %1226
  br label %1230

1230:                                             ; preds = %1230, %1228
  %1231 = phi i64 [ 0, %1228 ], [ %1250, %1230 ]
  %1232 = phi i64 [ %1229, %1228 ], [ %1251, %1230 ]
  %1233 = getelementptr inbounds i8, i8* %4, i64 %1231
  %1234 = bitcast i8* %1233 to i64*
  %1235 = load i64, i64* %1234, align 8, !alias.scope !176, !noalias !163
  %1236 = and i64 %1235, %1221
  %1237 = mul i64 %1236, 2297779722762296275
  %1238 = lshr i64 %1237, %1225
  %1239 = and i64 %1238, 4294967295
  %1240 = getelementptr inbounds i16, i16* %1213, i64 %1239
  store i16 0, i16* %1240, align 2, !noalias !179
  %1241 = or i64 %1231, 1
  %1242 = getelementptr inbounds i8, i8* %4, i64 %1241
  %1243 = bitcast i8* %1242 to i64*
  %1244 = load i64, i64* %1243, align 8, !alias.scope !176, !noalias !163
  %1245 = and i64 %1244, %1221
  %1246 = mul i64 %1245, 2297779722762296275
  %1247 = lshr i64 %1246, %1225
  %1248 = and i64 %1247, 4294967295
  %1249 = getelementptr inbounds i16, i16* %1213, i64 %1248
  store i16 0, i16* %1249, align 2, !noalias !179
  %1250 = add nuw i64 %1231, 2
  %1251 = add i64 %1232, -2
  %1252 = icmp eq i64 %1251, 0
  br i1 %1252, label %1256, label %1230

1253:                                             ; preds = %1211
  %1254 = bitcast i16* %1213 to i8*
  %1255 = shl i64 %1212, 1
  call void @llvm.memset.p0i8.i64(i8* align 2 %1254, i8 0, i64 %1255, i1 false) #8, !noalias !179
  br label %1268

1256:                                             ; preds = %1230, %1218
  %1257 = phi i64 [ 0, %1218 ], [ %1250, %1230 ]
  %1258 = icmp eq i64 %1226, 0
  br i1 %1258, label %1268, label %1259

1259:                                             ; preds = %1256
  %1260 = getelementptr inbounds i8, i8* %4, i64 %1257
  %1261 = bitcast i8* %1260 to i64*
  %1262 = load i64, i64* %1261, align 8, !alias.scope !176, !noalias !163
  %1263 = and i64 %1262, %1221
  %1264 = mul i64 %1263, 2297779722762296275
  %1265 = lshr i64 %1264, %1225
  %1266 = and i64 %1265, 4294967295
  %1267 = getelementptr inbounds i16, i16* %1213, i64 %1266
  store i16 0, i16* %1267, align 2, !noalias !179
  br label %1268

1268:                                             ; preds = %1259, %1256, %1253
  %1269 = icmp ult i64 %49, 32
  br i1 %1269, label %1419, label %1270

1270:                                             ; preds = %1268
  %1271 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 36
  %1272 = bitcast i16* %1271 to i32*
  store i32 0, i32* %1272, align 8, !alias.scope !180, !noalias !183
  %1273 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 50
  %1274 = bitcast i16* %1273 to i32*
  %1275 = load i32, i32* %1274, align 4, !alias.scope !180, !noalias !183
  br label %1276

1276:                                             ; preds = %1276, %1270
  %1277 = phi i32 [ 0, %1270 ], [ %1305, %1276 ]
  %1278 = phi i64 [ 0, %1270 ], [ %1306, %1276 ]
  %1279 = getelementptr inbounds i8, i8* %4, i64 %1278
  %1280 = load i8, i8* %1279, align 1, !alias.scope !183, !noalias !180
  %1281 = mul i32 %1277, %1275
  %1282 = zext i8 %1280 to i32
  %1283 = add i32 %1281, 1
  %1284 = add i32 %1283, %1282
  %1285 = or i64 %1278, 1
  %1286 = getelementptr inbounds i8, i8* %4, i64 %1285
  %1287 = load i8, i8* %1286, align 1, !alias.scope !183, !noalias !180
  %1288 = mul i32 %1284, %1275
  %1289 = zext i8 %1287 to i32
  %1290 = add i32 %1288, 1
  %1291 = add i32 %1290, %1289
  %1292 = or i64 %1278, 2
  %1293 = getelementptr inbounds i8, i8* %4, i64 %1292
  %1294 = load i8, i8* %1293, align 1, !alias.scope !183, !noalias !180
  %1295 = mul i32 %1291, %1275
  %1296 = zext i8 %1294 to i32
  %1297 = add i32 %1295, 1
  %1298 = add i32 %1297, %1296
  %1299 = or i64 %1278, 3
  %1300 = getelementptr inbounds i8, i8* %4, i64 %1299
  %1301 = load i8, i8* %1300, align 1, !alias.scope !183, !noalias !180
  %1302 = mul i32 %1298, %1275
  %1303 = zext i8 %1301 to i32
  %1304 = add i32 %1302, 1
  %1305 = add i32 %1304, %1303
  %1306 = add nuw nsw i64 %1278, 4
  %1307 = icmp eq i64 %1306, 32
  br i1 %1307, label %1308, label %1276

1308:                                             ; preds = %1276
  store i32 %1305, i32* %1272, align 8, !alias.scope !180, !noalias !183
  br label %1419

1309:                                             ; preds = %450
  %1310 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 8
  %1311 = bitcast i16* %1310 to i32*
  %1312 = load i32, i32* %1311, align 8, !alias.scope !185
  %1313 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 4
  %1314 = bitcast i16* %1313 to i32**
  %1315 = load i32*, i32** %1314, align 8, !alias.scope !185
  %1316 = insertelement <4 x i32> undef, i32 %1312, i32 0
  %1317 = shufflevector <4 x i32> %1316, <4 x i32> undef, <4 x i32> zeroinitializer
  %1318 = insertelement <4 x i32> undef, i32 %1312, i32 0
  %1319 = shufflevector <4 x i32> %1318, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %1320

1320:                                             ; preds = %1320, %1309
  %1321 = phi i64 [ 0, %1309 ], [ %1361, %1320 ]
  %1322 = getelementptr inbounds i32, i32* %1315, i64 %1321
  %1323 = bitcast i32* %1322 to <4 x i32>*
  store <4 x i32> %1317, <4 x i32>* %1323, align 4, !noalias !185
  %1324 = getelementptr inbounds i32, i32* %1322, i64 4
  %1325 = bitcast i32* %1324 to <4 x i32>*
  store <4 x i32> %1319, <4 x i32>* %1325, align 4, !noalias !185
  %1326 = or i64 %1321, 8
  %1327 = getelementptr inbounds i32, i32* %1315, i64 %1326
  %1328 = bitcast i32* %1327 to <4 x i32>*
  store <4 x i32> %1317, <4 x i32>* %1328, align 4, !noalias !185
  %1329 = getelementptr inbounds i32, i32* %1327, i64 4
  %1330 = bitcast i32* %1329 to <4 x i32>*
  store <4 x i32> %1319, <4 x i32>* %1330, align 4, !noalias !185
  %1331 = or i64 %1321, 16
  %1332 = getelementptr inbounds i32, i32* %1315, i64 %1331
  %1333 = bitcast i32* %1332 to <4 x i32>*
  store <4 x i32> %1317, <4 x i32>* %1333, align 4, !noalias !185
  %1334 = getelementptr inbounds i32, i32* %1332, i64 4
  %1335 = bitcast i32* %1334 to <4 x i32>*
  store <4 x i32> %1319, <4 x i32>* %1335, align 4, !noalias !185
  %1336 = or i64 %1321, 24
  %1337 = getelementptr inbounds i32, i32* %1315, i64 %1336
  %1338 = bitcast i32* %1337 to <4 x i32>*
  store <4 x i32> %1317, <4 x i32>* %1338, align 4, !noalias !185
  %1339 = getelementptr inbounds i32, i32* %1337, i64 4
  %1340 = bitcast i32* %1339 to <4 x i32>*
  store <4 x i32> %1319, <4 x i32>* %1340, align 4, !noalias !185
  %1341 = or i64 %1321, 32
  %1342 = getelementptr inbounds i32, i32* %1315, i64 %1341
  %1343 = bitcast i32* %1342 to <4 x i32>*
  store <4 x i32> %1317, <4 x i32>* %1343, align 4, !noalias !185
  %1344 = getelementptr inbounds i32, i32* %1342, i64 4
  %1345 = bitcast i32* %1344 to <4 x i32>*
  store <4 x i32> %1319, <4 x i32>* %1345, align 4, !noalias !185
  %1346 = or i64 %1321, 40
  %1347 = getelementptr inbounds i32, i32* %1315, i64 %1346
  %1348 = bitcast i32* %1347 to <4 x i32>*
  store <4 x i32> %1317, <4 x i32>* %1348, align 4, !noalias !185
  %1349 = getelementptr inbounds i32, i32* %1347, i64 4
  %1350 = bitcast i32* %1349 to <4 x i32>*
  store <4 x i32> %1319, <4 x i32>* %1350, align 4, !noalias !185
  %1351 = or i64 %1321, 48
  %1352 = getelementptr inbounds i32, i32* %1315, i64 %1351
  %1353 = bitcast i32* %1352 to <4 x i32>*
  store <4 x i32> %1317, <4 x i32>* %1353, align 4, !noalias !185
  %1354 = getelementptr inbounds i32, i32* %1352, i64 4
  %1355 = bitcast i32* %1354 to <4 x i32>*
  store <4 x i32> %1319, <4 x i32>* %1355, align 4, !noalias !185
  %1356 = or i64 %1321, 56
  %1357 = getelementptr inbounds i32, i32* %1315, i64 %1356
  %1358 = bitcast i32* %1357 to <4 x i32>*
  store <4 x i32> %1317, <4 x i32>* %1358, align 4, !noalias !185
  %1359 = getelementptr inbounds i32, i32* %1357, i64 4
  %1360 = bitcast i32* %1359 to <4 x i32>*
  store <4 x i32> %1319, <4 x i32>* %1360, align 4, !noalias !185
  %1361 = add nuw nsw i64 %1321, 64
  %1362 = icmp eq i64 %1361, 131072
  br i1 %1362, label %1419, label %1320, !llvm.loop !188

1363:                                             ; preds = %466, %460
  %1364 = phi i64 [ 0, %460 ], [ %496, %466 ]
  %1365 = icmp eq i64 %462, 0
  br i1 %1365, label %1419, label %1366

1366:                                             ; preds = %1363, %1366
  %1367 = phi i64 [ %1375, %1366 ], [ %1364, %1363 ]
  %1368 = phi i64 [ %1376, %1366 ], [ %462, %1363 ]
  %1369 = getelementptr inbounds i8, i8* %4, i64 %1367
  %1370 = bitcast i8* %1369 to i64*
  %1371 = load i64, i64* %1370, align 8, !alias.scope !44, !noalias !41
  %1372 = mul i64 %1371, -4819355556693147648
  %1373 = lshr i64 %1372, 48
  %1374 = getelementptr inbounds i32, i32* %456, i64 %1373
  store i32 0, i32* %1374, align 4, !noalias !46
  %1375 = add nuw i64 %1367, 1
  %1376 = add i64 %1368, -1
  %1377 = icmp eq i64 %1376, 0
  br i1 %1377, label %1419, label %1366, !llvm.loop !190

1378:                                             ; preds = %513, %508
  %1379 = phi i64 [ 0, %508 ], [ %535, %513 ]
  %1380 = icmp eq i64 %509, 0
  br i1 %1380, label %1419, label %1381

1381:                                             ; preds = %1378
  %1382 = getelementptr inbounds i8, i8* %4, i64 %1379
  %1383 = bitcast i8* %1382 to i64*
  %1384 = load i64, i64* %1383, align 8, !alias.scope !50, !noalias !47
  %1385 = mul i64 %1384, -4819355556693147648
  %1386 = lshr i64 %1385, 48
  %1387 = getelementptr inbounds i32, i32* %504, i64 %1386
  store i32 0, i32* %1387, align 4, !noalias !52
  %1388 = add nuw nsw i64 %1386, 8
  %1389 = and i64 %1388, 65535
  %1390 = getelementptr inbounds i32, i32* %504, i64 %1389
  store i32 0, i32* %1390, align 4, !noalias !52
  br label %1419

1391:                                             ; preds = %588, %579
  %1392 = phi i64 [ 0, %579 ], [ %622, %588 ]
  %1393 = icmp eq i64 %584, 0
  br i1 %1393, label %1419, label %1394

1394:                                             ; preds = %1391, %1394
  %1395 = phi i64 [ %1404, %1394 ], [ %1392, %1391 ]
  %1396 = phi i64 [ %1405, %1394 ], [ %584, %1391 ]
  %1397 = getelementptr inbounds i8, i8* %4, i64 %1395
  %1398 = bitcast i8* %1397 to i32*
  %1399 = load i32, i32* %1398, align 4, !alias.scope !64, !noalias !59
  %1400 = mul i32 %1399, 506832829
  %1401 = lshr i32 %1400, %582
  %1402 = zext i32 %1401 to i64
  %1403 = getelementptr inbounds i16, i16* %572, i64 %1402
  store i16 0, i16* %1403, align 2, !noalias !67
  %1404 = add nuw i64 %1395, 1
  %1405 = add i64 %1396, -1
  %1406 = icmp eq i64 %1405, 0
  br i1 %1406, label %1419, label %1394, !llvm.loop !192

1407:                                             ; preds = %651, %639
  %1408 = phi i64 [ 0, %639 ], [ %671, %651 ]
  %1409 = icmp eq i64 %647, 0
  br i1 %1409, label %1419, label %1410

1410:                                             ; preds = %1407
  %1411 = getelementptr inbounds i8, i8* %4, i64 %1408
  %1412 = bitcast i8* %1411 to i64*
  %1413 = load i64, i64* %1412, align 8, !alias.scope !73, !noalias !68
  %1414 = and i64 %1413, %642
  %1415 = mul i64 %1414, 2297779722762296275
  %1416 = lshr i64 %1415, %646
  %1417 = and i64 %1416, 4294967295
  %1418 = getelementptr inbounds i16, i16* %632, i64 %1417
  store i16 0, i16* %1418, align 2, !noalias !76
  br label %1419

1419:                                             ; preds = %1320, %846, %1410, %1407, %1391, %1394, %547, %1381, %1378, %1363, %1366, %1308, %1268, %1216, %1072, %1070, %1047, %956, %954, %907, %865, %844, %837, %783, %729, %674, %637, %625, %577, %566, %545, %538, %506, %499, %458, %450
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 16, i1 false) #8
  store i32 1, i32* %452, align 4
  br label %1420

1420:                                             ; preds = %1419, %443
  %1421 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 0, i32 3, i32 0
  %1422 = load i32, i32* %1421, align 8
  switch i32 %1422, label %1579 [
    i32 65, label %1533
    i32 55, label %1478
    i32 35, label %1423
  ]

1423:                                             ; preds = %1420
  %1424 = icmp ult i64 %49, 32
  br i1 %1424, label %1476, label %1425

1425:                                             ; preds = %1423
  %1426 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 8
  %1427 = bitcast i16* %1426 to i32*
  %1428 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 22
  %1429 = bitcast i16* %1428 to i32*
  %1430 = load i32, i32* %1429, align 4, !alias.scope !193, !noalias !200
  %1431 = load i8, i8* %4, align 1, !alias.scope !200, !noalias !193
  %1432 = zext i8 %1431 to i32
  %1433 = add nuw nsw i32 %1432, 1
  %1434 = getelementptr inbounds i8, i8* %4, i64 4
  %1435 = load i8, i8* %1434, align 1, !alias.scope !200, !noalias !193
  %1436 = mul i32 %1433, %1430
  %1437 = zext i8 %1435 to i32
  %1438 = add nuw nsw i32 %1437, 1
  %1439 = add i32 %1438, %1436
  %1440 = getelementptr inbounds i8, i8* %4, i64 8
  %1441 = load i8, i8* %1440, align 1, !alias.scope !200, !noalias !193
  %1442 = mul i32 %1439, %1430
  %1443 = zext i8 %1441 to i32
  %1444 = add nuw nsw i32 %1443, 1
  %1445 = add i32 %1444, %1442
  %1446 = getelementptr inbounds i8, i8* %4, i64 12
  %1447 = load i8, i8* %1446, align 1, !alias.scope !200, !noalias !193
  %1448 = mul i32 %1445, %1430
  %1449 = zext i8 %1447 to i32
  %1450 = add nuw nsw i32 %1449, 1
  %1451 = add i32 %1450, %1448
  %1452 = getelementptr inbounds i8, i8* %4, i64 16
  %1453 = load i8, i8* %1452, align 1, !alias.scope !200, !noalias !193
  %1454 = mul i32 %1451, %1430
  %1455 = zext i8 %1453 to i32
  %1456 = add nuw nsw i32 %1455, 1
  %1457 = add i32 %1456, %1454
  %1458 = getelementptr inbounds i8, i8* %4, i64 20
  %1459 = load i8, i8* %1458, align 1, !alias.scope !200, !noalias !193
  %1460 = mul i32 %1457, %1430
  %1461 = zext i8 %1459 to i32
  %1462 = add nuw nsw i32 %1461, 1
  %1463 = add i32 %1462, %1460
  %1464 = getelementptr inbounds i8, i8* %4, i64 24
  %1465 = load i8, i8* %1464, align 1, !alias.scope !200, !noalias !193
  %1466 = mul i32 %1463, %1430
  %1467 = zext i8 %1465 to i32
  %1468 = add nuw nsw i32 %1467, 1
  %1469 = add i32 %1468, %1466
  %1470 = getelementptr inbounds i8, i8* %4, i64 28
  %1471 = load i8, i8* %1470, align 1, !alias.scope !200, !noalias !193
  %1472 = mul i32 %1469, %1430
  %1473 = zext i8 %1471 to i32
  %1474 = add nuw nsw i32 %1473, 1
  %1475 = add i32 %1474, %1472
  store i32 %1475, i32* %1427, align 8, !alias.scope !193, !noalias !200
  br label %1476

1476:                                             ; preds = %1425, %1423
  %1477 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 16
  br label %1576

1478:                                             ; preds = %1420
  %1479 = icmp ult i64 %49, 32
  br i1 %1479, label %1531, label %1480

1480:                                             ; preds = %1478
  %1481 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 8
  %1482 = bitcast i16* %1481 to i32*
  %1483 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 22
  %1484 = bitcast i16* %1483 to i32*
  %1485 = load i32, i32* %1484, align 4, !alias.scope !202, !noalias !209
  %1486 = load i8, i8* %4, align 1, !alias.scope !209, !noalias !202
  %1487 = zext i8 %1486 to i32
  %1488 = add nuw nsw i32 %1487, 1
  %1489 = getelementptr inbounds i8, i8* %4, i64 4
  %1490 = load i8, i8* %1489, align 1, !alias.scope !209, !noalias !202
  %1491 = mul i32 %1488, %1485
  %1492 = zext i8 %1490 to i32
  %1493 = add nuw nsw i32 %1492, 1
  %1494 = add i32 %1493, %1491
  %1495 = getelementptr inbounds i8, i8* %4, i64 8
  %1496 = load i8, i8* %1495, align 1, !alias.scope !209, !noalias !202
  %1497 = mul i32 %1494, %1485
  %1498 = zext i8 %1496 to i32
  %1499 = add nuw nsw i32 %1498, 1
  %1500 = add i32 %1499, %1497
  %1501 = getelementptr inbounds i8, i8* %4, i64 12
  %1502 = load i8, i8* %1501, align 1, !alias.scope !209, !noalias !202
  %1503 = mul i32 %1500, %1485
  %1504 = zext i8 %1502 to i32
  %1505 = add nuw nsw i32 %1504, 1
  %1506 = add i32 %1505, %1503
  %1507 = getelementptr inbounds i8, i8* %4, i64 16
  %1508 = load i8, i8* %1507, align 1, !alias.scope !209, !noalias !202
  %1509 = mul i32 %1506, %1485
  %1510 = zext i8 %1508 to i32
  %1511 = add nuw nsw i32 %1510, 1
  %1512 = add i32 %1511, %1509
  %1513 = getelementptr inbounds i8, i8* %4, i64 20
  %1514 = load i8, i8* %1513, align 1, !alias.scope !209, !noalias !202
  %1515 = mul i32 %1512, %1485
  %1516 = zext i8 %1514 to i32
  %1517 = add nuw nsw i32 %1516, 1
  %1518 = add i32 %1517, %1515
  %1519 = getelementptr inbounds i8, i8* %4, i64 24
  %1520 = load i8, i8* %1519, align 1, !alias.scope !209, !noalias !202
  %1521 = mul i32 %1518, %1485
  %1522 = zext i8 %1520 to i32
  %1523 = add nuw nsw i32 %1522, 1
  %1524 = add i32 %1523, %1521
  %1525 = getelementptr inbounds i8, i8* %4, i64 28
  %1526 = load i8, i8* %1525, align 1, !alias.scope !209, !noalias !202
  %1527 = mul i32 %1524, %1485
  %1528 = zext i8 %1526 to i32
  %1529 = add nuw nsw i32 %1528, 1
  %1530 = add i32 %1529, %1527
  store i32 %1530, i32* %1482, align 8, !alias.scope !202, !noalias !209
  br label %1531

1531:                                             ; preds = %1480, %1478
  %1532 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 16
  br label %1576

1533:                                             ; preds = %1420
  %1534 = icmp ult i64 %49, 32
  br i1 %1534, label %1574, label %1535

1535:                                             ; preds = %1533
  %1536 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 36
  %1537 = bitcast i16* %1536 to i32*
  store i32 0, i32* %1537, align 8, !alias.scope !211, !noalias !218
  %1538 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 50
  %1539 = bitcast i16* %1538 to i32*
  %1540 = load i32, i32* %1539, align 4, !alias.scope !211, !noalias !218
  br label %1541

1541:                                             ; preds = %1541, %1535
  %1542 = phi i32 [ 0, %1535 ], [ %1570, %1541 ]
  %1543 = phi i64 [ 0, %1535 ], [ %1571, %1541 ]
  %1544 = getelementptr inbounds i8, i8* %4, i64 %1543
  %1545 = load i8, i8* %1544, align 1, !alias.scope !218, !noalias !211
  %1546 = mul i32 %1542, %1540
  %1547 = zext i8 %1545 to i32
  %1548 = add i32 %1546, 1
  %1549 = add i32 %1548, %1547
  %1550 = or i64 %1543, 1
  %1551 = getelementptr inbounds i8, i8* %4, i64 %1550
  %1552 = load i8, i8* %1551, align 1, !alias.scope !218, !noalias !211
  %1553 = mul i32 %1549, %1540
  %1554 = zext i8 %1552 to i32
  %1555 = add i32 %1553, 1
  %1556 = add i32 %1555, %1554
  %1557 = or i64 %1543, 2
  %1558 = getelementptr inbounds i8, i8* %4, i64 %1557
  %1559 = load i8, i8* %1558, align 1, !alias.scope !218, !noalias !211
  %1560 = mul i32 %1556, %1540
  %1561 = zext i8 %1559 to i32
  %1562 = add i32 %1560, 1
  %1563 = add i32 %1562, %1561
  %1564 = or i64 %1543, 3
  %1565 = getelementptr inbounds i8, i8* %4, i64 %1564
  %1566 = load i8, i8* %1565, align 1, !alias.scope !218, !noalias !211
  %1567 = mul i32 %1563, %1540
  %1568 = zext i8 %1566 to i32
  %1569 = add i32 %1567, 1
  %1570 = add i32 %1569, %1568
  %1571 = add nuw nsw i64 %1543, 4
  %1572 = icmp eq i64 %1571, 32
  br i1 %1572, label %1573, label %1541

1573:                                             ; preds = %1541
  store i32 %1570, i32* %1537, align 8, !alias.scope !211, !noalias !218
  br label %1574

1574:                                             ; preds = %1573, %1533
  %1575 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 44
  br label %1576

1576:                                             ; preds = %1574, %1531, %1476
  %1577 = phi i16* [ %1477, %1476 ], [ %1532, %1531 ], [ %1575, %1574 ]
  %1578 = bitcast i16* %1577 to i64*
  store i64 0, i64* %1578, align 8, !alias.scope !220
  br label %1579

1579:                                             ; preds = %1576, %1420
  %1580 = bitcast i64* %13 to i8*
  %1581 = bitcast i64* %14 to i8*
  %1582 = bitcast i64* %15 to i8*
  %1583 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1
  %1584 = bitcast %union.anon* %1583 to i64*
  %1585 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 4
  %1586 = bitcast i16* %1585 to i32**
  %1587 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 12
  %1588 = bitcast i16* %1587 to i32**
  %1589 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %12, i64 0, i32 1, i32 0, i32 0, i64 8
  %1590 = bitcast i16* %1589 to i32*
  %1591 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 0
  %1592 = bitcast %struct.MetaBlockSplit* %16 to i8*
  %1593 = bitcast %struct.BrotliEncoderParams* %17 to i8*
  %1594 = getelementptr inbounds %struct.MetaBlockSplit, %struct.MetaBlockSplit* %16, i64 0, i32 0
  %1595 = getelementptr inbounds %struct.MetaBlockSplit, %struct.MetaBlockSplit* %16, i64 0, i32 1
  %1596 = getelementptr inbounds %struct.MetaBlockSplit, %struct.MetaBlockSplit* %16, i64 0, i32 2
  %1597 = getelementptr inbounds %struct.MetaBlockSplit, %struct.MetaBlockSplit* %16, i64 0, i32 3
  %1598 = bitcast i32** %1597 to i8*
  %1599 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %17, i64 0, i32 9, i32 3
  %1600 = bitcast i32** %1597 to i8**
  %1601 = getelementptr inbounds %struct.MetaBlockSplit, %struct.MetaBlockSplit* %16, i64 0, i32 5
  %1602 = bitcast i32** %1601 to i8**
  %1603 = getelementptr inbounds %struct.MetaBlockSplit, %struct.MetaBlockSplit* %16, i64 0, i32 7
  %1604 = bitcast %struct.HistogramLiteral** %1603 to i8**
  %1605 = getelementptr inbounds %struct.MetaBlockSplit, %struct.MetaBlockSplit* %16, i64 0, i32 9
  %1606 = bitcast %struct.HistogramCommand** %1605 to i8**
  %1607 = getelementptr inbounds %struct.MetaBlockSplit, %struct.MetaBlockSplit* %16, i64 0, i32 11
  %1608 = bitcast %struct.HistogramDistance** %1607 to i8**
  br label %1609

1609:                                             ; preds = %1974, %1579
  %1610 = phi i8 [ 0, %1579 ], [ %1969, %1974 ]
  %1611 = phi i8 [ 0, %1579 ], [ %1968, %1974 ]
  %1612 = phi i64 [ 0, %1579 ], [ %1895, %1974 ]
  %1613 = phi i8* [ %6, %1579 ], [ %1976, %1974 ]
  %1614 = phi i64 [ 0, %1579 ], [ %1970, %1974 ]
  %1615 = phi i32 [ 1, %1579 ], [ %1975, %1974 ]
  %1616 = phi i64 [ %132, %1579 ], [ %1958, %1974 ]
  %1617 = phi i16 [ %131, %1579 ], [ %1957, %1974 ]
  %1618 = add i64 %1612, %57
  %1619 = icmp ugt i64 %1618, %3
  %1620 = select i1 %1619, i64 %3, i64 %1618
  %1621 = sub i64 %1620, %1612
  %1622 = udiv i64 %1621, 12
  %1623 = add nuw nsw i64 %1622, 16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1580) #8
  store i64 0, i64* %13, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1581) #8
  store i64 0, i64* %14, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1582) #8
  store i64 -6148914691236517206, i64* %15, align 8
  %1624 = load i32, i32* %65, align 4
  %1625 = icmp sgt i32 %1624, 9
  br i1 %1625, label %1626, label %1629

1626:                                             ; preds = %1609
  %1627 = call i32 @BrotliIsMostlyUTF8(i8* %4, i64 %1612, i64 9223372036854775807, i64 %1621, double 7.500000e-01) #8
  %1628 = icmp eq i32 %1627, 0
  br i1 %1628, label %1630, label %1629

1629:                                             ; preds = %1626, %1609
  br label %1630

1630:                                             ; preds = %1629, %1626
  %1631 = phi i32 [ 2, %1629 ], [ 3, %1626 ]
  %1632 = shl nuw nsw i32 %1631, 9
  %1633 = zext i32 %1632 to i64
  %1634 = getelementptr inbounds [2048 x i8], [2048 x i8]* @_kBrotliContextLookupTable, i64 0, i64 %1633
  br label %1635

1635:                                             ; preds = %1818, %1630
  %1636 = phi i8* [ null, %1630 ], [ %1819, %1818 ]
  %1637 = phi %struct.Command* [ null, %1630 ], [ %1820, %1818 ]
  %1638 = phi i64 [ 0, %1630 ], [ %1801, %1818 ]
  %1639 = phi i64 [ 0, %1630 ], [ %1824, %1818 ]
  %1640 = phi i64 [ 0, %1630 ], [ %1821, %1818 ]
  %1641 = phi i64 [ %1612, %1630 ], [ %1823, %1818 ]
  %1642 = icmp ugt i64 %1620, %1641
  br i1 %1642, label %1643, label %1829

1643:                                             ; preds = %1635
  %1644 = sub i64 %1620, %1641
  %1645 = icmp ult i64 %1644, %110
  %1646 = select i1 %1645, i64 %1644, i64 %110
  %1647 = add i64 %1646, 1
  %1648 = icmp eq i64 %1647, 0
  br i1 %1648, label %1653, label %1649

1649:                                             ; preds = %1643
  %1650 = shl i64 %1647, 4
  %1651 = call i8* @BrotliAllocate(%struct.MemoryManager* nonnull %8, i64 %1650) #8
  %1652 = bitcast i8* %1651 to %struct.ZopfliNode*
  br label %1653

1653:                                             ; preds = %1649, %1643
  %1654 = phi i8* [ %1651, %1649 ], [ null, %1643 ]
  %1655 = phi %struct.ZopfliNode* [ %1652, %1649 ], [ null, %1643 ]
  call void @BrotliInitZopfliNodes(%struct.ZopfliNode* %1655, i64 %1647) #8
  %1656 = icmp ugt i64 %1646, 2
  %1657 = icmp ugt i64 %1641, 127
  %1658 = and i1 %1657, %1656
  br i1 %1658, label %1659, label %1799

1659:                                             ; preds = %1653
  %1660 = add i64 %1641, -127
  %1661 = add i64 %1646, %1660
  %1662 = icmp ugt i64 %1661, %1641
  %1663 = select i1 %1662, i64 %1641, i64 %1661
  %1664 = icmp ult i64 %1660, %1663
  br i1 %1664, label %1665, label %1799

1665:                                             ; preds = %1659
  %1666 = load i64, i64* %1584, align 8, !alias.scope !221
  %1667 = load i32*, i32** %1586, align 8, !alias.scope !224, !noalias !227
  %1668 = load i32*, i32** %1588, align 8, !alias.scope !224, !noalias !227
  %1669 = load i32, i32* %1590, align 8
  br label %1670

1670:                                             ; preds = %1793, %1665
  %1671 = phi i64 [ %1660, %1665 ], [ %1797, %1793 ]
  %1672 = sub i64 %1641, %1671
  %1673 = icmp ugt i64 %1672, 15
  %1674 = select i1 %1673, i64 %1672, i64 15
  %1675 = sub i64 %1666, %1674
  %1676 = and i64 %1671, 9223372036854775807
  %1677 = getelementptr inbounds i8, i8* %4, i64 %1676
  %1678 = bitcast i8* %1677 to i32*
  %1679 = load i32, i32* %1678, align 4, !alias.scope !229, !noalias !224
  %1680 = mul i32 %1679, 506832829
  %1681 = lshr i32 %1680, 15
  %1682 = zext i32 %1681 to i64
  %1683 = getelementptr inbounds i32, i32* %1667, i64 %1682
  %1684 = load i32, i32* %1683, align 4, !noalias !232
  %1685 = and i64 %1671, %1666
  %1686 = shl i64 %1685, 1
  %1687 = or i64 %1686, 1
  %1688 = trunc i64 %1671 to i32
  store i32 %1688, i32* %1683, align 4, !noalias !232
  %1689 = zext i32 %1684 to i64
  %1690 = sub i64 %1671, %1689
  %1691 = icmp eq i64 %1690, 0
  br i1 %1691, label %1704, label %1692

1692:                                             ; preds = %1670, %1781
  %1693 = phi i64 [ %1790, %1781 ], [ %1689, %1670 ]
  %1694 = phi i64 [ %1791, %1781 ], [ %1690, %1670 ]
  %1695 = phi i64 [ %1789, %1781 ], [ 64, %1670 ]
  %1696 = phi i64 [ %1786, %1781 ], [ 0, %1670 ]
  %1697 = phi i64 [ %1785, %1781 ], [ 0, %1670 ]
  %1698 = phi i64 [ %1784, %1781 ], [ %1687, %1670 ]
  %1699 = phi i64 [ %1783, %1781 ], [ %1686, %1670 ]
  %1700 = phi i32 [ %1788, %1781 ], [ %1684, %1670 ]
  %1701 = icmp ugt i64 %1694, %1675
  %1702 = icmp eq i64 %1695, 0
  %1703 = or i1 %1701, %1702
  br i1 %1703, label %1704, label %1708

1704:                                             ; preds = %1781, %1692, %1670
  %1705 = phi i64 [ %1686, %1670 ], [ %1783, %1781 ], [ %1699, %1692 ]
  %1706 = phi i64 [ %1687, %1670 ], [ %1784, %1781 ], [ %1698, %1692 ]
  %1707 = getelementptr inbounds i32, i32* %1668, i64 %1705
  store i32 %1669, i32* %1707, align 4, !noalias !232
  br label %1793

1708:                                             ; preds = %1692
  %1709 = icmp ult i64 %1697, %1696
  %1710 = select i1 %1709, i64 %1697, i64 %1696
  %1711 = add i64 %1710, %1676
  %1712 = getelementptr inbounds i8, i8* %4, i64 %1711
  %1713 = add i64 %1710, %1693
  %1714 = getelementptr inbounds i8, i8* %4, i64 %1713
  %1715 = sub i64 128, %1710
  %1716 = lshr i64 %1715, 3
  %1717 = icmp eq i64 %1716, 0
  br i1 %1717, label %1738, label %1718, !prof !233

1718:                                             ; preds = %1708, %1728
  %1719 = phi i64 [ %1731, %1728 ], [ %1716, %1708 ]
  %1720 = phi i8* [ %1729, %1728 ], [ %1714, %1708 ]
  %1721 = phi i64 [ %1730, %1728 ], [ 0, %1708 ]
  %1722 = bitcast i8* %1720 to i64*
  %1723 = load i64, i64* %1722, align 8, !alias.scope !227, !noalias !224
  %1724 = getelementptr inbounds i8, i8* %1712, i64 %1721
  %1725 = bitcast i8* %1724 to i64*
  %1726 = load i64, i64* %1725, align 8, !alias.scope !227, !noalias !224
  %1727 = icmp eq i64 %1723, %1726
  br i1 %1727, label %1728, label %1733, !prof !233

1728:                                             ; preds = %1718
  %1729 = getelementptr inbounds i8, i8* %1720, i64 8
  %1730 = add nuw i64 %1721, 8
  %1731 = add nsw i64 %1719, -1
  %1732 = icmp eq i64 %1731, 0
  br i1 %1732, label %1738, label %1718, !prof !233

1733:                                             ; preds = %1718
  %1734 = xor i64 %1726, %1723
  %1735 = call i64 @llvm.cttz.i64(i64 %1734, i1 true) #8, !range !234
  %1736 = lshr i64 %1735, 3
  %1737 = or i64 %1736, %1721
  br label %1751

1738:                                             ; preds = %1728, %1708
  %1739 = phi i64 [ 0, %1708 ], [ %1730, %1728 ]
  %1740 = phi i8* [ %1714, %1708 ], [ %1729, %1728 ]
  %1741 = and i64 %1715, 7
  %1742 = icmp eq i64 %1741, 0
  br i1 %1742, label %1751, label %1743

1743:                                             ; preds = %1738
  %1744 = getelementptr inbounds i8, i8* %1712, i64 %1739
  %1745 = load i8, i8* %1744, align 1, !alias.scope !227, !noalias !224
  %1746 = load i8, i8* %1740, align 1, !alias.scope !227, !noalias !224
  %1747 = icmp eq i8 %1745, %1746
  br i1 %1747, label %1748, label %1751, !prof !235

1748:                                             ; preds = %1743
  %1749 = add i64 %1739, 1
  %1750 = icmp eq i64 %1741, 1
  br i1 %1750, label %1751, label %2119

1751:                                             ; preds = %2164, %1748, %1743, %2119, %2125, %2128, %2134, %2137, %2143, %2146, %2152, %2155, %2161, %1738, %1733
  %1752 = phi i64 [ %1737, %1733 ], [ %1739, %1738 ], [ %1739, %1743 ], [ %1749, %1748 ], [ %1749, %2119 ], [ %2126, %2125 ], [ %2126, %2128 ], [ %2135, %2134 ], [ %2135, %2137 ], [ %2144, %2143 ], [ %2144, %2146 ], [ %2153, %2152 ], [ %2153, %2155 ], [ %2162, %2161 ], [ %2171, %2164 ]
  %1753 = add i64 %1752, %1710
  %1754 = icmp ult i64 %1753, 128
  br i1 %1754, label %1755, label %1772

1755:                                             ; preds = %1751
  %1756 = add i64 %1753, %1676
  %1757 = getelementptr inbounds i8, i8* %4, i64 %1756
  %1758 = load i8, i8* %1757, align 1, !alias.scope !227, !noalias !224
  %1759 = add i64 %1753, %1693
  %1760 = getelementptr inbounds i8, i8* %4, i64 %1759
  %1761 = load i8, i8* %1760, align 1, !alias.scope !227, !noalias !224
  %1762 = icmp ugt i8 %1758, %1761
  br i1 %1762, label %1763, label %1768

1763:                                             ; preds = %1755
  %1764 = getelementptr inbounds i32, i32* %1668, i64 %1699
  store i32 %1700, i32* %1764, align 4, !noalias !232
  %1765 = and i64 %1693, %1666
  %1766 = shl nuw nsw i64 %1765, 1
  %1767 = or i64 %1766, 1
  br label %1781

1768:                                             ; preds = %1755
  %1769 = getelementptr inbounds i32, i32* %1668, i64 %1698
  store i32 %1700, i32* %1769, align 4, !noalias !232
  %1770 = and i64 %1693, %1666
  %1771 = shl nuw nsw i64 %1770, 1
  br label %1781

1772:                                             ; preds = %1751
  %1773 = and i64 %1693, %1666
  %1774 = shl nuw nsw i64 %1773, 1
  %1775 = getelementptr inbounds i32, i32* %1668, i64 %1774
  %1776 = load i32, i32* %1775, align 4, !noalias !232
  %1777 = getelementptr inbounds i32, i32* %1668, i64 %1699
  store i32 %1776, i32* %1777, align 4, !noalias !232
  %1778 = or i64 %1774, 1
  %1779 = getelementptr inbounds i32, i32* %1668, i64 %1778
  %1780 = load i32, i32* %1779, align 4, !noalias !232
  br label %1793

1781:                                             ; preds = %1768, %1763
  %1782 = phi i64 [ %1767, %1763 ], [ %1771, %1768 ]
  %1783 = phi i64 [ %1767, %1763 ], [ %1699, %1768 ]
  %1784 = phi i64 [ %1698, %1763 ], [ %1771, %1768 ]
  %1785 = phi i64 [ %1753, %1763 ], [ %1697, %1768 ]
  %1786 = phi i64 [ %1696, %1763 ], [ %1753, %1768 ]
  %1787 = getelementptr inbounds i32, i32* %1668, i64 %1782
  %1788 = load i32, i32* %1787, align 4, !noalias !232
  %1789 = add nsw i64 %1695, -1
  %1790 = zext i32 %1788 to i64
  %1791 = sub i64 %1671, %1790
  %1792 = icmp eq i64 %1791, 0
  br i1 %1792, label %1704, label %1692

1793:                                             ; preds = %1772, %1704
  %1794 = phi i64 [ %1698, %1772 ], [ %1706, %1704 ]
  %1795 = phi i32 [ %1780, %1772 ], [ %1669, %1704 ]
  %1796 = getelementptr inbounds i32, i32* %1668, i64 %1794
  store i32 %1795, i32* %1796, align 4, !noalias !232
  %1797 = add i64 %1671, 1
  %1798 = icmp ult i64 %1797, %1663
  br i1 %1798, label %1670, label %1799

1799:                                             ; preds = %1793, %1659, %1653
  %1800 = call i64 @BrotliZopfliComputeShortestPath(%struct.MemoryManager* nonnull %8, i64 %1646, i64 %1641, i8* %4, i64 9223372036854775807, i8* %1634, %struct.BrotliEncoderParams* nonnull %11, i32* nonnull %1591, %struct.Hasher* nonnull %12, %struct.ZopfliNode* %1655) #8
  %1801 = add i64 %1800, %1638
  %1802 = add i64 %1801, 1
  %1803 = icmp ugt i64 %1623, %1802
  %1804 = select i1 %1803, i64 %1623, i64 %1802
  %1805 = icmp eq i64 %1640, %1804
  br i1 %1805, label %1818, label %1806

1806:                                             ; preds = %1799
  %1807 = icmp eq i64 %1804, 0
  br i1 %1807, label %1812, label %1808

1808:                                             ; preds = %1806
  %1809 = shl i64 %1804, 4
  %1810 = call i8* @BrotliAllocate(%struct.MemoryManager* nonnull %8, i64 %1809) #8
  %1811 = bitcast i8* %1810 to %struct.Command*
  br label %1812

1812:                                             ; preds = %1808, %1806
  %1813 = phi i8* [ %1810, %1808 ], [ null, %1806 ]
  %1814 = phi %struct.Command* [ %1811, %1808 ], [ null, %1806 ]
  %1815 = icmp eq %struct.Command* %1637, null
  br i1 %1815, label %1818, label %1816

1816:                                             ; preds = %1812
  %1817 = shl i64 %1638, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1813, i8* align 4 %1636, i64 %1817, i1 false) #8
  call void @BrotliFree(%struct.MemoryManager* nonnull %8, i8* %1636) #8
  br label %1818

1818:                                             ; preds = %1816, %1812, %1799
  %1819 = phi i8* [ %1636, %1799 ], [ %1813, %1812 ], [ %1813, %1816 ]
  %1820 = phi %struct.Command* [ %1637, %1799 ], [ %1814, %1812 ], [ %1814, %1816 ]
  %1821 = phi i64 [ %1640, %1799 ], [ %1804, %1812 ], [ %1804, %1816 ]
  %1822 = getelementptr inbounds %struct.Command, %struct.Command* %1820, i64 %1638
  call void @BrotliZopfliCreateCommands(i64 %1646, i64 %1641, %struct.ZopfliNode* %1655, i32* nonnull %1591, i64* nonnull %13, %struct.BrotliEncoderParams* nonnull %11, %struct.Command* %1822, i64* nonnull %14) #8
  %1823 = add i64 %1646, %1641
  %1824 = add i64 %1646, %1639
  call void @BrotliFree(%struct.MemoryManager* nonnull %8, i8* %1654) #8
  %1825 = load i64, i64* %14, align 8
  %1826 = icmp ugt i64 %1825, %58
  %1827 = icmp ugt i64 %1801, %58
  %1828 = or i1 %1827, %1826
  br i1 %1828, label %1829, label %1635

1829:                                             ; preds = %1818, %1635
  %1830 = phi i8* [ %1636, %1635 ], [ %1819, %1818 ]
  %1831 = phi %struct.Command* [ %1637, %1635 ], [ %1820, %1818 ]
  %1832 = phi i64 [ %1638, %1635 ], [ %1801, %1818 ]
  %1833 = phi i64 [ %1639, %1635 ], [ %1824, %1818 ]
  %1834 = load i64, i64* %13, align 8
  %1835 = icmp eq i64 %1834, 0
  br i1 %1835, label %1893, label %1836

1836:                                             ; preds = %1829
  %1837 = add i64 %1832, 1
  %1838 = trunc i64 %1834 to i32
  %1839 = getelementptr inbounds %struct.Command, %struct.Command* %1831, i64 %1832, i32 0
  store i32 %1838, i32* %1839, align 4
  %1840 = getelementptr inbounds %struct.Command, %struct.Command* %1831, i64 %1832, i32 1
  store i32 134217728, i32* %1840, align 4
  %1841 = getelementptr inbounds %struct.Command, %struct.Command* %1831, i64 %1832, i32 2
  store i32 0, i32* %1841, align 4
  %1842 = getelementptr inbounds %struct.Command, %struct.Command* %1831, i64 %1832, i32 4
  store i16 16, i16* %1842, align 2
  %1843 = getelementptr inbounds %struct.Command, %struct.Command* %1831, i64 %1832, i32 3
  %1844 = icmp ult i64 %1834, 6
  br i1 %1844, label %1845, label %1847

1845:                                             ; preds = %1836
  %1846 = trunc i64 %1834 to i16
  br label %1873

1847:                                             ; preds = %1836
  %1848 = icmp ult i64 %1834, 130
  br i1 %1848, label %1849, label %1861

1849:                                             ; preds = %1847
  %1850 = add nsw i64 %1834, -2
  %1851 = trunc i64 %1850 to i32
  %1852 = call i32 @llvm.ctlz.i32(i32 %1851, i1 true) #8, !range !236
  %1853 = sub nsw i32 30, %1852
  %1854 = shl nsw i32 %1853, 1
  %1855 = zext i32 %1854 to i64
  %1856 = zext i32 %1853 to i64
  %1857 = lshr i64 %1850, %1856
  %1858 = add nuw nsw i64 %1857, %1855
  %1859 = trunc i64 %1858 to i16
  %1860 = add i16 %1859, 2
  br label %1873

1861:                                             ; preds = %1847
  %1862 = icmp ult i64 %1834, 2114
  br i1 %1862, label %1863, label %1868

1863:                                             ; preds = %1861
  %1864 = add nsw i32 %1838, -66
  %1865 = call i32 @llvm.ctlz.i32(i32 %1864, i1 true) #8, !range !236
  %1866 = trunc i32 %1865 to i16
  %1867 = sub nuw nsw i16 41, %1866
  br label %1873

1868:                                             ; preds = %1861
  %1869 = icmp ult i64 %1834, 6210
  br i1 %1869, label %1873, label %1870

1870:                                             ; preds = %1868
  %1871 = icmp ult i64 %1834, 22594
  %1872 = select i1 %1871, i16 22, i16 23
  br label %1873

1873:                                             ; preds = %1870, %1868, %1863, %1849, %1845
  %1874 = phi i16 [ %1846, %1845 ], [ %1860, %1849 ], [ %1867, %1863 ], [ 21, %1868 ], [ %1872, %1870 ]
  %1875 = shl i16 %1874, 3
  %1876 = and i16 %1875, 56
  %1877 = lshr i16 %1874, 3
  %1878 = mul nuw nsw i16 %1877, 3
  %1879 = zext i16 %1878 to i32
  %1880 = mul nuw i16 %1877, 6
  %1881 = zext i16 %1880 to i32
  %1882 = shl nuw nsw i32 %1879, 6
  %1883 = add nuw nsw i32 %1882, 64
  %1884 = lshr i32 5377344, %1881
  %1885 = and i32 %1884, 192
  %1886 = add nuw nsw i32 %1883, %1885
  %1887 = trunc i32 %1886 to i16
  %1888 = or i16 %1876, %1887
  %1889 = or i16 %1888, 2
  store i16 %1889, i16* %1843, align 2
  %1890 = load i64, i64* %13, align 8
  %1891 = load i64, i64* %14, align 8
  %1892 = add i64 %1891, %1890
  store i64 %1892, i64* %14, align 8
  br label %1893

1893:                                             ; preds = %1873, %1829
  %1894 = phi i64 [ %1837, %1873 ], [ %1832, %1829 ]
  %1895 = add i64 %1833, %1612
  %1896 = icmp eq i64 %1895, %3
  %1897 = zext i1 %1896 to i32
  store i64 %1616, i64* %15, align 8
  %1898 = icmp eq i64 %1833, 0
  br i1 %1898, label %1899, label %1916

1899:                                             ; preds = %1893
  %1900 = call i8* @BrotliAllocate(%struct.MemoryManager* nonnull %8, i64 16) #8
  %1901 = trunc i16 %1617 to i8
  store i8 %1901, i8* %1900, align 1
  %1902 = lshr i16 %1617, 8
  %1903 = trunc i16 %1902 to i8
  %1904 = getelementptr inbounds i8, i8* %1900, i64 1
  store i8 %1903, i8* %1904, align 1
  %1905 = load i64, i64* %15, align 8, !alias.scope !237, !noalias !240
  %1906 = lshr i64 %1905, 3
  %1907 = getelementptr inbounds i8, i8* %1900, i64 %1906
  %1908 = load i8, i8* %1907, align 1, !alias.scope !240, !noalias !237
  %1909 = zext i8 %1908 to i64
  %1910 = and i64 %1905, 7
  %1911 = shl i64 3, %1910
  %1912 = or i64 %1911, %1909
  %1913 = bitcast i8* %1907 to i64*
  store i64 %1912, i64* %1913, align 8, !alias.scope !240, !noalias !237
  %1914 = add i64 %1905, 9
  %1915 = and i64 %1914, 4294967288
  store i64 %1915, i64* %15, align 8
  br label %1951

1916:                                             ; preds = %1893
  %1917 = load i64, i64* %14, align 8
  %1918 = call fastcc i32 @ShouldCompress(i8* %4, i64 9223372036854775807, i64 %1612, i64 %1833, i64 %1917, i64 %1894) #8
  %1919 = icmp eq i32 %1918, 0
  br i1 %1919, label %1920, label %1931

1920:                                             ; preds = %1916
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %44, i8* nonnull align 16 %45, i64 16, i1 false) #8
  %1921 = add i64 %1833, 16
  %1922 = icmp eq i64 %1921, 0
  br i1 %1922, label %1925, label %1923

1923:                                             ; preds = %1920
  %1924 = call i8* @BrotliAllocate(%struct.MemoryManager* nonnull %8, i64 %1921) #8
  br label %1925

1925:                                             ; preds = %1923, %1920
  %1926 = phi i8* [ %1924, %1923 ], [ null, %1920 ]
  %1927 = trunc i16 %1617 to i8
  store i8 %1927, i8* %1926, align 1
  %1928 = lshr i16 %1617, 8
  %1929 = trunc i16 %1928 to i8
  %1930 = getelementptr inbounds i8, i8* %1926, i64 1
  store i8 %1929, i8* %1930, align 1
  call void @BrotliStoreUncompressedMetaBlock(i32 %1897, i8* %4, i64 %1612, i64 9223372036854775807, i64 %1833, i64* nonnull %15, i8* %1926) #8
  br label %1951

1931:                                             ; preds = %1916
  call void @llvm.lifetime.start.p0i8(i64 224, i8* nonnull %1592) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1592, i8 -86, i64 224, i1 false) #8
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %1593) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1593, i8* nonnull align 8 %50, i64 144, i1 false) #8
  call void @BrotliInitBlockSplit(%struct.BlockSplit* nonnull %1594) #8
  call void @BrotliInitBlockSplit(%struct.BlockSplit* %1595) #8
  call void @BrotliInitBlockSplit(%struct.BlockSplit* %1596) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %1598, i8 0, i64 80, i1 false) #8
  call void @BrotliBuildMetaBlock(%struct.MemoryManager* nonnull %8, i8* %4, i64 %1612, i64 9223372036854775807, %struct.BrotliEncoderParams* nonnull %17, i8 zeroext %1611, i8 zeroext %1610, %struct.Command* %1831, i64 %1894, i32 %1631, %struct.MetaBlockSplit* nonnull %16) #8
  %1932 = load i32, i32* %1599, align 4
  call void @BrotliOptimizeHistograms(i32 %1932, %struct.MetaBlockSplit* nonnull %16) #8
  %1933 = shl i64 %1833, 1
  %1934 = add i64 %1933, 503
  %1935 = call i8* @BrotliAllocate(%struct.MemoryManager* nonnull %8, i64 %1934) #8
  %1936 = trunc i16 %1617 to i8
  store i8 %1936, i8* %1935, align 1
  %1937 = lshr i16 %1617, 8
  %1938 = trunc i16 %1937 to i8
  %1939 = getelementptr inbounds i8, i8* %1935, i64 1
  store i8 %1938, i8* %1939, align 1
  call void @BrotliStoreMetaBlock(%struct.MemoryManager* nonnull %8, i8* %4, i64 %1612, i64 %1833, i64 9223372036854775807, i8 zeroext %1611, i8 zeroext %1610, i32 %1897, %struct.BrotliEncoderParams* nonnull %17, i32 %1631, %struct.Command* %1831, i64 %1894, %struct.MetaBlockSplit* nonnull %16, i64* nonnull %15, i8* %1935) #8
  %1940 = add i64 %1833, 4
  %1941 = load i64, i64* %15, align 8
  %1942 = lshr i64 %1941, 3
  %1943 = icmp ult i64 %1940, %1942
  br i1 %1943, label %1944, label %1945

1944:                                             ; preds = %1931
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %44, i8* nonnull align 16 %45, i64 16, i1 false) #8
  store i8 %1936, i8* %1935, align 1
  store i8 %1938, i8* %1939, align 1
  store i64 %1616, i64* %15, align 8
  call void @BrotliStoreUncompressedMetaBlock(i32 %1897, i8* %4, i64 %1612, i64 9223372036854775807, i64 %1833, i64* nonnull %15, i8* %1935) #8
  br label %1945

1945:                                             ; preds = %1944, %1931
  call void @BrotliDestroyBlockSplit(%struct.MemoryManager* nonnull %8, %struct.BlockSplit* nonnull %1594) #8
  call void @BrotliDestroyBlockSplit(%struct.MemoryManager* nonnull %8, %struct.BlockSplit* %1595) #8
  call void @BrotliDestroyBlockSplit(%struct.MemoryManager* nonnull %8, %struct.BlockSplit* %1596) #8
  %1946 = load i8*, i8** %1600, align 8
  call void @BrotliFree(%struct.MemoryManager* nonnull %8, i8* %1946) #8
  store i32* null, i32** %1597, align 8
  %1947 = load i8*, i8** %1602, align 8
  call void @BrotliFree(%struct.MemoryManager* nonnull %8, i8* %1947) #8
  store i32* null, i32** %1601, align 8
  %1948 = load i8*, i8** %1604, align 8
  call void @BrotliFree(%struct.MemoryManager* nonnull %8, i8* %1948) #8
  store %struct.HistogramLiteral* null, %struct.HistogramLiteral** %1603, align 8
  %1949 = load i8*, i8** %1606, align 8
  call void @BrotliFree(%struct.MemoryManager* nonnull %8, i8* %1949) #8
  store %struct.HistogramCommand* null, %struct.HistogramCommand** %1605, align 8
  %1950 = load i8*, i8** %1608, align 8
  call void @BrotliFree(%struct.MemoryManager* nonnull %8, i8* %1950) #8
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %1593) #8
  call void @llvm.lifetime.end.p0i8(i64 224, i8* nonnull %1592) #8
  br label %1951

1951:                                             ; preds = %1945, %1925, %1899
  %1952 = phi i8* [ %1900, %1899 ], [ %1935, %1945 ], [ %1926, %1925 ]
  %1953 = load i64, i64* %15, align 8
  %1954 = lshr i64 %1953, 3
  %1955 = getelementptr inbounds i8, i8* %1952, i64 %1954
  %1956 = load i8, i8* %1955, align 1
  %1957 = zext i8 %1956 to i16
  %1958 = and i64 %1953, 7
  %1959 = icmp ult i64 %1895, %3
  br i1 %1959, label %1960, label %1967

1960:                                             ; preds = %1951
  %1961 = add i64 %1895, -1
  %1962 = getelementptr inbounds i8, i8* %4, i64 %1961
  %1963 = load i8, i8* %1962, align 1
  %1964 = add i64 %1895, -2
  %1965 = getelementptr inbounds i8, i8* %4, i64 %1964
  %1966 = load i8, i8* %1965, align 1
  br label %1967

1967:                                             ; preds = %1960, %1951
  %1968 = phi i8 [ %1963, %1960 ], [ %1611, %1951 ]
  %1969 = phi i8 [ %1966, %1960 ], [ %1610, %1951 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %45, i8* nonnull align 16 %44, i64 16, i1 false) #8
  %1970 = add i64 %1954, %1614
  %1971 = icmp ugt i64 %1970, %23
  br i1 %1971, label %1974, label %1972

1972:                                             ; preds = %1967
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1613, i8* align 1 %1952, i64 %1954, i1 false) #8
  %1973 = getelementptr inbounds i8, i8* %1613, i64 %1954
  br label %1974

1974:                                             ; preds = %1972, %1967
  %1975 = phi i32 [ %1615, %1972 ], [ 0, %1967 ]
  %1976 = phi i8* [ %1973, %1972 ], [ %1613, %1967 ]
  call void @BrotliFree(%struct.MemoryManager* nonnull %8, i8* %1952) #8
  call void @BrotliFree(%struct.MemoryManager* nonnull %8, i8* %1830) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1582) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1581) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1580) #8
  %1977 = icmp ne i32 %1975, 0
  %1978 = and i1 %1959, %1977
  br i1 %1978, label %1609, label %1979

1979:                                             ; preds = %1974
  store i64 %1970, i64* %5, align 8
  %1980 = load i8*, i8** %62, align 8
  %1981 = icmp eq i8* %1980, null
  br i1 %1981, label %1983, label %1982

1982:                                             ; preds = %1979
  call void @BrotliFree(%struct.MemoryManager* nonnull %8, i8* nonnull %1980) #8
  store i8* null, i8** %62, align 8
  br label %1983

1983:                                             ; preds = %1979, %1982
  call void @llvm.lifetime.end.p0i8(i64 1096, i8* nonnull %59) #8
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %50) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #8
  %1984 = icmp eq i32 %1975, 0
  br i1 %1984, label %2066, label %1985

1985:                                             ; preds = %1983
  %1986 = icmp eq i64 %32, 0
  br i1 %1986, label %2117, label %1987

1987:                                             ; preds = %1985
  %1988 = load i64, i64* %5, align 8
  %1989 = icmp ugt i64 %1988, %32
  br i1 %1989, label %2066, label %2117

1990:                                             ; preds = %36
  %1991 = tail call noalias i8* @malloc(i64 6560) #8
  %1992 = icmp eq i8* %1991, null
  br i1 %1992, label %2117, label %1993

1993:                                             ; preds = %1990
  %1994 = bitcast i8* %1991 to %struct.BrotliEncoderStateStruct*
  %1995 = getelementptr inbounds i8, i8* %1991, i64 144
  %1996 = bitcast i8* %1995 to %struct.MemoryManager*
  tail call void @BrotliInitMemoryManager(%struct.MemoryManager* %1996, i8* (i8*, i64)* null, void (i8*, i8*)* null, i8* null) #8
  %1997 = bitcast i8* %1991 to i32*
  store i32 0, i32* %1997, align 8
  %1998 = getelementptr inbounds i8, i8* %1991, i64 36
  %1999 = bitcast i8* %1998 to i32*
  store i32 0, i32* %1999, align 4
  %2000 = getelementptr inbounds i8, i8* %1991, i64 4
  %2001 = bitcast i8* %2000 to i32*
  store i32 11, i32* %2001, align 4
  %2002 = getelementptr inbounds i8, i8* %1991, i64 8
  %2003 = bitcast i8* %2002 to i32*
  store i32 22, i32* %2003, align 8
  %2004 = getelementptr inbounds i8, i8* %1991, i64 12
  %2005 = getelementptr inbounds i8, i8* %1991, i64 88
  %2006 = bitcast i8* %2005 to %struct.BrotliEncoderDictionary*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %2004, i8 0, i64 24, i1 false) #8
  tail call void @BrotliInitEncoderDictionary(%struct.BrotliEncoderDictionary* %2006) #8
  %2007 = getelementptr inbounds i8, i8* %1991, i64 64
  %2008 = bitcast i8* %2007 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 64, i32 64>, <4 x i32>* %2008, align 8
  %2009 = getelementptr inbounds i8, i8* %1991, i64 80
  %2010 = bitcast i8* %2009 to i64*
  store i64 67108860, i64* %2010, align 8
  %2011 = getelementptr inbounds i8, i8* %1991, i64 168
  %2012 = bitcast i8* %2011 to i64*
  store i64 0, i64* %2012, align 8
  %2013 = getelementptr inbounds i8, i8* %1991, i64 356
  store i8 0, i8* %2013, align 4
  %2014 = getelementptr inbounds i8, i8* %1991, i64 357
  store i8 0, i8* %2014, align 1
  %2015 = getelementptr inbounds i8, i8* %1991, i64 360
  %2016 = getelementptr inbounds i8, i8* %1991, i64 5568
  %2017 = getelementptr inbounds i8, i8* %1991, i64 6480
  %2018 = getelementptr inbounds i8, i8* %1991, i64 6548
  %2019 = bitcast i8* %2018 to i32*
  store i32 0, i32* %2019, align 4
  %2020 = getelementptr inbounds i8, i8* %1991, i64 6552
  %2021 = bitcast i8* %2020 to i32*
  store i32 0, i32* %2021, align 8
  %2022 = getelementptr inbounds i8, i8* %1991, i64 6556
  %2023 = bitcast i8* %2022 to i32*
  store i32 0, i32* %2023, align 4
  %2024 = getelementptr inbounds i8, i8* %1991, i64 192
  %2025 = getelementptr inbounds i8, i8* %1991, i64 272
  %2026 = bitcast i8* %2025 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2024, i8 0, i64 80, i1 false) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2015, i8 0, i64 24, i1 false) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2016, i8 0, i64 16, i1 false) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2017, i8 0, i64 48, i1 false) #8
  store i32 4, i32* %2026, align 8
  %2027 = getelementptr inbounds i8, i8* %1991, i64 276
  %2028 = bitcast i8* %2027 to i32*
  store i32 11, i32* %2028, align 4
  %2029 = getelementptr inbounds i8, i8* %1991, i64 280
  %2030 = bitcast i8* %2029 to i32*
  store i32 15, i32* %2030, align 8
  %2031 = getelementptr inbounds i8, i8* %1991, i64 284
  %2032 = bitcast i8* %2031 to i32*
  store i32 16, i32* %2032, align 4
  %2033 = getelementptr inbounds i8, i8* %1991, i64 336
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2033, i8* align 8 %2025, i64 16, i1 false) #8
  %2034 = bitcast i64* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2034) #8
  store i64 %3, i64* %18, align 8
  %2035 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2035) #8
  store i8* %4, i8** %19, align 8
  %2036 = bitcast i64* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2036) #8
  %2037 = load i64, i64* %5, align 8
  store i64 %2037, i64* %20, align 8
  %2038 = bitcast i8** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2038) #8
  store i8* %6, i8** %21, align 8
  %2039 = bitcast i64* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2039) #8
  store i64 0, i64* %22, align 8
  store i32 %0, i32* %2001, align 4
  store i32 %1, i32* %2003, align 8
  store i32 %2, i32* %1997, align 8
  %2040 = and i64 %3, 4294967295
  %2041 = getelementptr inbounds i8, i8* %1991, i64 24
  %2042 = bitcast i8* %2041 to i64*
  store i64 %2040, i64* %2042, align 8
  %2043 = icmp slt i32 %1, 25
  br i1 %2043, label %2045, label %2044

2044:                                             ; preds = %1993
  store i32 1, i32* %1999, align 4
  br label %2045

2045:                                             ; preds = %1993, %2044
  %2046 = call i32 @BrotliEncoderCompressStream(%struct.BrotliEncoderStateStruct* nonnull %1994, i32 2, i64* nonnull %18, i8** nonnull %19, i64* nonnull %20, i8** nonnull %21, i64* nonnull %22)
  %2047 = load i32, i32* %2019, align 4
  %2048 = icmp eq i32 %2047, 2
  br i1 %2048, label %2049, label %2054

2049:                                             ; preds = %2045
  %2050 = getelementptr inbounds i8, i8* %1991, i64 6512
  %2051 = bitcast i8* %2050 to i64*
  %2052 = load i64, i64* %2051, align 8
  %2053 = icmp eq i64 %2052, 0
  br i1 %2053, label %2055, label %2054

2054:                                             ; preds = %2049, %2045
  br label %2055

2055:                                             ; preds = %2049, %2054
  %2056 = phi i32 [ 0, %2054 ], [ %2046, %2049 ]
  %2057 = load i64, i64* %22, align 8
  store i64 %2057, i64* %5, align 8
  call void @BrotliEncoderDestroyInstance(%struct.BrotliEncoderStateStruct* nonnull %1994)
  %2058 = icmp eq i32 %2056, 0
  br i1 %2058, label %2065, label %2059

2059:                                             ; preds = %2055
  %2060 = icmp eq i64 %32, 0
  br i1 %2060, label %2064, label %2061

2061:                                             ; preds = %2059
  %2062 = load i64, i64* %5, align 8
  %2063 = icmp ugt i64 %2062, %32
  br i1 %2063, label %2065, label %2064

2064:                                             ; preds = %2059, %2061
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2039) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2038) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2036) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2035) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2034) #8
  br label %2117

2065:                                             ; preds = %2061, %2055
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2039) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2038) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2036) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2035) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2034) #8
  br label %2066

2066:                                             ; preds = %2065, %1983, %1987
  store i64 0, i64* %5, align 8
  %2067 = add i64 %32, -1
  %2068 = icmp ult i64 %2067, %23
  br i1 %2068, label %2069, label %2117

2069:                                             ; preds = %2066
  store i8 33, i8* %6, align 1
  %2070 = getelementptr inbounds i8, i8* %6, i64 1
  store i8 3, i8* %2070, align 1
  br label %2071

2071:                                             ; preds = %2106, %2069
  %2072 = phi i64 [ 0, %2069 ], [ %2111, %2106 ]
  %2073 = phi i64 [ 2, %2069 ], [ %2110, %2106 ]
  %2074 = phi i64 [ %3, %2069 ], [ %2112, %2106 ]
  %2075 = icmp ult i64 %2074, 16777216
  %2076 = select i1 %2075, i64 %2074, i64 16777216
  %2077 = trunc i64 %2076 to i32
  %2078 = icmp ugt i32 %2077, 65536
  %2079 = icmp ugt i32 %2077, 1048576
  %2080 = select i1 %2079, i32 2, i32 1
  %2081 = select i1 %2078, i32 %2080, i32 0
  %2082 = shl nuw nsw i32 %2081, 1
  %2083 = shl nuw nsw i32 %2077, 3
  %2084 = add nsw i32 %2083, -8
  %2085 = or i32 %2082, %2084
  %2086 = shl nuw nsw i32 %2081, 2
  %2087 = or i32 %2086, 19
  %2088 = shl i32 1, %2087
  %2089 = or i32 %2085, %2088
  %2090 = trunc i32 %2089 to i8
  %2091 = add i64 %2073, 1
  %2092 = getelementptr inbounds i8, i8* %6, i64 %2073
  store i8 %2090, i8* %2092, align 1
  %2093 = lshr i32 %2089, 8
  %2094 = trunc i32 %2093 to i8
  %2095 = add i64 %2073, 2
  %2096 = getelementptr inbounds i8, i8* %6, i64 %2091
  store i8 %2094, i8* %2096, align 1
  %2097 = lshr i32 %2089, 16
  %2098 = trunc i32 %2097 to i8
  %2099 = add i64 %2073, 3
  %2100 = getelementptr inbounds i8, i8* %6, i64 %2095
  store i8 %2098, i8* %2100, align 1
  br i1 %2079, label %2101, label %2106

2101:                                             ; preds = %2071
  %2102 = lshr i32 %2089, 24
  %2103 = trunc i32 %2102 to i8
  %2104 = add i64 %2073, 4
  %2105 = getelementptr inbounds i8, i8* %6, i64 %2099
  store i8 %2103, i8* %2105, align 1
  br label %2106

2106:                                             ; preds = %2101, %2071
  %2107 = phi i64 [ %2104, %2101 ], [ %2099, %2071 ]
  %2108 = getelementptr inbounds i8, i8* %6, i64 %2107
  %2109 = getelementptr inbounds i8, i8* %4, i64 %2072
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2108, i8* align 1 %2109, i64 %2076, i1 false) #8
  %2110 = add i64 %2107, %2076
  %2111 = add i64 %2076, %2072
  %2112 = sub i64 %2074, %2076
  %2113 = icmp eq i64 %2112, 0
  br i1 %2113, label %2114, label %2071

2114:                                             ; preds = %2106
  %2115 = add i64 %2110, 1
  %2116 = getelementptr inbounds i8, i8* %6, i64 %2110
  store i8 3, i8* %2116, align 1
  store i64 %2115, i64* %5, align 8
  br label %2117

2117:                                             ; preds = %2066, %1990, %1987, %1985, %2064, %7, %2114, %35
  %2118 = phi i32 [ 1, %35 ], [ 1, %2114 ], [ 0, %7 ], [ 1, %2064 ], [ 0, %2066 ], [ 1, %1985 ], [ 1, %1987 ], [ 0, %1990 ]
  ret i32 %2118

2119:                                             ; preds = %1748
  %2120 = getelementptr inbounds i8, i8* %1740, i64 1
  %2121 = getelementptr inbounds i8, i8* %1712, i64 %1749
  %2122 = load i8, i8* %2121, align 1, !alias.scope !227, !noalias !224
  %2123 = load i8, i8* %2120, align 1, !alias.scope !227, !noalias !224
  %2124 = icmp eq i8 %2122, %2123
  br i1 %2124, label %2125, label %1751, !prof !235

2125:                                             ; preds = %2119
  %2126 = add i64 %1739, 2
  %2127 = icmp eq i64 %1741, 2
  br i1 %2127, label %1751, label %2128

2128:                                             ; preds = %2125
  %2129 = getelementptr inbounds i8, i8* %1740, i64 2
  %2130 = getelementptr inbounds i8, i8* %1712, i64 %2126
  %2131 = load i8, i8* %2130, align 1, !alias.scope !227, !noalias !224
  %2132 = load i8, i8* %2129, align 1, !alias.scope !227, !noalias !224
  %2133 = icmp eq i8 %2131, %2132
  br i1 %2133, label %2134, label %1751, !prof !235

2134:                                             ; preds = %2128
  %2135 = add i64 %1739, 3
  %2136 = icmp eq i64 %1741, 3
  br i1 %2136, label %1751, label %2137

2137:                                             ; preds = %2134
  %2138 = getelementptr inbounds i8, i8* %1740, i64 3
  %2139 = getelementptr inbounds i8, i8* %1712, i64 %2135
  %2140 = load i8, i8* %2139, align 1, !alias.scope !227, !noalias !224
  %2141 = load i8, i8* %2138, align 1, !alias.scope !227, !noalias !224
  %2142 = icmp eq i8 %2140, %2141
  br i1 %2142, label %2143, label %1751, !prof !235

2143:                                             ; preds = %2137
  %2144 = add i64 %1739, 4
  %2145 = icmp eq i64 %1741, 4
  br i1 %2145, label %1751, label %2146

2146:                                             ; preds = %2143
  %2147 = getelementptr inbounds i8, i8* %1740, i64 4
  %2148 = getelementptr inbounds i8, i8* %1712, i64 %2144
  %2149 = load i8, i8* %2148, align 1, !alias.scope !227, !noalias !224
  %2150 = load i8, i8* %2147, align 1, !alias.scope !227, !noalias !224
  %2151 = icmp eq i8 %2149, %2150
  br i1 %2151, label %2152, label %1751, !prof !235

2152:                                             ; preds = %2146
  %2153 = add i64 %1739, 5
  %2154 = icmp eq i64 %1741, 5
  br i1 %2154, label %1751, label %2155

2155:                                             ; preds = %2152
  %2156 = getelementptr inbounds i8, i8* %1740, i64 5
  %2157 = getelementptr inbounds i8, i8* %1712, i64 %2153
  %2158 = load i8, i8* %2157, align 1, !alias.scope !227, !noalias !224
  %2159 = load i8, i8* %2156, align 1, !alias.scope !227, !noalias !224
  %2160 = icmp eq i8 %2158, %2159
  br i1 %2160, label %2161, label %1751, !prof !235

2161:                                             ; preds = %2155
  %2162 = add i64 %1739, 6
  %2163 = icmp eq i64 %1741, 6
  br i1 %2163, label %1751, label %2164

2164:                                             ; preds = %2161
  %2165 = getelementptr inbounds i8, i8* %1740, i64 6
  %2166 = getelementptr inbounds i8, i8* %1712, i64 %2162
  %2167 = load i8, i8* %2166, align 1, !alias.scope !227, !noalias !224
  %2168 = load i8, i8* %2165, align 1, !alias.scope !227, !noalias !224
  %2169 = icmp eq i8 %2167, %2168
  %2170 = add i64 %1739, 7
  %2171 = select i1 %2169, i64 %2170, i64 %2162, !prof !235
  br label %1751
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @BrotliEncoderCompressStream(%struct.BrotliEncoderStateStruct*, i32, i64* nocapture, i8** nocapture, i64* nocapture, i8** nocapture, i64*) local_unnamed_addr #1 {
  %8 = alloca i64, align 8
  %9 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 37
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %153

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 14
  store i8 0, i8* %13, align 2
  %14 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 13
  store i16 0, i16* %14, align 8
  %15 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 15
  store i8 -2, i8* %15, align 1
  %16 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 34
  store i32 -1, i32* %16, align 8
  %17 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0
  %18 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp sgt i32 %19, 0
  %21 = select i1 %20, i32 %19, i32 0
  %22 = icmp slt i32 %21, 11
  %23 = select i1 %22, i32 %21, i32 11
  store i32 %23, i32* %18, align 4
  %24 = icmp slt i32 %23, 3
  br i1 %24, label %25, label %27

25:                                               ; preds = %12
  %26 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 7
  store i32 0, i32* %26, align 4
  br label %27

27:                                               ; preds = %25, %12
  %28 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = icmp slt i32 %29, 10
  br i1 %30, label %37, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 7
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  %35 = select i1 %34, i32 24, i32 30
  %36 = icmp sgt i32 %29, %35
  br i1 %36, label %37, label %39

37:                                               ; preds = %31, %27
  %38 = phi i32 [ 10, %27 ], [ %35, %31 ]
  store i32 %38, i32* %28, align 8
  br label %39

39:                                               ; preds = %37, %31
  %40 = phi i32 [ %29, %31 ], [ %38, %37 ]
  %41 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 3
  %42 = load i32, i32* %41, align 4
  %43 = icmp ult i32 %23, 2
  br i1 %43, label %60, label %44

44:                                               ; preds = %39
  %45 = icmp slt i32 %23, 4
  br i1 %45, label %60, label %46

46:                                               ; preds = %44
  %47 = icmp eq i32 %42, 0
  br i1 %47, label %48, label %55

48:                                               ; preds = %46
  %49 = icmp sgt i32 %23, 8
  %50 = icmp sgt i32 %40, 16
  %51 = and i1 %49, %50
  br i1 %51, label %52, label %62

52:                                               ; preds = %48
  %53 = icmp eq i32 %40, 17
  %54 = select i1 %53, i32 17, i32 18
  br label %62

55:                                               ; preds = %46
  %56 = icmp sgt i32 %42, 16
  %57 = select i1 %56, i32 %42, i32 16
  %58 = icmp slt i32 %57, 24
  %59 = select i1 %58, i32 %57, i32 24
  br label %62

60:                                               ; preds = %44, %39
  %61 = phi i32 [ 14, %44 ], [ %40, %39 ]
  store i32 %61, i32* %41, align 4
  br label %84

62:                                               ; preds = %55, %52, %48
  %63 = phi i32 [ %59, %55 ], [ 16, %48 ], [ %54, %52 ]
  store i32 %63, i32* %41, align 4
  %64 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %65, 2
  br i1 %66, label %72, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 9, i32 0
  %69 = load i32, i32* %68, align 8
  %70 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 9, i32 1
  %71 = load i32, i32* %70, align 4
  br label %72

72:                                               ; preds = %67, %62
  %73 = phi i32 [ %69, %67 ], [ 1, %62 ]
  %74 = phi i32 [ %71, %67 ], [ 12, %62 ]
  %75 = icmp ugt i32 %73, 3
  %76 = icmp ugt i32 %74, 120
  %77 = or i1 %75, %76
  br i1 %77, label %83, label %78

78:                                               ; preds = %72
  %79 = lshr i32 %74, %73
  %80 = and i32 %79, 15
  %81 = shl i32 %80, %73
  %82 = icmp eq i32 %81, %74
  br i1 %82, label %84, label %83

83:                                               ; preds = %78, %72
  br label %84

84:                                               ; preds = %83, %78, %60
  %85 = phi i32 [ 0, %60 ], [ 0, %83 ], [ %73, %78 ]
  %86 = phi i32 [ 0, %60 ], [ 0, %83 ], [ %74, %78 ]
  tail call void @BrotliInitDistanceParams(%struct.BrotliEncoderParams* %17, i32 %85, i32 %86) #8
  %87 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 4
  %88 = load i64, i64* %87, align 8
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %96, label %90

90:                                               ; preds = %84
  store i8 2, i8* %15, align 1
  %91 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 11
  %92 = bitcast [16 x i32]* %91 to <4 x i32>*
  store <4 x i32> <i32 -16, i32 -16, i32 -16, i32 -16>, <4 x i32>* %92, align 8
  %93 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 12, i64 0
  %94 = bitcast i32* %93 to i8*
  %95 = bitcast [16 x i32]* %91 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* align 8 %95, i64 16, i1 false) #8
  br label %96

96:                                               ; preds = %90, %84
  %97 = load i32, i32* %28, align 8
  %98 = load i32, i32* %41, align 4
  %99 = icmp sgt i32 %97, %98
  %100 = select i1 %99, i32 %97, i32 %98
  %101 = add nsw i32 %100, 1
  %102 = shl i32 1, %101
  %103 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 3, i32 0
  store i32 %102, i32* %103, align 8
  %104 = add i32 %102, -1
  %105 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 3, i32 1
  store i32 %104, i32* %105, align 4
  %106 = shl i32 1, %98
  %107 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 3, i32 2
  store i32 %106, i32* %107, align 8
  %108 = add i32 %102, %106
  %109 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 3, i32 3
  store i32 %108, i32* %109, align 4
  %110 = load i32, i32* %18, align 4
  %111 = icmp ult i32 %110, 2
  %112 = icmp sgt i32 %97, 18
  %113 = select i1 %112, i32 %97, i32 18
  %114 = select i1 %111, i32 %113, i32 %97
  br i1 %89, label %115, label %138

115:                                              ; preds = %96
  %116 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 7
  %117 = load i32, i32* %116, align 4
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %124, label %119

119:                                              ; preds = %115
  %120 = trunc i32 %114 to i16
  %121 = shl i16 %120, 8
  %122 = and i16 %121, 16128
  %123 = or i16 %122, 17
  store i16 %123, i16* %14, align 2
  store i8 14, i8* %13, align 1
  br label %144

124:                                              ; preds = %115
  switch i32 %114, label %127 [
    i32 16, label %125
    i32 17, label %126
  ]

125:                                              ; preds = %124
  store i16 0, i16* %14, align 2
  store i8 1, i8* %13, align 1
  br label %144

126:                                              ; preds = %124
  store i16 1, i16* %14, align 2
  store i8 7, i8* %13, align 1
  br label %144

127:                                              ; preds = %124
  %128 = icmp sgt i32 %114, 17
  %129 = trunc i32 %114 to i16
  br i1 %128, label %130, label %134

130:                                              ; preds = %127
  %131 = shl i16 %129, 1
  %132 = add i16 %131, -34
  %133 = or i16 %132, 1
  store i16 %133, i16* %14, align 2
  store i8 4, i8* %13, align 1
  br label %144

134:                                              ; preds = %127
  %135 = shl i16 %129, 4
  %136 = add i16 %135, -128
  %137 = or i16 %136, 1
  store i16 %137, i16* %14, align 2
  store i8 7, i8* %13, align 1
  br label %144

138:                                              ; preds = %96
  %139 = zext i32 %114 to i64
  %140 = shl i64 1, %139
  %141 = add i64 %140, -16
  %142 = icmp ult i64 %88, %141
  %143 = select i1 %142, i64 %88, i64 %141
  store i64 %143, i64* %87, align 8
  br label %144

144:                                              ; preds = %138, %134, %130, %126, %125, %119
  %145 = icmp eq i32 %110, 0
  br i1 %145, label %146, label %152

146:                                              ; preds = %144
  %147 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 24, i64 0
  %148 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 25, i64 0
  %149 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 26, i64 0
  %150 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 27
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %147, i8* align 16 getelementptr inbounds ([128 x i8], [128 x i8]* @InitCommandPrefixCodes.kDefaultCommandDepths, i64 0, i64 0), i64 128, i1 false) #8
  %151 = bitcast i16* %148 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %151, i8* align 16 bitcast ([128 x i16]* @InitCommandPrefixCodes.kDefaultCommandBits to i8*), i64 256, i1 false) #8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %149, i8* align 16 getelementptr inbounds ([57 x i8], [57 x i8]* @InitCommandPrefixCodes.kDefaultCommandCode, i64 0, i64 0), i64 57, i1 false) #8
  store i64 448, i64* %150, align 8
  br label %152

152:                                              ; preds = %146, %144
  store i32 1, i32* %9, align 4
  br label %153

153:                                              ; preds = %7, %152
  %154 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 34
  %155 = load i32, i32* %154, align 8
  %156 = icmp eq i32 %155, -1
  br i1 %156, label %163, label %157

157:                                              ; preds = %153
  %158 = load i64, i64* %2, align 8
  %159 = zext i32 %155 to i64
  %160 = icmp eq i64 %158, %159
  %161 = icmp eq i32 %1, 3
  %162 = and i1 %161, %160
  br i1 %162, label %165, label %834

163:                                              ; preds = %153
  %164 = icmp eq i32 %1, 3
  br i1 %164, label %165, label %323

165:                                              ; preds = %157, %163
  %166 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 5
  %167 = load i64, i64* %166, align 8
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %169, label %178

169:                                              ; preds = %165
  %170 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 2
  %171 = load i64, i64* %170, align 8
  %172 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 10
  %173 = load i64, i64* %172, align 8
  %174 = sub i64 %171, %173
  %175 = icmp ugt i64 %174, 1073741823
  %176 = and i64 %174, 4294967295
  %177 = select i1 %175, i64 1073741824, i64 %176
  store i64 %177, i64* %166, align 8
  br label %178

178:                                              ; preds = %165, %169
  %179 = load i64, i64* %2, align 8
  %180 = icmp ugt i64 %179, 16777216
  br i1 %180, label %834, label %181

181:                                              ; preds = %178
  %182 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 35
  %183 = load i32, i32* %182, align 4
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %187

185:                                              ; preds = %181
  %186 = trunc i64 %179 to i32
  store i32 %186, i32* %154, align 8
  store i32 3, i32* %182, align 4
  br label %190

187:                                              ; preds = %181
  %188 = add i32 %183, -3
  %189 = icmp ult i32 %188, 2
  br i1 %189, label %190, label %834

190:                                              ; preds = %187, %185
  %191 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 31
  %192 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 2
  %193 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 9
  %194 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 30
  %195 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 33
  %196 = bitcast %union.anon.0* %195 to i8*
  %197 = bitcast i8** %194 to %union.anon.0**
  %198 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 14
  %199 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 13
  %200 = getelementptr inbounds i8, i8* %196, i64 1
  br label %201

201:                                              ; preds = %322, %190
  %202 = tail call fastcc i32 @InjectFlushOrPushOutput(%struct.BrotliEncoderStateStruct* %0, i64* %4, i8** %5, i64* %6) #8
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %322

204:                                              ; preds = %201
  %205 = load i64, i64* %191, align 8
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %207, label %834

207:                                              ; preds = %204
  %208 = load i64, i64* %192, align 8
  %209 = load i64, i64* %193, align 8
  %210 = icmp eq i64 %208, %209
  br i1 %210, label %214, label %211

211:                                              ; preds = %207
  %212 = tail call fastcc i32 @EncodeData(%struct.BrotliEncoderStateStruct* %0, i32 0, i32 1, i64* %191, i8** %194) #8
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %834, label %322

214:                                              ; preds = %207
  %215 = load i32, i32* %182, align 4
  %216 = icmp eq i32 %215, 3
  br i1 %216, label %217, label %287

217:                                              ; preds = %214
  store %union.anon.0* %195, %union.anon.0** %197, align 8
  %218 = load i32, i32* %154, align 8
  %219 = zext i32 %218 to i64
  %220 = load i8, i8* %198, align 2
  %221 = zext i8 %220 to i64
  %222 = load i16, i16* %199, align 8
  %223 = trunc i16 %222 to i8
  store i8 %223, i8* %196, align 1
  %224 = lshr i16 %222, 8
  %225 = trunc i16 %224 to i8
  store i8 %225, i8* %200, align 1
  store i16 0, i16* %199, align 8
  store i8 0, i8* %198, align 2
  %226 = lshr i64 %221, 3
  %227 = getelementptr inbounds i8, i8* %196, i64 %226
  %228 = load i8, i8* %227, align 1, !alias.scope !242, !noalias !245
  %229 = zext i8 %228 to i64
  %230 = bitcast i8* %227 to i64*
  store i64 %229, i64* %230, align 8, !alias.scope !242, !noalias !245
  %231 = add nuw nsw i64 %221, 1
  %232 = lshr i64 %231, 3
  %233 = getelementptr inbounds i8, i8* %196, i64 %232
  %234 = load i8, i8* %233, align 1, !alias.scope !247, !noalias !250
  %235 = zext i8 %234 to i64
  %236 = and i64 %231, 7
  %237 = shl i64 3, %236
  %238 = or i64 %237, %235
  %239 = bitcast i8* %233 to i64*
  store i64 %238, i64* %239, align 8, !alias.scope !247, !noalias !250
  %240 = add nuw nsw i64 %221, 3
  %241 = lshr i64 %240, 3
  %242 = getelementptr inbounds i8, i8* %196, i64 %241
  %243 = load i8, i8* %242, align 1, !alias.scope !252, !noalias !255
  %244 = zext i8 %243 to i64
  %245 = bitcast i8* %242 to i64*
  store i64 %244, i64* %245, align 8, !alias.scope !252, !noalias !255
  %246 = add nuw nsw i64 %221, 4
  switch i32 %218, label %254 [
    i32 0, label %247
    i32 1, label %259
  ]

247:                                              ; preds = %217
  %248 = lshr i64 %246, 3
  %249 = getelementptr inbounds i8, i8* %196, i64 %248
  %250 = load i8, i8* %249, align 1, !alias.scope !257, !noalias !260
  %251 = zext i8 %250 to i64
  %252 = bitcast i8* %249 to i64*
  store i64 %251, i64* %252, align 8, !alias.scope !257, !noalias !260
  %253 = add nuw nsw i64 %221, 6
  br label %283

254:                                              ; preds = %217
  %255 = add i32 %218, -1
  %256 = tail call i32 @llvm.ctlz.i32(i32 %255, i1 true) #8, !range !236
  %257 = sub nuw nsw i32 39, %256
  %258 = lshr i32 %257, 3
  br label %259

259:                                              ; preds = %254, %217
  %260 = phi i32 [ %258, %254 ], [ 0, %217 ]
  %261 = zext i32 %260 to i64
  %262 = lshr i64 %246, 3
  %263 = getelementptr inbounds i8, i8* %196, i64 %262
  %264 = load i8, i8* %263, align 1, !alias.scope !262, !noalias !265
  %265 = zext i8 %264 to i64
  %266 = and i64 %246, 7
  %267 = shl i64 %261, %266
  %268 = or i64 %267, %265
  %269 = bitcast i8* %263 to i64*
  store i64 %268, i64* %269, align 8, !alias.scope !262, !noalias !265
  %270 = add nuw nsw i64 %221, 6
  %271 = shl nuw nsw i32 %260, 3
  %272 = zext i32 %271 to i64
  %273 = add nsw i64 %219, -1
  %274 = lshr i64 %270, 3
  %275 = getelementptr inbounds i8, i8* %196, i64 %274
  %276 = load i8, i8* %275, align 1, !alias.scope !267, !noalias !270
  %277 = zext i8 %276 to i64
  %278 = and i64 %270, 7
  %279 = shl i64 %273, %278
  %280 = or i64 %279, %277
  %281 = bitcast i8* %275 to i64*
  store i64 %280, i64* %281, align 8, !alias.scope !267, !noalias !270
  %282 = add nuw nsw i64 %270, %272
  br label %283

283:                                              ; preds = %259, %247
  %284 = phi i64 [ %282, %259 ], [ %253, %247 ]
  %285 = add nuw nsw i64 %284, 7
  %286 = lshr i64 %285, 3
  store i64 %286, i64* %191, align 8
  store i32 4, i32* %182, align 4
  br label %322

287:                                              ; preds = %214
  %288 = load i32, i32* %154, align 8
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %290, label %291

290:                                              ; preds = %287
  store i32 -1, i32* %154, align 8
  store i32 0, i32* %182, align 4
  br label %834

291:                                              ; preds = %287
  %292 = load i64, i64* %4, align 8
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %311, label %294

294:                                              ; preds = %291
  %295 = zext i32 %288 to i64
  %296 = icmp ugt i64 %292, %295
  %297 = select i1 %296, i64 %295, i64 %292
  %298 = trunc i64 %297 to i32
  %299 = load i8*, i8** %5, align 8
  %300 = load i8*, i8** %3, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %299, i8* align 1 %300, i64 %297, i1 false) #8
  %301 = load i8*, i8** %3, align 8
  %302 = getelementptr inbounds i8, i8* %301, i64 %297
  store i8* %302, i8** %3, align 8
  %303 = load i64, i64* %2, align 8
  %304 = sub i64 %303, %297
  store i64 %304, i64* %2, align 8
  %305 = load i32, i32* %154, align 8
  %306 = sub i32 %305, %298
  store i32 %306, i32* %154, align 8
  %307 = load i8*, i8** %5, align 8
  %308 = getelementptr inbounds i8, i8* %307, i64 %297
  store i8* %308, i8** %5, align 8
  %309 = load i64, i64* %4, align 8
  %310 = sub i64 %309, %297
  store i64 %310, i64* %4, align 8
  br label %322

311:                                              ; preds = %291
  %312 = icmp ult i32 %288, 16
  %313 = select i1 %312, i32 %288, i32 16
  store %union.anon.0* %195, %union.anon.0** %197, align 8
  %314 = load i8*, i8** %3, align 8
  %315 = zext i32 %313 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %196, i8* align 1 %314, i64 %315, i1 false) #8
  %316 = load i8*, i8** %3, align 8
  %317 = getelementptr inbounds i8, i8* %316, i64 %315
  store i8* %317, i8** %3, align 8
  %318 = load i64, i64* %2, align 8
  %319 = sub i64 %318, %315
  store i64 %319, i64* %2, align 8
  %320 = load i32, i32* %154, align 8
  %321 = sub i32 %320, %313
  store i32 %321, i32* %154, align 8
  store i64 %315, i64* %191, align 8
  br label %322

322:                                              ; preds = %311, %294, %283, %211, %201
  br label %201

323:                                              ; preds = %163
  %324 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 35
  %325 = load i32, i32* %324, align 4
  switch i32 %325, label %326 [
    i32 3, label %834
    i32 4, label %834
    i32 0, label %329
  ]

326:                                              ; preds = %323
  %327 = load i64, i64* %2, align 8
  %328 = icmp eq i64 %327, 0
  br i1 %328, label %329, label %834

329:                                              ; preds = %323, %326
  %330 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 1
  %331 = load i32, i32* %330, align 4
  %332 = icmp ult i32 %331, 2
  br i1 %332, label %353, label %333

333:                                              ; preds = %329
  %334 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 2
  %335 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 10
  %336 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 3
  %337 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 15
  %338 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 1
  %339 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 3, i32 5
  %340 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 3, i32 2
  %341 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 3, i32 4
  %342 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 3, i32 3
  %343 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 3, i32 6
  %344 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 3, i32 7
  %345 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 3, i32 0
  %346 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 3, i32 1
  %347 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 31
  %348 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 30
  %349 = icmp ne i32 %1, 0
  %350 = icmp eq i32 %1, 2
  %351 = icmp eq i32 %1, 1
  %352 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 5
  br label %534

353:                                              ; preds = %329
  %354 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 2
  %355 = load i32, i32* %354, align 8
  %356 = zext i32 %355 to i64
  %357 = shl i64 1, %356
  %358 = load i64, i64* %2, align 8
  %359 = icmp ult i64 %358, %357
  %360 = select i1 %359, i64 %358, i64 %357
  %361 = icmp ult i64 %360, 131072
  %362 = select i1 %361, i64 %360, i64 131072
  %363 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 1
  %364 = icmp eq i32 %331, 1
  br i1 %364, label %365, label %390

365:                                              ; preds = %353
  %366 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 28
  %367 = load i32*, i32** %366, align 8
  %368 = icmp eq i32* %367, null
  %369 = icmp ugt i64 %360, 131071
  %370 = and i1 %369, %368
  br i1 %370, label %371, label %377

371:                                              ; preds = %365
  %372 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %363, i64 524288) #8
  %373 = bitcast i32** %366 to i8**
  store i8* %372, i8** %373, align 8
  %374 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %363, i64 131072) #8
  %375 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 29
  store i8* %374, i8** %375, align 8
  %376 = load i32*, i32** %366, align 8
  br label %377

377:                                              ; preds = %371, %365
  %378 = phi i32* [ %367, %365 ], [ %376, %371 ]
  %379 = icmp eq i32* %378, null
  br i1 %379, label %383, label %380

380:                                              ; preds = %377
  %381 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 29
  %382 = load i8*, i8** %381, align 8
  br label %390

383:                                              ; preds = %377
  %384 = icmp eq i64 %362, 0
  br i1 %384, label %390, label %385

385:                                              ; preds = %383
  %386 = shl nuw nsw i64 %362, 2
  %387 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %363, i64 %386) #8
  %388 = bitcast i8* %387 to i32*
  %389 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %363, i64 %362) #8
  br label %390

390:                                              ; preds = %385, %383, %380, %353
  %391 = phi i8* [ null, %380 ], [ null, %353 ], [ %387, %385 ], [ null, %383 ]
  %392 = phi i32* [ %378, %380 ], [ null, %353 ], [ %388, %385 ], [ null, %383 ]
  %393 = phi i8* [ null, %380 ], [ null, %353 ], [ %389, %385 ], [ null, %383 ]
  %394 = phi i8* [ %382, %380 ], [ null, %353 ], [ %389, %385 ], [ null, %383 ]
  %395 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 31
  %396 = icmp ne i32 %1, 0
  %397 = icmp eq i32 %1, 2
  %398 = icmp eq i32 %1, 1
  %399 = bitcast i64* %8 to i8*
  %400 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 14
  %401 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 18
  %402 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 19
  %403 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 13
  %404 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 23
  %405 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 22
  %406 = bitcast i32** %405 to i8**
  %407 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 21, i64 0
  %408 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 24, i64 0
  %409 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 25, i64 0
  %410 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 27
  %411 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 26, i64 0
  %412 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 32
  %413 = icmp eq i64* %6, null
  %414 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 30
  br label %415

415:                                              ; preds = %526, %390
  %416 = call fastcc i32 @InjectFlushOrPushOutput(%struct.BrotliEncoderStateStruct* %0, i64* %4, i8** %5, i64* %6) #8
  %417 = icmp eq i32 %416, 0
  br i1 %417, label %418, label %526

418:                                              ; preds = %415
  %419 = load i64, i64* %395, align 8
  %420 = icmp eq i64 %419, 0
  br i1 %420, label %421, label %527

421:                                              ; preds = %418
  %422 = load i32, i32* %324, align 4
  %423 = icmp eq i32 %422, 0
  br i1 %423, label %424, label %527

424:                                              ; preds = %421
  %425 = load i64, i64* %2, align 8
  %426 = icmp ne i64 %425, 0
  %427 = or i1 %396, %426
  br i1 %427, label %428, label %527

428:                                              ; preds = %424
  %429 = icmp ult i64 %357, %425
  %430 = select i1 %429, i64 %357, i64 %425
  %431 = icmp ule i64 %425, %357
  %432 = and i1 %397, %431
  %433 = zext i1 %432 to i32
  %434 = and i1 %398, %431
  %435 = shl i64 %430, 1
  %436 = add i64 %435, 503
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %399) #8
  %437 = load i8, i8* %400, align 2
  %438 = zext i8 %437 to i64
  store i64 %438, i64* %8, align 8
  %439 = icmp eq i64 %430, 0
  %440 = and i1 %434, %439
  br i1 %440, label %523, label %441

441:                                              ; preds = %428
  %442 = load i64, i64* %4, align 8
  %443 = icmp ugt i64 %436, %442
  br i1 %443, label %446, label %444

444:                                              ; preds = %441
  %445 = load i8*, i8** %5, align 8
  br label %452

446:                                              ; preds = %441
  %447 = load i64, i64* %401, align 8
  %448 = icmp ult i64 %447, %436
  %449 = load i8*, i8** %402, align 8
  br i1 %448, label %450, label %452

450:                                              ; preds = %446
  call void @BrotliFree(%struct.MemoryManager* %363, i8* %449) #8
  store i8* null, i8** %402, align 8
  %451 = call i8* @BrotliAllocate(%struct.MemoryManager* %363, i64 %436) #8
  store i8* %451, i8** %402, align 8
  store i64 %436, i64* %401, align 8
  br label %452

452:                                              ; preds = %450, %446, %444
  %453 = phi i32 [ 1, %444 ], [ 0, %446 ], [ 0, %450 ]
  %454 = phi i8* [ %445, %444 ], [ %449, %446 ], [ %451, %450 ]
  %455 = load i16, i16* %403, align 8
  %456 = trunc i16 %455 to i8
  store i8 %456, i8* %454, align 1
  %457 = load i16, i16* %403, align 8
  %458 = lshr i16 %457, 8
  %459 = trunc i16 %458 to i8
  %460 = getelementptr inbounds i8, i8* %454, i64 1
  store i8 %459, i8* %460, align 1
  %461 = load i32, i32* %330, align 4
  %462 = icmp eq i32 %461, 0
  %463 = select i1 %462, i64 32768, i64 131072
  br label %464

464:                                              ; preds = %464, %452
  %465 = phi i64 [ 256, %452 ], [ %469, %464 ]
  %466 = icmp ult i64 %465, %463
  %467 = icmp ult i64 %465, %430
  %468 = and i1 %466, %467
  %469 = shl i64 %465, 1
  br i1 %468, label %464, label %470

470:                                              ; preds = %464
  %471 = and i64 %465, 699050
  %472 = icmp eq i64 %471, 0
  %473 = and i1 %462, %472
  %474 = select i1 %473, i64 %469, i64 %465
  %475 = icmp ult i64 %474, 1025
  br i1 %475, label %486, label %476

476:                                              ; preds = %470
  %477 = load i64, i64* %404, align 8
  %478 = icmp ugt i64 %474, %477
  br i1 %478, label %481, label %479

479:                                              ; preds = %476
  %480 = load i32*, i32** %405, align 8
  br label %486

481:                                              ; preds = %476
  store i64 %474, i64* %404, align 8
  %482 = load i8*, i8** %406, align 8
  call void @BrotliFree(%struct.MemoryManager* %363, i8* %482) #8
  store i32* null, i32** %405, align 8
  %483 = shl i64 %474, 2
  %484 = call i8* @BrotliAllocate(%struct.MemoryManager* %363, i64 %483) #8
  store i8* %484, i8** %406, align 8
  %485 = bitcast i8* %484 to i32*
  br label %486

486:                                              ; preds = %481, %479, %470
  %487 = phi i32* [ %480, %479 ], [ %485, %481 ], [ %407, %470 ]
  %488 = bitcast i32* %487 to i8*
  %489 = shl i64 %474, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %488, i8 0, i64 %489, i1 false) #8
  %490 = load i32, i32* %330, align 4
  %491 = icmp eq i32 %490, 0
  %492 = load i8*, i8** %3, align 8
  br i1 %491, label %493, label %494

493:                                              ; preds = %486
  call void @BrotliCompressFragmentFast(%struct.MemoryManager* %363, i8* %492, i64 %430, i32 %433, i32* %487, i64 %474, i8* %408, i16* %409, i64* %410, i8* %411, i64* nonnull %8, i8* %454) #8
  br label %495

494:                                              ; preds = %486
  call void @BrotliCompressFragmentTwoPass(%struct.MemoryManager* %363, i8* %492, i64 %430, i32 %433, i32* %392, i8* %394, i32* %487, i64 %474, i64* nonnull %8, i8* %454) #8
  br label %495

495:                                              ; preds = %494, %493
  br i1 %439, label %501, label %496

496:                                              ; preds = %495
  %497 = load i8*, i8** %3, align 8
  %498 = getelementptr inbounds i8, i8* %497, i64 %430
  store i8* %498, i8** %3, align 8
  %499 = load i64, i64* %2, align 8
  %500 = sub i64 %499, %430
  store i64 %500, i64* %2, align 8
  br label %501

501:                                              ; preds = %496, %495
  %502 = icmp eq i32 %453, 0
  %503 = load i64, i64* %8, align 8
  %504 = lshr i64 %503, 3
  br i1 %502, label %513, label %505

505:                                              ; preds = %501
  %506 = load i8*, i8** %5, align 8
  %507 = getelementptr inbounds i8, i8* %506, i64 %504
  store i8* %507, i8** %5, align 8
  %508 = load i64, i64* %4, align 8
  %509 = sub i64 %508, %504
  store i64 %509, i64* %4, align 8
  %510 = load i64, i64* %412, align 8
  %511 = add i64 %510, %504
  store i64 %511, i64* %412, align 8
  br i1 %413, label %514, label %512

512:                                              ; preds = %505
  store i64 %511, i64* %6, align 8
  br label %514

513:                                              ; preds = %501
  store i8* %454, i8** %414, align 8
  store i64 %504, i64* %395, align 8
  br label %514

514:                                              ; preds = %513, %512, %505
  %515 = getelementptr inbounds i8, i8* %454, i64 %504
  %516 = load i8, i8* %515, align 1
  %517 = zext i8 %516 to i16
  store i16 %517, i16* %403, align 8
  %518 = trunc i64 %503 to i8
  %519 = and i8 %518, 7
  store i8 %519, i8* %400, align 2
  %520 = or i1 %434, %432
  br i1 %520, label %521, label %525

521:                                              ; preds = %514
  %522 = select i1 %432, i32 2, i32 1
  br label %523

523:                                              ; preds = %428, %521
  %524 = phi i32 [ %522, %521 ], [ 1, %428 ]
  store i32 %524, i32* %324, align 4
  br label %525

525:                                              ; preds = %523, %514
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %399) #8
  br label %526

526:                                              ; preds = %525, %415
  br label %415

527:                                              ; preds = %424, %421, %418
  call void @BrotliFree(%struct.MemoryManager* %363, i8* %391) #8
  call void @BrotliFree(%struct.MemoryManager* %363, i8* %393) #8
  %528 = load i32, i32* %324, align 4
  %529 = icmp eq i32 %528, 1
  br i1 %529, label %530, label %834

530:                                              ; preds = %527
  %531 = load i64, i64* %395, align 8
  %532 = icmp eq i64 %531, 0
  br i1 %532, label %533, label %834

533:                                              ; preds = %530
  store i32 0, i32* %324, align 4
  store i8* null, i8** %414, align 8
  br label %834

534:                                              ; preds = %777, %333
  %535 = load i64, i64* %334, align 8
  %536 = load i64, i64* %335, align 8
  %537 = sub i64 %535, %536
  %538 = load i32, i32* %336, align 4
  %539 = zext i32 %538 to i64
  %540 = shl i64 1, %539
  %541 = tail call i64 @llvm.usub.sat.i64(i64 %540, i64 %537) #8
  %542 = load i8, i8* %337, align 1
  %543 = icmp sgt i8 %542, -1
  %544 = sext i8 %542 to i64
  %545 = icmp ugt i64 %541, %544
  %546 = and i1 %543, %545
  %547 = select i1 %546, i64 %544, i64 %541
  %548 = icmp eq i64 %547, 0
  br i1 %548, label %769, label %549

549:                                              ; preds = %534
  %550 = load i64, i64* %2, align 8
  %551 = icmp eq i64 %550, 0
  br i1 %551, label %769, label %552

552:                                              ; preds = %549
  %553 = icmp ult i64 %547, %550
  %554 = select i1 %553, i64 %547, i64 %550
  %555 = load i8*, i8** %3, align 8
  %556 = load i32, i32* %339, align 4
  %557 = icmp eq i32 %556, 0
  br i1 %557, label %558, label %617

558:                                              ; preds = %552
  %559 = load i32, i32* %340, align 8
  %560 = zext i32 %559 to i64
  %561 = icmp ult i64 %554, %560
  br i1 %561, label %562, label %617

562:                                              ; preds = %558
  %563 = trunc i64 %554 to i32
  store i32 %563, i32* %339, align 4
  %564 = add i64 %554, 2
  %565 = and i64 %564, 4294967295
  %566 = add nuw nsw i64 %565, 7
  %567 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %338, i64 %566) #8
  %568 = load i8*, i8** %343, align 8
  %569 = icmp eq i8* %568, null
  br i1 %569, label %576, label %570

570:                                              ; preds = %562
  %571 = load i32, i32* %341, align 8
  %572 = add i32 %571, 2
  %573 = zext i32 %572 to i64
  %574 = add nuw nsw i64 %573, 7
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %567, i8* nonnull align 1 %568, i64 %574, i1 false) #8
  %575 = load i8*, i8** %343, align 8
  tail call void @BrotliFree(%struct.MemoryManager* %338, i8* %575) #8
  store i8* null, i8** %343, align 8
  br label %576

576:                                              ; preds = %570, %562
  store i8* %567, i8** %343, align 8
  store i32 %563, i32* %341, align 8
  %577 = getelementptr inbounds i8, i8* %567, i64 2
  store i8* %577, i8** %344, align 8
  %578 = getelementptr inbounds i8, i8* %567, i64 1
  store i8 0, i8* %578, align 1
  %579 = load i8*, i8** %344, align 8
  %580 = getelementptr inbounds i8, i8* %579, i64 -2
  store i8 0, i8* %580, align 1
  %581 = load i8*, i8** %344, align 8
  %582 = load i32, i32* %341, align 8
  %583 = zext i32 %582 to i64
  %584 = getelementptr inbounds i8, i8* %581, i64 %583
  store i8 0, i8* %584, align 1
  %585 = load i8*, i8** %344, align 8
  %586 = load i32, i32* %341, align 8
  %587 = zext i32 %586 to i64
  %588 = add nuw nsw i64 %587, 1
  %589 = getelementptr inbounds i8, i8* %585, i64 %588
  store i8 0, i8* %589, align 1
  %590 = load i8*, i8** %344, align 8
  %591 = load i32, i32* %341, align 8
  %592 = zext i32 %591 to i64
  %593 = add nuw nsw i64 %592, 2
  %594 = getelementptr inbounds i8, i8* %590, i64 %593
  store i8 0, i8* %594, align 1
  %595 = load i8*, i8** %344, align 8
  %596 = load i32, i32* %341, align 8
  %597 = zext i32 %596 to i64
  %598 = add nuw nsw i64 %597, 3
  %599 = getelementptr inbounds i8, i8* %595, i64 %598
  store i8 0, i8* %599, align 1
  %600 = load i8*, i8** %344, align 8
  %601 = load i32, i32* %341, align 8
  %602 = zext i32 %601 to i64
  %603 = add nuw nsw i64 %602, 4
  %604 = getelementptr inbounds i8, i8* %600, i64 %603
  store i8 0, i8* %604, align 1
  %605 = load i8*, i8** %344, align 8
  %606 = load i32, i32* %341, align 8
  %607 = zext i32 %606 to i64
  %608 = add nuw nsw i64 %607, 5
  %609 = getelementptr inbounds i8, i8* %605, i64 %608
  store i8 0, i8* %609, align 1
  %610 = load i8*, i8** %344, align 8
  %611 = load i32, i32* %341, align 8
  %612 = zext i32 %611 to i64
  %613 = add nuw nsw i64 %612, 6
  %614 = getelementptr inbounds i8, i8* %610, i64 %613
  store i8 0, i8* %614, align 1
  %615 = load i8*, i8** %344, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %615, i8* align 1 %555, i64 %554, i1 false) #8
  %616 = load i32, i32* %339, align 4
  br label %749

617:                                              ; preds = %558, %552
  %618 = load i32, i32* %341, align 8
  %619 = load i32, i32* %342, align 4
  %620 = icmp ult i32 %618, %619
  br i1 %620, label %621, label %688

621:                                              ; preds = %617
  %622 = add i32 %619, 2
  %623 = zext i32 %622 to i64
  %624 = add nuw nsw i64 %623, 7
  %625 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %338, i64 %624) #8
  %626 = load i8*, i8** %343, align 8
  %627 = icmp eq i8* %626, null
  br i1 %627, label %634, label %628

628:                                              ; preds = %621
  %629 = load i32, i32* %341, align 8
  %630 = add i32 %629, 2
  %631 = zext i32 %630 to i64
  %632 = add nuw nsw i64 %631, 7
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %625, i8* nonnull align 1 %626, i64 %632, i1 false) #8
  %633 = load i8*, i8** %343, align 8
  tail call void @BrotliFree(%struct.MemoryManager* %338, i8* %633) #8
  store i8* null, i8** %343, align 8
  br label %634

634:                                              ; preds = %628, %621
  store i8* %625, i8** %343, align 8
  store i32 %619, i32* %341, align 8
  %635 = getelementptr inbounds i8, i8* %625, i64 2
  store i8* %635, i8** %344, align 8
  %636 = getelementptr inbounds i8, i8* %625, i64 1
  store i8 0, i8* %636, align 1
  %637 = load i8*, i8** %344, align 8
  %638 = getelementptr inbounds i8, i8* %637, i64 -2
  store i8 0, i8* %638, align 1
  %639 = load i8*, i8** %344, align 8
  %640 = load i32, i32* %341, align 8
  %641 = zext i32 %640 to i64
  %642 = getelementptr inbounds i8, i8* %639, i64 %641
  store i8 0, i8* %642, align 1
  %643 = load i8*, i8** %344, align 8
  %644 = load i32, i32* %341, align 8
  %645 = zext i32 %644 to i64
  %646 = add nuw nsw i64 %645, 1
  %647 = getelementptr inbounds i8, i8* %643, i64 %646
  store i8 0, i8* %647, align 1
  %648 = load i8*, i8** %344, align 8
  %649 = load i32, i32* %341, align 8
  %650 = zext i32 %649 to i64
  %651 = add nuw nsw i64 %650, 2
  %652 = getelementptr inbounds i8, i8* %648, i64 %651
  store i8 0, i8* %652, align 1
  %653 = load i8*, i8** %344, align 8
  %654 = load i32, i32* %341, align 8
  %655 = zext i32 %654 to i64
  %656 = add nuw nsw i64 %655, 3
  %657 = getelementptr inbounds i8, i8* %653, i64 %656
  store i8 0, i8* %657, align 1
  %658 = load i8*, i8** %344, align 8
  %659 = load i32, i32* %341, align 8
  %660 = zext i32 %659 to i64
  %661 = add nuw nsw i64 %660, 4
  %662 = getelementptr inbounds i8, i8* %658, i64 %661
  store i8 0, i8* %662, align 1
  %663 = load i8*, i8** %344, align 8
  %664 = load i32, i32* %341, align 8
  %665 = zext i32 %664 to i64
  %666 = add nuw nsw i64 %665, 5
  %667 = getelementptr inbounds i8, i8* %663, i64 %666
  store i8 0, i8* %667, align 1
  %668 = load i8*, i8** %344, align 8
  %669 = load i32, i32* %341, align 8
  %670 = zext i32 %669 to i64
  %671 = add nuw nsw i64 %670, 6
  %672 = getelementptr inbounds i8, i8* %668, i64 %671
  store i8 0, i8* %672, align 1
  %673 = load i8*, i8** %344, align 8
  %674 = load i32, i32* %345, align 8
  %675 = add i32 %674, -2
  %676 = zext i32 %675 to i64
  %677 = getelementptr inbounds i8, i8* %673, i64 %676
  store i8 0, i8* %677, align 1
  %678 = load i8*, i8** %344, align 8
  %679 = load i32, i32* %345, align 8
  %680 = add i32 %679, -1
  %681 = zext i32 %680 to i64
  %682 = getelementptr inbounds i8, i8* %678, i64 %681
  store i8 0, i8* %682, align 1
  %683 = load i8*, i8** %344, align 8
  %684 = load i32, i32* %345, align 8
  %685 = zext i32 %684 to i64
  %686 = getelementptr inbounds i8, i8* %683, i64 %685
  store i8 -15, i8* %686, align 1
  %687 = load i32, i32* %339, align 4
  br label %688

688:                                              ; preds = %634, %617
  %689 = phi i32 [ %687, %634 ], [ %556, %617 ]
  %690 = load i32, i32* %346, align 4
  %691 = and i32 %690, %689
  %692 = zext i32 %691 to i64
  %693 = load i32, i32* %340, align 8
  %694 = icmp ugt i32 %693, %691
  br i1 %694, label %695, label %705, !prof !233

695:                                              ; preds = %688
  %696 = zext i32 %693 to i64
  %697 = load i32, i32* %345, align 8
  %698 = zext i32 %697 to i64
  %699 = add nuw nsw i64 %698, %692
  %700 = load i8*, i8** %344, align 8
  %701 = getelementptr inbounds i8, i8* %700, i64 %699
  %702 = sub nsw i64 %696, %692
  %703 = icmp ugt i64 %702, %554
  %704 = select i1 %703, i64 %554, i64 %702
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %701, i8* align 1 %555, i64 %704, i1 false) #8
  br label %705

705:                                              ; preds = %695, %688
  %706 = add i64 %554, %692
  %707 = load i32, i32* %345, align 8
  %708 = zext i32 %707 to i64
  %709 = icmp ugt i64 %706, %708
  %710 = load i8*, i8** %344, align 8
  %711 = getelementptr inbounds i8, i8* %710, i64 %692
  br i1 %709, label %713, label %712, !prof !233

712:                                              ; preds = %705
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %711, i8* align 1 %555, i64 %554, i1 false) #8
  br label %725

713:                                              ; preds = %705
  %714 = load i32, i32* %342, align 4
  %715 = zext i32 %714 to i64
  %716 = sub nsw i64 %715, %692
  %717 = icmp ugt i64 %716, %554
  %718 = select i1 %717, i64 %554, i64 %716
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %711, i8* align 1 %555, i64 %718, i1 false) #8
  %719 = load i8*, i8** %344, align 8
  %720 = load i32, i32* %345, align 8
  %721 = zext i32 %720 to i64
  %722 = sub nsw i64 %721, %692
  %723 = getelementptr inbounds i8, i8* %555, i64 %722
  %724 = sub i64 %554, %722
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %719, i8* align 1 %723, i64 %724, i1 false) #8
  br label %725

725:                                              ; preds = %713, %712
  %726 = load i32, i32* %339, align 4
  %727 = icmp slt i32 %726, 0
  %728 = load i8*, i8** %344, align 8
  %729 = load i32, i32* %345, align 8
  %730 = add i32 %729, -2
  %731 = zext i32 %730 to i64
  %732 = getelementptr inbounds i8, i8* %728, i64 %731
  %733 = load i8, i8* %732, align 1
  %734 = getelementptr inbounds i8, i8* %728, i64 -2
  store i8 %733, i8* %734, align 1
  %735 = load i8*, i8** %344, align 8
  %736 = load i32, i32* %345, align 8
  %737 = add i32 %736, -1
  %738 = zext i32 %737 to i64
  %739 = getelementptr inbounds i8, i8* %735, i64 %738
  %740 = load i8, i8* %739, align 1
  %741 = getelementptr inbounds i8, i8* %735, i64 -1
  store i8 %740, i8* %741, align 1
  %742 = load i32, i32* %339, align 4
  %743 = and i32 %742, 2147483647
  %744 = trunc i64 %554 to i32
  %745 = and i32 %744, 2147483647
  %746 = add nuw i32 %743, %745
  %747 = or i32 %746, -2147483648
  %748 = select i1 %727, i32 %747, i32 %746
  store i32 %748, i32* %339, align 4
  br label %749

749:                                              ; preds = %725, %576
  %750 = phi i32 [ %616, %576 ], [ %748, %725 ]
  %751 = load i64, i64* %334, align 8
  %752 = add i64 %751, %554
  store i64 %752, i64* %334, align 8
  %753 = load i32, i32* %346, align 4
  %754 = icmp ugt i32 %750, %753
  br i1 %754, label %759, label %755

755:                                              ; preds = %749
  %756 = load i8*, i8** %344, align 8
  %757 = zext i32 %750 to i64
  %758 = getelementptr inbounds i8, i8* %756, i64 %757
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %758, i8 0, i64 7, i1 false) #8
  br label %759

759:                                              ; preds = %749, %755
  %760 = load i8*, i8** %3, align 8
  %761 = getelementptr inbounds i8, i8* %760, i64 %554
  store i8* %761, i8** %3, align 8
  %762 = load i64, i64* %2, align 8
  %763 = sub i64 %762, %554
  store i64 %763, i64* %2, align 8
  %764 = load i8, i8* %337, align 1
  %765 = icmp sgt i8 %764, 0
  br i1 %765, label %766, label %777

766:                                              ; preds = %759
  %767 = trunc i64 %554 to i8
  %768 = sub i8 %764, %767
  store i8 %768, i8* %337, align 1
  br label %777

769:                                              ; preds = %549, %534
  %770 = tail call fastcc i32 @InjectFlushOrPushOutput(%struct.BrotliEncoderStateStruct* %0, i64* %4, i8** %5, i64* %6)
  %771 = icmp eq i32 %770, 0
  br i1 %771, label %783, label %772

772:                                              ; preds = %769
  %773 = load i8, i8* %337, align 1
  %774 = icmp eq i8 %773, -1
  br i1 %774, label %775, label %777

775:                                              ; preds = %772
  %776 = load i32, i32* %324, align 4
  switch i32 %776, label %777 [
    i32 1, label %778
    i32 0, label %782
  ]

777:                                              ; preds = %775, %778, %824, %827, %772, %782, %759, %766
  br label %534

778:                                              ; preds = %775
  %779 = load i64, i64* %347, align 8
  %780 = icmp eq i64 %779, 0
  br i1 %780, label %781, label %777

781:                                              ; preds = %778
  store i32 0, i32* %324, align 4
  store i8* null, i8** %348, align 8
  br label %782

782:                                              ; preds = %775, %781
  store i8 -2, i8* %337, align 1
  br label %777

783:                                              ; preds = %769
  %784 = load i64, i64* %347, align 8
  %785 = icmp eq i64 %784, 0
  %786 = load i32, i32* %324, align 4
  %787 = icmp eq i32 %786, 0
  %788 = and i1 %785, %787
  br i1 %788, label %789, label %829

789:                                              ; preds = %783
  %790 = or i1 %349, %548
  br i1 %790, label %791, label %834

791:                                              ; preds = %789
  %792 = load i64, i64* %2, align 8
  %793 = icmp eq i64 %792, 0
  %794 = and i1 %350, %793
  %795 = zext i1 %794 to i32
  %796 = and i1 %351, %793
  %797 = zext i1 %796 to i32
  br i1 %794, label %803, label %798

798:                                              ; preds = %791
  %799 = load i8, i8* %337, align 1
  %800 = icmp eq i8 %799, 0
  br i1 %800, label %801, label %803

801:                                              ; preds = %798
  store i8 -1, i8* %337, align 1
  %802 = load i64, i64* %2, align 8
  br label %803

803:                                              ; preds = %801, %798, %791
  %804 = phi i64 [ 0, %791 ], [ %802, %801 ], [ %792, %798 ]
  %805 = phi i32 [ %797, %791 ], [ 1, %801 ], [ %797, %798 ]
  %806 = load i64, i64* %352, align 8
  %807 = icmp eq i64 %806, 0
  br i1 %807, label %808, label %821

808:                                              ; preds = %803
  %809 = load i64, i64* %334, align 8
  %810 = load i64, i64* %335, align 8
  %811 = sub i64 %809, %810
  %812 = or i64 %811, %804
  %813 = icmp ugt i64 %812, 1073741823
  br i1 %813, label %819, label %814

814:                                              ; preds = %808
  %815 = add nuw nsw i64 %811, %804
  %816 = icmp ugt i64 %815, 1073741823
  %817 = and i64 %815, 4294967295
  %818 = select i1 %816, i64 1073741824, i64 %817
  br label %819

819:                                              ; preds = %814, %808
  %820 = phi i64 [ 1073741824, %808 ], [ %818, %814 ]
  store i64 %820, i64* %352, align 8
  br label %821

821:                                              ; preds = %803, %819
  %822 = tail call fastcc i32 @EncodeData(%struct.BrotliEncoderStateStruct* %0, i32 %795, i32 %805, i64* %347, i8** %348)
  %823 = icmp eq i32 %822, 0
  br i1 %823, label %834, label %824

824:                                              ; preds = %821
  %825 = icmp ne i32 %805, 0
  %826 = or i1 %794, %825
  br i1 %826, label %827, label %777

827:                                              ; preds = %824
  %828 = select i1 %794, i32 2, i32 1
  store i32 %828, i32* %324, align 4
  br label %777

829:                                              ; preds = %783
  %830 = icmp ne i32 %786, 1
  %831 = xor i1 %785, true
  %832 = or i1 %830, %831
  br i1 %832, label %834, label %833

833:                                              ; preds = %829
  store i32 0, i32* %324, align 4
  store i8* null, i8** %348, align 8
  br label %834

834:                                              ; preds = %821, %789, %211, %204, %829, %833, %533, %530, %527, %290, %187, %178, %326, %323, %323, %157
  %835 = phi i32 [ 0, %157 ], [ 0, %323 ], [ 0, %323 ], [ 0, %326 ], [ 0, %178 ], [ 0, %187 ], [ 1, %290 ], [ 1, %527 ], [ 1, %530 ], [ 1, %533 ], [ 1, %829 ], [ 1, %833 ], [ 0, %211 ], [ 1, %204 ], [ 0, %821 ], [ 1, %789 ]
  ret i32 %835
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @BrotliEncoderIsFinished(%struct.BrotliEncoderStateStruct* nocapture readonly) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 35
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 2
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 31
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  %9 = zext i1 %8 to i32
  br label %10

10:                                               ; preds = %5, %1
  %11 = phi i32 [ 0, %1 ], [ %9, %5 ]
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @InjectFlushOrPushOutput(%struct.BrotliEncoderStateStruct*, i64* nocapture, i8** nocapture, i64*) unnamed_addr #1 {
  %5 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 35
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %51

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 14
  %10 = load i8, i8* %9, align 2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %51, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 13
  %14 = load i16, i16* %13, align 8
  %15 = zext i16 %14 to i32
  %16 = zext i8 %10 to i64
  store i16 0, i16* %13, align 8
  store i8 0, i8* %9, align 2
  %17 = zext i8 %10 to i32
  %18 = shl i32 6, %17
  %19 = or i32 %18, %15
  %20 = add nuw nsw i64 %16, 6
  %21 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 30
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %28, label %24

24:                                               ; preds = %12
  %25 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 31
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds i8, i8* %22, i64 %26
  br label %32

28:                                               ; preds = %12
  %29 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 33
  %30 = bitcast %union.anon.0* %29 to i8*
  %31 = bitcast i8** %21 to %union.anon.0**
  store %union.anon.0* %29, %union.anon.0** %31, align 8
  br label %32

32:                                               ; preds = %28, %24
  %33 = phi i8* [ %27, %24 ], [ %30, %28 ]
  %34 = trunc i32 %19 to i8
  store i8 %34, i8* %33, align 1
  %35 = icmp ugt i64 %20, 8
  br i1 %35, label %36, label %45

36:                                               ; preds = %32
  %37 = lshr i32 %19, 8
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds i8, i8* %33, i64 1
  store i8 %38, i8* %39, align 1
  %40 = icmp ugt i64 %20, 16
  br i1 %40, label %41, label %45

41:                                               ; preds = %36
  %42 = lshr i32 %18, 16
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds i8, i8* %33, i64 2
  store i8 %43, i8* %44, align 1
  br label %45

45:                                               ; preds = %32, %36, %41
  %46 = add nuw nsw i64 %16, 13
  %47 = lshr i64 %46, 3
  %48 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 31
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, %47
  store i64 %50, i64* %48, align 8
  br label %77

51:                                               ; preds = %8, %4
  %52 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 31
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %77, label %55

55:                                               ; preds = %51
  %56 = load i64, i64* %1, align 8
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %77, label %58

58:                                               ; preds = %55
  %59 = icmp ult i64 %53, %56
  %60 = select i1 %59, i64 %53, i64 %56
  %61 = load i8*, i8** %2, align 8
  %62 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 30
  %63 = load i8*, i8** %62, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %61, i8* align 1 %63, i64 %60, i1 false)
  %64 = load i8*, i8** %2, align 8
  %65 = getelementptr inbounds i8, i8* %64, i64 %60
  store i8* %65, i8** %2, align 8
  %66 = load i64, i64* %1, align 8
  %67 = sub i64 %66, %60
  store i64 %67, i64* %1, align 8
  %68 = load i8*, i8** %62, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 %60
  store i8* %69, i8** %62, align 8
  %70 = load i64, i64* %52, align 8
  %71 = sub i64 %70, %60
  store i64 %71, i64* %52, align 8
  %72 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 32
  %73 = load i64, i64* %72, align 8
  %74 = add i64 %73, %60
  store i64 %74, i64* %72, align 8
  %75 = icmp eq i64* %3, null
  br i1 %75, label %77, label %76

76:                                               ; preds = %58
  store i64 %74, i64* %3, align 8
  br label %77

77:                                               ; preds = %51, %55, %76, %58, %45
  %78 = phi i32 [ 1, %45 ], [ 1, %58 ], [ 1, %76 ], [ 0, %55 ], [ 0, %51 ]
  ret i32 %78
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @EncodeData(%struct.BrotliEncoderStateStruct*, i32, i32, i64* nocapture, i8** nocapture) unnamed_addr #1 {
  %6 = alloca [3 x i32], align 4
  %7 = alloca [6 x i32], align 16
  %8 = alloca [32 x i32], align 16
  %9 = alloca [13 x [32 x i32]], align 16
  %10 = alloca [9 x i32], align 16
  %11 = alloca %struct.BrotliEncoderParams, align 8
  %12 = alloca %struct.MetaBlockSplit, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 10
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = trunc i64 %19 to i32
  %21 = trunc i64 %18 to i32
  %22 = icmp ugt i64 %18, 3221225471
  br i1 %22, label %23, label %28

23:                                               ; preds = %5
  %24 = and i32 %21, 1073741823
  %25 = and i32 %21, 1073741824
  %26 = sub nuw i32 -2147483648, %25
  %27 = or i32 %26, %24
  br label %28

28:                                               ; preds = %5, %23
  %29 = phi i32 [ %27, %23 ], [ %21, %5 ]
  %30 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 1
  %31 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 3, i32 7
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 3, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 36
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %3863

38:                                               ; preds = %28
  %39 = icmp ne i32 %1, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %38
  store i32 1, i32* %35, align 8
  br label %41

41:                                               ; preds = %40, %38
  %42 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 3
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i64
  %45 = shl i64 1, %44
  %46 = icmp ugt i64 %19, %45
  br i1 %46, label %3863, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0
  %49 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %62

52:                                               ; preds = %47
  %53 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 28
  %54 = load i32*, i32** %53, align 8
  %55 = icmp eq i32* %54, null
  br i1 %55, label %56, label %65

56:                                               ; preds = %52
  %57 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %30, i64 524288) #8
  %58 = bitcast i32** %53 to i8**
  store i8* %57, i8** %58, align 8
  %59 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %30, i64 131072) #8
  %60 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 29
  store i8* %59, i8** %60, align 8
  %61 = load i32, i32* %49, align 4
  br label %62

62:                                               ; preds = %56, %47
  %63 = phi i32 [ %50, %47 ], [ %61, %56 ]
  %64 = icmp ult i32 %63, 2
  br i1 %64, label %65, label %154

65:                                               ; preds = %52, %62
  %66 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #8
  %67 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 14
  %68 = load i8, i8* %67, align 2
  %69 = zext i8 %68 to i64
  store i64 %69, i64* %13, align 8
  %70 = icmp ne i64 %19, 0
  %71 = or i1 %39, %70
  br i1 %71, label %72, label %152

72:                                               ; preds = %65
  %73 = shl i64 %19, 1
  %74 = add i64 %73, 503
  %75 = and i64 %74, 4294967295
  %76 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 18
  %77 = load i64, i64* %76, align 8
  %78 = icmp ult i64 %77, %75
  %79 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 19
  %80 = load i8*, i8** %79, align 8
  br i1 %78, label %81, label %83

81:                                               ; preds = %72
  tail call void @BrotliFree(%struct.MemoryManager* %30, i8* %80) #8
  store i8* null, i8** %79, align 8
  %82 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %30, i64 %75) #8
  store i8* %82, i8** %79, align 8
  store i64 %75, i64* %76, align 8
  br label %83

83:                                               ; preds = %72, %81
  %84 = phi i8* [ %82, %81 ], [ %80, %72 ]
  %85 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 13
  %86 = load i16, i16* %85, align 8
  %87 = trunc i16 %86 to i8
  store i8 %87, i8* %84, align 1
  %88 = load i16, i16* %85, align 8
  %89 = lshr i16 %88, 8
  %90 = trunc i16 %89 to i8
  %91 = getelementptr inbounds i8, i8* %84, i64 1
  store i8 %90, i8* %91, align 1
  %92 = load i32, i32* %49, align 4
  %93 = and i64 %19, 4294967295
  %94 = icmp eq i32 %92, 0
  %95 = select i1 %94, i64 32768, i64 131072
  br label %96

96:                                               ; preds = %96, %83
  %97 = phi i64 [ 256, %83 ], [ %101, %96 ]
  %98 = icmp ult i64 %97, %95
  %99 = icmp ult i64 %97, %93
  %100 = and i1 %98, %99
  %101 = shl i64 %97, 1
  br i1 %100, label %96, label %102

102:                                              ; preds = %96
  %103 = and i64 %97, 699050
  %104 = icmp eq i64 %103, 0
  %105 = and i1 %94, %104
  %106 = select i1 %105, i64 %101, i64 %97
  %107 = icmp ult i64 %106, 1025
  br i1 %107, label %108, label %110

108:                                              ; preds = %102
  %109 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 21, i64 0
  br label %124

110:                                              ; preds = %102
  %111 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 23
  %112 = load i64, i64* %111, align 8
  %113 = icmp ugt i64 %106, %112
  br i1 %113, label %117, label %114

114:                                              ; preds = %110
  %115 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 22
  %116 = load i32*, i32** %115, align 8
  br label %124

117:                                              ; preds = %110
  store i64 %106, i64* %111, align 8
  %118 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 22
  %119 = bitcast i32** %118 to i8**
  %120 = load i8*, i8** %119, align 8
  tail call void @BrotliFree(%struct.MemoryManager* %30, i8* %120) #8
  store i32* null, i32** %118, align 8
  %121 = shl i64 %106, 2
  %122 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %30, i64 %121) #8
  store i8* %122, i8** %119, align 8
  %123 = bitcast i8* %122 to i32*
  br label %124

124:                                              ; preds = %108, %114, %117
  %125 = phi i32* [ %109, %108 ], [ %116, %114 ], [ %123, %117 ]
  %126 = bitcast i32* %125 to i8*
  %127 = shl i64 %106, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %126, i8 0, i64 %127, i1 false) #8
  %128 = load i32, i32* %49, align 4
  %129 = icmp eq i32 %128, 0
  %130 = and i32 %34, %29
  %131 = zext i32 %130 to i64
  %132 = getelementptr inbounds i8, i8* %32, i64 %131
  br i1 %129, label %133, label %138

133:                                              ; preds = %124
  %134 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 24, i64 0
  %135 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 25, i64 0
  %136 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 27
  %137 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 26, i64 0
  call void @BrotliCompressFragmentFast(%struct.MemoryManager* %30, i8* %132, i64 %93, i32 %1, i32* %125, i64 %106, i8* %134, i16* %135, i64* %136, i8* %137, i64* nonnull %13, i8* %84) #8
  br label %143

138:                                              ; preds = %124
  %139 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 28
  %140 = load i32*, i32** %139, align 8
  %141 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 29
  %142 = load i8*, i8** %141, align 8
  call void @BrotliCompressFragmentTwoPass(%struct.MemoryManager* %30, i8* %132, i64 %93, i32 %1, i32* %140, i8* %142, i32* %125, i64 %106, i64* nonnull %13, i8* %84) #8
  br label %143

143:                                              ; preds = %138, %133
  %144 = load i64, i64* %13, align 8
  %145 = lshr i64 %144, 3
  %146 = getelementptr inbounds i8, i8* %84, i64 %145
  %147 = load i8, i8* %146, align 1
  %148 = zext i8 %147 to i16
  store i16 %148, i16* %85, align 8
  %149 = trunc i64 %144 to i8
  %150 = and i8 %149, 7
  store i8 %150, i8* %67, align 2
  %151 = load i64, i64* %15, align 8
  store i64 %151, i64* %17, align 8
  store i8* %84, i8** %4, align 8
  br label %152

152:                                              ; preds = %65, %143
  %153 = phi i64 [ %145, %143 ], [ 0, %65 ]
  store i64 %153, i64* %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #8
  br label %3863

154:                                              ; preds = %62
  %155 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 6
  %156 = load i64, i64* %155, align 8
  %157 = lshr i64 %19, 1
  %158 = and i64 %157, 2147483647
  %159 = add nuw nsw i64 %158, 1
  %160 = add i64 %159, %156
  %161 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 4
  %162 = load i64, i64* %161, align 8
  %163 = icmp ugt i64 %160, %162
  br i1 %163, label %164, label %188

164:                                              ; preds = %154
  %165 = lshr i32 %20, 2
  %166 = add nuw nsw i32 %165, 16
  %167 = zext i32 %166 to i64
  %168 = add i64 %160, %167
  store i64 %168, i64* %161, align 8
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %173, label %170

170:                                              ; preds = %164
  %171 = shl i64 %168, 4
  %172 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %30, i64 %171) #8
  br label %173

173:                                              ; preds = %164, %170
  %174 = phi i8* [ %172, %170 ], [ null, %164 ]
  %175 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 5
  %176 = load %struct.Command*, %struct.Command** %175, align 8
  %177 = icmp eq %struct.Command* %176, null
  br i1 %177, label %178, label %180

178:                                              ; preds = %173
  %179 = bitcast %struct.Command** %175 to i8**
  br label %186

180:                                              ; preds = %173
  %181 = bitcast %struct.Command* %176 to i8*
  %182 = load i64, i64* %155, align 8
  %183 = shl i64 %182, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %174, i8* nonnull align 4 %181, i64 %183, i1 false)
  %184 = bitcast %struct.Command** %175 to i8**
  %185 = load i8*, i8** %184, align 8
  tail call void @BrotliFree(%struct.MemoryManager* %30, i8* %185) #8
  store %struct.Command* null, %struct.Command** %175, align 8
  br label %186

186:                                              ; preds = %178, %180
  %187 = phi i8** [ %179, %178 ], [ %184, %180 ]
  store i8* %174, i8** %187, align 8
  br label %188

188:                                              ; preds = %186, %154
  %189 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20
  %190 = zext i32 %34 to i64
  %191 = zext i32 %29 to i64
  %192 = and i64 %19, 4294967295
  %193 = icmp eq i32 %29, 0
  %194 = and i1 %39, %193
  %195 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %189, i64 0, i32 0
  %196 = getelementptr inbounds %struct.Hasher, %struct.Hasher* %189, i64 0, i32 0, i32 0
  %197 = load i8*, i8** %196, align 8
  %198 = icmp eq i8* %197, null
  br i1 %198, label %199, label %514

199:                                              ; preds = %188
  %200 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 8
  %201 = load i32, i32* %49, align 4
  %202 = icmp sgt i32 %201, 9
  br i1 %202, label %203, label %205

203:                                              ; preds = %199
  %204 = getelementptr inbounds %struct.BrotliHasherParams, %struct.BrotliHasherParams* %200, i64 0, i32 0
  store i32 10, i32* %204, align 4
  br label %254

205:                                              ; preds = %199
  %206 = icmp eq i32 %201, 4
  br i1 %206, label %207, label %213

207:                                              ; preds = %205
  %208 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 5
  %209 = load i64, i64* %208, align 8
  %210 = icmp ugt i64 %209, 1048575
  br i1 %210, label %211, label %215

211:                                              ; preds = %207
  %212 = getelementptr inbounds %struct.BrotliHasherParams, %struct.BrotliHasherParams* %200, i64 0, i32 0
  store i32 54, i32* %212, align 4
  br label %254

213:                                              ; preds = %205
  %214 = icmp slt i32 %201, 5
  br i1 %214, label %215, label %217

215:                                              ; preds = %213, %207
  %216 = getelementptr inbounds %struct.BrotliHasherParams, %struct.BrotliHasherParams* %200, i64 0, i32 0
  store i32 %201, i32* %216, align 4
  br label %254

217:                                              ; preds = %213
  %218 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 2
  %219 = load i32, i32* %218, align 8
  %220 = icmp slt i32 %219, 17
  br i1 %220, label %221, label %227

221:                                              ; preds = %217
  %222 = icmp slt i32 %201, 7
  %223 = icmp slt i32 %201, 9
  %224 = select i1 %223, i32 41, i32 42
  %225 = select i1 %222, i32 40, i32 %224
  %226 = getelementptr inbounds %struct.BrotliHasherParams, %struct.BrotliHasherParams* %200, i64 0, i32 0
  store i32 %225, i32* %226, align 4
  br label %254

227:                                              ; preds = %217
  %228 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 5
  %229 = load i64, i64* %228, align 8
  %230 = icmp ugt i64 %229, 1048575
  %231 = icmp sgt i32 %219, 18
  %232 = and i1 %231, %230
  %233 = getelementptr inbounds %struct.BrotliHasherParams, %struct.BrotliHasherParams* %200, i64 0, i32 0
  br i1 %232, label %234, label %244

234:                                              ; preds = %227
  store i32 6, i32* %233, align 4
  %235 = add nsw i32 %201, -1
  %236 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 8, i32 2
  store i32 %235, i32* %236, align 4
  %237 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 8, i32 1
  store i32 15, i32* %237, align 4
  %238 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 8, i32 3
  store i32 5, i32* %238, align 4
  %239 = icmp slt i32 %201, 7
  %240 = icmp slt i32 %201, 9
  %241 = select i1 %240, i32 10, i32 16
  %242 = select i1 %239, i32 4, i32 %241
  %243 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 8, i32 4
  store i32 %242, i32* %243, align 4
  br label %254

244:                                              ; preds = %227
  store i32 5, i32* %233, align 4
  %245 = add nsw i32 %201, -1
  %246 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 8, i32 2
  store i32 %245, i32* %246, align 4
  %247 = icmp slt i32 %201, 7
  %248 = select i1 %247, i32 14, i32 15
  %249 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 8, i32 1
  store i32 %248, i32* %249, align 4
  %250 = icmp slt i32 %201, 9
  %251 = select i1 %250, i32 10, i32 16
  %252 = select i1 %247, i32 4, i32 %251
  %253 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 8, i32 4
  store i32 %252, i32* %253, align 4
  br label %254

254:                                              ; preds = %244, %234, %221, %215, %211, %203
  %255 = phi i32 [ 54, %211 ], [ %225, %221 ], [ 5, %244 ], [ 6, %234 ], [ %201, %215 ], [ 10, %203 ]
  %256 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 2
  %257 = load i32, i32* %256, align 8
  %258 = icmp sgt i32 %257, 24
  br i1 %258, label %259, label %276

259:                                              ; preds = %254
  %260 = getelementptr inbounds %struct.BrotliHasherParams, %struct.BrotliHasherParams* %200, i64 0, i32 0
  switch i32 %255, label %321 [
    i32 3, label %261
    i32 54, label %262
    i32 6, label %263
    i32 2, label %318
    i32 4, label %277
    i32 5, label %278
    i32 40, label %302
    i32 41, label %303
    i32 42, label %304
    i32 35, label %306
    i32 10, label %307
  ]

261:                                              ; preds = %259
  store i32 35, i32* %260, align 4
  br label %306

262:                                              ; preds = %259
  store i32 55, i32* %260, align 4
  br label %318

263:                                              ; preds = %259
  store i32 65, i32* %260, align 4
  %264 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 8, i32 1
  %265 = load i32, i32* %264, align 4
  %266 = zext i32 %265 to i64
  %267 = shl i64 1, %266
  %268 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 8, i32 2
  %269 = load i32, i32* %268, align 8
  %270 = zext i32 %269 to i64
  %271 = shl i64 %267, 1
  %272 = shl i64 %267, 2
  %273 = shl i64 %272, %270
  %274 = add i64 %271, 67108864
  %275 = add i64 %274, %273
  br label %315

276:                                              ; preds = %254
  switch i32 %255, label %321 [
    i32 2, label %318
    i32 3, label %318
    i32 4, label %277
    i32 5, label %278
    i32 6, label %290
    i32 40, label %302
    i32 41, label %303
    i32 42, label %304
    i32 54, label %305
    i32 35, label %306
    i32 10, label %307
  ]

277:                                              ; preds = %276, %259
  br label %318

278:                                              ; preds = %276, %259
  %279 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 8, i32 1
  %280 = load i32, i32* %279, align 4
  %281 = zext i32 %280 to i64
  %282 = shl i64 1, %281
  %283 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 8, i32 2
  %284 = load i32, i32* %283, align 8
  %285 = zext i32 %284 to i64
  %286 = shl i64 %282, 1
  %287 = shl i64 %282, 2
  %288 = shl i64 %287, %285
  %289 = add i64 %288, %286
  br label %315

290:                                              ; preds = %276
  %291 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 8, i32 1
  %292 = load i32, i32* %291, align 4
  %293 = zext i32 %292 to i64
  %294 = shl i64 1, %293
  %295 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 8, i32 2
  %296 = load i32, i32* %295, align 8
  %297 = zext i32 %296 to i64
  %298 = shl i64 %294, 1
  %299 = shl i64 %294, 2
  %300 = shl i64 %299, %297
  %301 = add i64 %300, %298
  br label %315

302:                                              ; preds = %276, %259
  br label %318

303:                                              ; preds = %276, %259
  br label %318

304:                                              ; preds = %276, %259
  br label %318

305:                                              ; preds = %276
  br label %318

306:                                              ; preds = %276, %261, %259
  br label %318

307:                                              ; preds = %276, %259
  %308 = zext i32 %257 to i64
  %309 = shl i64 1, %308
  %310 = icmp ugt i64 %309, %192
  %311 = and i1 %194, %310
  %312 = select i1 %311, i64 %192, i64 %309
  %313 = shl i64 %312, 3
  %314 = add i64 %313, 524288
  br label %315

315:                                              ; preds = %307, %290, %278, %263
  %316 = phi i64 [ %314, %307 ], [ %275, %263 ], [ %301, %290 ], [ %289, %278 ]
  %317 = icmp eq i64 %316, 0
  br i1 %317, label %321, label %318

318:                                              ; preds = %315, %306, %305, %304, %303, %302, %277, %276, %276, %262, %259
  %319 = phi i64 [ %316, %315 ], [ 524288, %277 ], [ 524288, %302 ], [ 524288, %303 ], [ 1310720, %304 ], [ 4194304, %305 ], [ 67371008, %306 ], [ 71303168, %262 ], [ 262144, %276 ], [ 262144, %276 ], [ 262144, %259 ]
  %320 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %30, i64 %319) #8
  br label %321

321:                                              ; preds = %318, %315, %276, %259
  %322 = phi i8* [ %320, %318 ], [ null, %315 ], [ null, %276 ], [ null, %259 ]
  store i8* %322, i8** %196, align 8
  %323 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 0, i32 3
  %324 = bitcast %struct.BrotliHasherParams* %323 to i8*
  %325 = bitcast %struct.BrotliHasherParams* %200 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %324, i8* align 8 %325, i64 20, i1 false) #8
  %326 = getelementptr inbounds %struct.BrotliHasherParams, %struct.BrotliHasherParams* %323, i64 0, i32 0
  %327 = load i32, i32* %326, align 8
  %328 = ptrtoint i8* %322 to i64
  %329 = bitcast i8* %322 to i16*
  switch i32 %327, label %512 [
    i32 2, label %330
    i32 3, label %335
    i32 4, label %340
    i32 5, label %345
    i32 6, label %378
    i32 40, label %419
    i32 41, label %432
    i32 42, label %445
    i32 54, label %456
    i32 35, label %461
    i32 55, label %473
    i32 65, label %485
    i32 10, label %497
  ]

330:                                              ; preds = %321
  %331 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1
  %332 = bitcast %union.anon* %331 to %struct.HasherCommon**
  store %struct.HasherCommon* %195, %struct.HasherCommon** %332, align 8, !alias.scope !272
  %333 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 4
  %334 = bitcast i16* %333 to i64*
  store i64 %328, i64* %334, align 8, !alias.scope !272
  br label %512

335:                                              ; preds = %321
  %336 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1
  %337 = bitcast %union.anon* %336 to %struct.HasherCommon**
  store %struct.HasherCommon* %195, %struct.HasherCommon** %337, align 8, !alias.scope !275
  %338 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 4
  %339 = bitcast i16* %338 to i64*
  store i64 %328, i64* %339, align 8, !alias.scope !275
  br label %512

340:                                              ; preds = %321
  %341 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1
  %342 = bitcast %union.anon* %341 to %struct.HasherCommon**
  store %struct.HasherCommon* %195, %struct.HasherCommon** %342, align 8, !alias.scope !278
  %343 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 4
  %344 = bitcast i16* %343 to i64*
  store i64 %328, i64* %344, align 8, !alias.scope !278
  br label %512

345:                                              ; preds = %321
  %346 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1
  %347 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 16
  %348 = bitcast i16* %347 to %struct.HasherCommon**
  store %struct.HasherCommon* %195, %struct.HasherCommon** %348, align 8, !alias.scope !281
  %349 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 0, i32 3, i32 1
  %350 = load i32, i32* %349, align 4, !noalias !281
  %351 = sub nsw i32 32, %350
  %352 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 8
  %353 = bitcast i16* %352 to i32*
  store i32 %351, i32* %353, align 8, !alias.scope !281
  %354 = zext i32 %350 to i64
  %355 = shl i64 1, %354
  %356 = bitcast %union.anon* %346 to i64*
  store i64 %355, i64* %356, align 8, !alias.scope !281
  %357 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 0, i32 3, i32 2
  %358 = load i32, i32* %357, align 8, !noalias !281
  %359 = zext i32 %358 to i64
  %360 = shl i64 1, %359
  %361 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 4
  %362 = bitcast i16* %361 to i64*
  store i64 %360, i64* %362, align 8, !alias.scope !281
  %363 = trunc i64 %360 to i32
  %364 = add i32 %363, -1
  %365 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 10
  %366 = bitcast i16* %365 to i32*
  store i32 %364, i32* %366, align 4, !alias.scope !281
  %367 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 20
  %368 = bitcast i16* %367 to i8**
  store i8* %322, i8** %368, align 8, !alias.scope !281
  %369 = getelementptr inbounds i16, i16* %329, i64 %355
  %370 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 24
  %371 = bitcast i16* %370 to i16**
  store i16* %369, i16** %371, align 8, !alias.scope !281
  %372 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 12
  %373 = bitcast i16* %372 to i32*
  store i32 %358, i32* %373, align 8, !alias.scope !281
  %374 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 0, i32 3, i32 4
  %375 = load i32, i32* %374, align 8, !noalias !281
  %376 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 14
  %377 = bitcast i16* %376 to i32*
  store i32 %375, i32* %377, align 4, !alias.scope !281
  br label %512

378:                                              ; preds = %321
  %379 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1
  %380 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 24
  %381 = bitcast i16* %380 to %struct.HasherCommon**
  store %struct.HasherCommon* %195, %struct.HasherCommon** %381, align 8, !alias.scope !284
  %382 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 0, i32 3, i32 1
  %383 = load i32, i32* %382, align 4, !noalias !284
  %384 = sub nsw i32 64, %383
  %385 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 8
  %386 = bitcast i16* %385 to i32*
  store i32 %384, i32* %386, align 8, !alias.scope !284
  %387 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 0, i32 3, i32 3
  %388 = load i32, i32* %387, align 4, !noalias !284
  %389 = shl nsw i32 %388, 3
  %390 = sub nsw i32 64, %389
  %391 = zext i32 %390 to i64
  %392 = lshr i64 -1, %391
  %393 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 12
  %394 = bitcast i16* %393 to i64*
  store i64 %392, i64* %394, align 8, !alias.scope !284
  %395 = zext i32 %383 to i64
  %396 = shl i64 1, %395
  %397 = bitcast %union.anon* %379 to i64*
  store i64 %396, i64* %397, align 8, !alias.scope !284
  %398 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 0, i32 3, i32 2
  %399 = load i32, i32* %398, align 8, !noalias !284
  %400 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 18
  %401 = bitcast i16* %400 to i32*
  store i32 %399, i32* %401, align 4, !alias.scope !284
  %402 = zext i32 %399 to i64
  %403 = shl i64 1, %402
  %404 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 4
  %405 = bitcast i16* %404 to i64*
  store i64 %403, i64* %405, align 8, !alias.scope !284
  %406 = trunc i64 %403 to i32
  %407 = add i32 %406, -1
  %408 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 16
  %409 = bitcast i16* %408 to i32*
  store i32 %407, i32* %409, align 8, !alias.scope !284
  %410 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 0, i32 3, i32 4
  %411 = load i32, i32* %410, align 8, !noalias !284
  %412 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 20
  %413 = bitcast i16* %412 to i32*
  store i32 %411, i32* %413, align 8, !alias.scope !284
  %414 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 28
  %415 = bitcast i16* %414 to i8**
  store i8* %322, i8** %415, align 8, !alias.scope !284
  %416 = getelementptr inbounds i16, i16* %329, i64 %396
  %417 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 32
  %418 = bitcast i16* %417 to i16**
  store i16* %416, i16** %418, align 8, !alias.scope !284
  br label %512

419:                                              ; preds = %321
  %420 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 12
  %421 = bitcast i16* %420 to %struct.HasherCommon**
  store %struct.HasherCommon* %195, %struct.HasherCommon** %421, align 8, !alias.scope !287
  %422 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 8
  %423 = bitcast i16* %422 to i64*
  store i64 %328, i64* %423, align 8, !alias.scope !287
  %424 = load i32, i32* %49, align 4, !noalias !287
  %425 = icmp sgt i32 %424, 6
  %426 = select i1 %425, i32 7, i32 8
  %427 = add nsw i32 %424, -4
  %428 = shl i32 %426, %427
  %429 = zext i32 %428 to i64
  %430 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 4
  %431 = bitcast i16* %430 to i64*
  store i64 %429, i64* %431, align 8, !alias.scope !287
  br label %512

432:                                              ; preds = %321
  %433 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 12
  %434 = bitcast i16* %433 to %struct.HasherCommon**
  store %struct.HasherCommon* %195, %struct.HasherCommon** %434, align 8, !alias.scope !290
  %435 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 8
  %436 = bitcast i16* %435 to i64*
  store i64 %328, i64* %436, align 8, !alias.scope !290
  %437 = load i32, i32* %49, align 4, !noalias !290
  %438 = icmp sgt i32 %437, 6
  %439 = select i1 %438, i32 7, i32 8
  %440 = add nsw i32 %437, -4
  %441 = shl i32 %439, %440
  %442 = zext i32 %441 to i64
  %443 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 4
  %444 = bitcast i16* %443 to i64*
  store i64 %442, i64* %444, align 8, !alias.scope !290
  br label %512

445:                                              ; preds = %321
  %446 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 3
  store %struct.HasherCommon* %195, %struct.HasherCommon** %446, align 8, !alias.scope !293
  %447 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 2
  %448 = bitcast i8** %447 to i64*
  store i64 %328, i64* %448, align 8, !alias.scope !293
  %449 = load i32, i32* %49, align 4, !noalias !293
  %450 = icmp sgt i32 %449, 6
  %451 = select i1 %450, i32 7, i32 8
  %452 = add nsw i32 %449, -4
  %453 = shl i32 %451, %452
  %454 = zext i32 %453 to i64
  %455 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 1
  store i64 %454, i64* %455, align 8, !alias.scope !293
  br label %512

456:                                              ; preds = %321
  %457 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1
  %458 = bitcast %union.anon* %457 to %struct.HasherCommon**
  store %struct.HasherCommon* %195, %struct.HasherCommon** %458, align 8, !alias.scope !296
  %459 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 4
  %460 = bitcast i16* %459 to i64*
  store i64 %328, i64* %460, align 8, !alias.scope !296
  br label %512

461:                                              ; preds = %321
  %462 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 56
  %463 = bitcast i16* %462 to %struct.HasherCommon**
  store %struct.HasherCommon* %195, %struct.HasherCommon** %463, align 8, !alias.scope !299
  %464 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 52
  %465 = bitcast i16* %464 to i64*
  store i64 %328, i64* %465, align 8, !alias.scope !299
  %466 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 28
  %467 = bitcast %struct.Hasher* %189 to i8*
  %468 = bitcast i16* %466 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %468, i8* align 8 %467, i64 48, i1 false) #8
  %469 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 60
  %470 = bitcast i16* %469 to i32*
  store i32 1, i32* %470, align 8, !alias.scope !299
  %471 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 64
  %472 = bitcast i16* %471 to %struct.BrotliEncoderParams**
  store %struct.BrotliEncoderParams* %48, %struct.BrotliEncoderParams** %472, align 8, !alias.scope !299
  br label %512

473:                                              ; preds = %321
  %474 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 56
  %475 = bitcast i16* %474 to %struct.HasherCommon**
  store %struct.HasherCommon* %195, %struct.HasherCommon** %475, align 8, !alias.scope !302
  %476 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 52
  %477 = bitcast i16* %476 to i64*
  store i64 %328, i64* %477, align 8, !alias.scope !302
  %478 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 28
  %479 = bitcast %struct.Hasher* %189 to i8*
  %480 = bitcast i16* %478 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %480, i8* align 8 %479, i64 48, i1 false) #8
  %481 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 60
  %482 = bitcast i16* %481 to i32*
  store i32 1, i32* %482, align 8, !alias.scope !302
  %483 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 64
  %484 = bitcast i16* %483 to %struct.BrotliEncoderParams**
  store %struct.BrotliEncoderParams* %48, %struct.BrotliEncoderParams** %484, align 8, !alias.scope !302
  br label %512

485:                                              ; preds = %321
  %486 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 84
  %487 = bitcast i16* %486 to %struct.HasherCommon**
  store %struct.HasherCommon* %195, %struct.HasherCommon** %487, align 8, !alias.scope !305
  %488 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 80
  %489 = bitcast i16* %488 to i64*
  store i64 %328, i64* %489, align 8, !alias.scope !305
  %490 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 56
  %491 = bitcast %struct.Hasher* %189 to i8*
  %492 = bitcast i16* %490 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %492, i8* align 8 %491, i64 48, i1 false) #8
  %493 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 88
  %494 = bitcast i16* %493 to i32*
  store i32 1, i32* %494, align 8, !alias.scope !305
  %495 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 92
  %496 = bitcast i16* %495 to %struct.BrotliEncoderParams**
  store %struct.BrotliEncoderParams* %48, %struct.BrotliEncoderParams** %496, align 8, !alias.scope !305
  br label %512

497:                                              ; preds = %321
  %498 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1
  %499 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 4
  %500 = bitcast i16* %499 to i8**
  store i8* %322, i8** %500, align 8, !alias.scope !308
  %501 = getelementptr inbounds i8, i8* %322, i64 524288
  %502 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 12
  %503 = bitcast i16* %502 to i8**
  store i8* %501, i8** %503, align 8, !alias.scope !308
  %504 = load i32, i32* %256, align 8, !noalias !308
  %505 = shl nsw i32 -1, %504
  %506 = xor i32 %505, -1
  %507 = zext i32 %506 to i64
  %508 = bitcast %union.anon* %498 to i64*
  store i64 %507, i64* %508, align 8, !alias.scope !308
  %509 = add nsw i32 %505, 1
  %510 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 8
  %511 = bitcast i16* %510 to i32*
  store i32 %509, i32* %511, align 8, !alias.scope !308
  br label %512

512:                                              ; preds = %497, %485, %473, %461, %456, %445, %432, %419, %378, %345, %340, %335, %330, %321
  %513 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 0, i32 4
  store i32 0, i32* %513, align 4
  br label %521

514:                                              ; preds = %188
  %515 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 0, i32 4
  %516 = load i32, i32* %515, align 4
  %517 = icmp eq i32 %516, 0
  br i1 %517, label %518, label %1509

518:                                              ; preds = %514
  %519 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 0, i32 3, i32 0
  %520 = load i32, i32* %519, align 8
  br label %521

521:                                              ; preds = %518, %512
  %522 = phi i32 [ %520, %518 ], [ %327, %512 ]
  %523 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 0, i32 4
  switch i32 %522, label %1504 [
    i32 2, label %524
    i32 3, label %573
    i32 4, label %613
    i32 5, label %642
    i32 6, label %704
    i32 40, label %755
    i32 41, label %810
    i32 42, label %865
    i32 54, label %920
    i32 35, label %949
    i32 55, label %1090
    i32 65, label %1207
    i32 10, label %1394
  ]

524:                                              ; preds = %521
  %525 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 4
  %526 = bitcast i16* %525 to i32**
  %527 = load i32*, i32** %526, align 8, !alias.scope !311, !noalias !314
  %528 = icmp ult i64 %192, 2049
  %529 = and i1 %528, %194
  br i1 %529, label %530, label %571

530:                                              ; preds = %524
  %531 = icmp eq i64 %192, 0
  br i1 %531, label %1504, label %532

532:                                              ; preds = %530
  %533 = add nsw i64 %192, -1
  %534 = and i64 %19, 3
  %535 = icmp ult i64 %533, 3
  br i1 %535, label %1448, label %536

536:                                              ; preds = %532
  %537 = sub nsw i64 %192, %534
  br label %538

538:                                              ; preds = %538, %536
  %539 = phi i64 [ 0, %536 ], [ %568, %538 ]
  %540 = phi i64 [ %537, %536 ], [ %569, %538 ]
  %541 = getelementptr inbounds i8, i8* %32, i64 %539
  %542 = bitcast i8* %541 to i64*
  %543 = load i64, i64* %542, align 8, !alias.scope !314, !noalias !311
  %544 = mul i64 %543, -4819355556693147648
  %545 = lshr i64 %544, 48
  %546 = getelementptr inbounds i32, i32* %527, i64 %545
  store i32 0, i32* %546, align 4, !noalias !316
  %547 = or i64 %539, 1
  %548 = getelementptr inbounds i8, i8* %32, i64 %547
  %549 = bitcast i8* %548 to i64*
  %550 = load i64, i64* %549, align 8, !alias.scope !314, !noalias !311
  %551 = mul i64 %550, -4819355556693147648
  %552 = lshr i64 %551, 48
  %553 = getelementptr inbounds i32, i32* %527, i64 %552
  store i32 0, i32* %553, align 4, !noalias !316
  %554 = or i64 %539, 2
  %555 = getelementptr inbounds i8, i8* %32, i64 %554
  %556 = bitcast i8* %555 to i64*
  %557 = load i64, i64* %556, align 8, !alias.scope !314, !noalias !311
  %558 = mul i64 %557, -4819355556693147648
  %559 = lshr i64 %558, 48
  %560 = getelementptr inbounds i32, i32* %527, i64 %559
  store i32 0, i32* %560, align 4, !noalias !316
  %561 = or i64 %539, 3
  %562 = getelementptr inbounds i8, i8* %32, i64 %561
  %563 = bitcast i8* %562 to i64*
  %564 = load i64, i64* %563, align 8, !alias.scope !314, !noalias !311
  %565 = mul i64 %564, -4819355556693147648
  %566 = lshr i64 %565, 48
  %567 = getelementptr inbounds i32, i32* %527, i64 %566
  store i32 0, i32* %567, align 4, !noalias !316
  %568 = add nuw nsw i64 %539, 4
  %569 = add i64 %540, -4
  %570 = icmp eq i64 %569, 0
  br i1 %570, label %1448, label %538

571:                                              ; preds = %524
  %572 = bitcast i32* %527 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %572, i8 0, i64 262144, i1 false) #8, !noalias !316
  br label %1504

573:                                              ; preds = %521
  %574 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 4
  %575 = bitcast i16* %574 to i32**
  %576 = load i32*, i32** %575, align 8, !alias.scope !317, !noalias !320
  %577 = icmp ult i64 %192, 2049
  %578 = and i1 %577, %194
  br i1 %578, label %579, label %611

579:                                              ; preds = %573
  %580 = icmp eq i64 %192, 0
  br i1 %580, label %1504, label %581

581:                                              ; preds = %579
  %582 = and i64 %19, 1
  %583 = icmp eq i64 %192, 1
  br i1 %583, label %1463, label %584

584:                                              ; preds = %581
  %585 = sub nsw i64 %192, %582
  br label %586

586:                                              ; preds = %586, %584
  %587 = phi i64 [ 0, %584 ], [ %608, %586 ]
  %588 = phi i64 [ %585, %584 ], [ %609, %586 ]
  %589 = getelementptr inbounds i8, i8* %32, i64 %587
  %590 = bitcast i8* %589 to i64*
  %591 = load i64, i64* %590, align 8, !alias.scope !320, !noalias !317
  %592 = mul i64 %591, -4819355556693147648
  %593 = lshr i64 %592, 48
  %594 = getelementptr inbounds i32, i32* %576, i64 %593
  store i32 0, i32* %594, align 4, !noalias !322
  %595 = add nuw nsw i64 %593, 8
  %596 = and i64 %595, 65535
  %597 = getelementptr inbounds i32, i32* %576, i64 %596
  store i32 0, i32* %597, align 4, !noalias !322
  %598 = or i64 %587, 1
  %599 = getelementptr inbounds i8, i8* %32, i64 %598
  %600 = bitcast i8* %599 to i64*
  %601 = load i64, i64* %600, align 8, !alias.scope !320, !noalias !317
  %602 = mul i64 %601, -4819355556693147648
  %603 = lshr i64 %602, 48
  %604 = getelementptr inbounds i32, i32* %576, i64 %603
  store i32 0, i32* %604, align 4, !noalias !322
  %605 = add nuw nsw i64 %603, 8
  %606 = and i64 %605, 65535
  %607 = getelementptr inbounds i32, i32* %576, i64 %606
  store i32 0, i32* %607, align 4, !noalias !322
  %608 = add nuw nsw i64 %587, 2
  %609 = add i64 %588, -2
  %610 = icmp eq i64 %609, 0
  br i1 %610, label %1463, label %586

611:                                              ; preds = %573
  %612 = bitcast i32* %576 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %612, i8 0, i64 262144, i1 false) #8, !noalias !322
  br label %1504

613:                                              ; preds = %521
  %614 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 4
  %615 = bitcast i16* %614 to i32**
  %616 = load i32*, i32** %615, align 8, !alias.scope !323, !noalias !326
  %617 = icmp ult i64 %192, 4097
  %618 = and i1 %617, %194
  br i1 %618, label %619, label %640

619:                                              ; preds = %613
  %620 = icmp eq i64 %192, 0
  br i1 %620, label %1504, label %621

621:                                              ; preds = %619, %621
  %622 = phi i64 [ %638, %621 ], [ 0, %619 ]
  %623 = getelementptr inbounds i8, i8* %32, i64 %622
  %624 = bitcast i8* %623 to i64*
  %625 = load i64, i64* %624, align 8, !alias.scope !326, !noalias !323
  %626 = mul i64 %625, -4819355556693147648
  %627 = lshr i64 %626, 47
  %628 = getelementptr inbounds i32, i32* %616, i64 %627
  store i32 0, i32* %628, align 4, !noalias !328
  %629 = add nuw nsw i64 %627, 8
  %630 = and i64 %629, 131071
  %631 = getelementptr inbounds i32, i32* %616, i64 %630
  store i32 0, i32* %631, align 4, !noalias !328
  %632 = add nuw nsw i64 %627, 16
  %633 = and i64 %632, 131071
  %634 = getelementptr inbounds i32, i32* %616, i64 %633
  store i32 0, i32* %634, align 4, !noalias !328
  %635 = add nuw nsw i64 %627, 24
  %636 = and i64 %635, 131071
  %637 = getelementptr inbounds i32, i32* %616, i64 %636
  store i32 0, i32* %637, align 4, !noalias !328
  %638 = add nuw nsw i64 %622, 1
  %639 = icmp eq i64 %638, %192
  br i1 %639, label %1504, label %621

640:                                              ; preds = %613
  %641 = bitcast i32* %616 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %641, i8 0, i64 524288, i1 false) #8, !noalias !328
  br label %1504

642:                                              ; preds = %521
  %643 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1
  %644 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 20
  %645 = bitcast i16* %644 to i16**
  %646 = load i16*, i16** %645, align 8, !alias.scope !329, !noalias !332
  %647 = bitcast %union.anon* %643 to i64*
  %648 = xor i1 %194, true
  %649 = load i64, i64* %647, align 8, !alias.scope !329, !noalias !332
  %650 = lshr i64 %649, 6
  %651 = icmp ult i64 %650, %192
  %652 = or i1 %651, %648
  br i1 %652, label %701, label %653

653:                                              ; preds = %642
  %654 = icmp eq i64 %192, 0
  br i1 %654, label %1504, label %655

655:                                              ; preds = %653
  %656 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 8
  %657 = bitcast i16* %656 to i32*
  %658 = load i32, i32* %657, align 8, !alias.scope !329, !noalias !332
  %659 = add nsw i64 %192, -1
  %660 = and i64 %19, 3
  %661 = icmp ult i64 %659, 3
  br i1 %661, label %1476, label %662

662:                                              ; preds = %655
  %663 = sub nsw i64 %192, %660
  br label %664

664:                                              ; preds = %664, %662
  %665 = phi i64 [ 0, %662 ], [ %698, %664 ]
  %666 = phi i64 [ %663, %662 ], [ %699, %664 ]
  %667 = getelementptr inbounds i8, i8* %32, i64 %665
  %668 = bitcast i8* %667 to i32*
  %669 = load i32, i32* %668, align 4, !alias.scope !334, !noalias !329
  %670 = mul i32 %669, 506832829
  %671 = lshr i32 %670, %658
  %672 = zext i32 %671 to i64
  %673 = getelementptr inbounds i16, i16* %646, i64 %672
  store i16 0, i16* %673, align 2, !noalias !337
  %674 = or i64 %665, 1
  %675 = getelementptr inbounds i8, i8* %32, i64 %674
  %676 = bitcast i8* %675 to i32*
  %677 = load i32, i32* %676, align 4, !alias.scope !334, !noalias !329
  %678 = mul i32 %677, 506832829
  %679 = lshr i32 %678, %658
  %680 = zext i32 %679 to i64
  %681 = getelementptr inbounds i16, i16* %646, i64 %680
  store i16 0, i16* %681, align 2, !noalias !337
  %682 = or i64 %665, 2
  %683 = getelementptr inbounds i8, i8* %32, i64 %682
  %684 = bitcast i8* %683 to i32*
  %685 = load i32, i32* %684, align 4, !alias.scope !334, !noalias !329
  %686 = mul i32 %685, 506832829
  %687 = lshr i32 %686, %658
  %688 = zext i32 %687 to i64
  %689 = getelementptr inbounds i16, i16* %646, i64 %688
  store i16 0, i16* %689, align 2, !noalias !337
  %690 = or i64 %665, 3
  %691 = getelementptr inbounds i8, i8* %32, i64 %690
  %692 = bitcast i8* %691 to i32*
  %693 = load i32, i32* %692, align 4, !alias.scope !334, !noalias !329
  %694 = mul i32 %693, 506832829
  %695 = lshr i32 %694, %658
  %696 = zext i32 %695 to i64
  %697 = getelementptr inbounds i16, i16* %646, i64 %696
  store i16 0, i16* %697, align 2, !noalias !337
  %698 = add nuw nsw i64 %665, 4
  %699 = add i64 %666, -4
  %700 = icmp eq i64 %699, 0
  br i1 %700, label %1476, label %664

701:                                              ; preds = %642
  %702 = bitcast i16* %646 to i8*
  %703 = shl i64 %649, 1
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %702, i8 0, i64 %703, i1 false) #8, !noalias !337
  br label %1504

704:                                              ; preds = %521
  %705 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1
  %706 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 28
  %707 = bitcast i16* %706 to i16**
  %708 = load i16*, i16** %707, align 8, !alias.scope !338, !noalias !341
  %709 = bitcast %union.anon* %705 to i64*
  %710 = xor i1 %194, true
  %711 = load i64, i64* %709, align 8, !alias.scope !338, !noalias !341
  %712 = lshr i64 %711, 6
  %713 = icmp ult i64 %712, %192
  %714 = or i1 %713, %710
  br i1 %714, label %752, label %715

715:                                              ; preds = %704
  %716 = icmp eq i64 %192, 0
  br i1 %716, label %1504, label %717

717:                                              ; preds = %715
  %718 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 12
  %719 = bitcast i16* %718 to i64*
  %720 = load i64, i64* %719, align 8, !alias.scope !338, !noalias !341
  %721 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 8
  %722 = bitcast i16* %721 to i32*
  %723 = load i32, i32* %722, align 8, !alias.scope !338, !noalias !341
  %724 = zext i32 %723 to i64
  %725 = and i64 %19, 1
  %726 = icmp eq i64 %192, 1
  br i1 %726, label %1492, label %727

727:                                              ; preds = %717
  %728 = sub nsw i64 %192, %725
  br label %729

729:                                              ; preds = %729, %727
  %730 = phi i64 [ 0, %727 ], [ %749, %729 ]
  %731 = phi i64 [ %728, %727 ], [ %750, %729 ]
  %732 = getelementptr inbounds i8, i8* %32, i64 %730
  %733 = bitcast i8* %732 to i64*
  %734 = load i64, i64* %733, align 8, !alias.scope !343, !noalias !338
  %735 = and i64 %734, %720
  %736 = mul i64 %735, 2297779722762296275
  %737 = lshr i64 %736, %724
  %738 = and i64 %737, 4294967295
  %739 = getelementptr inbounds i16, i16* %708, i64 %738
  store i16 0, i16* %739, align 2, !noalias !346
  %740 = or i64 %730, 1
  %741 = getelementptr inbounds i8, i8* %32, i64 %740
  %742 = bitcast i8* %741 to i64*
  %743 = load i64, i64* %742, align 8, !alias.scope !343, !noalias !338
  %744 = and i64 %743, %720
  %745 = mul i64 %744, 2297779722762296275
  %746 = lshr i64 %745, %724
  %747 = and i64 %746, 4294967295
  %748 = getelementptr inbounds i16, i16* %708, i64 %747
  store i16 0, i16* %748, align 2, !noalias !346
  %749 = add nuw nsw i64 %730, 2
  %750 = add i64 %731, -2
  %751 = icmp eq i64 %750, 0
  br i1 %751, label %1492, label %729

752:                                              ; preds = %704
  %753 = bitcast i16* %708 to i8*
  %754 = shl i64 %711, 1
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %753, i8 0, i64 %754, i1 false) #8, !noalias !346
  br label %1504

755:                                              ; preds = %521
  %756 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 8
  %757 = bitcast i16* %756 to i8**
  %758 = load i8*, i8** %757, align 8, !alias.scope !347, !noalias !350
  %759 = bitcast i8* %758 to i32*
  %760 = getelementptr inbounds i8, i8* %758, i64 131072
  %761 = bitcast i8* %760 to i16*
  %762 = getelementptr inbounds i8, i8* %758, i64 196608
  %763 = icmp ult i64 %192, 513
  %764 = and i1 %763, %194
  br i1 %764, label %765, label %795

765:                                              ; preds = %755
  %766 = icmp eq i64 %192, 0
  br i1 %766, label %808, label %767

767:                                              ; preds = %765
  %768 = and i64 %19, 1
  %769 = icmp eq i64 %192, 1
  br i1 %769, label %796, label %770

770:                                              ; preds = %767
  %771 = sub nsw i64 %192, %768
  br label %772

772:                                              ; preds = %772, %770
  %773 = phi i64 [ 0, %770 ], [ %792, %772 ]
  %774 = phi i64 [ %771, %770 ], [ %793, %772 ]
  %775 = getelementptr inbounds i8, i8* %32, i64 %773
  %776 = bitcast i8* %775 to i32*
  %777 = load i32, i32* %776, align 4, !alias.scope !352, !noalias !347
  %778 = mul i32 %777, 506832829
  %779 = lshr i32 %778, 17
  %780 = zext i32 %779 to i64
  %781 = getelementptr inbounds i32, i32* %759, i64 %780
  store i32 -858993460, i32* %781, align 4, !noalias !355
  %782 = getelementptr inbounds i16, i16* %761, i64 %780
  store i16 -13108, i16* %782, align 2, !noalias !355
  %783 = or i64 %773, 1
  %784 = getelementptr inbounds i8, i8* %32, i64 %783
  %785 = bitcast i8* %784 to i32*
  %786 = load i32, i32* %785, align 4, !alias.scope !352, !noalias !347
  %787 = mul i32 %786, 506832829
  %788 = lshr i32 %787, 17
  %789 = zext i32 %788 to i64
  %790 = getelementptr inbounds i32, i32* %759, i64 %789
  store i32 -858993460, i32* %790, align 4, !noalias !355
  %791 = getelementptr inbounds i16, i16* %761, i64 %789
  store i16 -13108, i16* %791, align 2, !noalias !355
  %792 = add nuw nsw i64 %773, 2
  %793 = add i64 %774, -2
  %794 = icmp eq i64 %793, 0
  br i1 %794, label %796, label %772

795:                                              ; preds = %755
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %758, i8 -52, i64 131072, i1 false) #8, !noalias !355
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %760, i8 0, i64 65536, i1 false) #8, !noalias !355
  br label %808

796:                                              ; preds = %772, %767
  %797 = phi i64 [ 0, %767 ], [ %792, %772 ]
  %798 = icmp eq i64 %768, 0
  br i1 %798, label %808, label %799

799:                                              ; preds = %796
  %800 = getelementptr inbounds i8, i8* %32, i64 %797
  %801 = bitcast i8* %800 to i32*
  %802 = load i32, i32* %801, align 4, !alias.scope !352, !noalias !347
  %803 = mul i32 %802, 506832829
  %804 = lshr i32 %803, 17
  %805 = zext i32 %804 to i64
  %806 = getelementptr inbounds i32, i32* %759, i64 %805
  store i32 -858993460, i32* %806, align 4, !noalias !355
  %807 = getelementptr inbounds i16, i16* %761, i64 %805
  store i16 -13108, i16* %807, align 2, !noalias !355
  br label %808

808:                                              ; preds = %799, %796, %795, %765
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %762, i8 0, i64 65536, i1 false) #8, !noalias !355
  %809 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 0
  store i16 0, i16* %809, align 8, !alias.scope !347, !noalias !350
  br label %1504

810:                                              ; preds = %521
  %811 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 8
  %812 = bitcast i16* %811 to i8**
  %813 = load i8*, i8** %812, align 8, !alias.scope !356, !noalias !359
  %814 = bitcast i8* %813 to i32*
  %815 = getelementptr inbounds i8, i8* %813, i64 131072
  %816 = bitcast i8* %815 to i16*
  %817 = getelementptr inbounds i8, i8* %813, i64 196608
  %818 = icmp ult i64 %192, 513
  %819 = and i1 %818, %194
  br i1 %819, label %820, label %850

820:                                              ; preds = %810
  %821 = icmp eq i64 %192, 0
  br i1 %821, label %863, label %822

822:                                              ; preds = %820
  %823 = and i64 %19, 1
  %824 = icmp eq i64 %192, 1
  br i1 %824, label %851, label %825

825:                                              ; preds = %822
  %826 = sub nsw i64 %192, %823
  br label %827

827:                                              ; preds = %827, %825
  %828 = phi i64 [ 0, %825 ], [ %847, %827 ]
  %829 = phi i64 [ %826, %825 ], [ %848, %827 ]
  %830 = getelementptr inbounds i8, i8* %32, i64 %828
  %831 = bitcast i8* %830 to i32*
  %832 = load i32, i32* %831, align 4, !alias.scope !361, !noalias !356
  %833 = mul i32 %832, 506832829
  %834 = lshr i32 %833, 17
  %835 = zext i32 %834 to i64
  %836 = getelementptr inbounds i32, i32* %814, i64 %835
  store i32 -858993460, i32* %836, align 4, !noalias !364
  %837 = getelementptr inbounds i16, i16* %816, i64 %835
  store i16 -13108, i16* %837, align 2, !noalias !364
  %838 = or i64 %828, 1
  %839 = getelementptr inbounds i8, i8* %32, i64 %838
  %840 = bitcast i8* %839 to i32*
  %841 = load i32, i32* %840, align 4, !alias.scope !361, !noalias !356
  %842 = mul i32 %841, 506832829
  %843 = lshr i32 %842, 17
  %844 = zext i32 %843 to i64
  %845 = getelementptr inbounds i32, i32* %814, i64 %844
  store i32 -858993460, i32* %845, align 4, !noalias !364
  %846 = getelementptr inbounds i16, i16* %816, i64 %844
  store i16 -13108, i16* %846, align 2, !noalias !364
  %847 = add nuw nsw i64 %828, 2
  %848 = add i64 %829, -2
  %849 = icmp eq i64 %848, 0
  br i1 %849, label %851, label %827

850:                                              ; preds = %810
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %813, i8 -52, i64 131072, i1 false) #8, !noalias !364
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %815, i8 0, i64 65536, i1 false) #8, !noalias !364
  br label %863

851:                                              ; preds = %827, %822
  %852 = phi i64 [ 0, %822 ], [ %847, %827 ]
  %853 = icmp eq i64 %823, 0
  br i1 %853, label %863, label %854

854:                                              ; preds = %851
  %855 = getelementptr inbounds i8, i8* %32, i64 %852
  %856 = bitcast i8* %855 to i32*
  %857 = load i32, i32* %856, align 4, !alias.scope !361, !noalias !356
  %858 = mul i32 %857, 506832829
  %859 = lshr i32 %858, 17
  %860 = zext i32 %859 to i64
  %861 = getelementptr inbounds i32, i32* %814, i64 %860
  store i32 -858993460, i32* %861, align 4, !noalias !364
  %862 = getelementptr inbounds i16, i16* %816, i64 %860
  store i16 -13108, i16* %862, align 2, !noalias !364
  br label %863

863:                                              ; preds = %854, %851, %850, %820
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %817, i8 0, i64 65536, i1 false) #8, !noalias !364
  %864 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 0
  store i16 0, i16* %864, align 8, !alias.scope !356, !noalias !359
  br label %1504

865:                                              ; preds = %521
  %866 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0
  %867 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 2
  %868 = load i8*, i8** %867, align 8, !alias.scope !365, !noalias !368
  %869 = bitcast i8* %868 to i32*
  %870 = getelementptr inbounds i8, i8* %868, i64 131072
  %871 = bitcast i8* %870 to i16*
  %872 = getelementptr inbounds i8, i8* %868, i64 196608
  %873 = icmp ult i64 %192, 513
  %874 = and i1 %873, %194
  br i1 %874, label %875, label %905

875:                                              ; preds = %865
  %876 = icmp eq i64 %192, 0
  br i1 %876, label %918, label %877

877:                                              ; preds = %875
  %878 = and i64 %19, 1
  %879 = icmp eq i64 %192, 1
  br i1 %879, label %906, label %880

880:                                              ; preds = %877
  %881 = sub nsw i64 %192, %878
  br label %882

882:                                              ; preds = %882, %880
  %883 = phi i64 [ 0, %880 ], [ %902, %882 ]
  %884 = phi i64 [ %881, %880 ], [ %903, %882 ]
  %885 = getelementptr inbounds i8, i8* %32, i64 %883
  %886 = bitcast i8* %885 to i32*
  %887 = load i32, i32* %886, align 4, !alias.scope !370, !noalias !365
  %888 = mul i32 %887, 506832829
  %889 = lshr i32 %888, 17
  %890 = zext i32 %889 to i64
  %891 = getelementptr inbounds i32, i32* %869, i64 %890
  store i32 -858993460, i32* %891, align 4, !noalias !373
  %892 = getelementptr inbounds i16, i16* %871, i64 %890
  store i16 -13108, i16* %892, align 2, !noalias !373
  %893 = or i64 %883, 1
  %894 = getelementptr inbounds i8, i8* %32, i64 %893
  %895 = bitcast i8* %894 to i32*
  %896 = load i32, i32* %895, align 4, !alias.scope !370, !noalias !365
  %897 = mul i32 %896, 506832829
  %898 = lshr i32 %897, 17
  %899 = zext i32 %898 to i64
  %900 = getelementptr inbounds i32, i32* %869, i64 %899
  store i32 -858993460, i32* %900, align 4, !noalias !373
  %901 = getelementptr inbounds i16, i16* %871, i64 %899
  store i16 -13108, i16* %901, align 2, !noalias !373
  %902 = add nuw nsw i64 %883, 2
  %903 = add i64 %884, -2
  %904 = icmp eq i64 %903, 0
  br i1 %904, label %906, label %882

905:                                              ; preds = %865
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %868, i8 -52, i64 131072, i1 false) #8, !noalias !373
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %870, i8 0, i64 65536, i1 false) #8, !noalias !373
  br label %918

906:                                              ; preds = %882, %877
  %907 = phi i64 [ 0, %877 ], [ %902, %882 ]
  %908 = icmp eq i64 %878, 0
  br i1 %908, label %918, label %909

909:                                              ; preds = %906
  %910 = getelementptr inbounds i8, i8* %32, i64 %907
  %911 = bitcast i8* %910 to i32*
  %912 = load i32, i32* %911, align 4, !alias.scope !370, !noalias !365
  %913 = mul i32 %912, 506832829
  %914 = lshr i32 %913, 17
  %915 = zext i32 %914 to i64
  %916 = getelementptr inbounds i32, i32* %869, i64 %915
  store i32 -858993460, i32* %916, align 4, !noalias !373
  %917 = getelementptr inbounds i16, i16* %871, i64 %915
  store i16 -13108, i16* %917, align 2, !noalias !373
  br label %918

918:                                              ; preds = %909, %906, %905, %875
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %872, i8 0, i64 65536, i1 false) #8, !noalias !373
  %919 = bitcast %struct.H42* %866 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %919, i8 0, i64 1024, i1 false) #8, !alias.scope !365, !noalias !368
  br label %1504

920:                                              ; preds = %521
  %921 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 4
  %922 = bitcast i16* %921 to i32**
  %923 = load i32*, i32** %922, align 8, !alias.scope !374, !noalias !377
  %924 = icmp ult i64 %192, 32769
  %925 = and i1 %924, %194
  br i1 %925, label %926, label %947

926:                                              ; preds = %920
  %927 = icmp eq i64 %192, 0
  br i1 %927, label %1504, label %928

928:                                              ; preds = %926, %928
  %929 = phi i64 [ %945, %928 ], [ 0, %926 ]
  %930 = getelementptr inbounds i8, i8* %32, i64 %929
  %931 = bitcast i8* %930 to i64*
  %932 = load i64, i64* %931, align 8, !alias.scope !377, !noalias !374
  %933 = mul i64 %932, 3866266742567714048
  %934 = lshr i64 %933, 44
  %935 = getelementptr inbounds i32, i32* %923, i64 %934
  store i32 0, i32* %935, align 4, !noalias !379
  %936 = add nuw nsw i64 %934, 8
  %937 = and i64 %936, 1048575
  %938 = getelementptr inbounds i32, i32* %923, i64 %937
  store i32 0, i32* %938, align 4, !noalias !379
  %939 = add nuw nsw i64 %934, 16
  %940 = and i64 %939, 1048575
  %941 = getelementptr inbounds i32, i32* %923, i64 %940
  store i32 0, i32* %941, align 4, !noalias !379
  %942 = add nuw nsw i64 %934, 24
  %943 = and i64 %942, 1048575
  %944 = getelementptr inbounds i32, i32* %923, i64 %943
  store i32 0, i32* %944, align 4, !noalias !379
  %945 = add nuw nsw i64 %929, 1
  %946 = icmp eq i64 %945, %192
  br i1 %946, label %1504, label %928

947:                                              ; preds = %920
  %948 = bitcast i32* %923 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %948, i8 0, i64 4194304, i1 false) #8, !noalias !379
  br label %1504

949:                                              ; preds = %521
  %950 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 60
  %951 = bitcast i16* %950 to i32*
  %952 = load i32, i32* %951, align 8, !alias.scope !380, !noalias !383
  %953 = icmp eq i32 %952, 0
  br i1 %953, label %954, label %958

954:                                              ; preds = %949
  %955 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 4
  %956 = bitcast i16* %955 to i32**
  %957 = load i32*, i32** %956, align 8, !alias.scope !385, !noalias !388
  br label %986

958:                                              ; preds = %949
  %959 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1
  store i32 0, i32* %951, align 8, !alias.scope !380, !noalias !383
  %960 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 52
  %961 = bitcast i16* %960 to i8**
  %962 = load i8*, i8** %961, align 8, !alias.scope !380, !noalias !383
  %963 = getelementptr inbounds i8, i8* %962, i64 262144
  %964 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 28
  %965 = bitcast i16* %964 to i8**
  store i8* %963, i8** %965, align 8, !alias.scope !380, !noalias !383
  %966 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 56
  %967 = bitcast i16* %966 to %struct.HasherCommon**
  %968 = load %struct.HasherCommon*, %struct.HasherCommon** %967, align 8, !alias.scope !380, !noalias !383
  %969 = bitcast %union.anon* %959 to %struct.HasherCommon**
  store %struct.HasherCommon* %968, %struct.HasherCommon** %969, align 8, !alias.scope !390, !noalias !383
  %970 = bitcast %struct.HasherCommon* %968 to i64*
  %971 = load i64, i64* %970, align 8, !noalias !393
  %972 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 4
  %973 = bitcast i16* %972 to i64*
  store i64 %971, i64* %973, align 8, !alias.scope !390, !noalias !383
  %974 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 8
  %975 = bitcast i16* %974 to i32*
  store i32 0, i32* %975, align 8, !alias.scope !394, !noalias !383
  %976 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 16
  %977 = bitcast i16* %976 to i64*
  store i64 0, i64* %977, align 8, !alias.scope !394, !noalias !383
  %978 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 22
  %979 = bitcast i16* %978 to i32*
  store i32 69069, i32* %979, align 4, !alias.scope !394, !noalias !383
  %980 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 24
  %981 = bitcast i16* %980 to i32*
  store i32 381957665, i32* %981, align 8, !alias.scope !394, !noalias !383
  %982 = ptrtoint i8* %963 to i64
  %983 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 12
  %984 = bitcast i16* %983 to i64*
  store i64 %982, i64* %984, align 8, !alias.scope !394, !noalias !383
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %963, i8 -1, i64 67108864, i1 false) #8, !noalias !397
  %985 = inttoptr i64 %971 to i32*
  br label %986

986:                                              ; preds = %958, %954
  %987 = phi i32* [ %957, %954 ], [ %985, %958 ]
  %988 = icmp ult i64 %192, 2049
  %989 = and i1 %988, %194
  br i1 %989, label %990, label %1022

990:                                              ; preds = %986
  %991 = icmp eq i64 %192, 0
  br i1 %991, label %1504, label %992

992:                                              ; preds = %990
  %993 = and i64 %19, 1
  %994 = icmp eq i64 %192, 1
  br i1 %994, label %1024, label %995

995:                                              ; preds = %992
  %996 = sub nsw i64 %192, %993
  br label %997

997:                                              ; preds = %997, %995
  %998 = phi i64 [ 0, %995 ], [ %1019, %997 ]
  %999 = phi i64 [ %996, %995 ], [ %1020, %997 ]
  %1000 = getelementptr inbounds i8, i8* %32, i64 %998
  %1001 = bitcast i8* %1000 to i64*
  %1002 = load i64, i64* %1001, align 8, !alias.scope !388, !noalias !385
  %1003 = mul i64 %1002, -4819355556693147648
  %1004 = lshr i64 %1003, 48
  %1005 = getelementptr inbounds i32, i32* %987, i64 %1004
  store i32 0, i32* %1005, align 4, !noalias !398
  %1006 = add nuw nsw i64 %1004, 8
  %1007 = and i64 %1006, 65535
  %1008 = getelementptr inbounds i32, i32* %987, i64 %1007
  store i32 0, i32* %1008, align 4, !noalias !398
  %1009 = or i64 %998, 1
  %1010 = getelementptr inbounds i8, i8* %32, i64 %1009
  %1011 = bitcast i8* %1010 to i64*
  %1012 = load i64, i64* %1011, align 8, !alias.scope !388, !noalias !385
  %1013 = mul i64 %1012, -4819355556693147648
  %1014 = lshr i64 %1013, 48
  %1015 = getelementptr inbounds i32, i32* %987, i64 %1014
  store i32 0, i32* %1015, align 4, !noalias !398
  %1016 = add nuw nsw i64 %1014, 8
  %1017 = and i64 %1016, 65535
  %1018 = getelementptr inbounds i32, i32* %987, i64 %1017
  store i32 0, i32* %1018, align 4, !noalias !398
  %1019 = add nuw nsw i64 %998, 2
  %1020 = add i64 %999, -2
  %1021 = icmp eq i64 %1020, 0
  br i1 %1021, label %1024, label %997

1022:                                             ; preds = %986
  %1023 = bitcast i32* %987 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %1023, i8 0, i64 262144, i1 false) #8, !noalias !398
  br label %1037

1024:                                             ; preds = %997, %992
  %1025 = phi i64 [ 0, %992 ], [ %1019, %997 ]
  %1026 = icmp eq i64 %993, 0
  br i1 %1026, label %1037, label %1027

1027:                                             ; preds = %1024
  %1028 = getelementptr inbounds i8, i8* %32, i64 %1025
  %1029 = bitcast i8* %1028 to i64*
  %1030 = load i64, i64* %1029, align 8, !alias.scope !388, !noalias !385
  %1031 = mul i64 %1030, -4819355556693147648
  %1032 = lshr i64 %1031, 48
  %1033 = getelementptr inbounds i32, i32* %987, i64 %1032
  store i32 0, i32* %1033, align 4, !noalias !398
  %1034 = add nuw nsw i64 %1032, 8
  %1035 = and i64 %1034, 65535
  %1036 = getelementptr inbounds i32, i32* %987, i64 %1035
  store i32 0, i32* %1036, align 4, !noalias !398
  br label %1037

1037:                                             ; preds = %1027, %1024, %1022
  %1038 = icmp ult i64 %192, 32
  br i1 %1038, label %1504, label %1039

1039:                                             ; preds = %1037
  %1040 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 8
  %1041 = bitcast i16* %1040 to i32*
  %1042 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 22
  %1043 = bitcast i16* %1042 to i32*
  %1044 = load i32, i32* %1043, align 4, !alias.scope !399, !noalias !402
  %1045 = load i8, i8* %32, align 1, !alias.scope !402, !noalias !399
  %1046 = zext i8 %1045 to i32
  %1047 = add nuw nsw i32 %1046, 1
  %1048 = getelementptr inbounds i8, i8* %32, i64 4
  %1049 = load i8, i8* %1048, align 1, !alias.scope !402, !noalias !399
  %1050 = mul i32 %1047, %1044
  %1051 = zext i8 %1049 to i32
  %1052 = add nuw nsw i32 %1051, 1
  %1053 = add i32 %1052, %1050
  %1054 = getelementptr inbounds i8, i8* %32, i64 8
  %1055 = load i8, i8* %1054, align 1, !alias.scope !402, !noalias !399
  %1056 = mul i32 %1053, %1044
  %1057 = zext i8 %1055 to i32
  %1058 = add nuw nsw i32 %1057, 1
  %1059 = add i32 %1058, %1056
  %1060 = getelementptr inbounds i8, i8* %32, i64 12
  %1061 = load i8, i8* %1060, align 1, !alias.scope !402, !noalias !399
  %1062 = mul i32 %1059, %1044
  %1063 = zext i8 %1061 to i32
  %1064 = add nuw nsw i32 %1063, 1
  %1065 = add i32 %1064, %1062
  %1066 = getelementptr inbounds i8, i8* %32, i64 16
  %1067 = load i8, i8* %1066, align 1, !alias.scope !402, !noalias !399
  %1068 = mul i32 %1065, %1044
  %1069 = zext i8 %1067 to i32
  %1070 = add nuw nsw i32 %1069, 1
  %1071 = add i32 %1070, %1068
  %1072 = getelementptr inbounds i8, i8* %32, i64 20
  %1073 = load i8, i8* %1072, align 1, !alias.scope !402, !noalias !399
  %1074 = mul i32 %1071, %1044
  %1075 = zext i8 %1073 to i32
  %1076 = add nuw nsw i32 %1075, 1
  %1077 = add i32 %1076, %1074
  %1078 = getelementptr inbounds i8, i8* %32, i64 24
  %1079 = load i8, i8* %1078, align 1, !alias.scope !402, !noalias !399
  %1080 = mul i32 %1077, %1044
  %1081 = zext i8 %1079 to i32
  %1082 = add nuw nsw i32 %1081, 1
  %1083 = add i32 %1082, %1080
  %1084 = getelementptr inbounds i8, i8* %32, i64 28
  %1085 = load i8, i8* %1084, align 1, !alias.scope !402, !noalias !399
  %1086 = mul i32 %1083, %1044
  %1087 = zext i8 %1085 to i32
  %1088 = add nuw nsw i32 %1087, 1
  %1089 = add i32 %1088, %1086
  store i32 %1089, i32* %1041, align 8, !alias.scope !399, !noalias !402
  br label %1504

1090:                                             ; preds = %521
  %1091 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 60
  %1092 = bitcast i16* %1091 to i32*
  %1093 = load i32, i32* %1092, align 8, !alias.scope !404, !noalias !407
  %1094 = icmp eq i32 %1093, 0
  br i1 %1094, label %1095, label %1099

1095:                                             ; preds = %1090
  %1096 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 4
  %1097 = bitcast i16* %1096 to i32**
  %1098 = load i32*, i32** %1097, align 8, !alias.scope !409, !noalias !412
  br label %1127

1099:                                             ; preds = %1090
  %1100 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1
  store i32 0, i32* %1092, align 8, !alias.scope !404, !noalias !407
  %1101 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 52
  %1102 = bitcast i16* %1101 to i8**
  %1103 = load i8*, i8** %1102, align 8, !alias.scope !404, !noalias !407
  %1104 = getelementptr inbounds i8, i8* %1103, i64 4194304
  %1105 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 28
  %1106 = bitcast i16* %1105 to i8**
  store i8* %1104, i8** %1106, align 8, !alias.scope !404, !noalias !407
  %1107 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 56
  %1108 = bitcast i16* %1107 to %struct.HasherCommon**
  %1109 = load %struct.HasherCommon*, %struct.HasherCommon** %1108, align 8, !alias.scope !404, !noalias !407
  %1110 = bitcast %union.anon* %1100 to %struct.HasherCommon**
  store %struct.HasherCommon* %1109, %struct.HasherCommon** %1110, align 8, !alias.scope !414, !noalias !407
  %1111 = bitcast %struct.HasherCommon* %1109 to i64*
  %1112 = load i64, i64* %1111, align 8, !noalias !417
  %1113 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 4
  %1114 = bitcast i16* %1113 to i64*
  store i64 %1112, i64* %1114, align 8, !alias.scope !414, !noalias !407
  %1115 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 8
  %1116 = bitcast i16* %1115 to i32*
  store i32 0, i32* %1116, align 8, !alias.scope !418, !noalias !407
  %1117 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 16
  %1118 = bitcast i16* %1117 to i64*
  store i64 0, i64* %1118, align 8, !alias.scope !418, !noalias !407
  %1119 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 22
  %1120 = bitcast i16* %1119 to i32*
  store i32 69069, i32* %1120, align 4, !alias.scope !418, !noalias !407
  %1121 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 24
  %1122 = bitcast i16* %1121 to i32*
  store i32 381957665, i32* %1122, align 8, !alias.scope !418, !noalias !407
  %1123 = ptrtoint i8* %1104 to i64
  %1124 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 12
  %1125 = bitcast i16* %1124 to i64*
  store i64 %1123, i64* %1125, align 8, !alias.scope !418, !noalias !407
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %1104, i8 -1, i64 67108864, i1 false) #8, !noalias !421
  %1126 = inttoptr i64 %1112 to i32*
  br label %1127

1127:                                             ; preds = %1099, %1095
  %1128 = phi i32* [ %1098, %1095 ], [ %1126, %1099 ]
  %1129 = icmp ult i64 %192, 32769
  %1130 = and i1 %1129, %194
  br i1 %1130, label %1131, label %1152

1131:                                             ; preds = %1127
  %1132 = icmp eq i64 %192, 0
  br i1 %1132, label %1504, label %1133

1133:                                             ; preds = %1131, %1133
  %1134 = phi i64 [ %1150, %1133 ], [ 0, %1131 ]
  %1135 = getelementptr inbounds i8, i8* %32, i64 %1134
  %1136 = bitcast i8* %1135 to i64*
  %1137 = load i64, i64* %1136, align 8, !alias.scope !412, !noalias !409
  %1138 = mul i64 %1137, 3866266742567714048
  %1139 = lshr i64 %1138, 44
  %1140 = getelementptr inbounds i32, i32* %1128, i64 %1139
  store i32 0, i32* %1140, align 4, !noalias !422
  %1141 = add nuw nsw i64 %1139, 8
  %1142 = and i64 %1141, 1048575
  %1143 = getelementptr inbounds i32, i32* %1128, i64 %1142
  store i32 0, i32* %1143, align 4, !noalias !422
  %1144 = add nuw nsw i64 %1139, 16
  %1145 = and i64 %1144, 1048575
  %1146 = getelementptr inbounds i32, i32* %1128, i64 %1145
  store i32 0, i32* %1146, align 4, !noalias !422
  %1147 = add nuw nsw i64 %1139, 24
  %1148 = and i64 %1147, 1048575
  %1149 = getelementptr inbounds i32, i32* %1128, i64 %1148
  store i32 0, i32* %1149, align 4, !noalias !422
  %1150 = add nuw nsw i64 %1134, 1
  %1151 = icmp eq i64 %1150, %192
  br i1 %1151, label %1154, label %1133

1152:                                             ; preds = %1127
  %1153 = bitcast i32* %1128 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %1153, i8 0, i64 4194304, i1 false) #8, !noalias !422
  br label %1154

1154:                                             ; preds = %1133, %1152
  %1155 = icmp ult i64 %192, 32
  br i1 %1155, label %1504, label %1156

1156:                                             ; preds = %1154
  %1157 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 8
  %1158 = bitcast i16* %1157 to i32*
  %1159 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 22
  %1160 = bitcast i16* %1159 to i32*
  %1161 = load i32, i32* %1160, align 4, !alias.scope !423, !noalias !426
  %1162 = load i8, i8* %32, align 1, !alias.scope !426, !noalias !423
  %1163 = zext i8 %1162 to i32
  %1164 = add nuw nsw i32 %1163, 1
  %1165 = getelementptr inbounds i8, i8* %32, i64 4
  %1166 = load i8, i8* %1165, align 1, !alias.scope !426, !noalias !423
  %1167 = mul i32 %1164, %1161
  %1168 = zext i8 %1166 to i32
  %1169 = add nuw nsw i32 %1168, 1
  %1170 = add i32 %1169, %1167
  %1171 = getelementptr inbounds i8, i8* %32, i64 8
  %1172 = load i8, i8* %1171, align 1, !alias.scope !426, !noalias !423
  %1173 = mul i32 %1170, %1161
  %1174 = zext i8 %1172 to i32
  %1175 = add nuw nsw i32 %1174, 1
  %1176 = add i32 %1175, %1173
  %1177 = getelementptr inbounds i8, i8* %32, i64 12
  %1178 = load i8, i8* %1177, align 1, !alias.scope !426, !noalias !423
  %1179 = mul i32 %1176, %1161
  %1180 = zext i8 %1178 to i32
  %1181 = add nuw nsw i32 %1180, 1
  %1182 = add i32 %1181, %1179
  %1183 = getelementptr inbounds i8, i8* %32, i64 16
  %1184 = load i8, i8* %1183, align 1, !alias.scope !426, !noalias !423
  %1185 = mul i32 %1182, %1161
  %1186 = zext i8 %1184 to i32
  %1187 = add nuw nsw i32 %1186, 1
  %1188 = add i32 %1187, %1185
  %1189 = getelementptr inbounds i8, i8* %32, i64 20
  %1190 = load i8, i8* %1189, align 1, !alias.scope !426, !noalias !423
  %1191 = mul i32 %1188, %1161
  %1192 = zext i8 %1190 to i32
  %1193 = add nuw nsw i32 %1192, 1
  %1194 = add i32 %1193, %1191
  %1195 = getelementptr inbounds i8, i8* %32, i64 24
  %1196 = load i8, i8* %1195, align 1, !alias.scope !426, !noalias !423
  %1197 = mul i32 %1194, %1161
  %1198 = zext i8 %1196 to i32
  %1199 = add nuw nsw i32 %1198, 1
  %1200 = add i32 %1199, %1197
  %1201 = getelementptr inbounds i8, i8* %32, i64 28
  %1202 = load i8, i8* %1201, align 1, !alias.scope !426, !noalias !423
  %1203 = mul i32 %1200, %1161
  %1204 = zext i8 %1202 to i32
  %1205 = add nuw nsw i32 %1204, 1
  %1206 = add i32 %1205, %1203
  store i32 %1206, i32* %1158, align 8, !alias.scope !423, !noalias !426
  br label %1504

1207:                                             ; preds = %521
  %1208 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1
  %1209 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 88
  %1210 = bitcast i16* %1209 to i32*
  %1211 = load i32, i32* %1210, align 8, !alias.scope !428, !noalias !431
  %1212 = icmp eq i32 %1211, 0
  br i1 %1212, label %1213, label %1215

1213:                                             ; preds = %1207
  %1214 = bitcast %union.anon* %1208 to i64*
  br label %1291

1215:                                             ; preds = %1207
  store i32 0, i32* %1210, align 8, !alias.scope !428, !noalias !431
  %1216 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 80
  %1217 = bitcast i16* %1216 to i8**
  %1218 = load i8*, i8** %1217, align 8, !alias.scope !428, !noalias !431
  %1219 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 92
  %1220 = bitcast i16* %1219 to %struct.BrotliEncoderParams**
  %1221 = load %struct.BrotliEncoderParams*, %struct.BrotliEncoderParams** %1220, align 8, !alias.scope !428, !noalias !431
  %1222 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %1221, i64 0, i32 8, i32 1
  %1223 = load i32, i32* %1222, align 4, !noalias !431
  %1224 = zext i32 %1223 to i64
  %1225 = shl i64 1, %1224
  %1226 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %1221, i64 0, i32 8, i32 2
  %1227 = load i32, i32* %1226, align 8, !noalias !431
  %1228 = zext i32 %1227 to i64
  %1229 = shl i64 %1225, 1
  %1230 = shl i64 %1225, 2
  %1231 = shl i64 %1230, %1228
  %1232 = add i64 %1231, %1229
  %1233 = getelementptr inbounds i8, i8* %1218, i64 %1232
  %1234 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 56
  %1235 = bitcast i16* %1234 to i8**
  store i8* %1233, i8** %1235, align 8, !alias.scope !428, !noalias !431
  %1236 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 84
  %1237 = bitcast i16* %1236 to %struct.HasherCommon**
  %1238 = load %struct.HasherCommon*, %struct.HasherCommon** %1237, align 8, !alias.scope !428, !noalias !431
  %1239 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 24
  %1240 = bitcast i16* %1239 to %struct.HasherCommon**
  store %struct.HasherCommon* %1238, %struct.HasherCommon** %1240, align 8, !alias.scope !433, !noalias !431
  %1241 = getelementptr inbounds %struct.HasherCommon, %struct.HasherCommon* %1238, i64 0, i32 3, i32 1
  %1242 = load i32, i32* %1241, align 4, !noalias !436
  %1243 = sub nsw i32 64, %1242
  %1244 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 8
  %1245 = bitcast i16* %1244 to i32*
  store i32 %1243, i32* %1245, align 8, !alias.scope !433, !noalias !431
  %1246 = getelementptr inbounds %struct.HasherCommon, %struct.HasherCommon* %1238, i64 0, i32 3, i32 3
  %1247 = load i32, i32* %1246, align 4, !noalias !436
  %1248 = shl nsw i32 %1247, 3
  %1249 = sub nsw i32 64, %1248
  %1250 = zext i32 %1249 to i64
  %1251 = lshr i64 -1, %1250
  %1252 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 12
  %1253 = bitcast i16* %1252 to i64*
  store i64 %1251, i64* %1253, align 8, !alias.scope !433, !noalias !431
  %1254 = zext i32 %1242 to i64
  %1255 = shl i64 1, %1254
  %1256 = bitcast %union.anon* %1208 to i64*
  store i64 %1255, i64* %1256, align 8, !alias.scope !433, !noalias !431
  %1257 = getelementptr inbounds %struct.HasherCommon, %struct.HasherCommon* %1238, i64 0, i32 3, i32 2
  %1258 = load i32, i32* %1257, align 8, !noalias !436
  %1259 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 18
  %1260 = bitcast i16* %1259 to i32*
  store i32 %1258, i32* %1260, align 4, !alias.scope !433, !noalias !431
  %1261 = zext i32 %1258 to i64
  %1262 = shl i64 1, %1261
  %1263 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 4
  %1264 = bitcast i16* %1263 to i64*
  store i64 %1262, i64* %1264, align 8, !alias.scope !433, !noalias !431
  %1265 = trunc i64 %1262 to i32
  %1266 = add i32 %1265, -1
  %1267 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 16
  %1268 = bitcast i16* %1267 to i32*
  store i32 %1266, i32* %1268, align 8, !alias.scope !433, !noalias !431
  %1269 = getelementptr inbounds %struct.HasherCommon, %struct.HasherCommon* %1238, i64 0, i32 3, i32 4
  %1270 = load i32, i32* %1269, align 8, !noalias !436
  %1271 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 20
  %1272 = bitcast i16* %1271 to i32*
  store i32 %1270, i32* %1272, align 8, !alias.scope !433, !noalias !431
  %1273 = bitcast %struct.HasherCommon* %1238 to i16**
  %1274 = load i16*, i16** %1273, align 8, !noalias !436
  %1275 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 28
  %1276 = bitcast i16* %1275 to i16**
  store i16* %1274, i16** %1276, align 8, !alias.scope !433, !noalias !431
  %1277 = getelementptr inbounds i16, i16* %1274, i64 %1255
  %1278 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 32
  %1279 = bitcast i16* %1278 to i16**
  store i16* %1277, i16** %1279, align 8, !alias.scope !433, !noalias !431
  %1280 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 36
  %1281 = bitcast i16* %1280 to i32*
  store i32 0, i32* %1281, align 8, !alias.scope !437, !noalias !431
  %1282 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 44
  %1283 = bitcast i16* %1282 to i64*
  store i64 0, i64* %1283, align 8, !alias.scope !437, !noalias !431
  %1284 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 50
  %1285 = bitcast i16* %1284 to i32*
  store i32 69069, i32* %1285, align 4, !alias.scope !437, !noalias !431
  %1286 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 52
  %1287 = bitcast i16* %1286 to i32*
  store i32 -236195711, i32* %1287, align 8, !alias.scope !437, !noalias !431
  %1288 = ptrtoint i8* %1233 to i64
  %1289 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 40
  %1290 = bitcast i16* %1289 to i64*
  store i64 %1288, i64* %1290, align 8, !alias.scope !437, !noalias !431
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %1233, i8 -1, i64 67108864, i1 false) #8, !noalias !440
  br label %1291

1291:                                             ; preds = %1215, %1213
  %1292 = phi i64* [ %1214, %1213 ], [ %1256, %1215 ]
  %1293 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 28
  %1294 = bitcast i16* %1293 to i16**
  %1295 = load i16*, i16** %1294, align 8, !alias.scope !441, !noalias !444
  %1296 = xor i1 %194, true
  %1297 = load i64, i64* %1292, align 8, !alias.scope !441, !noalias !444
  %1298 = lshr i64 %1297, 6
  %1299 = icmp ult i64 %1298, %192
  %1300 = or i1 %1299, %1296
  br i1 %1300, label %1338, label %1301

1301:                                             ; preds = %1291
  %1302 = icmp eq i64 %192, 0
  br i1 %1302, label %1504, label %1303

1303:                                             ; preds = %1301
  %1304 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 12
  %1305 = bitcast i16* %1304 to i64*
  %1306 = load i64, i64* %1305, align 8, !alias.scope !441, !noalias !444
  %1307 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 8
  %1308 = bitcast i16* %1307 to i32*
  %1309 = load i32, i32* %1308, align 8, !alias.scope !441, !noalias !444
  %1310 = zext i32 %1309 to i64
  %1311 = and i64 %19, 1
  %1312 = icmp eq i64 %192, 1
  br i1 %1312, label %1341, label %1313

1313:                                             ; preds = %1303
  %1314 = sub nsw i64 %192, %1311
  br label %1315

1315:                                             ; preds = %1315, %1313
  %1316 = phi i64 [ 0, %1313 ], [ %1335, %1315 ]
  %1317 = phi i64 [ %1314, %1313 ], [ %1336, %1315 ]
  %1318 = getelementptr inbounds i8, i8* %32, i64 %1316
  %1319 = bitcast i8* %1318 to i64*
  %1320 = load i64, i64* %1319, align 8, !alias.scope !446, !noalias !441
  %1321 = and i64 %1320, %1306
  %1322 = mul i64 %1321, 2297779722762296275
  %1323 = lshr i64 %1322, %1310
  %1324 = and i64 %1323, 4294967295
  %1325 = getelementptr inbounds i16, i16* %1295, i64 %1324
  store i16 0, i16* %1325, align 2, !noalias !449
  %1326 = or i64 %1316, 1
  %1327 = getelementptr inbounds i8, i8* %32, i64 %1326
  %1328 = bitcast i8* %1327 to i64*
  %1329 = load i64, i64* %1328, align 8, !alias.scope !446, !noalias !441
  %1330 = and i64 %1329, %1306
  %1331 = mul i64 %1330, 2297779722762296275
  %1332 = lshr i64 %1331, %1310
  %1333 = and i64 %1332, 4294967295
  %1334 = getelementptr inbounds i16, i16* %1295, i64 %1333
  store i16 0, i16* %1334, align 2, !noalias !449
  %1335 = add nuw nsw i64 %1316, 2
  %1336 = add i64 %1317, -2
  %1337 = icmp eq i64 %1336, 0
  br i1 %1337, label %1341, label %1315

1338:                                             ; preds = %1291
  %1339 = bitcast i16* %1295 to i8*
  %1340 = shl i64 %1297, 1
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %1339, i8 0, i64 %1340, i1 false) #8, !noalias !449
  br label %1353

1341:                                             ; preds = %1315, %1303
  %1342 = phi i64 [ 0, %1303 ], [ %1335, %1315 ]
  %1343 = icmp eq i64 %1311, 0
  br i1 %1343, label %1353, label %1344

1344:                                             ; preds = %1341
  %1345 = getelementptr inbounds i8, i8* %32, i64 %1342
  %1346 = bitcast i8* %1345 to i64*
  %1347 = load i64, i64* %1346, align 8, !alias.scope !446, !noalias !441
  %1348 = and i64 %1347, %1306
  %1349 = mul i64 %1348, 2297779722762296275
  %1350 = lshr i64 %1349, %1310
  %1351 = and i64 %1350, 4294967295
  %1352 = getelementptr inbounds i16, i16* %1295, i64 %1351
  store i16 0, i16* %1352, align 2, !noalias !449
  br label %1353

1353:                                             ; preds = %1344, %1341, %1338
  %1354 = icmp ult i64 %192, 32
  br i1 %1354, label %1504, label %1355

1355:                                             ; preds = %1353
  %1356 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 36
  %1357 = bitcast i16* %1356 to i32*
  store i32 0, i32* %1357, align 8, !alias.scope !450, !noalias !453
  %1358 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 50
  %1359 = bitcast i16* %1358 to i32*
  %1360 = load i32, i32* %1359, align 4, !alias.scope !450, !noalias !453
  br label %1361

1361:                                             ; preds = %1361, %1355
  %1362 = phi i32 [ 0, %1355 ], [ %1390, %1361 ]
  %1363 = phi i64 [ 0, %1355 ], [ %1391, %1361 ]
  %1364 = getelementptr inbounds i8, i8* %32, i64 %1363
  %1365 = load i8, i8* %1364, align 1, !alias.scope !453, !noalias !450
  %1366 = mul i32 %1362, %1360
  %1367 = zext i8 %1365 to i32
  %1368 = add i32 %1366, 1
  %1369 = add i32 %1368, %1367
  %1370 = or i64 %1363, 1
  %1371 = getelementptr inbounds i8, i8* %32, i64 %1370
  %1372 = load i8, i8* %1371, align 1, !alias.scope !453, !noalias !450
  %1373 = mul i32 %1369, %1360
  %1374 = zext i8 %1372 to i32
  %1375 = add i32 %1373, 1
  %1376 = add i32 %1375, %1374
  %1377 = or i64 %1363, 2
  %1378 = getelementptr inbounds i8, i8* %32, i64 %1377
  %1379 = load i8, i8* %1378, align 1, !alias.scope !453, !noalias !450
  %1380 = mul i32 %1376, %1360
  %1381 = zext i8 %1379 to i32
  %1382 = add i32 %1380, 1
  %1383 = add i32 %1382, %1381
  %1384 = or i64 %1363, 3
  %1385 = getelementptr inbounds i8, i8* %32, i64 %1384
  %1386 = load i8, i8* %1385, align 1, !alias.scope !453, !noalias !450
  %1387 = mul i32 %1383, %1360
  %1388 = zext i8 %1386 to i32
  %1389 = add i32 %1387, 1
  %1390 = add i32 %1389, %1388
  %1391 = add nuw nsw i64 %1363, 4
  %1392 = icmp eq i64 %1391, 32
  br i1 %1392, label %1393, label %1361

1393:                                             ; preds = %1361
  store i32 %1390, i32* %1357, align 8, !alias.scope !450, !noalias !453
  br label %1504

1394:                                             ; preds = %521
  %1395 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 8
  %1396 = bitcast i16* %1395 to i32*
  %1397 = load i32, i32* %1396, align 8, !alias.scope !455
  %1398 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 4
  %1399 = bitcast i16* %1398 to i32**
  %1400 = load i32*, i32** %1399, align 8, !alias.scope !455
  %1401 = insertelement <4 x i32> undef, i32 %1397, i32 0
  %1402 = shufflevector <4 x i32> %1401, <4 x i32> undef, <4 x i32> zeroinitializer
  %1403 = insertelement <4 x i32> undef, i32 %1397, i32 0
  %1404 = shufflevector <4 x i32> %1403, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %1405

1405:                                             ; preds = %1405, %1394
  %1406 = phi i64 [ 0, %1394 ], [ %1446, %1405 ]
  %1407 = getelementptr inbounds i32, i32* %1400, i64 %1406
  %1408 = bitcast i32* %1407 to <4 x i32>*
  store <4 x i32> %1402, <4 x i32>* %1408, align 4, !noalias !455
  %1409 = getelementptr inbounds i32, i32* %1407, i64 4
  %1410 = bitcast i32* %1409 to <4 x i32>*
  store <4 x i32> %1404, <4 x i32>* %1410, align 4, !noalias !455
  %1411 = or i64 %1406, 8
  %1412 = getelementptr inbounds i32, i32* %1400, i64 %1411
  %1413 = bitcast i32* %1412 to <4 x i32>*
  store <4 x i32> %1402, <4 x i32>* %1413, align 4, !noalias !455
  %1414 = getelementptr inbounds i32, i32* %1412, i64 4
  %1415 = bitcast i32* %1414 to <4 x i32>*
  store <4 x i32> %1404, <4 x i32>* %1415, align 4, !noalias !455
  %1416 = or i64 %1406, 16
  %1417 = getelementptr inbounds i32, i32* %1400, i64 %1416
  %1418 = bitcast i32* %1417 to <4 x i32>*
  store <4 x i32> %1402, <4 x i32>* %1418, align 4, !noalias !455
  %1419 = getelementptr inbounds i32, i32* %1417, i64 4
  %1420 = bitcast i32* %1419 to <4 x i32>*
  store <4 x i32> %1404, <4 x i32>* %1420, align 4, !noalias !455
  %1421 = or i64 %1406, 24
  %1422 = getelementptr inbounds i32, i32* %1400, i64 %1421
  %1423 = bitcast i32* %1422 to <4 x i32>*
  store <4 x i32> %1402, <4 x i32>* %1423, align 4, !noalias !455
  %1424 = getelementptr inbounds i32, i32* %1422, i64 4
  %1425 = bitcast i32* %1424 to <4 x i32>*
  store <4 x i32> %1404, <4 x i32>* %1425, align 4, !noalias !455
  %1426 = or i64 %1406, 32
  %1427 = getelementptr inbounds i32, i32* %1400, i64 %1426
  %1428 = bitcast i32* %1427 to <4 x i32>*
  store <4 x i32> %1402, <4 x i32>* %1428, align 4, !noalias !455
  %1429 = getelementptr inbounds i32, i32* %1427, i64 4
  %1430 = bitcast i32* %1429 to <4 x i32>*
  store <4 x i32> %1404, <4 x i32>* %1430, align 4, !noalias !455
  %1431 = or i64 %1406, 40
  %1432 = getelementptr inbounds i32, i32* %1400, i64 %1431
  %1433 = bitcast i32* %1432 to <4 x i32>*
  store <4 x i32> %1402, <4 x i32>* %1433, align 4, !noalias !455
  %1434 = getelementptr inbounds i32, i32* %1432, i64 4
  %1435 = bitcast i32* %1434 to <4 x i32>*
  store <4 x i32> %1404, <4 x i32>* %1435, align 4, !noalias !455
  %1436 = or i64 %1406, 48
  %1437 = getelementptr inbounds i32, i32* %1400, i64 %1436
  %1438 = bitcast i32* %1437 to <4 x i32>*
  store <4 x i32> %1402, <4 x i32>* %1438, align 4, !noalias !455
  %1439 = getelementptr inbounds i32, i32* %1437, i64 4
  %1440 = bitcast i32* %1439 to <4 x i32>*
  store <4 x i32> %1404, <4 x i32>* %1440, align 4, !noalias !455
  %1441 = or i64 %1406, 56
  %1442 = getelementptr inbounds i32, i32* %1400, i64 %1441
  %1443 = bitcast i32* %1442 to <4 x i32>*
  store <4 x i32> %1402, <4 x i32>* %1443, align 4, !noalias !455
  %1444 = getelementptr inbounds i32, i32* %1442, i64 4
  %1445 = bitcast i32* %1444 to <4 x i32>*
  store <4 x i32> %1404, <4 x i32>* %1445, align 4, !noalias !455
  %1446 = add nuw nsw i64 %1406, 64
  %1447 = icmp eq i64 %1446, 131072
  br i1 %1447, label %1504, label %1405, !llvm.loop !458

1448:                                             ; preds = %538, %532
  %1449 = phi i64 [ 0, %532 ], [ %568, %538 ]
  %1450 = icmp eq i64 %534, 0
  br i1 %1450, label %1504, label %1451

1451:                                             ; preds = %1448, %1451
  %1452 = phi i64 [ %1460, %1451 ], [ %1449, %1448 ]
  %1453 = phi i64 [ %1461, %1451 ], [ %534, %1448 ]
  %1454 = getelementptr inbounds i8, i8* %32, i64 %1452
  %1455 = bitcast i8* %1454 to i64*
  %1456 = load i64, i64* %1455, align 8, !alias.scope !314, !noalias !311
  %1457 = mul i64 %1456, -4819355556693147648
  %1458 = lshr i64 %1457, 48
  %1459 = getelementptr inbounds i32, i32* %527, i64 %1458
  store i32 0, i32* %1459, align 4, !noalias !316
  %1460 = add nuw nsw i64 %1452, 1
  %1461 = add i64 %1453, -1
  %1462 = icmp eq i64 %1461, 0
  br i1 %1462, label %1504, label %1451, !llvm.loop !459

1463:                                             ; preds = %586, %581
  %1464 = phi i64 [ 0, %581 ], [ %608, %586 ]
  %1465 = icmp eq i64 %582, 0
  br i1 %1465, label %1504, label %1466

1466:                                             ; preds = %1463
  %1467 = getelementptr inbounds i8, i8* %32, i64 %1464
  %1468 = bitcast i8* %1467 to i64*
  %1469 = load i64, i64* %1468, align 8, !alias.scope !320, !noalias !317
  %1470 = mul i64 %1469, -4819355556693147648
  %1471 = lshr i64 %1470, 48
  %1472 = getelementptr inbounds i32, i32* %576, i64 %1471
  store i32 0, i32* %1472, align 4, !noalias !322
  %1473 = add nuw nsw i64 %1471, 8
  %1474 = and i64 %1473, 65535
  %1475 = getelementptr inbounds i32, i32* %576, i64 %1474
  store i32 0, i32* %1475, align 4, !noalias !322
  br label %1504

1476:                                             ; preds = %664, %655
  %1477 = phi i64 [ 0, %655 ], [ %698, %664 ]
  %1478 = icmp eq i64 %660, 0
  br i1 %1478, label %1504, label %1479

1479:                                             ; preds = %1476, %1479
  %1480 = phi i64 [ %1489, %1479 ], [ %1477, %1476 ]
  %1481 = phi i64 [ %1490, %1479 ], [ %660, %1476 ]
  %1482 = getelementptr inbounds i8, i8* %32, i64 %1480
  %1483 = bitcast i8* %1482 to i32*
  %1484 = load i32, i32* %1483, align 4, !alias.scope !334, !noalias !329
  %1485 = mul i32 %1484, 506832829
  %1486 = lshr i32 %1485, %658
  %1487 = zext i32 %1486 to i64
  %1488 = getelementptr inbounds i16, i16* %646, i64 %1487
  store i16 0, i16* %1488, align 2, !noalias !337
  %1489 = add nuw nsw i64 %1480, 1
  %1490 = add i64 %1481, -1
  %1491 = icmp eq i64 %1490, 0
  br i1 %1491, label %1504, label %1479, !llvm.loop !460

1492:                                             ; preds = %729, %717
  %1493 = phi i64 [ 0, %717 ], [ %749, %729 ]
  %1494 = icmp eq i64 %725, 0
  br i1 %1494, label %1504, label %1495

1495:                                             ; preds = %1492
  %1496 = getelementptr inbounds i8, i8* %32, i64 %1493
  %1497 = bitcast i8* %1496 to i64*
  %1498 = load i64, i64* %1497, align 8, !alias.scope !343, !noalias !338
  %1499 = and i64 %1498, %720
  %1500 = mul i64 %1499, 2297779722762296275
  %1501 = lshr i64 %1500, %724
  %1502 = and i64 %1501, 4294967295
  %1503 = getelementptr inbounds i16, i16* %708, i64 %1502
  store i16 0, i16* %1503, align 2, !noalias !346
  br label %1504

1504:                                             ; preds = %1405, %928, %1495, %1492, %1476, %1479, %621, %1466, %1463, %1448, %1451, %1393, %1353, %1301, %1156, %1154, %1131, %1039, %1037, %990, %947, %926, %918, %863, %808, %752, %715, %701, %653, %640, %619, %611, %579, %571, %530, %521
  br i1 %193, label %1505, label %1508

1505:                                             ; preds = %1504
  %1506 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 0, i32 1
  %1507 = bitcast i64* %1506 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1507, i8 0, i64 16, i1 false) #8
  br label %1508

1508:                                             ; preds = %1505, %1504
  store i32 1, i32* %523, align 4
  br label %1509

1509:                                             ; preds = %1508, %514
  %1510 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 0, i32 3, i32 0
  %1511 = load i32, i32* %1510, align 8
  switch i32 %1511, label %2660 [
    i32 2, label %1512
    i32 3, label %1547
    i32 4, label %1591
    i32 5, label %1635
    i32 6, label %1715
    i32 40, label %1802
    i32 41, label %1893
    i32 42, label %1984
    i32 54, label %2098
    i32 35, label %2142
    i32 55, label %2256
    i32 65, label %2370
    i32 10, label %2507
  ]

1512:                                             ; preds = %1509
  %1513 = icmp ugt i64 %192, 6
  %1514 = icmp ugt i32 %29, 2
  %1515 = and i1 %1513, %1514
  br i1 %1515, label %1516, label %2660

1516:                                             ; preds = %1512
  %1517 = add nsw i64 %191, -3
  %1518 = and i64 %1517, %190
  %1519 = getelementptr inbounds i8, i8* %32, i64 %1518
  %1520 = bitcast i8* %1519 to i64*
  %1521 = load i64, i64* %1520, align 8, !alias.scope !461, !noalias !464
  %1522 = mul i64 %1521, -4819355556693147648
  %1523 = lshr i64 %1522, 48
  %1524 = trunc i64 %1517 to i32
  %1525 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 4
  %1526 = bitcast i16* %1525 to i32**
  %1527 = load i32*, i32** %1526, align 8, !alias.scope !464, !noalias !461
  %1528 = getelementptr inbounds i32, i32* %1527, i64 %1523
  store i32 %1524, i32* %1528, align 4, !noalias !468
  %1529 = add nsw i64 %191, -2
  %1530 = and i64 %1529, %190
  %1531 = getelementptr inbounds i8, i8* %32, i64 %1530
  %1532 = bitcast i8* %1531 to i64*
  %1533 = load i64, i64* %1532, align 8, !alias.scope !469, !noalias !472
  %1534 = mul i64 %1533, -4819355556693147648
  %1535 = lshr i64 %1534, 48
  %1536 = trunc i64 %1529 to i32
  %1537 = getelementptr inbounds i32, i32* %1527, i64 %1535
  store i32 %1536, i32* %1537, align 4, !noalias !474
  %1538 = add nsw i64 %191, -1
  %1539 = and i64 %1538, %190
  %1540 = getelementptr inbounds i8, i8* %32, i64 %1539
  %1541 = bitcast i8* %1540 to i64*
  %1542 = load i64, i64* %1541, align 8, !alias.scope !475, !noalias !478
  %1543 = mul i64 %1542, -4819355556693147648
  %1544 = lshr i64 %1543, 48
  %1545 = trunc i64 %1538 to i32
  %1546 = getelementptr inbounds i32, i32* %1527, i64 %1544
  store i32 %1545, i32* %1546, align 4, !noalias !480
  br label %2660

1547:                                             ; preds = %1509
  %1548 = icmp ugt i64 %192, 6
  %1549 = icmp ugt i32 %29, 2
  %1550 = and i1 %1548, %1549
  br i1 %1550, label %1551, label %2660

1551:                                             ; preds = %1547
  %1552 = add nsw i64 %191, -3
  %1553 = and i64 %1552, %190
  %1554 = getelementptr inbounds i8, i8* %32, i64 %1553
  %1555 = bitcast i8* %1554 to i64*
  %1556 = load i64, i64* %1555, align 8, !alias.scope !481, !noalias !484
  %1557 = mul i64 %1556, -4819355556693147648
  %1558 = lshr i64 %1557, 48
  %1559 = trunc i64 %1552 to i32
  %1560 = and i64 %1552, 8
  %1561 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 4
  %1562 = bitcast i16* %1561 to i32**
  %1563 = load i32*, i32** %1562, align 8, !alias.scope !484, !noalias !481
  %1564 = add nuw nsw i64 %1558, %1560
  %1565 = and i64 %1564, 65535
  %1566 = getelementptr inbounds i32, i32* %1563, i64 %1565
  store i32 %1559, i32* %1566, align 4, !noalias !488
  %1567 = add nsw i64 %191, -2
  %1568 = and i64 %1567, %190
  %1569 = getelementptr inbounds i8, i8* %32, i64 %1568
  %1570 = bitcast i8* %1569 to i64*
  %1571 = load i64, i64* %1570, align 8, !alias.scope !489, !noalias !492
  %1572 = mul i64 %1571, -4819355556693147648
  %1573 = lshr i64 %1572, 48
  %1574 = trunc i64 %1567 to i32
  %1575 = and i64 %1567, 8
  %1576 = add nuw nsw i64 %1573, %1575
  %1577 = and i64 %1576, 65535
  %1578 = getelementptr inbounds i32, i32* %1563, i64 %1577
  store i32 %1574, i32* %1578, align 4, !noalias !494
  %1579 = add nsw i64 %191, -1
  %1580 = and i64 %1579, %190
  %1581 = getelementptr inbounds i8, i8* %32, i64 %1580
  %1582 = bitcast i8* %1581 to i64*
  %1583 = load i64, i64* %1582, align 8, !alias.scope !495, !noalias !498
  %1584 = mul i64 %1583, -4819355556693147648
  %1585 = lshr i64 %1584, 48
  %1586 = trunc i64 %1579 to i32
  %1587 = and i64 %1579, 8
  %1588 = add nuw nsw i64 %1585, %1587
  %1589 = and i64 %1588, 65535
  %1590 = getelementptr inbounds i32, i32* %1563, i64 %1589
  store i32 %1586, i32* %1590, align 4, !noalias !500
  br label %2660

1591:                                             ; preds = %1509
  %1592 = icmp ugt i64 %192, 6
  %1593 = icmp ugt i32 %29, 2
  %1594 = and i1 %1592, %1593
  br i1 %1594, label %1595, label %2660

1595:                                             ; preds = %1591
  %1596 = add nsw i64 %191, -3
  %1597 = and i64 %1596, %190
  %1598 = getelementptr inbounds i8, i8* %32, i64 %1597
  %1599 = bitcast i8* %1598 to i64*
  %1600 = load i64, i64* %1599, align 8, !alias.scope !501, !noalias !504
  %1601 = mul i64 %1600, -4819355556693147648
  %1602 = lshr i64 %1601, 47
  %1603 = trunc i64 %1596 to i32
  %1604 = and i64 %1596, 24
  %1605 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 4
  %1606 = bitcast i16* %1605 to i32**
  %1607 = load i32*, i32** %1606, align 8, !alias.scope !504, !noalias !501
  %1608 = add nuw nsw i64 %1602, %1604
  %1609 = and i64 %1608, 131071
  %1610 = getelementptr inbounds i32, i32* %1607, i64 %1609
  store i32 %1603, i32* %1610, align 4, !noalias !508
  %1611 = add nsw i64 %191, -2
  %1612 = and i64 %1611, %190
  %1613 = getelementptr inbounds i8, i8* %32, i64 %1612
  %1614 = bitcast i8* %1613 to i64*
  %1615 = load i64, i64* %1614, align 8, !alias.scope !509, !noalias !512
  %1616 = mul i64 %1615, -4819355556693147648
  %1617 = lshr i64 %1616, 47
  %1618 = trunc i64 %1611 to i32
  %1619 = and i64 %1611, 24
  %1620 = add nuw nsw i64 %1617, %1619
  %1621 = and i64 %1620, 131071
  %1622 = getelementptr inbounds i32, i32* %1607, i64 %1621
  store i32 %1618, i32* %1622, align 4, !noalias !514
  %1623 = add nsw i64 %191, -1
  %1624 = and i64 %1623, %190
  %1625 = getelementptr inbounds i8, i8* %32, i64 %1624
  %1626 = bitcast i8* %1625 to i64*
  %1627 = load i64, i64* %1626, align 8, !alias.scope !515, !noalias !518
  %1628 = mul i64 %1627, -4819355556693147648
  %1629 = lshr i64 %1628, 47
  %1630 = trunc i64 %1623 to i32
  %1631 = and i64 %1623, 24
  %1632 = add nuw nsw i64 %1629, %1631
  %1633 = and i64 %1632, 131071
  %1634 = getelementptr inbounds i32, i32* %1607, i64 %1633
  store i32 %1630, i32* %1634, align 4, !noalias !520
  br label %2660

1635:                                             ; preds = %1509
  %1636 = icmp ugt i64 %192, 2
  %1637 = icmp ugt i32 %29, 2
  %1638 = and i1 %1636, %1637
  br i1 %1638, label %1639, label %2660

1639:                                             ; preds = %1635
  %1640 = add nsw i64 %191, -3
  %1641 = and i64 %1640, %190
  %1642 = getelementptr inbounds i8, i8* %32, i64 %1641
  %1643 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 8
  %1644 = bitcast i16* %1643 to i32*
  %1645 = load i32, i32* %1644, align 8, !alias.scope !521, !noalias !526
  %1646 = bitcast i8* %1642 to i32*
  %1647 = load i32, i32* %1646, align 4, !alias.scope !528, !noalias !521
  %1648 = mul i32 %1647, 506832829
  %1649 = lshr i32 %1648, %1645
  %1650 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 20
  %1651 = bitcast i16* %1650 to i16**
  %1652 = load i16*, i16** %1651, align 8, !alias.scope !521, !noalias !526
  %1653 = zext i32 %1649 to i64
  %1654 = getelementptr inbounds i16, i16* %1652, i64 %1653
  %1655 = load i16, i16* %1654, align 2, !noalias !531
  %1656 = zext i16 %1655 to i32
  %1657 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 10
  %1658 = bitcast i16* %1657 to i32*
  %1659 = load i32, i32* %1658, align 4, !alias.scope !521, !noalias !526
  %1660 = and i32 %1659, %1656
  %1661 = zext i32 %1660 to i64
  %1662 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 12
  %1663 = bitcast i16* %1662 to i32*
  %1664 = load i32, i32* %1663, align 8, !alias.scope !521, !noalias !526
  %1665 = shl i32 %1649, %1664
  %1666 = zext i32 %1665 to i64
  %1667 = add nuw nsw i64 %1666, %1661
  %1668 = trunc i64 %1640 to i32
  %1669 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 24
  %1670 = bitcast i16* %1669 to i32**
  %1671 = load i32*, i32** %1670, align 8, !alias.scope !521, !noalias !526
  %1672 = getelementptr inbounds i32, i32* %1671, i64 %1667
  store i32 %1668, i32* %1672, align 4, !noalias !531
  %1673 = load i16, i16* %1654, align 2, !noalias !531
  %1674 = add i16 %1673, 1
  store i16 %1674, i16* %1654, align 2, !noalias !531
  %1675 = add nsw i64 %191, -2
  %1676 = and i64 %1675, %190
  %1677 = getelementptr inbounds i8, i8* %32, i64 %1676
  %1678 = bitcast i8* %1677 to i32*
  %1679 = load i32, i32* %1678, align 4, !alias.scope !532, !noalias !537
  %1680 = mul i32 %1679, 506832829
  %1681 = lshr i32 %1680, %1645
  %1682 = zext i32 %1681 to i64
  %1683 = getelementptr inbounds i16, i16* %1652, i64 %1682
  %1684 = load i16, i16* %1683, align 2, !noalias !539
  %1685 = zext i16 %1684 to i32
  %1686 = and i32 %1659, %1685
  %1687 = zext i32 %1686 to i64
  %1688 = shl i32 %1681, %1664
  %1689 = zext i32 %1688 to i64
  %1690 = add nuw nsw i64 %1689, %1687
  %1691 = trunc i64 %1675 to i32
  %1692 = getelementptr inbounds i32, i32* %1671, i64 %1690
  store i32 %1691, i32* %1692, align 4, !noalias !539
  %1693 = load i16, i16* %1683, align 2, !noalias !539
  %1694 = add i16 %1693, 1
  store i16 %1694, i16* %1683, align 2, !noalias !539
  %1695 = add nsw i64 %191, -1
  %1696 = and i64 %1695, %190
  %1697 = getelementptr inbounds i8, i8* %32, i64 %1696
  %1698 = bitcast i8* %1697 to i32*
  %1699 = load i32, i32* %1698, align 4, !alias.scope !540, !noalias !545
  %1700 = mul i32 %1699, 506832829
  %1701 = lshr i32 %1700, %1645
  %1702 = zext i32 %1701 to i64
  %1703 = getelementptr inbounds i16, i16* %1652, i64 %1702
  %1704 = load i16, i16* %1703, align 2, !noalias !547
  %1705 = zext i16 %1704 to i32
  %1706 = and i32 %1659, %1705
  %1707 = zext i32 %1706 to i64
  %1708 = shl i32 %1701, %1664
  %1709 = zext i32 %1708 to i64
  %1710 = add nuw nsw i64 %1709, %1707
  %1711 = trunc i64 %1695 to i32
  %1712 = getelementptr inbounds i32, i32* %1671, i64 %1710
  store i32 %1711, i32* %1712, align 4, !noalias !547
  %1713 = load i16, i16* %1703, align 2, !noalias !547
  %1714 = add i16 %1713, 1
  store i16 %1714, i16* %1703, align 2, !noalias !547
  br label %2660

1715:                                             ; preds = %1509
  %1716 = icmp ugt i64 %192, 6
  %1717 = icmp ugt i32 %29, 2
  %1718 = and i1 %1716, %1717
  br i1 %1718, label %1719, label %2660

1719:                                             ; preds = %1715
  %1720 = add nsw i64 %191, -3
  %1721 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 28
  %1722 = bitcast i16* %1721 to i16**
  %1723 = load i16*, i16** %1722, align 8, !alias.scope !548, !noalias !553
  %1724 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 32
  %1725 = bitcast i16* %1724 to i32**
  %1726 = load i32*, i32** %1725, align 8, !alias.scope !548, !noalias !553
  %1727 = and i64 %1720, %190
  %1728 = getelementptr inbounds i8, i8* %32, i64 %1727
  %1729 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 12
  %1730 = bitcast i16* %1729 to i64*
  %1731 = load i64, i64* %1730, align 8, !alias.scope !548, !noalias !553
  %1732 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 8
  %1733 = bitcast i16* %1732 to i32*
  %1734 = load i32, i32* %1733, align 8, !alias.scope !548, !noalias !553
  %1735 = bitcast i8* %1728 to i64*
  %1736 = load i64, i64* %1735, align 8, !alias.scope !555, !noalias !548
  %1737 = and i64 %1736, %1731
  %1738 = mul i64 %1737, 2297779722762296275
  %1739 = zext i32 %1734 to i64
  %1740 = lshr i64 %1738, %1739
  %1741 = trunc i64 %1740 to i32
  %1742 = and i64 %1740, 4294967295
  %1743 = getelementptr inbounds i16, i16* %1723, i64 %1742
  %1744 = load i16, i16* %1743, align 2, !noalias !558
  %1745 = zext i16 %1744 to i32
  %1746 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 16
  %1747 = bitcast i16* %1746 to i32*
  %1748 = load i32, i32* %1747, align 8, !alias.scope !548, !noalias !553
  %1749 = and i32 %1748, %1745
  %1750 = zext i32 %1749 to i64
  %1751 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 18
  %1752 = bitcast i16* %1751 to i32*
  %1753 = load i32, i32* %1752, align 4, !alias.scope !548, !noalias !553
  %1754 = shl i32 %1741, %1753
  %1755 = zext i32 %1754 to i64
  %1756 = add nuw nsw i64 %1755, %1750
  %1757 = add i16 %1744, 1
  store i16 %1757, i16* %1743, align 2, !noalias !558
  %1758 = trunc i64 %1720 to i32
  %1759 = getelementptr inbounds i32, i32* %1726, i64 %1756
  store i32 %1758, i32* %1759, align 4, !noalias !558
  %1760 = add nsw i64 %191, -2
  %1761 = and i64 %1760, %190
  %1762 = getelementptr inbounds i8, i8* %32, i64 %1761
  %1763 = bitcast i8* %1762 to i64*
  %1764 = load i64, i64* %1763, align 8, !alias.scope !559, !noalias !564
  %1765 = and i64 %1764, %1731
  %1766 = mul i64 %1765, 2297779722762296275
  %1767 = lshr i64 %1766, %1739
  %1768 = trunc i64 %1767 to i32
  %1769 = and i64 %1767, 4294967295
  %1770 = getelementptr inbounds i16, i16* %1723, i64 %1769
  %1771 = load i16, i16* %1770, align 2, !noalias !566
  %1772 = zext i16 %1771 to i32
  %1773 = and i32 %1748, %1772
  %1774 = zext i32 %1773 to i64
  %1775 = shl i32 %1768, %1753
  %1776 = zext i32 %1775 to i64
  %1777 = add nuw nsw i64 %1776, %1774
  %1778 = add i16 %1771, 1
  store i16 %1778, i16* %1770, align 2, !noalias !566
  %1779 = trunc i64 %1760 to i32
  %1780 = getelementptr inbounds i32, i32* %1726, i64 %1777
  store i32 %1779, i32* %1780, align 4, !noalias !566
  %1781 = add nsw i64 %191, -1
  %1782 = and i64 %1781, %190
  %1783 = getelementptr inbounds i8, i8* %32, i64 %1782
  %1784 = bitcast i8* %1783 to i64*
  %1785 = load i64, i64* %1784, align 8, !alias.scope !567, !noalias !572
  %1786 = and i64 %1785, %1731
  %1787 = mul i64 %1786, 2297779722762296275
  %1788 = lshr i64 %1787, %1739
  %1789 = trunc i64 %1788 to i32
  %1790 = and i64 %1788, 4294967295
  %1791 = getelementptr inbounds i16, i16* %1723, i64 %1790
  %1792 = load i16, i16* %1791, align 2, !noalias !574
  %1793 = zext i16 %1792 to i32
  %1794 = and i32 %1748, %1793
  %1795 = zext i32 %1794 to i64
  %1796 = shl i32 %1789, %1753
  %1797 = zext i32 %1796 to i64
  %1798 = add nuw nsw i64 %1797, %1795
  %1799 = add i16 %1792, 1
  store i16 %1799, i16* %1791, align 2, !noalias !574
  %1800 = trunc i64 %1781 to i32
  %1801 = getelementptr inbounds i32, i32* %1726, i64 %1798
  store i32 %1800, i32* %1801, align 4, !noalias !574
  br label %2660

1802:                                             ; preds = %1509
  %1803 = icmp ugt i64 %192, 2
  %1804 = icmp ugt i32 %29, 2
  %1805 = and i1 %1803, %1804
  br i1 %1805, label %1806, label %2660

1806:                                             ; preds = %1802
  %1807 = add nsw i64 %191, -3
  %1808 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 8
  %1809 = bitcast i16* %1808 to i8**
  %1810 = load i8*, i8** %1809, align 8, !alias.scope !575, !noalias !580
  %1811 = bitcast i8* %1810 to i32*
  %1812 = getelementptr inbounds i8, i8* %1810, i64 131072
  %1813 = bitcast i8* %1812 to i16*
  %1814 = getelementptr inbounds i8, i8* %1810, i64 196608
  %1815 = getelementptr inbounds i8, i8* %1810, i64 262144
  %1816 = bitcast i8* %1815 to %struct.BankH40*
  %1817 = and i64 %1807, %190
  %1818 = getelementptr inbounds i8, i8* %32, i64 %1817
  %1819 = bitcast i8* %1818 to i32*
  %1820 = load i32, i32* %1819, align 4, !alias.scope !582, !noalias !575
  %1821 = mul i32 %1820, 506832829
  %1822 = lshr i32 %1821, 17
  %1823 = zext i32 %1822 to i64
  %1824 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 0
  %1825 = load i16, i16* %1824, align 2, !alias.scope !575, !noalias !580
  %1826 = add i16 %1825, 1
  %1827 = zext i16 %1825 to i64
  %1828 = getelementptr inbounds i32, i32* %1811, i64 %1823
  %1829 = load i32, i32* %1828, align 4, !noalias !585
  %1830 = zext i32 %1829 to i64
  %1831 = sub nsw i64 %1807, %1830
  %1832 = trunc i32 %1822 to i8
  %1833 = and i64 %1807, 65535
  %1834 = getelementptr inbounds i8, i8* %1814, i64 %1833
  store i8 %1832, i8* %1834, align 1, !noalias !585
  %1835 = icmp ult i64 %1831, 65535
  %1836 = select i1 %1835, i64 %1831, i64 65535
  %1837 = trunc i64 %1836 to i16
  %1838 = getelementptr inbounds %struct.BankH40, %struct.BankH40* %1816, i64 0, i32 0, i64 %1827, i32 0
  store i16 %1837, i16* %1838, align 2, !noalias !585
  %1839 = getelementptr inbounds i16, i16* %1813, i64 %1823
  %1840 = load i16, i16* %1839, align 2, !noalias !585
  %1841 = getelementptr inbounds %struct.BankH40, %struct.BankH40* %1816, i64 0, i32 0, i64 %1827, i32 1
  store i16 %1840, i16* %1841, align 2, !noalias !585
  %1842 = trunc i64 %1807 to i32
  store i32 %1842, i32* %1828, align 4, !noalias !585
  store i16 %1825, i16* %1839, align 2, !noalias !585
  %1843 = add nsw i64 %191, -2
  %1844 = and i64 %1843, %190
  %1845 = getelementptr inbounds i8, i8* %32, i64 %1844
  %1846 = bitcast i8* %1845 to i32*
  %1847 = load i32, i32* %1846, align 4, !alias.scope !586, !noalias !591
  %1848 = mul i32 %1847, 506832829
  %1849 = lshr i32 %1848, 17
  %1850 = zext i32 %1849 to i64
  %1851 = add i16 %1825, 2
  %1852 = zext i16 %1826 to i64
  %1853 = getelementptr inbounds i32, i32* %1811, i64 %1850
  %1854 = load i32, i32* %1853, align 4, !noalias !593
  %1855 = zext i32 %1854 to i64
  %1856 = sub nsw i64 %1843, %1855
  %1857 = trunc i32 %1849 to i8
  %1858 = and i64 %1843, 65535
  %1859 = getelementptr inbounds i8, i8* %1814, i64 %1858
  store i8 %1857, i8* %1859, align 1, !noalias !593
  %1860 = icmp ult i64 %1856, 65535
  %1861 = select i1 %1860, i64 %1856, i64 65535
  %1862 = trunc i64 %1861 to i16
  %1863 = getelementptr inbounds %struct.BankH40, %struct.BankH40* %1816, i64 0, i32 0, i64 %1852, i32 0
  store i16 %1862, i16* %1863, align 2, !noalias !593
  %1864 = getelementptr inbounds i16, i16* %1813, i64 %1850
  %1865 = load i16, i16* %1864, align 2, !noalias !593
  %1866 = getelementptr inbounds %struct.BankH40, %struct.BankH40* %1816, i64 0, i32 0, i64 %1852, i32 1
  store i16 %1865, i16* %1866, align 2, !noalias !593
  %1867 = trunc i64 %1843 to i32
  store i32 %1867, i32* %1853, align 4, !noalias !593
  store i16 %1826, i16* %1864, align 2, !noalias !593
  %1868 = add nsw i64 %191, -1
  %1869 = and i64 %1868, %190
  %1870 = getelementptr inbounds i8, i8* %32, i64 %1869
  %1871 = bitcast i8* %1870 to i32*
  %1872 = load i32, i32* %1871, align 4, !alias.scope !594, !noalias !599
  %1873 = mul i32 %1872, 506832829
  %1874 = lshr i32 %1873, 17
  %1875 = zext i32 %1874 to i64
  %1876 = add i16 %1825, 3
  store i16 %1876, i16* %1824, align 2, !alias.scope !599, !noalias !601
  %1877 = zext i16 %1851 to i64
  %1878 = getelementptr inbounds i32, i32* %1811, i64 %1875
  %1879 = load i32, i32* %1878, align 4, !noalias !602
  %1880 = zext i32 %1879 to i64
  %1881 = sub nsw i64 %1868, %1880
  %1882 = trunc i32 %1874 to i8
  %1883 = and i64 %1868, 65535
  %1884 = getelementptr inbounds i8, i8* %1814, i64 %1883
  store i8 %1882, i8* %1884, align 1, !noalias !602
  %1885 = icmp ult i64 %1881, 65535
  %1886 = select i1 %1885, i64 %1881, i64 65535
  %1887 = trunc i64 %1886 to i16
  %1888 = getelementptr inbounds %struct.BankH40, %struct.BankH40* %1816, i64 0, i32 0, i64 %1877, i32 0
  store i16 %1887, i16* %1888, align 2, !noalias !602
  %1889 = getelementptr inbounds i16, i16* %1813, i64 %1875
  %1890 = load i16, i16* %1889, align 2, !noalias !602
  %1891 = getelementptr inbounds %struct.BankH40, %struct.BankH40* %1816, i64 0, i32 0, i64 %1877, i32 1
  store i16 %1890, i16* %1891, align 2, !noalias !602
  %1892 = trunc i64 %1868 to i32
  store i32 %1892, i32* %1878, align 4, !noalias !602
  store i16 %1851, i16* %1889, align 2, !noalias !602
  br label %2660

1893:                                             ; preds = %1509
  %1894 = icmp ugt i64 %192, 2
  %1895 = icmp ugt i32 %29, 2
  %1896 = and i1 %1894, %1895
  br i1 %1896, label %1897, label %2660

1897:                                             ; preds = %1893
  %1898 = add nsw i64 %191, -3
  %1899 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 8
  %1900 = bitcast i16* %1899 to i8**
  %1901 = load i8*, i8** %1900, align 8, !alias.scope !603, !noalias !608
  %1902 = bitcast i8* %1901 to i32*
  %1903 = getelementptr inbounds i8, i8* %1901, i64 131072
  %1904 = bitcast i8* %1903 to i16*
  %1905 = getelementptr inbounds i8, i8* %1901, i64 196608
  %1906 = getelementptr inbounds i8, i8* %1901, i64 262144
  %1907 = bitcast i8* %1906 to %struct.BankH41*
  %1908 = and i64 %1898, %190
  %1909 = getelementptr inbounds i8, i8* %32, i64 %1908
  %1910 = bitcast i8* %1909 to i32*
  %1911 = load i32, i32* %1910, align 4, !alias.scope !610, !noalias !603
  %1912 = mul i32 %1911, 506832829
  %1913 = lshr i32 %1912, 17
  %1914 = zext i32 %1913 to i64
  %1915 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 0
  %1916 = load i16, i16* %1915, align 2, !alias.scope !603, !noalias !608
  %1917 = add i16 %1916, 1
  %1918 = zext i16 %1916 to i64
  %1919 = getelementptr inbounds i32, i32* %1902, i64 %1914
  %1920 = load i32, i32* %1919, align 4, !noalias !613
  %1921 = zext i32 %1920 to i64
  %1922 = sub nsw i64 %1898, %1921
  %1923 = trunc i32 %1913 to i8
  %1924 = and i64 %1898, 65535
  %1925 = getelementptr inbounds i8, i8* %1905, i64 %1924
  store i8 %1923, i8* %1925, align 1, !noalias !613
  %1926 = icmp ult i64 %1922, 65535
  %1927 = select i1 %1926, i64 %1922, i64 65535
  %1928 = trunc i64 %1927 to i16
  %1929 = getelementptr inbounds %struct.BankH41, %struct.BankH41* %1907, i64 0, i32 0, i64 %1918, i32 0
  store i16 %1928, i16* %1929, align 2, !noalias !613
  %1930 = getelementptr inbounds i16, i16* %1904, i64 %1914
  %1931 = load i16, i16* %1930, align 2, !noalias !613
  %1932 = getelementptr inbounds %struct.BankH41, %struct.BankH41* %1907, i64 0, i32 0, i64 %1918, i32 1
  store i16 %1931, i16* %1932, align 2, !noalias !613
  %1933 = trunc i64 %1898 to i32
  store i32 %1933, i32* %1919, align 4, !noalias !613
  store i16 %1916, i16* %1930, align 2, !noalias !613
  %1934 = add nsw i64 %191, -2
  %1935 = and i64 %1934, %190
  %1936 = getelementptr inbounds i8, i8* %32, i64 %1935
  %1937 = bitcast i8* %1936 to i32*
  %1938 = load i32, i32* %1937, align 4, !alias.scope !614, !noalias !619
  %1939 = mul i32 %1938, 506832829
  %1940 = lshr i32 %1939, 17
  %1941 = zext i32 %1940 to i64
  %1942 = add i16 %1916, 2
  %1943 = zext i16 %1917 to i64
  %1944 = getelementptr inbounds i32, i32* %1902, i64 %1941
  %1945 = load i32, i32* %1944, align 4, !noalias !621
  %1946 = zext i32 %1945 to i64
  %1947 = sub nsw i64 %1934, %1946
  %1948 = trunc i32 %1940 to i8
  %1949 = and i64 %1934, 65535
  %1950 = getelementptr inbounds i8, i8* %1905, i64 %1949
  store i8 %1948, i8* %1950, align 1, !noalias !621
  %1951 = icmp ult i64 %1947, 65535
  %1952 = select i1 %1951, i64 %1947, i64 65535
  %1953 = trunc i64 %1952 to i16
  %1954 = getelementptr inbounds %struct.BankH41, %struct.BankH41* %1907, i64 0, i32 0, i64 %1943, i32 0
  store i16 %1953, i16* %1954, align 2, !noalias !621
  %1955 = getelementptr inbounds i16, i16* %1904, i64 %1941
  %1956 = load i16, i16* %1955, align 2, !noalias !621
  %1957 = getelementptr inbounds %struct.BankH41, %struct.BankH41* %1907, i64 0, i32 0, i64 %1943, i32 1
  store i16 %1956, i16* %1957, align 2, !noalias !621
  %1958 = trunc i64 %1934 to i32
  store i32 %1958, i32* %1944, align 4, !noalias !621
  store i16 %1917, i16* %1955, align 2, !noalias !621
  %1959 = add nsw i64 %191, -1
  %1960 = and i64 %1959, %190
  %1961 = getelementptr inbounds i8, i8* %32, i64 %1960
  %1962 = bitcast i8* %1961 to i32*
  %1963 = load i32, i32* %1962, align 4, !alias.scope !622, !noalias !627
  %1964 = mul i32 %1963, 506832829
  %1965 = lshr i32 %1964, 17
  %1966 = zext i32 %1965 to i64
  %1967 = add i16 %1916, 3
  store i16 %1967, i16* %1915, align 2, !alias.scope !627, !noalias !629
  %1968 = zext i16 %1942 to i64
  %1969 = getelementptr inbounds i32, i32* %1902, i64 %1966
  %1970 = load i32, i32* %1969, align 4, !noalias !630
  %1971 = zext i32 %1970 to i64
  %1972 = sub nsw i64 %1959, %1971
  %1973 = trunc i32 %1965 to i8
  %1974 = and i64 %1959, 65535
  %1975 = getelementptr inbounds i8, i8* %1905, i64 %1974
  store i8 %1973, i8* %1975, align 1, !noalias !630
  %1976 = icmp ult i64 %1972, 65535
  %1977 = select i1 %1976, i64 %1972, i64 65535
  %1978 = trunc i64 %1977 to i16
  %1979 = getelementptr inbounds %struct.BankH41, %struct.BankH41* %1907, i64 0, i32 0, i64 %1968, i32 0
  store i16 %1978, i16* %1979, align 2, !noalias !630
  %1980 = getelementptr inbounds i16, i16* %1904, i64 %1966
  %1981 = load i16, i16* %1980, align 2, !noalias !630
  %1982 = getelementptr inbounds %struct.BankH41, %struct.BankH41* %1907, i64 0, i32 0, i64 %1968, i32 1
  store i16 %1981, i16* %1982, align 2, !noalias !630
  %1983 = trunc i64 %1959 to i32
  store i32 %1983, i32* %1969, align 4, !noalias !630
  store i16 %1942, i16* %1980, align 2, !noalias !630
  br label %2660

1984:                                             ; preds = %1509
  %1985 = icmp ugt i64 %192, 2
  %1986 = icmp ugt i32 %29, 2
  %1987 = and i1 %1985, %1986
  br i1 %1987, label %1988, label %2660

1988:                                             ; preds = %1984
  %1989 = add nsw i64 %191, -3
  %1990 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 2
  %1991 = load i8*, i8** %1990, align 8, !alias.scope !631, !noalias !636
  %1992 = bitcast i8* %1991 to i32*
  %1993 = getelementptr inbounds i8, i8* %1991, i64 131072
  %1994 = bitcast i8* %1993 to i16*
  %1995 = getelementptr inbounds i8, i8* %1991, i64 196608
  %1996 = getelementptr inbounds i8, i8* %1991, i64 262144
  %1997 = bitcast i8* %1996 to %struct.BankH42*
  %1998 = and i64 %1989, %190
  %1999 = getelementptr inbounds i8, i8* %32, i64 %1998
  %2000 = bitcast i8* %1999 to i32*
  %2001 = load i32, i32* %2000, align 4, !alias.scope !638, !noalias !631
  %2002 = mul i32 %2001, 506832829
  %2003 = lshr i32 %2002, 17
  %2004 = zext i32 %2003 to i64
  %2005 = and i64 %2004, 511
  %2006 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 %2005
  %2007 = load i16, i16* %2006, align 2, !alias.scope !631, !noalias !636
  %2008 = add i16 %2007, 1
  store i16 %2008, i16* %2006, align 2, !alias.scope !631, !noalias !636
  %2009 = and i16 %2007, 511
  %2010 = zext i16 %2009 to i64
  %2011 = getelementptr inbounds i32, i32* %1992, i64 %2004
  %2012 = load i32, i32* %2011, align 4, !noalias !641
  %2013 = zext i32 %2012 to i64
  %2014 = sub nsw i64 %1989, %2013
  %2015 = trunc i32 %2003 to i8
  %2016 = and i64 %1989, 65535
  %2017 = getelementptr inbounds i8, i8* %1995, i64 %2016
  store i8 %2015, i8* %2017, align 1, !noalias !641
  %2018 = icmp ult i64 %2014, 65535
  %2019 = select i1 %2018, i64 %2014, i64 65535
  %2020 = trunc i64 %2019 to i16
  %2021 = getelementptr inbounds %struct.BankH42, %struct.BankH42* %1997, i64 %2005, i32 0, i64 %2010, i32 0
  store i16 %2020, i16* %2021, align 2, !noalias !641
  %2022 = getelementptr inbounds i16, i16* %1994, i64 %2004
  %2023 = load i16, i16* %2022, align 2, !noalias !641
  %2024 = getelementptr inbounds %struct.BankH42, %struct.BankH42* %1997, i64 %2005, i32 0, i64 %2010, i32 1
  store i16 %2023, i16* %2024, align 2, !noalias !641
  %2025 = trunc i64 %1989 to i32
  store i32 %2025, i32* %2011, align 4, !noalias !641
  store i16 %2009, i16* %2022, align 2, !noalias !641
  %2026 = add nsw i64 %191, -2
  %2027 = load i8*, i8** %1990, align 8, !alias.scope !642, !noalias !645
  %2028 = bitcast i8* %2027 to i32*
  %2029 = getelementptr inbounds i8, i8* %2027, i64 131072
  %2030 = bitcast i8* %2029 to i16*
  %2031 = getelementptr inbounds i8, i8* %2027, i64 196608
  %2032 = getelementptr inbounds i8, i8* %2027, i64 262144
  %2033 = bitcast i8* %2032 to %struct.BankH42*
  %2034 = and i64 %2026, %190
  %2035 = getelementptr inbounds i8, i8* %32, i64 %2034
  %2036 = bitcast i8* %2035 to i32*
  %2037 = load i32, i32* %2036, align 4, !alias.scope !647, !noalias !642
  %2038 = mul i32 %2037, 506832829
  %2039 = lshr i32 %2038, 17
  %2040 = zext i32 %2039 to i64
  %2041 = and i64 %2040, 511
  %2042 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 %2041
  %2043 = load i16, i16* %2042, align 2, !alias.scope !642, !noalias !645
  %2044 = add i16 %2043, 1
  store i16 %2044, i16* %2042, align 2, !alias.scope !642, !noalias !645
  %2045 = and i16 %2043, 511
  %2046 = zext i16 %2045 to i64
  %2047 = getelementptr inbounds i32, i32* %2028, i64 %2040
  %2048 = load i32, i32* %2047, align 4, !noalias !650
  %2049 = zext i32 %2048 to i64
  %2050 = sub nsw i64 %2026, %2049
  %2051 = trunc i32 %2039 to i8
  %2052 = and i64 %2026, 65535
  %2053 = getelementptr inbounds i8, i8* %2031, i64 %2052
  store i8 %2051, i8* %2053, align 1, !noalias !650
  %2054 = icmp ult i64 %2050, 65535
  %2055 = select i1 %2054, i64 %2050, i64 65535
  %2056 = trunc i64 %2055 to i16
  %2057 = getelementptr inbounds %struct.BankH42, %struct.BankH42* %2033, i64 %2041, i32 0, i64 %2046, i32 0
  store i16 %2056, i16* %2057, align 2, !noalias !650
  %2058 = getelementptr inbounds i16, i16* %2030, i64 %2040
  %2059 = load i16, i16* %2058, align 2, !noalias !650
  %2060 = getelementptr inbounds %struct.BankH42, %struct.BankH42* %2033, i64 %2041, i32 0, i64 %2046, i32 1
  store i16 %2059, i16* %2060, align 2, !noalias !650
  %2061 = trunc i64 %2026 to i32
  store i32 %2061, i32* %2047, align 4, !noalias !650
  store i16 %2045, i16* %2058, align 2, !noalias !650
  %2062 = add nsw i64 %191, -1
  %2063 = load i8*, i8** %1990, align 8, !alias.scope !651, !noalias !654
  %2064 = bitcast i8* %2063 to i32*
  %2065 = getelementptr inbounds i8, i8* %2063, i64 131072
  %2066 = bitcast i8* %2065 to i16*
  %2067 = getelementptr inbounds i8, i8* %2063, i64 196608
  %2068 = getelementptr inbounds i8, i8* %2063, i64 262144
  %2069 = bitcast i8* %2068 to %struct.BankH42*
  %2070 = and i64 %2062, %190
  %2071 = getelementptr inbounds i8, i8* %32, i64 %2070
  %2072 = bitcast i8* %2071 to i32*
  %2073 = load i32, i32* %2072, align 4, !alias.scope !656, !noalias !651
  %2074 = mul i32 %2073, 506832829
  %2075 = lshr i32 %2074, 17
  %2076 = zext i32 %2075 to i64
  %2077 = and i64 %2076, 511
  %2078 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 %2077
  %2079 = load i16, i16* %2078, align 2, !alias.scope !651, !noalias !654
  %2080 = add i16 %2079, 1
  store i16 %2080, i16* %2078, align 2, !alias.scope !651, !noalias !654
  %2081 = and i16 %2079, 511
  %2082 = zext i16 %2081 to i64
  %2083 = getelementptr inbounds i32, i32* %2064, i64 %2076
  %2084 = load i32, i32* %2083, align 4, !noalias !659
  %2085 = zext i32 %2084 to i64
  %2086 = sub nsw i64 %2062, %2085
  %2087 = trunc i32 %2075 to i8
  %2088 = and i64 %2062, 65535
  %2089 = getelementptr inbounds i8, i8* %2067, i64 %2088
  store i8 %2087, i8* %2089, align 1, !noalias !659
  %2090 = icmp ult i64 %2086, 65535
  %2091 = select i1 %2090, i64 %2086, i64 65535
  %2092 = trunc i64 %2091 to i16
  %2093 = getelementptr inbounds %struct.BankH42, %struct.BankH42* %2069, i64 %2077, i32 0, i64 %2082, i32 0
  store i16 %2092, i16* %2093, align 2, !noalias !659
  %2094 = getelementptr inbounds i16, i16* %2066, i64 %2076
  %2095 = load i16, i16* %2094, align 2, !noalias !659
  %2096 = getelementptr inbounds %struct.BankH42, %struct.BankH42* %2069, i64 %2077, i32 0, i64 %2082, i32 1
  store i16 %2095, i16* %2096, align 2, !noalias !659
  %2097 = trunc i64 %2062 to i32
  store i32 %2097, i32* %2083, align 4, !noalias !659
  store i16 %2081, i16* %2094, align 2, !noalias !659
  br label %2660

2098:                                             ; preds = %1509
  %2099 = icmp ugt i64 %192, 6
  %2100 = icmp ugt i32 %29, 2
  %2101 = and i1 %2099, %2100
  br i1 %2101, label %2102, label %2660

2102:                                             ; preds = %2098
  %2103 = add nsw i64 %191, -3
  %2104 = and i64 %2103, %190
  %2105 = getelementptr inbounds i8, i8* %32, i64 %2104
  %2106 = bitcast i8* %2105 to i64*
  %2107 = load i64, i64* %2106, align 8, !alias.scope !660, !noalias !663
  %2108 = mul i64 %2107, 3866266742567714048
  %2109 = lshr i64 %2108, 44
  %2110 = trunc i64 %2103 to i32
  %2111 = and i64 %2103, 24
  %2112 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 4
  %2113 = bitcast i16* %2112 to i32**
  %2114 = load i32*, i32** %2113, align 8, !alias.scope !663, !noalias !660
  %2115 = add nuw nsw i64 %2109, %2111
  %2116 = and i64 %2115, 1048575
  %2117 = getelementptr inbounds i32, i32* %2114, i64 %2116
  store i32 %2110, i32* %2117, align 4, !noalias !667
  %2118 = add nsw i64 %191, -2
  %2119 = and i64 %2118, %190
  %2120 = getelementptr inbounds i8, i8* %32, i64 %2119
  %2121 = bitcast i8* %2120 to i64*
  %2122 = load i64, i64* %2121, align 8, !alias.scope !668, !noalias !671
  %2123 = mul i64 %2122, 3866266742567714048
  %2124 = lshr i64 %2123, 44
  %2125 = trunc i64 %2118 to i32
  %2126 = and i64 %2118, 24
  %2127 = add nuw nsw i64 %2124, %2126
  %2128 = and i64 %2127, 1048575
  %2129 = getelementptr inbounds i32, i32* %2114, i64 %2128
  store i32 %2125, i32* %2129, align 4, !noalias !673
  %2130 = add nsw i64 %191, -1
  %2131 = and i64 %2130, %190
  %2132 = getelementptr inbounds i8, i8* %32, i64 %2131
  %2133 = bitcast i8* %2132 to i64*
  %2134 = load i64, i64* %2133, align 8, !alias.scope !674, !noalias !677
  %2135 = mul i64 %2134, 3866266742567714048
  %2136 = lshr i64 %2135, 44
  %2137 = trunc i64 %2130 to i32
  %2138 = and i64 %2130, 24
  %2139 = add nuw nsw i64 %2136, %2138
  %2140 = and i64 %2139, 1048575
  %2141 = getelementptr inbounds i32, i32* %2114, i64 %2140
  store i32 %2137, i32* %2141, align 4, !noalias !679
  br label %2660

2142:                                             ; preds = %1509
  %2143 = icmp ugt i64 %192, 6
  %2144 = icmp ugt i32 %29, 2
  %2145 = and i1 %2143, %2144
  br i1 %2145, label %2146, label %2186

2146:                                             ; preds = %2142
  %2147 = add nsw i64 %191, -3
  %2148 = and i64 %2147, %190
  %2149 = getelementptr inbounds i8, i8* %32, i64 %2148
  %2150 = bitcast i8* %2149 to i64*
  %2151 = load i64, i64* %2150, align 8, !alias.scope !680, !noalias !683
  %2152 = mul i64 %2151, -4819355556693147648
  %2153 = lshr i64 %2152, 48
  %2154 = trunc i64 %2147 to i32
  %2155 = and i64 %2147, 8
  %2156 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 4
  %2157 = bitcast i16* %2156 to i32**
  %2158 = load i32*, i32** %2157, align 8, !alias.scope !683, !noalias !680
  %2159 = add nuw nsw i64 %2153, %2155
  %2160 = and i64 %2159, 65535
  %2161 = getelementptr inbounds i32, i32* %2158, i64 %2160
  store i32 %2154, i32* %2161, align 4, !noalias !689
  %2162 = add nsw i64 %191, -2
  %2163 = and i64 %2162, %190
  %2164 = getelementptr inbounds i8, i8* %32, i64 %2163
  %2165 = bitcast i8* %2164 to i64*
  %2166 = load i64, i64* %2165, align 8, !alias.scope !690, !noalias !693
  %2167 = mul i64 %2166, -4819355556693147648
  %2168 = lshr i64 %2167, 48
  %2169 = trunc i64 %2162 to i32
  %2170 = and i64 %2162, 8
  %2171 = add nuw nsw i64 %2168, %2170
  %2172 = and i64 %2171, 65535
  %2173 = getelementptr inbounds i32, i32* %2158, i64 %2172
  store i32 %2169, i32* %2173, align 4, !noalias !695
  %2174 = add nsw i64 %191, -1
  %2175 = and i64 %2174, %190
  %2176 = getelementptr inbounds i8, i8* %32, i64 %2175
  %2177 = bitcast i8* %2176 to i64*
  %2178 = load i64, i64* %2177, align 8, !alias.scope !696, !noalias !699
  %2179 = mul i64 %2178, -4819355556693147648
  %2180 = lshr i64 %2179, 48
  %2181 = trunc i64 %2174 to i32
  %2182 = and i64 %2174, 8
  %2183 = add nuw nsw i64 %2180, %2182
  %2184 = and i64 %2183, 65535
  %2185 = getelementptr inbounds i32, i32* %2158, i64 %2184
  store i32 %2181, i32* %2185, align 4, !noalias !701
  br label %2186

2186:                                             ; preds = %2146, %2142
  %2187 = and i64 %191, 3
  %2188 = icmp eq i64 %2187, 0
  br i1 %2188, label %2193, label %2189

2189:                                             ; preds = %2186
  %2190 = sub nuw nsw i64 4, %2187
  %2191 = tail call i64 @llvm.usub.sat.i64(i64 %192, i64 %2190) #8
  %2192 = add nuw nsw i64 %2190, %191
  br label %2193

2193:                                             ; preds = %2189, %2186
  %2194 = phi i64 [ %2192, %2189 ], [ %191, %2186 ]
  %2195 = phi i64 [ %2191, %2189 ], [ %192, %2186 ]
  %2196 = and i64 %2194, %190
  %2197 = sub nsw i64 %190, %2196
  %2198 = icmp ugt i64 %2195, %2197
  %2199 = select i1 %2198, i64 %2197, i64 %2195
  %2200 = getelementptr inbounds i8, i8* %32, i64 %2196
  %2201 = icmp ult i64 %2199, 32
  br i1 %2201, label %2253, label %2202

2202:                                             ; preds = %2193
  %2203 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 8
  %2204 = bitcast i16* %2203 to i32*
  %2205 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 22
  %2206 = bitcast i16* %2205 to i32*
  %2207 = load i32, i32* %2206, align 4, !alias.scope !702, !noalias !707
  %2208 = load i8, i8* %2200, align 1, !alias.scope !707, !noalias !702
  %2209 = zext i8 %2208 to i32
  %2210 = add nuw nsw i32 %2209, 1
  %2211 = getelementptr inbounds i8, i8* %2200, i64 4
  %2212 = load i8, i8* %2211, align 1, !alias.scope !707, !noalias !702
  %2213 = mul i32 %2210, %2207
  %2214 = zext i8 %2212 to i32
  %2215 = add nuw nsw i32 %2214, 1
  %2216 = add i32 %2215, %2213
  %2217 = getelementptr inbounds i8, i8* %2200, i64 8
  %2218 = load i8, i8* %2217, align 1, !alias.scope !707, !noalias !702
  %2219 = mul i32 %2216, %2207
  %2220 = zext i8 %2218 to i32
  %2221 = add nuw nsw i32 %2220, 1
  %2222 = add i32 %2221, %2219
  %2223 = getelementptr inbounds i8, i8* %2200, i64 12
  %2224 = load i8, i8* %2223, align 1, !alias.scope !707, !noalias !702
  %2225 = mul i32 %2222, %2207
  %2226 = zext i8 %2224 to i32
  %2227 = add nuw nsw i32 %2226, 1
  %2228 = add i32 %2227, %2225
  %2229 = getelementptr inbounds i8, i8* %2200, i64 16
  %2230 = load i8, i8* %2229, align 1, !alias.scope !707, !noalias !702
  %2231 = mul i32 %2228, %2207
  %2232 = zext i8 %2230 to i32
  %2233 = add nuw nsw i32 %2232, 1
  %2234 = add i32 %2233, %2231
  %2235 = getelementptr inbounds i8, i8* %2200, i64 20
  %2236 = load i8, i8* %2235, align 1, !alias.scope !707, !noalias !702
  %2237 = mul i32 %2234, %2207
  %2238 = zext i8 %2236 to i32
  %2239 = add nuw nsw i32 %2238, 1
  %2240 = add i32 %2239, %2237
  %2241 = getelementptr inbounds i8, i8* %2200, i64 24
  %2242 = load i8, i8* %2241, align 1, !alias.scope !707, !noalias !702
  %2243 = mul i32 %2240, %2207
  %2244 = zext i8 %2242 to i32
  %2245 = add nuw nsw i32 %2244, 1
  %2246 = add i32 %2245, %2243
  %2247 = getelementptr inbounds i8, i8* %2200, i64 28
  %2248 = load i8, i8* %2247, align 1, !alias.scope !707, !noalias !702
  %2249 = mul i32 %2246, %2207
  %2250 = zext i8 %2248 to i32
  %2251 = add nuw nsw i32 %2250, 1
  %2252 = add i32 %2251, %2249
  store i32 %2252, i32* %2204, align 8, !alias.scope !702, !noalias !707
  br label %2253

2253:                                             ; preds = %2202, %2193
  %2254 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 16
  %2255 = bitcast i16* %2254 to i64*
  store i64 %2194, i64* %2255, align 8, !alias.scope !709
  br label %2660

2256:                                             ; preds = %1509
  %2257 = icmp ugt i64 %192, 6
  %2258 = icmp ugt i32 %29, 2
  %2259 = and i1 %2257, %2258
  br i1 %2259, label %2260, label %2300

2260:                                             ; preds = %2256
  %2261 = add nsw i64 %191, -3
  %2262 = and i64 %2261, %190
  %2263 = getelementptr inbounds i8, i8* %32, i64 %2262
  %2264 = bitcast i8* %2263 to i64*
  %2265 = load i64, i64* %2264, align 8, !alias.scope !710, !noalias !713
  %2266 = mul i64 %2265, 3866266742567714048
  %2267 = lshr i64 %2266, 44
  %2268 = trunc i64 %2261 to i32
  %2269 = and i64 %2261, 24
  %2270 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 4
  %2271 = bitcast i16* %2270 to i32**
  %2272 = load i32*, i32** %2271, align 8, !alias.scope !713, !noalias !710
  %2273 = add nuw nsw i64 %2267, %2269
  %2274 = and i64 %2273, 1048575
  %2275 = getelementptr inbounds i32, i32* %2272, i64 %2274
  store i32 %2268, i32* %2275, align 4, !noalias !719
  %2276 = add nsw i64 %191, -2
  %2277 = and i64 %2276, %190
  %2278 = getelementptr inbounds i8, i8* %32, i64 %2277
  %2279 = bitcast i8* %2278 to i64*
  %2280 = load i64, i64* %2279, align 8, !alias.scope !720, !noalias !723
  %2281 = mul i64 %2280, 3866266742567714048
  %2282 = lshr i64 %2281, 44
  %2283 = trunc i64 %2276 to i32
  %2284 = and i64 %2276, 24
  %2285 = add nuw nsw i64 %2282, %2284
  %2286 = and i64 %2285, 1048575
  %2287 = getelementptr inbounds i32, i32* %2272, i64 %2286
  store i32 %2283, i32* %2287, align 4, !noalias !725
  %2288 = add nsw i64 %191, -1
  %2289 = and i64 %2288, %190
  %2290 = getelementptr inbounds i8, i8* %32, i64 %2289
  %2291 = bitcast i8* %2290 to i64*
  %2292 = load i64, i64* %2291, align 8, !alias.scope !726, !noalias !729
  %2293 = mul i64 %2292, 3866266742567714048
  %2294 = lshr i64 %2293, 44
  %2295 = trunc i64 %2288 to i32
  %2296 = and i64 %2288, 24
  %2297 = add nuw nsw i64 %2294, %2296
  %2298 = and i64 %2297, 1048575
  %2299 = getelementptr inbounds i32, i32* %2272, i64 %2298
  store i32 %2295, i32* %2299, align 4, !noalias !731
  br label %2300

2300:                                             ; preds = %2260, %2256
  %2301 = and i64 %191, 3
  %2302 = icmp eq i64 %2301, 0
  br i1 %2302, label %2307, label %2303

2303:                                             ; preds = %2300
  %2304 = sub nuw nsw i64 4, %2301
  %2305 = tail call i64 @llvm.usub.sat.i64(i64 %192, i64 %2304) #8
  %2306 = add nuw nsw i64 %2304, %191
  br label %2307

2307:                                             ; preds = %2303, %2300
  %2308 = phi i64 [ %2306, %2303 ], [ %191, %2300 ]
  %2309 = phi i64 [ %2305, %2303 ], [ %192, %2300 ]
  %2310 = and i64 %2308, %190
  %2311 = sub nsw i64 %190, %2310
  %2312 = icmp ugt i64 %2309, %2311
  %2313 = select i1 %2312, i64 %2311, i64 %2309
  %2314 = getelementptr inbounds i8, i8* %32, i64 %2310
  %2315 = icmp ult i64 %2313, 32
  br i1 %2315, label %2367, label %2316

2316:                                             ; preds = %2307
  %2317 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 8
  %2318 = bitcast i16* %2317 to i32*
  %2319 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 22
  %2320 = bitcast i16* %2319 to i32*
  %2321 = load i32, i32* %2320, align 4, !alias.scope !732, !noalias !737
  %2322 = load i8, i8* %2314, align 1, !alias.scope !737, !noalias !732
  %2323 = zext i8 %2322 to i32
  %2324 = add nuw nsw i32 %2323, 1
  %2325 = getelementptr inbounds i8, i8* %2314, i64 4
  %2326 = load i8, i8* %2325, align 1, !alias.scope !737, !noalias !732
  %2327 = mul i32 %2324, %2321
  %2328 = zext i8 %2326 to i32
  %2329 = add nuw nsw i32 %2328, 1
  %2330 = add i32 %2329, %2327
  %2331 = getelementptr inbounds i8, i8* %2314, i64 8
  %2332 = load i8, i8* %2331, align 1, !alias.scope !737, !noalias !732
  %2333 = mul i32 %2330, %2321
  %2334 = zext i8 %2332 to i32
  %2335 = add nuw nsw i32 %2334, 1
  %2336 = add i32 %2335, %2333
  %2337 = getelementptr inbounds i8, i8* %2314, i64 12
  %2338 = load i8, i8* %2337, align 1, !alias.scope !737, !noalias !732
  %2339 = mul i32 %2336, %2321
  %2340 = zext i8 %2338 to i32
  %2341 = add nuw nsw i32 %2340, 1
  %2342 = add i32 %2341, %2339
  %2343 = getelementptr inbounds i8, i8* %2314, i64 16
  %2344 = load i8, i8* %2343, align 1, !alias.scope !737, !noalias !732
  %2345 = mul i32 %2342, %2321
  %2346 = zext i8 %2344 to i32
  %2347 = add nuw nsw i32 %2346, 1
  %2348 = add i32 %2347, %2345
  %2349 = getelementptr inbounds i8, i8* %2314, i64 20
  %2350 = load i8, i8* %2349, align 1, !alias.scope !737, !noalias !732
  %2351 = mul i32 %2348, %2321
  %2352 = zext i8 %2350 to i32
  %2353 = add nuw nsw i32 %2352, 1
  %2354 = add i32 %2353, %2351
  %2355 = getelementptr inbounds i8, i8* %2314, i64 24
  %2356 = load i8, i8* %2355, align 1, !alias.scope !737, !noalias !732
  %2357 = mul i32 %2354, %2321
  %2358 = zext i8 %2356 to i32
  %2359 = add nuw nsw i32 %2358, 1
  %2360 = add i32 %2359, %2357
  %2361 = getelementptr inbounds i8, i8* %2314, i64 28
  %2362 = load i8, i8* %2361, align 1, !alias.scope !737, !noalias !732
  %2363 = mul i32 %2360, %2321
  %2364 = zext i8 %2362 to i32
  %2365 = add nuw nsw i32 %2364, 1
  %2366 = add i32 %2365, %2363
  store i32 %2366, i32* %2318, align 8, !alias.scope !732, !noalias !737
  br label %2367

2367:                                             ; preds = %2316, %2307
  %2368 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 16
  %2369 = bitcast i16* %2368 to i64*
  store i64 %2308, i64* %2369, align 8, !alias.scope !739
  br label %2660

2370:                                             ; preds = %1509
  %2371 = icmp ugt i64 %192, 6
  %2372 = icmp ugt i32 %29, 2
  %2373 = and i1 %2371, %2372
  br i1 %2373, label %2374, label %2457

2374:                                             ; preds = %2370
  %2375 = add nsw i64 %191, -3
  %2376 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 28
  %2377 = bitcast i16* %2376 to i16**
  %2378 = load i16*, i16** %2377, align 8, !alias.scope !740, !noalias !747
  %2379 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 32
  %2380 = bitcast i16* %2379 to i32**
  %2381 = load i32*, i32** %2380, align 8, !alias.scope !740, !noalias !747
  %2382 = and i64 %2375, %190
  %2383 = getelementptr inbounds i8, i8* %32, i64 %2382
  %2384 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 12
  %2385 = bitcast i16* %2384 to i64*
  %2386 = load i64, i64* %2385, align 8, !alias.scope !740, !noalias !747
  %2387 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 8
  %2388 = bitcast i16* %2387 to i32*
  %2389 = load i32, i32* %2388, align 8, !alias.scope !740, !noalias !747
  %2390 = bitcast i8* %2383 to i64*
  %2391 = load i64, i64* %2390, align 8, !alias.scope !749, !noalias !740
  %2392 = and i64 %2391, %2386
  %2393 = mul i64 %2392, 2297779722762296275
  %2394 = zext i32 %2389 to i64
  %2395 = lshr i64 %2393, %2394
  %2396 = trunc i64 %2395 to i32
  %2397 = and i64 %2395, 4294967295
  %2398 = getelementptr inbounds i16, i16* %2378, i64 %2397
  %2399 = load i16, i16* %2398, align 2, !noalias !752
  %2400 = zext i16 %2399 to i32
  %2401 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 16
  %2402 = bitcast i16* %2401 to i32*
  %2403 = load i32, i32* %2402, align 8, !alias.scope !740, !noalias !747
  %2404 = and i32 %2403, %2400
  %2405 = zext i32 %2404 to i64
  %2406 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 18
  %2407 = bitcast i16* %2406 to i32*
  %2408 = load i32, i32* %2407, align 4, !alias.scope !740, !noalias !747
  %2409 = shl i32 %2396, %2408
  %2410 = zext i32 %2409 to i64
  %2411 = add nuw nsw i64 %2410, %2405
  %2412 = add i16 %2399, 1
  store i16 %2412, i16* %2398, align 2, !noalias !752
  %2413 = trunc i64 %2375 to i32
  %2414 = getelementptr inbounds i32, i32* %2381, i64 %2411
  store i32 %2413, i32* %2414, align 4, !noalias !752
  %2415 = add nsw i64 %191, -2
  %2416 = and i64 %2415, %190
  %2417 = getelementptr inbounds i8, i8* %32, i64 %2416
  %2418 = bitcast i8* %2417 to i64*
  %2419 = load i64, i64* %2418, align 8, !alias.scope !753, !noalias !758
  %2420 = and i64 %2419, %2386
  %2421 = mul i64 %2420, 2297779722762296275
  %2422 = lshr i64 %2421, %2394
  %2423 = trunc i64 %2422 to i32
  %2424 = and i64 %2422, 4294967295
  %2425 = getelementptr inbounds i16, i16* %2378, i64 %2424
  %2426 = load i16, i16* %2425, align 2, !noalias !760
  %2427 = zext i16 %2426 to i32
  %2428 = and i32 %2403, %2427
  %2429 = zext i32 %2428 to i64
  %2430 = shl i32 %2423, %2408
  %2431 = zext i32 %2430 to i64
  %2432 = add nuw nsw i64 %2431, %2429
  %2433 = add i16 %2426, 1
  store i16 %2433, i16* %2425, align 2, !noalias !760
  %2434 = trunc i64 %2415 to i32
  %2435 = getelementptr inbounds i32, i32* %2381, i64 %2432
  store i32 %2434, i32* %2435, align 4, !noalias !760
  %2436 = add nsw i64 %191, -1
  %2437 = and i64 %2436, %190
  %2438 = getelementptr inbounds i8, i8* %32, i64 %2437
  %2439 = bitcast i8* %2438 to i64*
  %2440 = load i64, i64* %2439, align 8, !alias.scope !761, !noalias !766
  %2441 = and i64 %2440, %2386
  %2442 = mul i64 %2441, 2297779722762296275
  %2443 = lshr i64 %2442, %2394
  %2444 = trunc i64 %2443 to i32
  %2445 = and i64 %2443, 4294967295
  %2446 = getelementptr inbounds i16, i16* %2378, i64 %2445
  %2447 = load i16, i16* %2446, align 2, !noalias !768
  %2448 = zext i16 %2447 to i32
  %2449 = and i32 %2403, %2448
  %2450 = zext i32 %2449 to i64
  %2451 = shl i32 %2444, %2408
  %2452 = zext i32 %2451 to i64
  %2453 = add nuw nsw i64 %2452, %2450
  %2454 = add i16 %2447, 1
  store i16 %2454, i16* %2446, align 2, !noalias !768
  %2455 = trunc i64 %2436 to i32
  %2456 = getelementptr inbounds i32, i32* %2381, i64 %2453
  store i32 %2455, i32* %2456, align 4, !noalias !768
  br label %2457

2457:                                             ; preds = %2374, %2370
  %2458 = and i32 %34, %29
  %2459 = zext i32 %2458 to i64
  %2460 = sub nsw i64 %190, %2459
  %2461 = icmp ult i64 %2460, %192
  %2462 = select i1 %2461, i64 %2460, i64 %192
  %2463 = getelementptr inbounds i8, i8* %32, i64 %2459
  %2464 = icmp ult i64 %2462, 32
  br i1 %2464, label %2504, label %2465

2465:                                             ; preds = %2457
  %2466 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 36
  %2467 = bitcast i16* %2466 to i32*
  store i32 0, i32* %2467, align 8, !alias.scope !769, !noalias !774
  %2468 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 50
  %2469 = bitcast i16* %2468 to i32*
  %2470 = load i32, i32* %2469, align 4, !alias.scope !769, !noalias !774
  br label %2471

2471:                                             ; preds = %2471, %2465
  %2472 = phi i32 [ 0, %2465 ], [ %2500, %2471 ]
  %2473 = phi i64 [ 0, %2465 ], [ %2501, %2471 ]
  %2474 = getelementptr inbounds i8, i8* %2463, i64 %2473
  %2475 = load i8, i8* %2474, align 1, !alias.scope !774, !noalias !769
  %2476 = mul i32 %2472, %2470
  %2477 = zext i8 %2475 to i32
  %2478 = add i32 %2476, 1
  %2479 = add i32 %2478, %2477
  %2480 = or i64 %2473, 1
  %2481 = getelementptr inbounds i8, i8* %2463, i64 %2480
  %2482 = load i8, i8* %2481, align 1, !alias.scope !774, !noalias !769
  %2483 = mul i32 %2479, %2470
  %2484 = zext i8 %2482 to i32
  %2485 = add i32 %2483, 1
  %2486 = add i32 %2485, %2484
  %2487 = or i64 %2473, 2
  %2488 = getelementptr inbounds i8, i8* %2463, i64 %2487
  %2489 = load i8, i8* %2488, align 1, !alias.scope !774, !noalias !769
  %2490 = mul i32 %2486, %2470
  %2491 = zext i8 %2489 to i32
  %2492 = add i32 %2490, 1
  %2493 = add i32 %2492, %2491
  %2494 = or i64 %2473, 3
  %2495 = getelementptr inbounds i8, i8* %2463, i64 %2494
  %2496 = load i8, i8* %2495, align 1, !alias.scope !774, !noalias !769
  %2497 = mul i32 %2493, %2470
  %2498 = zext i8 %2496 to i32
  %2499 = add i32 %2497, 1
  %2500 = add i32 %2499, %2498
  %2501 = add nuw nsw i64 %2473, 4
  %2502 = icmp eq i64 %2501, 32
  br i1 %2502, label %2503, label %2471

2503:                                             ; preds = %2471
  store i32 %2500, i32* %2467, align 8, !alias.scope !769, !noalias !774
  br label %2504

2504:                                             ; preds = %2503, %2457
  %2505 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 44
  %2506 = bitcast i16* %2505 to i64*
  store i64 %191, i64* %2506, align 8, !alias.scope !776
  br label %2660

2507:                                             ; preds = %1509
  %2508 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1
  %2509 = icmp ugt i64 %192, 2
  %2510 = icmp ugt i32 %29, 127
  %2511 = and i1 %2509, %2510
  br i1 %2511, label %2512, label %2660

2512:                                             ; preds = %2507
  %2513 = add nsw i64 %191, -127
  %2514 = add nsw i64 %2513, %192
  %2515 = icmp ugt i64 %2514, %191
  %2516 = select i1 %2515, i64 %191, i64 %2514
  %2517 = icmp ult i64 %2513, %2516
  br i1 %2517, label %2518, label %2660

2518:                                             ; preds = %2512
  %2519 = bitcast %union.anon* %2508 to i64*
  %2520 = load i64, i64* %2519, align 8, !alias.scope !777
  %2521 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 4
  %2522 = bitcast i16* %2521 to i32**
  %2523 = load i32*, i32** %2522, align 8, !alias.scope !780, !noalias !783
  %2524 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 12
  %2525 = bitcast i16* %2524 to i32**
  %2526 = load i32*, i32** %2525, align 8, !alias.scope !780, !noalias !783
  %2527 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 1, i32 0, i32 0, i64 8
  %2528 = bitcast i16* %2527 to i32*
  br label %2529

2529:                                             ; preds = %2654, %2518
  %2530 = phi i64 [ %2513, %2518 ], [ %2658, %2654 ]
  %2531 = sub i64 %191, %2530
  %2532 = icmp ugt i64 %2531, 15
  %2533 = select i1 %2532, i64 %2531, i64 15
  %2534 = sub i64 %2520, %2533
  %2535 = and i64 %2530, %190
  %2536 = getelementptr inbounds i8, i8* %32, i64 %2535
  %2537 = bitcast i8* %2536 to i32*
  %2538 = load i32, i32* %2537, align 4, !alias.scope !785, !noalias !780
  %2539 = mul i32 %2538, 506832829
  %2540 = lshr i32 %2539, 15
  %2541 = zext i32 %2540 to i64
  %2542 = getelementptr inbounds i32, i32* %2523, i64 %2541
  %2543 = load i32, i32* %2542, align 4, !noalias !788
  %2544 = and i64 %2530, %2520
  %2545 = shl i64 %2544, 1
  %2546 = or i64 %2545, 1
  %2547 = trunc i64 %2530 to i32
  store i32 %2547, i32* %2542, align 4, !noalias !788
  %2548 = zext i32 %2543 to i64
  %2549 = sub i64 %2530, %2548
  %2550 = icmp eq i64 %2549, 0
  br i1 %2550, label %2564, label %2551

2551:                                             ; preds = %2529, %2642
  %2552 = phi i64 [ %2651, %2642 ], [ %2548, %2529 ]
  %2553 = phi i64 [ %2652, %2642 ], [ %2549, %2529 ]
  %2554 = phi i64 [ %2650, %2642 ], [ 64, %2529 ]
  %2555 = phi i64 [ %2647, %2642 ], [ 0, %2529 ]
  %2556 = phi i64 [ %2646, %2642 ], [ 0, %2529 ]
  %2557 = phi i64 [ %2645, %2642 ], [ %2546, %2529 ]
  %2558 = phi i64 [ %2644, %2642 ], [ %2545, %2529 ]
  %2559 = phi i32 [ %2649, %2642 ], [ %2543, %2529 ]
  %2560 = and i64 %2552, %190
  %2561 = icmp ugt i64 %2553, %2534
  %2562 = icmp eq i64 %2554, 0
  %2563 = or i1 %2561, %2562
  br i1 %2563, label %2564, label %2569

2564:                                             ; preds = %2642, %2551, %2529
  %2565 = phi i64 [ %2545, %2529 ], [ %2644, %2642 ], [ %2558, %2551 ]
  %2566 = phi i64 [ %2546, %2529 ], [ %2645, %2642 ], [ %2557, %2551 ]
  %2567 = load i32, i32* %2528, align 8, !alias.scope !780, !noalias !783
  %2568 = getelementptr inbounds i32, i32* %2526, i64 %2565
  store i32 %2567, i32* %2568, align 4, !noalias !788
  br label %2654

2569:                                             ; preds = %2551
  %2570 = icmp ult i64 %2556, %2555
  %2571 = select i1 %2570, i64 %2556, i64 %2555
  %2572 = add i64 %2571, %2535
  %2573 = getelementptr inbounds i8, i8* %32, i64 %2572
  %2574 = add i64 %2571, %2560
  %2575 = getelementptr inbounds i8, i8* %32, i64 %2574
  %2576 = sub i64 128, %2571
  %2577 = lshr i64 %2576, 3
  %2578 = icmp eq i64 %2577, 0
  br i1 %2578, label %2599, label %2579, !prof !233

2579:                                             ; preds = %2569, %2589
  %2580 = phi i64 [ %2592, %2589 ], [ %2577, %2569 ]
  %2581 = phi i8* [ %2590, %2589 ], [ %2575, %2569 ]
  %2582 = phi i64 [ %2591, %2589 ], [ 0, %2569 ]
  %2583 = bitcast i8* %2581 to i64*
  %2584 = load i64, i64* %2583, align 8, !alias.scope !783, !noalias !780
  %2585 = getelementptr inbounds i8, i8* %2573, i64 %2582
  %2586 = bitcast i8* %2585 to i64*
  %2587 = load i64, i64* %2586, align 8, !alias.scope !783, !noalias !780
  %2588 = icmp eq i64 %2584, %2587
  br i1 %2588, label %2589, label %2594, !prof !233

2589:                                             ; preds = %2579
  %2590 = getelementptr inbounds i8, i8* %2581, i64 8
  %2591 = add nuw i64 %2582, 8
  %2592 = add nsw i64 %2580, -1
  %2593 = icmp eq i64 %2592, 0
  br i1 %2593, label %2599, label %2579, !prof !233

2594:                                             ; preds = %2579
  %2595 = xor i64 %2587, %2584
  %2596 = tail call i64 @llvm.cttz.i64(i64 %2595, i1 true) #8, !range !234
  %2597 = lshr i64 %2596, 3
  %2598 = or i64 %2597, %2582
  br label %2612

2599:                                             ; preds = %2589, %2569
  %2600 = phi i64 [ 0, %2569 ], [ %2591, %2589 ]
  %2601 = phi i8* [ %2575, %2569 ], [ %2590, %2589 ]
  %2602 = and i64 %2576, 7
  %2603 = icmp eq i64 %2602, 0
  br i1 %2603, label %2612, label %2604

2604:                                             ; preds = %2599
  %2605 = getelementptr inbounds i8, i8* %2573, i64 %2600
  %2606 = load i8, i8* %2605, align 1, !alias.scope !783, !noalias !780
  %2607 = load i8, i8* %2601, align 1, !alias.scope !783, !noalias !780
  %2608 = icmp eq i8 %2606, %2607
  br i1 %2608, label %2609, label %2612, !prof !235

2609:                                             ; preds = %2604
  %2610 = add i64 %2600, 1
  %2611 = icmp eq i64 %2602, 1
  br i1 %2611, label %2612, label %3865

2612:                                             ; preds = %3910, %2609, %2604, %3865, %3871, %3874, %3880, %3883, %3889, %3892, %3898, %3901, %3907, %2599, %2594
  %2613 = phi i64 [ %2598, %2594 ], [ %2600, %2599 ], [ %2600, %2604 ], [ %2610, %2609 ], [ %2610, %3865 ], [ %3872, %3871 ], [ %3872, %3874 ], [ %3881, %3880 ], [ %3881, %3883 ], [ %3890, %3889 ], [ %3890, %3892 ], [ %3899, %3898 ], [ %3899, %3901 ], [ %3908, %3907 ], [ %3917, %3910 ]
  %2614 = add i64 %2613, %2571
  %2615 = icmp ult i64 %2614, 128
  br i1 %2615, label %2616, label %2633

2616:                                             ; preds = %2612
  %2617 = add i64 %2614, %2535
  %2618 = getelementptr inbounds i8, i8* %32, i64 %2617
  %2619 = load i8, i8* %2618, align 1, !alias.scope !783, !noalias !780
  %2620 = add i64 %2614, %2560
  %2621 = getelementptr inbounds i8, i8* %32, i64 %2620
  %2622 = load i8, i8* %2621, align 1, !alias.scope !783, !noalias !780
  %2623 = icmp ugt i8 %2619, %2622
  br i1 %2623, label %2624, label %2629

2624:                                             ; preds = %2616
  %2625 = getelementptr inbounds i32, i32* %2526, i64 %2558
  store i32 %2559, i32* %2625, align 4, !noalias !788
  %2626 = and i64 %2552, %2520
  %2627 = shl nuw nsw i64 %2626, 1
  %2628 = or i64 %2627, 1
  br label %2642

2629:                                             ; preds = %2616
  %2630 = getelementptr inbounds i32, i32* %2526, i64 %2557
  store i32 %2559, i32* %2630, align 4, !noalias !788
  %2631 = and i64 %2552, %2520
  %2632 = shl nuw nsw i64 %2631, 1
  br label %2642

2633:                                             ; preds = %2612
  %2634 = and i64 %2552, %2520
  %2635 = shl nuw nsw i64 %2634, 1
  %2636 = getelementptr inbounds i32, i32* %2526, i64 %2635
  %2637 = load i32, i32* %2636, align 4, !noalias !788
  %2638 = getelementptr inbounds i32, i32* %2526, i64 %2558
  store i32 %2637, i32* %2638, align 4, !noalias !788
  %2639 = or i64 %2635, 1
  %2640 = getelementptr inbounds i32, i32* %2526, i64 %2639
  %2641 = load i32, i32* %2640, align 4, !noalias !788
  br label %2654

2642:                                             ; preds = %2629, %2624
  %2643 = phi i64 [ %2628, %2624 ], [ %2632, %2629 ]
  %2644 = phi i64 [ %2628, %2624 ], [ %2558, %2629 ]
  %2645 = phi i64 [ %2557, %2624 ], [ %2632, %2629 ]
  %2646 = phi i64 [ %2614, %2624 ], [ %2556, %2629 ]
  %2647 = phi i64 [ %2555, %2624 ], [ %2614, %2629 ]
  %2648 = getelementptr inbounds i32, i32* %2526, i64 %2643
  %2649 = load i32, i32* %2648, align 4, !noalias !788
  %2650 = add nsw i64 %2554, -1
  %2651 = zext i32 %2649 to i64
  %2652 = sub i64 %2530, %2651
  %2653 = icmp eq i64 %2652, 0
  br i1 %2653, label %2564, label %2551

2654:                                             ; preds = %2633, %2564
  %2655 = phi i64 [ %2557, %2633 ], [ %2566, %2564 ]
  %2656 = phi i32 [ %2641, %2633 ], [ %2567, %2564 ]
  %2657 = getelementptr inbounds i32, i32* %2526, i64 %2655
  store i32 %2656, i32* %2657, align 4, !noalias !788
  %2658 = add i64 %2530, 1
  %2659 = icmp ult i64 %2658, %2516
  br i1 %2659, label %2529, label %2660

2660:                                             ; preds = %2654, %1509, %1512, %1516, %1547, %1551, %1591, %1595, %1635, %1639, %1715, %1719, %1802, %1806, %1893, %1897, %1984, %1988, %2098, %2102, %2253, %2367, %2504, %2507, %2512
  %2661 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 9
  %2662 = load i64, i64* %2661, align 8
  %2663 = icmp ugt i64 %2662, 3221225471
  br i1 %2663, label %2664, label %2669

2664:                                             ; preds = %2660
  %2665 = and i64 %2662, 1073741823
  %2666 = and i64 %2662, 1073741824
  %2667 = sub nuw nsw i64 2147483648, %2666
  %2668 = or i64 %2667, %2665
  br label %2669

2669:                                             ; preds = %2660, %2664
  %2670 = phi i64 [ %2668, %2664 ], [ %2662, %2660 ]
  %2671 = load i32, i32* %49, align 4
  %2672 = icmp sgt i32 %2671, 9
  br i1 %2672, label %2673, label %2679

2673:                                             ; preds = %2669
  %2674 = load i64, i64* %15, align 8
  %2675 = sub i64 %2674, %2662
  %2676 = and i64 %2670, 4294967295
  %2677 = tail call i32 @BrotliIsMostlyUTF8(i8* %32, i64 %2676, i64 %190, i64 %2675, double 7.500000e-01) #8
  %2678 = icmp eq i32 %2677, 0
  br i1 %2678, label %2680, label %2679

2679:                                             ; preds = %2673, %2669
  br label %2680

2680:                                             ; preds = %2673, %2679
  %2681 = phi i32 [ 2, %2679 ], [ 3, %2673 ]
  %2682 = shl nuw nsw i32 %2681, 9
  %2683 = zext i32 %2682 to i64
  %2684 = getelementptr inbounds [2048 x i8], [2048 x i8]* @_kBrotliContextLookupTable, i64 0, i64 %2683
  %2685 = load i64, i64* %155, align 8
  %2686 = icmp eq i64 %2685, 0
  br i1 %2686, label %2879, label %2687

2687:                                             ; preds = %2680
  %2688 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 8
  %2689 = load i64, i64* %2688, align 8
  %2690 = icmp eq i64 %2689, 0
  br i1 %2690, label %2691, label %2879

2691:                                             ; preds = %2687
  %2692 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 5
  %2693 = load %struct.Command*, %struct.Command** %2692, align 8
  %2694 = add i64 %2685, -1
  %2695 = load i8*, i8** %31, align 8
  %2696 = load i32, i32* %33, align 4
  %2697 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 2
  %2698 = load i32, i32* %2697, align 8
  %2699 = zext i32 %2698 to i64
  %2700 = shl i64 1, %2699
  %2701 = add i64 %2700, -16
  %2702 = getelementptr inbounds %struct.Command, %struct.Command* %2693, i64 %2694, i32 1
  %2703 = load i32, i32* %2702, align 4
  %2704 = and i32 %2703, 33554431
  %2705 = zext i32 %2704 to i64
  %2706 = load i64, i64* %17, align 8
  %2707 = sub i64 %2706, %2705
  %2708 = icmp ult i64 %2707, %2701
  %2709 = select i1 %2708, i64 %2707, i64 %2701
  %2710 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 11, i64 0
  %2711 = load i32, i32* %2710, align 8
  %2712 = sext i32 %2711 to i64
  %2713 = getelementptr inbounds %struct.Command, %struct.Command* %2693, i64 %2694, i32 4
  %2714 = load i16, i16* %2713, align 2
  %2715 = zext i16 %2714 to i32
  %2716 = and i32 %2715, 1023
  %2717 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 9, i32 1
  %2718 = load i32, i32* %2717, align 4
  %2719 = add i32 %2718, 16
  %2720 = icmp ult i32 %2716, %2719
  br i1 %2720, label %2741, label %2721

2721:                                             ; preds = %2691
  %2722 = lshr i32 %2715, 10
  %2723 = getelementptr inbounds %struct.Command, %struct.Command* %2693, i64 %2694, i32 2
  %2724 = load i32, i32* %2723, align 4
  %2725 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 9, i32 0
  %2726 = load i32, i32* %2725, align 8
  %2727 = shl nsw i32 -1, %2726
  %2728 = xor i32 %2727, -1
  %2729 = sub i32 %2716, %2718
  %2730 = add i32 %2729, -16
  %2731 = lshr i32 %2730, %2726
  %2732 = and i32 %2730, %2728
  %2733 = and i32 %2731, 1
  %2734 = or i32 %2733, 2
  %2735 = shl i32 %2734, %2722
  %2736 = add i32 %2724, -4
  %2737 = add i32 %2736, %2735
  %2738 = shl i32 %2737, %2726
  %2739 = add i32 %2732, %2719
  %2740 = add i32 %2739, %2738
  br label %2741

2741:                                             ; preds = %2721, %2691
  %2742 = phi i32 [ %2740, %2721 ], [ %2716, %2691 ]
  %2743 = icmp ult i32 %2742, 16
  br i1 %2743, label %2748, label %2744

2744:                                             ; preds = %2741
  %2745 = add i32 %2742, -15
  %2746 = zext i32 %2745 to i64
  %2747 = icmp eq i64 %2746, %2712
  br i1 %2747, label %2748, label %2879

2748:                                             ; preds = %2744, %2741
  %2749 = icmp ult i64 %2709, %2712
  br i1 %2749, label %2778, label %2750

2750:                                             ; preds = %2748
  %2751 = icmp eq i32 %20, 0
  br i1 %2751, label %2778, label %2752

2752:                                             ; preds = %2750
  %2753 = zext i32 %2696 to i64
  br label %2754

2754:                                             ; preds = %2768, %2752
  %2755 = phi i32 [ %2703, %2752 ], [ %2769, %2768 ]
  %2756 = phi i32 [ %20, %2752 ], [ %2770, %2768 ]
  %2757 = phi i32 [ %29, %2752 ], [ %2771, %2768 ]
  %2758 = and i32 %2757, %2696
  %2759 = zext i32 %2758 to i64
  %2760 = getelementptr inbounds i8, i8* %2695, i64 %2759
  %2761 = load i8, i8* %2760, align 1
  %2762 = zext i32 %2757 to i64
  %2763 = sub nsw i64 %2762, %2712
  %2764 = and i64 %2763, %2753
  %2765 = getelementptr inbounds i8, i8* %2695, i64 %2764
  %2766 = load i8, i8* %2765, align 1
  %2767 = icmp eq i8 %2761, %2766
  br i1 %2767, label %2768, label %2773

2768:                                             ; preds = %2754
  %2769 = add i32 %2755, 1
  store i32 %2769, i32* %2702, align 4
  %2770 = add i32 %2756, -1
  %2771 = add i32 %2757, 1
  %2772 = icmp eq i32 %2770, 0
  br i1 %2772, label %2773, label %2754

2773:                                             ; preds = %2768, %2754
  %2774 = phi i32 [ %2769, %2768 ], [ %2755, %2754 ]
  %2775 = phi i32 [ 0, %2768 ], [ %2756, %2754 ]
  %2776 = phi i32 [ %2771, %2768 ], [ %2757, %2754 ]
  %2777 = and i32 %2774, 33554431
  br label %2778

2778:                                             ; preds = %2773, %2750, %2748
  %2779 = phi i32 [ %20, %2748 ], [ 0, %2750 ], [ %2775, %2773 ]
  %2780 = phi i32 [ %29, %2748 ], [ %29, %2750 ], [ %2776, %2773 ]
  %2781 = phi i32 [ %2704, %2748 ], [ %2704, %2750 ], [ %2777, %2773 ]
  %2782 = phi i32 [ %2703, %2748 ], [ %2703, %2750 ], [ %2774, %2773 ]
  %2783 = getelementptr inbounds %struct.Command, %struct.Command* %2693, i64 %2694, i32 0
  %2784 = load i32, i32* %2783, align 4
  %2785 = zext i32 %2784 to i64
  %2786 = lshr i32 %2782, 25
  %2787 = add nuw nsw i32 %2786, %2781
  %2788 = zext i32 %2787 to i64
  %2789 = and i16 %2714, 1023
  %2790 = icmp eq i16 %2789, 0
  %2791 = getelementptr inbounds %struct.Command, %struct.Command* %2693, i64 %2694, i32 3
  %2792 = icmp ult i32 %2784, 6
  br i1 %2792, label %2793, label %2795

2793:                                             ; preds = %2778
  %2794 = trunc i32 %2784 to i16
  br label %2821

2795:                                             ; preds = %2778
  %2796 = icmp ult i32 %2784, 130
  br i1 %2796, label %2797, label %2809

2797:                                             ; preds = %2795
  %2798 = add nsw i64 %2785, -2
  %2799 = trunc i64 %2798 to i32
  %2800 = tail call i32 @llvm.ctlz.i32(i32 %2799, i1 true) #8, !range !236
  %2801 = sub nsw i32 30, %2800
  %2802 = shl nsw i32 %2801, 1
  %2803 = zext i32 %2802 to i64
  %2804 = zext i32 %2801 to i64
  %2805 = lshr i64 %2798, %2804
  %2806 = add nuw nsw i64 %2805, %2803
  %2807 = trunc i64 %2806 to i16
  %2808 = add i16 %2807, 2
  br label %2821

2809:                                             ; preds = %2795
  %2810 = icmp ult i32 %2784, 2114
  br i1 %2810, label %2811, label %2816

2811:                                             ; preds = %2809
  %2812 = add nsw i32 %2784, -66
  %2813 = tail call i32 @llvm.ctlz.i32(i32 %2812, i1 true) #8, !range !236
  %2814 = trunc i32 %2813 to i16
  %2815 = sub nuw nsw i16 41, %2814
  br label %2821

2816:                                             ; preds = %2809
  %2817 = icmp ult i32 %2784, 6210
  br i1 %2817, label %2821, label %2818

2818:                                             ; preds = %2816
  %2819 = icmp ult i32 %2784, 22594
  %2820 = select i1 %2819, i16 22, i16 23
  br label %2821

2821:                                             ; preds = %2818, %2816, %2811, %2797, %2793
  %2822 = phi i16 [ %2794, %2793 ], [ %2808, %2797 ], [ %2815, %2811 ], [ 21, %2816 ], [ %2820, %2818 ]
  %2823 = icmp ult i32 %2787, 10
  br i1 %2823, label %2824, label %2827

2824:                                             ; preds = %2821
  %2825 = trunc i32 %2787 to i16
  %2826 = add nsw i16 %2825, -2
  br label %2848

2827:                                             ; preds = %2821
  %2828 = icmp ult i32 %2787, 134
  br i1 %2828, label %2829, label %2841

2829:                                             ; preds = %2827
  %2830 = add nsw i64 %2788, -6
  %2831 = trunc i64 %2830 to i32
  %2832 = tail call i32 @llvm.ctlz.i32(i32 %2831, i1 true) #8, !range !236
  %2833 = sub nsw i32 30, %2832
  %2834 = shl nsw i32 %2833, 1
  %2835 = zext i32 %2834 to i64
  %2836 = zext i32 %2833 to i64
  %2837 = lshr i64 %2830, %2836
  %2838 = add nuw nsw i64 %2837, %2835
  %2839 = trunc i64 %2838 to i16
  %2840 = add i16 %2839, 4
  br label %2848

2841:                                             ; preds = %2827
  %2842 = icmp ult i32 %2787, 2118
  br i1 %2842, label %2843, label %2848

2843:                                             ; preds = %2841
  %2844 = add nsw i32 %2787, -70
  %2845 = tail call i32 @llvm.ctlz.i32(i32 %2844, i1 true) #8, !range !236
  %2846 = trunc i32 %2845 to i16
  %2847 = sub nuw nsw i16 43, %2846
  br label %2848

2848:                                             ; preds = %2843, %2841, %2829, %2824
  %2849 = phi i16 [ %2826, %2824 ], [ %2840, %2829 ], [ %2847, %2843 ], [ 23, %2841 ]
  %2850 = and i16 %2849, 7
  %2851 = shl i16 %2822, 3
  %2852 = and i16 %2851, 56
  %2853 = or i16 %2850, %2852
  %2854 = icmp ult i16 %2822, 8
  %2855 = and i1 %2790, %2854
  %2856 = icmp ult i16 %2849, 16
  %2857 = and i1 %2855, %2856
  br i1 %2857, label %2858, label %2862

2858:                                             ; preds = %2848
  %2859 = icmp ult i16 %2849, 8
  %2860 = or i16 %2853, 64
  %2861 = select i1 %2859, i16 %2853, i16 %2860
  br label %2877

2862:                                             ; preds = %2848
  %2863 = lshr i16 %2849, 3
  %2864 = lshr i16 %2822, 3
  %2865 = mul nuw nsw i16 %2864, 3
  %2866 = add nuw nsw i16 %2863, %2865
  %2867 = zext i16 %2866 to i32
  %2868 = shl nuw i16 %2866, 1
  %2869 = zext i16 %2868 to i32
  %2870 = shl nuw nsw i32 %2867, 6
  %2871 = add nuw nsw i32 %2870, 64
  %2872 = lshr i32 5377344, %2869
  %2873 = and i32 %2872, 192
  %2874 = add nuw nsw i32 %2871, %2873
  %2875 = trunc i32 %2874 to i16
  %2876 = or i16 %2853, %2875
  br label %2877

2877:                                             ; preds = %2862, %2858
  %2878 = phi i16 [ %2861, %2858 ], [ %2876, %2862 ]
  store i16 %2878, i16* %2791, align 2
  br label %2879

2879:                                             ; preds = %2877, %2744, %2680, %2687
  %2880 = phi i32 [ %20, %2680 ], [ %20, %2687 ], [ %2779, %2877 ], [ %20, %2744 ]
  %2881 = phi i32 [ %29, %2680 ], [ %29, %2687 ], [ %2780, %2877 ], [ %29, %2744 ]
  %2882 = load i32, i32* %49, align 4
  switch i32 %2882, label %2903 [
    i32 10, label %2883
    i32 11, label %2893
  ]

2883:                                             ; preds = %2879
  %2884 = zext i32 %2880 to i64
  %2885 = zext i32 %2881 to i64
  %2886 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 11, i64 0
  %2887 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 8
  %2888 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 5
  %2889 = load %struct.Command*, %struct.Command** %2888, align 8
  %2890 = load i64, i64* %155, align 8
  %2891 = getelementptr inbounds %struct.Command, %struct.Command* %2889, i64 %2890
  %2892 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 7
  tail call void @BrotliCreateZopfliBackwardReferences(%struct.MemoryManager* %30, i64 %2884, i64 %2885, i8* %32, i64 %190, i8* %2684, %struct.BrotliEncoderParams* %48, %struct.Hasher* %189, i32* %2886, i64* %2887, %struct.Command* %2891, i64* %155, i64* %2892) #8
  br label %2913

2893:                                             ; preds = %2879
  %2894 = zext i32 %2880 to i64
  %2895 = zext i32 %2881 to i64
  %2896 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 11, i64 0
  %2897 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 8
  %2898 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 5
  %2899 = load %struct.Command*, %struct.Command** %2898, align 8
  %2900 = load i64, i64* %155, align 8
  %2901 = getelementptr inbounds %struct.Command, %struct.Command* %2899, i64 %2900
  %2902 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 7
  tail call void @BrotliCreateHqZopfliBackwardReferences(%struct.MemoryManager* %30, i64 %2894, i64 %2895, i8* %32, i64 %190, i8* %2684, %struct.BrotliEncoderParams* %48, %struct.Hasher* %189, i32* %2896, i64* %2897, %struct.Command* %2901, i64* %155, i64* %2902) #8
  br label %2913

2903:                                             ; preds = %2879
  %2904 = zext i32 %2880 to i64
  %2905 = zext i32 %2881 to i64
  %2906 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 11, i64 0
  %2907 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 8
  %2908 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 5
  %2909 = load %struct.Command*, %struct.Command** %2908, align 8
  %2910 = load i64, i64* %155, align 8
  %2911 = getelementptr inbounds %struct.Command, %struct.Command* %2909, i64 %2910
  %2912 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 7
  tail call void @BrotliCreateBackwardReferences(i64 %2904, i64 %2905, i8* %32, i64 %190, i8* %2684, %struct.BrotliEncoderParams* %48, %struct.Hasher* %189, i32* %2906, i64* %2907, %struct.Command* %2911, i64* %155, i64* %2912) #8
  br label %2913

2913:                                             ; preds = %2893, %2903, %2883
  %2914 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 2
  %2915 = load i32, i32* %2914, align 8
  %2916 = load i32, i32* %42, align 4
  %2917 = icmp sgt i32 %2915, %2916
  %2918 = select i1 %2917, i32 %2915, i32 %2916
  %2919 = icmp slt i32 %2918, 23
  %2920 = select i1 %2919, i32 %2918, i32 23
  %2921 = add nsw i32 %2920, 1
  %2922 = zext i32 %2921 to i64
  %2923 = shl i64 1, %2922
  %2924 = lshr i64 %2923, 3
  %2925 = load i64, i64* %15, align 8
  %2926 = load i64, i64* %2661, align 8
  %2927 = sub i64 %2925, %2926
  %2928 = zext i32 %2916 to i64
  %2929 = shl i64 1, %2928
  %2930 = add i64 %2927, %2929
  %2931 = icmp ule i64 %2930, %2923
  %2932 = load i32, i32* %49, align 4
  %2933 = icmp slt i32 %2932, 4
  br i1 %2933, label %2934, label %2940

2934:                                             ; preds = %2913
  %2935 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 7
  %2936 = load i64, i64* %2935, align 8
  %2937 = load i64, i64* %155, align 8
  %2938 = add i64 %2937, %2936
  %2939 = icmp ugt i64 %2938, 12286
  br label %2940

2940:                                             ; preds = %2934, %2913
  %2941 = phi i1 [ false, %2913 ], [ %2939, %2934 ]
  %2942 = or i32 %2, %1
  %2943 = icmp ne i32 %2942, 0
  %2944 = or i1 %2943, %2941
  %2945 = xor i1 %2944, true
  %2946 = and i1 %2931, %2945
  br i1 %2946, label %2947, label %2978

2947:                                             ; preds = %2940
  %2948 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 7
  %2949 = load i64, i64* %2948, align 8
  %2950 = icmp ult i64 %2949, %2924
  br i1 %2950, label %2951, label %2978

2951:                                             ; preds = %2947
  %2952 = load i64, i64* %155, align 8
  %2953 = icmp ult i64 %2952, %2924
  br i1 %2953, label %2954, label %2978

2954:                                             ; preds = %2951
  %2955 = load i64, i64* %17, align 8
  %2956 = trunc i64 %2955 to i32
  %2957 = icmp ugt i64 %2955, 3221225471
  br i1 %2957, label %2958, label %2963

2958:                                             ; preds = %2954
  %2959 = and i32 %2956, 1073741823
  %2960 = and i32 %2956, 1073741824
  %2961 = sub nuw i32 -2147483648, %2960
  %2962 = or i32 %2961, %2959
  br label %2963

2963:                                             ; preds = %2958, %2954
  %2964 = phi i32 [ %2962, %2958 ], [ %2956, %2954 ]
  %2965 = trunc i64 %2925 to i32
  %2966 = icmp ugt i64 %2925, 3221225471
  br i1 %2966, label %2967, label %2972

2967:                                             ; preds = %2963
  %2968 = and i32 %2965, 1073741823
  %2969 = and i32 %2965, 1073741824
  %2970 = sub nuw i32 -2147483648, %2969
  %2971 = or i32 %2970, %2968
  br label %2972

2972:                                             ; preds = %2963, %2967
  %2973 = phi i32 [ %2971, %2967 ], [ %2965, %2963 ]
  store i64 %2925, i64* %17, align 8
  %2974 = icmp ult i32 %2973, %2964
  br i1 %2974, label %2975, label %2977

2975:                                             ; preds = %2972
  %2976 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 0, i32 4
  store i32 0, i32* %2976, align 4
  br label %2977

2977:                                             ; preds = %2972, %2975
  store i64 0, i64* %3, align 8
  br label %3863

2978:                                             ; preds = %2940, %2951, %2947
  %2979 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 8
  %2980 = load i64, i64* %2979, align 8
  %2981 = icmp eq i64 %2980, 0
  br i1 %2981, label %3043, label %2982

2982:                                             ; preds = %2978
  %2983 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 5
  %2984 = load %struct.Command*, %struct.Command** %2983, align 8
  %2985 = load i64, i64* %155, align 8
  %2986 = add i64 %2985, 1
  store i64 %2986, i64* %155, align 8
  %2987 = trunc i64 %2980 to i32
  %2988 = getelementptr inbounds %struct.Command, %struct.Command* %2984, i64 %2985, i32 0
  store i32 %2987, i32* %2988, align 4
  %2989 = getelementptr inbounds %struct.Command, %struct.Command* %2984, i64 %2985, i32 1
  store i32 134217728, i32* %2989, align 4
  %2990 = getelementptr inbounds %struct.Command, %struct.Command* %2984, i64 %2985, i32 2
  store i32 0, i32* %2990, align 4
  %2991 = getelementptr inbounds %struct.Command, %struct.Command* %2984, i64 %2985, i32 4
  store i16 16, i16* %2991, align 2
  %2992 = getelementptr inbounds %struct.Command, %struct.Command* %2984, i64 %2985, i32 3
  %2993 = icmp ult i64 %2980, 6
  br i1 %2993, label %2994, label %2996

2994:                                             ; preds = %2982
  %2995 = trunc i64 %2980 to i16
  br label %3022

2996:                                             ; preds = %2982
  %2997 = icmp ult i64 %2980, 130
  br i1 %2997, label %2998, label %3010

2998:                                             ; preds = %2996
  %2999 = add nsw i64 %2980, -2
  %3000 = trunc i64 %2999 to i32
  %3001 = tail call i32 @llvm.ctlz.i32(i32 %3000, i1 true) #8, !range !236
  %3002 = sub nsw i32 30, %3001
  %3003 = shl nsw i32 %3002, 1
  %3004 = zext i32 %3003 to i64
  %3005 = zext i32 %3002 to i64
  %3006 = lshr i64 %2999, %3005
  %3007 = add nuw nsw i64 %3006, %3004
  %3008 = trunc i64 %3007 to i16
  %3009 = add i16 %3008, 2
  br label %3022

3010:                                             ; preds = %2996
  %3011 = icmp ult i64 %2980, 2114
  br i1 %3011, label %3012, label %3017

3012:                                             ; preds = %3010
  %3013 = add nsw i32 %2987, -66
  %3014 = tail call i32 @llvm.ctlz.i32(i32 %3013, i1 true) #8, !range !236
  %3015 = trunc i32 %3014 to i16
  %3016 = sub nuw nsw i16 41, %3015
  br label %3022

3017:                                             ; preds = %3010
  %3018 = icmp ult i64 %2980, 6210
  br i1 %3018, label %3022, label %3019

3019:                                             ; preds = %3017
  %3020 = icmp ult i64 %2980, 22594
  %3021 = select i1 %3020, i16 22, i16 23
  br label %3022

3022:                                             ; preds = %2994, %2998, %3012, %3017, %3019
  %3023 = phi i16 [ %2995, %2994 ], [ %3009, %2998 ], [ %3016, %3012 ], [ 21, %3017 ], [ %3021, %3019 ]
  %3024 = shl i16 %3023, 3
  %3025 = and i16 %3024, 56
  %3026 = lshr i16 %3023, 3
  %3027 = mul nuw nsw i16 %3026, 3
  %3028 = zext i16 %3027 to i32
  %3029 = mul nuw i16 %3026, 6
  %3030 = zext i16 %3029 to i32
  %3031 = shl nuw nsw i32 %3028, 6
  %3032 = add nuw nsw i32 %3031, 64
  %3033 = lshr i32 5377344, %3030
  %3034 = and i32 %3033, 192
  %3035 = add nuw nsw i32 %3032, %3034
  %3036 = trunc i32 %3035 to i16
  %3037 = or i16 %3025, %3036
  %3038 = or i16 %3037, 2
  store i16 %3038, i16* %2992, align 2
  %3039 = load i64, i64* %2979, align 8
  %3040 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 7
  %3041 = load i64, i64* %3040, align 8
  %3042 = add i64 %3041, %3039
  store i64 %3042, i64* %3040, align 8
  store i64 0, i64* %2979, align 8
  br label %3043

3043:                                             ; preds = %2978, %3022
  %3044 = load i64, i64* %15, align 8
  %3045 = load i64, i64* %2661, align 8
  %3046 = xor i1 %39, true
  %3047 = icmp eq i64 %3044, %3045
  %3048 = and i1 %3047, %3046
  br i1 %3048, label %3049, label %3050

3049:                                             ; preds = %3043
  store i64 0, i64* %3, align 8
  br label %3863

3050:                                             ; preds = %3043
  %3051 = sub i64 %3044, %3045
  %3052 = shl i64 %3051, 1
  %3053 = add i64 %3052, 503
  %3054 = and i64 %3053, 4294967295
  %3055 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 18
  %3056 = load i64, i64* %3055, align 8
  %3057 = icmp ult i64 %3056, %3054
  %3058 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 19
  %3059 = load i8*, i8** %3058, align 8
  br i1 %3057, label %3060, label %3062

3060:                                             ; preds = %3050
  tail call void @BrotliFree(%struct.MemoryManager* %30, i8* %3059) #8
  store i8* null, i8** %3058, align 8
  %3061 = tail call i8* @BrotliAllocate(%struct.MemoryManager* %30, i64 %3054) #8
  store i8* %3061, i8** %3058, align 8
  store i64 %3054, i64* %3055, align 8
  br label %3062

3062:                                             ; preds = %3050, %3060
  %3063 = phi i8* [ %3061, %3060 ], [ %3059, %3050 ]
  %3064 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3064) #8
  %3065 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 14
  %3066 = load i8, i8* %3065, align 2
  %3067 = zext i8 %3066 to i64
  store i64 %3067, i64* %14, align 8
  %3068 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 13
  %3069 = load i16, i16* %3068, align 8
  %3070 = trunc i16 %3069 to i8
  store i8 %3070, i8* %3063, align 1
  %3071 = load i16, i16* %3068, align 8
  %3072 = lshr i16 %3071, 8
  %3073 = trunc i16 %3072 to i8
  %3074 = getelementptr inbounds i8, i8* %3063, i64 1
  store i8 %3073, i8* %3074, align 1
  %3075 = load i64, i64* %2661, align 8
  %3076 = and i64 %3051, 4294967295
  %3077 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 16
  %3078 = load i8, i8* %3077, align 4
  %3079 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 17
  %3080 = load i8, i8* %3079, align 1
  %3081 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 7
  %3082 = load i64, i64* %3081, align 8
  %3083 = load i64, i64* %155, align 8
  %3084 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 5
  %3085 = load %struct.Command*, %struct.Command** %3084, align 8
  %3086 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 12, i64 0
  %3087 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 11, i64 0
  %3088 = trunc i64 %3075 to i32
  %3089 = icmp ugt i64 %3075, 3221225471
  br i1 %3089, label %3090, label %3095

3090:                                             ; preds = %3062
  %3091 = and i32 %3088, 1073741823
  %3092 = and i32 %3088, 1073741824
  %3093 = sub nuw i32 -2147483648, %3092
  %3094 = or i32 %3093, %3091
  br label %3095

3095:                                             ; preds = %3090, %3062
  %3096 = phi i32 [ %3094, %3090 ], [ %3088, %3062 ]
  %3097 = bitcast %struct.BrotliEncoderParams* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %3097) #8
  %3098 = bitcast %struct.BrotliEncoderStateStruct* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3097, i8* align 8 %3098, i64 144, i1 false) #8
  %3099 = icmp eq i64 %3076, 0
  br i1 %3099, label %3100, label %3112

3100:                                             ; preds = %3095
  %3101 = load i64, i64* %14, align 8, !alias.scope !789, !noalias !792
  %3102 = lshr i64 %3101, 3
  %3103 = getelementptr inbounds i8, i8* %3063, i64 %3102
  %3104 = load i8, i8* %3103, align 1, !alias.scope !792, !noalias !789
  %3105 = zext i8 %3104 to i64
  %3106 = and i64 %3101, 7
  %3107 = shl i64 3, %3106
  %3108 = or i64 %3107, %3105
  %3109 = bitcast i8* %3103 to i64*
  store i64 %3108, i64* %3109, align 8, !alias.scope !792, !noalias !789
  %3110 = add i64 %3101, 9
  %3111 = and i64 %3110, 4294967288
  store i64 %3111, i64* %14, align 8
  br label %3813

3112:                                             ; preds = %3095
  %3113 = tail call fastcc i32 @ShouldCompress(i8* %32, i64 %190, i64 %3075, i64 %3076, i64 %3082, i64 %3083) #8
  %3114 = icmp eq i32 %3113, 0
  br i1 %3114, label %3115, label %3119

3115:                                             ; preds = %3112
  %3116 = bitcast i32* %3087 to i8*
  %3117 = bitcast i32* %3086 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3116, i8* align 4 %3117, i64 16, i1 false) #8
  %3118 = zext i32 %3096 to i64
  call void @BrotliStoreUncompressedMetaBlock(i32 %1, i8* %32, i64 %3118, i64 %190, i64 %3076, i64* nonnull %14, i8* %3063) #8
  br label %3813

3119:                                             ; preds = %3112
  %3120 = load i8, i8* %3074, align 1
  %3121 = load i8, i8* %3063, align 1
  %3122 = load i64, i64* %14, align 8
  %3123 = load i32, i32* %49, align 4
  %3124 = icmp slt i32 %3123, 3
  br i1 %3124, label %3125, label %3127

3125:                                             ; preds = %3119
  %3126 = zext i32 %3096 to i64
  call void @BrotliStoreMetaBlockFast(%struct.MemoryManager* %30, i8* %32, i64 %3126, i64 %3076, i64 %190, i32 %1, %struct.BrotliEncoderParams* %48, %struct.Command* %3085, i64 %3083, i64* nonnull %14, i8* %3063) #8
  br label %3803

3127:                                             ; preds = %3119
  %3128 = icmp eq i32 %3123, 3
  br i1 %3128, label %3129, label %3131

3129:                                             ; preds = %3127
  %3130 = zext i32 %3096 to i64
  call void @BrotliStoreMetaBlockTrivial(%struct.MemoryManager* %30, i8* %32, i64 %3130, i64 %3076, i64 %190, i32 %1, %struct.BrotliEncoderParams* %48, %struct.Command* %3085, i64 %3083, i64* nonnull %14, i8* %3063) #8
  br label %3803

3131:                                             ; preds = %3127
  %3132 = bitcast %struct.MetaBlockSplit* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 224, i8* nonnull %3132) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3132, i8 -86, i64 224, i1 false) #8
  %3133 = getelementptr inbounds %struct.MetaBlockSplit, %struct.MetaBlockSplit* %12, i64 0, i32 0
  call void @BrotliInitBlockSplit(%struct.BlockSplit* nonnull %3133) #8
  %3134 = getelementptr inbounds %struct.MetaBlockSplit, %struct.MetaBlockSplit* %12, i64 0, i32 1
  call void @BrotliInitBlockSplit(%struct.BlockSplit* %3134) #8
  %3135 = getelementptr inbounds %struct.MetaBlockSplit, %struct.MetaBlockSplit* %12, i64 0, i32 2
  call void @BrotliInitBlockSplit(%struct.BlockSplit* %3135) #8
  %3136 = getelementptr inbounds %struct.MetaBlockSplit, %struct.MetaBlockSplit* %12, i64 0, i32 3
  %3137 = bitcast i32** %3136 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3137, i8 0, i64 80, i1 false) #8
  %3138 = load i32, i32* %49, align 4
  %3139 = icmp slt i32 %3138, 10
  br i1 %3139, label %3140, label %3779

3140:                                             ; preds = %3131
  %3141 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 6
  %3142 = load i32, i32* %3141, align 8
  %3143 = icmp eq i32 %3142, 0
  %3144 = zext i32 %3096 to i64
  br i1 %3143, label %3145, label %3776

3145:                                             ; preds = %3140
  %3146 = icmp slt i32 %3138, 5
  %3147 = icmp ult i64 %3076, 64
  %3148 = or i1 %3147, %3146
  br i1 %3148, label %3776, label %3149

3149:                                             ; preds = %3145
  %3150 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 0, i32 5
  %3151 = load i64, i64* %3150, align 8
  %3152 = icmp ult i64 %3151, 1048576
  %3153 = add nuw nsw i64 %3076, %3144
  br i1 %3152, label %3154, label %3156

3154:                                             ; preds = %3149
  %3155 = add nuw nsw i64 %3144, 64
  br label %3336

3156:                                             ; preds = %3149
  %3157 = bitcast [32 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %3157) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %3157, i8 0, i64 128, i1 false) #8
  %3158 = bitcast [13 x [32 x i32]]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1664, i8* nonnull %3158) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %3158, i8 0, i64 1664, i1 false) #8
  %3159 = add nuw nsw i64 %3144, 64
  %3160 = icmp ugt i64 %3159, %3153
  br i1 %3160, label %3211, label %3161

3161:                                             ; preds = %3156, %3206
  %3162 = phi i64 [ %3209, %3206 ], [ %3159, %3156 ]
  %3163 = phi i64 [ %3208, %3206 ], [ %3144, %3156 ]
  %3164 = phi i32 [ %3207, %3206 ], [ 0, %3156 ]
  %3165 = add nuw nsw i64 %3163, 2
  %3166 = icmp ult i64 %3165, %3162
  br i1 %3166, label %3167, label %3206

3167:                                             ; preds = %3161
  %3168 = add nuw nsw i64 %3163, 1
  %3169 = and i64 %3168, %190
  %3170 = getelementptr inbounds i8, i8* %32, i64 %3169
  %3171 = load i8, i8* %3170, align 1
  %3172 = and i64 %3163, %190
  %3173 = getelementptr inbounds i8, i8* %32, i64 %3172
  %3174 = load i8, i8* %3173, align 1
  br label %3175

3175:                                             ; preds = %3175, %3167
  %3176 = phi i64 [ %3202, %3175 ], [ %3165, %3167 ]
  %3177 = phi i8 [ %3181, %3175 ], [ %3171, %3167 ]
  %3178 = phi i8 [ %3177, %3175 ], [ %3174, %3167 ]
  %3179 = and i64 %3176, %190
  %3180 = getelementptr inbounds i8, i8* %32, i64 %3179
  %3181 = load i8, i8* %3180, align 1
  %3182 = zext i8 %3177 to i64
  %3183 = getelementptr inbounds i8, i8* getelementptr inbounds ([2048 x i8], [2048 x i8]* @_kBrotliContextLookupTable, i64 0, i64 1024), i64 %3182
  %3184 = load i8, i8* %3183, align 1
  %3185 = zext i8 %3178 to i64
  %3186 = getelementptr inbounds i8, i8* getelementptr inbounds ([2048 x i8], [2048 x i8]* @_kBrotliContextLookupTable, i64 0, i64 1280), i64 %3185
  %3187 = load i8, i8* %3186, align 1
  %3188 = or i8 %3187, %3184
  %3189 = zext i8 %3188 to i64
  %3190 = getelementptr inbounds [64 x i32], [64 x i32]* @ShouldUseComplexStaticContextMap.kStaticContextMapComplexUTF8, i64 0, i64 %3189
  %3191 = load i32, i32* %3190, align 4
  %3192 = lshr i8 %3181, 3
  %3193 = zext i8 %3192 to i64
  %3194 = getelementptr inbounds [32 x i32], [32 x i32]* %8, i64 0, i64 %3193
  %3195 = load i32, i32* %3194, align 4
  %3196 = add i32 %3195, 1
  store i32 %3196, i32* %3194, align 4
  %3197 = and i32 %3191, 255
  %3198 = zext i32 %3197 to i64
  %3199 = getelementptr inbounds [13 x [32 x i32]], [13 x [32 x i32]]* %9, i64 0, i64 %3198, i64 %3193
  %3200 = load i32, i32* %3199, align 4
  %3201 = add i32 %3200, 1
  store i32 %3201, i32* %3199, align 4
  %3202 = add nuw i64 %3176, 1
  %3203 = icmp eq i64 %3202, %3162
  br i1 %3203, label %3204, label %3175

3204:                                             ; preds = %3175
  %3205 = add i32 %3164, 62
  br label %3206

3206:                                             ; preds = %3204, %3161
  %3207 = phi i32 [ %3164, %3161 ], [ %3205, %3204 ]
  %3208 = add nuw nsw i64 %3163, 4096
  %3209 = add i64 %3162, 4096
  %3210 = icmp ugt i64 %3209, %3153
  br i1 %3210, label %3211, label %3161

3211:                                             ; preds = %3206, %3156
  %3212 = phi i32 [ 0, %3156 ], [ %3207, %3206 ]
  %3213 = getelementptr inbounds [32 x i32], [32 x i32]* %8, i64 0, i64 0
  %3214 = getelementptr inbounds [32 x i32], [32 x i32]* %8, i64 0, i64 32
  br label %3215

3215:                                             ; preds = %3245, %3211
  %3216 = phi double [ 0.000000e+00, %3211 ], [ %3248, %3245 ]
  %3217 = phi i64 [ 0, %3211 ], [ %3237, %3245 ]
  %3218 = phi i32* [ %3213, %3211 ], [ %3234, %3245 ]
  %3219 = getelementptr inbounds i32, i32* %3218, i64 1
  %3220 = load i32, i32* %3218, align 4
  %3221 = zext i32 %3220 to i64
  %3222 = add i64 %3217, %3221
  %3223 = uitofp i32 %3220 to double
  %3224 = icmp ult i32 %3220, 256
  br i1 %3224, label %3225, label %3228

3225:                                             ; preds = %3215
  %3226 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %3221
  %3227 = load double, double* %3226, align 8
  br label %3230

3228:                                             ; preds = %3215
  %3229 = call double @log2(double %3223) #8
  br label %3230

3230:                                             ; preds = %3228, %3225
  %3231 = phi double [ %3227, %3225 ], [ %3229, %3228 ]
  %3232 = fmul double %3231, %3223
  %3233 = fsub double %3216, %3232
  %3234 = getelementptr inbounds i32, i32* %3218, i64 2
  %3235 = load i32, i32* %3219, align 4
  %3236 = zext i32 %3235 to i64
  %3237 = add i64 %3222, %3236
  %3238 = uitofp i32 %3235 to double
  %3239 = icmp ult i32 %3235, 256
  br i1 %3239, label %3240, label %3243

3240:                                             ; preds = %3230
  %3241 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %3236
  %3242 = load double, double* %3241, align 8
  br label %3245

3243:                                             ; preds = %3230
  %3244 = call double @log2(double %3238) #8
  br label %3245

3245:                                             ; preds = %3243, %3240
  %3246 = phi double [ %3242, %3240 ], [ %3244, %3243 ]
  %3247 = fmul double %3246, %3238
  %3248 = fsub double %3233, %3247
  %3249 = icmp ult i32* %3234, %3214
  br i1 %3249, label %3215, label %3250

3250:                                             ; preds = %3245
  %3251 = icmp eq i64 %3237, 0
  br i1 %3251, label %3264, label %3252

3252:                                             ; preds = %3250
  %3253 = uitofp i64 %3237 to double
  %3254 = icmp ult i64 %3237, 256
  br i1 %3254, label %3255, label %3258

3255:                                             ; preds = %3252
  %3256 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %3237
  %3257 = load double, double* %3256, align 8
  br label %3260

3258:                                             ; preds = %3252
  %3259 = call double @log2(double %3253) #8
  br label %3260

3260:                                             ; preds = %3258, %3255
  %3261 = phi double [ %3257, %3255 ], [ %3259, %3258 ]
  %3262 = fmul double %3261, %3253
  %3263 = fadd double %3248, %3262
  br label %3264

3264:                                             ; preds = %3260, %3250
  %3265 = phi double [ %3263, %3260 ], [ %3248, %3250 ]
  br label %3266

3266:                                             ; preds = %3320, %3264
  %3267 = phi i64 [ 0, %3264 ], [ %3323, %3320 ]
  %3268 = phi double [ 0.000000e+00, %3264 ], [ %3322, %3320 ]
  %3269 = getelementptr inbounds [13 x [32 x i32]], [13 x [32 x i32]]* %9, i64 0, i64 %3267, i64 32
  %3270 = getelementptr inbounds [13 x [32 x i32]], [13 x [32 x i32]]* %9, i64 0, i64 %3267, i64 0
  br label %3271

3271:                                             ; preds = %3301, %3266
  %3272 = phi double [ %3304, %3301 ], [ 0.000000e+00, %3266 ]
  %3273 = phi i64 [ %3293, %3301 ], [ 0, %3266 ]
  %3274 = phi i32* [ %3290, %3301 ], [ %3270, %3266 ]
  %3275 = getelementptr inbounds i32, i32* %3274, i64 1
  %3276 = load i32, i32* %3274, align 4
  %3277 = zext i32 %3276 to i64
  %3278 = add i64 %3273, %3277
  %3279 = uitofp i32 %3276 to double
  %3280 = icmp ult i32 %3276, 256
  br i1 %3280, label %3281, label %3284

3281:                                             ; preds = %3271
  %3282 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %3277
  %3283 = load double, double* %3282, align 8
  br label %3286

3284:                                             ; preds = %3271
  %3285 = call double @log2(double %3279) #8
  br label %3286

3286:                                             ; preds = %3284, %3281
  %3287 = phi double [ %3283, %3281 ], [ %3285, %3284 ]
  %3288 = fmul double %3287, %3279
  %3289 = fsub double %3272, %3288
  %3290 = getelementptr inbounds i32, i32* %3274, i64 2
  %3291 = load i32, i32* %3275, align 4
  %3292 = zext i32 %3291 to i64
  %3293 = add i64 %3278, %3292
  %3294 = uitofp i32 %3291 to double
  %3295 = icmp ult i32 %3291, 256
  br i1 %3295, label %3296, label %3299

3296:                                             ; preds = %3286
  %3297 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %3292
  %3298 = load double, double* %3297, align 8
  br label %3301

3299:                                             ; preds = %3286
  %3300 = call double @log2(double %3294) #8
  br label %3301

3301:                                             ; preds = %3299, %3296
  %3302 = phi double [ %3298, %3296 ], [ %3300, %3299 ]
  %3303 = fmul double %3302, %3294
  %3304 = fsub double %3289, %3303
  %3305 = icmp ult i32* %3290, %3269
  br i1 %3305, label %3271, label %3306

3306:                                             ; preds = %3301
  %3307 = icmp eq i64 %3293, 0
  br i1 %3307, label %3320, label %3308

3308:                                             ; preds = %3306
  %3309 = uitofp i64 %3293 to double
  %3310 = icmp ult i64 %3293, 256
  br i1 %3310, label %3311, label %3314

3311:                                             ; preds = %3308
  %3312 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %3293
  %3313 = load double, double* %3312, align 8
  br label %3316

3314:                                             ; preds = %3308
  %3315 = call double @log2(double %3309) #8
  br label %3316

3316:                                             ; preds = %3314, %3311
  %3317 = phi double [ %3313, %3311 ], [ %3315, %3314 ]
  %3318 = fmul double %3317, %3309
  %3319 = fadd double %3304, %3318
  br label %3320

3320:                                             ; preds = %3316, %3306
  %3321 = phi double [ %3319, %3316 ], [ %3304, %3306 ]
  %3322 = fadd double %3268, %3321
  %3323 = add nuw nsw i64 %3267, 1
  %3324 = icmp eq i64 %3323, 13
  br i1 %3324, label %3325, label %3266

3325:                                             ; preds = %3320
  %3326 = uitofp i32 %3212 to double
  %3327 = fdiv double 1.000000e+00, %3326
  %3328 = fmul double %3327, %3322
  %3329 = fcmp ogt double %3328, 3.000000e+00
  br i1 %3329, label %3334, label %3330

3330:                                             ; preds = %3325
  %3331 = fmul double %3327, %3265
  %3332 = fsub double %3331, %3328
  %3333 = fcmp olt double %3332, 2.000000e-01
  br i1 %3333, label %3334, label %3335

3334:                                             ; preds = %3330, %3325
  call void @llvm.lifetime.end.p0i8(i64 1664, i8* nonnull %3158) #8
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %3157) #8
  br label %3336

3335:                                             ; preds = %3330
  call void @llvm.lifetime.end.p0i8(i64 1664, i8* nonnull %3158) #8
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %3157) #8
  br label %3776

3336:                                             ; preds = %3334, %3154
  %3337 = phi i64 [ %3155, %3154 ], [ %3159, %3334 ]
  %3338 = bitcast [9 x i32]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %3338) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %3338, i8 0, i64 36, i1 false) #8
  %3339 = icmp ugt i64 %3337, %3153
  br i1 %3339, label %3394, label %3340

3340:                                             ; preds = %3336, %3371
  %3341 = phi i64 [ %3373, %3371 ], [ %3337, %3336 ]
  %3342 = phi i64 [ %3372, %3371 ], [ %3144, %3336 ]
  %3343 = add nuw nsw i64 %3342, 1
  %3344 = icmp ult i64 %3343, %3341
  br i1 %3344, label %3345, label %3371

3345:                                             ; preds = %3340
  %3346 = and i64 %3342, %190
  %3347 = getelementptr inbounds i8, i8* %32, i64 %3346
  %3348 = load i8, i8* %3347, align 1
  %3349 = lshr i8 %3348, 6
  %3350 = zext i8 %3349 to i64
  %3351 = getelementptr inbounds [4 x i32], [4 x i32]* @DecideOverLiteralContextModeling.lut, i64 0, i64 %3350
  %3352 = load i32, i32* %3351, align 4
  br label %3353

3353:                                             ; preds = %3353, %3345
  %3354 = phi i32 [ %3363, %3353 ], [ %3352, %3345 ]
  %3355 = phi i64 [ %3369, %3353 ], [ %3343, %3345 ]
  %3356 = mul nsw i32 %3354, 3
  %3357 = and i64 %3355, %190
  %3358 = getelementptr inbounds i8, i8* %32, i64 %3357
  %3359 = load i8, i8* %3358, align 1
  %3360 = lshr i8 %3359, 6
  %3361 = zext i8 %3360 to i64
  %3362 = getelementptr inbounds [4 x i32], [4 x i32]* @DecideOverLiteralContextModeling.lut, i64 0, i64 %3361
  %3363 = load i32, i32* %3362, align 4
  %3364 = add nsw i32 %3363, %3356
  %3365 = sext i32 %3364 to i64
  %3366 = getelementptr inbounds [9 x i32], [9 x i32]* %10, i64 0, i64 %3365
  %3367 = load i32, i32* %3366, align 4
  %3368 = add i32 %3367, 1
  store i32 %3368, i32* %3366, align 4
  %3369 = add i64 %3355, 1
  %3370 = icmp eq i64 %3369, %3341
  br i1 %3370, label %3371, label %3353

3371:                                             ; preds = %3353, %3340
  %3372 = add nuw nsw i64 %3342, 4096
  %3373 = add nuw nsw i64 %3341, 4096
  %3374 = icmp ugt i64 %3373, %3153
  br i1 %3374, label %3375, label %3340

3375:                                             ; preds = %3371
  %3376 = getelementptr inbounds [9 x i32], [9 x i32]* %10, i64 0, i64 0
  %3377 = load i32, i32* %3376, align 16
  %3378 = getelementptr inbounds [9 x i32], [9 x i32]* %10, i64 0, i64 1
  %3379 = load i32, i32* %3378, align 4
  %3380 = getelementptr inbounds [9 x i32], [9 x i32]* %10, i64 0, i64 2
  %3381 = load i32, i32* %3380, align 8
  %3382 = getelementptr inbounds [9 x i32], [9 x i32]* %10, i64 0, i64 3
  %3383 = load i32, i32* %3382, align 4
  %3384 = getelementptr inbounds [9 x i32], [9 x i32]* %10, i64 0, i64 4
  %3385 = load i32, i32* %3384, align 16
  %3386 = getelementptr inbounds [9 x i32], [9 x i32]* %10, i64 0, i64 5
  %3387 = load i32, i32* %3386, align 4
  %3388 = getelementptr inbounds [9 x i32], [9 x i32]* %10, i64 0, i64 6
  %3389 = load i32, i32* %3388, align 8
  %3390 = getelementptr inbounds [9 x i32], [9 x i32]* %10, i64 0, i64 7
  %3391 = load i32, i32* %3390, align 4
  %3392 = getelementptr inbounds [9 x i32], [9 x i32]* %10, i64 0, i64 8
  %3393 = load i32, i32* %3392, align 16
  br label %3394

3394:                                             ; preds = %3375, %3336
  %3395 = phi i32 [ %3393, %3375 ], [ 0, %3336 ]
  %3396 = phi i32 [ %3391, %3375 ], [ 0, %3336 ]
  %3397 = phi i32 [ %3389, %3375 ], [ 0, %3336 ]
  %3398 = phi i32 [ %3387, %3375 ], [ 0, %3336 ]
  %3399 = phi i32 [ %3385, %3375 ], [ 0, %3336 ]
  %3400 = phi i32 [ %3383, %3375 ], [ 0, %3336 ]
  %3401 = phi i32 [ %3381, %3375 ], [ 0, %3336 ]
  %3402 = phi i32 [ %3379, %3375 ], [ 0, %3336 ]
  %3403 = phi i32 [ %3377, %3375 ], [ 0, %3336 ]
  %3404 = bitcast [3 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %3404) #8
  %3405 = bitcast [6 x i32]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3405) #8
  %3406 = getelementptr inbounds [3 x i32], [3 x i32]* %6, i64 0, i64 0
  %3407 = getelementptr inbounds [6 x i32], [6 x i32]* %7, i64 0, i64 0
  %3408 = getelementptr inbounds [3 x i32], [3 x i32]* %6, i64 0, i64 1
  %3409 = getelementptr inbounds [6 x i32], [6 x i32]* %7, i64 0, i64 1
  %3410 = getelementptr inbounds [3 x i32], [3 x i32]* %6, i64 0, i64 2
  %3411 = getelementptr inbounds [6 x i32], [6 x i32]* %7, i64 0, i64 2
  %3412 = getelementptr inbounds [6 x i32], [6 x i32]* %7, i64 0, i64 3
  store i32 %3400, i32* %3412, align 4
  %3413 = getelementptr inbounds [6 x i32], [6 x i32]* %7, i64 0, i64 4
  store i32 %3399, i32* %3413, align 16
  %3414 = getelementptr inbounds [6 x i32], [6 x i32]* %7, i64 0, i64 5
  store i32 %3398, i32* %3414, align 4
  %3415 = add i32 %3403, %3397
  %3416 = add i32 %3415, %3400
  store i32 %3416, i32* %3406, align 4
  store i32 %3415, i32* %3407, align 16
  %3417 = add i32 %3402, %3396
  %3418 = add i32 %3417, %3399
  store i32 %3418, i32* %3408, align 4
  store i32 %3417, i32* %3409, align 4
  %3419 = add i32 %3401, %3395
  %3420 = add i32 %3419, %3398
  store i32 %3420, i32* %3410, align 4
  store i32 %3419, i32* %3411, align 8
  %3421 = getelementptr inbounds [3 x i32], [3 x i32]* %6, i64 0, i64 3
  br label %3439

3422:                                             ; preds = %3454
  %3423 = getelementptr inbounds i32, i32* %3441, i64 2
  %3424 = load i32, i32* %3444, align 4
  %3425 = zext i32 %3424 to i64
  %3426 = add i64 %3446, %3425
  %3427 = uitofp i32 %3424 to double
  %3428 = icmp ult i32 %3424, 256
  br i1 %3428, label %3429, label %3432

3429:                                             ; preds = %3422
  %3430 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %3425
  %3431 = load double, double* %3430, align 8
  br label %3434

3432:                                             ; preds = %3422
  %3433 = call double @log2(double %3427) #8
  br label %3434

3434:                                             ; preds = %3432, %3429
  %3435 = phi double [ %3431, %3429 ], [ %3433, %3432 ]
  %3436 = fmul double %3435, %3427
  %3437 = fsub double %3457, %3436
  %3438 = load i32, i32* %3423, align 4
  br label %3439

3439:                                             ; preds = %3434, %3394
  %3440 = phi i32 [ %3416, %3394 ], [ %3438, %3434 ]
  %3441 = phi i32* [ %3406, %3394 ], [ %3423, %3434 ]
  %3442 = phi i64 [ 0, %3394 ], [ %3426, %3434 ]
  %3443 = phi double [ 0.000000e+00, %3394 ], [ %3437, %3434 ]
  %3444 = getelementptr inbounds i32, i32* %3441, i64 1
  %3445 = zext i32 %3440 to i64
  %3446 = add i64 %3442, %3445
  %3447 = uitofp i32 %3440 to double
  %3448 = icmp ult i32 %3440, 256
  br i1 %3448, label %3449, label %3452

3449:                                             ; preds = %3439
  %3450 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %3445
  %3451 = load double, double* %3450, align 8
  br label %3454

3452:                                             ; preds = %3439
  %3453 = call double @log2(double %3447) #8
  br label %3454

3454:                                             ; preds = %3452, %3449
  %3455 = phi double [ %3451, %3449 ], [ %3453, %3452 ]
  %3456 = fmul double %3455, %3447
  %3457 = fsub double %3443, %3456
  %3458 = icmp ult i32* %3444, %3421
  br i1 %3458, label %3422, label %3459

3459:                                             ; preds = %3454
  %3460 = getelementptr inbounds [9 x i32], [9 x i32]* %10, i64 0, i64 3
  %3461 = getelementptr inbounds [9 x i32], [9 x i32]* %10, i64 0, i64 6
  %3462 = icmp eq i64 %3446, 0
  br i1 %3462, label %3475, label %3463

3463:                                             ; preds = %3459
  %3464 = uitofp i64 %3446 to double
  %3465 = icmp ult i64 %3446, 256
  br i1 %3465, label %3466, label %3469

3466:                                             ; preds = %3463
  %3467 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %3446
  %3468 = load double, double* %3467, align 8
  br label %3471

3469:                                             ; preds = %3463
  %3470 = call double @log2(double %3464) #8
  br label %3471

3471:                                             ; preds = %3469, %3466
  %3472 = phi double [ %3468, %3466 ], [ %3470, %3469 ]
  %3473 = fmul double %3472, %3464
  %3474 = fadd double %3457, %3473
  br label %3475

3475:                                             ; preds = %3471, %3459
  %3476 = phi double [ %3474, %3471 ], [ %3457, %3459 ]
  br label %3493

3477:                                             ; preds = %3508
  %3478 = getelementptr inbounds i32, i32* %3494, i64 2
  %3479 = load i32, i32* %3497, align 4
  %3480 = zext i32 %3479 to i64
  %3481 = add i64 %3500, %3480
  %3482 = uitofp i32 %3479 to double
  %3483 = icmp ult i32 %3479, 256
  br i1 %3483, label %3484, label %3487

3484:                                             ; preds = %3477
  %3485 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %3480
  %3486 = load double, double* %3485, align 8
  br label %3489

3487:                                             ; preds = %3477
  %3488 = call double @log2(double %3482) #8
  br label %3489

3489:                                             ; preds = %3487, %3484
  %3490 = phi double [ %3486, %3484 ], [ %3488, %3487 ]
  %3491 = fmul double %3490, %3482
  %3492 = fsub double %3511, %3491
  br label %3493

3493:                                             ; preds = %3489, %3475
  %3494 = phi i32* [ %3407, %3475 ], [ %3478, %3489 ]
  %3495 = phi i64 [ 0, %3475 ], [ %3481, %3489 ]
  %3496 = phi double [ 0.000000e+00, %3475 ], [ %3492, %3489 ]
  %3497 = getelementptr inbounds i32, i32* %3494, i64 1
  %3498 = load i32, i32* %3494, align 4
  %3499 = zext i32 %3498 to i64
  %3500 = add i64 %3495, %3499
  %3501 = uitofp i32 %3498 to double
  %3502 = icmp ult i32 %3498, 256
  br i1 %3502, label %3503, label %3506

3503:                                             ; preds = %3493
  %3504 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %3499
  %3505 = load double, double* %3504, align 8
  br label %3508

3506:                                             ; preds = %3493
  %3507 = call double @log2(double %3501) #8
  br label %3508

3508:                                             ; preds = %3506, %3503
  %3509 = phi double [ %3505, %3503 ], [ %3507, %3506 ]
  %3510 = fmul double %3509, %3501
  %3511 = fsub double %3496, %3510
  %3512 = icmp ult i32* %3497, %3412
  br i1 %3512, label %3477, label %3513

3513:                                             ; preds = %3508
  %3514 = icmp eq i64 %3500, 0
  br i1 %3514, label %3527, label %3515

3515:                                             ; preds = %3513
  %3516 = uitofp i64 %3500 to double
  %3517 = icmp ult i64 %3500, 256
  br i1 %3517, label %3518, label %3521

3518:                                             ; preds = %3515
  %3519 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %3500
  %3520 = load double, double* %3519, align 8
  br label %3523

3521:                                             ; preds = %3515
  %3522 = call double @log2(double %3516) #8
  br label %3523

3523:                                             ; preds = %3521, %3518
  %3524 = phi double [ %3520, %3518 ], [ %3522, %3521 ]
  %3525 = fmul double %3524, %3516
  %3526 = fadd double %3511, %3525
  br label %3527

3527:                                             ; preds = %3523, %3513
  %3528 = phi double [ %3526, %3523 ], [ %3511, %3513 ]
  %3529 = getelementptr inbounds [6 x i32], [6 x i32]* %7, i64 0, i64 6
  br label %3546

3530:                                             ; preds = %3561
  %3531 = getelementptr inbounds i32, i32* %3547, i64 2
  %3532 = load i32, i32* %3550, align 4
  %3533 = zext i32 %3532 to i64
  %3534 = add i64 %3553, %3533
  %3535 = uitofp i32 %3532 to double
  %3536 = icmp ult i32 %3532, 256
  br i1 %3536, label %3537, label %3540

3537:                                             ; preds = %3530
  %3538 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %3533
  %3539 = load double, double* %3538, align 8
  br label %3542

3540:                                             ; preds = %3530
  %3541 = call double @log2(double %3535) #8
  br label %3542

3542:                                             ; preds = %3540, %3537
  %3543 = phi double [ %3539, %3537 ], [ %3541, %3540 ]
  %3544 = fmul double %3543, %3535
  %3545 = fsub double %3564, %3544
  br label %3546

3546:                                             ; preds = %3542, %3527
  %3547 = phi i32* [ %3412, %3527 ], [ %3531, %3542 ]
  %3548 = phi i64 [ 0, %3527 ], [ %3534, %3542 ]
  %3549 = phi double [ 0.000000e+00, %3527 ], [ %3545, %3542 ]
  %3550 = getelementptr inbounds i32, i32* %3547, i64 1
  %3551 = load i32, i32* %3547, align 4
  %3552 = zext i32 %3551 to i64
  %3553 = add i64 %3548, %3552
  %3554 = uitofp i32 %3551 to double
  %3555 = icmp ult i32 %3551, 256
  br i1 %3555, label %3556, label %3559

3556:                                             ; preds = %3546
  %3557 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %3552
  %3558 = load double, double* %3557, align 8
  br label %3561

3559:                                             ; preds = %3546
  %3560 = call double @log2(double %3554) #8
  br label %3561

3561:                                             ; preds = %3559, %3556
  %3562 = phi double [ %3558, %3556 ], [ %3560, %3559 ]
  %3563 = fmul double %3562, %3554
  %3564 = fsub double %3549, %3563
  %3565 = icmp ult i32* %3550, %3529
  br i1 %3565, label %3530, label %3566

3566:                                             ; preds = %3561
  %3567 = icmp eq i64 %3553, 0
  br i1 %3567, label %3580, label %3568

3568:                                             ; preds = %3566
  %3569 = uitofp i64 %3553 to double
  %3570 = icmp ult i64 %3553, 256
  br i1 %3570, label %3571, label %3574

3571:                                             ; preds = %3568
  %3572 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %3553
  %3573 = load double, double* %3572, align 8
  br label %3576

3574:                                             ; preds = %3568
  %3575 = call double @log2(double %3569) #8
  br label %3576

3576:                                             ; preds = %3574, %3571
  %3577 = phi double [ %3573, %3571 ], [ %3575, %3574 ]
  %3578 = fmul double %3577, %3569
  %3579 = fadd double %3564, %3578
  br label %3580

3580:                                             ; preds = %3576, %3566
  %3581 = phi double [ %3579, %3576 ], [ %3564, %3566 ]
  br label %3600

3582:                                             ; preds = %3616
  %3583 = add nuw nsw i64 %3602, 2
  %3584 = load i32, i32* %3606, align 4
  %3585 = zext i32 %3584 to i64
  %3586 = add i64 %3608, %3585
  %3587 = uitofp i32 %3584 to double
  %3588 = icmp ult i32 %3584, 256
  br i1 %3588, label %3589, label %3592

3589:                                             ; preds = %3582
  %3590 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %3585
  %3591 = load double, double* %3590, align 8
  br label %3594

3592:                                             ; preds = %3582
  %3593 = call double @log2(double %3587) #8
  br label %3594

3594:                                             ; preds = %3592, %3589
  %3595 = phi double [ %3591, %3589 ], [ %3593, %3592 ]
  %3596 = fmul double %3595, %3587
  %3597 = fsub double %3619, %3596
  %3598 = getelementptr inbounds [9 x i32], [9 x i32]* %10, i64 0, i64 %3583
  %3599 = load i32, i32* %3598, align 8
  br label %3600

3600:                                             ; preds = %3594, %3580
  %3601 = phi i32 [ %3403, %3580 ], [ %3599, %3594 ]
  %3602 = phi i64 [ 0, %3580 ], [ %3583, %3594 ]
  %3603 = phi i64 [ 0, %3580 ], [ %3586, %3594 ]
  %3604 = phi double [ 0.000000e+00, %3580 ], [ %3597, %3594 ]
  %3605 = or i64 %3602, 1
  %3606 = getelementptr inbounds [9 x i32], [9 x i32]* %10, i64 0, i64 %3605
  %3607 = zext i32 %3601 to i64
  %3608 = add i64 %3603, %3607
  %3609 = uitofp i32 %3601 to double
  %3610 = icmp ult i32 %3601, 256
  br i1 %3610, label %3611, label %3614

3611:                                             ; preds = %3600
  %3612 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %3607
  %3613 = load double, double* %3612, align 8
  br label %3616

3614:                                             ; preds = %3600
  %3615 = call double @log2(double %3609) #8
  br label %3616

3616:                                             ; preds = %3614, %3611
  %3617 = phi double [ %3613, %3611 ], [ %3615, %3614 ]
  %3618 = fmul double %3617, %3609
  %3619 = fsub double %3604, %3618
  %3620 = icmp ult i64 %3605, 3
  br i1 %3620, label %3582, label %3621

3621:                                             ; preds = %3616
  %3622 = icmp eq i64 %3608, 0
  br i1 %3622, label %3635, label %3623

3623:                                             ; preds = %3621
  %3624 = uitofp i64 %3608 to double
  %3625 = icmp ult i64 %3608, 256
  br i1 %3625, label %3626, label %3629

3626:                                             ; preds = %3623
  %3627 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %3608
  %3628 = load double, double* %3627, align 8
  br label %3631

3629:                                             ; preds = %3623
  %3630 = call double @log2(double %3624) #8
  br label %3631

3631:                                             ; preds = %3629, %3626
  %3632 = phi double [ %3628, %3626 ], [ %3630, %3629 ]
  %3633 = fmul double %3632, %3624
  %3634 = fadd double %3619, %3633
  br label %3635

3635:                                             ; preds = %3631, %3621
  %3636 = phi double [ %3634, %3631 ], [ %3619, %3621 ]
  br label %3641

3637:                                             ; preds = %3733
  %3638 = fsub double %3745, %3749
  %3639 = fcmp olt double %3638, 2.000000e-02
  br i1 %3639, label %3773, label %3640

3640:                                             ; preds = %3637
  br label %3773

3641:                                             ; preds = %3691, %3635
  %3642 = phi i32 [ %3400, %3635 ], [ %3696, %3691 ]
  %3643 = phi i64 [ 0, %3635 ], [ %3680, %3691 ]
  %3644 = phi i64 [ 0, %3635 ], [ %3683, %3691 ]
  %3645 = phi double [ 0.000000e+00, %3635 ], [ %3694, %3691 ]
  %3646 = or i64 %3643, 1
  %3647 = getelementptr inbounds i32, i32* %3460, i64 %3646
  %3648 = zext i32 %3642 to i64
  %3649 = add i64 %3644, %3648
  %3650 = uitofp i32 %3642 to double
  %3651 = icmp ult i32 %3642, 256
  br i1 %3651, label %3654, label %3652

3652:                                             ; preds = %3641
  %3653 = call double @log2(double %3650) #8
  br label %3657

3654:                                             ; preds = %3641
  %3655 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %3648
  %3656 = load double, double* %3655, align 8
  br label %3657

3657:                                             ; preds = %3654, %3652
  %3658 = phi double [ %3656, %3654 ], [ %3653, %3652 ]
  %3659 = fmul double %3658, %3650
  %3660 = fsub double %3645, %3659
  %3661 = icmp ult i64 %3646, 3
  br i1 %3661, label %3679, label %3662

3662:                                             ; preds = %3657
  %3663 = fadd double %3636, 0.000000e+00
  %3664 = icmp eq i64 %3649, 0
  br i1 %3664, label %3677, label %3665

3665:                                             ; preds = %3662
  %3666 = uitofp i64 %3649 to double
  %3667 = icmp ult i64 %3649, 256
  br i1 %3667, label %3670, label %3668

3668:                                             ; preds = %3665
  %3669 = call double @log2(double %3666) #8
  br label %3673

3670:                                             ; preds = %3665
  %3671 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %3649
  %3672 = load double, double* %3671, align 8
  br label %3673

3673:                                             ; preds = %3670, %3668
  %3674 = phi double [ %3672, %3670 ], [ %3669, %3668 ]
  %3675 = fmul double %3674, %3666
  %3676 = fadd double %3660, %3675
  br label %3677

3677:                                             ; preds = %3673, %3662
  %3678 = phi double [ %3676, %3673 ], [ %3660, %3662 ]
  br label %3697

3679:                                             ; preds = %3657
  %3680 = add nuw nsw i64 %3643, 2
  %3681 = load i32, i32* %3647, align 4
  %3682 = zext i32 %3681 to i64
  %3683 = add i64 %3649, %3682
  %3684 = uitofp i32 %3681 to double
  %3685 = icmp ult i32 %3681, 256
  br i1 %3685, label %3688, label %3686

3686:                                             ; preds = %3679
  %3687 = call double @log2(double %3684) #8
  br label %3691

3688:                                             ; preds = %3679
  %3689 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %3682
  %3690 = load double, double* %3689, align 8
  br label %3691

3691:                                             ; preds = %3688, %3686
  %3692 = phi double [ %3690, %3688 ], [ %3687, %3686 ]
  %3693 = fmul double %3692, %3684
  %3694 = fsub double %3660, %3693
  %3695 = getelementptr inbounds i32, i32* %3460, i64 %3680
  %3696 = load i32, i32* %3695, align 4
  br label %3641

3697:                                             ; preds = %3767, %3677
  %3698 = phi i32 [ %3397, %3677 ], [ %3772, %3767 ]
  %3699 = phi i64 [ 0, %3677 ], [ %3756, %3767 ]
  %3700 = phi i64 [ 0, %3677 ], [ %3759, %3767 ]
  %3701 = phi double [ 0.000000e+00, %3677 ], [ %3770, %3767 ]
  %3702 = or i64 %3699, 1
  %3703 = getelementptr inbounds i32, i32* %3461, i64 %3702
  %3704 = zext i32 %3698 to i64
  %3705 = add i64 %3700, %3704
  %3706 = uitofp i32 %3698 to double
  %3707 = icmp ult i32 %3698, 256
  br i1 %3707, label %3710, label %3708

3708:                                             ; preds = %3697
  %3709 = call double @log2(double %3706) #8
  br label %3713

3710:                                             ; preds = %3697
  %3711 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %3704
  %3712 = load double, double* %3711, align 8
  br label %3713

3713:                                             ; preds = %3710, %3708
  %3714 = phi double [ %3712, %3710 ], [ %3709, %3708 ]
  %3715 = fmul double %3714, %3706
  %3716 = fsub double %3701, %3715
  %3717 = icmp ult i64 %3702, 3
  br i1 %3717, label %3755, label %3718

3718:                                             ; preds = %3713
  %3719 = fadd double %3663, %3678
  %3720 = icmp eq i64 %3705, 0
  br i1 %3720, label %3733, label %3721

3721:                                             ; preds = %3718
  %3722 = uitofp i64 %3705 to double
  %3723 = icmp ult i64 %3705, 256
  br i1 %3723, label %3726, label %3724

3724:                                             ; preds = %3721
  %3725 = call double @log2(double %3722) #8
  br label %3729

3726:                                             ; preds = %3721
  %3727 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %3705
  %3728 = load double, double* %3727, align 8
  br label %3729

3729:                                             ; preds = %3726, %3724
  %3730 = phi double [ %3728, %3726 ], [ %3725, %3724 ]
  %3731 = fmul double %3730, %3722
  %3732 = fadd double %3716, %3731
  br label %3733

3733:                                             ; preds = %3729, %3718
  %3734 = phi double [ %3732, %3729 ], [ %3716, %3718 ]
  %3735 = fadd double %3719, %3734
  %3736 = fadd double %3528, %3581
  %3737 = load i32, i32* %3406, align 4
  %3738 = load i32, i32* %3408, align 4
  %3739 = add i32 %3738, %3737
  %3740 = load i32, i32* %3410, align 4
  %3741 = add i32 %3739, %3740
  %3742 = uitofp i32 %3741 to double
  %3743 = fdiv double 1.000000e+00, %3742
  %3744 = fmul double %3476, %3743
  %3745 = fmul double %3736, %3743
  %3746 = fmul double %3735, %3743
  %3747 = icmp slt i32 %3138, 7
  %3748 = fmul double %3744, 1.000000e+01
  %3749 = select i1 %3747, double %3748, double %3746
  %3750 = fsub double %3744, %3745
  %3751 = fcmp olt double %3750, 2.000000e-01
  %3752 = fsub double %3744, %3749
  %3753 = fcmp olt double %3752, 2.000000e-01
  %3754 = and i1 %3751, %3753
  br i1 %3754, label %3773, label %3637

3755:                                             ; preds = %3713
  %3756 = add nuw nsw i64 %3699, 2
  %3757 = load i32, i32* %3703, align 4
  %3758 = zext i32 %3757 to i64
  %3759 = add i64 %3705, %3758
  %3760 = uitofp i32 %3757 to double
  %3761 = icmp ult i32 %3757, 256
  br i1 %3761, label %3764, label %3762

3762:                                             ; preds = %3755
  %3763 = call double @log2(double %3760) #8
  br label %3767

3764:                                             ; preds = %3755
  %3765 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %3758
  %3766 = load double, double* %3765, align 8
  br label %3767

3767:                                             ; preds = %3764, %3762
  %3768 = phi double [ %3766, %3764 ], [ %3763, %3762 ]
  %3769 = fmul double %3768, %3760
  %3770 = fsub double %3716, %3769
  %3771 = getelementptr inbounds i32, i32* %3461, i64 %3756
  %3772 = load i32, i32* %3771, align 8
  br label %3697

3773:                                             ; preds = %3733, %3640, %3637
  %3774 = phi i64 [ 3, %3640 ], [ 1, %3733 ], [ 2, %3637 ]
  %3775 = phi i32* [ getelementptr inbounds (<{ i32, i32, i32, i32, [60 x i32] }>, <{ i32, i32, i32, i32, [60 x i32] }>* @ChooseContextMap.kStaticContextMapContinuation, i64 0, i32 0), %3640 ], [ null, %3733 ], [ getelementptr inbounds (<{ i32, i32, i32, i32, [60 x i32] }>, <{ i32, i32, i32, i32, [60 x i32] }>* @ChooseContextMap.kStaticContextMapSimpleUTF8, i64 0, i32 0), %3637 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3405) #8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %3404) #8
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %3338) #8
  br label %3776

3776:                                             ; preds = %3773, %3335, %3145, %3140
  %3777 = phi i64 [ %3774, %3773 ], [ 13, %3335 ], [ 1, %3145 ], [ 1, %3140 ]
  %3778 = phi i32* [ %3775, %3773 ], [ getelementptr inbounds ([64 x i32], [64 x i32]* @ShouldUseComplexStaticContextMap.kStaticContextMapComplexUTF8, i64 0, i64 0), %3335 ], [ null, %3145 ], [ null, %3140 ]
  call void @BrotliBuildMetaBlockGreedy(%struct.MemoryManager* %30, i8* %32, i64 %3144, i64 %190, i8 zeroext %3078, i8 zeroext %3080, i8* %2684, i64 %3777, i32* %3778, %struct.Command* %3085, i64 %3083, %struct.MetaBlockSplit* nonnull %12) #8
  br label %3781

3779:                                             ; preds = %3131
  %3780 = zext i32 %3096 to i64
  call void @BrotliBuildMetaBlock(%struct.MemoryManager* %30, i8* %32, i64 %3780, i64 %190, %struct.BrotliEncoderParams* nonnull %11, i8 zeroext %3078, i8 zeroext %3080, %struct.Command* %3085, i64 %3083, i32 %2681, %struct.MetaBlockSplit* nonnull %12) #8
  br label %3781

3781:                                             ; preds = %3779, %3776
  %3782 = load i32, i32* %49, align 4
  %3783 = icmp sgt i32 %3782, 3
  br i1 %3783, label %3784, label %3787

3784:                                             ; preds = %3781
  %3785 = getelementptr inbounds %struct.BrotliEncoderParams, %struct.BrotliEncoderParams* %11, i64 0, i32 9, i32 3
  %3786 = load i32, i32* %3785, align 4
  call void @BrotliOptimizeHistograms(i32 %3786, %struct.MetaBlockSplit* nonnull %12) #8
  br label %3787

3787:                                             ; preds = %3784, %3781
  %3788 = zext i32 %3096 to i64
  call void @BrotliStoreMetaBlock(%struct.MemoryManager* %30, i8* %32, i64 %3788, i64 %3076, i64 %190, i8 zeroext %3078, i8 zeroext %3080, i32 %1, %struct.BrotliEncoderParams* nonnull %11, i32 %2681, %struct.Command* %3085, i64 %3083, %struct.MetaBlockSplit* nonnull %12, i64* nonnull %14, i8* %3063) #8
  call void @BrotliDestroyBlockSplit(%struct.MemoryManager* %30, %struct.BlockSplit* nonnull %3133) #8
  call void @BrotliDestroyBlockSplit(%struct.MemoryManager* %30, %struct.BlockSplit* %3134) #8
  call void @BrotliDestroyBlockSplit(%struct.MemoryManager* %30, %struct.BlockSplit* %3135) #8
  %3789 = bitcast i32** %3136 to i8**
  %3790 = load i8*, i8** %3789, align 8
  call void @BrotliFree(%struct.MemoryManager* %30, i8* %3790) #8
  store i32* null, i32** %3136, align 8
  %3791 = getelementptr inbounds %struct.MetaBlockSplit, %struct.MetaBlockSplit* %12, i64 0, i32 5
  %3792 = bitcast i32** %3791 to i8**
  %3793 = load i8*, i8** %3792, align 8
  call void @BrotliFree(%struct.MemoryManager* %30, i8* %3793) #8
  store i32* null, i32** %3791, align 8
  %3794 = getelementptr inbounds %struct.MetaBlockSplit, %struct.MetaBlockSplit* %12, i64 0, i32 7
  %3795 = bitcast %struct.HistogramLiteral** %3794 to i8**
  %3796 = load i8*, i8** %3795, align 8
  call void @BrotliFree(%struct.MemoryManager* %30, i8* %3796) #8
  store %struct.HistogramLiteral* null, %struct.HistogramLiteral** %3794, align 8
  %3797 = getelementptr inbounds %struct.MetaBlockSplit, %struct.MetaBlockSplit* %12, i64 0, i32 9
  %3798 = bitcast %struct.HistogramCommand** %3797 to i8**
  %3799 = load i8*, i8** %3798, align 8
  call void @BrotliFree(%struct.MemoryManager* %30, i8* %3799) #8
  store %struct.HistogramCommand* null, %struct.HistogramCommand** %3797, align 8
  %3800 = getelementptr inbounds %struct.MetaBlockSplit, %struct.MetaBlockSplit* %12, i64 0, i32 11
  %3801 = bitcast %struct.HistogramDistance** %3800 to i8**
  %3802 = load i8*, i8** %3801, align 8
  call void @BrotliFree(%struct.MemoryManager* %30, i8* %3802) #8
  call void @llvm.lifetime.end.p0i8(i64 224, i8* nonnull %3132) #8
  br label %3803

3803:                                             ; preds = %3787, %3129, %3125
  %3804 = add nuw nsw i64 %3076, 4
  %3805 = load i64, i64* %14, align 8
  %3806 = lshr i64 %3805, 3
  %3807 = icmp ult i64 %3804, %3806
  br i1 %3807, label %3808, label %3813

3808:                                             ; preds = %3803
  %3809 = bitcast i32* %3087 to i8*
  %3810 = bitcast i32* %3086 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3809, i8* align 4 %3810, i64 16, i1 false) #8
  store i8 %3121, i8* %3063, align 1
  store i8 %3120, i8* %3074, align 1
  %3811 = and i64 %3122, 255
  store i64 %3811, i64* %14, align 8
  %3812 = zext i32 %3096 to i64
  call void @BrotliStoreUncompressedMetaBlock(i32 %1, i8* %32, i64 %3812, i64 %190, i64 %3076, i64* nonnull %14, i8* %3063) #8
  br label %3813

3813:                                             ; preds = %3100, %3115, %3803, %3808
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %3097) #8
  %3814 = load i64, i64* %14, align 8
  %3815 = lshr i64 %3814, 3
  %3816 = getelementptr inbounds i8, i8* %3063, i64 %3815
  %3817 = load i8, i8* %3816, align 1
  %3818 = zext i8 %3817 to i16
  store i16 %3818, i16* %3068, align 8
  %3819 = trunc i64 %3814 to i8
  %3820 = and i8 %3819, 7
  store i8 %3820, i8* %3065, align 2
  %3821 = load i64, i64* %15, align 8
  store i64 %3821, i64* %2661, align 8
  %3822 = load i64, i64* %17, align 8
  %3823 = trunc i64 %3822 to i32
  %3824 = icmp ugt i64 %3822, 3221225471
  br i1 %3824, label %3825, label %3830

3825:                                             ; preds = %3813
  %3826 = and i32 %3823, 1073741823
  %3827 = and i32 %3823, 1073741824
  %3828 = sub nuw i32 -2147483648, %3827
  %3829 = or i32 %3828, %3826
  br label %3830

3830:                                             ; preds = %3825, %3813
  %3831 = phi i32 [ %3829, %3825 ], [ %3823, %3813 ]
  %3832 = trunc i64 %3821 to i32
  %3833 = icmp ugt i64 %3821, 3221225471
  br i1 %3833, label %3834, label %3839

3834:                                             ; preds = %3830
  %3835 = and i32 %3832, 1073741823
  %3836 = and i32 %3832, 1073741824
  %3837 = sub nuw i32 -2147483648, %3836
  %3838 = or i32 %3837, %3835
  br label %3839

3839:                                             ; preds = %3830, %3834
  %3840 = phi i32 [ %3838, %3834 ], [ %3832, %3830 ]
  store i64 %3821, i64* %17, align 8
  %3841 = icmp ult i32 %3840, %3831
  br i1 %3841, label %3842, label %3844

3842:                                             ; preds = %3839
  %3843 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 20, i32 0, i32 4
  store i32 0, i32* %3843, align 4
  br label %3844

3844:                                             ; preds = %3839, %3842
  %3845 = icmp eq i64 %3821, 0
  br i1 %3845, label %3859, label %3846

3846:                                             ; preds = %3844
  %3847 = add i32 %3832, -1
  %3848 = and i32 %3847, %34
  %3849 = zext i32 %3848 to i64
  %3850 = getelementptr inbounds i8, i8* %32, i64 %3849
  %3851 = load i8, i8* %3850, align 1
  store i8 %3851, i8* %3077, align 4
  %3852 = icmp eq i64 %3821, 1
  br i1 %3852, label %3859, label %3853

3853:                                             ; preds = %3846
  %3854 = add i32 %3832, -2
  %3855 = and i32 %3854, %34
  %3856 = zext i32 %3855 to i64
  %3857 = getelementptr inbounds i8, i8* %32, i64 %3856
  %3858 = load i8, i8* %3857, align 1
  store i8 %3858, i8* %3079, align 1
  br label %3859

3859:                                             ; preds = %3846, %3844, %3853
  %3860 = bitcast i32* %3086 to i8*
  %3861 = bitcast i32* %3087 to i8*
  %3862 = bitcast i64* %155 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3862, i8 0, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3860, i8* align 8 %3861, i64 16, i1 false)
  store i8* %3063, i8** %4, align 8
  store i64 %3815, i64* %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3064) #8
  br label %3863

3863:                                             ; preds = %2977, %41, %28, %3859, %3049, %152
  %3864 = phi i32 [ 1, %152 ], [ 1, %3859 ], [ 1, %3049 ], [ 0, %28 ], [ 0, %41 ], [ 1, %2977 ]
  ret i32 %3864

3865:                                             ; preds = %2609
  %3866 = getelementptr inbounds i8, i8* %2601, i64 1
  %3867 = getelementptr inbounds i8, i8* %2573, i64 %2610
  %3868 = load i8, i8* %3867, align 1, !alias.scope !783, !noalias !780
  %3869 = load i8, i8* %3866, align 1, !alias.scope !783, !noalias !780
  %3870 = icmp eq i8 %3868, %3869
  br i1 %3870, label %3871, label %2612, !prof !235

3871:                                             ; preds = %3865
  %3872 = add i64 %2600, 2
  %3873 = icmp eq i64 %2602, 2
  br i1 %3873, label %2612, label %3874

3874:                                             ; preds = %3871
  %3875 = getelementptr inbounds i8, i8* %2601, i64 2
  %3876 = getelementptr inbounds i8, i8* %2573, i64 %3872
  %3877 = load i8, i8* %3876, align 1, !alias.scope !783, !noalias !780
  %3878 = load i8, i8* %3875, align 1, !alias.scope !783, !noalias !780
  %3879 = icmp eq i8 %3877, %3878
  br i1 %3879, label %3880, label %2612, !prof !235

3880:                                             ; preds = %3874
  %3881 = add i64 %2600, 3
  %3882 = icmp eq i64 %2602, 3
  br i1 %3882, label %2612, label %3883

3883:                                             ; preds = %3880
  %3884 = getelementptr inbounds i8, i8* %2601, i64 3
  %3885 = getelementptr inbounds i8, i8* %2573, i64 %3881
  %3886 = load i8, i8* %3885, align 1, !alias.scope !783, !noalias !780
  %3887 = load i8, i8* %3884, align 1, !alias.scope !783, !noalias !780
  %3888 = icmp eq i8 %3886, %3887
  br i1 %3888, label %3889, label %2612, !prof !235

3889:                                             ; preds = %3883
  %3890 = add i64 %2600, 4
  %3891 = icmp eq i64 %2602, 4
  br i1 %3891, label %2612, label %3892

3892:                                             ; preds = %3889
  %3893 = getelementptr inbounds i8, i8* %2601, i64 4
  %3894 = getelementptr inbounds i8, i8* %2573, i64 %3890
  %3895 = load i8, i8* %3894, align 1, !alias.scope !783, !noalias !780
  %3896 = load i8, i8* %3893, align 1, !alias.scope !783, !noalias !780
  %3897 = icmp eq i8 %3895, %3896
  br i1 %3897, label %3898, label %2612, !prof !235

3898:                                             ; preds = %3892
  %3899 = add i64 %2600, 5
  %3900 = icmp eq i64 %2602, 5
  br i1 %3900, label %2612, label %3901

3901:                                             ; preds = %3898
  %3902 = getelementptr inbounds i8, i8* %2601, i64 5
  %3903 = getelementptr inbounds i8, i8* %2573, i64 %3899
  %3904 = load i8, i8* %3903, align 1, !alias.scope !783, !noalias !780
  %3905 = load i8, i8* %3902, align 1, !alias.scope !783, !noalias !780
  %3906 = icmp eq i8 %3904, %3905
  br i1 %3906, label %3907, label %2612, !prof !235

3907:                                             ; preds = %3901
  %3908 = add i64 %2600, 6
  %3909 = icmp eq i64 %2602, 6
  br i1 %3909, label %2612, label %3910

3910:                                             ; preds = %3907
  %3911 = getelementptr inbounds i8, i8* %2601, i64 6
  %3912 = getelementptr inbounds i8, i8* %2573, i64 %3908
  %3913 = load i8, i8* %3912, align 1, !alias.scope !783, !noalias !780
  %3914 = load i8, i8* %3911, align 1, !alias.scope !783, !noalias !780
  %3915 = icmp eq i8 %3913, %3914
  %3916 = add i64 %2600, 7
  %3917 = select i1 %3915, i64 %3916, i64 %3908, !prof !235
  br label %2612
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @BrotliEncoderHasMoreOutput(%struct.BrotliEncoderStateStruct* nocapture readonly) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 31
  %3 = load i64, i64* %2, align 8
  %4 = icmp ne i64 %3, 0
  %5 = zext i1 %4 to i32
  ret i32 %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @BrotliEncoderTakeOutput(%struct.BrotliEncoderStateStruct* nocapture, i64* nocapture) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 31
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 30
  %6 = load i8*, i8** %5, align 8
  %7 = load i64, i64* %1, align 8
  %8 = icmp ne i64 %7, 0
  %9 = icmp ult i64 %7, %4
  %10 = and i1 %8, %9
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = icmp eq i64 %4, 0
  br i1 %12, label %26, label %13

13:                                               ; preds = %2, %11
  %14 = phi i64 [ %4, %11 ], [ %7, %2 ]
  %15 = getelementptr inbounds i8, i8* %6, i64 %14
  store i8* %15, i8** %5, align 8
  %16 = sub i64 %4, %14
  store i64 %16, i64* %3, align 8
  %17 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 32
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, %14
  store i64 %19, i64* %17, align 8
  %20 = getelementptr inbounds %struct.BrotliEncoderStateStruct, %struct.BrotliEncoderStateStruct* %0, i64 0, i32 35
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  %23 = icmp eq i64 %16, 0
  %24 = and i1 %23, %22
  br i1 %24, label %25, label %26

25:                                               ; preds = %13
  store i32 0, i32* %20, align 4
  store i8* null, i8** %5, align 8
  br label %26

26:                                               ; preds = %25, %13, %11
  %27 = phi i64 [ 0, %11 ], [ %14, %13 ], [ %14, %25 ]
  %28 = phi i8* [ null, %11 ], [ %6, %13 ], [ %6, %25 ]
  store i64 %27, i64* %1, align 8
  ret i8* %28
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @BrotliEncoderVersion() local_unnamed_addr #5 {
  ret i32 16777225
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare hidden void @BrotliInitEncoderDictionary(%struct.BrotliEncoderDictionary*) local_unnamed_addr #4

declare hidden void @BrotliFree(%struct.MemoryManager*, i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare hidden i8* @BrotliAllocate(%struct.MemoryManager*, i64) local_unnamed_addr #4

declare hidden void @BrotliInitZopfliNodes(%struct.ZopfliNode*, i64) local_unnamed_addr #4

declare hidden i64 @BrotliZopfliComputeShortestPath(%struct.MemoryManager*, i64, i64, i8*, i64, i8*, %struct.BrotliEncoderParams*, i32*, %struct.Hasher*, %struct.ZopfliNode*) local_unnamed_addr #4

declare hidden void @BrotliZopfliCreateCommands(i64, i64, %struct.ZopfliNode*, i32*, i64*, %struct.BrotliEncoderParams*, %struct.Command*, i64*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @ShouldCompress(i8* nocapture readonly, i64, i64, i64, i64, i64) unnamed_addr #1 {
  %7 = alloca [256 x i32], align 16
  %8 = icmp ult i64 %3, 3
  br i1 %8, label %99, label %9

9:                                                ; preds = %6
  %10 = lshr i64 %3, 8
  %11 = add nuw nsw i64 %10, 2
  %12 = icmp ugt i64 %11, %5
  br i1 %12, label %13, label %98

13:                                               ; preds = %9
  %14 = uitofp i64 %4 to double
  %15 = uitofp i64 %3 to double
  %16 = fmul double %15, 0x3FEFAE147AE147AE
  %17 = fcmp olt double %16, %14
  br i1 %17, label %18, label %98

18:                                               ; preds = %13
  %19 = bitcast [256 x i32]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %19) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %19, i8 0, i64 1024, i1 false)
  %20 = fmul double %15, 7.920000e+00
  %21 = fdiv double %20, 1.300000e+01
  %22 = add i64 %3, 12
  %23 = udiv i64 %22, 13
  %24 = icmp ugt i64 %22, 12
  br i1 %24, label %25, label %41

25:                                               ; preds = %18
  %26 = trunc i64 %2 to i32
  br label %27

27:                                               ; preds = %25, %27
  %28 = phi i64 [ %39, %27 ], [ 0, %25 ]
  %29 = phi i32 [ %38, %27 ], [ %26, %25 ]
  %30 = zext i32 %29 to i64
  %31 = and i64 %30, %1
  %32 = getelementptr inbounds i8, i8* %0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i64
  %35 = getelementptr inbounds [256 x i32], [256 x i32]* %7, i64 0, i64 %34
  %36 = load i32, i32* %35, align 4
  %37 = add i32 %36, 1
  store i32 %37, i32* %35, align 4
  %38 = add i32 %29, 13
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp ult i64 %39, %23
  br i1 %40, label %27, label %41

41:                                               ; preds = %27, %18
  br label %42

42:                                               ; preds = %41, %74
  %43 = phi double [ %77, %74 ], [ 0.000000e+00, %41 ]
  %44 = phi i64 [ %66, %74 ], [ 0, %41 ]
  %45 = phi i64 [ %63, %74 ], [ 0, %41 ]
  %46 = getelementptr inbounds [256 x i32], [256 x i32]* %7, i64 0, i64 %45
  %47 = or i64 %45, 1
  %48 = getelementptr inbounds [256 x i32], [256 x i32]* %7, i64 0, i64 %47
  %49 = load i32, i32* %46, align 8
  %50 = zext i32 %49 to i64
  %51 = add i64 %44, %50
  %52 = uitofp i32 %49 to double
  %53 = icmp ult i32 %49, 256
  br i1 %53, label %54, label %57

54:                                               ; preds = %42
  %55 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %50
  %56 = load double, double* %55, align 8
  br label %59

57:                                               ; preds = %42
  %58 = tail call double @log2(double %52) #8
  br label %59

59:                                               ; preds = %57, %54
  %60 = phi double [ %56, %54 ], [ %58, %57 ]
  %61 = fmul double %60, %52
  %62 = fsub double %43, %61
  %63 = add nuw nsw i64 %45, 2
  %64 = load i32, i32* %48, align 4
  %65 = zext i32 %64 to i64
  %66 = add i64 %51, %65
  %67 = uitofp i32 %64 to double
  %68 = icmp ult i32 %64, 256
  br i1 %68, label %69, label %72

69:                                               ; preds = %59
  %70 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %65
  %71 = load double, double* %70, align 8
  br label %74

72:                                               ; preds = %59
  %73 = tail call double @log2(double %67) #8
  br label %74

74:                                               ; preds = %72, %69
  %75 = phi double [ %71, %69 ], [ %73, %72 ]
  %76 = fmul double %75, %67
  %77 = fsub double %62, %76
  %78 = icmp ult i64 %63, 256
  br i1 %78, label %42, label %79

79:                                               ; preds = %74
  %80 = icmp eq i64 %66, 0
  %81 = uitofp i64 %66 to double
  br i1 %80, label %93, label %82

82:                                               ; preds = %79
  %83 = icmp ult i64 %66, 256
  br i1 %83, label %84, label %87

84:                                               ; preds = %82
  %85 = getelementptr inbounds [256 x double], [256 x double]* @kBrotliLog2Table, i64 0, i64 %66
  %86 = load double, double* %85, align 8
  br label %89

87:                                               ; preds = %82
  %88 = tail call double @log2(double %81) #8
  br label %89

89:                                               ; preds = %87, %84
  %90 = phi double [ %86, %84 ], [ %88, %87 ]
  %91 = fmul double %90, %81
  %92 = fadd double %77, %91
  br label %93

93:                                               ; preds = %79, %89
  %94 = phi double [ %92, %89 ], [ %77, %79 ]
  %95 = fcmp olt double %94, %81
  %96 = select i1 %95, double %81, double %94
  %97 = fcmp ule double %96, %21
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %19) #8
  br i1 %97, label %98, label %99

98:                                               ; preds = %13, %93, %9
  br label %99

99:                                               ; preds = %6, %93, %98
  %100 = phi i32 [ 1, %98 ], [ 0, %93 ], [ 0, %6 ]
  ret i32 %100
}

declare hidden void @BrotliStoreUncompressedMetaBlock(i32, i8*, i64, i64, i64, i64*, i8*) local_unnamed_addr #4

declare hidden void @BrotliBuildMetaBlock(%struct.MemoryManager*, i8*, i64, i64, %struct.BrotliEncoderParams*, i8 zeroext, i8 zeroext, %struct.Command*, i64, i32, %struct.MetaBlockSplit*) local_unnamed_addr #4

declare hidden void @BrotliOptimizeHistograms(i32, %struct.MetaBlockSplit*) local_unnamed_addr #4

declare hidden void @BrotliStoreMetaBlock(%struct.MemoryManager*, i8*, i64, i64, i64, i8 zeroext, i8 zeroext, i32, %struct.BrotliEncoderParams*, i32, %struct.Command*, i64, %struct.MetaBlockSplit*, i64*, i8*) local_unnamed_addr #4

declare hidden void @BrotliInitDistanceParams(%struct.BrotliEncoderParams*, i32, i32) local_unnamed_addr #4

declare hidden i32 @BrotliIsMostlyUTF8(i8*, i64, i64, i64, double) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.cttz.i64(i64, i1 immarg) #7

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #7

; Function Attrs: nofree nounwind
declare double @log2(double) local_unnamed_addr #3

declare hidden void @BrotliInitBlockSplit(%struct.BlockSplit*) local_unnamed_addr #4

declare hidden void @BrotliDestroyBlockSplit(%struct.MemoryManager*, %struct.BlockSplit*) local_unnamed_addr #4

declare hidden void @BrotliCompressFragmentFast(%struct.MemoryManager*, i8*, i64, i32, i32*, i64, i8*, i16*, i64*, i8*, i64*, i8*) local_unnamed_addr #4

declare hidden void @BrotliCompressFragmentTwoPass(%struct.MemoryManager*, i8*, i64, i32, i32*, i8*, i32*, i64, i64*, i8*) local_unnamed_addr #4

declare hidden void @BrotliCreateZopfliBackwardReferences(%struct.MemoryManager*, i64, i64, i8*, i64, i8*, %struct.BrotliEncoderParams*, %struct.Hasher*, i32*, i64*, %struct.Command*, i64*, i64*) local_unnamed_addr #4

declare hidden void @BrotliCreateHqZopfliBackwardReferences(%struct.MemoryManager*, i64, i64, i8*, i64, i8*, %struct.BrotliEncoderParams*, %struct.Hasher*, i32*, i64*, %struct.Command*, i64*, i64*) local_unnamed_addr #4

declare hidden void @BrotliCreateBackwardReferences(i64, i64, i8*, i64, i8*, %struct.BrotliEncoderParams*, %struct.Hasher*, i32*, i64*, %struct.Command*, i64*, i64*) local_unnamed_addr #4

declare hidden void @BrotliStoreMetaBlockFast(%struct.MemoryManager*, i8*, i64, i64, i64, i32, %struct.BrotliEncoderParams*, %struct.Command*, i64, i64*, i8*) local_unnamed_addr #4

declare hidden void @BrotliStoreMetaBlockTrivial(%struct.MemoryManager*, i8*, i64, i64, i64, i32, %struct.BrotliEncoderParams*, %struct.Command*, i64, i64*, i8*) local_unnamed_addr #4

declare hidden void @BrotliBuildMetaBlockGreedy(%struct.MemoryManager*, i8*, i64, i64, i8 zeroext, i8 zeroext, i8*, i64, i32*, %struct.Command*, i64, %struct.MetaBlockSplit*) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.usub.sat.i64(i64, i64) #7

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"InitializeH2: argument 0"}
!4 = distinct !{!4, !"InitializeH2"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"InitializeH3: argument 0"}
!7 = distinct !{!7, !"InitializeH3"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"InitializeH4: argument 0"}
!10 = distinct !{!10, !"InitializeH4"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"InitializeH5: argument 0"}
!13 = distinct !{!13, !"InitializeH5"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"InitializeH6: argument 0"}
!16 = distinct !{!16, !"InitializeH6"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"InitializeH40: argument 0"}
!19 = distinct !{!19, !"InitializeH40"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"InitializeH41: argument 0"}
!22 = distinct !{!22, !"InitializeH41"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"InitializeH42: argument 0"}
!25 = distinct !{!25, !"InitializeH42"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"InitializeH54: argument 0"}
!28 = distinct !{!28, !"InitializeH54"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"InitializeH35: argument 0"}
!31 = distinct !{!31, !"InitializeH35"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"InitializeH55: argument 0"}
!34 = distinct !{!34, !"InitializeH55"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"InitializeH65: argument 0"}
!37 = distinct !{!37, !"InitializeH65"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"InitializeH10: argument 0"}
!40 = distinct !{!40, !"InitializeH10"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"PrepareH2: argument 0"}
!43 = distinct !{!43, !"PrepareH2"}
!44 = !{!45}
!45 = distinct !{!45, !43, !"PrepareH2: argument 1"}
!46 = !{!42, !45}
!47 = !{!48}
!48 = distinct !{!48, !49, !"PrepareH3: argument 0"}
!49 = distinct !{!49, !"PrepareH3"}
!50 = !{!51}
!51 = distinct !{!51, !49, !"PrepareH3: argument 1"}
!52 = !{!48, !51}
!53 = !{!54}
!54 = distinct !{!54, !55, !"PrepareH4: argument 0"}
!55 = distinct !{!55, !"PrepareH4"}
!56 = !{!57}
!57 = distinct !{!57, !55, !"PrepareH4: argument 1"}
!58 = !{!54, !57}
!59 = !{!60}
!60 = distinct !{!60, !61, !"PrepareH5: argument 0"}
!61 = distinct !{!61, !"PrepareH5"}
!62 = !{!63}
!63 = distinct !{!63, !61, !"PrepareH5: argument 1"}
!64 = !{!65, !63}
!65 = distinct !{!65, !66, !"HashBytesH5: argument 0"}
!66 = distinct !{!66, !"HashBytesH5"}
!67 = !{!60, !63}
!68 = !{!69}
!69 = distinct !{!69, !70, !"PrepareH6: argument 0"}
!70 = distinct !{!70, !"PrepareH6"}
!71 = !{!72}
!72 = distinct !{!72, !70, !"PrepareH6: argument 1"}
!73 = !{!74, !72}
!74 = distinct !{!74, !75, !"HashBytesH6: argument 0"}
!75 = distinct !{!75, !"HashBytesH6"}
!76 = !{!69, !72}
!77 = !{!78}
!78 = distinct !{!78, !79, !"PrepareH40: argument 0"}
!79 = distinct !{!79, !"PrepareH40"}
!80 = !{!81}
!81 = distinct !{!81, !79, !"PrepareH40: argument 1"}
!82 = !{!83, !81}
!83 = distinct !{!83, !84, !"HashBytesH40: argument 0"}
!84 = distinct !{!84, !"HashBytesH40"}
!85 = !{!78, !81}
!86 = !{!87}
!87 = distinct !{!87, !88, !"PrepareH41: argument 0"}
!88 = distinct !{!88, !"PrepareH41"}
!89 = !{!90}
!90 = distinct !{!90, !88, !"PrepareH41: argument 1"}
!91 = !{!92, !90}
!92 = distinct !{!92, !93, !"HashBytesH41: argument 0"}
!93 = distinct !{!93, !"HashBytesH41"}
!94 = !{!87, !90}
!95 = !{!96}
!96 = distinct !{!96, !97, !"PrepareH42: argument 0"}
!97 = distinct !{!97, !"PrepareH42"}
!98 = !{!99}
!99 = distinct !{!99, !97, !"PrepareH42: argument 1"}
!100 = !{!101, !99}
!101 = distinct !{!101, !102, !"HashBytesH42: argument 0"}
!102 = distinct !{!102, !"HashBytesH42"}
!103 = !{!96, !99}
!104 = !{!105}
!105 = distinct !{!105, !106, !"PrepareH54: argument 0"}
!106 = distinct !{!106, !"PrepareH54"}
!107 = !{!108}
!108 = distinct !{!108, !106, !"PrepareH54: argument 1"}
!109 = !{!105, !108}
!110 = !{!111}
!111 = distinct !{!111, !112, !"PrepareH35: argument 0"}
!112 = distinct !{!112, !"PrepareH35"}
!113 = !{!114}
!114 = distinct !{!114, !112, !"PrepareH35: argument 1"}
!115 = !{!116, !111}
!116 = distinct !{!116, !117, !"PrepareH3: argument 0"}
!117 = distinct !{!117, !"PrepareH3"}
!118 = !{!119, !114}
!119 = distinct !{!119, !117, !"PrepareH3: argument 1"}
!120 = !{!121, !111}
!121 = distinct !{!121, !122, !"InitializeH3: argument 0"}
!122 = distinct !{!122, !"InitializeH3"}
!123 = !{!121, !111, !114}
!124 = !{!125, !111}
!125 = distinct !{!125, !126, !"InitializeHROLLING_FAST: argument 0"}
!126 = distinct !{!126, !"InitializeHROLLING_FAST"}
!127 = !{!125, !111, !114}
!128 = !{!116, !119, !111, !114}
!129 = !{!130, !111}
!130 = distinct !{!130, !131, !"PrepareHROLLING_FAST: argument 0"}
!131 = distinct !{!131, !"PrepareHROLLING_FAST"}
!132 = !{!133, !114}
!133 = distinct !{!133, !131, !"PrepareHROLLING_FAST: argument 1"}
!134 = !{!135}
!135 = distinct !{!135, !136, !"PrepareH55: argument 0"}
!136 = distinct !{!136, !"PrepareH55"}
!137 = !{!138}
!138 = distinct !{!138, !136, !"PrepareH55: argument 1"}
!139 = !{!140, !135}
!140 = distinct !{!140, !141, !"PrepareH54: argument 0"}
!141 = distinct !{!141, !"PrepareH54"}
!142 = !{!143, !138}
!143 = distinct !{!143, !141, !"PrepareH54: argument 1"}
!144 = !{!145, !135}
!145 = distinct !{!145, !146, !"InitializeH54: argument 0"}
!146 = distinct !{!146, !"InitializeH54"}
!147 = !{!145, !135, !138}
!148 = !{!149, !135}
!149 = distinct !{!149, !150, !"InitializeHROLLING_FAST: argument 0"}
!150 = distinct !{!150, !"InitializeHROLLING_FAST"}
!151 = !{!149, !135, !138}
!152 = !{!140, !143, !135, !138}
!153 = !{!154, !135}
!154 = distinct !{!154, !155, !"PrepareHROLLING_FAST: argument 0"}
!155 = distinct !{!155, !"PrepareHROLLING_FAST"}
!156 = !{!157, !138}
!157 = distinct !{!157, !155, !"PrepareHROLLING_FAST: argument 1"}
!158 = !{!159}
!159 = distinct !{!159, !160, !"PrepareH65: argument 0"}
!160 = distinct !{!160, !"PrepareH65"}
!161 = !{!162}
!162 = distinct !{!162, !160, !"PrepareH65: argument 1"}
!163 = !{!164, !159}
!164 = distinct !{!164, !165, !"PrepareH6: argument 0"}
!165 = distinct !{!165, !"PrepareH6"}
!166 = !{!167, !162}
!167 = distinct !{!167, !165, !"PrepareH6: argument 1"}
!168 = !{!169, !159}
!169 = distinct !{!169, !170, !"InitializeH6: argument 0"}
!170 = distinct !{!170, !"InitializeH6"}
!171 = !{!169, !162}
!172 = !{!173, !159}
!173 = distinct !{!173, !174, !"InitializeHROLLING: argument 0"}
!174 = distinct !{!174, !"InitializeHROLLING"}
!175 = !{!173, !162}
!176 = !{!177, !167, !162}
!177 = distinct !{!177, !178, !"HashBytesH6: argument 0"}
!178 = distinct !{!178, !"HashBytesH6"}
!179 = !{!164, !167, !162}
!180 = !{!181, !159}
!181 = distinct !{!181, !182, !"PrepareHROLLING: argument 0"}
!182 = distinct !{!182, !"PrepareHROLLING"}
!183 = !{!184, !162}
!184 = distinct !{!184, !182, !"PrepareHROLLING: argument 1"}
!185 = !{!186}
!186 = distinct !{!186, !187, !"PrepareH10: argument 0"}
!187 = distinct !{!187, !"PrepareH10"}
!188 = distinct !{!188, !189}
!189 = !{!"llvm.loop.isvectorized", i32 1}
!190 = distinct !{!190, !191}
!191 = !{!"llvm.loop.unroll.disable"}
!192 = distinct !{!192, !191}
!193 = !{!194, !196, !198}
!194 = distinct !{!194, !195, !"PrepareHROLLING_FAST: argument 0"}
!195 = distinct !{!195, !"PrepareHROLLING_FAST"}
!196 = distinct !{!196, !197, !"StitchToPreviousBlockHROLLING_FAST: argument 0"}
!197 = distinct !{!197, !"StitchToPreviousBlockHROLLING_FAST"}
!198 = distinct !{!198, !199, !"StitchToPreviousBlockH35: argument 0"}
!199 = distinct !{!199, !"StitchToPreviousBlockH35"}
!200 = !{!201}
!201 = distinct !{!201, !195, !"PrepareHROLLING_FAST: argument 1"}
!202 = !{!203, !205, !207}
!203 = distinct !{!203, !204, !"PrepareHROLLING_FAST: argument 0"}
!204 = distinct !{!204, !"PrepareHROLLING_FAST"}
!205 = distinct !{!205, !206, !"StitchToPreviousBlockHROLLING_FAST: argument 0"}
!206 = distinct !{!206, !"StitchToPreviousBlockHROLLING_FAST"}
!207 = distinct !{!207, !208, !"StitchToPreviousBlockH55: argument 0"}
!208 = distinct !{!208, !"StitchToPreviousBlockH55"}
!209 = !{!210}
!210 = distinct !{!210, !204, !"PrepareHROLLING_FAST: argument 1"}
!211 = !{!212, !214, !216}
!212 = distinct !{!212, !213, !"PrepareHROLLING: argument 0"}
!213 = distinct !{!213, !"PrepareHROLLING"}
!214 = distinct !{!214, !215, !"StitchToPreviousBlockHROLLING: argument 0"}
!215 = distinct !{!215, !"StitchToPreviousBlockHROLLING"}
!216 = distinct !{!216, !217, !"StitchToPreviousBlockH65: argument 0"}
!217 = distinct !{!217, !"StitchToPreviousBlockH65"}
!218 = !{!219}
!219 = distinct !{!219, !213, !"PrepareHROLLING: argument 1"}
!220 = !{!214, !216, !205, !207, !196, !198}
!221 = !{!222}
!222 = distinct !{!222, !223, !"StitchToPreviousBlockH10: argument 0"}
!223 = distinct !{!223, !"StitchToPreviousBlockH10"}
!224 = !{!225, !222}
!225 = distinct !{!225, !226, !"StoreAndFindMatchesH10: argument 0"}
!226 = distinct !{!226, !"StoreAndFindMatchesH10"}
!227 = !{!228}
!228 = distinct !{!228, !226, !"StoreAndFindMatchesH10: argument 1"}
!229 = !{!230, !228}
!230 = distinct !{!230, !231, !"HashBytesH10: argument 0"}
!231 = distinct !{!231, !"HashBytesH10"}
!232 = !{!225, !228, !222}
!233 = !{!"branch_weights", i32 1, i32 2000}
!234 = !{i64 0, i64 65}
!235 = !{!"branch_weights", i32 2000, i32 1}
!236 = !{i32 0, i32 33}
!237 = !{!238}
!238 = distinct !{!238, !239, !"BrotliWriteBits: argument 0"}
!239 = distinct !{!239, !"BrotliWriteBits"}
!240 = !{!241}
!241 = distinct !{!241, !239, !"BrotliWriteBits: argument 1"}
!242 = !{!243}
!243 = distinct !{!243, !244, !"BrotliWriteBits: argument 1"}
!244 = distinct !{!244, !"BrotliWriteBits"}
!245 = !{!246}
!246 = distinct !{!246, !244, !"BrotliWriteBits: argument 0"}
!247 = !{!248}
!248 = distinct !{!248, !249, !"BrotliWriteBits: argument 1"}
!249 = distinct !{!249, !"BrotliWriteBits"}
!250 = !{!251}
!251 = distinct !{!251, !249, !"BrotliWriteBits: argument 0"}
!252 = !{!253}
!253 = distinct !{!253, !254, !"BrotliWriteBits: argument 1"}
!254 = distinct !{!254, !"BrotliWriteBits"}
!255 = !{!256}
!256 = distinct !{!256, !254, !"BrotliWriteBits: argument 0"}
!257 = !{!258}
!258 = distinct !{!258, !259, !"BrotliWriteBits: argument 1"}
!259 = distinct !{!259, !"BrotliWriteBits"}
!260 = !{!261}
!261 = distinct !{!261, !259, !"BrotliWriteBits: argument 0"}
!262 = !{!263}
!263 = distinct !{!263, !264, !"BrotliWriteBits: argument 1"}
!264 = distinct !{!264, !"BrotliWriteBits"}
!265 = !{!266}
!266 = distinct !{!266, !264, !"BrotliWriteBits: argument 0"}
!267 = !{!268}
!268 = distinct !{!268, !269, !"BrotliWriteBits: argument 1"}
!269 = distinct !{!269, !"BrotliWriteBits"}
!270 = !{!271}
!271 = distinct !{!271, !269, !"BrotliWriteBits: argument 0"}
!272 = !{!273}
!273 = distinct !{!273, !274, !"InitializeH2: argument 0"}
!274 = distinct !{!274, !"InitializeH2"}
!275 = !{!276}
!276 = distinct !{!276, !277, !"InitializeH3: argument 0"}
!277 = distinct !{!277, !"InitializeH3"}
!278 = !{!279}
!279 = distinct !{!279, !280, !"InitializeH4: argument 0"}
!280 = distinct !{!280, !"InitializeH4"}
!281 = !{!282}
!282 = distinct !{!282, !283, !"InitializeH5: argument 0"}
!283 = distinct !{!283, !"InitializeH5"}
!284 = !{!285}
!285 = distinct !{!285, !286, !"InitializeH6: argument 0"}
!286 = distinct !{!286, !"InitializeH6"}
!287 = !{!288}
!288 = distinct !{!288, !289, !"InitializeH40: argument 0"}
!289 = distinct !{!289, !"InitializeH40"}
!290 = !{!291}
!291 = distinct !{!291, !292, !"InitializeH41: argument 0"}
!292 = distinct !{!292, !"InitializeH41"}
!293 = !{!294}
!294 = distinct !{!294, !295, !"InitializeH42: argument 0"}
!295 = distinct !{!295, !"InitializeH42"}
!296 = !{!297}
!297 = distinct !{!297, !298, !"InitializeH54: argument 0"}
!298 = distinct !{!298, !"InitializeH54"}
!299 = !{!300}
!300 = distinct !{!300, !301, !"InitializeH35: argument 0"}
!301 = distinct !{!301, !"InitializeH35"}
!302 = !{!303}
!303 = distinct !{!303, !304, !"InitializeH55: argument 0"}
!304 = distinct !{!304, !"InitializeH55"}
!305 = !{!306}
!306 = distinct !{!306, !307, !"InitializeH65: argument 0"}
!307 = distinct !{!307, !"InitializeH65"}
!308 = !{!309}
!309 = distinct !{!309, !310, !"InitializeH10: argument 0"}
!310 = distinct !{!310, !"InitializeH10"}
!311 = !{!312}
!312 = distinct !{!312, !313, !"PrepareH2: argument 0"}
!313 = distinct !{!313, !"PrepareH2"}
!314 = !{!315}
!315 = distinct !{!315, !313, !"PrepareH2: argument 1"}
!316 = !{!312, !315}
!317 = !{!318}
!318 = distinct !{!318, !319, !"PrepareH3: argument 0"}
!319 = distinct !{!319, !"PrepareH3"}
!320 = !{!321}
!321 = distinct !{!321, !319, !"PrepareH3: argument 1"}
!322 = !{!318, !321}
!323 = !{!324}
!324 = distinct !{!324, !325, !"PrepareH4: argument 0"}
!325 = distinct !{!325, !"PrepareH4"}
!326 = !{!327}
!327 = distinct !{!327, !325, !"PrepareH4: argument 1"}
!328 = !{!324, !327}
!329 = !{!330}
!330 = distinct !{!330, !331, !"PrepareH5: argument 0"}
!331 = distinct !{!331, !"PrepareH5"}
!332 = !{!333}
!333 = distinct !{!333, !331, !"PrepareH5: argument 1"}
!334 = !{!335, !333}
!335 = distinct !{!335, !336, !"HashBytesH5: argument 0"}
!336 = distinct !{!336, !"HashBytesH5"}
!337 = !{!330, !333}
!338 = !{!339}
!339 = distinct !{!339, !340, !"PrepareH6: argument 0"}
!340 = distinct !{!340, !"PrepareH6"}
!341 = !{!342}
!342 = distinct !{!342, !340, !"PrepareH6: argument 1"}
!343 = !{!344, !342}
!344 = distinct !{!344, !345, !"HashBytesH6: argument 0"}
!345 = distinct !{!345, !"HashBytesH6"}
!346 = !{!339, !342}
!347 = !{!348}
!348 = distinct !{!348, !349, !"PrepareH40: argument 0"}
!349 = distinct !{!349, !"PrepareH40"}
!350 = !{!351}
!351 = distinct !{!351, !349, !"PrepareH40: argument 1"}
!352 = !{!353, !351}
!353 = distinct !{!353, !354, !"HashBytesH40: argument 0"}
!354 = distinct !{!354, !"HashBytesH40"}
!355 = !{!348, !351}
!356 = !{!357}
!357 = distinct !{!357, !358, !"PrepareH41: argument 0"}
!358 = distinct !{!358, !"PrepareH41"}
!359 = !{!360}
!360 = distinct !{!360, !358, !"PrepareH41: argument 1"}
!361 = !{!362, !360}
!362 = distinct !{!362, !363, !"HashBytesH41: argument 0"}
!363 = distinct !{!363, !"HashBytesH41"}
!364 = !{!357, !360}
!365 = !{!366}
!366 = distinct !{!366, !367, !"PrepareH42: argument 0"}
!367 = distinct !{!367, !"PrepareH42"}
!368 = !{!369}
!369 = distinct !{!369, !367, !"PrepareH42: argument 1"}
!370 = !{!371, !369}
!371 = distinct !{!371, !372, !"HashBytesH42: argument 0"}
!372 = distinct !{!372, !"HashBytesH42"}
!373 = !{!366, !369}
!374 = !{!375}
!375 = distinct !{!375, !376, !"PrepareH54: argument 0"}
!376 = distinct !{!376, !"PrepareH54"}
!377 = !{!378}
!378 = distinct !{!378, !376, !"PrepareH54: argument 1"}
!379 = !{!375, !378}
!380 = !{!381}
!381 = distinct !{!381, !382, !"PrepareH35: argument 0"}
!382 = distinct !{!382, !"PrepareH35"}
!383 = !{!384}
!384 = distinct !{!384, !382, !"PrepareH35: argument 1"}
!385 = !{!386, !381}
!386 = distinct !{!386, !387, !"PrepareH3: argument 0"}
!387 = distinct !{!387, !"PrepareH3"}
!388 = !{!389, !384}
!389 = distinct !{!389, !387, !"PrepareH3: argument 1"}
!390 = !{!391, !381}
!391 = distinct !{!391, !392, !"InitializeH3: argument 0"}
!392 = distinct !{!392, !"InitializeH3"}
!393 = !{!391, !381, !384}
!394 = !{!395, !381}
!395 = distinct !{!395, !396, !"InitializeHROLLING_FAST: argument 0"}
!396 = distinct !{!396, !"InitializeHROLLING_FAST"}
!397 = !{!395, !381, !384}
!398 = !{!386, !389, !381, !384}
!399 = !{!400, !381}
!400 = distinct !{!400, !401, !"PrepareHROLLING_FAST: argument 0"}
!401 = distinct !{!401, !"PrepareHROLLING_FAST"}
!402 = !{!403, !384}
!403 = distinct !{!403, !401, !"PrepareHROLLING_FAST: argument 1"}
!404 = !{!405}
!405 = distinct !{!405, !406, !"PrepareH55: argument 0"}
!406 = distinct !{!406, !"PrepareH55"}
!407 = !{!408}
!408 = distinct !{!408, !406, !"PrepareH55: argument 1"}
!409 = !{!410, !405}
!410 = distinct !{!410, !411, !"PrepareH54: argument 0"}
!411 = distinct !{!411, !"PrepareH54"}
!412 = !{!413, !408}
!413 = distinct !{!413, !411, !"PrepareH54: argument 1"}
!414 = !{!415, !405}
!415 = distinct !{!415, !416, !"InitializeH54: argument 0"}
!416 = distinct !{!416, !"InitializeH54"}
!417 = !{!415, !405, !408}
!418 = !{!419, !405}
!419 = distinct !{!419, !420, !"InitializeHROLLING_FAST: argument 0"}
!420 = distinct !{!420, !"InitializeHROLLING_FAST"}
!421 = !{!419, !405, !408}
!422 = !{!410, !413, !405, !408}
!423 = !{!424, !405}
!424 = distinct !{!424, !425, !"PrepareHROLLING_FAST: argument 0"}
!425 = distinct !{!425, !"PrepareHROLLING_FAST"}
!426 = !{!427, !408}
!427 = distinct !{!427, !425, !"PrepareHROLLING_FAST: argument 1"}
!428 = !{!429}
!429 = distinct !{!429, !430, !"PrepareH65: argument 0"}
!430 = distinct !{!430, !"PrepareH65"}
!431 = !{!432}
!432 = distinct !{!432, !430, !"PrepareH65: argument 1"}
!433 = !{!434, !429}
!434 = distinct !{!434, !435, !"InitializeH6: argument 0"}
!435 = distinct !{!435, !"InitializeH6"}
!436 = !{!434, !432}
!437 = !{!438, !429}
!438 = distinct !{!438, !439, !"InitializeHROLLING: argument 0"}
!439 = distinct !{!439, !"InitializeHROLLING"}
!440 = !{!438, !432}
!441 = !{!442, !429}
!442 = distinct !{!442, !443, !"PrepareH6: argument 0"}
!443 = distinct !{!443, !"PrepareH6"}
!444 = !{!445, !432}
!445 = distinct !{!445, !443, !"PrepareH6: argument 1"}
!446 = !{!447, !445, !432}
!447 = distinct !{!447, !448, !"HashBytesH6: argument 0"}
!448 = distinct !{!448, !"HashBytesH6"}
!449 = !{!442, !445, !432}
!450 = !{!451, !429}
!451 = distinct !{!451, !452, !"PrepareHROLLING: argument 0"}
!452 = distinct !{!452, !"PrepareHROLLING"}
!453 = !{!454, !432}
!454 = distinct !{!454, !452, !"PrepareHROLLING: argument 1"}
!455 = !{!456}
!456 = distinct !{!456, !457, !"PrepareH10: argument 0"}
!457 = distinct !{!457, !"PrepareH10"}
!458 = distinct !{!458, !189}
!459 = distinct !{!459, !191}
!460 = distinct !{!460, !191}
!461 = !{!462}
!462 = distinct !{!462, !463, !"StoreH2: argument 1"}
!463 = distinct !{!463, !"StoreH2"}
!464 = !{!465, !466}
!465 = distinct !{!465, !463, !"StoreH2: argument 0"}
!466 = distinct !{!466, !467, !"StitchToPreviousBlockH2: argument 0"}
!467 = distinct !{!467, !"StitchToPreviousBlockH2"}
!468 = !{!465, !462, !466}
!469 = !{!470}
!470 = distinct !{!470, !471, !"StoreH2: argument 1"}
!471 = distinct !{!471, !"StoreH2"}
!472 = !{!473, !466}
!473 = distinct !{!473, !471, !"StoreH2: argument 0"}
!474 = !{!473, !470, !466}
!475 = !{!476}
!476 = distinct !{!476, !477, !"StoreH2: argument 1"}
!477 = distinct !{!477, !"StoreH2"}
!478 = !{!479, !466}
!479 = distinct !{!479, !477, !"StoreH2: argument 0"}
!480 = !{!479, !476, !466}
!481 = !{!482}
!482 = distinct !{!482, !483, !"StoreH3: argument 1"}
!483 = distinct !{!483, !"StoreH3"}
!484 = !{!485, !486}
!485 = distinct !{!485, !483, !"StoreH3: argument 0"}
!486 = distinct !{!486, !487, !"StitchToPreviousBlockH3: argument 0"}
!487 = distinct !{!487, !"StitchToPreviousBlockH3"}
!488 = !{!485, !482, !486}
!489 = !{!490}
!490 = distinct !{!490, !491, !"StoreH3: argument 1"}
!491 = distinct !{!491, !"StoreH3"}
!492 = !{!493, !486}
!493 = distinct !{!493, !491, !"StoreH3: argument 0"}
!494 = !{!493, !490, !486}
!495 = !{!496}
!496 = distinct !{!496, !497, !"StoreH3: argument 1"}
!497 = distinct !{!497, !"StoreH3"}
!498 = !{!499, !486}
!499 = distinct !{!499, !497, !"StoreH3: argument 0"}
!500 = !{!499, !496, !486}
!501 = !{!502}
!502 = distinct !{!502, !503, !"StoreH4: argument 1"}
!503 = distinct !{!503, !"StoreH4"}
!504 = !{!505, !506}
!505 = distinct !{!505, !503, !"StoreH4: argument 0"}
!506 = distinct !{!506, !507, !"StitchToPreviousBlockH4: argument 0"}
!507 = distinct !{!507, !"StitchToPreviousBlockH4"}
!508 = !{!505, !502, !506}
!509 = !{!510}
!510 = distinct !{!510, !511, !"StoreH4: argument 1"}
!511 = distinct !{!511, !"StoreH4"}
!512 = !{!513, !506}
!513 = distinct !{!513, !511, !"StoreH4: argument 0"}
!514 = !{!513, !510, !506}
!515 = !{!516}
!516 = distinct !{!516, !517, !"StoreH4: argument 1"}
!517 = distinct !{!517, !"StoreH4"}
!518 = !{!519, !506}
!519 = distinct !{!519, !517, !"StoreH4: argument 0"}
!520 = !{!519, !516, !506}
!521 = !{!522, !524}
!522 = distinct !{!522, !523, !"StoreH5: argument 0"}
!523 = distinct !{!523, !"StoreH5"}
!524 = distinct !{!524, !525, !"StitchToPreviousBlockH5: argument 0"}
!525 = distinct !{!525, !"StitchToPreviousBlockH5"}
!526 = !{!527}
!527 = distinct !{!527, !523, !"StoreH5: argument 1"}
!528 = !{!529, !527}
!529 = distinct !{!529, !530, !"HashBytesH5: argument 0"}
!530 = distinct !{!530, !"HashBytesH5"}
!531 = !{!522, !527, !524}
!532 = !{!533, !535}
!533 = distinct !{!533, !534, !"HashBytesH5: argument 0"}
!534 = distinct !{!534, !"HashBytesH5"}
!535 = distinct !{!535, !536, !"StoreH5: argument 1"}
!536 = distinct !{!536, !"StoreH5"}
!537 = !{!538, !524}
!538 = distinct !{!538, !536, !"StoreH5: argument 0"}
!539 = !{!538, !535, !524}
!540 = !{!541, !543}
!541 = distinct !{!541, !542, !"HashBytesH5: argument 0"}
!542 = distinct !{!542, !"HashBytesH5"}
!543 = distinct !{!543, !544, !"StoreH5: argument 1"}
!544 = distinct !{!544, !"StoreH5"}
!545 = !{!546, !524}
!546 = distinct !{!546, !544, !"StoreH5: argument 0"}
!547 = !{!546, !543, !524}
!548 = !{!549, !551}
!549 = distinct !{!549, !550, !"StoreH6: argument 0"}
!550 = distinct !{!550, !"StoreH6"}
!551 = distinct !{!551, !552, !"StitchToPreviousBlockH6: argument 0"}
!552 = distinct !{!552, !"StitchToPreviousBlockH6"}
!553 = !{!554}
!554 = distinct !{!554, !550, !"StoreH6: argument 1"}
!555 = !{!556, !554}
!556 = distinct !{!556, !557, !"HashBytesH6: argument 0"}
!557 = distinct !{!557, !"HashBytesH6"}
!558 = !{!549, !554, !551}
!559 = !{!560, !562}
!560 = distinct !{!560, !561, !"HashBytesH6: argument 0"}
!561 = distinct !{!561, !"HashBytesH6"}
!562 = distinct !{!562, !563, !"StoreH6: argument 1"}
!563 = distinct !{!563, !"StoreH6"}
!564 = !{!565, !551}
!565 = distinct !{!565, !563, !"StoreH6: argument 0"}
!566 = !{!565, !562, !551}
!567 = !{!568, !570}
!568 = distinct !{!568, !569, !"HashBytesH6: argument 0"}
!569 = distinct !{!569, !"HashBytesH6"}
!570 = distinct !{!570, !571, !"StoreH6: argument 1"}
!571 = distinct !{!571, !"StoreH6"}
!572 = !{!573, !551}
!573 = distinct !{!573, !571, !"StoreH6: argument 0"}
!574 = !{!573, !570, !551}
!575 = !{!576, !578}
!576 = distinct !{!576, !577, !"StoreH40: argument 0"}
!577 = distinct !{!577, !"StoreH40"}
!578 = distinct !{!578, !579, !"StitchToPreviousBlockH40: argument 0"}
!579 = distinct !{!579, !"StitchToPreviousBlockH40"}
!580 = !{!581}
!581 = distinct !{!581, !577, !"StoreH40: argument 1"}
!582 = !{!583, !581}
!583 = distinct !{!583, !584, !"HashBytesH40: argument 0"}
!584 = distinct !{!584, !"HashBytesH40"}
!585 = !{!576, !581, !578}
!586 = !{!587, !589}
!587 = distinct !{!587, !588, !"HashBytesH40: argument 0"}
!588 = distinct !{!588, !"HashBytesH40"}
!589 = distinct !{!589, !590, !"StoreH40: argument 1"}
!590 = distinct !{!590, !"StoreH40"}
!591 = !{!592, !578}
!592 = distinct !{!592, !590, !"StoreH40: argument 0"}
!593 = !{!592, !589, !578}
!594 = !{!595, !597}
!595 = distinct !{!595, !596, !"HashBytesH40: argument 0"}
!596 = distinct !{!596, !"HashBytesH40"}
!597 = distinct !{!597, !598, !"StoreH40: argument 1"}
!598 = distinct !{!598, !"StoreH40"}
!599 = !{!600, !578}
!600 = distinct !{!600, !598, !"StoreH40: argument 0"}
!601 = !{!597}
!602 = !{!600, !597, !578}
!603 = !{!604, !606}
!604 = distinct !{!604, !605, !"StoreH41: argument 0"}
!605 = distinct !{!605, !"StoreH41"}
!606 = distinct !{!606, !607, !"StitchToPreviousBlockH41: argument 0"}
!607 = distinct !{!607, !"StitchToPreviousBlockH41"}
!608 = !{!609}
!609 = distinct !{!609, !605, !"StoreH41: argument 1"}
!610 = !{!611, !609}
!611 = distinct !{!611, !612, !"HashBytesH41: argument 0"}
!612 = distinct !{!612, !"HashBytesH41"}
!613 = !{!604, !609, !606}
!614 = !{!615, !617}
!615 = distinct !{!615, !616, !"HashBytesH41: argument 0"}
!616 = distinct !{!616, !"HashBytesH41"}
!617 = distinct !{!617, !618, !"StoreH41: argument 1"}
!618 = distinct !{!618, !"StoreH41"}
!619 = !{!620, !606}
!620 = distinct !{!620, !618, !"StoreH41: argument 0"}
!621 = !{!620, !617, !606}
!622 = !{!623, !625}
!623 = distinct !{!623, !624, !"HashBytesH41: argument 0"}
!624 = distinct !{!624, !"HashBytesH41"}
!625 = distinct !{!625, !626, !"StoreH41: argument 1"}
!626 = distinct !{!626, !"StoreH41"}
!627 = !{!628, !606}
!628 = distinct !{!628, !626, !"StoreH41: argument 0"}
!629 = !{!625}
!630 = !{!628, !625, !606}
!631 = !{!632, !634}
!632 = distinct !{!632, !633, !"StoreH42: argument 0"}
!633 = distinct !{!633, !"StoreH42"}
!634 = distinct !{!634, !635, !"StitchToPreviousBlockH42: argument 0"}
!635 = distinct !{!635, !"StitchToPreviousBlockH42"}
!636 = !{!637}
!637 = distinct !{!637, !633, !"StoreH42: argument 1"}
!638 = !{!639, !637}
!639 = distinct !{!639, !640, !"HashBytesH42: argument 0"}
!640 = distinct !{!640, !"HashBytesH42"}
!641 = !{!632, !637, !634}
!642 = !{!643, !634}
!643 = distinct !{!643, !644, !"StoreH42: argument 0"}
!644 = distinct !{!644, !"StoreH42"}
!645 = !{!646}
!646 = distinct !{!646, !644, !"StoreH42: argument 1"}
!647 = !{!648, !646}
!648 = distinct !{!648, !649, !"HashBytesH42: argument 0"}
!649 = distinct !{!649, !"HashBytesH42"}
!650 = !{!643, !646, !634}
!651 = !{!652, !634}
!652 = distinct !{!652, !653, !"StoreH42: argument 0"}
!653 = distinct !{!653, !"StoreH42"}
!654 = !{!655}
!655 = distinct !{!655, !653, !"StoreH42: argument 1"}
!656 = !{!657, !655}
!657 = distinct !{!657, !658, !"HashBytesH42: argument 0"}
!658 = distinct !{!658, !"HashBytesH42"}
!659 = !{!652, !655, !634}
!660 = !{!661}
!661 = distinct !{!661, !662, !"StoreH54: argument 1"}
!662 = distinct !{!662, !"StoreH54"}
!663 = !{!664, !665}
!664 = distinct !{!664, !662, !"StoreH54: argument 0"}
!665 = distinct !{!665, !666, !"StitchToPreviousBlockH54: argument 0"}
!666 = distinct !{!666, !"StitchToPreviousBlockH54"}
!667 = !{!664, !661, !665}
!668 = !{!669}
!669 = distinct !{!669, !670, !"StoreH54: argument 1"}
!670 = distinct !{!670, !"StoreH54"}
!671 = !{!672, !665}
!672 = distinct !{!672, !670, !"StoreH54: argument 0"}
!673 = !{!672, !669, !665}
!674 = !{!675}
!675 = distinct !{!675, !676, !"StoreH54: argument 1"}
!676 = distinct !{!676, !"StoreH54"}
!677 = !{!678, !665}
!678 = distinct !{!678, !676, !"StoreH54: argument 0"}
!679 = !{!678, !675, !665}
!680 = !{!681}
!681 = distinct !{!681, !682, !"StoreH3: argument 1"}
!682 = distinct !{!682, !"StoreH3"}
!683 = !{!684, !685, !687}
!684 = distinct !{!684, !682, !"StoreH3: argument 0"}
!685 = distinct !{!685, !686, !"StitchToPreviousBlockH3: argument 0"}
!686 = distinct !{!686, !"StitchToPreviousBlockH3"}
!687 = distinct !{!687, !688, !"StitchToPreviousBlockH35: argument 0"}
!688 = distinct !{!688, !"StitchToPreviousBlockH35"}
!689 = !{!684, !681, !685, !687}
!690 = !{!691}
!691 = distinct !{!691, !692, !"StoreH3: argument 1"}
!692 = distinct !{!692, !"StoreH3"}
!693 = !{!694, !685, !687}
!694 = distinct !{!694, !692, !"StoreH3: argument 0"}
!695 = !{!694, !691, !685, !687}
!696 = !{!697}
!697 = distinct !{!697, !698, !"StoreH3: argument 1"}
!698 = distinct !{!698, !"StoreH3"}
!699 = !{!700, !685, !687}
!700 = distinct !{!700, !698, !"StoreH3: argument 0"}
!701 = !{!700, !697, !685, !687}
!702 = !{!703, !705, !687}
!703 = distinct !{!703, !704, !"PrepareHROLLING_FAST: argument 0"}
!704 = distinct !{!704, !"PrepareHROLLING_FAST"}
!705 = distinct !{!705, !706, !"StitchToPreviousBlockHROLLING_FAST: argument 0"}
!706 = distinct !{!706, !"StitchToPreviousBlockHROLLING_FAST"}
!707 = !{!708}
!708 = distinct !{!708, !704, !"PrepareHROLLING_FAST: argument 1"}
!709 = !{!705, !687}
!710 = !{!711}
!711 = distinct !{!711, !712, !"StoreH54: argument 1"}
!712 = distinct !{!712, !"StoreH54"}
!713 = !{!714, !715, !717}
!714 = distinct !{!714, !712, !"StoreH54: argument 0"}
!715 = distinct !{!715, !716, !"StitchToPreviousBlockH54: argument 0"}
!716 = distinct !{!716, !"StitchToPreviousBlockH54"}
!717 = distinct !{!717, !718, !"StitchToPreviousBlockH55: argument 0"}
!718 = distinct !{!718, !"StitchToPreviousBlockH55"}
!719 = !{!714, !711, !715, !717}
!720 = !{!721}
!721 = distinct !{!721, !722, !"StoreH54: argument 1"}
!722 = distinct !{!722, !"StoreH54"}
!723 = !{!724, !715, !717}
!724 = distinct !{!724, !722, !"StoreH54: argument 0"}
!725 = !{!724, !721, !715, !717}
!726 = !{!727}
!727 = distinct !{!727, !728, !"StoreH54: argument 1"}
!728 = distinct !{!728, !"StoreH54"}
!729 = !{!730, !715, !717}
!730 = distinct !{!730, !728, !"StoreH54: argument 0"}
!731 = !{!730, !727, !715, !717}
!732 = !{!733, !735, !717}
!733 = distinct !{!733, !734, !"PrepareHROLLING_FAST: argument 0"}
!734 = distinct !{!734, !"PrepareHROLLING_FAST"}
!735 = distinct !{!735, !736, !"StitchToPreviousBlockHROLLING_FAST: argument 0"}
!736 = distinct !{!736, !"StitchToPreviousBlockHROLLING_FAST"}
!737 = !{!738}
!738 = distinct !{!738, !734, !"PrepareHROLLING_FAST: argument 1"}
!739 = !{!735, !717}
!740 = !{!741, !743, !745}
!741 = distinct !{!741, !742, !"StoreH6: argument 0"}
!742 = distinct !{!742, !"StoreH6"}
!743 = distinct !{!743, !744, !"StitchToPreviousBlockH6: argument 0"}
!744 = distinct !{!744, !"StitchToPreviousBlockH6"}
!745 = distinct !{!745, !746, !"StitchToPreviousBlockH65: argument 0"}
!746 = distinct !{!746, !"StitchToPreviousBlockH65"}
!747 = !{!748}
!748 = distinct !{!748, !742, !"StoreH6: argument 1"}
!749 = !{!750, !748}
!750 = distinct !{!750, !751, !"HashBytesH6: argument 0"}
!751 = distinct !{!751, !"HashBytesH6"}
!752 = !{!741, !748, !743, !745}
!753 = !{!754, !756}
!754 = distinct !{!754, !755, !"HashBytesH6: argument 0"}
!755 = distinct !{!755, !"HashBytesH6"}
!756 = distinct !{!756, !757, !"StoreH6: argument 1"}
!757 = distinct !{!757, !"StoreH6"}
!758 = !{!759, !743, !745}
!759 = distinct !{!759, !757, !"StoreH6: argument 0"}
!760 = !{!759, !756, !743, !745}
!761 = !{!762, !764}
!762 = distinct !{!762, !763, !"HashBytesH6: argument 0"}
!763 = distinct !{!763, !"HashBytesH6"}
!764 = distinct !{!764, !765, !"StoreH6: argument 1"}
!765 = distinct !{!765, !"StoreH6"}
!766 = !{!767, !743, !745}
!767 = distinct !{!767, !765, !"StoreH6: argument 0"}
!768 = !{!767, !764, !743, !745}
!769 = !{!770, !772, !745}
!770 = distinct !{!770, !771, !"PrepareHROLLING: argument 0"}
!771 = distinct !{!771, !"PrepareHROLLING"}
!772 = distinct !{!772, !773, !"StitchToPreviousBlockHROLLING: argument 0"}
!773 = distinct !{!773, !"StitchToPreviousBlockHROLLING"}
!774 = !{!775}
!775 = distinct !{!775, !771, !"PrepareHROLLING: argument 1"}
!776 = !{!772, !745}
!777 = !{!778}
!778 = distinct !{!778, !779, !"StitchToPreviousBlockH10: argument 0"}
!779 = distinct !{!779, !"StitchToPreviousBlockH10"}
!780 = !{!781, !778}
!781 = distinct !{!781, !782, !"StoreAndFindMatchesH10: argument 0"}
!782 = distinct !{!782, !"StoreAndFindMatchesH10"}
!783 = !{!784}
!784 = distinct !{!784, !782, !"StoreAndFindMatchesH10: argument 1"}
!785 = !{!786, !784}
!786 = distinct !{!786, !787, !"HashBytesH10: argument 0"}
!787 = distinct !{!787, !"HashBytesH10"}
!788 = !{!781, !784, !778}
!789 = !{!790}
!790 = distinct !{!790, !791, !"BrotliWriteBits: argument 0"}
!791 = distinct !{!791, !"BrotliWriteBits"}
!792 = !{!793}
!793 = distinct !{!793, !791, !"BrotliWriteBits: argument 1"}
