; ModuleID = '../../third_party/nasm/output/outas86.c'
source_filename = "../../third_party/nasm/output/outas86.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.dfmt = type { i8*, i8*, void ()*, void (i8*, i32, i32)*, void (i8*, i32, i64, i32, i8*)*, void (i8*, i8*)*, void (i32)*, void (i32, i8*)*, void ()*, %struct.pragma_facility* }
%struct.pragma_facility = type { i8*, i32 (%struct.pragma*)* }
%struct.pragma = type { %struct.pragma_facility*, i8*, i8*, i8*, i32 }
%struct.ofmt = type { i8*, i8*, i8*, i32, i32, %struct.dfmt**, %struct.dfmt*, i8*, void ()*, void ()*, void (%struct.out_data*)*, void (i32, i8*, i32, i64, i32, i32)*, void (i8*, i32, i64, i32, i8*)*, i32 (i8*, i32*)*, i32 (i8*, i32, i32, i32*, i8*)*, void (i32, i32)*, i32 (i32)*, i32 (i32, i8*)*, void ()*, %struct.pragma_facility* }
%struct.out_data = type { i64, i32, i32, i32, i32, i32, i32, i64, %struct.itemplate*, i8*, i64, i32, i32, i64, %struct.src_location }
%struct.itemplate = type opaque
%struct.src_location = type { i8*, i32 }
%struct.Section = type { %struct.SAA*, i32, i32, i32, i32, %struct.Piece*, %struct.Piece*, %struct.Piece** }
%struct.SAA = type { i64, i64, i64, i64, i64, i64, i8**, i64, i64, i8**, i64, i64, i8** }
%struct.Piece = type { %struct.Piece*, i32, i32, i32, i32, i8 }
%struct.RAA = type opaque
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque

@.str = private unnamed_addr constant [29 x i8] c"as86 (bin86/dev86 toolchain)\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"as86\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c".o\00", align 1
@null_debug_arr = external constant [2 x %struct.dfmt*], align 16
@null_debug_form = external constant %struct.dfmt, align 8
@as86_stdmac = external constant [0 x i8], align 1
@of_as86 = hidden local_unnamed_addr constant %struct.ofmt { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i32 0, i32 0), i32 0, i32 32, %struct.dfmt** getelementptr inbounds ([2 x %struct.dfmt*], [2 x %struct.dfmt*]* @null_debug_arr, i32 0, i32 0), %struct.dfmt* @null_debug_form, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @as86_stdmac, i32 0, i32 0), void ()* @as86_init, void ()* @null_reset, void (%struct.out_data*)* @nasm_do_legacy_output, void (i32, i8*, i32, i64, i32, i32)* @as86_out, void (i8*, i32, i64, i32, i8*)* @as86_deflabel, i32 (i8*, i32*)* @as86_section_names, i32 (i8*, i32, i32, i32*, i8*)* null, void (i32, i32)* @null_sectalign, i32 (i32)* @null_segbase, i32 (i32, i8*)* @null_directive, void ()* @as86_cleanup, %struct.pragma_facility* null }, align 8
@stext = internal global %struct.Section zeroinitializer, align 8
@sdata = internal global %struct.Section zeroinitializer, align 8
@bsslen = internal unnamed_addr global i32 0, align 4
@bssindex = internal unnamed_addr global i32 0, align 4
@syms = internal unnamed_addr global %struct.SAA* null, align 8
@nsyms = internal unnamed_addr global i32 0, align 4
@bsym = internal unnamed_addr global %struct.RAA* null, align 8
@strs = internal unnamed_addr global %struct.SAA* null, align 8
@strslen = internal unnamed_addr global i64 0, align 8
@inname = external local_unnamed_addr global i8*, align 8
@.str.3 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.4 = private unnamed_addr constant [40 x i8] c"WRT not supported by as86 output format\00", align 1
@.str.5 = private unnamed_addr constant [62 x i8] c"attempt to assemble code in segment %d: defaulting to `.text'\00", align 1
@.str.6 = private unnamed_addr constant [57 x i8] c"attempt to initialize memory in the BSS section: ignored\00", align 1
@.str.7 = private unnamed_addr constant [52 x i8] c"uninitialized space declared in %s section: zeroing\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"code\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@.str.10 = private unnamed_addr constant [53 x i8] c"as86 format does not support segment base references\00", align 1
@.str.11 = private unnamed_addr constant [54 x i8] c"as86 format does not support any special symbol types\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"..start\00", align 1
@.str.13 = private unnamed_addr constant [33 x i8] c"unrecognised special symbol `%s'\00", align 1
@.str.14 = private unnamed_addr constant [6 x i8] c".text\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c".data\00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c".bss\00", align 1
@ofile = external local_unnamed_addr global %struct._IO_FILE*, align 8
@as86_reloc_size = internal unnamed_addr global i32 0, align 4
@.str.17 = private unnamed_addr constant [27 x i8] c"bizarre relocation size %d\00", align 1

; Function Attrs: nounwind ssp uwtable
define internal void @as86_init() #0 {
  %1 = tail call %struct.SAA* @saa_init(i64 1) #9
  store %struct.SAA* %1, %struct.SAA** getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 0), align 8
  store i32 0, i32* getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 1), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (%struct.Piece** getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 5) to i8*), i8 0, i64 16, i1 false)
  store %struct.Piece** getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 5), %struct.Piece*** getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 7), align 8
  %2 = tail call %struct.SAA* @saa_init(i64 1) #9
  store %struct.SAA* %2, %struct.SAA** getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 0), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (%struct.Piece** getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 5) to i8*), i8 0, i64 16, i1 false)
  store %struct.Piece** getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 5), %struct.Piece*** getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 7), align 8
  store i32 0, i32* getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 2), align 4
  store i32 0, i32* getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 1), align 8
  store i32 0, i32* getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 3), align 8
  store i32 0, i32* getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 2), align 4
  store i32 0, i32* getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 1), align 8
  store i32 0, i32* getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 3), align 8
  store i32 0, i32* @bsslen, align 4
  %3 = tail call i32 @seg_alloc() #9
  store i32 %3, i32* getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 4), align 4
  %4 = tail call i32 @seg_alloc() #9
  store i32 %4, i32* getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 4), align 4
  %5 = tail call i32 @seg_alloc() #9
  store i32 %5, i32* @bssindex, align 4
  %6 = tail call %struct.SAA* @saa_init(i64 16) #9
  store %struct.SAA* %6, %struct.SAA** @syms, align 8
  store i32 0, i32* @nsyms, align 4
  store %struct.RAA* null, %struct.RAA** @bsym, align 8
  %7 = tail call %struct.SAA* @saa_init(i64 1) #9
  store %struct.SAA* %7, %struct.SAA** @strs, align 8
  store i64 0, i64* @strslen, align 8
  %8 = load i8*, i8** @inname, align 8
  %9 = tail call i8* @filename_set_extension(i8* %8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0)) #9
  %10 = tail call i64 @strlen(i8* %9) #10
  %11 = load %struct.SAA*, %struct.SAA** @strs, align 8
  %12 = add i64 %10, 1
  tail call void @saa_wbytes(%struct.SAA* %11, i8* %9, i64 %12) #9
  %13 = load i64, i64* @strslen, align 8
  %14 = add i64 %13, %12
  store i64 %14, i64* @strslen, align 8
  ret void
}

declare void @null_reset() #1

declare void @nasm_do_legacy_output(%struct.out_data*) #1

; Function Attrs: nounwind ssp uwtable
define internal void @as86_out(i32, i8*, i32, i64, i32, i32) #0 {
  %7 = icmp eq i32 %5, -1
  br i1 %7, label %9, label %8

8:                                                ; preds = %6
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i64 0, i64 0)) #9
  br label %9

9:                                                ; preds = %6, %8
  %10 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 4), align 4
  %11 = icmp eq i32 %10, %0
  br i1 %11, label %26, label %12

12:                                               ; preds = %9
  %13 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 4), align 4
  %14 = icmp eq i32 %13, %0
  br i1 %14, label %26, label %15

15:                                               ; preds = %12
  %16 = load i32, i32* @bssindex, align 4
  %17 = icmp eq i32 %16, %0
  br i1 %17, label %19, label %18

18:                                               ; preds = %15
  tail call void (i32, i8*, ...) @nasm_warn(i32 2228224, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.5, i64 0, i64 0), i32 %0) #9
  br label %26

19:                                               ; preds = %15
  %20 = icmp eq i32 %2, 1
  br i1 %20, label %63, label %21

21:                                               ; preds = %19
  tail call void (i32, i8*, ...) @nasm_warn(i32 2228224, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.6, i64 0, i64 0)) #9
  %22 = tail call i64 @realsize(i32 %2, i64 %3) #9
  %23 = load i32, i32* @bsslen, align 4
  %24 = trunc i64 %22 to i32
  %25 = add i32 %23, %24
  store i32 %25, i32* @bsslen, align 4
  br label %296

26:                                               ; preds = %12, %9, %18
  %27 = phi %struct.Section* [ @stext, %18 ], [ @stext, %9 ], [ @sdata, %12 ]
  switch i32 %2, label %240 [
    i32 1, label %28
    i32 0, label %67
    i32 3, label %99
    i32 7, label %186
  ]

28:                                               ; preds = %26
  %29 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 4), align 4
  %30 = icmp eq i32 %29, %0
  %31 = select i1 %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0)
  tail call void (i32, i8*, ...) @nasm_warn(i32 2097152, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.7, i64 0, i64 0), i8* %31) #9
  %32 = trunc i64 %3 to i32
  %33 = getelementptr inbounds %struct.Section, %struct.Section* %27, i64 0, i32 0
  %34 = load %struct.SAA*, %struct.SAA** %33, align 8
  %35 = and i64 %3, 4294967295
  tail call void @saa_wbytes(%struct.SAA* %34, i8* null, i64 %35) #9
  %36 = getelementptr inbounds %struct.Section, %struct.Section* %27, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = add i32 %37, %32
  store i32 %38, i32* %36, align 8
  %39 = getelementptr inbounds %struct.Section, %struct.Section* %27, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = add i32 %40, %32
  store i32 %41, i32* %39, align 8
  %42 = getelementptr inbounds %struct.Section, %struct.Section* %27, i64 0, i32 6
  %43 = load %struct.Piece*, %struct.Piece** %42, align 8
  %44 = icmp eq %struct.Piece* %43, null
  br i1 %44, label %53, label %45

45:                                               ; preds = %28
  %46 = getelementptr inbounds %struct.Piece, %struct.Piece* %43, i64 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %53

49:                                               ; preds = %45
  %50 = getelementptr inbounds %struct.Piece, %struct.Piece* %43, i64 0, i32 4
  %51 = load i32, i32* %50, align 4
  %52 = add nsw i32 %51, %32
  store i32 %52, i32* %50, align 4
  br label %296

53:                                               ; preds = %45, %28
  %54 = tail call noalias i8* @nasm_malloc(i64 32) #11
  %55 = getelementptr inbounds %struct.Section, %struct.Section* %27, i64 0, i32 7
  %56 = bitcast %struct.Piece*** %55 to i8***
  %57 = load i8**, i8*** %56, align 8
  store i8* %54, i8** %57, align 8
  %58 = bitcast %struct.Piece** %42 to i8**
  store i8* %54, i8** %58, align 8
  %59 = bitcast %struct.Piece*** %55 to i8**
  store i8* %54, i8** %59, align 8
  %60 = getelementptr inbounds i8, i8* %54, i64 20
  %61 = bitcast i8* %60 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 16, i1 false)
  store i32 %32, i32* %61, align 4
  %62 = getelementptr inbounds i8, i8* %54, i64 24
  store i8 0, i8* %62, align 8
  br label %296

63:                                               ; preds = %19
  %64 = load i32, i32* @bsslen, align 4
  %65 = trunc i64 %3 to i32
  %66 = add i32 %64, %65
  store i32 %66, i32* @bsslen, align 4
  br label %296

67:                                               ; preds = %26
  %68 = trunc i64 %3 to i32
  %69 = getelementptr inbounds %struct.Section, %struct.Section* %27, i64 0, i32 0
  %70 = load %struct.SAA*, %struct.SAA** %69, align 8
  %71 = and i64 %3, 4294967295
  tail call void @saa_wbytes(%struct.SAA* %70, i8* %1, i64 %71) #9
  %72 = getelementptr inbounds %struct.Section, %struct.Section* %27, i64 0, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, %68
  store i32 %74, i32* %72, align 8
  %75 = getelementptr inbounds %struct.Section, %struct.Section* %27, i64 0, i32 3
  %76 = load i32, i32* %75, align 8
  %77 = add i32 %76, %68
  store i32 %77, i32* %75, align 8
  %78 = getelementptr inbounds %struct.Section, %struct.Section* %27, i64 0, i32 6
  %79 = load %struct.Piece*, %struct.Piece** %78, align 8
  %80 = icmp eq %struct.Piece* %79, null
  br i1 %80, label %89, label %81

81:                                               ; preds = %67
  %82 = getelementptr inbounds %struct.Piece, %struct.Piece* %79, i64 0, i32 1
  %83 = load i32, i32* %82, align 8
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %89

85:                                               ; preds = %81
  %86 = getelementptr inbounds %struct.Piece, %struct.Piece* %79, i64 0, i32 4
  %87 = load i32, i32* %86, align 4
  %88 = add nsw i32 %87, %68
  store i32 %88, i32* %86, align 4
  br label %296

89:                                               ; preds = %81, %67
  %90 = tail call noalias i8* @nasm_malloc(i64 32) #11
  %91 = getelementptr inbounds %struct.Section, %struct.Section* %27, i64 0, i32 7
  %92 = bitcast %struct.Piece*** %91 to i8***
  %93 = load i8**, i8*** %92, align 8
  store i8* %90, i8** %93, align 8
  %94 = bitcast %struct.Piece** %78 to i8**
  store i8* %90, i8** %94, align 8
  %95 = bitcast %struct.Piece*** %91 to i8**
  store i8* %90, i8** %95, align 8
  %96 = getelementptr inbounds i8, i8* %90, i64 20
  %97 = bitcast i8* %96 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 16, i1 false)
  store i32 %68, i32* %97, align 4
  %98 = getelementptr inbounds i8, i8* %90, i64 24
  store i8 0, i8* %98, align 8
  br label %296

99:                                               ; preds = %26
  %100 = trunc i64 %3 to i32
  %101 = icmp slt i32 %100, 0
  %102 = sub nsw i32 0, %100
  %103 = select i1 %101, i32 %102, i32 %100
  %104 = icmp eq i32 %4, -1
  br i1 %104, label %155, label %105

105:                                              ; preds = %99
  %106 = and i32 %4, 1
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %109, label %108

108:                                              ; preds = %105
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.10, i64 0, i64 0)) #9
  br label %296

109:                                              ; preds = %105
  %110 = bitcast i8* %1 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = trunc i64 %111 to i32
  %113 = getelementptr inbounds %struct.Section, %struct.Section* %27, i64 0, i32 3
  %114 = load i32, i32* %113, align 8
  %115 = add i32 %114, %103
  store i32 %115, i32* %113, align 8
  %116 = tail call noalias i8* @nasm_malloc(i64 32) #11
  %117 = getelementptr inbounds %struct.Section, %struct.Section* %27, i64 0, i32 7
  %118 = bitcast %struct.Piece*** %117 to i8***
  %119 = load i8**, i8*** %118, align 8
  store i8* %116, i8** %119, align 8
  %120 = getelementptr inbounds %struct.Section, %struct.Section* %27, i64 0, i32 6
  %121 = bitcast %struct.Piece** %120 to i8**
  store i8* %116, i8** %121, align 8
  %122 = bitcast i8* %116 to %struct.Piece**
  %123 = bitcast %struct.Piece*** %117 to i8**
  store i8* %116, i8** %123, align 8
  store %struct.Piece* null, %struct.Piece** %122, align 8
  %124 = getelementptr inbounds i8, i8* %116, i64 8
  %125 = bitcast i8* %124 to i32*
  store i32 1, i32* %125, align 8
  %126 = getelementptr inbounds i8, i8* %116, i64 12
  %127 = bitcast i8* %126 to i32*
  store i32 %112, i32* %127, align 4
  %128 = getelementptr inbounds i8, i8* %116, i64 20
  %129 = bitcast i8* %128 to i32*
  store i32 %103, i32* %129, align 4
  %130 = getelementptr inbounds i8, i8* %116, i64 24
  store i8 0, i8* %130, align 8
  %131 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 4), align 4
  %132 = icmp eq i32 %131, %4
  br i1 %132, label %133, label %136

133:                                              ; preds = %109
  %134 = getelementptr inbounds i8, i8* %116, i64 16
  %135 = bitcast i8* %134 to i32*
  store i32 0, i32* %135, align 8
  br label %296

136:                                              ; preds = %109
  %137 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 4), align 4
  %138 = icmp eq i32 %137, %4
  br i1 %138, label %139, label %142

139:                                              ; preds = %136
  %140 = getelementptr inbounds i8, i8* %116, i64 16
  %141 = bitcast i8* %140 to i32*
  store i32 3, i32* %141, align 8
  br label %296

142:                                              ; preds = %136
  %143 = load i32, i32* @bssindex, align 4
  %144 = icmp eq i32 %143, %4
  br i1 %144, label %145, label %148

145:                                              ; preds = %142
  %146 = getelementptr inbounds i8, i8* %116, i64 16
  %147 = bitcast i8* %146 to i32*
  store i32 4, i32* %147, align 8
  br label %296

148:                                              ; preds = %142
  %149 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %150 = sext i32 %4 to i64
  %151 = tail call i64 @raa_read(%struct.RAA* %149, i64 %150) #9
  %152 = trunc i64 %151 to i32
  %153 = getelementptr inbounds i8, i8* %116, i64 16
  %154 = bitcast i8* %153 to i32*
  store i32 %152, i32* %154, align 8
  store i32 2, i32* %125, align 8
  br label %296

155:                                              ; preds = %99
  %156 = getelementptr inbounds %struct.Section, %struct.Section* %27, i64 0, i32 0
  %157 = load %struct.SAA*, %struct.SAA** %156, align 8
  %158 = zext i32 %103 to i64
  tail call void @saa_wbytes(%struct.SAA* %157, i8* %1, i64 %158) #9
  %159 = getelementptr inbounds %struct.Section, %struct.Section* %27, i64 0, i32 1
  %160 = load i32, i32* %159, align 8
  %161 = add i32 %160, %103
  store i32 %161, i32* %159, align 8
  %162 = getelementptr inbounds %struct.Section, %struct.Section* %27, i64 0, i32 3
  %163 = load i32, i32* %162, align 8
  %164 = add i32 %163, %103
  store i32 %164, i32* %162, align 8
  %165 = getelementptr inbounds %struct.Section, %struct.Section* %27, i64 0, i32 6
  %166 = load %struct.Piece*, %struct.Piece** %165, align 8
  %167 = icmp eq %struct.Piece* %166, null
  br i1 %167, label %176, label %168

168:                                              ; preds = %155
  %169 = getelementptr inbounds %struct.Piece, %struct.Piece* %166, i64 0, i32 1
  %170 = load i32, i32* %169, align 8
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %176

172:                                              ; preds = %168
  %173 = getelementptr inbounds %struct.Piece, %struct.Piece* %166, i64 0, i32 4
  %174 = load i32, i32* %173, align 4
  %175 = add nsw i32 %174, %103
  store i32 %175, i32* %173, align 4
  br label %296

176:                                              ; preds = %168, %155
  %177 = tail call noalias i8* @nasm_malloc(i64 32) #11
  %178 = getelementptr inbounds %struct.Section, %struct.Section* %27, i64 0, i32 7
  %179 = bitcast %struct.Piece*** %178 to i8***
  %180 = load i8**, i8*** %179, align 8
  store i8* %177, i8** %180, align 8
  %181 = bitcast %struct.Piece** %165 to i8**
  store i8* %177, i8** %181, align 8
  %182 = bitcast %struct.Piece*** %178 to i8**
  store i8* %177, i8** %182, align 8
  %183 = getelementptr inbounds i8, i8* %177, i64 20
  %184 = bitcast i8* %183 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %177, i8 0, i64 16, i1 false)
  store i32 %103, i32* %184, align 4
  %185 = getelementptr inbounds i8, i8* %177, i64 24
  store i8 0, i8* %185, align 8
  br label %296

186:                                              ; preds = %26
  %187 = icmp eq i32 %4, -1
  br i1 %187, label %296, label %188

188:                                              ; preds = %186
  %189 = and i32 %4, 1
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %192, label %191

191:                                              ; preds = %188
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.10, i64 0, i64 0)) #9
  br label %296

192:                                              ; preds = %188
  %193 = bitcast i8* %1 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = sub i64 %194, %3
  %196 = trunc i64 %195 to i32
  %197 = add i32 %196, 2
  %198 = getelementptr inbounds %struct.Section, %struct.Section* %27, i64 0, i32 3
  %199 = load i32, i32* %198, align 8
  %200 = add i32 %199, 2
  store i32 %200, i32* %198, align 8
  %201 = tail call noalias i8* @nasm_malloc(i64 32) #11
  %202 = getelementptr inbounds %struct.Section, %struct.Section* %27, i64 0, i32 7
  %203 = bitcast %struct.Piece*** %202 to i8***
  %204 = load i8**, i8*** %203, align 8
  store i8* %201, i8** %204, align 8
  %205 = getelementptr inbounds %struct.Section, %struct.Section* %27, i64 0, i32 6
  %206 = bitcast %struct.Piece** %205 to i8**
  store i8* %201, i8** %206, align 8
  %207 = bitcast i8* %201 to %struct.Piece**
  %208 = bitcast %struct.Piece*** %202 to i8**
  store i8* %201, i8** %208, align 8
  store %struct.Piece* null, %struct.Piece** %207, align 8
  %209 = getelementptr inbounds i8, i8* %201, i64 8
  %210 = bitcast i8* %209 to i32*
  store i32 1, i32* %210, align 8
  %211 = getelementptr inbounds i8, i8* %201, i64 12
  %212 = bitcast i8* %211 to i32*
  store i32 %197, i32* %212, align 4
  %213 = getelementptr inbounds i8, i8* %201, i64 20
  %214 = bitcast i8* %213 to i32*
  store i32 2, i32* %214, align 4
  %215 = getelementptr inbounds i8, i8* %201, i64 24
  store i8 1, i8* %215, align 8
  %216 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 4), align 4
  %217 = icmp eq i32 %216, %4
  br i1 %217, label %218, label %221

218:                                              ; preds = %192
  %219 = getelementptr inbounds i8, i8* %201, i64 16
  %220 = bitcast i8* %219 to i32*
  store i32 0, i32* %220, align 8
  br label %296

221:                                              ; preds = %192
  %222 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 4), align 4
  %223 = icmp eq i32 %222, %4
  br i1 %223, label %224, label %227

224:                                              ; preds = %221
  %225 = getelementptr inbounds i8, i8* %201, i64 16
  %226 = bitcast i8* %225 to i32*
  store i32 3, i32* %226, align 8
  br label %296

227:                                              ; preds = %221
  %228 = load i32, i32* @bssindex, align 4
  %229 = icmp eq i32 %228, %4
  br i1 %229, label %230, label %233

230:                                              ; preds = %227
  %231 = getelementptr inbounds i8, i8* %201, i64 16
  %232 = bitcast i8* %231 to i32*
  store i32 4, i32* %232, align 8
  br label %296

233:                                              ; preds = %227
  %234 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %235 = sext i32 %4 to i64
  %236 = tail call i64 @raa_read(%struct.RAA* %234, i64 %235) #9
  %237 = trunc i64 %236 to i32
  %238 = getelementptr inbounds i8, i8* %201, i64 16
  %239 = bitcast i8* %238 to i32*
  store i32 %237, i32* %239, align 8
  store i32 2, i32* %210, align 8
  br label %296

240:                                              ; preds = %26
  %241 = icmp eq i32 %2, 8
  %242 = icmp ne i32 %4, -1
  %243 = and i1 %241, %242
  br i1 %243, label %244, label %296

244:                                              ; preds = %240
  %245 = and i32 %4, 1
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %248, label %247

247:                                              ; preds = %244
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.10, i64 0, i64 0)) #9
  br label %296

248:                                              ; preds = %244
  %249 = bitcast i8* %1 to i64*
  %250 = load i64, i64* %249, align 8
  %251 = sub i64 %250, %3
  %252 = trunc i64 %251 to i32
  %253 = add i32 %252, 4
  %254 = getelementptr inbounds %struct.Section, %struct.Section* %27, i64 0, i32 3
  %255 = load i32, i32* %254, align 8
  %256 = add i32 %255, 4
  store i32 %256, i32* %254, align 8
  %257 = tail call noalias i8* @nasm_malloc(i64 32) #11
  %258 = getelementptr inbounds %struct.Section, %struct.Section* %27, i64 0, i32 7
  %259 = bitcast %struct.Piece*** %258 to i8***
  %260 = load i8**, i8*** %259, align 8
  store i8* %257, i8** %260, align 8
  %261 = getelementptr inbounds %struct.Section, %struct.Section* %27, i64 0, i32 6
  %262 = bitcast %struct.Piece** %261 to i8**
  store i8* %257, i8** %262, align 8
  %263 = bitcast i8* %257 to %struct.Piece**
  %264 = bitcast %struct.Piece*** %258 to i8**
  store i8* %257, i8** %264, align 8
  store %struct.Piece* null, %struct.Piece** %263, align 8
  %265 = getelementptr inbounds i8, i8* %257, i64 8
  %266 = bitcast i8* %265 to i32*
  store i32 1, i32* %266, align 8
  %267 = getelementptr inbounds i8, i8* %257, i64 12
  %268 = bitcast i8* %267 to i32*
  store i32 %253, i32* %268, align 4
  %269 = getelementptr inbounds i8, i8* %257, i64 20
  %270 = bitcast i8* %269 to i32*
  store i32 4, i32* %270, align 4
  %271 = getelementptr inbounds i8, i8* %257, i64 24
  store i8 1, i8* %271, align 8
  %272 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 4), align 4
  %273 = icmp eq i32 %272, %4
  br i1 %273, label %274, label %277

274:                                              ; preds = %248
  %275 = getelementptr inbounds i8, i8* %257, i64 16
  %276 = bitcast i8* %275 to i32*
  store i32 0, i32* %276, align 8
  br label %296

277:                                              ; preds = %248
  %278 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 4), align 4
  %279 = icmp eq i32 %278, %4
  br i1 %279, label %280, label %283

280:                                              ; preds = %277
  %281 = getelementptr inbounds i8, i8* %257, i64 16
  %282 = bitcast i8* %281 to i32*
  store i32 3, i32* %282, align 8
  br label %296

283:                                              ; preds = %277
  %284 = load i32, i32* @bssindex, align 4
  %285 = icmp eq i32 %284, %4
  br i1 %285, label %286, label %289

286:                                              ; preds = %283
  %287 = getelementptr inbounds i8, i8* %257, i64 16
  %288 = bitcast i8* %287 to i32*
  store i32 4, i32* %288, align 8
  br label %296

289:                                              ; preds = %283
  %290 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %291 = sext i32 %4 to i64
  %292 = tail call i64 @raa_read(%struct.RAA* %290, i64 %291) #9
  %293 = trunc i64 %292 to i32
  %294 = getelementptr inbounds i8, i8* %257, i64 16
  %295 = bitcast i8* %294 to i32*
  store i32 %293, i32* %295, align 8
  store i32 2, i32* %266, align 8
  br label %296

296:                                              ; preds = %289, %286, %280, %274, %233, %230, %224, %218, %176, %172, %148, %145, %139, %133, %89, %85, %53, %49, %63, %240, %247, %191, %186, %108, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @as86_deflabel(i8*, i32, i64, i32, i8* readnone) #0 {
  %6 = icmp eq i8* %4, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %5
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.11, i64 0, i64 0)) #9
  br label %8

8:                                                ; preds = %5, %7
  %9 = load i8, i8* %0, align 1
  %10 = icmp eq i8 %9, 46
  br i1 %10, label %11, label %23

11:                                               ; preds = %8
  %12 = getelementptr inbounds i8, i8* %0, i64 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 46
  br i1 %14, label %15, label %23

15:                                               ; preds = %11
  %16 = getelementptr inbounds i8, i8* %0, i64 2
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 64
  br i1 %18, label %23, label %19

19:                                               ; preds = %15
  %20 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0)) #10
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %23, label %22

22:                                               ; preds = %19
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0), i8* %0) #9
  br label %86

23:                                               ; preds = %19, %15, %11, %8
  %24 = phi i32 [ 0, %15 ], [ 0, %11 ], [ 0, %8 ], [ 256, %19 ]
  %25 = load %struct.SAA*, %struct.SAA** @syms, align 8
  %26 = tail call i8* @saa_wstruct(%struct.SAA* %25) #9
  %27 = load i64, i64* @strslen, align 8
  %28 = tail call i64 @strlen(i8* %0) #10
  %29 = load %struct.SAA*, %struct.SAA** @strs, align 8
  %30 = add i64 %28, 1
  tail call void @saa_wbytes(%struct.SAA* %29, i8* %0, i64 %30) #9
  %31 = load i64, i64* @strslen, align 8
  %32 = add i64 %31, %30
  store i64 %32, i64* @strslen, align 8
  %33 = trunc i64 %27 to i32
  %34 = bitcast i8* %26 to i32*
  store i32 %33, i32* %34, align 4
  %35 = getelementptr inbounds i8, i8* %26, i64 4
  %36 = bitcast i8* %35 to i32*
  store i32 %24, i32* %36, align 4
  %37 = icmp eq i32 %1, -1
  br i1 %37, label %38, label %40

38:                                               ; preds = %23
  %39 = or i32 %24, 16
  store i32 %39, i32* %36, align 4
  br label %51

40:                                               ; preds = %23
  %41 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 4), align 4
  %42 = icmp eq i32 %41, %1
  br i1 %42, label %51, label %43

43:                                               ; preds = %40
  %44 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 4), align 4
  %45 = icmp eq i32 %44, %1
  br i1 %45, label %51, label %46

46:                                               ; preds = %43
  %47 = load i32, i32* @bssindex, align 4
  %48 = icmp eq i32 %47, %1
  br i1 %48, label %51, label %49

49:                                               ; preds = %46
  %50 = or i32 %24, 64
  store i32 %50, i32* %36, align 4
  br label %51

51:                                               ; preds = %46, %43, %40, %49, %38
  %52 = phi i32 [ 15, %49 ], [ 0, %38 ], [ 0, %40 ], [ 3, %43 ], [ 4, %46 ]
  %53 = phi i32 [ %50, %49 ], [ %39, %38 ], [ %24, %40 ], [ %24, %43 ], [ %24, %46 ]
  %54 = getelementptr inbounds i8, i8* %26, i64 8
  %55 = bitcast i8* %54 to i32*
  store i32 %52, i32* %55, align 4
  switch i32 %3, label %59 [
    i32 2, label %56
    i32 0, label %64
  ]

56:                                               ; preds = %51
  %57 = getelementptr inbounds i8, i8* %26, i64 8
  %58 = bitcast i8* %57 to i32*
  store i32 3, i32* %58, align 4
  br label %59

59:                                               ; preds = %56, %51
  %60 = and i32 %53, 64
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %59
  %63 = or i32 %53, 128
  store i32 %63, i32* %36, align 4
  br label %64

64:                                               ; preds = %51, %59, %62
  %65 = trunc i64 %2 to i32
  %66 = getelementptr inbounds i8, i8* %26, i64 12
  %67 = bitcast i8* %66 to i32*
  store i32 %65, i32* %67, align 4
  %68 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 4), align 4
  %69 = icmp eq i32 %68, %1
  %70 = or i1 %37, %69
  %71 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 4), align 4
  %72 = icmp eq i32 %71, %1
  %73 = or i1 %70, %72
  %74 = load i32, i32* @bssindex, align 4
  %75 = icmp eq i32 %74, %1
  %76 = or i1 %73, %75
  br i1 %76, label %83, label %77

77:                                               ; preds = %64
  %78 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %79 = sext i32 %1 to i64
  %80 = load i32, i32* @nsyms, align 4
  %81 = zext i32 %80 to i64
  %82 = tail call %struct.RAA* @raa_write(%struct.RAA* %78, i64 %79, i64 %81) #9
  store %struct.RAA* %82, %struct.RAA** @bsym, align 8
  br label %83

83:                                               ; preds = %64, %77
  %84 = load i32, i32* @nsyms, align 4
  %85 = add i32 %84, 1
  store i32 %85, i32* @nsyms, align 4
  br label %86

86:                                               ; preds = %83, %22
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal i32 @as86_section_names(i8* readonly, i32* nocapture) #2 {
  %3 = icmp eq i8* %0, null
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  store i32 16, i32* %1, align 4
  br label %16

5:                                                ; preds = %2
  %6 = tail call i32 @strcmp(i8* nonnull %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0)) #10
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %16, label %8

8:                                                ; preds = %5
  %9 = tail call i32 @strcmp(i8* nonnull %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0)) #10
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %8
  %12 = tail call i32 @strcmp(i8* nonnull %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i64 0, i64 0)) #10
  %13 = icmp eq i32 %12, 0
  %14 = load i32, i32* @bssindex, align 4
  %15 = select i1 %13, i32 %14, i32 -1
  ret i32 %15

16:                                               ; preds = %8, %5, %4
  %17 = phi i32* [ getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 4), %4 ], [ getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 4), %5 ], [ getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 4), %8 ]
  %18 = load i32, i32* %17, align 4
  ret i32 %18
}

declare void @null_sectalign(i32, i32) #1

declare i32 @null_segbase(i32) #1

declare i32 @null_directive(i32, i8*) #1

; Function Attrs: nounwind ssp uwtable
define internal void @as86_cleanup() #0 {
  %1 = load %struct.SAA*, %struct.SAA** @syms, align 8
  tail call void @saa_rewind(%struct.SAA* %1) #9
  %2 = load i32, i32* @nsyms, align 4
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %50, label %4

4:                                                ; preds = %0, %41
  %5 = phi i32 [ %44, %41 ], [ 0, %0 ]
  %6 = phi i32 [ %45, %41 ], [ 0, %0 ]
  %7 = load %struct.SAA*, %struct.SAA** @syms, align 8
  %8 = tail call i8* @saa_rstruct(%struct.SAA* %7) #9
  %9 = getelementptr inbounds i8, i8* %8, i64 8
  %10 = bitcast i8* %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 4
  br i1 %12, label %17, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %8, i64 12
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 4
  br label %23

17:                                               ; preds = %4
  store i32 3, i32* %10, align 4
  %18 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 3), align 8
  %19 = getelementptr inbounds i8, i8* %8, i64 12
  %20 = bitcast i8* %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = add i32 %21, %18
  store i32 %22, i32* %20, align 4
  br label %23

23:                                               ; preds = %17, %13
  %24 = phi i32 [ %22, %17 ], [ %16, %13 ]
  %25 = phi i32 [ 3, %17 ], [ %11, %13 ]
  %26 = getelementptr inbounds i8, i8* %8, i64 4
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = or i32 %28, %25
  store i32 %29, i32* %27, align 4
  %30 = icmp eq i32 %24, 0
  br i1 %30, label %41, label %31

31:                                               ; preds = %23
  %32 = icmp ult i32 %24, 256
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = or i32 %29, 16384
  br label %41

35:                                               ; preds = %31
  %36 = icmp ult i32 %24, 65536
  br i1 %36, label %37, label %39

37:                                               ; preds = %35
  %38 = or i32 %29, 32768
  br label %41

39:                                               ; preds = %35
  %40 = or i32 %29, 49152
  br label %41

41:                                               ; preds = %23, %39, %37, %33
  %42 = phi i32 [ %40, %39 ], [ %38, %37 ], [ %34, %33 ], [ %29, %23 ]
  %43 = phi i32 [ 8, %39 ], [ 6, %37 ], [ 5, %33 ], [ 4, %23 ]
  store i32 %42, i32* %27, align 4
  %44 = add nuw nsw i32 %5, %43
  %45 = add nuw i32 %6, 1
  %46 = load i32, i32* @nsyms, align 4
  %47 = icmp ult i32 %45, %46
  br i1 %47, label %4, label %48

48:                                               ; preds = %41
  %49 = add nuw i32 %44, 27
  br label %50

50:                                               ; preds = %48, %0
  %51 = phi i32 [ 27, %0 ], [ %49, %48 ]
  %52 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 3), align 8
  %53 = icmp ugt i32 %52, 65535
  %54 = select i1 %53, i32 4, i32 2
  %55 = select i1 %53, i32 50331648, i32 33554432
  %56 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 3), align 8
  %57 = icmp ugt i32 %56, 65535
  %58 = select i1 %57, i32 4, i32 2
  %59 = select i1 %57, i32 -1073741824, i32 -2147483648
  %60 = or i32 %59, %55
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint32_t(i32 100003, %struct._IO_FILE* %61) #9
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  %63 = tail call i32 @fputc(i32 42, %struct._IO_FILE* %62) #9
  %64 = load i64, i64* @strslen, align 8
  %65 = trunc i64 %64 to i32
  %66 = add i32 %51, %54
  %67 = add i32 %66, %58
  %68 = add i32 %67, %65
  %69 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint32_t(i32 %68, %struct._IO_FILE* %69) #9
  %70 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 3), align 8
  %71 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 3), align 8
  %72 = add i32 %71, %70
  %73 = load i32, i32* @bsslen, align 4
  %74 = add i32 %72, %73
  %75 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint32_t(i32 %74, %struct._IO_FILE* %75) #9
  %76 = load i64, i64* @strslen, align 8
  %77 = trunc i64 %76 to i16
  %78 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint16_t(i16 zeroext %77, %struct._IO_FILE* %78) #9
  %79 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint16_t(i16 zeroext 0, %struct._IO_FILE* %79) #9
  %80 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint32_t(i32 1431655765, %struct._IO_FILE* %80) #9
  %81 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint32_t(i32 %60, %struct._IO_FILE* %81) #9
  %82 = sext i32 %60 to i64
  %83 = and i64 %82, 16777216
  %84 = icmp eq i64 %83, 0
  %85 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 3), align 8
  br i1 %84, label %88, label %86

86:                                               ; preds = %50
  %87 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint32_t(i32 %85, %struct._IO_FILE* %87) #9
  br label %91

88:                                               ; preds = %50
  %89 = trunc i32 %85 to i16
  %90 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint16_t(i16 zeroext %89, %struct._IO_FILE* %90) #9
  br label %91

91:                                               ; preds = %88, %86
  %92 = and i64 %82, 1073741824
  %93 = icmp eq i64 %92, 0
  %94 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 3), align 8
  %95 = load i32, i32* @bsslen, align 4
  %96 = add i32 %95, %94
  br i1 %93, label %99, label %97

97:                                               ; preds = %91
  %98 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint32_t(i32 %96, %struct._IO_FILE* %98) #9
  br label %102

99:                                               ; preds = %91
  %100 = trunc i32 %96 to i16
  %101 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint16_t(i16 zeroext %100, %struct._IO_FILE* %101) #9
  br label %102

102:                                              ; preds = %99, %97
  %103 = load i32, i32* @nsyms, align 4
  %104 = trunc i32 %103 to i16
  %105 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint16_t(i16 zeroext %104, %struct._IO_FILE* %105) #9
  %106 = load %struct.SAA*, %struct.SAA** @syms, align 8
  tail call void @saa_rewind(%struct.SAA* %106) #9
  %107 = load i32, i32* @nsyms, align 4
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %146, label %109

109:                                              ; preds = %102, %142
  %110 = phi i32 [ %143, %142 ], [ 0, %102 ]
  %111 = load %struct.SAA*, %struct.SAA** @syms, align 8
  %112 = tail call i8* @saa_rstruct(%struct.SAA* %111) #9
  %113 = bitcast i8* %112 to i32*
  %114 = load i32, i32* %113, align 4
  %115 = trunc i32 %114 to i16
  %116 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint16_t(i16 zeroext %115, %struct._IO_FILE* %116) #9
  %117 = getelementptr inbounds i8, i8* %112, i64 4
  %118 = bitcast i8* %117 to i32*
  %119 = load i32, i32* %118, align 4
  %120 = trunc i32 %119 to i16
  %121 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint16_t(i16 zeroext %120, %struct._IO_FILE* %121) #9
  %122 = load i32, i32* %118, align 4
  %123 = trunc i32 %122 to i16
  %124 = and i16 %123, -16384
  switch i16 %124, label %142 [
    i16 -16384, label %137
    i16 16384, label %125
    i16 -32768, label %131
  ]

125:                                              ; preds = %109
  %126 = getelementptr inbounds i8, i8* %112, i64 12
  %127 = bitcast i8* %126 to i32*
  %128 = load i32, i32* %127, align 4
  %129 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  %130 = tail call i32 @fputc(i32 %128, %struct._IO_FILE* %129) #9
  br label %142

131:                                              ; preds = %109
  %132 = getelementptr inbounds i8, i8* %112, i64 12
  %133 = bitcast i8* %132 to i32*
  %134 = load i32, i32* %133, align 4
  %135 = trunc i32 %134 to i16
  %136 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint16_t(i16 zeroext %135, %struct._IO_FILE* %136) #9
  br label %142

137:                                              ; preds = %109
  %138 = getelementptr inbounds i8, i8* %112, i64 12
  %139 = bitcast i8* %138 to i32*
  %140 = load i32, i32* %139, align 4
  %141 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint32_t(i32 %140, %struct._IO_FILE* %141) #9
  br label %142

142:                                              ; preds = %137, %131, %125, %109
  %143 = add nuw i32 %110, 1
  %144 = load i32, i32* @nsyms, align 4
  %145 = icmp ult i32 %143, %144
  br i1 %145, label %109, label %146

146:                                              ; preds = %142, %102
  %147 = load %struct.SAA*, %struct.SAA** @strs, align 8
  %148 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @saa_fpwrite(%struct.SAA* %147, %struct._IO_FILE* %148) #9
  store i32 -1, i32* @as86_reloc_size, align 4
  tail call fastcc void @as86_write_section(%struct.Section* nonnull @stext, i32 0) #9
  tail call fastcc void @as86_write_section(%struct.Section* nonnull @sdata, i32 3) #9
  %149 = load i32, i32* @bsslen, align 4
  %150 = icmp ugt i32 %149, 65535
  br i1 %150, label %151, label %156

151:                                              ; preds = %146
  %152 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  %153 = tail call i32 @fputc(i32 19, %struct._IO_FILE* %152) #9
  %154 = load i32, i32* @bsslen, align 4
  %155 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint32_t(i32 %154, %struct._IO_FILE* %155) #9
  br label %172

156:                                              ; preds = %146
  %157 = icmp ugt i32 %149, 255
  br i1 %157, label %158, label %164

158:                                              ; preds = %156
  %159 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  %160 = tail call i32 @fputc(i32 18, %struct._IO_FILE* %159) #9
  %161 = load i32, i32* @bsslen, align 4
  %162 = trunc i32 %161 to i16
  %163 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint16_t(i16 zeroext %162, %struct._IO_FILE* %163) #9
  br label %172

164:                                              ; preds = %156
  %165 = icmp eq i32 %149, 0
  br i1 %165, label %172, label %166

166:                                              ; preds = %164
  %167 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  %168 = tail call i32 @fputc(i32 17, %struct._IO_FILE* %167) #9
  %169 = load i32, i32* @bsslen, align 4
  %170 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  %171 = tail call i32 @fputc(i32 %169, %struct._IO_FILE* %170) #9
  br label %172

172:                                              ; preds = %151, %158, %164, %166
  %173 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  %174 = tail call i32 @fputc(i32 0, %struct._IO_FILE* %173) #9
  %175 = load %struct.SAA*, %struct.SAA** getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 0), align 8
  tail call void @saa_free(%struct.SAA* %175) #9
  %176 = load %struct.Piece*, %struct.Piece** getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 5), align 8
  %177 = icmp eq %struct.Piece* %176, null
  br i1 %177, label %185, label %178

178:                                              ; preds = %172, %178
  %179 = phi %struct.Piece* [ %183, %178 ], [ %176, %172 ]
  %180 = bitcast %struct.Piece* %179 to i64*
  %181 = load i64, i64* %180, align 8
  store i64 %181, i64* bitcast (%struct.Piece** getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 5) to i64*), align 8
  %182 = bitcast %struct.Piece* %179 to i8*
  tail call void @nasm_free(i8* nonnull %182) #9
  %183 = load %struct.Piece*, %struct.Piece** getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 5), align 8
  %184 = icmp eq %struct.Piece* %183, null
  br i1 %184, label %185, label %178

185:                                              ; preds = %178, %172
  %186 = load %struct.SAA*, %struct.SAA** getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 0), align 8
  tail call void @saa_free(%struct.SAA* %186) #9
  %187 = load %struct.Piece*, %struct.Piece** getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 5), align 8
  %188 = icmp eq %struct.Piece* %187, null
  br i1 %188, label %196, label %189

189:                                              ; preds = %185, %189
  %190 = phi %struct.Piece* [ %194, %189 ], [ %187, %185 ]
  %191 = bitcast %struct.Piece* %190 to i64*
  %192 = load i64, i64* %191, align 8
  store i64 %192, i64* bitcast (%struct.Piece** getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 5) to i64*), align 8
  %193 = bitcast %struct.Piece* %190 to i8*
  tail call void @nasm_free(i8* nonnull %193) #9
  %194 = load %struct.Piece*, %struct.Piece** getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 5), align 8
  %195 = icmp eq %struct.Piece* %194, null
  br i1 %195, label %196, label %189

196:                                              ; preds = %189, %185
  %197 = load %struct.SAA*, %struct.SAA** @syms, align 8
  tail call void @saa_free(%struct.SAA* %197) #9
  %198 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  tail call void @raa_free(%struct.RAA* %198) #9
  %199 = load %struct.SAA*, %struct.SAA** @strs, align 8
  tail call void @saa_free(%struct.SAA* %199) #9
  ret void
}

declare %struct.SAA* @saa_init(i64) local_unnamed_addr #1

declare i32 @seg_alloc() local_unnamed_addr #1

declare i8* @filename_set_extension(i8*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

declare void @saa_wbytes(%struct.SAA*, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @nasm_nonfatal(i8*, ...) local_unnamed_addr #1

declare void @nasm_warn(i32, i8*, ...) local_unnamed_addr #1

declare i64 @realsize(i32, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: allocsize(0)
declare noalias i8* @nasm_malloc(i64) local_unnamed_addr #5

declare i64 @raa_read(%struct.RAA*, i64) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #6

declare i8* @saa_wstruct(%struct.SAA*) local_unnamed_addr #1

declare %struct.RAA* @raa_write(%struct.RAA*, i64, i64) local_unnamed_addr #1

declare void @saa_free(%struct.SAA*) local_unnamed_addr #1

declare void @nasm_free(i8*) local_unnamed_addr #1

declare void @raa_free(%struct.RAA*) local_unnamed_addr #1

declare void @saa_rewind(%struct.SAA*) local_unnamed_addr #1

declare i8* @saa_rstruct(%struct.SAA*) local_unnamed_addr #1

declare void @fwriteint32_t(i32, %struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @fputc(i32, %struct._IO_FILE* nocapture) local_unnamed_addr #7

declare void @fwriteint16_t(i16 zeroext, %struct._IO_FILE*) local_unnamed_addr #1

declare void @saa_fpwrite(%struct.SAA*, %struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @as86_write_section(%struct.Section* nocapture readonly, i32) unnamed_addr #0 {
  %3 = alloca [64 x i8], align 16
  %4 = add nsw i32 %1, 32
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  %6 = tail call i32 @fputc(i32 %4, %struct._IO_FILE* %5)
  %7 = getelementptr inbounds %struct.Section, %struct.Section* %0, i64 0, i32 0
  %8 = load %struct.SAA*, %struct.SAA** %7, align 8
  tail call void @saa_rewind(%struct.SAA* %8) #9
  %9 = getelementptr inbounds %struct.Section, %struct.Section* %0, i64 0, i32 5
  %10 = load %struct.Piece*, %struct.Piece** %9, align 8
  %11 = icmp eq %struct.Piece* %10, null
  br i1 %11, label %132, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds [64 x i8], [64 x i8]* %3, i64 0, i64 0
  br label %14

14:                                               ; preds = %12, %128
  %15 = phi %struct.Piece* [ %10, %12 ], [ %130, %128 ]
  %16 = getelementptr inbounds %struct.Piece, %struct.Piece* %15, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  switch i32 %17, label %128 [
    i32 0, label %18
    i32 1, label %34
    i32 2, label %73
  ]

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.Piece, %struct.Piece* %15, i64 0, i32 4
  %20 = load i32, i32* %19, align 4
  br label %21

21:                                               ; preds = %21, %18
  %22 = phi i32 [ %20, %18 ], [ %32, %21 ]
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %13) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -86, i64 64, i1 false)
  %23 = icmp slt i32 %22, 64
  %24 = select i1 %23, i32 %22, i32 64
  %25 = and i32 %24, 63
  %26 = or i32 %25, 64
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  %28 = call i32 @fputc(i32 %26, %struct._IO_FILE* %27)
  %29 = load %struct.SAA*, %struct.SAA** %7, align 8
  %30 = sext i32 %24 to i64
  call void @saa_rnbytes(%struct.SAA* %29, i8* nonnull %13, i64 %30) #9
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @nasm_write(i8* nonnull %13, i64 %30, %struct._IO_FILE* %31) #9
  %32 = sub nsw i32 %22, %24
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %13) #9
  %33 = icmp sgt i32 %32, 0
  br i1 %33, label %21, label %128

34:                                               ; preds = %14
  %35 = getelementptr inbounds %struct.Piece, %struct.Piece* %15, i64 0, i32 3
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 4
  br i1 %37, label %38, label %43

38:                                               ; preds = %34
  store i32 3, i32* %35, align 8
  %39 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 3), align 8
  %40 = getelementptr inbounds %struct.Piece, %struct.Piece* %15, i64 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = add i32 %41, %39
  store i32 %42, i32* %40, align 4
  br label %43

43:                                               ; preds = %38, %34
  %44 = getelementptr inbounds %struct.Piece, %struct.Piece* %15, i64 0, i32 4
  %45 = load i32, i32* %44, align 4
  %46 = load i32, i32* @as86_reloc_size, align 4
  %47 = icmp eq i32 %46, %45
  br i1 %47, label %55, label %48

48:                                               ; preds = %43
  store i32 %45, i32* @as86_reloc_size, align 4
  switch i32 %45, label %50 [
    i32 1, label %51
    i32 2, label %51
    i32 4, label %49
  ]

49:                                               ; preds = %48
  br label %51

50:                                               ; preds = %48
  call void (i8*, ...) @nasm_panic(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i64 0, i64 0), i32 %45) #12
  unreachable

51:                                               ; preds = %48, %48, %49
  %52 = phi i32 [ 3, %49 ], [ %45, %48 ], [ %45, %48 ]
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  %54 = call i32 @fputc(i32 %52, %struct._IO_FILE* %53) #9
  br label %55

55:                                               ; preds = %51, %43
  %56 = getelementptr inbounds %struct.Piece, %struct.Piece* %15, i64 0, i32 5
  %57 = load i8, i8* %56, align 8, !range !2
  %58 = icmp eq i8 %57, 0
  %59 = select i1 %58, i32 128, i32 160
  %60 = load i32, i32* %35, align 8
  %61 = or i32 %59, %60
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  %63 = call i32 @fputc(i32 %61, %struct._IO_FILE* %62)
  %64 = load i32, i32* @as86_reloc_size, align 4
  %65 = icmp eq i32 %64, 2
  %66 = getelementptr inbounds %struct.Piece, %struct.Piece* %15, i64 0, i32 2
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %71

68:                                               ; preds = %55
  %69 = trunc i32 %67 to i16
  %70 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @fwriteint16_t(i16 zeroext %69, %struct._IO_FILE* %70) #9
  br label %128

71:                                               ; preds = %55
  %72 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @fwriteint32_t(i32 %67, %struct._IO_FILE* %72) #9
  br label %128

73:                                               ; preds = %14
  %74 = getelementptr inbounds %struct.Piece, %struct.Piece* %15, i64 0, i32 4
  %75 = load i32, i32* %74, align 4
  %76 = load i32, i32* @as86_reloc_size, align 4
  %77 = icmp eq i32 %76, %75
  br i1 %77, label %85, label %78

78:                                               ; preds = %73
  store i32 %75, i32* @as86_reloc_size, align 4
  switch i32 %75, label %80 [
    i32 1, label %81
    i32 2, label %81
    i32 4, label %79
  ]

79:                                               ; preds = %78
  br label %81

80:                                               ; preds = %78
  call void (i8*, ...) @nasm_panic(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i64 0, i64 0), i32 %75) #12
  unreachable

81:                                               ; preds = %78, %78, %79
  %82 = phi i32 [ 3, %79 ], [ %75, %78 ], [ %75, %78 ]
  %83 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  %84 = call i32 @fputc(i32 %82, %struct._IO_FILE* %83) #9
  br label %85

85:                                               ; preds = %81, %73
  %86 = getelementptr inbounds %struct.Piece, %struct.Piece* %15, i64 0, i32 2
  %87 = load i32, i32* %86, align 4
  %88 = icmp ugt i32 %87, 65535
  br i1 %88, label %94, label %89

89:                                               ; preds = %85
  %90 = icmp ugt i32 %87, 255
  br i1 %90, label %94, label %91

91:                                               ; preds = %89
  %92 = icmp ne i32 %87, 0
  %93 = zext i1 %92 to i32
  br label %94

94:                                               ; preds = %91, %89, %85
  %95 = phi i32 [ 3, %85 ], [ 2, %89 ], [ %93, %91 ]
  %96 = getelementptr inbounds %struct.Piece, %struct.Piece* %15, i64 0, i32 5
  %97 = load i8, i8* %96, align 8, !range !2
  %98 = icmp eq i8 %97, 0
  %99 = select i1 %98, i32 192, i32 224
  %100 = getelementptr inbounds %struct.Piece, %struct.Piece* %15, i64 0, i32 3
  %101 = load i32, i32* %100, align 8
  %102 = icmp sgt i32 %101, 255
  %103 = select i1 %102, i32 4, i32 0
  %104 = or i32 %99, %95
  %105 = or i32 %104, %103
  %106 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  %107 = call i32 @fputc(i32 %105, %struct._IO_FILE* %106)
  %108 = load i32, i32* %100, align 8
  %109 = icmp sgt i32 %108, 255
  br i1 %109, label %110, label %113

110:                                              ; preds = %94
  %111 = trunc i32 %108 to i16
  %112 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @fwriteint16_t(i16 zeroext %111, %struct._IO_FILE* %112) #9
  br label %116

113:                                              ; preds = %94
  %114 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  %115 = call i32 @fputc(i32 %108, %struct._IO_FILE* %114)
  br label %116

116:                                              ; preds = %113, %110
  switch i32 %95, label %128 [
    i32 3, label %125
    i32 1, label %117
    i32 2, label %121
  ]

117:                                              ; preds = %116
  %118 = load i32, i32* %86, align 4
  %119 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  %120 = call i32 @fputc(i32 %118, %struct._IO_FILE* %119)
  br label %128

121:                                              ; preds = %116
  %122 = load i32, i32* %86, align 4
  %123 = trunc i32 %122 to i16
  %124 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @fwriteint16_t(i16 zeroext %123, %struct._IO_FILE* %124) #9
  br label %128

125:                                              ; preds = %116
  %126 = load i32, i32* %86, align 4
  %127 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  call void @fwriteint32_t(i32 %126, %struct._IO_FILE* %127) #9
  br label %128

128:                                              ; preds = %21, %14, %71, %68, %116, %125, %121, %117
  %129 = getelementptr inbounds %struct.Piece, %struct.Piece* %15, i64 0, i32 0
  %130 = load %struct.Piece*, %struct.Piece** %129, align 8
  %131 = icmp eq %struct.Piece* %130, null
  br i1 %131, label %132, label %14

132:                                              ; preds = %128, %2
  ret void
}

declare void @saa_rnbytes(%struct.SAA*, i8*, i64) local_unnamed_addr #1

declare void @nasm_write(i8*, i64, %struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: cold noreturn
declare void @nasm_panic(i8*, ...) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { nounwind readonly }
attributes #11 = { nounwind allocsize(0) }
attributes #12 = { cold noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
