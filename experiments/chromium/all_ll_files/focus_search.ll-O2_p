; ModuleID = '../../ui/views/focus/focus_search.cc'
source_filename = "../../ui/views/focus/focus_search.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.ui::ClassProperty" = type opaque
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.views::FocusSearch" = type <{ i32 (...)**, %"class.views::View"*, i8, i8, [6 x i8] }>
%"class.views::View" = type <{ %"class.ui::LayerDelegate", %"class.ui::LayerObserver", %"class.ui::LayerOwner", %"class.ui::AcceleratorTarget", %"class.ui::EventTarget", %"class.ui::EventHandler", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", i8, [3 x i8], i32, i32, [4 x i8], %"class.views::View"*, %"class.std::__1::vector.49", i8, [3 x i8], %"class.absl::optional", %"class.gfx::Rect", i8, i8, i8, i8, [4 x i8], %"class.std::__1::unique_ptr.56", %class.SkPath, i8, [7 x i8], %"class.std::__1::unique_ptr.75", %"class.absl::optional.81", i8, [7 x i8], %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.ui::PaintCache", i8, [7 x i8], %"class.ui::NativeTheme"*, i8, %"class.absl::optional.118", i8, i8, [3 x i8], %"class.std::__1::vector.123", %"class.std::__1::unique_ptr.130", %"class.views::FocusManager"*, %"class.std::__1::unique_ptr.248", i64, %"class.views::View"*, %"class.views::View"*, i32, [4 x i8], %"class.views::ContextMenuController"*, %"class.views::DragController"*, %"class.std::__1::unique_ptr.261", %"class.std::__1::unique_ptr.267", %"class.base::ObserverList.273", i32, [4 x i8] }>
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerObserver" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr", %"class.ui::Layer"*, %"class.base::ObserverList" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.1" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::AcceleratorTarget" = type { i32 (...)** }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector.4", %"class.std::__1::vector.20", %"class.ui::EventHandler"* }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.27" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.ui::EventHandler"** }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type { i32 (...)**, %"class.ui::EventDispatcherDelegate"*, %"class.ui::Event"*, %"class.std::__1::vector.20" }
%"class.ui::EventDispatcherDelegate" = type { i32 (...)**, %"class.ui::EventDispatcher"* }
%"class.ui::Event" = type { i32 (...)**, i32, %"class.base::TimeTicks", %"class.ui::LatencyInfo", i32, %"class.ui::Event"*, i8, i8, %"class.ui::EventTarget"*, i32, i32, i32, %"class.std::__1::unique_ptr.13" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.6" }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.8" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.base::flat_map.16"* }
%"class.base::flat_map.16" = type opaque
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { i64 }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map.40" }
%"class.std::__1::map.40" = type { %"class.std::__1::__tree.41" }
%"class.std::__1::__tree.41" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::vector.49" = type { %"class.std::__1::__vector_base.50" }
%"class.std::__1::__vector_base.50" = type { %"class.views::View"**, %"class.views::View"**, %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.views::View"** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.std::__1::vector.49"* }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.65", %"struct.std::__1::atomic.65", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.63, %class.SkTDArray.64, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.62" }
%"struct.std::__1::__atomic_base.62" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.63 = type { i8*, i32, i32 }
%class.SkTDArray.64 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.70 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.65" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.70 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.71", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.71" = type { %"struct.std::__1::__atomic_base.72" }
%"struct.std::__1::__atomic_base.72" = type { %"struct.std::__1::__cxx_atomic_impl.73" }
%"struct.std::__1::__cxx_atomic_impl.73" = type { %"struct.std::__1::__cxx_atomic_base_impl.74" }
%"struct.std::__1::__cxx_atomic_base_impl.74" = type { i8 }
%"struct.std::__1::atomic.65" = type { %"struct.std::__1::__atomic_base.66" }
%"struct.std::__1::__atomic_base.66" = type { %"struct.std::__1::__atomic_base.67" }
%"struct.std::__1::__atomic_base.67" = type { %"struct.std::__1::__cxx_atomic_impl.68" }
%"struct.std::__1::__cxx_atomic_impl.68" = type { %"struct.std::__1::__cxx_atomic_base_impl.69" }
%"struct.std::__1::__cxx_atomic_base_impl.69" = type { i8 }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.views::LayoutManager"* }
%"class.views::LayoutManager" = type { i32 (...)**, %"class.views::View"* }
%"class.absl::optional.81" = type { %"class.absl::optional_internal::optional_data.82" }
%"class.absl::optional_internal::optional_data.82" = type { %"class.absl::optional_internal::optional_data_base.83" }
%"class.absl::optional_internal::optional_data_base.83" = type { %"class.absl::optional_internal::optional_data_dtor_base.84" }
%"class.absl::optional_internal::optional_data_dtor_base.84" = type { i8, %union.anon.85 }
%union.anon.85 = type { %"class.views::View::DefaultFillLayout" }
%"class.views::View::DefaultFillLayout" = type { %"class.views::LayoutManager" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.views::Background"* }
%"class.views::Background" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.views::Border"* }
%"class.views::Border" = type opaque
%"class.ui::PaintCache" = type <{ %class.sk_sp.98, float, [4 x i8] }>
%class.sk_sp.98 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.99", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { i8* }
%"class.ui::NativeTheme" = type <{ i32 (...)**, %"class.std::__1::map.103", %"class.base::ObserverList.114", i8, i8, [2 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::map.103" = type { %"class.std::__1::__tree.104" }
%"class.std::__1::__tree.104" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.105", %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.base::ObserverList.114" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.115", i64, i32, [4 x i8] }>
%"class.base::LinkedList.115" = type { %"class.base::LinkNode.116" }
%"class.base::LinkNode.116" = type { %"class.base::internal::LinkNodeBase" }
%"class.absl::optional.118" = type { %"class.absl::optional_internal::optional_data.119" }
%"class.absl::optional_internal::optional_data.119" = type { %"class.absl::optional_internal::optional_data_base.120" }
%"class.absl::optional_internal::optional_data_base.120" = type { %"class.absl::optional_internal::optional_data_dtor_base.121" }
%"class.absl::optional_internal::optional_data_dtor_base.121" = type { i8, %union.anon.122 }
%union.anon.122 = type { i8 }
%"class.std::__1::vector.123" = type { %"class.std::__1::__vector_base.124" }
%"class.std::__1::__vector_base.124" = type { %"class.ui::Layer"**, %"class.ui::Layer"**, %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.ui::Layer"** }
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.views::ViewMaskLayer"* }
%"class.views::ViewMaskLayer" = type opaque
%"class.views::FocusManager" = type { %"class.views::ViewObserver", %"class.views::Widget"*, %"class.std::__1::unique_ptr.221", %"class.views::View"*, %"class.ui::AcceleratorManager", i8, %"class.std::__1::unique_ptr.238", i32, [4 x i8], %"class.base::ObserverList.244", i8, i8, i32 }
%"class.views::ViewObserver" = type { i32 (...)** }
%"class.views::Widget" = type { %"class.views::internal::NativeWidgetDelegate", %"class.ui::EventSource", %"class.views::FocusTraversable", %"class.ui::NativeThemeObserver", %"class.ui::metadata::MetaDataProvider", %"class.views::internal::NativeWidgetPrivate"*, %"class.base::ObserverList.140", %"class.base::ObserverList.151", %"class.base::RepeatingCallbackList", %"class.views::WidgetDelegate"*, %"class.views::Widget"*, %"class.std::__1::unique_ptr.208", %"class.views::NonClientView"*, %"class.std::__1::unique_ptr.214", %"class.views::View"*, i32, i8, i32, i8, i64, i8, i32, i32, %"class.gfx::Rect", i8, i8, i8, i8, i8, i8, i8, %"class.gfx::Point", i8, %"class.std::__1::vector.49", i8, i8, i8, %"class.ui::NativeTheme"*, %"class.base::ScopedObservation", %"class.base::WeakPtrFactory.220" }
%"class.views::internal::NativeWidgetDelegate" = type { i32 (...)** }
%"class.ui::EventSource" = type { i32 (...)**, %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.136" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.views::FocusTraversable" = type { i32 (...)** }
%"class.ui::NativeThemeObserver" = type { i32 (...)** }
%"class.views::internal::NativeWidgetPrivate" = type opaque
%"class.base::ObserverList.140" = type <{ %"class.std::__1::vector.141", %"class.base::LinkedList.148", i64, i32, [4 x i8] }>
%"class.std::__1::vector.141" = type { %"class.std::__1::__vector_base.142" }
%"class.std::__1::__vector_base.142" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.143" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.65" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.148" = type { %"class.base::LinkNode.149" }
%"class.base::LinkNode.149" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::ObserverList.151" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.152", i64, i32, [4 x i8] }>
%"class.base::LinkedList.152" = type { %"class.base::LinkNode.153" }
%"class.base::LinkNode.153" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::RepeatingCallbackList" = type { %"class.base::internal::CallbackListBase" }
%"class.base::internal::CallbackListBase" = type { %"class.std::__1::list.155", i8, %"class.base::RepeatingCallback", %"class.base::WeakPtrFactory" }
%"class.std::__1::list.155" = type { %"class.std::__1::__list_imp.156" }
%"class.std::__1::__list_imp.156" = type { %"struct.std::__1::__list_node_base.157", %"class.std::__1::__compressed_pair.158" }
%"struct.std::__1::__list_node_base.157" = type { %"struct.std::__1::__list_node_base.157"*, %"struct.std::__1::__list_node_base.157"* }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.162 }
%class.scoped_refptr.162 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.163", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.163" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.164 }
%class.scoped_refptr.164 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.views::WidgetDelegate" = type { i32 (...)**, %"class.views::Widget"*, %"struct.views::WidgetDelegate::Params", %"class.views::View"*, i8, i8, %"class.views::View"*, %"class.std::__1::unique_ptr.186", i8, i8*, %"class.std::__1::unique_ptr.192", %"class.std::__1::unique_ptr.192", %"class.std::__1::vector.195", %"class.std::__1::vector.195", %"class.std::__1::vector.195", %"class.base::OnceCallback.205", %"class.base::RepeatingCallback.206", %"class.base::OnceCallback.207" }
%"struct.views::WidgetDelegate::Params" = type { i32, %"class.std::__1::basic_string", i8, i8, i8, i8, i8, i8, %"class.gfx::ImageSkia", %"class.gfx::ImageSkia", %"class.absl::optional.172", %"class.std::__1::basic_string.177", i32, i8, i8, i8, i8, %"class.std::__1::basic_string" }
%"class.gfx::ImageSkia" = type { %class.scoped_refptr.171 }
%class.scoped_refptr.171 = type { %"class.gfx::internal::ImageSkiaStorage"* }
%"class.gfx::internal::ImageSkiaStorage" = type opaque
%"class.absl::optional.172" = type { %"class.absl::optional_internal::optional_data.173" }
%"class.absl::optional_internal::optional_data.173" = type { %"class.absl::optional_internal::optional_data_base.174" }
%"class.absl::optional_internal::optional_data_base.174" = type { %"class.absl::optional_internal::optional_data_dtor_base.175" }
%"class.absl::optional_internal::optional_data_dtor_base.175" = type { i8, %union.anon.176 }
%union.anon.176 = type { %"class.views::View"* }
%"class.std::__1::basic_string.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.180 }
%union.anon.180 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.167 }
%union.anon.167 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.views::View"* }
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.std::__1::vector.195"* }
%"class.std::__1::vector.195" = type { %"class.std::__1::__vector_base.196" }
%"class.std::__1::__vector_base.196" = type { %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, %"class.std::__1::__compressed_pair.197" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.base::OnceCallback"* }
%"class.base::OnceCallback.205" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback.206" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::OnceCallback.207" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.views::internal::RootView"* }
%"class.views::internal::RootView" = type opaque
%"class.views::NonClientView" = type { %"class.views::View.base", %"class.views::ViewTargeterDelegate", %"class.views::ClientView"*, %"class.std::__1::unique_ptr.277", %"class.views::View"*, %"class.std::__1::basic_string" }
%"class.views::View.base" = type <{ %"class.ui::LayerDelegate", %"class.ui::LayerObserver", %"class.ui::LayerOwner", %"class.ui::AcceleratorTarget", %"class.ui::EventTarget", %"class.ui::EventHandler", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", i8, [3 x i8], i32, i32, [4 x i8], %"class.views::View"*, %"class.std::__1::vector.49", i8, [3 x i8], %"class.absl::optional", %"class.gfx::Rect", i8, i8, i8, i8, [4 x i8], %"class.std::__1::unique_ptr.56", %class.SkPath, i8, [7 x i8], %"class.std::__1::unique_ptr.75", %"class.absl::optional.81", i8, [7 x i8], %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.ui::PaintCache", i8, [7 x i8], %"class.ui::NativeTheme"*, i8, %"class.absl::optional.118", i8, i8, [3 x i8], %"class.std::__1::vector.123", %"class.std::__1::unique_ptr.130", %"class.views::FocusManager"*, %"class.std::__1::unique_ptr.248", i64, %"class.views::View"*, %"class.views::View"*, i32, [4 x i8], %"class.views::ContextMenuController"*, %"class.views::DragController"*, %"class.std::__1::unique_ptr.261", %"class.std::__1::unique_ptr.267", %"class.base::ObserverList.273", i32 }>
%"class.views::ViewTargeterDelegate" = type { i32 (...)** }
%"class.views::ClientView" = type { %"class.views::View.base", %"class.views::View"* }
%"class.std::__1::unique_ptr.277" = type { %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"class.views::NonClientFrameView"* }
%"class.views::NonClientFrameView" = type { %"class.views::View.base", %"class.views::ViewTargeterDelegate" }
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.views::FocusManager"* }
%"class.base::ScopedObservation" = type { %"class.ui::NativeThemeObserver"*, %"class.ui::NativeTheme"* }
%"class.base::WeakPtrFactory.220" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.views::FocusManagerDelegate"* }
%"class.views::FocusManagerDelegate" = type opaque
%"class.ui::AcceleratorManager" = type { %"class.ui::AcceleratorMap" }
%"class.ui::AcceleratorMap" = type { %"class.std::__1::map.227" }
%"class.std::__1::map.227" = type { %"class.std::__1::__tree.228" }
%"class.std::__1::__tree.228" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.229", %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.views::ViewTracker"* }
%"class.views::ViewTracker" = type opaque
%"class.base::ObserverList.244" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.245", i64, i32, [4 x i8] }>
%"class.base::LinkedList.245" = type { %"class.base::LinkNode.246" }
%"class.base::LinkNode.246" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.std::__1::vector.251"* }
%"class.std::__1::vector.251" = type { %"class.std::__1::__vector_base.252" }
%"class.std::__1::__vector_base.252" = type { %"class.ui::Accelerator"*, %"class.ui::Accelerator"*, %"class.std::__1::__compressed_pair.253" }
%"class.ui::Accelerator" = type { i32, i32, i32, %"class.base::TimeTicks", i8, i32 }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.ui::Accelerator"* }
%"class.views::ContextMenuController" = type opaque
%"class.views::DragController" = type opaque
%"class.std::__1::unique_ptr.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.views::ViewTargeter"* }
%"class.views::ViewTargeter" = type { %"class.ui::EventTargeter", %"class.views::ViewTargeterDelegate"* }
%"class.ui::EventTargeter" = type { i32 (...)** }
%"class.std::__1::unique_ptr.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.views::ViewAccessibility"* }
%"class.views::ViewAccessibility" = type opaque
%"class.base::ObserverList.273" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.274", i64, i32, [4 x i8] }>
%"class.base::LinkedList.274" = type { %"class.base::LinkNode.275" }
%"class.base::LinkNode.275" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::flat_tree.283" = type { %"class.std::__1::vector.49" }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string.177", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.views::DialogDelegate" = type <{ %"class.views::WidgetDelegate", %"class.gfx::Insets", i32, [4 x i8], %"class.base::TimeTicks", %"struct.views::DialogDelegate::Params", %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.186", %"class.base::ObserverList.290", %"class.base::OnceCallback", %"class.base::OnceCallback", %"class.base::OnceCallback", i8, [7 x i8] }>
%"class.gfx::Insets" = type { i32, i32, i32, i32 }
%"struct.views::DialogDelegate::Params" = type <{ %"class.absl::optional.285", i8, i8, i8, i8, i32, [3 x %"class.std::__1::basic_string"], i32, [4 x i8] }>
%"class.absl::optional.285" = type { %"class.absl::optional_internal::optional_data.286" }
%"class.absl::optional_internal::optional_data.286" = type { %"class.absl::optional_internal::optional_data_base.287" }
%"class.absl::optional_internal::optional_data_base.287" = type { %"class.absl::optional_internal::optional_data_dtor_base.288" }
%"class.absl::optional_internal::optional_data_dtor_base.288" = type { i8, %union.anon.289 }
%union.anon.289 = type { i32 }
%"class.base::ObserverList.290" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.291", i64, i32, [4 x i8] }>
%"class.base::LinkedList.291" = type { %"class.base::LinkNode.292" }
%"class.base::LinkNode.292" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.181 }
%struct.anon.181 = type { i8 }
%"struct.std::__1::__split_buffer" = type { %"class.views::View"**, %"class.views::View"**, %"class.views::View"**, %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.52", %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"class.std::__1::allocator.54"* }
%"class.std::__1::allocator.54" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN5views11FocusSearchD2Ev = comdat any

$_ZN5views11FocusSearchD0Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16vectorIPN5views4ViewENS_9allocatorIS3_EEE7emplaceIJRKS3_EEENS_11__wrap_iterIPS3_EENSA_IPS8_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferIPN5views4ViewERNS_9allocatorIS3_EEE12emplace_backIJRKS3_EEEvDpOT_ = comdat any

@_ZTVN5views11FocusSearchE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.views::FocusSearch"*)* @_ZN5views11FocusSearchD2Ev to i8*), i8* bitcast (void (%"class.views::FocusSearch"*)* @_ZN5views11FocusSearchD0Ev to i8*), i8* bitcast (%"class.views::View"* (%"class.views::FocusSearch"*, %"class.views::View"*, i32, i32, i32, i32, %"class.views::FocusTraversable"**, %"class.views::View"**)* @_ZN5views11FocusSearch21FindNextFocusableViewEPNS_4ViewENS0_15SearchDirectionENS0_18TraversalDirectionENS0_18StartingViewPolicyENS0_20AnchoredDialogPolicyEPPNS_16FocusTraversableEPS2_ to i8*), i8* bitcast (%"class.views::View"* (%"class.views::FocusSearch"*, %"class.views::View"*)* @_ZN5views11FocusSearch9GetParentEPNS_4ViewE to i8*), i8* bitcast (i1 (%"class.views::FocusSearch"*, %"class.views::View"*, %"class.views::View"*)* @_ZN5views11FocusSearch8ContainsEPNS_4ViewEPKS1_ to i8*)] }, align 8
@.str = private unnamed_addr constant [37 x i8] c"../../ui/views/focus/focus_search.cc\00", align 1
@.str.1 = private unnamed_addr constant [27 x i8] c"View focus cycle detected.\00", align 1
@_ZN5views18kAnchoredDialogKeyE = external local_unnamed_addr constant %"struct.ui::ClassProperty"*, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN5views11FocusSearchC1EPNS_4ViewEbb = hidden unnamed_addr alias void (%"class.views::FocusSearch"*, %"class.views::View"*, i1, i1), void (%"class.views::FocusSearch"*, %"class.views::View"*, i1, i1)* @_ZN5views11FocusSearchC2EPNS_4ViewEbb

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5views11FocusSearchC2EPNS_4ViewEbb(%"class.views::FocusSearch"* nocapture, %"class.views::View"*, i1 zeroext, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = zext i1 %2 to i8
  %6 = zext i1 %3 to i8
  %7 = getelementptr inbounds %"class.views::FocusSearch", %"class.views::FocusSearch"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5views11FocusSearchE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.views::FocusSearch", %"class.views::FocusSearch"* %0, i64 0, i32 1
  store %"class.views::View"* %1, %"class.views::View"** %8, align 8
  %9 = getelementptr inbounds %"class.views::FocusSearch", %"class.views::FocusSearch"* %0, i64 0, i32 2
  store i8 %5, i8* %9, align 8
  %10 = getelementptr inbounds %"class.views::FocusSearch", %"class.views::FocusSearch"* %0, i64 0, i32 3
  store i8 %6, i8* %10, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.views::View"* @_ZN5views11FocusSearch21FindNextFocusableViewEPNS_4ViewENS0_15SearchDirectionENS0_18TraversalDirectionENS0_18StartingViewPolicyENS0_20AnchoredDialogPolicyEPPNS_16FocusTraversableEPS2_(%"class.views::FocusSearch"*, %"class.views::View"*, i32, i32, i32, i32, %"class.views::FocusTraversable"**, %"class.views::View"**) unnamed_addr #1 align 2 {
  %9 = alloca %"class.base::internal::flat_tree.283", align 8
  store %"class.views::FocusTraversable"* null, %"class.views::FocusTraversable"** %6, align 8
  store %"class.views::View"* null, %"class.views::View"** %7, align 8
  %10 = icmp ne %"class.views::View"* %1, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = tail call i32 @_ZNK5views4View8GetGroupEv(%"class.views::View"* nonnull %1) #9
  br label %27

13:                                               ; preds = %8
  %14 = icmp eq i32 %2, 1
  %15 = getelementptr inbounds %"class.views::FocusSearch", %"class.views::FocusSearch"* %0, i64 0, i32 1
  %16 = load %"class.views::View"*, %"class.views::View"** %15, align 8
  br i1 %14, label %17, label %21

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.views::View", %"class.views::View"* %16, i64 0, i32 14, i32 0, i32 1
  %19 = load %"class.views::View"**, %"class.views::View"*** %18, align 8
  %20 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %19, i64 -1
  br label %24

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.views::View", %"class.views::View"* %16, i64 0, i32 14, i32 0, i32 0
  %23 = load %"class.views::View"**, %"class.views::View"*** %22, align 8
  br label %24

24:                                               ; preds = %21, %17
  %25 = phi %"class.views::View"** [ %20, %17 ], [ %23, %21 ]
  %26 = load %"class.views::View"*, %"class.views::View"** %25, align 8
  br label %27

27:                                               ; preds = %11, %24
  %28 = phi i32 [ -1, %24 ], [ %12, %11 ]
  %29 = phi i32 [ 1, %24 ], [ %4, %11 ]
  %30 = phi %"class.views::View"* [ %26, %24 ], [ %1, %11 ]
  %31 = bitcast %"class.base::internal::flat_tree.283"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.base::internal::flat_tree.283", %"class.base::internal::flat_tree.283"* %9, i64 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.base::internal::flat_tree.283", %"class.base::internal::flat_tree.283"* %9, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 24, i1 false) #9
  %34 = icmp eq i32 %2, 0
  %35 = icmp eq i32 %3, 1
  br i1 %34, label %36, label %38

36:                                               ; preds = %27
  %37 = call %"class.views::View"* @_ZN5views11FocusSearch25FindNextFocusableViewImplEPNS_4ViewENS0_18StartingViewPolicyEbbNS0_20AnchoredDialogPolicyEiPN4base8internal9flat_treeIS2_NS5_8identityENSt3__14lessIvEENS9_6vectorIS2_NS9_9allocatorIS2_EEEEEEPPNS_16FocusTraversableEPS2_(%"class.views::FocusSearch"* %0, %"class.views::View"* %30, i32 %29, i1 zeroext true, i1 zeroext %35, i32 %5, i32 %28, %"class.base::internal::flat_tree.283"* nonnull %9, %"class.views::FocusTraversable"** %6, %"class.views::View"** %7)
  br label %69

38:                                               ; preds = %27
  br i1 %35, label %39, label %66

39:                                               ; preds = %38
  %40 = getelementptr inbounds %"class.views::FocusSearch", %"class.views::FocusSearch"* %0, i64 0, i32 3
  %41 = load i8, i8* %40, align 1, !range !2
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.views::FocusSearch", %"class.views::FocusSearch"* %0, i64 0, i32 1
  %45 = load %"class.views::View"*, %"class.views::View"** %44, align 8
  %46 = bitcast %"class.views::View"* %45 to %"class.views::Widget"* (%"class.views::View"*)***
  %47 = load %"class.views::Widget"* (%"class.views::View"*)**, %"class.views::Widget"* (%"class.views::View"*)*** %46, align 8
  %48 = getelementptr inbounds %"class.views::Widget"* (%"class.views::View"*)*, %"class.views::Widget"* (%"class.views::View"*)** %47, i64 13
  %49 = load %"class.views::Widget"* (%"class.views::View"*)*, %"class.views::Widget"* (%"class.views::View"*)** %48, align 8
  %50 = tail call %"class.views::Widget"* %49(%"class.views::View"* %45) #9
  %51 = tail call %"class.views::FocusManager"* @_ZN5views6Widget15GetFocusManagerEv(%"class.views::Widget"* %50) #9
  %52 = getelementptr inbounds %"class.views::FocusManager", %"class.views::FocusManager"* %51, i64 0, i32 10
  %53 = load i8, i8* %52, align 8, !range !2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %43, %39
  %56 = icmp eq %"class.views::View"* %30, null
  br i1 %56, label %63, label %57

57:                                               ; preds = %55
  %58 = tail call zeroext i1 @_ZNK5views4View24IsAccessibilityFocusableEv(%"class.views::View"* nonnull %30) #9
  br label %63

59:                                               ; preds = %43
  %60 = icmp eq %"class.views::View"* %30, null
  br i1 %60, label %63, label %61

61:                                               ; preds = %59
  %62 = tail call zeroext i1 @_ZNK5views4View11IsFocusableEv(%"class.views::View"* nonnull %30) #9
  br label %63

63:                                               ; preds = %55, %57, %59, %61
  %64 = phi i1 [ false, %55 ], [ %58, %57 ], [ false, %59 ], [ %62, %61 ]
  %65 = xor i1 %64, true
  br label %66

66:                                               ; preds = %63, %38
  %67 = phi i1 [ false, %38 ], [ %65, %63 ]
  %68 = call %"class.views::View"* @_ZN5views11FocusSearch29FindPreviousFocusableViewImplEPNS_4ViewENS0_18StartingViewPolicyEbbNS0_20AnchoredDialogPolicyEiPN4base8internal9flat_treeIS2_NS5_8identityENSt3__14lessIvEENS9_6vectorIS2_NS9_9allocatorIS2_EEEEEEPPNS_16FocusTraversableEPS2_(%"class.views::FocusSearch"* %0, %"class.views::View"* %30, i32 %29, i1 zeroext true, i1 zeroext %67, i32 %5, i32 %28, %"class.base::internal::flat_tree.283"* nonnull %9, %"class.views::FocusTraversable"** %6, %"class.views::View"** %7)
  br label %69

69:                                               ; preds = %66, %36
  %70 = phi %"class.views::View"* [ %37, %36 ], [ %68, %66 ]
  %71 = icmp eq %"class.views::View"* %70, null
  br i1 %71, label %83, label %72

72:                                               ; preds = %69
  %73 = getelementptr inbounds %"class.views::FocusSearch", %"class.views::FocusSearch"* %0, i64 0, i32 1
  %74 = load %"class.views::View"*, %"class.views::View"** %73, align 8
  %75 = icmp eq %"class.views::View"* %70, %74
  br i1 %75, label %83, label %76

76:                                               ; preds = %72
  %77 = bitcast %"class.views::FocusSearch"* %0 to i1 (%"class.views::FocusSearch"*, %"class.views::View"*, %"class.views::View"*)***
  %78 = load i1 (%"class.views::FocusSearch"*, %"class.views::View"*, %"class.views::View"*)**, i1 (%"class.views::FocusSearch"*, %"class.views::View"*, %"class.views::View"*)*** %77, align 8
  %79 = getelementptr inbounds i1 (%"class.views::FocusSearch"*, %"class.views::View"*, %"class.views::View"*)*, i1 (%"class.views::FocusSearch"*, %"class.views::View"*, %"class.views::View"*)** %78, i64 4
  %80 = load i1 (%"class.views::FocusSearch"*, %"class.views::View"*, %"class.views::View"*)*, i1 (%"class.views::FocusSearch"*, %"class.views::View"*, %"class.views::View"*)** %79, align 8
  %81 = call zeroext i1 %80(%"class.views::FocusSearch"* %0, %"class.views::View"* %74, %"class.views::View"* nonnull %70) #9
  %82 = select i1 %81, %"class.views::View"* %70, %"class.views::View"* null
  br label %83

83:                                               ; preds = %76, %72, %69
  %84 = phi %"class.views::View"* [ %70, %72 ], [ null, %69 ], [ %82, %76 ]
  %85 = load %"class.views::FocusTraversable"*, %"class.views::FocusTraversable"** %6, align 8
  %86 = icmp eq %"class.views::FocusTraversable"* %85, null
  br i1 %86, label %87, label %100

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.views::FocusSearch", %"class.views::FocusSearch"* %0, i64 0, i32 2
  %89 = load i8, i8* %88, align 8, !range !2
  %90 = icmp ne i8 %89, 0
  %91 = icmp eq %"class.views::View"* %84, null
  %92 = and i1 %91, %90
  %93 = and i1 %10, %92
  br i1 %93, label %94, label %100

94:                                               ; preds = %87
  %95 = bitcast %"class.views::FocusSearch"* %0 to %"class.views::View"* (%"class.views::FocusSearch"*, %"class.views::View"*, i32, i32, i32, i32, %"class.views::FocusTraversable"**, %"class.views::View"**)***
  %96 = load %"class.views::View"* (%"class.views::FocusSearch"*, %"class.views::View"*, i32, i32, i32, i32, %"class.views::FocusTraversable"**, %"class.views::View"**)**, %"class.views::View"* (%"class.views::FocusSearch"*, %"class.views::View"*, i32, i32, i32, i32, %"class.views::FocusTraversable"**, %"class.views::View"**)*** %95, align 8
  %97 = getelementptr inbounds %"class.views::View"* (%"class.views::FocusSearch"*, %"class.views::View"*, i32, i32, i32, i32, %"class.views::FocusTraversable"**, %"class.views::View"**)*, %"class.views::View"* (%"class.views::FocusSearch"*, %"class.views::View"*, i32, i32, i32, i32, %"class.views::FocusTraversable"**, %"class.views::View"**)** %96, i64 2
  %98 = load %"class.views::View"* (%"class.views::FocusSearch"*, %"class.views::View"*, i32, i32, i32, i32, %"class.views::FocusTraversable"**, %"class.views::View"**)*, %"class.views::View"* (%"class.views::FocusSearch"*, %"class.views::View"*, i32, i32, i32, i32, %"class.views::FocusTraversable"**, %"class.views::View"**)** %97, align 8
  %99 = call %"class.views::View"* %98(%"class.views::FocusSearch"* %0, %"class.views::View"* null, i32 %2, i32 %3, i32 %29, i32 %5, %"class.views::FocusTraversable"** %6, %"class.views::View"** %7) #9
  br label %100

100:                                              ; preds = %87, %83, %94
  %101 = phi %"class.views::View"* [ %99, %94 ], [ null, %83 ], [ %84, %87 ]
  %102 = load %"class.views::View"**, %"class.views::View"*** %32, align 8
  %103 = icmp eq %"class.views::View"** %102, null
  br i1 %103, label %108, label %104

104:                                              ; preds = %100
  %105 = ptrtoint %"class.views::View"** %102 to i64
  %106 = bitcast %"class.views::View"*** %33 to i64*
  store i64 %105, i64* %106, align 8
  %107 = bitcast %"class.views::View"** %102 to i8*
  call void @_ZdlPv(i8* %107) #10
  br label %108

108:                                              ; preds = %100, %104
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  ret %"class.views::View"* %101
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i32 @_ZNK5views4View8GetGroupEv(%"class.views::View"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.views::View"* @_ZN5views11FocusSearch25FindNextFocusableViewImplEPNS_4ViewENS0_18StartingViewPolicyEbbNS0_20AnchoredDialogPolicyEiPN4base8internal9flat_treeIS2_NS5_8identityENSt3__14lessIvEENS9_6vectorIS2_NS9_9allocatorIS2_EEEEEEPPNS_16FocusTraversableEPS2_(%"class.views::FocusSearch"*, %"class.views::View"*, i32, i1 zeroext, i1 zeroext, i32, i32, %"class.base::internal::flat_tree.283"*, %"class.views::FocusTraversable"**, %"class.views::View"**) local_unnamed_addr #1 align 2 {
  %11 = alloca %"class.views::View"*, align 8
  %12 = alloca %"class.logging::LogMessage", align 8
  store %"class.views::View"* %1, %"class.views::View"** %11, align 8
  %13 = getelementptr inbounds %"class.base::internal::flat_tree.283", %"class.base::internal::flat_tree.283"* %7, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.views::View"**, %"class.views::View"*** %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::flat_tree.283", %"class.base::internal::flat_tree.283"* %7, i64 0, i32 0, i32 0, i32 1
  %16 = bitcast %"class.views::View"*** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = ptrtoint %"class.views::View"** %14 to i64
  %19 = sub i64 %17, %18
  %20 = icmp eq i64 %19, 0
  %21 = inttoptr i64 %17 to %"class.views::View"**
  br i1 %20, label %37, label %22

22:                                               ; preds = %10
  %23 = ashr exact i64 %19, 3
  br label %24

24:                                               ; preds = %24, %22
  %25 = phi %"class.views::View"** [ %14, %22 ], [ %35, %24 ]
  %26 = phi i64 [ %23, %22 ], [ %34, %24 ]
  %27 = lshr i64 %26, 1
  %28 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %25, i64 %27
  %29 = load %"class.views::View"*, %"class.views::View"** %28, align 8
  %30 = icmp ult %"class.views::View"* %29, %1
  %31 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %28, i64 1
  %32 = xor i64 %27, -1
  %33 = add i64 %26, %32
  %34 = select i1 %30, i64 %33, i64 %27
  %35 = select i1 %30, %"class.views::View"** %31, %"class.views::View"** %25
  %36 = icmp eq i64 %34, 0
  br i1 %36, label %37, label %24

37:                                               ; preds = %24, %10
  %38 = phi %"class.views::View"** [ %14, %10 ], [ %35, %24 ]
  %39 = icmp eq %"class.views::View"** %38, %21
  br i1 %39, label %50, label %40

40:                                               ; preds = %37
  %41 = load %"class.views::View"*, %"class.views::View"** %38, align 8
  %42 = icmp ugt %"class.views::View"* %41, %1
  br i1 %42, label %50, label %43

43:                                               ; preds = %40
  %44 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #9
  br i1 %44, label %45, label %259

45:                                               ; preds = %43
  %46 = bitcast %"class.logging::LogMessage"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %46) #9
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %12, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0), i32 170, i32 2) #9
  %47 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %12, i64 0, i32 2
  %48 = bitcast %"class.std::__1::basic_ostringstream"* %47 to %"class.std::__1::basic_ostream"*
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %48, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), i64 26) #9
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %46) #9
  br label %259

50:                                               ; preds = %40, %37
  br i1 %20, label %66, label %51

51:                                               ; preds = %50
  %52 = ashr exact i64 %19, 3
  br label %53

53:                                               ; preds = %53, %51
  %54 = phi %"class.views::View"** [ %14, %51 ], [ %64, %53 ]
  %55 = phi i64 [ %52, %51 ], [ %63, %53 ]
  %56 = lshr i64 %55, 1
  %57 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %54, i64 %56
  %58 = load %"class.views::View"*, %"class.views::View"** %57, align 8
  %59 = icmp ult %"class.views::View"* %58, %1
  %60 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %57, i64 1
  %61 = xor i64 %56, -1
  %62 = add i64 %55, %61
  %63 = select i1 %59, i64 %62, i64 %56
  %64 = select i1 %59, %"class.views::View"** %60, %"class.views::View"** %54
  %65 = icmp eq i64 %63, 0
  br i1 %65, label %66, label %53

66:                                               ; preds = %53, %50
  %67 = phi %"class.views::View"** [ %14, %50 ], [ %64, %53 ]
  %68 = icmp eq %"class.views::View"** %67, %21
  br i1 %68, label %72, label %69

69:                                               ; preds = %66
  %70 = load %"class.views::View"*, %"class.views::View"** %67, align 8
  %71 = icmp ugt %"class.views::View"* %70, %1
  br i1 %71, label %72, label %75

72:                                               ; preds = %69, %66
  %73 = getelementptr inbounds %"class.base::internal::flat_tree.283", %"class.base::internal::flat_tree.283"* %7, i64 0, i32 0
  %74 = call %"class.views::View"** @_ZNSt3__16vectorIPN5views4ViewENS_9allocatorIS3_EEE7emplaceIJRKS3_EEENS_11__wrap_iterIPS3_EENSA_IPS8_EEDpOT_(%"class.std::__1::vector.49"* %73, %"class.views::View"** %67, %"class.views::View"** nonnull dereferenceable(8) %11) #9
  br label %75

75:                                               ; preds = %69, %72
  %76 = icmp eq i32 %2, 1
  br i1 %76, label %77, label %168

77:                                               ; preds = %75
  %78 = load %"class.views::View"*, %"class.views::View"** %11, align 8
  %79 = getelementptr inbounds %"class.views::FocusSearch", %"class.views::FocusSearch"* %0, i64 0, i32 3
  %80 = load i8, i8* %79, align 1, !range !2
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %82, label %94

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.views::FocusSearch", %"class.views::FocusSearch"* %0, i64 0, i32 1
  %84 = load %"class.views::View"*, %"class.views::View"** %83, align 8
  %85 = bitcast %"class.views::View"* %84 to %"class.views::Widget"* (%"class.views::View"*)***
  %86 = load %"class.views::Widget"* (%"class.views::View"*)**, %"class.views::Widget"* (%"class.views::View"*)*** %85, align 8
  %87 = getelementptr inbounds %"class.views::Widget"* (%"class.views::View"*)*, %"class.views::Widget"* (%"class.views::View"*)** %86, i64 13
  %88 = load %"class.views::Widget"* (%"class.views::View"*)*, %"class.views::Widget"* (%"class.views::View"*)** %87, align 8
  %89 = call %"class.views::Widget"* %88(%"class.views::View"* %84) #9
  %90 = call %"class.views::FocusManager"* @_ZN5views6Widget15GetFocusManagerEv(%"class.views::Widget"* %89) #9
  %91 = getelementptr inbounds %"class.views::FocusManager", %"class.views::FocusManager"* %90, i64 0, i32 10
  %92 = load i8, i8* %91, align 8, !range !2
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %98, label %94

94:                                               ; preds = %82, %77
  %95 = icmp eq %"class.views::View"* %78, null
  br i1 %95, label %156, label %96

96:                                               ; preds = %94
  %97 = call zeroext i1 @_ZNK5views4View24IsAccessibilityFocusableEv(%"class.views::View"* nonnull %78) #9
  br i1 %97, label %102, label %156

98:                                               ; preds = %82
  %99 = icmp eq %"class.views::View"* %78, null
  br i1 %99, label %156, label %100

100:                                              ; preds = %98
  %101 = call zeroext i1 @_ZNK5views4View11IsFocusableEv(%"class.views::View"* nonnull %78) #9
  br i1 %101, label %102, label %156

102:                                              ; preds = %100, %96
  %103 = bitcast %"class.views::View"* %78 to i1 (%"class.views::View"*)***
  %104 = load i1 (%"class.views::View"*)**, i1 (%"class.views::View"*)*** %103, align 8
  %105 = getelementptr inbounds i1 (%"class.views::View"*)*, i1 (%"class.views::View"*)** %104, i64 29
  %106 = load i1 (%"class.views::View"*)*, i1 (%"class.views::View"*)** %105, align 8
  %107 = call zeroext i1 %106(%"class.views::View"* nonnull %78) #9
  %108 = icmp eq i32 %6, -1
  %109 = or i1 %108, %107
  br i1 %109, label %113, label %110

110:                                              ; preds = %102
  %111 = call i32 @_ZNK5views4View8GetGroupEv(%"class.views::View"* nonnull %78) #9
  %112 = icmp eq i32 %111, %6
  br i1 %112, label %156, label %113

113:                                              ; preds = %110, %102
  %114 = load %"class.views::View"*, %"class.views::View"** %11, align 8
  %115 = bitcast %"class.views::View"* %114 to i1 (%"class.views::View"*)***
  %116 = load i1 (%"class.views::View"*)**, i1 (%"class.views::View"*)*** %115, align 8
  %117 = getelementptr inbounds i1 (%"class.views::View"*)*, i1 (%"class.views::View"*)** %116, i64 29
  %118 = load i1 (%"class.views::View"*)*, i1 (%"class.views::View"*)** %117, align 8
  %119 = call zeroext i1 %118(%"class.views::View"* %114) #9
  br i1 %119, label %132, label %120

120:                                              ; preds = %113
  %121 = call i32 @_ZNK5views4View8GetGroupEv(%"class.views::View"* %114) #9
  %122 = icmp eq i32 %121, -1
  br i1 %122, label %132, label %123

123:                                              ; preds = %120
  %124 = call i32 @_ZNK5views4View8GetGroupEv(%"class.views::View"* %114) #9
  %125 = bitcast %"class.views::View"* %114 to %"class.views::View"* (%"class.views::View"*, i32)***
  %126 = load %"class.views::View"* (%"class.views::View"*, i32)**, %"class.views::View"* (%"class.views::View"*, i32)*** %125, align 8
  %127 = getelementptr inbounds %"class.views::View"* (%"class.views::View"*, i32)*, %"class.views::View"* (%"class.views::View"*, i32)** %126, i64 30
  %128 = load %"class.views::View"* (%"class.views::View"*, i32)*, %"class.views::View"* (%"class.views::View"*, i32)** %127, align 8
  %129 = call %"class.views::View"* %128(%"class.views::View"* %114, i32 %124) #9
  %130 = icmp eq %"class.views::View"* %129, null
  %131 = select i1 %130, %"class.views::View"* %114, %"class.views::View"* %129
  br label %132

132:                                              ; preds = %113, %120, %123
  %133 = phi %"class.views::View"* [ %131, %123 ], [ %114, %120 ], [ %114, %113 ]
  %134 = load i8, i8* %79, align 1, !range !2
  %135 = icmp eq i8 %134, 0
  br i1 %135, label %136, label %148

136:                                              ; preds = %132
  %137 = getelementptr inbounds %"class.views::FocusSearch", %"class.views::FocusSearch"* %0, i64 0, i32 1
  %138 = load %"class.views::View"*, %"class.views::View"** %137, align 8
  %139 = bitcast %"class.views::View"* %138 to %"class.views::Widget"* (%"class.views::View"*)***
  %140 = load %"class.views::Widget"* (%"class.views::View"*)**, %"class.views::Widget"* (%"class.views::View"*)*** %139, align 8
  %141 = getelementptr inbounds %"class.views::Widget"* (%"class.views::View"*)*, %"class.views::Widget"* (%"class.views::View"*)** %140, i64 13
  %142 = load %"class.views::Widget"* (%"class.views::View"*)*, %"class.views::Widget"* (%"class.views::View"*)** %141, align 8
  %143 = call %"class.views::Widget"* %142(%"class.views::View"* %138) #9
  %144 = call %"class.views::FocusManager"* @_ZN5views6Widget15GetFocusManagerEv(%"class.views::Widget"* %143) #9
  %145 = getelementptr inbounds %"class.views::FocusManager", %"class.views::FocusManager"* %144, i64 0, i32 10
  %146 = load i8, i8* %145, align 8, !range !2
  %147 = icmp eq i8 %146, 0
  br i1 %147, label %152, label %148

148:                                              ; preds = %136, %132
  %149 = icmp eq %"class.views::View"* %133, null
  br i1 %149, label %156, label %150

150:                                              ; preds = %148
  %151 = call zeroext i1 @_ZNK5views4View24IsAccessibilityFocusableEv(%"class.views::View"* nonnull %133) #9
  br i1 %151, label %259, label %156

152:                                              ; preds = %136
  %153 = icmp eq %"class.views::View"* %133, null
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = call zeroext i1 @_ZNK5views4View11IsFocusableEv(%"class.views::View"* nonnull %133) #9
  br i1 %155, label %259, label %156

156:                                              ; preds = %110, %152, %148, %150, %154, %98, %94, %96, %100
  %157 = load %"class.views::View"*, %"class.views::View"** %11, align 8
  %158 = bitcast %"class.views::View"* %157 to %"class.views::FocusTraversable"* (%"class.views::View"*)***
  %159 = load %"class.views::FocusTraversable"* (%"class.views::View"*)**, %"class.views::FocusTraversable"* (%"class.views::View"*)*** %158, align 8
  %160 = getelementptr inbounds %"class.views::FocusTraversable"* (%"class.views::View"*)*, %"class.views::FocusTraversable"* (%"class.views::View"*)** %159, i64 67
  %161 = load %"class.views::FocusTraversable"* (%"class.views::View"*)*, %"class.views::FocusTraversable"* (%"class.views::View"*)** %160, align 8
  %162 = call %"class.views::FocusTraversable"* %161(%"class.views::View"* %157) #9
  store %"class.views::FocusTraversable"* %162, %"class.views::FocusTraversable"** %8, align 8
  %163 = icmp eq %"class.views::FocusTraversable"* %162, null
  br i1 %163, label %168, label %164

164:                                              ; preds = %156
  %165 = bitcast %"class.views::View"** %11 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = bitcast %"class.views::View"** %9 to i64*
  store i64 %166, i64* %167, align 8
  br label %259

168:                                              ; preds = %156, %75
  br i1 %4, label %169, label %204

169:                                              ; preds = %168
  %170 = load %"class.views::View"*, %"class.views::View"** %11, align 8
  %171 = getelementptr inbounds %"class.views::View", %"class.views::View"* %170, i64 0, i32 14, i32 0, i32 0
  %172 = load %"class.views::View"**, %"class.views::View"*** %171, align 8
  %173 = getelementptr inbounds %"class.views::View", %"class.views::View"* %170, i64 0, i32 14, i32 0, i32 1
  %174 = load %"class.views::View"**, %"class.views::View"*** %173, align 8
  %175 = icmp eq %"class.views::View"** %172, %174
  br i1 %175, label %183, label %176

176:                                              ; preds = %169
  %177 = load %"class.views::View"*, %"class.views::View"** %172, align 8
  %178 = call %"class.views::View"* @_ZN5views11FocusSearch25FindNextFocusableViewImplEPNS_4ViewENS0_18StartingViewPolicyEbbNS0_20AnchoredDialogPolicyEiPN4base8internal9flat_treeIS2_NS5_8identityENSt3__14lessIvEENS9_6vectorIS2_NS9_9allocatorIS2_EEEEEEPPNS_16FocusTraversableEPS2_(%"class.views::FocusSearch"* %0, %"class.views::View"* %177, i32 1, i1 zeroext false, i1 zeroext true, i32 %5, i32 %6, %"class.base::internal::flat_tree.283"* %7, %"class.views::FocusTraversable"** %8, %"class.views::View"** %9)
  %179 = icmp eq %"class.views::View"* %178, null
  br i1 %179, label %180, label %259

180:                                              ; preds = %176
  %181 = load %"class.views::FocusTraversable"*, %"class.views::FocusTraversable"** %8, align 8
  %182 = icmp eq %"class.views::FocusTraversable"* %181, null
  br i1 %182, label %183, label %259

183:                                              ; preds = %180, %169
  %184 = icmp eq i32 %5, 1
  br i1 %184, label %185, label %204

185:                                              ; preds = %183
  %186 = bitcast %"class.views::View"** %11 to i8**
  %187 = load i8*, i8** %186, align 8
  %188 = getelementptr inbounds i8, i8* %187, i64 208
  %189 = bitcast i8* %188 to %"class.ui::PropertyHandler"*
  %190 = load %"struct.ui::ClassProperty"*, %"struct.ui::ClassProperty"** @_ZN5views18kAnchoredDialogKeyE, align 8
  %191 = call %"class.views::DialogDelegate"* @_ZNK2ui15PropertyHandler11GetPropertyIPN5views14DialogDelegateEEET_PKNS_13ClassPropertyIS5_EE(%"class.ui::PropertyHandler"* %189, %"struct.ui::ClassProperty"* %190) #9
  %192 = icmp eq %"class.views::DialogDelegate"* %191, null
  br i1 %192, label %204, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.views::DialogDelegate", %"class.views::DialogDelegate"* %191, i64 0, i32 0
  %195 = bitcast %"class.views::DialogDelegate"* %191 to %"class.views::Widget"* (%"class.views::WidgetDelegate"*)***
  %196 = load %"class.views::Widget"* (%"class.views::WidgetDelegate"*)**, %"class.views::Widget"* (%"class.views::WidgetDelegate"*)*** %195, align 8
  %197 = getelementptr inbounds %"class.views::Widget"* (%"class.views::WidgetDelegate"*)*, %"class.views::Widget"* (%"class.views::WidgetDelegate"*)** %196, i64 30
  %198 = load %"class.views::Widget"* (%"class.views::WidgetDelegate"*)*, %"class.views::Widget"* (%"class.views::WidgetDelegate"*)** %197, align 8
  %199 = call %"class.views::Widget"* %198(%"class.views::WidgetDelegate"* %194) #9
  %200 = call %"class.views::FocusTraversable"* @_ZN5views6Widget19GetFocusTraversableEv(%"class.views::Widget"* %199) #9
  store %"class.views::FocusTraversable"* %200, %"class.views::FocusTraversable"** %8, align 8
  %201 = bitcast %"class.views::View"** %11 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = bitcast %"class.views::View"** %9 to i64*
  store i64 %202, i64* %203, align 8
  br label %259

204:                                              ; preds = %185, %183, %168
  %205 = load %"class.views::View"*, %"class.views::View"** %11, align 8
  %206 = call %"class.views::View"* @_ZN5views4View20GetNextFocusableViewEv(%"class.views::View"* %205) #9
  %207 = icmp eq %"class.views::View"* %206, null
  br i1 %207, label %215, label %208

208:                                              ; preds = %204
  %209 = call %"class.views::View"* @_ZN5views11FocusSearch25FindNextFocusableViewImplEPNS_4ViewENS0_18StartingViewPolicyEbbNS0_20AnchoredDialogPolicyEiPN4base8internal9flat_treeIS2_NS5_8identityENSt3__14lessIvEENS9_6vectorIS2_NS9_9allocatorIS2_EEEEEEPPNS_16FocusTraversableEPS2_(%"class.views::FocusSearch"* %0, %"class.views::View"* nonnull %206, i32 1, i1 zeroext false, i1 zeroext true, i32 %5, i32 %6, %"class.base::internal::flat_tree.283"* %7, %"class.views::FocusTraversable"** %8, %"class.views::View"** %9)
  %210 = icmp eq %"class.views::View"* %209, null
  br i1 %210, label %211, label %259

211:                                              ; preds = %208
  %212 = load %"class.views::FocusTraversable"*, %"class.views::FocusTraversable"** %8, align 8
  %213 = icmp eq %"class.views::FocusTraversable"* %212, null
  %214 = and i1 %213, %3
  br i1 %214, label %216, label %259

215:                                              ; preds = %204
  br i1 %3, label %216, label %259

216:                                              ; preds = %211, %215
  %217 = load %"class.views::View"*, %"class.views::View"** %11, align 8
  %218 = bitcast %"class.views::FocusSearch"* %0 to %"class.views::View"* (%"class.views::FocusSearch"*, %"class.views::View"*)***
  %219 = load %"class.views::View"* (%"class.views::FocusSearch"*, %"class.views::View"*)**, %"class.views::View"* (%"class.views::FocusSearch"*, %"class.views::View"*)*** %218, align 8
  %220 = getelementptr inbounds %"class.views::View"* (%"class.views::FocusSearch"*, %"class.views::View"*)*, %"class.views::View"* (%"class.views::FocusSearch"*, %"class.views::View"*)** %219, i64 3
  %221 = load %"class.views::View"* (%"class.views::FocusSearch"*, %"class.views::View"*)*, %"class.views::View"* (%"class.views::FocusSearch"*, %"class.views::View"*)** %220, align 8
  %222 = call %"class.views::View"* %221(%"class.views::FocusSearch"* %0, %"class.views::View"* %217) #9
  %223 = icmp eq %"class.views::View"* %222, null
  br i1 %223, label %259, label %224

224:                                              ; preds = %216
  %225 = getelementptr inbounds %"class.views::FocusSearch", %"class.views::FocusSearch"* %0, i64 0, i32 1
  %226 = icmp eq i32 %5, 1
  %227 = load %"struct.ui::ClassProperty"*, %"struct.ui::ClassProperty"** @_ZN5views18kAnchoredDialogKeyE, align 8
  br label %228

228:                                              ; preds = %224, %253
  %229 = phi %"class.views::View"* [ %222, %224 ], [ %257, %253 ]
  %230 = load %"class.views::View"*, %"class.views::View"** %225, align 8
  %231 = icmp eq %"class.views::View"* %229, %230
  br i1 %231, label %259, label %232

232:                                              ; preds = %228
  br i1 %226, label %233, label %248

233:                                              ; preds = %232
  %234 = getelementptr inbounds %"class.views::View", %"class.views::View"* %229, i64 0, i32 6
  %235 = call %"class.views::DialogDelegate"* @_ZNK2ui15PropertyHandler11GetPropertyIPN5views14DialogDelegateEEET_PKNS_13ClassPropertyIS5_EE(%"class.ui::PropertyHandler"* %234, %"struct.ui::ClassProperty"* %227) #9
  %236 = icmp eq %"class.views::DialogDelegate"* %235, null
  br i1 %236, label %248, label %237

237:                                              ; preds = %233
  %238 = getelementptr inbounds %"class.views::DialogDelegate", %"class.views::DialogDelegate"* %235, i64 0, i32 0
  %239 = bitcast %"class.views::DialogDelegate"* %235 to %"class.views::Widget"* (%"class.views::WidgetDelegate"*)***
  %240 = load %"class.views::Widget"* (%"class.views::WidgetDelegate"*)**, %"class.views::Widget"* (%"class.views::WidgetDelegate"*)*** %239, align 8
  %241 = getelementptr inbounds %"class.views::Widget"* (%"class.views::WidgetDelegate"*)*, %"class.views::Widget"* (%"class.views::WidgetDelegate"*)** %240, i64 30
  %242 = load %"class.views::Widget"* (%"class.views::WidgetDelegate"*)*, %"class.views::Widget"* (%"class.views::WidgetDelegate"*)** %241, align 8
  %243 = call %"class.views::Widget"* %242(%"class.views::WidgetDelegate"* %238) #9
  %244 = call %"class.views::FocusTraversable"* @_ZN5views6Widget19GetFocusTraversableEv(%"class.views::Widget"* %243) #9
  store %"class.views::FocusTraversable"* %244, %"class.views::FocusTraversable"** %8, align 8
  %245 = bitcast %"class.views::View"** %11 to i64*
  %246 = load i64, i64* %245, align 8
  %247 = bitcast %"class.views::View"** %9 to i64*
  store i64 %246, i64* %247, align 8
  br label %259

248:                                              ; preds = %233, %232
  %249 = call %"class.views::View"* @_ZN5views4View20GetNextFocusableViewEv(%"class.views::View"* nonnull %229) #9
  %250 = icmp eq %"class.views::View"* %249, null
  br i1 %250, label %253, label %251

251:                                              ; preds = %248
  %252 = call %"class.views::View"* @_ZN5views11FocusSearch25FindNextFocusableViewImplEPNS_4ViewENS0_18StartingViewPolicyEbbNS0_20AnchoredDialogPolicyEiPN4base8internal9flat_treeIS2_NS5_8identityENSt3__14lessIvEENS9_6vectorIS2_NS9_9allocatorIS2_EEEEEEPPNS_16FocusTraversableEPS2_(%"class.views::FocusSearch"* %0, %"class.views::View"* nonnull %249, i32 1, i1 zeroext true, i1 zeroext true, i32 %5, i32 %6, %"class.base::internal::flat_tree.283"* %7, %"class.views::FocusTraversable"** %8, %"class.views::View"** %9)
  br label %259

253:                                              ; preds = %248
  %254 = load %"class.views::View"* (%"class.views::FocusSearch"*, %"class.views::View"*)**, %"class.views::View"* (%"class.views::FocusSearch"*, %"class.views::View"*)*** %218, align 8
  %255 = getelementptr inbounds %"class.views::View"* (%"class.views::FocusSearch"*, %"class.views::View"*)*, %"class.views::View"* (%"class.views::FocusSearch"*, %"class.views::View"*)** %254, i64 3
  %256 = load %"class.views::View"* (%"class.views::FocusSearch"*, %"class.views::View"*)*, %"class.views::View"* (%"class.views::FocusSearch"*, %"class.views::View"*)** %255, align 8
  %257 = call %"class.views::View"* %256(%"class.views::FocusSearch"* %0, %"class.views::View"* nonnull %229) #9
  %258 = icmp eq %"class.views::View"* %257, null
  br i1 %258, label %259, label %228

259:                                              ; preds = %228, %253, %211, %216, %208, %176, %215, %251, %237, %193, %150, %154, %45, %43, %180, %164
  %260 = phi %"class.views::View"* [ null, %164 ], [ null, %193 ], [ null, %180 ], [ null, %211 ], [ null, %43 ], [ null, %45 ], [ %133, %154 ], [ %133, %150 ], [ %252, %251 ], [ null, %237 ], [ null, %215 ], [ %178, %176 ], [ %209, %208 ], [ null, %216 ], [ null, %253 ], [ null, %228 ]
  ret %"class.views::View"* %260
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5views11FocusSearch11IsFocusableEPNS_4ViewE(%"class.views::FocusSearch"* nocapture readonly, %"class.views::View"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.views::FocusSearch", %"class.views::FocusSearch"* %0, i64 0, i32 3
  %4 = load i8, i8* %3, align 1, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %18

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.views::FocusSearch", %"class.views::FocusSearch"* %0, i64 0, i32 1
  %8 = load %"class.views::View"*, %"class.views::View"** %7, align 8
  %9 = bitcast %"class.views::View"* %8 to %"class.views::Widget"* (%"class.views::View"*)***
  %10 = load %"class.views::Widget"* (%"class.views::View"*)**, %"class.views::Widget"* (%"class.views::View"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.views::Widget"* (%"class.views::View"*)*, %"class.views::Widget"* (%"class.views::View"*)** %10, i64 13
  %12 = load %"class.views::Widget"* (%"class.views::View"*)*, %"class.views::Widget"* (%"class.views::View"*)** %11, align 8
  %13 = tail call %"class.views::Widget"* %12(%"class.views::View"* %8) #9
  %14 = tail call %"class.views::FocusManager"* @_ZN5views6Widget15GetFocusManagerEv(%"class.views::Widget"* %13) #9
  %15 = getelementptr inbounds %"class.views::FocusManager", %"class.views::FocusManager"* %14, i64 0, i32 10
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %6, %2
  %19 = icmp eq %"class.views::View"* %1, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %18
  %21 = tail call zeroext i1 @_ZNK5views4View24IsAccessibilityFocusableEv(%"class.views::View"* nonnull %1) #9
  br label %26

22:                                               ; preds = %6
  %23 = icmp eq %"class.views::View"* %1, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %22
  %25 = tail call zeroext i1 @_ZNK5views4View11IsFocusableEv(%"class.views::View"* nonnull %1) #9
  br label %26

26:                                               ; preds = %24, %22, %20, %18
  %27 = phi i1 [ false, %18 ], [ %21, %20 ], [ false, %22 ], [ %25, %24 ]
  ret i1 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.views::View"* @_ZN5views11FocusSearch29FindPreviousFocusableViewImplEPNS_4ViewENS0_18StartingViewPolicyEbbNS0_20AnchoredDialogPolicyEiPN4base8internal9flat_treeIS2_NS5_8identityENSt3__14lessIvEENS9_6vectorIS2_NS9_9allocatorIS2_EEEEEEPPNS_16FocusTraversableEPS2_(%"class.views::FocusSearch"*, %"class.views::View"*, i32, i1 zeroext, i1 zeroext, i32, i32, %"class.base::internal::flat_tree.283"*, %"class.views::FocusTraversable"**, %"class.views::View"**) local_unnamed_addr #1 align 2 {
  %11 = alloca %"class.views::View"*, align 8
  %12 = alloca %"class.logging::LogMessage", align 8
  store %"class.views::View"* %1, %"class.views::View"** %11, align 8
  %13 = getelementptr inbounds %"class.base::internal::flat_tree.283", %"class.base::internal::flat_tree.283"* %7, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.views::View"**, %"class.views::View"*** %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::flat_tree.283", %"class.base::internal::flat_tree.283"* %7, i64 0, i32 0, i32 0, i32 1
  %16 = bitcast %"class.views::View"*** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = ptrtoint %"class.views::View"** %14 to i64
  %19 = sub i64 %17, %18
  %20 = icmp eq i64 %19, 0
  %21 = inttoptr i64 %17 to %"class.views::View"**
  %22 = bitcast %"class.views::View"* %1 to i8*
  br i1 %20, label %38, label %23

23:                                               ; preds = %10
  %24 = ashr exact i64 %19, 3
  br label %25

25:                                               ; preds = %25, %23
  %26 = phi %"class.views::View"** [ %14, %23 ], [ %36, %25 ]
  %27 = phi i64 [ %24, %23 ], [ %35, %25 ]
  %28 = lshr i64 %27, 1
  %29 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %26, i64 %28
  %30 = load %"class.views::View"*, %"class.views::View"** %29, align 8
  %31 = icmp ult %"class.views::View"* %30, %1
  %32 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %29, i64 1
  %33 = xor i64 %28, -1
  %34 = add i64 %27, %33
  %35 = select i1 %31, i64 %34, i64 %28
  %36 = select i1 %31, %"class.views::View"** %32, %"class.views::View"** %26
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %38, label %25

38:                                               ; preds = %25, %10
  %39 = phi %"class.views::View"** [ %14, %10 ], [ %36, %25 ]
  %40 = icmp eq %"class.views::View"** %39, %21
  br i1 %40, label %51, label %41

41:                                               ; preds = %38
  %42 = load %"class.views::View"*, %"class.views::View"** %39, align 8
  %43 = icmp ugt %"class.views::View"* %42, %1
  br i1 %43, label %51, label %44

44:                                               ; preds = %41
  %45 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #9
  br i1 %45, label %46, label %236

46:                                               ; preds = %44
  %47 = bitcast %"class.logging::LogMessage"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %47) #9
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %12, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0), i32 274, i32 2) #9
  %48 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %12, i64 0, i32 2
  %49 = bitcast %"class.std::__1::basic_ostringstream"* %48 to %"class.std::__1::basic_ostream"*
  %50 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %49, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), i64 26) #9
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %47) #9
  br label %236

51:                                               ; preds = %41, %38
  br i1 %20, label %67, label %52

52:                                               ; preds = %51
  %53 = ashr exact i64 %19, 3
  br label %54

54:                                               ; preds = %54, %52
  %55 = phi %"class.views::View"** [ %14, %52 ], [ %65, %54 ]
  %56 = phi i64 [ %53, %52 ], [ %64, %54 ]
  %57 = lshr i64 %56, 1
  %58 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %55, i64 %57
  %59 = load %"class.views::View"*, %"class.views::View"** %58, align 8
  %60 = icmp ult %"class.views::View"* %59, %1
  %61 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %58, i64 1
  %62 = xor i64 %57, -1
  %63 = add i64 %56, %62
  %64 = select i1 %60, i64 %63, i64 %57
  %65 = select i1 %60, %"class.views::View"** %61, %"class.views::View"** %55
  %66 = icmp eq i64 %64, 0
  br i1 %66, label %67, label %54

67:                                               ; preds = %54, %51
  %68 = phi %"class.views::View"** [ %14, %51 ], [ %65, %54 ]
  %69 = icmp eq %"class.views::View"** %68, %21
  br i1 %69, label %75, label %70

70:                                               ; preds = %67
  %71 = load %"class.views::View"*, %"class.views::View"** %68, align 8
  %72 = icmp ugt %"class.views::View"* %71, %1
  br i1 %72, label %75, label %73

73:                                               ; preds = %70
  %74 = bitcast %"class.views::View"** %11 to i8**
  br label %80

75:                                               ; preds = %70, %67
  %76 = getelementptr inbounds %"class.base::internal::flat_tree.283", %"class.base::internal::flat_tree.283"* %7, i64 0, i32 0
  %77 = call %"class.views::View"** @_ZNSt3__16vectorIPN5views4ViewENS_9allocatorIS3_EEE7emplaceIJRKS3_EEENS_11__wrap_iterIPS3_EENSA_IPS8_EEDpOT_(%"class.std::__1::vector.49"* %76, %"class.views::View"** %68, %"class.views::View"** nonnull dereferenceable(8) %11) #9
  %78 = bitcast %"class.views::View"** %11 to i8**
  %79 = load i8*, i8** %78, align 8
  br label %80

80:                                               ; preds = %73, %75
  %81 = phi i8** [ %74, %73 ], [ %78, %75 ]
  %82 = phi i8* [ %22, %73 ], [ %79, %75 ]
  %83 = getelementptr inbounds i8, i8* %82, i64 208
  %84 = bitcast i8* %83 to %"class.ui::PropertyHandler"*
  %85 = load %"struct.ui::ClassProperty"*, %"struct.ui::ClassProperty"** @_ZN5views18kAnchoredDialogKeyE, align 8
  %86 = call %"class.views::DialogDelegate"* @_ZNK2ui15PropertyHandler11GetPropertyIPN5views14DialogDelegateEEET_PKNS_13ClassPropertyIS5_EE(%"class.ui::PropertyHandler"* %84, %"struct.ui::ClassProperty"* %85) #9
  %87 = icmp ne %"class.views::DialogDelegate"* %86, null
  %88 = icmp eq i32 %5, 0
  %89 = and i1 %88, %87
  %90 = or i1 %89, %4
  br i1 %90, label %91, label %137

91:                                               ; preds = %80
  %92 = load %"class.views::View"*, %"class.views::View"** %11, align 8
  %93 = bitcast %"class.views::View"* %92 to %"class.views::FocusTraversable"* (%"class.views::View"*)***
  %94 = load %"class.views::FocusTraversable"* (%"class.views::View"*)**, %"class.views::FocusTraversable"* (%"class.views::View"*)*** %93, align 8
  %95 = getelementptr inbounds %"class.views::FocusTraversable"* (%"class.views::View"*)*, %"class.views::FocusTraversable"* (%"class.views::View"*)** %94, i64 67
  %96 = load %"class.views::FocusTraversable"* (%"class.views::View"*)*, %"class.views::FocusTraversable"* (%"class.views::View"*)** %95, align 8
  %97 = call %"class.views::FocusTraversable"* %96(%"class.views::View"* %92) #9
  store %"class.views::FocusTraversable"* %97, %"class.views::FocusTraversable"** %8, align 8
  %98 = icmp eq %"class.views::FocusTraversable"* %97, null
  br i1 %98, label %103, label %99

99:                                               ; preds = %91
  %100 = bitcast %"class.views::View"** %11 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.views::View"** %9 to i64*
  store i64 %101, i64* %102, align 8
  br label %236

103:                                              ; preds = %91
  %104 = icmp eq i32 %5, 1
  br i1 %104, label %105, label %122

105:                                              ; preds = %103
  %106 = load i8*, i8** %81, align 8
  %107 = getelementptr inbounds i8, i8* %106, i64 208
  %108 = bitcast i8* %107 to %"class.ui::PropertyHandler"*
  %109 = call %"class.views::DialogDelegate"* @_ZNK2ui15PropertyHandler11GetPropertyIPN5views14DialogDelegateEEET_PKNS_13ClassPropertyIS5_EE(%"class.ui::PropertyHandler"* %108, %"struct.ui::ClassProperty"* %85) #9
  %110 = icmp eq %"class.views::DialogDelegate"* %109, null
  br i1 %110, label %122, label %111

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"class.views::DialogDelegate", %"class.views::DialogDelegate"* %109, i64 0, i32 0
  %113 = bitcast %"class.views::DialogDelegate"* %109 to %"class.views::Widget"* (%"class.views::WidgetDelegate"*)***
  %114 = load %"class.views::Widget"* (%"class.views::WidgetDelegate"*)**, %"class.views::Widget"* (%"class.views::WidgetDelegate"*)*** %113, align 8
  %115 = getelementptr inbounds %"class.views::Widget"* (%"class.views::WidgetDelegate"*)*, %"class.views::Widget"* (%"class.views::WidgetDelegate"*)** %114, i64 30
  %116 = load %"class.views::Widget"* (%"class.views::WidgetDelegate"*)*, %"class.views::Widget"* (%"class.views::WidgetDelegate"*)** %115, align 8
  %117 = call %"class.views::Widget"* %116(%"class.views::WidgetDelegate"* %112) #9
  %118 = call %"class.views::FocusTraversable"* @_ZN5views6Widget19GetFocusTraversableEv(%"class.views::Widget"* %117) #9
  store %"class.views::FocusTraversable"* %118, %"class.views::FocusTraversable"** %8, align 8
  %119 = bitcast %"class.views::View"** %11 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast %"class.views::View"** %9 to i64*
  store i64 %120, i64* %121, align 8
  br label %236

122:                                              ; preds = %105, %103
  %123 = load %"class.views::View"*, %"class.views::View"** %11, align 8
  %124 = getelementptr inbounds %"class.views::View", %"class.views::View"* %123, i64 0, i32 14, i32 0, i32 0
  %125 = load %"class.views::View"**, %"class.views::View"*** %124, align 8
  %126 = getelementptr inbounds %"class.views::View", %"class.views::View"* %123, i64 0, i32 14, i32 0, i32 1
  %127 = load %"class.views::View"**, %"class.views::View"*** %126, align 8
  %128 = icmp eq %"class.views::View"** %125, %127
  br i1 %128, label %137, label %129

129:                                              ; preds = %122
  %130 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %127, i64 -1
  %131 = load %"class.views::View"*, %"class.views::View"** %130, align 8
  %132 = call %"class.views::View"* @_ZN5views11FocusSearch29FindPreviousFocusableViewImplEPNS_4ViewENS0_18StartingViewPolicyEbbNS0_20AnchoredDialogPolicyEiPN4base8internal9flat_treeIS2_NS5_8identityENSt3__14lessIvEENS9_6vectorIS2_NS9_9allocatorIS2_EEEEEEPPNS_16FocusTraversableEPS2_(%"class.views::FocusSearch"* %0, %"class.views::View"* %131, i32 1, i1 zeroext false, i1 zeroext true, i32 1, i32 %6, %"class.base::internal::flat_tree.283"* %7, %"class.views::FocusTraversable"** %8, %"class.views::View"** %9)
  %133 = icmp eq %"class.views::View"* %132, null
  br i1 %133, label %134, label %236

134:                                              ; preds = %129
  %135 = load %"class.views::FocusTraversable"*, %"class.views::FocusTraversable"** %8, align 8
  %136 = icmp eq %"class.views::FocusTraversable"* %135, null
  br i1 %136, label %137, label %236

137:                                              ; preds = %122, %134, %80
  %138 = phi i32 [ 1, %122 ], [ 1, %134 ], [ %5, %80 ]
  %139 = icmp eq i32 %2, 1
  br i1 %139, label %140, label %219

140:                                              ; preds = %137
  %141 = load %"class.views::View"*, %"class.views::View"** %11, align 8
  %142 = getelementptr inbounds %"class.views::FocusSearch", %"class.views::FocusSearch"* %0, i64 0, i32 3
  %143 = load i8, i8* %142, align 1, !range !2
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %145, label %157

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"class.views::FocusSearch", %"class.views::FocusSearch"* %0, i64 0, i32 1
  %147 = load %"class.views::View"*, %"class.views::View"** %146, align 8
  %148 = bitcast %"class.views::View"* %147 to %"class.views::Widget"* (%"class.views::View"*)***
  %149 = load %"class.views::Widget"* (%"class.views::View"*)**, %"class.views::Widget"* (%"class.views::View"*)*** %148, align 8
  %150 = getelementptr inbounds %"class.views::Widget"* (%"class.views::View"*)*, %"class.views::Widget"* (%"class.views::View"*)** %149, i64 13
  %151 = load %"class.views::Widget"* (%"class.views::View"*)*, %"class.views::Widget"* (%"class.views::View"*)** %150, align 8
  %152 = call %"class.views::Widget"* %151(%"class.views::View"* %147) #9
  %153 = call %"class.views::FocusManager"* @_ZN5views6Widget15GetFocusManagerEv(%"class.views::Widget"* %152) #9
  %154 = getelementptr inbounds %"class.views::FocusManager", %"class.views::FocusManager"* %153, i64 0, i32 10
  %155 = load i8, i8* %154, align 8, !range !2
  %156 = icmp eq i8 %155, 0
  br i1 %156, label %161, label %157

157:                                              ; preds = %145, %140
  %158 = icmp eq %"class.views::View"* %141, null
  br i1 %158, label %219, label %159

159:                                              ; preds = %157
  %160 = call zeroext i1 @_ZNK5views4View24IsAccessibilityFocusableEv(%"class.views::View"* nonnull %141) #9
  br i1 %160, label %165, label %219

161:                                              ; preds = %145
  %162 = icmp eq %"class.views::View"* %141, null
  br i1 %162, label %219, label %163

163:                                              ; preds = %161
  %164 = call zeroext i1 @_ZNK5views4View11IsFocusableEv(%"class.views::View"* nonnull %141) #9
  br i1 %164, label %165, label %219

165:                                              ; preds = %163, %159
  %166 = bitcast %"class.views::View"* %141 to i1 (%"class.views::View"*)***
  %167 = load i1 (%"class.views::View"*)**, i1 (%"class.views::View"*)*** %166, align 8
  %168 = getelementptr inbounds i1 (%"class.views::View"*)*, i1 (%"class.views::View"*)** %167, i64 29
  %169 = load i1 (%"class.views::View"*)*, i1 (%"class.views::View"*)** %168, align 8
  %170 = call zeroext i1 %169(%"class.views::View"* nonnull %141) #9
  %171 = icmp eq i32 %6, -1
  %172 = or i1 %171, %170
  br i1 %172, label %176, label %173

173:                                              ; preds = %165
  %174 = call i32 @_ZNK5views4View8GetGroupEv(%"class.views::View"* nonnull %141) #9
  %175 = icmp eq i32 %174, %6
  br i1 %175, label %219, label %176

176:                                              ; preds = %173, %165
  %177 = load %"class.views::View"*, %"class.views::View"** %11, align 8
  %178 = bitcast %"class.views::View"* %177 to i1 (%"class.views::View"*)***
  %179 = load i1 (%"class.views::View"*)**, i1 (%"class.views::View"*)*** %178, align 8
  %180 = getelementptr inbounds i1 (%"class.views::View"*)*, i1 (%"class.views::View"*)** %179, i64 29
  %181 = load i1 (%"class.views::View"*)*, i1 (%"class.views::View"*)** %180, align 8
  %182 = call zeroext i1 %181(%"class.views::View"* %177) #9
  br i1 %182, label %195, label %183

183:                                              ; preds = %176
  %184 = call i32 @_ZNK5views4View8GetGroupEv(%"class.views::View"* %177) #9
  %185 = icmp eq i32 %184, -1
  br i1 %185, label %195, label %186

186:                                              ; preds = %183
  %187 = call i32 @_ZNK5views4View8GetGroupEv(%"class.views::View"* %177) #9
  %188 = bitcast %"class.views::View"* %177 to %"class.views::View"* (%"class.views::View"*, i32)***
  %189 = load %"class.views::View"* (%"class.views::View"*, i32)**, %"class.views::View"* (%"class.views::View"*, i32)*** %188, align 8
  %190 = getelementptr inbounds %"class.views::View"* (%"class.views::View"*, i32)*, %"class.views::View"* (%"class.views::View"*, i32)** %189, i64 30
  %191 = load %"class.views::View"* (%"class.views::View"*, i32)*, %"class.views::View"* (%"class.views::View"*, i32)** %190, align 8
  %192 = call %"class.views::View"* %191(%"class.views::View"* %177, i32 %187) #9
  %193 = icmp eq %"class.views::View"* %192, null
  %194 = select i1 %193, %"class.views::View"* %177, %"class.views::View"* %192
  br label %195

195:                                              ; preds = %176, %183, %186
  %196 = phi %"class.views::View"* [ %194, %186 ], [ %177, %183 ], [ %177, %176 ]
  %197 = load i8, i8* %142, align 1, !range !2
  %198 = icmp eq i8 %197, 0
  br i1 %198, label %199, label %211

199:                                              ; preds = %195
  %200 = getelementptr inbounds %"class.views::FocusSearch", %"class.views::FocusSearch"* %0, i64 0, i32 1
  %201 = load %"class.views::View"*, %"class.views::View"** %200, align 8
  %202 = bitcast %"class.views::View"* %201 to %"class.views::Widget"* (%"class.views::View"*)***
  %203 = load %"class.views::Widget"* (%"class.views::View"*)**, %"class.views::Widget"* (%"class.views::View"*)*** %202, align 8
  %204 = getelementptr inbounds %"class.views::Widget"* (%"class.views::View"*)*, %"class.views::Widget"* (%"class.views::View"*)** %203, i64 13
  %205 = load %"class.views::Widget"* (%"class.views::View"*)*, %"class.views::Widget"* (%"class.views::View"*)** %204, align 8
  %206 = call %"class.views::Widget"* %205(%"class.views::View"* %201) #9
  %207 = call %"class.views::FocusManager"* @_ZN5views6Widget15GetFocusManagerEv(%"class.views::Widget"* %206) #9
  %208 = getelementptr inbounds %"class.views::FocusManager", %"class.views::FocusManager"* %207, i64 0, i32 10
  %209 = load i8, i8* %208, align 8, !range !2
  %210 = icmp eq i8 %209, 0
  br i1 %210, label %215, label %211

211:                                              ; preds = %199, %195
  %212 = icmp eq %"class.views::View"* %196, null
  br i1 %212, label %219, label %213

213:                                              ; preds = %211
  %214 = call zeroext i1 @_ZNK5views4View24IsAccessibilityFocusableEv(%"class.views::View"* nonnull %196) #9
  br i1 %214, label %236, label %219

215:                                              ; preds = %199
  %216 = icmp eq %"class.views::View"* %196, null
  br i1 %216, label %219, label %217

217:                                              ; preds = %215
  %218 = call zeroext i1 @_ZNK5views4View11IsFocusableEv(%"class.views::View"* nonnull %196) #9
  br i1 %218, label %236, label %219

219:                                              ; preds = %173, %215, %211, %161, %157, %159, %163, %213, %217, %137
  %220 = load %"class.views::View"*, %"class.views::View"** %11, align 8
  %221 = call %"class.views::View"* @_ZN5views4View24GetPreviousFocusableViewEv(%"class.views::View"* %220) #9
  %222 = icmp eq %"class.views::View"* %221, null
  br i1 %222, label %225, label %223

223:                                              ; preds = %219
  %224 = call %"class.views::View"* @_ZN5views11FocusSearch29FindPreviousFocusableViewImplEPNS_4ViewENS0_18StartingViewPolicyEbbNS0_20AnchoredDialogPolicyEiPN4base8internal9flat_treeIS2_NS5_8identityENSt3__14lessIvEENS9_6vectorIS2_NS9_9allocatorIS2_EEEEEEPPNS_16FocusTraversableEPS2_(%"class.views::FocusSearch"* %0, %"class.views::View"* nonnull %221, i32 1, i1 zeroext %3, i1 zeroext true, i32 %138, i32 %6, %"class.base::internal::flat_tree.283"* %7, %"class.views::FocusTraversable"** %8, %"class.views::View"** %9)
  br label %236

225:                                              ; preds = %219
  br i1 %3, label %226, label %236

226:                                              ; preds = %225
  %227 = load %"class.views::View"*, %"class.views::View"** %11, align 8
  %228 = bitcast %"class.views::FocusSearch"* %0 to %"class.views::View"* (%"class.views::FocusSearch"*, %"class.views::View"*)***
  %229 = load %"class.views::View"* (%"class.views::FocusSearch"*, %"class.views::View"*)**, %"class.views::View"* (%"class.views::FocusSearch"*, %"class.views::View"*)*** %228, align 8
  %230 = getelementptr inbounds %"class.views::View"* (%"class.views::FocusSearch"*, %"class.views::View"*)*, %"class.views::View"* (%"class.views::FocusSearch"*, %"class.views::View"*)** %229, i64 3
  %231 = load %"class.views::View"* (%"class.views::FocusSearch"*, %"class.views::View"*)*, %"class.views::View"* (%"class.views::FocusSearch"*, %"class.views::View"*)** %230, align 8
  %232 = call %"class.views::View"* %231(%"class.views::FocusSearch"* %0, %"class.views::View"* %227) #9
  %233 = icmp eq %"class.views::View"* %232, null
  br i1 %233, label %236, label %234

234:                                              ; preds = %226
  %235 = call %"class.views::View"* @_ZN5views11FocusSearch29FindPreviousFocusableViewImplEPNS_4ViewENS0_18StartingViewPolicyEbbNS0_20AnchoredDialogPolicyEiPN4base8internal9flat_treeIS2_NS5_8identityENSt3__14lessIvEENS9_6vectorIS2_NS9_9allocatorIS2_EEEEEEPPNS_16FocusTraversableEPS2_(%"class.views::FocusSearch"* %0, %"class.views::View"* nonnull %232, i32 1, i1 zeroext true, i1 zeroext false, i32 %138, i32 %6, %"class.base::internal::flat_tree.283"* %7, %"class.views::FocusTraversable"** %8, %"class.views::View"** %9)
  br label %236

236:                                              ; preds = %226, %217, %213, %129, %225, %234, %46, %44, %223, %111, %134, %99
  %237 = phi %"class.views::View"* [ null, %99 ], [ null, %134 ], [ null, %111 ], [ %224, %223 ], [ %235, %234 ], [ null, %44 ], [ null, %46 ], [ null, %225 ], [ %132, %129 ], [ %196, %213 ], [ %196, %217 ], [ null, %226 ]
  ret %"class.views::View"* %237
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5views11FocusSearch24IsViewFocusableCandidateEPNS_4ViewEi(%"class.views::FocusSearch"* nocapture readonly, %"class.views::View"*, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.views::FocusSearch", %"class.views::FocusSearch"* %0, i64 0, i32 3
  %5 = load i8, i8* %4, align 1, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %19

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.views::FocusSearch", %"class.views::FocusSearch"* %0, i64 0, i32 1
  %9 = load %"class.views::View"*, %"class.views::View"** %8, align 8
  %10 = bitcast %"class.views::View"* %9 to %"class.views::Widget"* (%"class.views::View"*)***
  %11 = load %"class.views::Widget"* (%"class.views::View"*)**, %"class.views::Widget"* (%"class.views::View"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.views::Widget"* (%"class.views::View"*)*, %"class.views::Widget"* (%"class.views::View"*)** %11, i64 13
  %13 = load %"class.views::Widget"* (%"class.views::View"*)*, %"class.views::Widget"* (%"class.views::View"*)** %12, align 8
  %14 = tail call %"class.views::Widget"* %13(%"class.views::View"* %9) #9
  %15 = tail call %"class.views::FocusManager"* @_ZN5views6Widget15GetFocusManagerEv(%"class.views::Widget"* %14) #9
  %16 = getelementptr inbounds %"class.views::FocusManager", %"class.views::FocusManager"* %15, i64 0, i32 10
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %7, %3
  %20 = icmp eq %"class.views::View"* %1, null
  br i1 %20, label %38, label %21

21:                                               ; preds = %19
  %22 = tail call zeroext i1 @_ZNK5views4View24IsAccessibilityFocusableEv(%"class.views::View"* nonnull %1) #9
  br i1 %22, label %27, label %38

23:                                               ; preds = %7
  %24 = icmp eq %"class.views::View"* %1, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %23
  %26 = tail call zeroext i1 @_ZNK5views4View11IsFocusableEv(%"class.views::View"* nonnull %1) #9
  br i1 %26, label %27, label %38

27:                                               ; preds = %21, %25
  %28 = bitcast %"class.views::View"* %1 to i1 (%"class.views::View"*)***
  %29 = load i1 (%"class.views::View"*)**, i1 (%"class.views::View"*)*** %28, align 8
  %30 = getelementptr inbounds i1 (%"class.views::View"*)*, i1 (%"class.views::View"*)** %29, i64 29
  %31 = load i1 (%"class.views::View"*)*, i1 (%"class.views::View"*)** %30, align 8
  %32 = tail call zeroext i1 %31(%"class.views::View"* nonnull %1) #9
  %33 = icmp eq i32 %2, -1
  %34 = or i1 %33, %32
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = tail call i32 @_ZNK5views4View8GetGroupEv(%"class.views::View"* nonnull %1) #9
  %37 = icmp ne i32 %36, %2
  br label %38

38:                                               ; preds = %23, %19, %21, %27, %35, %25
  %39 = phi i1 [ false, %25 ], [ true, %27 ], [ %37, %35 ], [ false, %21 ], [ false, %19 ], [ false, %23 ]
  ret i1 %39
}

declare %"class.views::FocusManager"* @_ZN5views6Widget15GetFocusManagerEv(%"class.views::Widget"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5views4View24IsAccessibilityFocusableEv(%"class.views::View"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5views4View11IsFocusableEv(%"class.views::View"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.views::View"* @_ZN5views11FocusSearch24FindSelectedViewForGroupEPNS_4ViewE(%"class.views::FocusSearch"* nocapture readnone, %"class.views::View"*) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"class.views::View"* %1 to i1 (%"class.views::View"*)***
  %4 = load i1 (%"class.views::View"*)**, i1 (%"class.views::View"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.views::View"*)*, i1 (%"class.views::View"*)** %4, i64 29
  %6 = load i1 (%"class.views::View"*)*, i1 (%"class.views::View"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.views::View"* %1) #9
  br i1 %7, label %20, label %8

8:                                                ; preds = %2
  %9 = tail call i32 @_ZNK5views4View8GetGroupEv(%"class.views::View"* %1) #9
  %10 = icmp eq i32 %9, -1
  br i1 %10, label %20, label %11

11:                                               ; preds = %8
  %12 = tail call i32 @_ZNK5views4View8GetGroupEv(%"class.views::View"* %1) #9
  %13 = bitcast %"class.views::View"* %1 to %"class.views::View"* (%"class.views::View"*, i32)***
  %14 = load %"class.views::View"* (%"class.views::View"*, i32)**, %"class.views::View"* (%"class.views::View"*, i32)*** %13, align 8
  %15 = getelementptr inbounds %"class.views::View"* (%"class.views::View"*, i32)*, %"class.views::View"* (%"class.views::View"*, i32)** %14, i64 30
  %16 = load %"class.views::View"* (%"class.views::View"*, i32)*, %"class.views::View"* (%"class.views::View"*, i32)** %15, align 8
  %17 = tail call %"class.views::View"* %16(%"class.views::View"* %1, i32 %12) #9
  %18 = icmp eq %"class.views::View"* %17, null
  %19 = select i1 %18, %"class.views::View"* %1, %"class.views::View"* %17
  br label %20

20:                                               ; preds = %2, %8, %11
  %21 = phi %"class.views::View"* [ %19, %11 ], [ %1, %8 ], [ %1, %2 ]
  ret %"class.views::View"* %21
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.views::View"* @_ZN5views11FocusSearch9GetParentEPNS_4ViewE(%"class.views::FocusSearch"*, %"class.views::View"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.views::FocusSearch", %"class.views::FocusSearch"* %0, i64 0, i32 1
  %4 = load %"class.views::View"*, %"class.views::View"** %3, align 8
  %5 = bitcast %"class.views::FocusSearch"* %0 to i1 (%"class.views::FocusSearch"*, %"class.views::View"*, %"class.views::View"*)***
  %6 = load i1 (%"class.views::FocusSearch"*, %"class.views::View"*, %"class.views::View"*)**, i1 (%"class.views::FocusSearch"*, %"class.views::View"*, %"class.views::View"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.views::FocusSearch"*, %"class.views::View"*, %"class.views::View"*)*, i1 (%"class.views::FocusSearch"*, %"class.views::View"*, %"class.views::View"*)** %6, i64 4
  %8 = load i1 (%"class.views::FocusSearch"*, %"class.views::View"*, %"class.views::View"*)*, i1 (%"class.views::FocusSearch"*, %"class.views::View"*, %"class.views::View"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.views::FocusSearch"* %0, %"class.views::View"* %4, %"class.views::View"* %1) #9
  br i1 %9, label %10, label %13

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.views::View", %"class.views::View"* %1, i64 0, i32 13
  %12 = load %"class.views::View"*, %"class.views::View"** %11, align 8
  br label %13

13:                                               ; preds = %2, %10
  %14 = phi %"class.views::View"* [ %12, %10 ], [ null, %2 ]
  ret %"class.views::View"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5views11FocusSearch8ContainsEPNS_4ViewEPKS1_(%"class.views::FocusSearch"* nocapture readnone, %"class.views::View"*, %"class.views::View"*) unnamed_addr #1 align 2 {
  %4 = tail call zeroext i1 @_ZNK5views4View8ContainsEPKS0_(%"class.views::View"* %1, %"class.views::View"* %2) #9
  ret i1 %4
}

declare zeroext i1 @_ZNK5views4View8ContainsEPKS0_(%"class.views::View"*, %"class.views::View"*) local_unnamed_addr #3

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #3

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #4

declare %"class.views::DialogDelegate"* @_ZNK2ui15PropertyHandler11GetPropertyIPN5views14DialogDelegateEEET_PKNS_13ClassPropertyIS5_EE(%"class.ui::PropertyHandler"*, %"struct.ui::ClassProperty"*) local_unnamed_addr #3

declare %"class.views::FocusTraversable"* @_ZN5views6Widget19GetFocusTraversableEv(%"class.views::Widget"*) local_unnamed_addr #3

declare %"class.views::View"* @_ZN5views4View20GetNextFocusableViewEv(%"class.views::View"*) local_unnamed_addr #3

declare %"class.views::View"* @_ZN5views4View24GetPreviousFocusableViewEv(%"class.views::View"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5views11FocusSearchD2Ev(%"class.views::FocusSearch"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5views11FocusSearchD0Ev(%"class.views::FocusSearch"*) unnamed_addr #1 comdat align 2 {
  %2 = bitcast %"class.views::FocusSearch"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #1 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #1 comdat {
  %7 = alloca %"class.std::__1::basic_string.177", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string.177"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.std::__1::basic_string.177", %"class.std::__1::basic_string.177"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string.177"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string.177", %"class.std::__1::basic_string.177"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string.177", %"class.std::__1::basic_string.177"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #10
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string.177"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string.177"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #9
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.views::View"** @_ZNSt3__16vectorIPN5views4ViewENS_9allocatorIS3_EEE7emplaceIJRKS3_EEENS_11__wrap_iterIPS3_EENSA_IPS8_EEDpOT_(%"class.std::__1::vector.49"*, %"class.views::View"**, %"class.views::View"** dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %4 = ptrtoint %"class.views::View"** %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.views::View"**, %"class.views::View"*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"class.views::View"**, %"class.views::View"*** %9, align 8
  %11 = icmp ult %"class.views::View"** %8, %10
  %12 = ptrtoint %"class.views::View"** %8 to i64
  %13 = ptrtoint %"class.views::View"** %10 to i64
  br i1 %11, label %14, label %163

14:                                               ; preds = %3
  %15 = icmp eq %"class.views::View"** %8, %1
  %16 = bitcast %"class.views::View"** %2 to i64*
  %17 = load i64, i64* %16, align 8
  br i1 %15, label %18, label %23

18:                                               ; preds = %14
  %19 = bitcast %"class.views::View"** %1 to i64*
  store i64 %17, i64* %19, align 8
  %20 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %1, i64 1
  %21 = ptrtoint %"class.views::View"** %20 to i64
  %22 = bitcast %"class.views::View"*** %7 to i64*
  store i64 %21, i64* %22, align 8
  br label %319

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %1, i64 1
  %25 = ptrtoint %"class.views::View"** %24 to i64
  %26 = sub i64 %12, %25
  %27 = ashr exact i64 %26, 3
  %28 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %1, i64 %27
  %29 = bitcast %"class.views::View"*** %7 to i64*
  %30 = icmp ult %"class.views::View"** %28, %8
  br i1 %30, label %31, label %144

31:                                               ; preds = %23
  %32 = sub nsw i64 0, %27
  %33 = getelementptr %"class.views::View"*, %"class.views::View"** %8, i64 %32
  %34 = bitcast %"class.views::View"** %33 to i8*
  %35 = xor i64 %4, -1
  %36 = getelementptr i8, i8* %34, i64 %35
  %37 = ptrtoint i8* %36 to i64
  %38 = lshr i64 %37, 3
  %39 = add nuw nsw i64 %38, 1
  %40 = icmp ult i64 %39, 4
  br i1 %40, label %41, label %44

41:                                               ; preds = %139, %44, %31
  %42 = phi %"class.views::View"** [ %8, %44 ], [ %8, %31 ], [ %62, %139 ]
  %43 = phi %"class.views::View"** [ %28, %44 ], [ %28, %31 ], [ %63, %139 ]
  br label %152

44:                                               ; preds = %31
  %45 = sub nsw i64 0, %27
  %46 = getelementptr %"class.views::View"*, %"class.views::View"** %8, i64 %45
  %47 = bitcast %"class.views::View"** %46 to i8*
  %48 = xor i64 %4, -1
  %49 = getelementptr i8, i8* %47, i64 %48
  %50 = ptrtoint i8* %49 to i64
  %51 = lshr i64 %50, 3
  %52 = add nuw nsw i64 %51, 1
  %53 = getelementptr %"class.views::View"*, %"class.views::View"** %8, i64 %52
  %54 = add nsw i64 %27, %51
  %55 = add nsw i64 %54, 1
  %56 = getelementptr %"class.views::View"*, %"class.views::View"** %1, i64 %55
  %57 = icmp ult %"class.views::View"** %8, %56
  %58 = icmp ult %"class.views::View"** %28, %53
  %59 = and i1 %57, %58
  br i1 %59, label %41, label %60

60:                                               ; preds = %44
  %61 = and i64 %39, 4611686018427387900
  %62 = getelementptr %"class.views::View"*, %"class.views::View"** %8, i64 %61
  %63 = getelementptr %"class.views::View"*, %"class.views::View"** %28, i64 %61
  %64 = add nsw i64 %61, -4
  %65 = lshr exact i64 %64, 2
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 3
  %68 = icmp ult i64 %64, 12
  br i1 %68, label %120, label %69

69:                                               ; preds = %60
  %70 = sub nsw i64 %66, %67
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i64 [ 0, %69 ], [ %117, %71 ]
  %73 = phi i64 [ %70, %69 ], [ %118, %71 ]
  %74 = getelementptr %"class.views::View"*, %"class.views::View"** %8, i64 %72
  %75 = getelementptr %"class.views::View"*, %"class.views::View"** %28, i64 %72
  %76 = bitcast %"class.views::View"** %75 to <2 x i64>*
  %77 = load <2 x i64>, <2 x i64>* %76, align 8, !alias.scope !3
  %78 = getelementptr %"class.views::View"*, %"class.views::View"** %75, i64 2
  %79 = bitcast %"class.views::View"** %78 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 8, !alias.scope !3
  %81 = bitcast %"class.views::View"** %74 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %81, align 8, !alias.scope !6, !noalias !3
  %82 = getelementptr %"class.views::View"*, %"class.views::View"** %74, i64 2
  %83 = bitcast %"class.views::View"** %82 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %83, align 8, !alias.scope !6, !noalias !3
  %84 = or i64 %72, 4
  %85 = getelementptr %"class.views::View"*, %"class.views::View"** %8, i64 %84
  %86 = getelementptr %"class.views::View"*, %"class.views::View"** %28, i64 %84
  %87 = bitcast %"class.views::View"** %86 to <2 x i64>*
  %88 = load <2 x i64>, <2 x i64>* %87, align 8, !alias.scope !3
  %89 = getelementptr %"class.views::View"*, %"class.views::View"** %86, i64 2
  %90 = bitcast %"class.views::View"** %89 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 8, !alias.scope !3
  %92 = bitcast %"class.views::View"** %85 to <2 x i64>*
  store <2 x i64> %88, <2 x i64>* %92, align 8, !alias.scope !6, !noalias !3
  %93 = getelementptr %"class.views::View"*, %"class.views::View"** %85, i64 2
  %94 = bitcast %"class.views::View"** %93 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %94, align 8, !alias.scope !6, !noalias !3
  %95 = or i64 %72, 8
  %96 = getelementptr %"class.views::View"*, %"class.views::View"** %8, i64 %95
  %97 = getelementptr %"class.views::View"*, %"class.views::View"** %28, i64 %95
  %98 = bitcast %"class.views::View"** %97 to <2 x i64>*
  %99 = load <2 x i64>, <2 x i64>* %98, align 8, !alias.scope !3
  %100 = getelementptr %"class.views::View"*, %"class.views::View"** %97, i64 2
  %101 = bitcast %"class.views::View"** %100 to <2 x i64>*
  %102 = load <2 x i64>, <2 x i64>* %101, align 8, !alias.scope !3
  %103 = bitcast %"class.views::View"** %96 to <2 x i64>*
  store <2 x i64> %99, <2 x i64>* %103, align 8, !alias.scope !6, !noalias !3
  %104 = getelementptr %"class.views::View"*, %"class.views::View"** %96, i64 2
  %105 = bitcast %"class.views::View"** %104 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %105, align 8, !alias.scope !6, !noalias !3
  %106 = or i64 %72, 12
  %107 = getelementptr %"class.views::View"*, %"class.views::View"** %8, i64 %106
  %108 = getelementptr %"class.views::View"*, %"class.views::View"** %28, i64 %106
  %109 = bitcast %"class.views::View"** %108 to <2 x i64>*
  %110 = load <2 x i64>, <2 x i64>* %109, align 8, !alias.scope !3
  %111 = getelementptr %"class.views::View"*, %"class.views::View"** %108, i64 2
  %112 = bitcast %"class.views::View"** %111 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 8, !alias.scope !3
  %114 = bitcast %"class.views::View"** %107 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %114, align 8, !alias.scope !6, !noalias !3
  %115 = getelementptr %"class.views::View"*, %"class.views::View"** %107, i64 2
  %116 = bitcast %"class.views::View"** %115 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %116, align 8, !alias.scope !6, !noalias !3
  %117 = add i64 %72, 16
  %118 = add i64 %73, -4
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %71, !llvm.loop !8

120:                                              ; preds = %71, %60
  %121 = phi i64 [ 0, %60 ], [ %117, %71 ]
  %122 = icmp eq i64 %67, 0
  br i1 %122, label %139, label %123

123:                                              ; preds = %120, %123
  %124 = phi i64 [ %136, %123 ], [ %121, %120 ]
  %125 = phi i64 [ %137, %123 ], [ %67, %120 ]
  %126 = getelementptr %"class.views::View"*, %"class.views::View"** %8, i64 %124
  %127 = getelementptr %"class.views::View"*, %"class.views::View"** %28, i64 %124
  %128 = bitcast %"class.views::View"** %127 to <2 x i64>*
  %129 = load <2 x i64>, <2 x i64>* %128, align 8, !alias.scope !3
  %130 = getelementptr %"class.views::View"*, %"class.views::View"** %127, i64 2
  %131 = bitcast %"class.views::View"** %130 to <2 x i64>*
  %132 = load <2 x i64>, <2 x i64>* %131, align 8, !alias.scope !3
  %133 = bitcast %"class.views::View"** %126 to <2 x i64>*
  store <2 x i64> %129, <2 x i64>* %133, align 8, !alias.scope !6, !noalias !3
  %134 = getelementptr %"class.views::View"*, %"class.views::View"** %126, i64 2
  %135 = bitcast %"class.views::View"** %134 to <2 x i64>*
  store <2 x i64> %132, <2 x i64>* %135, align 8, !alias.scope !6, !noalias !3
  %136 = add i64 %124, 4
  %137 = add i64 %125, -1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %123, !llvm.loop !10

139:                                              ; preds = %123, %120
  %140 = icmp eq i64 %39, %61
  br i1 %140, label %141, label %41

141:                                              ; preds = %152, %139
  %142 = phi %"class.views::View"** [ %62, %139 ], [ %159, %152 ]
  %143 = ptrtoint %"class.views::View"** %142 to i64
  br label %144

144:                                              ; preds = %141, %23
  %145 = phi i64 [ %143, %141 ], [ %12, %23 ]
  store i64 %145, i64* %29, align 8
  %146 = icmp eq i64 %26, 0
  br i1 %146, label %161, label %147

147:                                              ; preds = %144
  %148 = sub nsw i64 0, %27
  %149 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %8, i64 %148
  %150 = bitcast %"class.views::View"** %149 to i8*
  %151 = bitcast %"class.views::View"** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %150, i8* align 8 %151, i64 %26, i1 false) #9
  br label %161

152:                                              ; preds = %41, %152
  %153 = phi %"class.views::View"** [ %159, %152 ], [ %42, %41 ]
  %154 = phi %"class.views::View"** [ %158, %152 ], [ %43, %41 ]
  %155 = bitcast %"class.views::View"** %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast %"class.views::View"** %153 to i64*
  store i64 %156, i64* %157, align 8
  %158 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %154, i64 1
  %159 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %153, i64 1
  %160 = icmp ult %"class.views::View"** %158, %8
  br i1 %160, label %152, label %141, !llvm.loop !12

161:                                              ; preds = %144, %147
  %162 = bitcast %"class.views::View"** %1 to i64*
  store i64 %17, i64* %162, align 8
  br label %319

163:                                              ; preds = %3
  %164 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %0, i64 0, i32 0, i32 2
  %165 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %165) #9
  %166 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 0
  %167 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 1
  %168 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 2
  %169 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 0, i32 0
  %170 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 1, i32 0
  %171 = bitcast %"class.views::View"*** %7 to i64*
  %172 = bitcast %"class.std::__1::vector.49"* %0 to i64*
  %173 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %173, i8 -86, i64 40, i1 false)
  %174 = load i64, i64* %172, align 8
  %175 = sub i64 %12, %174
  %176 = ashr exact i64 %175, 3
  %177 = add nsw i64 %176, 1
  %178 = icmp ugt i64 %177, 2305843009213693951
  br i1 %178, label %179, label %181

179:                                              ; preds = %163
  %180 = bitcast %"class.std::__1::vector.49"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %180) #11
  unreachable

181:                                              ; preds = %163
  %182 = bitcast %"class.views::View"*** %9 to i64*
  %183 = sub i64 %13, %174
  %184 = ashr exact i64 %183, 3
  %185 = icmp ult i64 %184, 1152921504606846975
  br i1 %185, label %190, label %186

186:                                              ; preds = %181
  %187 = sub i64 %4, %174
  %188 = ashr exact i64 %187, 3
  store %"class.views::View"** null, %"class.views::View"*** %169, align 8
  %189 = bitcast %"class.std::__1::allocator.54"** %170 to %"class.std::__1::__compressed_pair.51"**
  store %"class.std::__1::__compressed_pair.51"* %164, %"class.std::__1::__compressed_pair.51"** %189, align 8
  br label %201

190:                                              ; preds = %181
  %191 = ashr exact i64 %183, 2
  %192 = icmp ult i64 %191, %177
  %193 = select i1 %192, i64 %177, i64 %191
  %194 = sub i64 %4, %174
  %195 = ashr exact i64 %194, 3
  store %"class.views::View"** null, %"class.views::View"*** %169, align 8
  %196 = bitcast %"class.std::__1::allocator.54"** %170 to %"class.std::__1::__compressed_pair.51"**
  store %"class.std::__1::__compressed_pair.51"* %164, %"class.std::__1::__compressed_pair.51"** %196, align 8
  %197 = icmp eq i64 %193, 0
  br i1 %197, label %207, label %198

198:                                              ; preds = %190
  %199 = icmp ugt i64 %193, 2305843009213693951
  br i1 %199, label %200, label %201

200:                                              ; preds = %198
  tail call void @abort() #11
  unreachable

201:                                              ; preds = %186, %198
  %202 = phi i64 [ 2305843009213693951, %186 ], [ %193, %198 ]
  %203 = phi i64 [ %188, %186 ], [ %195, %198 ]
  %204 = shl i64 %202, 3
  %205 = tail call i8* @_Znwm(i64 %204) #10
  %206 = bitcast i8* %205 to %"class.views::View"**
  br label %207

207:                                              ; preds = %190, %201
  %208 = phi i64 [ %203, %201 ], [ %195, %190 ]
  %209 = phi i64 [ %202, %201 ], [ 0, %190 ]
  %210 = phi %"class.views::View"** [ %206, %201 ], [ null, %190 ]
  store %"class.views::View"** %210, %"class.views::View"*** %166, align 8
  %211 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %210, i64 %208
  store %"class.views::View"** %211, %"class.views::View"*** %168, align 8
  store %"class.views::View"** %211, %"class.views::View"*** %167, align 8
  %212 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %210, i64 %209
  store %"class.views::View"** %212, %"class.views::View"*** %169, align 8
  call void @_ZNSt3__114__split_bufferIPN5views4ViewERNS_9allocatorIS3_EEE12emplace_backIJRKS3_EEEvDpOT_(%"struct.std::__1::__split_buffer"* nonnull %5, %"class.views::View"** dereferenceable(8) %2)
  %213 = load %"class.views::View"**, %"class.views::View"*** %167, align 8
  %214 = load %"class.views::View"**, %"class.views::View"*** %6, align 8
  %215 = ptrtoint %"class.views::View"** %214 to i64
  %216 = sub i64 %4, %215
  %217 = ashr exact i64 %216, 3
  %218 = sub nsw i64 0, %217
  %219 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %213, i64 %218
  store %"class.views::View"** %219, %"class.views::View"*** %167, align 8
  %220 = icmp sgt i64 %216, 0
  br i1 %220, label %221, label %224

221:                                              ; preds = %207
  %222 = bitcast %"class.views::View"** %219 to i8*
  %223 = bitcast %"class.views::View"** %214 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %222, i8* align 8 %223, i64 %216, i1 false) #9
  br label %224

224:                                              ; preds = %221, %207
  %225 = load %"class.views::View"**, %"class.views::View"*** %7, align 8
  %226 = icmp eq %"class.views::View"** %225, %1
  br i1 %226, label %227, label %231

227:                                              ; preds = %224
  %228 = ptrtoint %"class.views::View"** %225 to i64
  %229 = bitcast %"class.views::View"*** %168 to i64*
  %230 = load i64, i64* %229, align 8
  br label %293

231:                                              ; preds = %224
  %232 = bitcast %"class.views::View"*** %168 to i64**
  %233 = load i64*, i64** %232, align 8
  %234 = getelementptr %"class.views::View"*, %"class.views::View"** %225, i64 -1
  %235 = ptrtoint %"class.views::View"** %234 to i64
  %236 = sub i64 %235, %4
  %237 = lshr i64 %236, 3
  %238 = add nuw nsw i64 %237, 1
  %239 = and i64 %238, 3
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %255, label %241

241:                                              ; preds = %231, %241
  %242 = phi i64* [ %250, %241 ], [ %233, %231 ]
  %243 = phi %"class.views::View"** [ %247, %241 ], [ %1, %231 ]
  %244 = phi i64 [ %251, %241 ], [ %239, %231 ]
  %245 = bitcast %"class.views::View"** %243 to i64*
  %246 = load i64, i64* %245, align 8
  store i64 %246, i64* %242, align 8
  %247 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %243, i64 1
  %248 = load %"class.views::View"**, %"class.views::View"*** %168, align 8
  %249 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %248, i64 1
  store %"class.views::View"** %249, %"class.views::View"*** %168, align 8
  %250 = bitcast %"class.views::View"** %249 to i64*
  %251 = add i64 %244, -1
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %253, label %241, !llvm.loop !13

253:                                              ; preds = %241
  %254 = bitcast %"class.views::View"** %249 to i64*
  br label %255

255:                                              ; preds = %231, %253
  %256 = phi %"class.views::View"** [ undef, %231 ], [ %249, %253 ]
  %257 = phi i64* [ %233, %231 ], [ %254, %253 ]
  %258 = phi %"class.views::View"** [ %1, %231 ], [ %247, %253 ]
  %259 = icmp ult i64 %236, 24
  br i1 %259, label %288, label %260

260:                                              ; preds = %255, %260
  %261 = phi i64* [ %287, %260 ], [ %257, %255 ]
  %262 = phi %"class.views::View"** [ %283, %260 ], [ %258, %255 ]
  %263 = bitcast %"class.views::View"** %262 to i64*
  %264 = load i64, i64* %263, align 8
  store i64 %264, i64* %261, align 8
  %265 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %262, i64 1
  %266 = load %"class.views::View"**, %"class.views::View"*** %168, align 8
  %267 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %266, i64 1
  store %"class.views::View"** %267, %"class.views::View"*** %168, align 8
  %268 = bitcast %"class.views::View"** %267 to i64*
  %269 = bitcast %"class.views::View"** %265 to i64*
  %270 = load i64, i64* %269, align 8
  store i64 %270, i64* %268, align 8
  %271 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %262, i64 2
  %272 = load %"class.views::View"**, %"class.views::View"*** %168, align 8
  %273 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %272, i64 1
  store %"class.views::View"** %273, %"class.views::View"*** %168, align 8
  %274 = bitcast %"class.views::View"** %273 to i64*
  %275 = bitcast %"class.views::View"** %271 to i64*
  %276 = load i64, i64* %275, align 8
  store i64 %276, i64* %274, align 8
  %277 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %262, i64 3
  %278 = load %"class.views::View"**, %"class.views::View"*** %168, align 8
  %279 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %278, i64 1
  store %"class.views::View"** %279, %"class.views::View"*** %168, align 8
  %280 = bitcast %"class.views::View"** %279 to i64*
  %281 = bitcast %"class.views::View"** %277 to i64*
  %282 = load i64, i64* %281, align 8
  store i64 %282, i64* %280, align 8
  %283 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %262, i64 4
  %284 = load %"class.views::View"**, %"class.views::View"*** %168, align 8
  %285 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %284, i64 1
  store %"class.views::View"** %285, %"class.views::View"*** %168, align 8
  %286 = icmp eq %"class.views::View"** %283, %225
  %287 = bitcast %"class.views::View"** %285 to i64*
  br i1 %286, label %288, label %260

288:                                              ; preds = %260, %255
  %289 = phi %"class.views::View"** [ %256, %255 ], [ %285, %260 ]
  %290 = ptrtoint %"class.views::View"** %289 to i64
  %291 = load i64, i64* %171, align 8
  %292 = bitcast %"class.views::View"*** %168 to i64*
  br label %293

293:                                              ; preds = %227, %288
  %294 = phi i64* [ %229, %227 ], [ %292, %288 ]
  %295 = phi i64 [ %230, %227 ], [ %290, %288 ]
  %296 = phi i64 [ %228, %227 ], [ %291, %288 ]
  %297 = load i64, i64* %172, align 8
  %298 = bitcast %"class.views::View"*** %167 to i64*
  %299 = load i64, i64* %298, align 8
  store i64 %299, i64* %172, align 8
  store i64 %297, i64* %298, align 8
  store i64 %295, i64* %171, align 8
  store i64 %296, i64* %294, align 8
  %300 = load i64, i64* %182, align 8
  %301 = bitcast %"class.views::View"*** %169 to i64*
  %302 = load i64, i64* %301, align 8
  store i64 %302, i64* %182, align 8
  store i64 %300, i64* %301, align 8
  %303 = bitcast %"struct.std::__1::__split_buffer"* %5 to i64*
  store i64 %297, i64* %303, align 8
  %304 = inttoptr i64 %297 to %"class.views::View"**
  %305 = inttoptr i64 %296 to %"class.views::View"**
  %306 = icmp eq %"class.views::View"** %305, %304
  br i1 %306, label %314, label %307

307:                                              ; preds = %293
  %308 = getelementptr %"class.views::View"*, %"class.views::View"** %305, i64 -1
  %309 = ptrtoint %"class.views::View"** %308 to i64
  %310 = sub i64 %309, %297
  %311 = lshr i64 %310, 3
  %312 = xor i64 %311, -1
  %313 = getelementptr %"class.views::View"*, %"class.views::View"** %305, i64 %312
  store %"class.views::View"** %313, %"class.views::View"*** %168, align 8
  br label %314

314:                                              ; preds = %307, %293
  %315 = icmp eq i64 %297, 0
  br i1 %315, label %318, label %316

316:                                              ; preds = %314
  %317 = inttoptr i64 %297 to i8*
  call void @_ZdlPv(i8* %317) #10
  br label %318

318:                                              ; preds = %314, %316
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %165) #9
  br label %319

319:                                              ; preds = %18, %161, %318
  %320 = phi %"class.views::View"** [ %1, %18 ], [ %1, %161 ], [ %213, %318 ]
  ret %"class.views::View"** %320
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN5views4ViewERNS_9allocatorIS3_EEE12emplace_backIJRKS3_EEEvDpOT_(%"struct.std::__1::__split_buffer"*, %"class.views::View"** dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.views::View"**, %"class.views::View"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.views::View"**, %"class.views::View"*** %5, align 8
  %7 = icmp eq %"class.views::View"** %4, %6
  %8 = ptrtoint %"class.views::View"** %6 to i64
  %9 = bitcast %"class.views::View"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"class.views::View"**, %"class.views::View"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"class.views::View"**, %"class.views::View"*** %13, align 8
  %15 = icmp ugt %"class.views::View"** %12, %14
  %16 = ptrtoint %"class.views::View"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.views::View"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %12, i64 %22
  %24 = ptrtoint %"class.views::View"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.views::View"** %23 to i8*
  %30 = bitcast %"class.views::View"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #9
  %31 = load %"class.views::View"**, %"class.views::View"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.views::View"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %23, i64 %26
  store %"class.views::View"** %34, %"class.views::View"*** %3, align 8
  %35 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %33, i64 %22
  store %"class.views::View"** %35, %"class.views::View"*** %11, align 8
  %36 = bitcast %"class.views::View"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"class.views::View"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #11
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #10
  %50 = bitcast i8* %49 to %"class.views::View"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %50, i64 %47
  %53 = ptrtoint %"class.views::View"** %52 to i64
  %54 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %50, i64 %43
  %55 = ptrtoint %"class.views::View"** %54 to i64
  %56 = ptrtoint %"class.views::View"** %12 to i64
  %57 = ptrtoint %"class.views::View"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"class.views::View"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"class.views::View"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"class.views::View"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %69, i64 1
  %77 = ptrtoint %"class.views::View"** %76 to i64
  %78 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !14

81:                                               ; preds = %68
  %82 = ptrtoint %"class.views::View"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"class.views::View"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"class.views::View"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"class.views::View"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"class.views::View"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"class.views::View"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %89, i64 1
  %96 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %91, i64 1
  %97 = bitcast %"class.views::View"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.views::View"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %89, i64 2
  %101 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %91, i64 2
  %102 = bitcast %"class.views::View"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.views::View"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %89, i64 3
  %106 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %91, i64 3
  %107 = bitcast %"class.views::View"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.views::View"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %89, i64 4
  %111 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %91, i64 4
  %112 = bitcast %"class.views::View"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.views::View"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %89, i64 5
  %116 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %91, i64 5
  %117 = bitcast %"class.views::View"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.views::View"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %89, i64 6
  %121 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %91, i64 6
  %122 = bitcast %"class.views::View"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.views::View"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %89, i64 7
  %126 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %91, i64 7
  %127 = bitcast %"class.views::View"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.views::View"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %89, i64 8
  %131 = ptrtoint %"class.views::View"** %130 to i64
  %132 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %91, i64 8
  %133 = icmp eq %"class.views::View"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"class.views::View"** %60 to i64
  %136 = load %"class.views::View"**, %"class.views::View"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"class.views::View"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"class.views::View"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"class.views::View"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"class.views::View"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"class.views::View"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #10
  %146 = bitcast %"class.views::View"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"class.views::View"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"class.views::View"**, %"class.views::View"*** %3, align 8
  %153 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %152, i64 1
  store %"class.views::View"** %153, %"class.views::View"*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !9}
!13 = distinct !{!13, !11}
!14 = distinct !{!14, !11}
