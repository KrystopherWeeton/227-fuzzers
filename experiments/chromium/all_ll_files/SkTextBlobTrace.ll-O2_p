; ModuleID = '../../third_party/skia/src/core/SkTextBlobTrace.cpp'
source_filename = "../../third_party/skia/src/core/SkTextBlobTrace.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.SkTextBlobTrace::Record" = type { i32, [4 x i8], %class.SkPaint, %struct.SkPoint, %class.sk_sp.5 }
%class.SkPaint = type <{ %class.sk_sp, %class.sk_sp.1, %class.sk_sp.2, %class.sk_sp.3, %class.sk_sp.4, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.1 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.2 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.3 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.4 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%struct.SkPoint = type { float, float }
%class.sk_sp.5 = type { %class.SkTextBlob* }
%class.SkTextBlob = type { %class.SkNVRefCnt, %struct.SkRect, i32, %"struct.std::__1::atomic.6" }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.SkRect = type { float, float, float, float }
%"struct.std::__1::atomic.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl.9" }
%"struct.std::__1::__cxx_atomic_impl.9" = type { %"struct.std::__1::__cxx_atomic_base_impl.10" }
%"struct.std::__1::__cxx_atomic_base_impl.10" = type { i32 }
%"class.SkTextBlobTrace::Capture" = type { i64, %class.sk_sp.33, %class.SkBinaryWriteBuffer }
%class.sk_sp.33 = type { %class.SkRefCntSet* }
%class.SkRefCntSet = type { %class.SkTPtrSet }
%class.SkTPtrSet = type { %class.SkPtrSet }
%class.SkPtrSet = type { %class.SkRefCnt.base, %class.SkTDArray }
%class.SkTDArray = type { %"struct.SkPtrSet::Pair"*, i32, i32 }
%"struct.SkPtrSet::Pair" = type { i8*, i32 }
%class.SkBinaryWriteBuffer = type { %class.SkWriteBuffer, %class.sk_sp.40, %class.sk_sp.33, %class.SkWriter32, %class.SkTHashMap.46 }
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp.25*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.25*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.25*, %class.SkTypeface*, i8*)*, i8* }
%class.sk_sp.25 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.26, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.26 = type { %"struct.std::__1::atomic" }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.34", [7 x i8] }>
%"struct.std::__1::atomic.34" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl.36" }
%"struct.std::__1::__cxx_atomic_impl.36" = type { %"struct.std::__1::__cxx_atomic_base_impl.37" }
%"struct.std::__1::__cxx_atomic_base_impl.37" = type { i8 }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.38, i32, i32 }
%class.sk_sp.38 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.39, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.39 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.15" }
%"struct.std::__1::atomic.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl.18" }
%"struct.std::__1::__cxx_atomic_impl.18" = type { %"struct.std::__1::__cxx_atomic_base_impl.19" }
%"struct.std::__1::__cxx_atomic_base_impl.19" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%class.sk_sp.40 = type { %class.SkFactorySet* }
%class.SkFactorySet = type { %class.SkTPtrSet.41 }
%class.SkTPtrSet.41 = type { %class.SkPtrSet }
%class.SkWriter32 = type { i8*, i64, i64, i8*, %class.SkAutoTMalloc }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.42" }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { i8* }
%class.SkTHashMap.46 = type { %class.SkTHashTable.47 }
%class.SkTHashTable.47 = type { i32, i32, %class.SkAutoTArray.48 }
%class.SkAutoTArray.48 = type { %"class.std::__1::unique_ptr.49" }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.SkTextBlobTrace::Record"*, %"struct.SkTextBlobTrace::Record"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTextBlobTrace::Record"* }
%class.SkStream = type { i32 (...)** }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %class.sk_sp.14*, %class.sk_sp.14*, %"class.std::__1::__compressed_pair.20" }
%class.sk_sp.14 = type { %class.SkTypeface* }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %class.sk_sp.14* }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap, i32, [4 x i8], %class.sk_sp.14*, i32, [4 x i8], void (%class.sk_sp.30*, %class.SkReadBuffer*)**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, void (%class.sk_sp.30*, %class.SkReadBuffer*)* }
%class.sk_sp.30 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%struct.SkDeserialProcs = type { {}*, i8*, {}*, i8*, void (%class.sk_sp.14*, i8*, i64, i8*)*, i8* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkFont = type <{ %class.sk_sp.14, float, float, float, i8, i8, i8, i8 }>
%class.SkTextBlobRunIterator = type { %"class.SkTextBlob::RunRecord"* }
%"class.SkTextBlob::RunRecord" = type { %class.SkFont, i32, %struct.SkPoint, i32 }
%class.SkGlyphRunList = type { %class.SkSpan, %class.SkTextBlob*, %struct.SkRect, %struct.SkPoint }
%class.SkSpan = type { %class.SkGlyphRun*, i64 }
%class.SkGlyphRun = type { %class.SkZip, %class.SkSpan.56, %class.SkSpan.57, %class.SkSpan.58, %class.SkFont }
%class.SkZip = type { %"class.std::__1::tuple", i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.55" }
%"class.std::__1::__tuple_leaf" = type { i16* }
%"class.std::__1::__tuple_leaf.55" = type { %struct.SkPoint* }
%class.SkSpan.56 = type { i8*, i64 }
%class.SkSpan.57 = type { i32*, i64 }
%class.SkSpan.58 = type { %struct.SkPoint*, i64 }
%class.SkWStream = type { i32 (...)** }
%class.SkTLazy = type { [16 x i8], %class.SkFILEWStream* }
%class.SkFILEWStream = type { %class.SkWStream, %struct._IO_FILE* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%class.SkString = type { %class.sk_sp.59 }
%class.sk_sp.59 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorI5sk_spI10SkTypefaceENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

$_ZNSt3__16vectorIN15SkTextBlobTrace6RecordENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

@__const._ZN15SkTextBlobTrace15CreateBlobTraceEP8SkStream.record = private unnamed_addr constant %"struct.SkTextBlobTrace::Record" { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.SkPaint <{ %class.sk_sp { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.1 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.2 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.3 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.4 { %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*) }, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %union.anon { %struct.anon { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %class.sk_sp.5 { %class.SkTextBlob* inttoptr (i64 -6148914691236517206 to %class.SkTextBlob*) } }, align 8
@.str = private unnamed_addr constant [52 x i8] c"../../third_party/skia/src/core/SkTextBlobTrace.cpp\00", align 1
@.str.1 = private unnamed_addr constant [24 x i8] c"Blob %d ( %g %g ) %d\0A  \00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"Run %d\0A    \00", align 1
@.str.3 = private unnamed_addr constant [31 x i8] c"Font %d %g %g %g %d %d %d\0A    \00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"%02X \00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.6 = private unnamed_addr constant [29 x i8] c"diff-canvas-%08x-%04zu.trace\00", align 1
@.str.7 = private unnamed_addr constant [21 x i8] c"Error opening '%s'.\0A\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"Saving trace to '%s'.\0A\00", align 1
@_ZTV11SkRefCntSet = external unnamed_addr constant { [7 x i8*] }, align 8

@_ZN15SkTextBlobTrace7CaptureC1Ev = hidden unnamed_addr alias void (%"class.SkTextBlobTrace::Capture"*), void (%"class.SkTextBlobTrace::Capture"*)* @_ZN15SkTextBlobTrace7CaptureC2Ev
@_ZN15SkTextBlobTrace7CaptureD1Ev = hidden unnamed_addr alias void (%"class.SkTextBlobTrace::Capture"*), void (%"class.SkTextBlobTrace::Capture"*)* @_ZN15SkTextBlobTrace7CaptureD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkTextBlobTrace15CreateBlobTraceEP8SkStream(%"class.std::__1::vector"* noalias sret, %class.SkStream*) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.std::__1::vector.12", align 8
  %5 = alloca %class.sk_sp.14, align 8
  %6 = alloca i32, align 4
  %7 = alloca %class.sk_sp.25, align 8
  %8 = alloca %class.SkReadBuffer, align 8
  %9 = alloca %"struct.SkTextBlobTrace::Record", align 8
  %10 = alloca %class.sk_sp.5, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #10
  %14 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #10
  store i32 -1431655766, i32* %3, align 4
  %15 = call zeroext i1 @_ZN8SkStream7readS32EPi(%class.SkStream* %1, i32* nonnull %3) #10
  br i1 %15, label %16, label %201

16:                                               ; preds = %2
  %17 = bitcast %"class.std::__1::vector.12"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %4, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %4, i64 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 24, i1 false) #10
  %21 = load i32, i32* %3, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %28, label %23

23:                                               ; preds = %16
  %24 = bitcast %class.sk_sp.14* %5 to i8*
  %25 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %5, i64 0, i32 0
  %26 = bitcast %class.sk_sp.14* %5 to i64*
  %27 = bitcast %class.sk_sp.14** %19 to i64*
  br label %31

28:                                               ; preds = %55, %16
  %29 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #10
  store i32 -1431655766, i32* %6, align 4
  %30 = call zeroext i1 @_ZN8SkStream7readS32EPi(%class.SkStream* %1, i32* nonnull %6) #10
  br i1 %30, label %59, label %170

31:                                               ; preds = %23, %55
  %32 = phi i32 [ 0, %23 ], [ %56, %55 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  call void @_ZN10SkTypeface15MakeDeserializeEP8SkStream(%class.sk_sp.14* nonnull sret %5, %class.SkStream* %1) #10
  %33 = load %class.sk_sp.14*, %class.sk_sp.14** %19, align 8
  %34 = load %class.sk_sp.14*, %class.sk_sp.14** %20, align 8
  %35 = icmp ult %class.sk_sp.14* %33, %34
  br i1 %35, label %36, label %41

36:                                               ; preds = %31
  %37 = load i64, i64* %26, align 8
  store %class.SkTypeface* null, %class.SkTypeface** %25, align 8
  %38 = bitcast %class.sk_sp.14* %33 to i64*
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %33, i64 1
  %40 = ptrtoint %class.sk_sp.14* %39 to i64
  store i64 %40, i64* %27, align 8
  br label %42

41:                                               ; preds = %31
  call void @_ZNSt3__16vectorI5sk_spI10SkTypefaceENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.12"* nonnull %4, %class.sk_sp.14* nonnull dereferenceable(8) %5) #10
  br label %42

42:                                               ; preds = %36, %41
  %43 = load %class.SkTypeface*, %class.SkTypeface** %25, align 8
  %44 = icmp eq %class.SkTypeface* %43, null
  br i1 %44, label %55, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %43, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw add i32* %46, i32 -1 acq_rel
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %55

49:                                               ; preds = %45
  %50 = bitcast %class.SkTypeface* %43 to %class.SkRefCntBase*
  %51 = bitcast %class.SkTypeface* %43 to void (%class.SkRefCntBase*)***
  %52 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %51, align 8
  %53 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %52, i64 2
  %54 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, align 8
  call void %54(%class.SkRefCntBase* nonnull %50) #10
  br label %55

55:                                               ; preds = %42, %45, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  %56 = add nuw i32 %32, 1
  %57 = load i32, i32* %3, align 4
  %58 = icmp ult i32 %56, %57
  br i1 %58, label %31, label %28

59:                                               ; preds = %28
  %60 = bitcast %class.sk_sp.25* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #10
  %61 = getelementptr inbounds %class.sk_sp.25, %class.sk_sp.25* %7, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %61, align 8
  %62 = load i32, i32* %6, align 4
  %63 = zext i32 %62 to i64
  call void @_ZN6SkData14MakeFromStreamEP8SkStreamm(%class.sk_sp.25* nonnull sret %7, %class.SkStream* %1, i64 %63) #10
  %64 = bitcast %class.SkReadBuffer* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %64) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 136, i1 false)
  %65 = load %class.SkData*, %class.SkData** %61, align 8
  %66 = getelementptr inbounds %class.SkData, %class.SkData* %65, i64 0, i32 3
  %67 = load i8*, i8** %66, align 8
  %68 = getelementptr inbounds %class.SkData, %class.SkData* %65, i64 0, i32 4
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %8, i64 0, i32 6
  store %class.sk_sp.14* null, %class.sk_sp.14** %70, align 8
  %71 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %8, i64 0, i32 7
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %8, i64 0, i32 9
  store void (%class.sk_sp.30*, %class.SkReadBuffer*)** null, void (%class.sk_sp.30*, %class.SkReadBuffer*)*** %72, align 8
  %73 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %8, i64 0, i32 10
  store i32 0, i32* %73, align 8
  %74 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %8, i64 0, i32 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 0, i64 44, i1 false) #10
  %75 = bitcast %struct.SkDeserialProcs* %74 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 49, i1 false) #10
  call void @_ZN12SkReadBuffer9setMemoryEPKvm(%class.SkReadBuffer* nonnull %8, i8* %67, i64 %69) #10
  %76 = bitcast %"class.std::__1::vector.12"* %4 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %class.sk_sp.14** %19 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = sub i64 %79, %77
  %81 = lshr exact i64 %80, 3
  %82 = trunc i64 %81 to i32
  %83 = bitcast %class.sk_sp.14** %70 to i64*
  store i64 %77, i64* %83, align 8
  store i32 %82, i32* %71, align 8
  %84 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %8, i64 0, i32 0
  %85 = load i8*, i8** %84, align 8
  %86 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %8, i64 0, i32 1
  %87 = load i8*, i8** %86, align 8
  %88 = icmp ult i8* %85, %87
  br i1 %88, label %89, label %154

89:                                               ; preds = %59
  %90 = bitcast %"struct.SkTextBlobTrace::Record"* %9 to i8*
  %91 = getelementptr inbounds %"struct.SkTextBlobTrace::Record", %"struct.SkTextBlobTrace::Record"* %9, i64 0, i32 2
  %92 = getelementptr inbounds %"struct.SkTextBlobTrace::Record", %"struct.SkTextBlobTrace::Record"* %9, i64 0, i32 4, i32 0
  %93 = getelementptr inbounds %"struct.SkTextBlobTrace::Record", %"struct.SkTextBlobTrace::Record"* %9, i64 0, i32 0
  %94 = getelementptr inbounds %"struct.SkTextBlobTrace::Record", %"struct.SkTextBlobTrace::Record"* %9, i64 0, i32 3
  %95 = bitcast %class.sk_sp.5* %10 to i8*
  %96 = getelementptr inbounds %"struct.SkTextBlobTrace::Record", %"struct.SkTextBlobTrace::Record"* %9, i64 0, i32 4
  %97 = getelementptr inbounds %class.sk_sp.5, %class.sk_sp.5* %10, i64 0, i32 0
  %98 = bitcast %class.sk_sp.5* %10 to i64*
  %99 = getelementptr inbounds %class.sk_sp.5, %class.sk_sp.5* %96, i64 0, i32 0
  %100 = bitcast %class.sk_sp.5* %96 to i64*
  %101 = bitcast %struct.SkPoint* %94 to i64*
  %102 = bitcast %"struct.SkTextBlobTrace::Record"** %11 to i64*
  br label %103

103:                                              ; preds = %89, %150
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %90) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %90, i8* align 8 bitcast (%"struct.SkTextBlobTrace::Record"* @__const._ZN15SkTextBlobTrace15CreateBlobTraceEP8SkStream.record to i8*), i64 96, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* %91) #10
  store %class.SkTextBlob* null, %class.SkTextBlob** %92, align 8
  %104 = call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* nonnull %8) #10
  store i32 %104, i32* %93, align 8
  %105 = call i32 @_ZN11SkPaintPriv9UnflattenEP7SkPaintR12SkReadBufferP6SkFont(%class.SkPaint* %91, %class.SkReadBuffer* nonnull dereferenceable(136) %8, %class.SkFont* null) #10
  call void @_ZN12SkReadBuffer9readPointEP7SkPoint(%class.SkReadBuffer* nonnull %8, %struct.SkPoint* %94) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #10
  call void @_ZN14SkTextBlobPriv14MakeFromBufferER12SkReadBuffer(%class.sk_sp.5* nonnull sret %10, %class.SkReadBuffer* nonnull dereferenceable(136) %8) #10
  %106 = load i64, i64* %98, align 8
  store %class.SkTextBlob* null, %class.SkTextBlob** %97, align 8
  %107 = load %class.SkTextBlob*, %class.SkTextBlob** %99, align 8
  store i64 %106, i64* %100, align 8
  %108 = icmp eq %class.SkTextBlob* %107, null
  br i1 %108, label %124, label %109

109:                                              ; preds = %103
  %110 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %107, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = atomicrmw add i32* %110, i32 -1 acq_rel
  %112 = icmp eq i32 %111, 1
  br i1 %112, label %113, label %115

113:                                              ; preds = %109
  call void @_ZN10SkTextBlobD1Ev(%class.SkTextBlob* nonnull %107) #10
  %114 = bitcast %class.SkTextBlob* %107 to i8*
  call void @_ZN10SkTextBlobdlEPv(i8* nonnull %114) #10
  br label %115

115:                                              ; preds = %109, %113
  %116 = load %class.SkTextBlob*, %class.SkTextBlob** %97, align 8
  %117 = icmp eq %class.SkTextBlob* %116, null
  br i1 %117, label %124, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %116, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = atomicrmw add i32* %119, i32 -1 acq_rel
  %121 = icmp eq i32 %120, 1
  br i1 %121, label %122, label %124

122:                                              ; preds = %118
  call void @_ZN10SkTextBlobD1Ev(%class.SkTextBlob* nonnull %116) #10
  %123 = bitcast %class.SkTextBlob* %116 to i8*
  call void @_ZN10SkTextBlobdlEPv(i8* nonnull %123) #10
  br label %124

124:                                              ; preds = %103, %115, %118, %122
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #10
  %125 = load %"struct.SkTextBlobTrace::Record"*, %"struct.SkTextBlobTrace::Record"** %11, align 8
  %126 = load %"struct.SkTextBlobTrace::Record"*, %"struct.SkTextBlobTrace::Record"** %12, align 8
  %127 = icmp ult %"struct.SkTextBlobTrace::Record"* %125, %126
  br i1 %127, label %128, label %140

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"struct.SkTextBlobTrace::Record", %"struct.SkTextBlobTrace::Record"* %125, i64 0, i32 0
  %130 = load i32, i32* %93, align 8
  store i32 %130, i32* %129, align 8
  %131 = getelementptr inbounds %"struct.SkTextBlobTrace::Record", %"struct.SkTextBlobTrace::Record"* %125, i64 0, i32 2
  call void @_ZN7SkPaintC1EOS_(%class.SkPaint* %131, %class.SkPaint* dereferenceable(72) %91) #10
  %132 = getelementptr inbounds %"struct.SkTextBlobTrace::Record", %"struct.SkTextBlobTrace::Record"* %125, i64 0, i32 3
  %133 = bitcast %struct.SkPoint* %132 to i64*
  %134 = load i64, i64* %101, align 8
  store i64 %134, i64* %133, align 8
  %135 = getelementptr inbounds %"struct.SkTextBlobTrace::Record", %"struct.SkTextBlobTrace::Record"* %125, i64 0, i32 4
  %136 = load i64, i64* %100, align 8
  store %class.SkTextBlob* null, %class.SkTextBlob** %99, align 8
  %137 = bitcast %class.sk_sp.5* %135 to i64*
  store i64 %136, i64* %137, align 8
  %138 = getelementptr inbounds %"struct.SkTextBlobTrace::Record", %"struct.SkTextBlobTrace::Record"* %125, i64 1
  %139 = ptrtoint %"struct.SkTextBlobTrace::Record"* %138 to i64
  store i64 %139, i64* %102, align 8
  br label %141

140:                                              ; preds = %124
  call void @_ZNSt3__16vectorIN15SkTextBlobTrace6RecordENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"* %0, %"struct.SkTextBlobTrace::Record"* nonnull dereferenceable(96) %9) #10
  br label %141

141:                                              ; preds = %128, %140
  %142 = load %class.SkTextBlob*, %class.SkTextBlob** %92, align 8
  %143 = icmp eq %class.SkTextBlob* %142, null
  br i1 %143, label %150, label %144

144:                                              ; preds = %141
  %145 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %142, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = atomicrmw add i32* %145, i32 -1 acq_rel
  %147 = icmp eq i32 %146, 1
  br i1 %147, label %148, label %150

148:                                              ; preds = %144
  call void @_ZN10SkTextBlobD1Ev(%class.SkTextBlob* nonnull %142) #10
  %149 = bitcast %class.SkTextBlob* %142 to i8*
  call void @_ZN10SkTextBlobdlEPv(i8* nonnull %149) #10
  br label %150

150:                                              ; preds = %141, %144, %148
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* %91) #10
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %90) #10
  %151 = load i8*, i8** %84, align 8
  %152 = load i8*, i8** %86, align 8
  %153 = icmp ult i8* %151, %152
  br i1 %153, label %103, label %154

154:                                              ; preds = %150, %59
  %155 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %8, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %156 = load %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"** %155, align 8
  store %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"** %155, align 8
  %157 = icmp eq %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* %156, null
  br i1 %157, label %160, label %158

158:                                              ; preds = %154
  %159 = bitcast %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* %156 to i8*
  call void @_ZdaPv(i8* %159) #11
  br label %160

160:                                              ; preds = %154, %158
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %64) #10
  %161 = load %class.SkData*, %class.SkData** %61, align 8
  %162 = icmp eq %class.SkData* %161, null
  br i1 %162, label %169, label %163

163:                                              ; preds = %160
  %164 = getelementptr inbounds %class.SkData, %class.SkData* %161, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = atomicrmw add i32* %164, i32 -1 acq_rel
  %166 = icmp eq i32 %165, 1
  br i1 %166, label %167, label %169

167:                                              ; preds = %163
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %161) #10
  %168 = bitcast %class.SkData* %161 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %168) #10
  br label %169

169:                                              ; preds = %160, %163, %167
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #10
  br label %170

170:                                              ; preds = %28, %169
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #10
  %171 = load %class.sk_sp.14*, %class.sk_sp.14** %18, align 8
  %172 = icmp eq %class.sk_sp.14* %171, null
  br i1 %172, label %200, label %173

173:                                              ; preds = %170
  %174 = bitcast %class.sk_sp.14* %171 to i8*
  %175 = load %class.sk_sp.14*, %class.sk_sp.14** %19, align 8
  %176 = icmp eq %class.sk_sp.14* %175, %171
  br i1 %176, label %198, label %177

177:                                              ; preds = %173, %193
  %178 = phi %class.sk_sp.14* [ %179, %193 ], [ %175, %173 ]
  %179 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %178, i64 -1
  %180 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %179, i64 0, i32 0
  %181 = load %class.SkTypeface*, %class.SkTypeface** %180, align 8
  %182 = icmp eq %class.SkTypeface* %181, null
  br i1 %182, label %193, label %183

183:                                              ; preds = %177
  %184 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %181, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = atomicrmw add i32* %184, i32 -1 acq_rel
  %186 = icmp eq i32 %185, 1
  br i1 %186, label %187, label %193

187:                                              ; preds = %183
  %188 = bitcast %class.SkTypeface* %181 to %class.SkRefCntBase*
  %189 = bitcast %class.SkTypeface* %181 to void (%class.SkRefCntBase*)***
  %190 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %189, align 8
  %191 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %190, i64 2
  %192 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %191, align 8
  call void %192(%class.SkRefCntBase* nonnull %188) #10
  br label %193

193:                                              ; preds = %187, %183, %177
  %194 = icmp eq %class.sk_sp.14* %179, %171
  br i1 %194, label %195, label %177

195:                                              ; preds = %193
  %196 = bitcast %"class.std::__1::vector.12"* %4 to i8**
  %197 = load i8*, i8** %196, align 8
  br label %198

198:                                              ; preds = %195, %173
  %199 = phi i8* [ %197, %195 ], [ %174, %173 ]
  store %class.sk_sp.14* %171, %class.sk_sp.14** %19, align 8
  call void @_ZdlPv(i8* %199) #11
  br label %200

200:                                              ; preds = %170, %198
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #10
  br label %201

201:                                              ; preds = %2, %200
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN10SkTypeface15MakeDeserializeEP8SkStream(%class.sk_sp.14* sret, %class.SkStream*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN6SkData14MakeFromStreamEP8SkStreamm(%class.sk_sp.25* sret, %class.SkStream*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer*) local_unnamed_addr #2

declare void @_ZN12SkReadBuffer9readPointEP7SkPoint(%class.SkReadBuffer*, %struct.SkPoint*) local_unnamed_addr #2

declare void @_ZN14SkTextBlobPriv14MakeFromBufferER12SkReadBuffer(%class.sk_sp.5* sret, %class.SkReadBuffer* dereferenceable(136)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkTextBlobTrace9DumpTraceERKNSt3__16vectorINS_6RecordENS0_9allocatorIS2_EEEE(%"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %2 = alloca %class.SkTextBlobRunIterator, align 8
  %3 = alloca %class.SkFont, align 8
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %5 = load %"struct.SkTextBlobTrace::Record"*, %"struct.SkTextBlobTrace::Record"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = load %"struct.SkTextBlobTrace::Record"*, %"struct.SkTextBlobTrace::Record"** %6, align 8
  %8 = icmp eq %"struct.SkTextBlobTrace::Record"* %5, %7
  br i1 %8, label %22, label %9

9:                                                ; preds = %1
  %10 = bitcast %class.SkTextBlobRunIterator* %2 to i8*
  %11 = getelementptr inbounds %class.SkTextBlobRunIterator, %class.SkTextBlobRunIterator* %2, i64 0, i32 0
  %12 = bitcast %class.SkFont* %3 to i8*
  %13 = getelementptr inbounds %class.SkFont, %class.SkFont* %3, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %class.SkFont, %class.SkFont* %3, i64 0, i32 1
  %15 = getelementptr inbounds %class.SkFont, %class.SkFont* %3, i64 0, i32 2
  %16 = getelementptr inbounds %class.SkFont, %class.SkFont* %3, i64 0, i32 3
  %17 = getelementptr inbounds %class.SkFont, %class.SkFont* %3, i64 0, i32 4
  %18 = getelementptr inbounds %class.SkFont, %class.SkFont* %3, i64 0, i32 5
  %19 = getelementptr inbounds %class.SkFont, %class.SkFont* %3, i64 0, i32 6
  %20 = bitcast float* %14 to i8*
  %21 = bitcast i8* %17 to i32*
  br label %23

22:                                               ; preds = %111, %1
  ret void

23:                                               ; preds = %9, %111
  %24 = phi %"struct.SkTextBlobTrace::Record"* [ %5, %9 ], [ %112, %111 ]
  %25 = getelementptr inbounds %"struct.SkTextBlobTrace::Record", %"struct.SkTextBlobTrace::Record"* %24, i64 0, i32 4, i32 0
  %26 = load %class.SkTextBlob*, %class.SkTextBlob** %25, align 8
  %27 = getelementptr inbounds %"struct.SkTextBlobTrace::Record", %"struct.SkTextBlobTrace::Record"* %24, i64 0, i32 2, i32 8, i32 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 192
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %39

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"struct.SkTextBlobTrace::Record", %"struct.SkTextBlobTrace::Record"* %24, i64 0, i32 2, i32 2, i32 0
  %33 = load %class.SkMaskFilter*, %class.SkMaskFilter** %32, align 8
  %34 = icmp eq %class.SkMaskFilter* %33, null
  br i1 %34, label %35, label %39

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"struct.SkTextBlobTrace::Record", %"struct.SkTextBlobTrace::Record"* %24, i64 0, i32 2, i32 0, i32 0
  %37 = load %class.SkPathEffect*, %class.SkPathEffect** %36, align 8
  %38 = icmp ne %class.SkPathEffect* %37, null
  br label %39

39:                                               ; preds = %31, %23, %35
  %40 = phi i1 [ true, %31 ], [ true, %23 ], [ %38, %35 ]
  %41 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %26, i64 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"struct.SkTextBlobTrace::Record", %"struct.SkTextBlobTrace::Record"* %24, i64 0, i32 3, i32 0
  %44 = load float, float* %43, align 4
  %45 = fpext float %44 to double
  %46 = getelementptr inbounds %"struct.SkTextBlobTrace::Record", %"struct.SkTextBlobTrace::Record"* %24, i64 0, i32 3, i32 1
  %47 = load float, float* %46, align 4
  %48 = fpext float %47 to double
  %49 = zext i1 %40 to i32
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 54, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0), i32 %42, double %45, double %48, i32 %49) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #10
  store %"class.SkTextBlob::RunRecord"* inttoptr (i64 -6148914691236517206 to %"class.SkTextBlob::RunRecord"*), %"class.SkTextBlob::RunRecord"** %11, align 8
  call void @_ZN21SkTextBlobRunIteratorC1EPK10SkTextBlob(%class.SkTextBlobRunIterator* nonnull %2, %class.SkTextBlob* %26) #10
  %50 = load %"class.SkTextBlob::RunRecord"*, %"class.SkTextBlob::RunRecord"** %11, align 8
  %51 = icmp eq %"class.SkTextBlob::RunRecord"* %50, null
  br i1 %51, label %111, label %52

52:                                               ; preds = %39, %101
  %53 = phi i32 [ %88, %101 ], [ 0, %39 ]
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 58, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32 %53) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #10
  store %class.SkTypeface* inttoptr (i64 -6148914691236517206 to %class.SkTypeface*), %class.SkTypeface** %13, align 8
  store float 0xFFFFFFFFE0000000, float* %14, align 8
  store float 0xFFFFFFFFE0000000, float* %15, align 4
  store float 0xFFFFFFFFE0000000, float* %16, align 8
  store i32 -1431655766, i32* %21, align 4
  %54 = load %"class.SkTextBlob::RunRecord"*, %"class.SkTextBlob::RunRecord"** %11, align 8
  %55 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %54, i64 0, i32 0, i32 0, i32 0
  %56 = load %class.SkTypeface*, %class.SkTypeface** %55, align 8
  %57 = icmp eq %class.SkTypeface* %56, null
  br i1 %57, label %61, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %56, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = atomicrmw add i32* %59, i32 1 monotonic
  br label %61

61:                                               ; preds = %52, %58
  store %class.SkTypeface* %56, %class.SkTypeface** %13, align 8
  %62 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %54, i64 0, i32 0, i32 1
  %63 = bitcast float* %62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %63, i64 15, i1 false) #10
  %64 = call %class.SkTypeface* @_ZNK6SkFont20getTypefaceOrDefaultEv(%class.SkFont* nonnull %3) #10
  %65 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %64, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = load float, float* %14, align 8
  %68 = fpext float %67 to double
  %69 = load float, float* %15, align 4
  %70 = fpext float %69 to double
  %71 = load float, float* %16, align 8
  %72 = fpext float %71 to double
  %73 = load i8, i8* %17, align 4
  %74 = zext i8 %73 to i32
  %75 = load i8, i8* %18, align 1
  %76 = zext i8 %75 to i32
  %77 = load i8, i8* %19, align 2
  %78 = zext i8 %77 to i32
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 67, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0), i32 %66, double %68, double %70, double %72, i32 %74, i32 %76, i32 %78) #10
  %79 = load %"class.SkTextBlob::RunRecord"*, %"class.SkTextBlob::RunRecord"** %11, align 8
  %80 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %79, i64 0, i32 1
  %81 = load i32, i32* %80, align 8
  %82 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %79, i64 1
  %83 = bitcast %"class.SkTextBlob::RunRecord"* %82 to i16*
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %87, label %85

85:                                               ; preds = %61
  %86 = zext i32 %81 to i64
  br label %104

87:                                               ; preds = %104, %61
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 73, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #10
  %88 = add nuw nsw i32 %53, 1
  call void @_ZN21SkTextBlobRunIterator4nextEv(%class.SkTextBlobRunIterator* nonnull %2) #10
  %89 = load %class.SkTypeface*, %class.SkTypeface** %13, align 8
  %90 = icmp eq %class.SkTypeface* %89, null
  br i1 %90, label %101, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %89, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = atomicrmw add i32* %92, i32 -1 acq_rel
  %94 = icmp eq i32 %93, 1
  br i1 %94, label %95, label %101

95:                                               ; preds = %91
  %96 = bitcast %class.SkTypeface* %89 to %class.SkRefCntBase*
  %97 = bitcast %class.SkTypeface* %89 to void (%class.SkRefCntBase*)***
  %98 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %97, align 8
  %99 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %98, i64 2
  %100 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %99, align 8
  call void %100(%class.SkRefCntBase* nonnull %96) #10
  br label %101

101:                                              ; preds = %87, %91, %95
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #10
  %102 = load %"class.SkTextBlob::RunRecord"*, %"class.SkTextBlob::RunRecord"** %11, align 8
  %103 = icmp eq %"class.SkTextBlob::RunRecord"* %102, null
  br i1 %103, label %111, label %52

104:                                              ; preds = %104, %85
  %105 = phi i64 [ 0, %85 ], [ %109, %104 ]
  %106 = getelementptr inbounds i16, i16* %83, i64 %105
  %107 = load i16, i16* %106, align 2
  %108 = zext i16 %107 to i32
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 71, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i32 %108) #10
  %109 = add nuw nsw i64 %105, 1
  %110 = icmp eq i64 %109, %86
  br i1 %110, label %87, label %104

111:                                              ; preds = %101, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #10
  %112 = getelementptr inbounds %"struct.SkTextBlobTrace::Record", %"struct.SkTextBlobTrace::Record"* %24, i64 1
  %113 = icmp eq %"struct.SkTextBlobTrace::Record"* %112, %7
  br i1 %113, label %22, label %23
}

declare void @_Z17SkDebugf_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #2

declare void @_ZN21SkTextBlobRunIteratorC1EPK10SkTextBlob(%class.SkTextBlobRunIterator*, %class.SkTextBlob*) unnamed_addr #2

declare %class.SkTypeface* @_ZNK6SkFont20getTypefaceOrDefaultEv(%class.SkFont*) local_unnamed_addr #2

declare void @_ZN21SkTextBlobRunIterator4nextEv(%class.SkTextBlobRunIterator*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkTextBlobTrace7CaptureC2Ev(%"class.SkTextBlobTrace::Capture"*) unnamed_addr #0 align 2 {
  %2 = alloca %class.sk_sp.33, align 8
  %3 = getelementptr inbounds %"class.SkTextBlobTrace::Capture", %"class.SkTextBlobTrace::Capture"* %0, i64 0, i32 0
  store i64 0, i64* %3, align 8
  %4 = tail call i8* @_Znwm(i64 32) #11
  %5 = getelementptr inbounds i8, i8* %4, i64 8
  %6 = bitcast i8* %5 to i32*
  store i32 1, i32* %6, align 4
  %7 = getelementptr inbounds i8, i8* %4, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #10
  %8 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV11SkRefCntSet, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.SkTextBlobTrace::Capture", %"class.SkTextBlobTrace::Capture"* %0, i64 0, i32 1, i32 0
  %10 = bitcast %class.SkRefCntSet** %9 to i8**
  store i8* %4, i8** %10, align 8
  %11 = getelementptr inbounds %"class.SkTextBlobTrace::Capture", %"class.SkTextBlobTrace::Capture"* %0, i64 0, i32 2
  tail call void @_ZN19SkBinaryWriteBufferC1Ev(%class.SkBinaryWriteBuffer* %11) #10
  %12 = getelementptr inbounds %class.sk_sp.33, %class.sk_sp.33* %2, i64 0, i32 0
  %13 = load %class.SkRefCntSet*, %class.SkRefCntSet** %9, align 8
  %14 = icmp eq %class.SkRefCntSet* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %class.SkRefCntSet, %class.SkRefCntSet* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 1 monotonic
  br label %18

18:                                               ; preds = %1, %15
  store %class.SkRefCntSet* %13, %class.SkRefCntSet** %12, align 8
  call void @_ZN19SkBinaryWriteBuffer19setTypefaceRecorderE5sk_spI11SkRefCntSetE(%class.SkBinaryWriteBuffer* %11, %class.sk_sp.33* nonnull %2) #10
  %19 = load %class.SkRefCntSet*, %class.SkRefCntSet** %12, align 8
  %20 = icmp eq %class.SkRefCntSet* %19, null
  br i1 %20, label %31, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %class.SkRefCntSet, %class.SkRefCntSet* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 -1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %31

25:                                               ; preds = %21
  %26 = bitcast %class.SkRefCntSet* %19 to %class.SkRefCntBase*
  %27 = bitcast %class.SkRefCntSet* %19 to void (%class.SkRefCntBase*)***
  %28 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %27, align 8
  %29 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, i64 2
  %30 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %29, align 8
  call void %30(%class.SkRefCntBase* nonnull %26) #10
  br label %31

31:                                               ; preds = %18, %21, %25
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN19SkBinaryWriteBufferC1Ev(%class.SkBinaryWriteBuffer*) unnamed_addr #2

declare void @_ZN19SkBinaryWriteBuffer19setTypefaceRecorderE5sk_spI11SkRefCntSetE(%class.SkBinaryWriteBuffer*, %class.sk_sp.33*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkTextBlobTrace7CaptureD2Ev(%"class.SkTextBlobTrace::Capture"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.SkTextBlobTrace::Capture", %"class.SkTextBlobTrace::Capture"* %0, i64 0, i32 2
  tail call void @_ZN19SkBinaryWriteBufferD1Ev(%class.SkBinaryWriteBuffer* %2) #10
  %3 = getelementptr inbounds %"class.SkTextBlobTrace::Capture", %"class.SkTextBlobTrace::Capture"* %0, i64 0, i32 1, i32 0
  %4 = load %class.SkRefCntSet*, %class.SkRefCntSet** %3, align 8
  %5 = icmp eq %class.SkRefCntSet* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkRefCntSet, %class.SkRefCntSet* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkRefCntSet* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkRefCntSet* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #10
  br label %16

16:                                               ; preds = %1, %6, %10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN19SkBinaryWriteBufferD1Ev(%class.SkBinaryWriteBuffer*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkTextBlobTrace7Capture7captureERK14SkGlyphRunListRK7SkPaint(%"class.SkTextBlobTrace::Capture"*, %class.SkGlyphRunList* nocapture readonly dereferenceable(48), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #5 align 2 {
  %4 = alloca <2 x float>, align 8
  %5 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %1, i64 0, i32 1
  %6 = load %class.SkTextBlob*, %class.SkTextBlob** %5, align 8
  %7 = icmp eq %class.SkTextBlob* %6, null
  br i1 %7, label %22, label %8

8:                                                ; preds = %3
  %9 = bitcast <2 x float>* %4 to %struct.SkPoint*
  %10 = getelementptr inbounds %"class.SkTextBlobTrace::Capture", %"class.SkTextBlobTrace::Capture"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %6, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  tail call void @_ZN19SkBinaryWriteBuffer9writeUIntEj(%class.SkBinaryWriteBuffer* %10, i32 %12) #10
  tail call void @_ZN19SkBinaryWriteBuffer10writePaintERK7SkPaint(%class.SkBinaryWriteBuffer* %10, %class.SkPaint* dereferenceable(72) %2) #10
  %13 = bitcast <2 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  %14 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %1, i64 0, i32 3
  %15 = bitcast %struct.SkPoint* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast <2 x float>* %4 to i64*
  store i64 %16, i64* %17, align 8
  call void @_ZN19SkBinaryWriteBuffer10writePointERK7SkPoint(%class.SkBinaryWriteBuffer* %10, %struct.SkPoint* nonnull dereferenceable(8) %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  %18 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %10, i64 0, i32 0
  call void @_ZN14SkTextBlobPriv7FlattenERK10SkTextBlobR13SkWriteBuffer(%class.SkTextBlob* nonnull dereferenceable(28) %6, %class.SkWriteBuffer* dereferenceable(56) %18) #10
  %19 = getelementptr inbounds %"class.SkTextBlobTrace::Capture", %"class.SkTextBlobTrace::Capture"* %0, i64 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 1
  store i64 %21, i64* %19, align 8
  br label %22

22:                                               ; preds = %3, %8
  ret void
}

declare void @_ZN19SkBinaryWriteBuffer9writeUIntEj(%class.SkBinaryWriteBuffer*, i32) unnamed_addr #2

declare void @_ZN19SkBinaryWriteBuffer10writePaintERK7SkPaint(%class.SkBinaryWriteBuffer*, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN19SkBinaryWriteBuffer10writePointERK7SkPoint(%class.SkBinaryWriteBuffer*, %struct.SkPoint* dereferenceable(8)) unnamed_addr #2

declare void @_ZN14SkTextBlobPriv7FlattenERK10SkTextBlobR13SkWriteBuffer(%class.SkTextBlob* dereferenceable(28), %class.SkWriteBuffer* dereferenceable(56)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK15SkTextBlobTrace7Capture4dumpEP9SkWStream(%"class.SkTextBlobTrace::Capture"*, %class.SkWStream*) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %class.SkTLazy, align 8
  %6 = alloca %class.SkString, align 8
  %7 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %5, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #10
  %8 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %5, i64 0, i32 0, i64 8
  %9 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %5, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  store %class.SkFILEWStream* null, %class.SkFILEWStream** %9, align 8
  %10 = icmp eq %class.SkWStream* %1, null
  br i1 %10, label %11, label %45

11:                                               ; preds = %2
  %12 = ptrtoint %"class.SkTextBlobTrace::Capture"* %0 to i64
  %13 = trunc i64 %12 to i32
  %14 = lshr i32 %13, 16
  %15 = xor i32 %14, %13
  %16 = mul i32 %15, -2048144789
  %17 = lshr i32 %16, 13
  %18 = xor i32 %17, %16
  %19 = mul i32 %18, -1028477387
  %20 = lshr i32 %19, 16
  %21 = xor i32 %20, %19
  %22 = bitcast %class.SkString* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #10
  %23 = getelementptr inbounds %class.SkString, %class.SkString* %6, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %23, align 8
  %24 = getelementptr inbounds %"class.SkTextBlobTrace::Capture", %"class.SkTextBlobTrace::Capture"* %0, i64 0, i32 0
  %25 = load i64, i64* %24, align 8
  call void (%class.SkString*, i8*, ...) @_Z14SkStringPrintfPKcz(%class.SkString* nonnull sret %6, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0), i32 %21, i64 %25) #10
  %26 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %23, align 8
  %27 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %26, i64 0, i32 2
  %28 = load %class.SkFILEWStream*, %class.SkFILEWStream** %9, align 8
  %29 = icmp eq %class.SkFILEWStream* %28, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %11
  %31 = bitcast %class.SkFILEWStream* %28 to void (%class.SkFILEWStream*)***
  %32 = load void (%class.SkFILEWStream*)**, void (%class.SkFILEWStream*)*** %31, align 8
  %33 = load void (%class.SkFILEWStream*)*, void (%class.SkFILEWStream*)** %32, align 8
  call void %33(%class.SkFILEWStream* nonnull %28) #10
  store %class.SkFILEWStream* null, %class.SkFILEWStream** %9, align 8
  br label %34

34:                                               ; preds = %11, %30
  %35 = bitcast %class.SkTLazy* %5 to %class.SkFILEWStream*
  call void @_ZN13SkFILEWStreamC1EPKc(%class.SkFILEWStream* nonnull %35, i8* %27) #10
  %36 = bitcast %class.SkFILEWStream** %9 to %class.SkTLazy**
  store %class.SkTLazy* %5, %class.SkTLazy** %36, align 8
  %37 = bitcast i8* %8 to %struct._IO_FILE**
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** %37, align 8
  %39 = icmp eq %struct._IO_FILE* %38, null
  %40 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %23, align 8
  %41 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %40, i64 0, i32 2
  br i1 %39, label %42, label %43

42:                                               ; preds = %34
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 104, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i64 0, i64 0), i8* %41) #10
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #10
  br label %85

43:                                               ; preds = %34
  %44 = bitcast %class.SkTLazy* %5 to %class.SkWStream*
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 107, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* %41) #10
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #10
  br label %45

45:                                               ; preds = %43, %2
  %46 = phi %class.SkWStream* [ %1, %2 ], [ %44, %43 ]
  %47 = getelementptr inbounds %"class.SkTextBlobTrace::Capture", %"class.SkTextBlobTrace::Capture"* %0, i64 0, i32 1, i32 0
  %48 = load %class.SkRefCntSet*, %class.SkRefCntSet** %47, align 8
  %49 = getelementptr inbounds %class.SkRefCntSet, %class.SkRefCntSet* %48, i64 0, i32 0, i32 0, i32 1, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %51)
  store i32 %50, i32* %3, align 4
  %52 = bitcast %class.SkWStream* %46 to i1 (%class.SkWStream*, i8*, i64)***
  %53 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %52, align 8
  %54 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %53, i64 2
  %55 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %54, align 8
  %56 = call zeroext i1 %55(%class.SkWStream* nonnull %46, i8* nonnull %51, i64 4) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51)
  %57 = load %class.SkRefCntSet*, %class.SkRefCntSet** %47, align 8
  %58 = getelementptr inbounds %class.SkRefCntSet, %class.SkRefCntSet* %57, i64 0, i32 0, i32 0, i32 1, i32 0
  %59 = getelementptr inbounds %class.SkRefCntSet, %class.SkRefCntSet* %57, i64 0, i32 0, i32 0, i32 1, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = icmp sgt i32 %60, 0
  br i1 %61, label %62, label %74

62:                                               ; preds = %45, %68
  %63 = phi i64 [ %69, %68 ], [ 0, %45 ]
  %64 = load %"struct.SkPtrSet::Pair"*, %"struct.SkPtrSet::Pair"** %58, align 8
  %65 = getelementptr inbounds %"struct.SkPtrSet::Pair", %"struct.SkPtrSet::Pair"* %64, i64 %63, i32 0
  %66 = load i8*, i8** %65, align 8
  %67 = icmp eq i8* %66, null
  br i1 %67, label %74, label %68

68:                                               ; preds = %62
  %69 = add nuw nsw i64 %63, 1
  %70 = bitcast i8* %66 to %class.SkTypeface*
  call void @_ZNK10SkTypeface9serializeEP9SkWStreamNS_17SerializeBehaviorE(%class.SkTypeface* nonnull %70, %class.SkWStream* %46, i32 0) #10
  %71 = load i32, i32* %59, align 4
  %72 = sext i32 %71 to i64
  %73 = icmp slt i64 %69, %72
  br i1 %73, label %62, label %74

74:                                               ; preds = %62, %68, %45
  %75 = getelementptr inbounds %"class.SkTextBlobTrace::Capture", %"class.SkTextBlobTrace::Capture"* %0, i64 0, i32 2
  %76 = getelementptr inbounds %"class.SkTextBlobTrace::Capture", %"class.SkTextBlobTrace::Capture"* %0, i64 0, i32 2, i32 3, i32 2
  %77 = load i64, i64* %76, align 8
  %78 = trunc i64 %77 to i32
  %79 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %79)
  store i32 %78, i32* %4, align 4
  %80 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %52, align 8
  %81 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %80, i64 2
  %82 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %81, align 8
  %83 = call zeroext i1 %82(%class.SkWStream* %46, i8* nonnull %79, i64 4) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %79)
  %84 = call zeroext i1 @_ZNK19SkBinaryWriteBuffer13writeToStreamEP9SkWStream(%class.SkBinaryWriteBuffer* %75, %class.SkWStream* %46) #10
  br label %85

85:                                               ; preds = %42, %74
  %86 = load %class.SkFILEWStream*, %class.SkFILEWStream** %9, align 8
  %87 = icmp eq %class.SkFILEWStream* %86, null
  br i1 %87, label %92, label %88

88:                                               ; preds = %85
  %89 = bitcast %class.SkFILEWStream* %86 to void (%class.SkFILEWStream*)***
  %90 = load void (%class.SkFILEWStream*)**, void (%class.SkFILEWStream*)*** %89, align 8
  %91 = load void (%class.SkFILEWStream*)*, void (%class.SkFILEWStream*)** %90, align 8
  call void %91(%class.SkFILEWStream* nonnull %86) #10
  store %class.SkFILEWStream* null, %class.SkFILEWStream** %9, align 8
  br label %92

92:                                               ; preds = %85, %88
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #10
  ret void
}

declare void @_Z14SkStringPrintfPKcz(%class.SkString* sret, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #4

declare void @_ZNK10SkTypeface9serializeEP9SkWStreamNS_17SerializeBehaviorE(%class.SkTypeface*, %class.SkWStream*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK19SkBinaryWriteBuffer13writeToStreamEP9SkWStream(%class.SkBinaryWriteBuffer*, %class.SkWStream*) local_unnamed_addr #2

declare zeroext i1 @_ZN8SkStream7readS32EPi(%class.SkStream*, i32*) local_unnamed_addr #2

declare void @_ZN12SkReadBuffer9setMemoryEPKvm(%class.SkReadBuffer*, i8*, i64) local_unnamed_addr #2

declare void @_ZN7SkPaintC1Ev(%class.SkPaint*) unnamed_addr #2

declare i32 @_ZN11SkPaintPriv9UnflattenEP7SkPaintR12SkReadBufferP6SkFont(%class.SkPaint*, %class.SkReadBuffer* dereferenceable(136), %class.SkFont*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN10SkTextBlobD1Ev(%class.SkTextBlob*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN10SkTextBlobdlEPv(i8*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI5sk_spI10SkTypefaceENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.12"*, %class.sk_sp.14* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.sk_sp.14** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.12"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.12"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.sk_sp.14** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %class.sk_sp.14*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.sk_sp.14* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %36, i64 %9
  %38 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %36, i64 %35
  %39 = ptrtoint %class.sk_sp.14* %38 to i64
  %40 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %1, i64 0, i32 0
  %41 = bitcast %class.sk_sp.14* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %class.SkTypeface* null, %class.SkTypeface** %40, align 8
  %43 = bitcast %class.sk_sp.14* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %37, i64 1
  %45 = ptrtoint %class.sk_sp.14* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 0
  %47 = load %class.sk_sp.14*, %class.sk_sp.14** %46, align 8
  %48 = ptrtoint %class.sk_sp.14* %47 to i64
  %49 = load %class.sk_sp.14*, %class.sk_sp.14** %3, align 8
  %50 = icmp eq %class.sk_sp.14* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %class.sk_sp.14, %class.sk_sp.14* %49, i64 -1, i32 0
  %53 = ptrtoint %class.SkTypeface** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %class.sk_sp.14* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %class.sk_sp.14* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %60, i64 -1
  %64 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %61, i64 -1
  %65 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %64, i64 0, i32 0
  %66 = bitcast %class.sk_sp.14* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %class.SkTypeface* null, %class.SkTypeface** %65, align 8
  %68 = bitcast %class.sk_sp.14* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !2

71:                                               ; preds = %59, %51
  %72 = phi %class.sk_sp.14* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %class.sk_sp.14* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %class.sk_sp.14* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %class.sk_sp.14* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %class.sk_sp.14* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %77, i64 -1
  %80 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %78, i64 -1
  %81 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %80, i64 0, i32 0
  %82 = bitcast %class.sk_sp.14* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %class.SkTypeface* null, %class.SkTypeface** %81, align 8
  %84 = bitcast %class.sk_sp.14* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %77, i64 -2
  %86 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %78, i64 -2
  %87 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %86, i64 0, i32 0
  %88 = bitcast %class.sk_sp.14* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %class.SkTypeface* null, %class.SkTypeface** %87, align 8
  %90 = bitcast %class.sk_sp.14* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %77, i64 -3
  %92 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %78, i64 -3
  %93 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %92, i64 0, i32 0
  %94 = bitcast %class.sk_sp.14* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %class.SkTypeface* null, %class.SkTypeface** %93, align 8
  %96 = bitcast %class.sk_sp.14* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %77, i64 -4
  %98 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %78, i64 -4
  %99 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %98, i64 0, i32 0
  %100 = bitcast %class.sk_sp.14* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %class.SkTypeface* null, %class.SkTypeface** %99, align 8
  %102 = bitcast %class.sk_sp.14* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %77, i64 -5
  %104 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %78, i64 -5
  %105 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %104, i64 0, i32 0
  %106 = bitcast %class.sk_sp.14* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %class.SkTypeface* null, %class.SkTypeface** %105, align 8
  %108 = bitcast %class.sk_sp.14* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %77, i64 -6
  %110 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %78, i64 -6
  %111 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %110, i64 0, i32 0
  %112 = bitcast %class.sk_sp.14* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %class.SkTypeface* null, %class.SkTypeface** %111, align 8
  %114 = bitcast %class.sk_sp.14* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %77, i64 -7
  %116 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %78, i64 -7
  %117 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %116, i64 0, i32 0
  %118 = bitcast %class.sk_sp.14* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %class.SkTypeface* null, %class.SkTypeface** %117, align 8
  %120 = bitcast %class.sk_sp.14* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %77, i64 -8
  %122 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %78, i64 -8
  %123 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %122, i64 0, i32 0
  %124 = bitcast %class.sk_sp.14* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %class.SkTypeface* null, %class.SkTypeface** %123, align 8
  %126 = bitcast %class.sk_sp.14* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %class.sk_sp.14* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %class.sk_sp.14* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %class.sk_sp.14*, %class.sk_sp.14** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %class.sk_sp.14* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %class.sk_sp.14* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %class.sk_sp.14* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %class.sk_sp.14*
  %138 = icmp eq %class.sk_sp.14* %133, %137
  br i1 %138, label %157, label %139

139:                                              ; preds = %132, %155
  %140 = phi %class.sk_sp.14* [ %141, %155 ], [ %133, %132 ]
  %141 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %140, i64 -1
  %142 = getelementptr inbounds %class.sk_sp.14, %class.sk_sp.14* %141, i64 0, i32 0
  %143 = load %class.SkTypeface*, %class.SkTypeface** %142, align 8
  %144 = icmp eq %class.SkTypeface* %143, null
  br i1 %144, label %155, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %143, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = atomicrmw add i32* %146, i32 -1 acq_rel
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %155

149:                                              ; preds = %145
  %150 = bitcast %class.SkTypeface* %143 to %class.SkRefCntBase*
  %151 = bitcast %class.SkTypeface* %143 to void (%class.SkRefCntBase*)***
  %152 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %151, align 8
  %153 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %152, i64 2
  %154 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %153, align 8
  tail call void %154(%class.SkRefCntBase* nonnull %150) #10
  br label %155

155:                                              ; preds = %149, %145, %139
  %156 = icmp eq %class.sk_sp.14* %141, %137
  br i1 %156, label %157, label %139

157:                                              ; preds = %155, %132
  %158 = icmp eq i64 %135, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %157
  %160 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %160) #11
  br label %161

161:                                              ; preds = %157, %159
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN15SkTextBlobTrace6RecordENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"*, %"struct.SkTextBlobTrace::Record"* dereferenceable(96)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.SkTextBlobTrace::Record"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 96
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 192153584101141162
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.SkTextBlobTrace::Record"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 96
  %20 = icmp ult i64 %19, 96076792050570581
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 192153584101141162, %14 ]
  %28 = mul i64 %27, 96
  %29 = tail call i8* @_Znwm(i64 %28) #11
  %30 = bitcast i8* %29 to %"struct.SkTextBlobTrace::Record"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.SkTextBlobTrace::Record"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.SkTextBlobTrace::Record", %"struct.SkTextBlobTrace::Record"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.SkTextBlobTrace::Record", %"struct.SkTextBlobTrace::Record"* %33, i64 %32
  %36 = ptrtoint %"struct.SkTextBlobTrace::Record"* %35 to i64
  %37 = getelementptr inbounds %"struct.SkTextBlobTrace::Record", %"struct.SkTextBlobTrace::Record"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.SkTextBlobTrace::Record", %"struct.SkTextBlobTrace::Record"* %1, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  store i32 %39, i32* %37, align 8
  %40 = getelementptr inbounds %"struct.SkTextBlobTrace::Record", %"struct.SkTextBlobTrace::Record"* %33, i64 %9, i32 2
  %41 = getelementptr inbounds %"struct.SkTextBlobTrace::Record", %"struct.SkTextBlobTrace::Record"* %1, i64 0, i32 2
  tail call void @_ZN7SkPaintC1EOS_(%class.SkPaint* %40, %class.SkPaint* dereferenceable(72) %41) #10
  %42 = getelementptr inbounds %"struct.SkTextBlobTrace::Record", %"struct.SkTextBlobTrace::Record"* %33, i64 %9, i32 3
  %43 = getelementptr inbounds %"struct.SkTextBlobTrace::Record", %"struct.SkTextBlobTrace::Record"* %1, i64 0, i32 3
  %44 = bitcast %struct.SkPoint* %43 to i64*
  %45 = bitcast %struct.SkPoint* %42 to i64*
  %46 = load i64, i64* %44, align 8
  store i64 %46, i64* %45, align 8
  %47 = getelementptr inbounds %"struct.SkTextBlobTrace::Record", %"struct.SkTextBlobTrace::Record"* %33, i64 %9, i32 4
  %48 = getelementptr inbounds %"struct.SkTextBlobTrace::Record", %"struct.SkTextBlobTrace::Record"* %1, i64 0, i32 4
  %49 = getelementptr inbounds %class.sk_sp.5, %class.sk_sp.5* %48, i64 0, i32 0
  %50 = bitcast %class.sk_sp.5* %48 to i64*
  %51 = load i64, i64* %50, align 8
  store %class.SkTextBlob* null, %class.SkTextBlob** %49, align 8
  %52 = bitcast %class.sk_sp.5* %47 to i64*
  store i64 %51, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.SkTextBlobTrace::Record", %"struct.SkTextBlobTrace::Record"* %34, i64 1
  %54 = ptrtoint %"struct.SkTextBlobTrace::Record"* %53 to i64
  %55 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %56 = load %"struct.SkTextBlobTrace::Record"*, %"struct.SkTextBlobTrace::Record"** %55, align 8
  %57 = load %"struct.SkTextBlobTrace::Record"*, %"struct.SkTextBlobTrace::Record"** %3, align 8
  %58 = icmp eq %"struct.SkTextBlobTrace::Record"* %57, %56
  br i1 %58, label %59, label %61

59:                                               ; preds = %31
  %60 = ptrtoint %"struct.SkTextBlobTrace::Record"* %56 to i64
  br label %86

61:                                               ; preds = %31, %61
  %62 = phi %"struct.SkTextBlobTrace::Record"* [ %81, %61 ], [ %34, %31 ]
  %63 = phi %"struct.SkTextBlobTrace::Record"* [ %64, %61 ], [ %57, %31 ]
  %64 = getelementptr inbounds %"struct.SkTextBlobTrace::Record", %"struct.SkTextBlobTrace::Record"* %63, i64 -1
  %65 = getelementptr inbounds %"struct.SkTextBlobTrace::Record", %"struct.SkTextBlobTrace::Record"* %62, i64 -1, i32 0
  %66 = getelementptr inbounds %"struct.SkTextBlobTrace::Record", %"struct.SkTextBlobTrace::Record"* %64, i64 0, i32 0
  %67 = load i32, i32* %66, align 8
  store i32 %67, i32* %65, align 8
  %68 = getelementptr inbounds %"struct.SkTextBlobTrace::Record", %"struct.SkTextBlobTrace::Record"* %62, i64 -1, i32 2
  %69 = getelementptr inbounds %"struct.SkTextBlobTrace::Record", %"struct.SkTextBlobTrace::Record"* %63, i64 -1, i32 2
  tail call void @_ZN7SkPaintC1EOS_(%class.SkPaint* %68, %class.SkPaint* dereferenceable(72) %69) #10
  %70 = getelementptr inbounds %"struct.SkTextBlobTrace::Record", %"struct.SkTextBlobTrace::Record"* %62, i64 -1, i32 3
  %71 = getelementptr inbounds %"struct.SkTextBlobTrace::Record", %"struct.SkTextBlobTrace::Record"* %63, i64 -1, i32 3
  %72 = bitcast %struct.SkPoint* %71 to i64*
  %73 = bitcast %struct.SkPoint* %70 to i64*
  %74 = load i64, i64* %72, align 8
  store i64 %74, i64* %73, align 8
  %75 = getelementptr inbounds %"struct.SkTextBlobTrace::Record", %"struct.SkTextBlobTrace::Record"* %62, i64 -1, i32 4
  %76 = getelementptr inbounds %"struct.SkTextBlobTrace::Record", %"struct.SkTextBlobTrace::Record"* %63, i64 -1, i32 4
  %77 = getelementptr inbounds %class.sk_sp.5, %class.sk_sp.5* %76, i64 0, i32 0
  %78 = bitcast %class.sk_sp.5* %76 to i64*
  %79 = load i64, i64* %78, align 8
  store %class.SkTextBlob* null, %class.SkTextBlob** %77, align 8
  %80 = bitcast %class.sk_sp.5* %75 to i64*
  store i64 %79, i64* %80, align 8
  %81 = getelementptr inbounds %"struct.SkTextBlobTrace::Record", %"struct.SkTextBlobTrace::Record"* %62, i64 -1
  %82 = icmp eq %"struct.SkTextBlobTrace::Record"* %64, %56
  br i1 %82, label %83, label %61

83:                                               ; preds = %61
  %84 = load i64, i64* %6, align 8
  %85 = load %"struct.SkTextBlobTrace::Record"*, %"struct.SkTextBlobTrace::Record"** %3, align 8
  br label %86

86:                                               ; preds = %59, %83
  %87 = phi %"struct.SkTextBlobTrace::Record"* [ %56, %59 ], [ %85, %83 ]
  %88 = phi %"struct.SkTextBlobTrace::Record"* [ %34, %59 ], [ %81, %83 ]
  %89 = phi i64 [ %60, %59 ], [ %84, %83 ]
  %90 = ptrtoint %"struct.SkTextBlobTrace::Record"* %88 to i64
  store i64 %90, i64* %6, align 8
  store i64 %54, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %91 = inttoptr i64 %89 to %"struct.SkTextBlobTrace::Record"*
  %92 = icmp eq %"struct.SkTextBlobTrace::Record"* %87, %91
  br i1 %92, label %108, label %93

93:                                               ; preds = %86, %105
  %94 = phi %"struct.SkTextBlobTrace::Record"* [ %95, %105 ], [ %87, %86 ]
  %95 = getelementptr inbounds %"struct.SkTextBlobTrace::Record", %"struct.SkTextBlobTrace::Record"* %94, i64 -1
  %96 = getelementptr inbounds %"struct.SkTextBlobTrace::Record", %"struct.SkTextBlobTrace::Record"* %94, i64 -1, i32 4, i32 0
  %97 = load %class.SkTextBlob*, %class.SkTextBlob** %96, align 8
  %98 = icmp eq %class.SkTextBlob* %97, null
  br i1 %98, label %105, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %97, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = atomicrmw add i32* %100, i32 -1 acq_rel
  %102 = icmp eq i32 %101, 1
  br i1 %102, label %103, label %105

103:                                              ; preds = %99
  tail call void @_ZN10SkTextBlobD1Ev(%class.SkTextBlob* nonnull %97) #10
  %104 = bitcast %class.SkTextBlob* %97 to i8*
  tail call void @_ZN10SkTextBlobdlEPv(i8* nonnull %104) #10
  br label %105

105:                                              ; preds = %103, %99, %93
  %106 = getelementptr inbounds %"struct.SkTextBlobTrace::Record", %"struct.SkTextBlobTrace::Record"* %94, i64 -1, i32 2
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* %106) #10
  %107 = icmp eq %"struct.SkTextBlobTrace::Record"* %95, %91
  br i1 %107, label %108, label %93

108:                                              ; preds = %105, %86
  %109 = icmp eq i64 %89, 0
  br i1 %109, label %112, label %110

110:                                              ; preds = %108
  %111 = inttoptr i64 %89 to i8*
  tail call void @_ZdlPv(i8* %111) #11
  br label %112

112:                                              ; preds = %108, %110
  ret void
}

declare void @_ZN7SkPaintC1EOS_(%class.SkPaint*, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN13SkFILEWStreamC1EPKc(%class.SkFILEWStream*, i8*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
