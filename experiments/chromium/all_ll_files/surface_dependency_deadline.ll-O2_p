; ModuleID = '../../components/viz/service/surfaces/surface_dependency_deadline.cc'
source_filename = "../../components/viz/service/surfaces/surface_dependency_deadline.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.viz::SurfaceDependencyDeadline" = type { %"class.base::TickClock"*, %"class.base::TimeTicks", %"class.absl::optional" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::TimeTicks" }
%"class.base::TickClock" = type { i32 (...)** }
%"class.viz::FrameDeadline" = type <{ %"class.base::TimeTicks", i32, [4 x i8], %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.base::TimeDelta" = type { i64 }

@_ZN3viz25SurfaceDependencyDeadlineC1EPKN4base9TickClockE = hidden unnamed_addr alias void (%"class.viz::SurfaceDependencyDeadline"*, %"class.base::TickClock"*), void (%"class.viz::SurfaceDependencyDeadline"*, %"class.base::TickClock"*)* @_ZN3viz25SurfaceDependencyDeadlineC2EPKN4base9TickClockE
@_ZN3viz25SurfaceDependencyDeadlineD1Ev = hidden unnamed_addr alias void (%"class.viz::SurfaceDependencyDeadline"*), void (%"class.viz::SurfaceDependencyDeadline"*)* @_ZN3viz25SurfaceDependencyDeadlineD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3viz25SurfaceDependencyDeadlineC2EPKN4base9TickClockE(%"class.viz::SurfaceDependencyDeadline"* nocapture, %"class.base::TickClock"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::SurfaceDependencyDeadline", %"class.viz::SurfaceDependencyDeadline"* %0, i64 0, i32 0
  store %"class.base::TickClock"* %1, %"class.base::TickClock"** %3, align 8
  %4 = getelementptr inbounds %"class.viz::SurfaceDependencyDeadline", %"class.viz::SurfaceDependencyDeadline"* %0, i64 0, i32 1, i32 0, i32 0
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds %"class.viz::SurfaceDependencyDeadline", %"class.viz::SurfaceDependencyDeadline"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %5, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3viz25SurfaceDependencyDeadlineD2Ev(%"class.viz::SurfaceDependencyDeadline"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz25SurfaceDependencyDeadline3SetERKNS_13FrameDeadlineE(%"class.viz::SurfaceDependencyDeadline"* nocapture, %"class.viz::FrameDeadline"* dereferenceable(32)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.viz::SurfaceDependencyDeadline", %"class.viz::SurfaceDependencyDeadline"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  store i8 0, i8* %3, align 8
  %7 = getelementptr inbounds %"class.viz::SurfaceDependencyDeadline", %"class.viz::SurfaceDependencyDeadline"* %0, i64 0, i32 0
  %8 = load %"class.base::TickClock"*, %"class.base::TickClock"** %7, align 8
  %9 = bitcast %"class.base::TickClock"* %8 to i64 (%"class.base::TickClock"*)***
  %10 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %9, align 8
  %11 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %10, i64 2
  %12 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %11, align 8
  %13 = tail call i64 %12(%"class.base::TickClock"* %8) #5
  br label %14

14:                                               ; preds = %2, %6
  %15 = getelementptr inbounds %"class.viz::FrameDeadline", %"class.viz::FrameDeadline"* %1, i64 0, i32 0, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.viz::SurfaceDependencyDeadline", %"class.viz::SurfaceDependencyDeadline"* %0, i64 0, i32 1, i32 0, i32 0
  store i64 %16, i64* %17, align 8
  %18 = tail call i64 @_ZNK3viz13FrameDeadline10ToWallTimeEN4absl8optionalIjEE(%"class.viz::FrameDeadline"* %1, i64 0) #5
  %19 = load i8, i8* %3, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  %21 = getelementptr inbounds %"class.viz::SurfaceDependencyDeadline", %"class.viz::SurfaceDependencyDeadline"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i64 %18, i64* %21, align 8
  br i1 %20, label %22, label %23

22:                                               ; preds = %14
  store i8 1, i8* %3, align 8
  br label %23

23:                                               ; preds = %14, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZN3viz25SurfaceDependencyDeadline6CancelEv(%"class.viz::SurfaceDependencyDeadline"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.viz::SurfaceDependencyDeadline", %"class.viz::SurfaceDependencyDeadline"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  store i8 0, i8* %2, align 8
  %6 = getelementptr inbounds %"class.viz::SurfaceDependencyDeadline", %"class.viz::SurfaceDependencyDeadline"* %0, i64 0, i32 0
  %7 = load %"class.base::TickClock"*, %"class.base::TickClock"** %6, align 8
  %8 = bitcast %"class.base::TickClock"* %7 to i64 (%"class.base::TickClock"*)***
  %9 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %8, align 8
  %10 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %9, i64 2
  %11 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %10, align 8
  %12 = tail call i64 %11(%"class.base::TickClock"* %7) #5
  %13 = getelementptr inbounds %"class.viz::SurfaceDependencyDeadline", %"class.viz::SurfaceDependencyDeadline"* %0, i64 0, i32 1, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = sub nsw i64 %12, %14
  br label %16

16:                                               ; preds = %1, %5
  %17 = phi i8 [ 1, %5 ], [ 0, %1 ]
  %18 = phi i64 [ %15, %5 ], [ undef, %1 ]
  %19 = insertvalue { i8, i64 } undef, i8 %17, 0
  %20 = insertvalue { i8, i64 } %19, i64 %18, 1
  ret { i8, i64 } %20
}

declare i64 @_ZNK3viz13FrameDeadline10ToWallTimeEN4absl8optionalIjEE(%"class.viz::FrameDeadline"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3viz25SurfaceDependencyDeadline17HasDeadlinePassedEv(%"class.viz::SurfaceDependencyDeadline"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.viz::SurfaceDependencyDeadline", %"class.viz::SurfaceDependencyDeadline"* %0, i64 0, i32 0
  %3 = load %"class.base::TickClock"*, %"class.base::TickClock"** %2, align 8
  %4 = bitcast %"class.base::TickClock"* %3 to i64 (%"class.base::TickClock"*)***
  %5 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %5, i64 2
  %7 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %6, align 8
  %8 = tail call i64 %7(%"class.base::TickClock"* %3) #5
  %9 = getelementptr inbounds %"class.viz::SurfaceDependencyDeadline", %"class.viz::SurfaceDependencyDeadline"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.viz::SurfaceDependencyDeadline", %"class.viz::SurfaceDependencyDeadline"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp sge i64 %8, %14
  br label %16

16:                                               ; preds = %1, %12
  %17 = phi i1 [ %15, %12 ], [ true, %1 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3viz25SurfaceDependencyDeadlineeqERKS0_(%"class.viz::SurfaceDependencyDeadline"* nocapture readonly, %"class.viz::SurfaceDependencyDeadline"* nocapture readonly dereferenceable(32)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.viz::SurfaceDependencyDeadline", %"class.viz::SurfaceDependencyDeadline"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp ne i8 %4, 0
  %6 = getelementptr inbounds %"class.viz::SurfaceDependencyDeadline", %"class.viz::SurfaceDependencyDeadline"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp ne i8 %7, 0
  %9 = xor i1 %5, %8
  %10 = xor i1 %5, true
  %11 = or i1 %9, %10
  %12 = xor i1 %9, true
  br i1 %11, label %22, label %13

13:                                               ; preds = %2
  %14 = icmp eq i8 %7, 0
  br i1 %14, label %15, label %16, !prof !3

15:                                               ; preds = %13
  tail call void @llvm.trap() #5
  unreachable

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.viz::SurfaceDependencyDeadline", %"class.viz::SurfaceDependencyDeadline"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.viz::SurfaceDependencyDeadline", %"class.viz::SurfaceDependencyDeadline"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, %18
  br label %22

22:                                               ; preds = %2, %16
  %23 = phi i1 [ %12, %2 ], [ %21, %16 ]
  ret i1 %23
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
