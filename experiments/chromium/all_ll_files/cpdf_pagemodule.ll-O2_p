; ModuleID = '../../third_party/pdfium/core/fpdfapi/page/cpdf_pagemodule.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/page/cpdf_pagemodule.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDF_PageModule = type { %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr.13" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CPDF_DeviceCS* }
%class.CPDF_DeviceCS = type { %class.CPDF_ColorSpace.base, [4 x i8] }
%class.CPDF_ColorSpace.base = type <{ %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr", %"class.fxcrt::RetainPtr.6", i32, i32, i32 }>
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.0", %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { i64 }
%"class.fxcrt::UnownedPtr" = type { %class.CPDF_Document* }
%class.CPDF_Document = type opaque
%"class.fxcrt::RetainPtr.6" = type { %"class.std::__1::unique_ptr.7" }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %class.CPDF_Array* }
%class.CPDF_Array = type opaque
%"class.fxcrt::RetainPtr.13" = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %class.CPDF_PatternCS* }
%class.CPDF_PatternCS = type { %class.CPDF_ColorSpace.base, %"class.fxcrt::RetainPtr.17" }
%"class.fxcrt::RetainPtr.17" = type { %"class.std::__1::unique_ptr.18" }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %class.CPDF_ColorSpace* }
%class.CPDF_ColorSpace = type <{ %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr", %"class.fxcrt::RetainPtr.6", i32, i32, i32, [4 x i8] }>
%class.CPDF_FontGlobals = type { %class.CPDF_CMapManager, [6 x %"class.pdfium::span"], [6 x %"class.pdfium::span.39"], %"class.std::__1::map.41" }
%class.CPDF_CMapManager = type { %"class.std::__1::map", [6 x %"class.std::__1::unique_ptr.34"] }
%"class.std::__1::map" = type { %"class.std::__1::__tree.25" }
%"class.std::__1::__tree.25" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.26", %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %class.CPDF_CID2UnicodeMap* }
%class.CPDF_CID2UnicodeMap = type opaque
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.38", i64 }
%"class.fxcrt::UnownedPtr.38" = type { %struct.FXCMAP_CMap* }
%struct.FXCMAP_CMap = type { i8*, i16*, %struct.FXCMAP_DWordCIDMap*, i16, i16, i8, i8 }
%struct.FXCMAP_DWordCIDMap = type { i16, i16, i16, i16 }
%"class.pdfium::span.39" = type { %"class.fxcrt::UnownedPtr.40", i64 }
%"class.fxcrt::UnownedPtr.40" = type { i16* }
%"class.std::__1::map.41" = type { %"class.std::__1::__tree.42" }
%"class.std::__1::__tree.42" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.43", %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.4" }

@_ZN12_GLOBAL__N_112g_PageModuleE = internal unnamed_addr global %class.CPDF_PageModule* null, align 8

@_ZN15CPDF_PageModuleC1Ev = hidden unnamed_addr alias void (%class.CPDF_PageModule*), void (%class.CPDF_PageModule*)* @_ZN15CPDF_PageModuleC2Ev
@_ZN15CPDF_PageModuleD1Ev = hidden unnamed_addr alias void (%class.CPDF_PageModule*), void (%class.CPDF_PageModule*)* @_ZN15CPDF_PageModuleD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_PageModule6CreateEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i8* @_Znwm(i64 32) #6
  %2 = bitcast i8* %1 to %class.CPDF_PageModule*
  tail call void @_ZN15CPDF_PageModuleC2Ev(%class.CPDF_PageModule* nonnull %2)
  store i8* %1, i8** bitcast (%class.CPDF_PageModule** @_ZN12_GLOBAL__N_112g_PageModuleE to i8**), align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_PageModule7DestroyEv() local_unnamed_addr #0 align 2 {
  %1 = load %class.CPDF_PageModule*, %class.CPDF_PageModule** @_ZN12_GLOBAL__N_112g_PageModuleE, align 8
  %2 = icmp eq %class.CPDF_PageModule* %1, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %0
  tail call void @_ZN15CPDF_PageModuleD2Ev(%class.CPDF_PageModule* nonnull %1) #7
  %4 = bitcast %class.CPDF_PageModule* %1 to i8*
  tail call void @_ZdlPv(i8* %4) #6
  br label %5

5:                                                ; preds = %3, %0
  store %class.CPDF_PageModule* null, %class.CPDF_PageModule** @_ZN12_GLOBAL__N_112g_PageModuleE, align 8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.CPDF_PageModule* @_ZN15CPDF_PageModule11GetInstanceEv() local_unnamed_addr #3 align 2 {
  %1 = load %class.CPDF_PageModule*, %class.CPDF_PageModule** @_ZN12_GLOBAL__N_112g_PageModuleE, align 8
  ret %class.CPDF_PageModule* %1
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_PageModuleC2Ev(%class.CPDF_PageModule* nocapture) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 72) #6, !noalias !2
  %3 = bitcast i8* %2 to %class.CPDF_DeviceCS*
  tail call void @_ZN13CPDF_DeviceCSC1EN15CPDF_ColorSpace6FamilyE(%class.CPDF_DeviceCS* nonnull %3, i32 1) #7, !noalias !2
  %4 = ptrtoint i8* %2 to i64
  %5 = bitcast %class.CPDF_PageModule* %0 to i64*
  store i64 %4, i64* %5, align 8, !alias.scope !2
  %6 = getelementptr inbounds i8, i8* %2, i64 8
  %7 = bitcast i8* %6 to i64*
  %8 = load i64, i64* %7, align 8, !noalias !2
  %9 = add nsw i64 %8, 1
  store i64 %9, i64* %7, align 8, !noalias !2
  %10 = getelementptr inbounds %class.CPDF_PageModule, %class.CPDF_PageModule* %0, i64 0, i32 1
  %11 = tail call i8* @_Znwm(i64 72) #6, !noalias !5
  %12 = bitcast i8* %11 to %class.CPDF_DeviceCS*
  tail call void @_ZN13CPDF_DeviceCSC1EN15CPDF_ColorSpace6FamilyE(%class.CPDF_DeviceCS* nonnull %12, i32 2) #7, !noalias !5
  %13 = ptrtoint i8* %11 to i64
  %14 = bitcast %"class.fxcrt::RetainPtr"* %10 to i64*
  store i64 %13, i64* %14, align 8, !alias.scope !5
  %15 = getelementptr inbounds i8, i8* %11, i64 8
  %16 = bitcast i8* %15 to i64*
  %17 = load i64, i64* %16, align 8, !noalias !5
  %18 = add nsw i64 %17, 1
  store i64 %18, i64* %16, align 8, !noalias !5
  %19 = getelementptr inbounds %class.CPDF_PageModule, %class.CPDF_PageModule* %0, i64 0, i32 2
  %20 = tail call i8* @_Znwm(i64 72) #6, !noalias !8
  %21 = bitcast i8* %20 to %class.CPDF_DeviceCS*
  tail call void @_ZN13CPDF_DeviceCSC1EN15CPDF_ColorSpace6FamilyE(%class.CPDF_DeviceCS* nonnull %21, i32 3) #7, !noalias !8
  %22 = ptrtoint i8* %20 to i64
  %23 = bitcast %"class.fxcrt::RetainPtr"* %19 to i64*
  store i64 %22, i64* %23, align 8, !alias.scope !8
  %24 = getelementptr inbounds i8, i8* %20, i64 8
  %25 = bitcast i8* %24 to i64*
  %26 = load i64, i64* %25, align 8, !noalias !8
  %27 = add nsw i64 %26, 1
  store i64 %27, i64* %25, align 8, !noalias !8
  %28 = getelementptr inbounds %class.CPDF_PageModule, %class.CPDF_PageModule* %0, i64 0, i32 3
  %29 = tail call i8* @_Znwm(i64 80) #6, !noalias !11
  %30 = bitcast i8* %29 to %class.CPDF_PatternCS*
  tail call void @_ZN14CPDF_PatternCSC1EP13CPDF_Document(%class.CPDF_PatternCS* nonnull %30, %class.CPDF_Document* null) #7, !noalias !11
  %31 = ptrtoint i8* %29 to i64
  %32 = bitcast %"class.fxcrt::RetainPtr.13"* %28 to i64*
  store i64 %31, i64* %32, align 8, !alias.scope !11
  %33 = getelementptr inbounds i8, i8* %29, i64 8
  %34 = bitcast i8* %33 to i64*
  %35 = load i64, i64* %34, align 8, !noalias !11
  %36 = add nsw i64 %35, 1
  store i64 %36, i64* %34, align 8, !noalias !11
  %37 = bitcast i8* %29 to %class.CPDF_PatternCS*
  tail call void @_ZN14CPDF_PatternCS22InitializeStockPatternEv(%class.CPDF_PatternCS* nonnull %37) #7
  tail call void @_ZN16CPDF_FontGlobals6CreateEv() #7
  %38 = tail call %class.CPDF_FontGlobals* @_ZN16CPDF_FontGlobals11GetInstanceEv() #7
  tail call void @_ZN16CPDF_FontGlobals16LoadEmbeddedMapsEv(%class.CPDF_FontGlobals* %38) #7
  ret void
}

declare void @_ZN14CPDF_PatternCS22InitializeStockPatternEv(%class.CPDF_PatternCS*) local_unnamed_addr #4

declare void @_ZN16CPDF_FontGlobals6CreateEv() local_unnamed_addr #4

declare %class.CPDF_FontGlobals* @_ZN16CPDF_FontGlobals11GetInstanceEv() local_unnamed_addr #4

declare void @_ZN16CPDF_FontGlobals16LoadEmbeddedMapsEv(%class.CPDF_FontGlobals*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_PageModuleD2Ev(%class.CPDF_PageModule* nocapture) unnamed_addr #0 align 2 {
  tail call void @_ZN16CPDF_FontGlobals7DestroyEv() #7
  %2 = getelementptr inbounds %class.CPDF_PageModule, %class.CPDF_PageModule* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CPDF_PatternCS*, %class.CPDF_PatternCS** %2, align 8
  store %class.CPDF_PatternCS* null, %class.CPDF_PatternCS** %2, align 8
  %4 = icmp eq %class.CPDF_PatternCS* %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CPDF_PatternCS, %class.CPDF_PatternCS* %3, i64 0, i32 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = add nsw i64 %7, -1
  store i64 %8, i64* %6, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.CPDF_PatternCS, %class.CPDF_PatternCS* %3, i64 0, i32 0, i32 0
  %12 = bitcast %class.CPDF_PatternCS* %3 to void (%"class.fxcrt::Retainable"*)***
  %13 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %13, i64 1
  %15 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %14, align 8
  tail call void %15(%"class.fxcrt::Retainable"* nonnull %11) #7
  br label %16

16:                                               ; preds = %1, %5, %10
  %17 = getelementptr inbounds %class.CPDF_PageModule, %class.CPDF_PageModule* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %18 = load %class.CPDF_DeviceCS*, %class.CPDF_DeviceCS** %17, align 8
  store %class.CPDF_DeviceCS* null, %class.CPDF_DeviceCS** %17, align 8
  %19 = icmp eq %class.CPDF_DeviceCS* %18, null
  br i1 %19, label %31, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.CPDF_DeviceCS, %class.CPDF_DeviceCS* %18, i64 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = add nsw i64 %22, -1
  store i64 %23, i64* %21, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %31

25:                                               ; preds = %20
  %26 = getelementptr inbounds %class.CPDF_DeviceCS, %class.CPDF_DeviceCS* %18, i64 0, i32 0, i32 0
  %27 = bitcast %class.CPDF_DeviceCS* %18 to void (%"class.fxcrt::Retainable"*)***
  %28 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %28, i64 1
  %30 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %29, align 8
  tail call void %30(%"class.fxcrt::Retainable"* nonnull %26) #7
  br label %31

31:                                               ; preds = %16, %20, %25
  %32 = getelementptr inbounds %class.CPDF_PageModule, %class.CPDF_PageModule* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %33 = load %class.CPDF_DeviceCS*, %class.CPDF_DeviceCS** %32, align 8
  store %class.CPDF_DeviceCS* null, %class.CPDF_DeviceCS** %32, align 8
  %34 = icmp eq %class.CPDF_DeviceCS* %33, null
  br i1 %34, label %46, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %class.CPDF_DeviceCS, %class.CPDF_DeviceCS* %33, i64 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = add nsw i64 %37, -1
  store i64 %38, i64* %36, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %40, label %46

40:                                               ; preds = %35
  %41 = getelementptr inbounds %class.CPDF_DeviceCS, %class.CPDF_DeviceCS* %33, i64 0, i32 0, i32 0
  %42 = bitcast %class.CPDF_DeviceCS* %33 to void (%"class.fxcrt::Retainable"*)***
  %43 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %43, i64 1
  %45 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %44, align 8
  tail call void %45(%"class.fxcrt::Retainable"* nonnull %41) #7
  br label %46

46:                                               ; preds = %31, %35, %40
  %47 = getelementptr inbounds %class.CPDF_PageModule, %class.CPDF_PageModule* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load %class.CPDF_DeviceCS*, %class.CPDF_DeviceCS** %47, align 8
  store %class.CPDF_DeviceCS* null, %class.CPDF_DeviceCS** %47, align 8
  %49 = icmp eq %class.CPDF_DeviceCS* %48, null
  br i1 %49, label %61, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %class.CPDF_DeviceCS, %class.CPDF_DeviceCS* %48, i64 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = add nsw i64 %52, -1
  store i64 %53, i64* %51, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %61

55:                                               ; preds = %50
  %56 = getelementptr inbounds %class.CPDF_DeviceCS, %class.CPDF_DeviceCS* %48, i64 0, i32 0, i32 0
  %57 = bitcast %class.CPDF_DeviceCS* %48 to void (%"class.fxcrt::Retainable"*)***
  %58 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %58, i64 1
  %60 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %59, align 8
  tail call void %60(%"class.fxcrt::Retainable"* nonnull %56) #7
  br label %61

61:                                               ; preds = %46, %50, %55
  ret void
}

declare void @_ZN16CPDF_FontGlobals7DestroyEv() local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN15CPDF_PageModule10GetStockCSEN15CPDF_ColorSpace6FamilyE(%"class.fxcrt::RetainPtr.17"* noalias nocapture sret, %class.CPDF_PageModule* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  switch i32 %2, label %47 [
    i32 1, label %4
    i32 2, label %14
    i32 3, label %25
    i32 11, label %36
  ]

4:                                                ; preds = %3
  %5 = bitcast %class.CPDF_PageModule* %1 to %class.CPDF_ColorSpace**
  %6 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %5, align 8
  %7 = ptrtoint %class.CPDF_ColorSpace* %6 to i64
  %8 = bitcast %"class.fxcrt::RetainPtr.17"* %0 to i64*
  store i64 %7, i64* %8, align 8
  %9 = icmp eq %class.CPDF_ColorSpace* %6, null
  br i1 %9, label %49, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %6, i64 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = add nsw i64 %12, 1
  store i64 %13, i64* %11, align 8
  br label %49

14:                                               ; preds = %3
  %15 = getelementptr inbounds %class.CPDF_PageModule, %class.CPDF_PageModule* %1, i64 0, i32 1
  %16 = bitcast %"class.fxcrt::RetainPtr"* %15 to %class.CPDF_ColorSpace**
  %17 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %16, align 8
  %18 = ptrtoint %class.CPDF_ColorSpace* %17 to i64
  %19 = bitcast %"class.fxcrt::RetainPtr.17"* %0 to i64*
  store i64 %18, i64* %19, align 8
  %20 = icmp eq %class.CPDF_ColorSpace* %17, null
  br i1 %20, label %49, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %17, i64 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = add nsw i64 %23, 1
  store i64 %24, i64* %22, align 8
  br label %49

25:                                               ; preds = %3
  %26 = getelementptr inbounds %class.CPDF_PageModule, %class.CPDF_PageModule* %1, i64 0, i32 2
  %27 = bitcast %"class.fxcrt::RetainPtr"* %26 to %class.CPDF_ColorSpace**
  %28 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %27, align 8
  %29 = ptrtoint %class.CPDF_ColorSpace* %28 to i64
  %30 = bitcast %"class.fxcrt::RetainPtr.17"* %0 to i64*
  store i64 %29, i64* %30, align 8
  %31 = icmp eq %class.CPDF_ColorSpace* %28, null
  br i1 %31, label %49, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %28, i64 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = add nsw i64 %34, 1
  store i64 %35, i64* %33, align 8
  br label %49

36:                                               ; preds = %3
  %37 = getelementptr inbounds %class.CPDF_PageModule, %class.CPDF_PageModule* %1, i64 0, i32 3
  %38 = bitcast %"class.fxcrt::RetainPtr.13"* %37 to %class.CPDF_ColorSpace**
  %39 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %38, align 8
  %40 = ptrtoint %class.CPDF_ColorSpace* %39 to i64
  %41 = bitcast %"class.fxcrt::RetainPtr.17"* %0 to i64*
  store i64 %40, i64* %41, align 8
  %42 = icmp eq %class.CPDF_ColorSpace* %39, null
  br i1 %42, label %49, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %39, i64 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = add nsw i64 %45, 1
  store i64 %46, i64* %44, align 8
  br label %49

47:                                               ; preds = %3
  %48 = bitcast %"class.fxcrt::RetainPtr.17"* %0 to i64*
  store i64 0, i64* %48, align 8
  br label %49

49:                                               ; preds = %43, %36, %32, %25, %21, %14, %10, %4, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_PageModule14ClearStockFontEP13CPDF_Document(%class.CPDF_PageModule* nocapture readnone, %class.CPDF_Document*) local_unnamed_addr #0 align 2 {
  %3 = tail call %class.CPDF_FontGlobals* @_ZN16CPDF_FontGlobals11GetInstanceEv() #7
  tail call void @_ZN16CPDF_FontGlobals5ClearEP13CPDF_Document(%class.CPDF_FontGlobals* %3, %class.CPDF_Document* %1) #7
  ret void
}

declare void @_ZN16CPDF_FontGlobals5ClearEP13CPDF_Document(%class.CPDF_FontGlobals*, %class.CPDF_Document*) local_unnamed_addr #4

declare void @_ZN13CPDF_DeviceCSC1EN15CPDF_ColorSpace6FamilyE(%class.CPDF_DeviceCS*, i32) unnamed_addr #4

declare void @_ZN14CPDF_PatternCSC1EP13CPDF_Document(%class.CPDF_PatternCS*, %class.CPDF_Document*) unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { builtin nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN6pdfium10MakeRetainI13CPDF_DeviceCSJN15CPDF_ColorSpace6FamilyEEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!4 = distinct !{!4, !"_ZN6pdfium10MakeRetainI13CPDF_DeviceCSJN15CPDF_ColorSpace6FamilyEEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN6pdfium10MakeRetainI13CPDF_DeviceCSJN15CPDF_ColorSpace6FamilyEEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!7 = distinct !{!7, !"_ZN6pdfium10MakeRetainI13CPDF_DeviceCSJN15CPDF_ColorSpace6FamilyEEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN6pdfium10MakeRetainI13CPDF_DeviceCSJN15CPDF_ColorSpace6FamilyEEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!10 = distinct !{!10, !"_ZN6pdfium10MakeRetainI13CPDF_DeviceCSJN15CPDF_ColorSpace6FamilyEEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN6pdfium10MakeRetainI14CPDF_PatternCSJDnEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!13 = distinct !{!13, !"_ZN6pdfium10MakeRetainI14CPDF_PatternCSJDnEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
