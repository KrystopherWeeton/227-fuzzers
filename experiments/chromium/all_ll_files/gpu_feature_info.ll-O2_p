; ModuleID = '../../gpu/config/gpu_feature_info.cc'
source_filename = "../../gpu/config/gpu_feature_info.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.gpu::GpuFeatureInfo" = type { [10 x i32], %"class.std::__1::vector", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.6", %"class.std::__1::vector.6", %"class.std::__1::vector.13" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { i32*, i32*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i32* }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { i32*, i32*, %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { i32* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.gl::GLContext" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8], %"class.base::SupportsWeakPtr", %"struct.gl::GLWorkarounds", [6 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.53", %"class.gl::RealGLApi"*, %class.scoped_refptr.59, %"class.gl::GLContext"*, i8, [7 x i8], %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.75", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.21" }
%"struct.std::__1::atomic.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__cxx_atomic_impl.24" }
%"struct.std::__1::__cxx_atomic_impl.24" = type { %"struct.std::__1::__cxx_atomic_base_impl.25" }
%"struct.std::__1::__cxx_atomic_base_impl.25" = type { i8 }
%"struct.gl::GLWorkarounds" = type { i8, i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.gl::DriverGL"* }
%"struct.gl::DriverGL" = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.gl::GLImplementationWrapper"* }
%"class.gl::GLImplementationWrapper" = type { %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.44", %"class.gl::GLApi"* }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.gl::GLApi"* }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.gl::TraceGLApi"* }
%"class.gl::TraceGLApi" = type opaque
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.gl::LogGLApi"* }
%"class.gl::LogGLApi" = type opaque
%"class.gl::GLApi" = type opaque
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"struct.gl::CurrentGL"* }
%"struct.gl::CurrentGL" = type opaque
%"class.gl::RealGLApi" = type opaque
%class.scoped_refptr.59 = type { %"class.gl::GLShareGroup"* }
%"class.gl::GLShareGroup" = type { %"class.base::RefCounted.60", %"class.std::__1::set", %"class.gl::GLContext"* }
%"class.base::RefCounted.60" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { i64 }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.gl::GLStateRestorer"* }
%"class.gl::GLStateRestorer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.gl::GLVersionInfo"* }
%"struct.gl::GLVersionInfo" = type opaque

$_ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZNSt3__16vectorIN3gfx12BufferFormatENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

@_ZN3gpu14GpuFeatureInfoC1Ev = hidden unnamed_addr alias void (%"struct.gpu::GpuFeatureInfo"*), void (%"struct.gpu::GpuFeatureInfo"*)* @_ZN3gpu14GpuFeatureInfoC2Ev
@_ZN3gpu14GpuFeatureInfoC1ERKS0_ = hidden unnamed_addr alias void (%"struct.gpu::GpuFeatureInfo"*, %"struct.gpu::GpuFeatureInfo"*), void (%"struct.gpu::GpuFeatureInfo"*, %"struct.gpu::GpuFeatureInfo"*)* @_ZN3gpu14GpuFeatureInfoC2ERKS0_
@_ZN3gpu14GpuFeatureInfoC1EOS0_ = hidden unnamed_addr alias void (%"struct.gpu::GpuFeatureInfo"*, %"struct.gpu::GpuFeatureInfo"*), void (%"struct.gpu::GpuFeatureInfo"*, %"struct.gpu::GpuFeatureInfo"*)* @_ZN3gpu14GpuFeatureInfoC2EOS0_
@_ZN3gpu14GpuFeatureInfoD1Ev = hidden unnamed_addr alias void (%"struct.gpu::GpuFeatureInfo"*), void (%"struct.gpu::GpuFeatureInfo"*)* @_ZN3gpu14GpuFeatureInfoD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu14GpuFeatureInfoC2Ev(%"struct.gpu::GpuFeatureInfo"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 1
  %3 = bitcast %"class.std::__1::vector"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 144, i1 false)
  %4 = bitcast %"struct.gpu::GpuFeatureInfo"* %0 to <4 x i32>*
  store <4 x i32> <i32 4, i32 4, i32 4, i32 4>, <4 x i32>* %4, align 4
  %5 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 0, i64 4
  %6 = bitcast i32* %5 to <4 x i32>*
  store <4 x i32> <i32 4, i32 4, i32 4, i32 4>, <4 x i32>* %6, align 4
  %7 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 0, i64 8
  store i32 4, i32* %7, align 4
  %8 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 0, i64 9
  store i32 4, i32* %8, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu14GpuFeatureInfoC2ERKS0_(%"struct.gpu::GpuFeatureInfo"*, %"struct.gpu::GpuFeatureInfo"* nocapture readonly dereferenceable(184)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.gpu::GpuFeatureInfo"* %0 to i8*
  %4 = bitcast %"struct.gpu::GpuFeatureInfo"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 40, i1 false)
  %5 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 1
  %7 = bitcast %"class.std::__1::vector"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #8
  %8 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %6 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp eq i64 %13, 0
  br i1 %15, label %43, label %16

16:                                               ; preds = %2
  %17 = icmp ugt i64 %14, 4611686018427387903
  br i1 %17, label %18, label %20

18:                                               ; preds = %16
  %19 = bitcast %"class.std::__1::vector"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %19) #9
  unreachable

20:                                               ; preds = %16
  %21 = tail call i8* @_Znwm(i64 %13) #10
  %22 = bitcast i8* %21 to i32*
  %23 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 1, i32 0, i32 1
  %24 = bitcast i32** %23 to i8**
  store i8* %21, i8** %24, align 8
  %25 = bitcast %"class.std::__1::vector"* %5 to i8**
  store i8* %21, i8** %25, align 8
  %26 = getelementptr inbounds i32, i32* %22, i64 %14
  %27 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store i32* %26, i32** %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %29 = load i32*, i32** %28, align 8
  %30 = load i64, i64* %9, align 8
  %31 = bitcast i32** %23 to i64*
  %32 = ptrtoint i8* %21 to i64
  %33 = ptrtoint i32* %29 to i64
  %34 = sub i64 %30, %33
  %35 = icmp sgt i64 %34, 0
  br i1 %35, label %36, label %41

36:                                               ; preds = %20
  %37 = lshr exact i64 %34, 2
  %38 = bitcast i32* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %21, i8* align 4 %38, i64 %34, i1 false) #8
  %39 = getelementptr inbounds i32, i32* %22, i64 %37
  %40 = ptrtoint i32* %39 to i64
  br label %41

41:                                               ; preds = %36, %20
  %42 = phi i64 [ %40, %36 ], [ %32, %20 ]
  store i64 %42, i64* %31, align 8
  br label %43

43:                                               ; preds = %2, %41
  %44 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 2
  %45 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 2
  %46 = bitcast %"class.std::__1::basic_string"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %53, label %50

50:                                               ; preds = %43
  %51 = bitcast %"class.std::__1::basic_string"* %44 to i8*
  %52 = bitcast %"class.std::__1::basic_string"* %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %52, i64 24, i1 false) #8
  br label %58

53:                                               ; preds = %43
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  %56 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %44, i8* %55, i64 %57) #8
  br label %58

58:                                               ; preds = %50, %53
  %59 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 3
  %60 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 3
  %61 = bitcast %"class.std::__1::basic_string"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %68, label %65

65:                                               ; preds = %58
  %66 = bitcast %"class.std::__1::basic_string"* %59 to i8*
  %67 = bitcast %"class.std::__1::basic_string"* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %67, i64 24, i1 false) #8
  br label %73

68:                                               ; preds = %58
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %72 = load i64, i64* %71, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %59, i8* %70, i64 %72) #8
  br label %73

73:                                               ; preds = %65, %68
  %74 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 4
  %75 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 4
  %76 = bitcast %"class.std::__1::vector.6"* %74 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 24, i1 false) #8
  %77 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 4, i32 0, i32 1
  %78 = bitcast i32** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.std::__1::vector.6"* %75 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = sub i64 %79, %81
  %83 = ashr exact i64 %82, 2
  %84 = icmp eq i64 %82, 0
  br i1 %84, label %112, label %85

85:                                               ; preds = %73
  %86 = icmp ugt i64 %83, 4611686018427387903
  br i1 %86, label %87, label %89

87:                                               ; preds = %85
  %88 = bitcast %"class.std::__1::vector.6"* %74 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %88) #9
  unreachable

89:                                               ; preds = %85
  %90 = tail call i8* @_Znwm(i64 %82) #10
  %91 = bitcast i8* %90 to i32*
  %92 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 4, i32 0, i32 1
  %93 = bitcast i32** %92 to i8**
  store i8* %90, i8** %93, align 8
  %94 = bitcast %"class.std::__1::vector.6"* %74 to i8**
  store i8* %90, i8** %94, align 8
  %95 = getelementptr inbounds i32, i32* %91, i64 %83
  %96 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  store i32* %95, i32** %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %75, i64 0, i32 0, i32 0
  %98 = load i32*, i32** %97, align 8
  %99 = load i64, i64* %78, align 8
  %100 = bitcast i32** %92 to i64*
  %101 = ptrtoint i8* %90 to i64
  %102 = ptrtoint i32* %98 to i64
  %103 = sub i64 %99, %102
  %104 = icmp sgt i64 %103, 0
  br i1 %104, label %105, label %110

105:                                              ; preds = %89
  %106 = lshr exact i64 %103, 2
  %107 = bitcast i32* %98 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %90, i8* align 4 %107, i64 %103, i1 false) #8
  %108 = getelementptr inbounds i32, i32* %91, i64 %106
  %109 = ptrtoint i32* %108 to i64
  br label %110

110:                                              ; preds = %105, %89
  %111 = phi i64 [ %109, %105 ], [ %101, %89 ]
  store i64 %111, i64* %100, align 8
  br label %112

112:                                              ; preds = %73, %110
  %113 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 5
  %114 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 5
  %115 = bitcast %"class.std::__1::vector.6"* %113 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %115, i8 0, i64 24, i1 false) #8
  %116 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 5, i32 0, i32 1
  %117 = bitcast i32** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.std::__1::vector.6"* %114 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = sub i64 %118, %120
  %122 = ashr exact i64 %121, 2
  %123 = icmp eq i64 %121, 0
  br i1 %123, label %151, label %124

124:                                              ; preds = %112
  %125 = icmp ugt i64 %122, 4611686018427387903
  br i1 %125, label %126, label %128

126:                                              ; preds = %124
  %127 = bitcast %"class.std::__1::vector.6"* %113 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %127) #9
  unreachable

128:                                              ; preds = %124
  %129 = tail call i8* @_Znwm(i64 %121) #10
  %130 = bitcast i8* %129 to i32*
  %131 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 5, i32 0, i32 1
  %132 = bitcast i32** %131 to i8**
  store i8* %129, i8** %132, align 8
  %133 = bitcast %"class.std::__1::vector.6"* %113 to i8**
  store i8* %129, i8** %133, align 8
  %134 = getelementptr inbounds i32, i32* %130, i64 %122
  %135 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  store i32* %134, i32** %135, align 8
  %136 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %114, i64 0, i32 0, i32 0
  %137 = load i32*, i32** %136, align 8
  %138 = load i64, i64* %117, align 8
  %139 = bitcast i32** %131 to i64*
  %140 = ptrtoint i8* %129 to i64
  %141 = ptrtoint i32* %137 to i64
  %142 = sub i64 %138, %141
  %143 = icmp sgt i64 %142, 0
  br i1 %143, label %144, label %149

144:                                              ; preds = %128
  %145 = lshr exact i64 %142, 2
  %146 = bitcast i32* %137 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %129, i8* align 4 %146, i64 %142, i1 false) #8
  %147 = getelementptr inbounds i32, i32* %130, i64 %145
  %148 = ptrtoint i32* %147 to i64
  br label %149

149:                                              ; preds = %144, %128
  %150 = phi i64 [ %148, %144 ], [ %140, %128 ]
  store i64 %150, i64* %139, align 8
  br label %151

151:                                              ; preds = %112, %149
  %152 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 6
  %153 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 6
  %154 = bitcast %"class.std::__1::vector.13"* %152 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %154, i8 0, i64 24, i1 false) #8
  %155 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 6, i32 0, i32 1
  %156 = bitcast i32** %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = bitcast %"class.std::__1::vector.13"* %153 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = sub i64 %157, %159
  %161 = ashr exact i64 %160, 2
  %162 = icmp eq i64 %160, 0
  br i1 %162, label %190, label %163

163:                                              ; preds = %151
  %164 = icmp ugt i64 %161, 4611686018427387903
  br i1 %164, label %165, label %167

165:                                              ; preds = %163
  %166 = bitcast %"class.std::__1::vector.13"* %152 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %166) #9
  unreachable

167:                                              ; preds = %163
  %168 = tail call i8* @_Znwm(i64 %160) #10
  %169 = bitcast i8* %168 to i32*
  %170 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 6, i32 0, i32 1
  %171 = bitcast i32** %170 to i8**
  store i8* %168, i8** %171, align 8
  %172 = bitcast %"class.std::__1::vector.13"* %152 to i8**
  store i8* %168, i8** %172, align 8
  %173 = getelementptr inbounds i32, i32* %169, i64 %161
  %174 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  store i32* %173, i32** %174, align 8
  %175 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %153, i64 0, i32 0, i32 0
  %176 = load i32*, i32** %175, align 8
  %177 = load i64, i64* %156, align 8
  %178 = bitcast i32** %170 to i64*
  %179 = ptrtoint i8* %168 to i64
  %180 = ptrtoint i32* %176 to i64
  %181 = sub i64 %177, %180
  %182 = icmp sgt i64 %181, 0
  br i1 %182, label %183, label %188

183:                                              ; preds = %167
  %184 = lshr exact i64 %181, 2
  %185 = bitcast i32* %176 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %168, i8* align 4 %185, i64 %181, i1 false) #8
  %186 = getelementptr inbounds i32, i32* %169, i64 %184
  %187 = ptrtoint i32* %186 to i64
  br label %188

188:                                              ; preds = %183, %167
  %189 = phi i64 [ %187, %183 ], [ %179, %167 ]
  store i64 %189, i64* %178, align 8
  br label %190

190:                                              ; preds = %151, %188
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu14GpuFeatureInfoC2EOS0_(%"struct.gpu::GpuFeatureInfo"* nocapture, %"struct.gpu::GpuFeatureInfo"* nocapture dereferenceable(184)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.gpu::GpuFeatureInfo"* %0 to i8*
  %4 = bitcast %"struct.gpu::GpuFeatureInfo"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 40, i1 false)
  %5 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 1
  %7 = bitcast %"class.std::__1::vector"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #8
  %8 = bitcast %"class.std::__1::vector"* %6 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %5 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 1, i32 0, i32 1
  %12 = bitcast i32** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 1, i32 0, i32 1
  %15 = bitcast i32** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast i32** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast i32** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #8
  %22 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 2
  %23 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 2
  %24 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  %25 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 24, i1 false) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #8
  %26 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 3
  %27 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 3
  %28 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  %29 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 24, i1 false) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false) #8
  %30 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 4
  %31 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 4
  %32 = bitcast %"class.std::__1::vector.6"* %30 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 24, i1 false) #8
  %33 = bitcast %"class.std::__1::vector.6"* %31 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::vector.6"* %30 to i64*
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 4, i32 0, i32 1
  %37 = bitcast i32** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 4, i32 0, i32 1
  %40 = bitcast i32** %39 to i64*
  store i64 %38, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %42 = bitcast i32** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %45 = bitcast i32** %44 to i64*
  store i64 %43, i64* %45, align 8
  %46 = bitcast %"class.std::__1::vector.6"* %31 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #8
  %47 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 5
  %48 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 5
  %49 = bitcast %"class.std::__1::vector.6"* %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 24, i1 false) #8
  %50 = bitcast %"class.std::__1::vector.6"* %48 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.std::__1::vector.6"* %47 to i64*
  store i64 %51, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 5, i32 0, i32 1
  %54 = bitcast i32** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 5, i32 0, i32 1
  %57 = bitcast i32** %56 to i64*
  store i64 %55, i64* %57, align 8
  %58 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %59 = bitcast i32** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %62 = bitcast i32** %61 to i64*
  store i64 %60, i64* %62, align 8
  %63 = bitcast %"class.std::__1::vector.6"* %48 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 24, i1 false) #8
  %64 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 6
  %65 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 6
  %66 = bitcast %"class.std::__1::vector.13"* %64 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #8
  %67 = bitcast %"class.std::__1::vector.13"* %65 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %"class.std::__1::vector.13"* %64 to i64*
  store i64 %68, i64* %69, align 8
  %70 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 6, i32 0, i32 1
  %71 = bitcast i32** %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 6, i32 0, i32 1
  %74 = bitcast i32** %73 to i64*
  store i64 %72, i64* %74, align 8
  %75 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %76 = bitcast i32** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %79 = bitcast i32** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = bitcast %"class.std::__1::vector.13"* %65 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 24, i1 false) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu14GpuFeatureInfoD2Ev(%"struct.gpu::GpuFeatureInfo"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i32* %3 to i64
  %7 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 6, i32 0, i32 1
  %8 = bitcast i32** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast i32* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #10
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 5, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = icmp eq i32* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint i32* %12 to i64
  %16 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 5, i32 0, i32 1
  %17 = bitcast i32** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast i32* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #10
  br label %19

19:                                               ; preds = %10, %14
  %20 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 4, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8
  %22 = icmp eq i32* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = ptrtoint i32* %21 to i64
  %25 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 4, i32 0, i32 1
  %26 = bitcast i32** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = bitcast i32* %21 to i8*
  tail call void @_ZdlPv(i8* %27) #10
  br label %28

28:                                               ; preds = %19, %23
  %29 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 3
  %30 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  tail call void @_ZdlPv(i8* %36) #10
  br label %37

37:                                               ; preds = %28, %34
  %38 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 2
  %39 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  tail call void @_ZdlPv(i8* %45) #10
  br label %46

46:                                               ; preds = %37, %43
  %47 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 1, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = icmp eq i32* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  %51 = ptrtoint i32* %48 to i64
  %52 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 1, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %51, i64* %53, align 8
  %54 = bitcast i32* %48 to i8*
  tail call void @_ZdlPv(i8* %54) #10
  br label %55

55:                                               ; preds = %46, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(184) %"struct.gpu::GpuFeatureInfo"* @_ZN3gpu14GpuFeatureInfoaSERKS0_(%"struct.gpu::GpuFeatureInfo"* returned, %"struct.gpu::GpuFeatureInfo"* dereferenceable(184)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.gpu::GpuFeatureInfo"* %0 to i8*
  %4 = bitcast %"struct.gpu::GpuFeatureInfo"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 40, i1 false)
  %5 = icmp eq %"struct.gpu::GpuFeatureInfo"* %0, %1
  br i1 %5, label %89, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 1, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 1, i32 0, i32 1
  %11 = load i32*, i32** %10, align 8
  tail call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %7, i32* %9, i32* %11) #8
  %12 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 2
  %13 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 2
  %14 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %17, label %32, label %22

22:                                               ; preds = %6
  br i1 %21, label %26, label %23

23:                                               ; preds = %22
  %24 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %25 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 24, i1 false) #8
  br label %42

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %12, i8* %28, i64 %30) #8
  br label %42

32:                                               ; preds = %6
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %38 = zext i8 %20 to i64
  %39 = select i1 %21, i8* %34, i8* %37
  %40 = select i1 %21, i64 %36, i64 %38
  %41 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %12, i8* %39, i64 %40) #8
  br label %42

42:                                               ; preds = %23, %26, %32
  %43 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 3
  %44 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 3
  %45 = bitcast %"class.std::__1::basic_string"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  %49 = bitcast %"class.std::__1::basic_string"* %44 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %48, label %63, label %53

53:                                               ; preds = %42
  br i1 %52, label %57, label %54

54:                                               ; preds = %53
  %55 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  %56 = bitcast %"class.std::__1::basic_string"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 24, i1 false) #8
  br label %73

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %43, i8* %59, i64 %61) #8
  br label %73

63:                                               ; preds = %42
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.std::__1::basic_string"* %44 to i8*
  %69 = zext i8 %51 to i64
  %70 = select i1 %52, i8* %65, i8* %68
  %71 = select i1 %52, i64 %67, i64 %69
  %72 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %43, i8* %70, i64 %71) #8
  br label %73

73:                                               ; preds = %54, %57, %63
  %74 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 4
  %75 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 4, i32 0, i32 0
  %76 = load i32*, i32** %75, align 8
  %77 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 4, i32 0, i32 1
  %78 = load i32*, i32** %77, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.6"* %74, i32* %76, i32* %78) #8
  %79 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 5
  %80 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 5, i32 0, i32 0
  %81 = load i32*, i32** %80, align 8
  %82 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 5, i32 0, i32 1
  %83 = load i32*, i32** %82, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.6"* %79, i32* %81, i32* %83) #8
  %84 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 6
  %85 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 6, i32 0, i32 0
  %86 = load i32*, i32** %85, align 8
  %87 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 6, i32 0, i32 1
  %88 = load i32*, i32** %87, align 8
  tail call void @_ZNSt3__16vectorIN3gfx12BufferFormatENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.13"* %84, i32* %86, i32* %88) #8
  br label %89

89:                                               ; preds = %2, %73
  ret %"struct.gpu::GpuFeatureInfo"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(184) %"struct.gpu::GpuFeatureInfo"* @_ZN3gpu14GpuFeatureInfoaSEOS0_(%"struct.gpu::GpuFeatureInfo"* returned, %"struct.gpu::GpuFeatureInfo"* nocapture dereferenceable(184)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.gpu::GpuFeatureInfo"* %0 to i8*
  %4 = bitcast %"struct.gpu::GpuFeatureInfo"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 40, i1 false)
  %5 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %2
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 1, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #10
  %15 = bitcast %"class.std::__1::vector"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #8
  br label %16

16:                                               ; preds = %2, %10
  %17 = bitcast %"class.std::__1::vector"* %6 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector"* %5 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 1, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 1, i32 0, i32 1
  %24 = bitcast i32** %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %26 = bitcast i32** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %29 = bitcast i32** %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #8
  %31 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 2
  %32 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 2
  %33 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %16
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  tail call void @_ZdlPv(i8* %39) #10
  br label %40

40:                                               ; preds = %16, %37
  %41 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  %42 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 24, i1 false) #8
  %43 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  store i8 0, i8* %44, align 1
  store i8 0, i8* %42, align 1
  %45 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 3
  %46 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 3
  %47 = bitcast %"class.std::__1::basic_string"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %40
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  tail call void @_ZdlPv(i8* %53) #10
  br label %54

54:                                               ; preds = %40, %51
  %55 = bitcast %"class.std::__1::basic_string"* %45 to i8*
  %56 = bitcast %"class.std::__1::basic_string"* %46 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 24, i1 false) #8
  %57 = bitcast %"class.std::__1::basic_string"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  store i8 0, i8* %58, align 1
  store i8 0, i8* %56, align 1
  %59 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 4
  %60 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 4
  %61 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %59, i64 0, i32 0, i32 0
  %62 = load i32*, i32** %61, align 8
  %63 = icmp eq i32* %62, null
  br i1 %63, label %70, label %64

64:                                               ; preds = %54
  %65 = ptrtoint i32* %62 to i64
  %66 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 4, i32 0, i32 1
  %67 = bitcast i32** %66 to i64*
  store i64 %65, i64* %67, align 8
  %68 = bitcast i32* %62 to i8*
  tail call void @_ZdlPv(i8* %68) #10
  %69 = bitcast %"class.std::__1::vector.6"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 24, i1 false) #8
  br label %70

70:                                               ; preds = %54, %64
  %71 = bitcast %"class.std::__1::vector.6"* %60 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = bitcast %"class.std::__1::vector.6"* %59 to i64*
  store i64 %72, i64* %73, align 8
  %74 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 4, i32 0, i32 1
  %75 = bitcast i32** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 4, i32 0, i32 1
  %78 = bitcast i32** %77 to i64*
  store i64 %76, i64* %78, align 8
  %79 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %80 = bitcast i32** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %83 = bitcast i32** %82 to i64*
  store i64 %81, i64* %83, align 8
  %84 = bitcast %"class.std::__1::vector.6"* %60 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 24, i1 false) #8
  %85 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 5
  %86 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 5
  %87 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %85, i64 0, i32 0, i32 0
  %88 = load i32*, i32** %87, align 8
  %89 = icmp eq i32* %88, null
  br i1 %89, label %96, label %90

90:                                               ; preds = %70
  %91 = ptrtoint i32* %88 to i64
  %92 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 5, i32 0, i32 1
  %93 = bitcast i32** %92 to i64*
  store i64 %91, i64* %93, align 8
  %94 = bitcast i32* %88 to i8*
  tail call void @_ZdlPv(i8* %94) #10
  %95 = bitcast %"class.std::__1::vector.6"* %85 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 24, i1 false) #8
  br label %96

96:                                               ; preds = %70, %90
  %97 = bitcast %"class.std::__1::vector.6"* %86 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.std::__1::vector.6"* %85 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 5, i32 0, i32 1
  %101 = bitcast i32** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 5, i32 0, i32 1
  %104 = bitcast i32** %103 to i64*
  store i64 %102, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %106 = bitcast i32** %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %109 = bitcast i32** %108 to i64*
  store i64 %107, i64* %109, align 8
  %110 = bitcast %"class.std::__1::vector.6"* %86 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %110, i8 0, i64 24, i1 false) #8
  %111 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 6
  %112 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 6
  %113 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %111, i64 0, i32 0, i32 0
  %114 = load i32*, i32** %113, align 8
  %115 = icmp eq i32* %114, null
  br i1 %115, label %122, label %116

116:                                              ; preds = %96
  %117 = ptrtoint i32* %114 to i64
  %118 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 6, i32 0, i32 1
  %119 = bitcast i32** %118 to i64*
  store i64 %117, i64* %119, align 8
  %120 = bitcast i32* %114 to i8*
  tail call void @_ZdlPv(i8* %120) #10
  %121 = bitcast %"class.std::__1::vector.13"* %111 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %121, i8 0, i64 24, i1 false) #8
  br label %122

122:                                              ; preds = %96, %116
  %123 = bitcast %"class.std::__1::vector.13"* %112 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.std::__1::vector.13"* %111 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 6, i32 0, i32 1
  %127 = bitcast i32** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 6, i32 0, i32 1
  %130 = bitcast i32** %129 to i64*
  store i64 %128, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %1, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %132 = bitcast i32** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %135 = bitcast i32** %134 to i64*
  store i64 %133, i64* %135, align 8
  %136 = bitcast %"class.std::__1::vector.13"* %112 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %136, i8 0, i64 24, i1 false) #8
  ret %"struct.gpu::GpuFeatureInfo"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gpu14GpuFeatureInfo16ApplyToGLContextEPN2gl9GLContextE(%"struct.gpu::GpuFeatureInfo"*, %"class.gl::GLContext"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.gl::GLWorkarounds", align 1
  %4 = getelementptr inbounds %"struct.gl::GLWorkarounds", %"struct.gl::GLWorkarounds"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"struct.gl::GLWorkarounds", %"struct.gl::GLWorkarounds"* %3, i64 0, i32 1
  store i8 0, i8* %4, align 1
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = load i32*, i32** %8, align 8
  %10 = icmp eq i32* %7, %9
  br i1 %10, label %18, label %11

11:                                               ; preds = %2, %15
  %12 = phi i32* [ %16, %15 ], [ %7, %2 ]
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 8
  br i1 %14, label %18, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds i32, i32* %12, i64 1
  %17 = icmp eq i32* %16, %9
  br i1 %17, label %22, label %11

18:                                               ; preds = %11, %2
  %19 = phi i32* [ %7, %2 ], [ %12, %11 ]
  %20 = icmp eq i32* %19, %9
  br i1 %20, label %22, label %21

21:                                               ; preds = %18
  store i8 1, i8* %4, align 1
  br label %22

22:                                               ; preds = %15, %18, %21
  br i1 %10, label %30, label %23

23:                                               ; preds = %22, %27
  %24 = phi i32* [ %28, %27 ], [ %7, %22 ]
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 106
  br i1 %26, label %30, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds i32, i32* %24, i64 1
  %29 = icmp eq i32* %28, %9
  br i1 %29, label %34, label %23

30:                                               ; preds = %23, %22
  %31 = phi i32* [ %7, %22 ], [ %24, %23 ]
  %32 = icmp eq i32* %31, %9
  br i1 %32, label %34, label %33

33:                                               ; preds = %30
  store i8 1, i8* %5, align 1
  br label %34

34:                                               ; preds = %27, %30, %33
  call void @_ZN2gl9GLContext16SetGLWorkaroundsERKNS_13GLWorkaroundsE(%"class.gl::GLContext"* %1, %"struct.gl::GLWorkarounds"* nonnull dereferenceable(2) %3) #8
  %35 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 2
  call void @_ZN2gl9GLContext23SetDisabledGLExtensionsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::GLContext"* %1, %"class.std::__1::basic_string"* dereferenceable(24) %35) #8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %4) #8
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gpu14GpuFeatureInfo19IsWorkaroundEnabledEi(%"struct.gpu::GpuFeatureInfo"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 1, i32 0, i32 1
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %4, %6
  br i1 %7, label %15, label %8

8:                                                ; preds = %2, %12
  %9 = phi i32* [ %13, %12 ], [ %4, %2 ]
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, %1
  br i1 %11, label %15, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds i32, i32* %9, i64 1
  %14 = icmp eq i32* %13, %6
  br i1 %14, label %15, label %8

15:                                               ; preds = %8, %12, %2
  %16 = phi i32* [ %4, %2 ], [ %9, %8 ], [ %6, %12 ]
  %17 = icmp ne i32* %16, %6
  ret i1 %17
}

declare void @_ZN2gl9GLContext16SetGLWorkaroundsERKNS_13GLWorkaroundsE(%"class.gl::GLContext"*, %"struct.gl::GLWorkarounds"* dereferenceable(2)) local_unnamed_addr #3

declare void @_ZN2gl9GLContext23SetDisabledGLExtensionsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::GLContext"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gpu14GpuFeatureInfo13IsInitializedEv(%"struct.gpu::GpuFeatureInfo"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"struct.gpu::GpuFeatureInfo", %"struct.gpu::GpuFeatureInfo"* %0, i64 0, i32 0, i64 7
  %3 = load i32, i32* %2, align 4
  %4 = icmp ne i32 %3, 4
  ret i1 %4
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #8
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #8
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #10
  %55 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #8
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #9
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #9
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #10
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #8
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.6"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.6"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #8
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #8
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #10
  %55 = bitcast %"class.std::__1::vector.6"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #8
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.6"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #9
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.6"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #9
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #10
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.6"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #8
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3gfx12BufferFormatENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.13"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.13"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #8
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #8
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #10
  %55 = bitcast %"class.std::__1::vector.13"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #8
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.13"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #9
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.13"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #9
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #10
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.13"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #8
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
