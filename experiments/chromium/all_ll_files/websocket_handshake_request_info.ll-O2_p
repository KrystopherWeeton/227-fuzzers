; ModuleID = '../../net/websockets/websocket_handshake_request_info.cc'
source_filename = "../../net/websockets/websocket_handshake_request_info.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.net::WebSocketHandshakeRequestInfo" = type { %class.GURL, %"class.net::HttpRequestHeaders", %"class.base::Time" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.net::HttpRequestHeaders" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"class.std::__1::__compressed_pair.4" }
%"struct.net::HttpRequestHeaders::HeaderKeyValuePair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }

@_ZN3net29WebSocketHandshakeRequestInfoC1ERK4GURLN4base4TimeE = hidden unnamed_addr alias void (%"struct.net::WebSocketHandshakeRequestInfo"*, %class.GURL*, i64), void (%"struct.net::WebSocketHandshakeRequestInfo"*, %class.GURL*, i64)* @_ZN3net29WebSocketHandshakeRequestInfoC2ERK4GURLN4base4TimeE
@_ZN3net29WebSocketHandshakeRequestInfoD1Ev = hidden unnamed_addr alias void (%"struct.net::WebSocketHandshakeRequestInfo"*), void (%"struct.net::WebSocketHandshakeRequestInfo"*)* @_ZN3net29WebSocketHandshakeRequestInfoD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net29WebSocketHandshakeRequestInfoC2ERK4GURLN4base4TimeE(%"struct.net::WebSocketHandshakeRequestInfo"*, %class.GURL* dereferenceable(120), i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.net::WebSocketHandshakeRequestInfo", %"struct.net::WebSocketHandshakeRequestInfo"* %0, i64 0, i32 0
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %4, %class.GURL* dereferenceable(120) %1) #3
  %5 = getelementptr inbounds %"struct.net::WebSocketHandshakeRequestInfo", %"struct.net::WebSocketHandshakeRequestInfo"* %0, i64 0, i32 1
  tail call void @_ZN3net18HttpRequestHeadersC1Ev(%"class.net::HttpRequestHeaders"* %5) #3
  %6 = getelementptr inbounds %"struct.net::WebSocketHandshakeRequestInfo", %"struct.net::WebSocketHandshakeRequestInfo"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %2, i64* %6, align 8
  ret void
}

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #1

declare void @_ZN3net18HttpRequestHeadersC1Ev(%"class.net::HttpRequestHeaders"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net29WebSocketHandshakeRequestInfoD2Ev(%"struct.net::WebSocketHandshakeRequestInfo"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::WebSocketHandshakeRequestInfo", %"struct.net::WebSocketHandshakeRequestInfo"* %0, i64 0, i32 1
  tail call void @_ZN3net18HttpRequestHeadersD1Ev(%"class.net::HttpRequestHeaders"* %2) #3
  %3 = getelementptr inbounds %"struct.net::WebSocketHandshakeRequestInfo", %"struct.net::WebSocketHandshakeRequestInfo"* %0, i64 0, i32 0
  tail call void @_ZN4GURLD1Ev(%class.GURL* %3) #3
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net18HttpRequestHeadersD1Ev(%"class.net::HttpRequestHeaders"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
