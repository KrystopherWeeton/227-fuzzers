; ModuleID = '../../chrome/browser/sharing/sharing_app.cc'
source_filename = "../../chrome/browser/sharing/sharing_app.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SharingApp = type { %"struct.gfx::VectorIcon"*, %"class.gfx::Image", %"class.std::__1::basic_string", %"class.std::__1::basic_string.1" }
%"class.gfx::Image" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.gfx::internal::ImageStorage"* }
%"class.gfx::internal::ImageStorage" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::basic_string.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.4 }
%union.anon.4 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.gfx::VectorIcon" = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.5 }
%struct.anon.5 = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }

@_ZN10SharingAppC1EPKN3gfx10VectorIconERKNS0_5ImageENSt3__112basic_stringIDsNS7_11char_traitsIDsEENS7_9allocatorIDsEEEENS8_IcNS9_IcEENSB_IcEEEE = hidden unnamed_addr alias void (%struct.SharingApp*, %"struct.gfx::VectorIcon"*, %"class.gfx::Image"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string.1"*), void (%struct.SharingApp*, %"struct.gfx::VectorIcon"*, %"class.gfx::Image"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string.1"*)* @_ZN10SharingAppC2EPKN3gfx10VectorIconERKNS0_5ImageENSt3__112basic_stringIDsNS7_11char_traitsIDsEENS7_9allocatorIDsEEEENS8_IcNS9_IcEENSB_IcEEEE
@_ZN10SharingAppC1EOS_ = hidden unnamed_addr alias void (%struct.SharingApp*, %struct.SharingApp*), void (%struct.SharingApp*, %struct.SharingApp*)* @_ZN10SharingAppC2EOS_
@_ZN10SharingAppD1Ev = hidden unnamed_addr alias void (%struct.SharingApp*), void (%struct.SharingApp*)* @_ZN10SharingAppD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SharingAppC2EPKN3gfx10VectorIconERKNS0_5ImageENSt3__112basic_stringIDsNS7_11char_traitsIDsEENS7_9allocatorIDsEEEENS8_IcNS9_IcEENSB_IcEEEE(%struct.SharingApp*, %"struct.gfx::VectorIcon"*, %"class.gfx::Image"* dereferenceable(8), %"class.std::__1::basic_string"* nocapture, %"class.std::__1::basic_string.1"* nocapture) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %struct.SharingApp, %struct.SharingApp* %0, i64 0, i32 0
  store %"struct.gfx::VectorIcon"* %1, %"struct.gfx::VectorIcon"** %6, align 8
  %7 = getelementptr inbounds %struct.SharingApp, %struct.SharingApp* %0, i64 0, i32 1
  tail call void @_ZN3gfx5ImageC1ERKS0_(%"class.gfx::Image"* %7, %"class.gfx::Image"* dereferenceable(8) %2) #5
  %8 = getelementptr inbounds %struct.SharingApp, %struct.SharingApp* %0, i64 0, i32 2
  %9 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %10 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false) #5
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #5
  %11 = getelementptr inbounds %struct.SharingApp, %struct.SharingApp* %0, i64 0, i32 3
  %12 = bitcast %"class.std::__1::basic_string.1"* %11 to i8*
  %13 = bitcast %"class.std::__1::basic_string.1"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false) #5
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #5
  ret void
}

declare void @_ZN3gfx5ImageC1ERKS0_(%"class.gfx::Image"*, %"class.gfx::Image"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SharingAppC2EOS_(%struct.SharingApp*, %struct.SharingApp* dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = bitcast %struct.SharingApp* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %struct.SharingApp* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %struct.SharingApp, %struct.SharingApp* %0, i64 0, i32 1
  %7 = getelementptr inbounds %struct.SharingApp, %struct.SharingApp* %1, i64 0, i32 1
  tail call void @_ZN3gfx5ImageC1EOS0_(%"class.gfx::Image"* %6, %"class.gfx::Image"* dereferenceable(8) %7) #5
  %8 = getelementptr inbounds %struct.SharingApp, %struct.SharingApp* %0, i64 0, i32 2
  %9 = getelementptr inbounds %struct.SharingApp, %struct.SharingApp* %1, i64 0, i32 2
  %10 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %11 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false) #5
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #5
  %12 = getelementptr inbounds %struct.SharingApp, %struct.SharingApp* %0, i64 0, i32 3
  %13 = getelementptr inbounds %struct.SharingApp, %struct.SharingApp* %1, i64 0, i32 3
  %14 = bitcast %"class.std::__1::basic_string.1"* %12 to i8*
  %15 = bitcast %"class.std::__1::basic_string.1"* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false) #5
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3gfx5ImageC1EOS0_(%"class.gfx::Image"*, %"class.gfx::Image"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SharingAppD2Ev(%struct.SharingApp*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %struct.SharingApp, %struct.SharingApp* %0, i64 0, i32 3
  %3 = bitcast %"class.std::__1::basic_string.1"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #6
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %struct.SharingApp, %struct.SharingApp* %0, i64 0, i32 2
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %12, i64 0, i32 1, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = bitcast %"class.std::__1::basic_string"* %11 to i8**
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #6
  br label %19

19:                                               ; preds = %10, %16
  %20 = getelementptr inbounds %struct.SharingApp, %struct.SharingApp* %0, i64 0, i32 1
  tail call void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"* %20) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
