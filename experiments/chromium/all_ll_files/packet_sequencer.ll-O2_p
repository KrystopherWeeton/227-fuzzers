; ModuleID = '../../third_party/webrtc/modules/rtp_rtcp/source/packet_sequencer.cc'
source_filename = "../../third_party/webrtc/modules/rtp_rtcp/source/packet_sequencer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::PacketSequencer" = type <{ i32, i32, i8, [7 x i8], %"class.webrtc::Clock"*, i16, i16, i8, [3 x i8], i32, [4 x i8], i64, i64, i8, [7 x i8] }>
%"class.webrtc::Clock" = type { i32 (...)** }
%"class.webrtc::RtpPacketToSend" = type <{ %"class.webrtc::RtpPacket", i64, %"class.absl::optional", i8, i8, %"class.absl::optional.5", [2 x i8], %"class.rtc::scoped_refptr.10", i8, i8, i8, i8, [4 x i8] }>
%"class.webrtc::RtpPacket" = type { i8, i8, i8, i16, i32, i32, i64, i64, %"class.webrtc::RtpHeaderExtensionMap", %"class.std::__1::vector", i64, %"class.rtc::CopyOnWriteBuffer" }
%"class.webrtc::RtpHeaderExtensionMap" = type { [21 x i8], i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.webrtc::RtpPacket::ExtensionInfo"*, %"struct.webrtc::RtpPacket::ExtensionInfo"*, %"class.std::__1::__compressed_pair" }
%"struct.webrtc::RtpPacket::ExtensionInfo" = type { i8, i8, i16 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.webrtc::RtpPacket::ExtensionInfo"* }
%"class.rtc::CopyOnWriteBuffer" = type { %"class.rtc::scoped_refptr", i64, i64 }
%"class.rtc::scoped_refptr" = type { %"class.rtc::FinalRefCountedObject"* }
%"class.rtc::FinalRefCountedObject" = type <{ %"class.rtc::BufferT", %"class.webrtc::webrtc_impl::RefCounter", [4 x i8] }>
%"class.rtc::BufferT" = type { i64, i64, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i8* }
%"class.webrtc::webrtc_impl::RefCounter" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.absl::optional.5" = type { %"class.absl::optional_internal::optional_data.6" }
%"class.absl::optional_internal::optional_data.6" = type { %"class.absl::optional_internal::optional_data_base.7" }
%"class.absl::optional_internal::optional_data_base.7" = type { %"class.absl::optional_internal::optional_data_dtor_base.8" }
%"class.absl::optional_internal::optional_data_dtor_base.8" = type { i8, %union.anon.9 }
%union.anon.9 = type { i16 }
%"class.rtc::scoped_refptr.10" = type { %"class.rtc::RefCountedBase"* }
%"class.rtc::RefCountedBase" = type <{ i32 (...)**, %"class.webrtc::webrtc_impl::RefCounter", [4 x i8] }>
%"struct.webrtc::RtpState" = type <{ i16, [2 x i8], i32, i32, [4 x i8], i64, i64, i8, [7 x i8] }>

@_ZN6webrtc15PacketSequencerC1EjjbPNS_5ClockE = hidden unnamed_addr alias void (%"class.webrtc::PacketSequencer"*, i32, i32, i1, %"class.webrtc::Clock"*), void (%"class.webrtc::PacketSequencer"*, i32, i32, i1, %"class.webrtc::Clock"*)* @_ZN6webrtc15PacketSequencerC2EjjbPNS_5ClockE

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc15PacketSequencerC2EjjbPNS_5ClockE(%"class.webrtc::PacketSequencer"* nocapture, i32, i32, i1 zeroext, %"class.webrtc::Clock"*) unnamed_addr #0 align 2 {
  %6 = zext i1 %3 to i8
  %7 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 0
  store i32 %1, i32* %7, align 8
  %8 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 1
  store i32 %2, i32* %8, align 4
  %9 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 2
  store i8 %6, i8* %9, align 8
  %10 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 4
  store %"class.webrtc::Clock"* %4, %"class.webrtc::Clock"** %10, align 8
  %11 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 5
  store i16 0, i16* %11, align 8
  %12 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 6
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 7
  store i8 -1, i8* %13, align 4
  %14 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 9
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 11
  %16 = bitcast i64* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 17, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6webrtc15PacketSequencer8SequenceERNS_15RtpPacketToSendE(%"class.webrtc::PacketSequencer"* nocapture, %"class.webrtc::RtpPacketToSend"* dereferenceable(160)) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.rtc::CopyOnWriteBuffer", align 8
  %4 = getelementptr inbounds %"class.webrtc::RtpPacketToSend", %"class.webrtc::RtpPacketToSend"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 8
  %6 = getelementptr inbounds %"class.webrtc::RtpPacketToSend", %"class.webrtc::RtpPacketToSend"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp ne i8 %5, 0
  %9 = icmp eq i64 %7, 4
  %10 = and i1 %8, %9
  br i1 %10, label %11, label %13

11:                                               ; preds = %2
  %12 = tail call zeroext i1 @_ZN6webrtc15PacketSequencer21PopulatePaddingFieldsERNS_15RtpPacketToSendE(%"class.webrtc::PacketSequencer"* %0, %"class.webrtc::RtpPacketToSend"* dereferenceable(160) %1)
  br i1 %12, label %13, label %83

13:                                               ; preds = %2, %11
  %14 = getelementptr inbounds %"class.webrtc::RtpPacketToSend", %"class.webrtc::RtpPacketToSend"* %1, i64 0, i32 0
  %15 = getelementptr inbounds %"class.webrtc::RtpPacketToSend", %"class.webrtc::RtpPacketToSend"* %1, i64 0, i32 0, i32 5
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %79

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 5
  %22 = load i16, i16* %21, align 8
  %23 = add i16 %22, 1
  store i16 %23, i16* %21, align 8
  tail call void @_ZN6webrtc9RtpPacket17SetSequenceNumberEt(%"class.webrtc::RtpPacket"* %14, i16 zeroext %22) #6
  %24 = load i8, i8* %4, align 8
  %25 = load i64, i64* %6, align 8
  %26 = icmp eq i8 %24, 0
  %27 = icmp ne i64 %25, 4
  %28 = or i1 %26, %27
  br i1 %28, label %29, label %83

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.webrtc::RtpPacketToSend", %"class.webrtc::RtpPacketToSend"* %1, i64 0, i32 0, i32 0
  %31 = load i8, i8* %30, align 8, !range !2
  %32 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 13
  store i8 %31, i8* %32, align 8
  %33 = getelementptr inbounds %"class.webrtc::RtpPacketToSend", %"class.webrtc::RtpPacketToSend"* %1, i64 0, i32 11
  %34 = load i8, i8* %33, align 1, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %58, label %36

36:                                               ; preds = %29
  %37 = bitcast %"class.rtc::CopyOnWriteBuffer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #6
  %38 = getelementptr inbounds %"class.webrtc::RtpPacketToSend", %"class.webrtc::RtpPacketToSend"* %1, i64 0, i32 0, i32 11
  %39 = getelementptr inbounds %"class.webrtc::RtpPacketToSend", %"class.webrtc::RtpPacketToSend"* %1, i64 0, i32 0, i32 6
  %40 = load i64, i64* %39, align 8, !noalias !3
  %41 = getelementptr inbounds %"class.webrtc::RtpPacketToSend", %"class.webrtc::RtpPacketToSend"* %1, i64 0, i32 0, i32 7
  %42 = load i64, i64* %41, align 8, !noalias !3
  %43 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %3, i64 0, i32 1
  %44 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %3, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 24, i1 false) #6, !alias.scope !6
  call void @_ZN3rtc17CopyOnWriteBufferC1ERKS0_(%"class.rtc::CopyOnWriteBuffer"* nonnull %3, %"class.rtc::CopyOnWriteBuffer"* dereferenceable(24) %38) #6
  %45 = load i64, i64* %43, align 8, !alias.scope !6
  %46 = add i64 %45, %40
  store i64 %46, i64* %43, align 8, !alias.scope !6
  store i64 %42, i64* %44, align 8, !alias.scope !6
  %47 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %3, i64 0, i32 0, i32 0
  %48 = load %"class.rtc::FinalRefCountedObject"*, %"class.rtc::FinalRefCountedObject"** %47, align 8
  %49 = icmp eq %"class.rtc::FinalRefCountedObject"* %48, null
  br i1 %49, label %54, label %50

50:                                               ; preds = %36
  %51 = getelementptr inbounds %"class.rtc::FinalRefCountedObject", %"class.rtc::FinalRefCountedObject"* %48, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 %46
  br label %54

54:                                               ; preds = %50, %36
  %55 = phi i8* [ %53, %50 ], [ null, %36 ]
  %56 = load i8, i8* %55, align 1
  %57 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 7
  store i8 %56, i8* %57, align 4
  call void @_ZN3rtc17CopyOnWriteBufferD1Ev(%"class.rtc::CopyOnWriteBuffer"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #6
  br label %62

58:                                               ; preds = %29
  %59 = getelementptr inbounds %"class.webrtc::RtpPacketToSend", %"class.webrtc::RtpPacketToSend"* %1, i64 0, i32 0, i32 1
  %60 = load i8, i8* %59, align 1
  %61 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 7
  store i8 %60, i8* %61, align 4
  br label %62

62:                                               ; preds = %54, %58
  %63 = getelementptr inbounds %"class.webrtc::RtpPacketToSend", %"class.webrtc::RtpPacketToSend"* %1, i64 0, i32 0, i32 4
  %64 = load i32, i32* %63, align 8
  %65 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 9
  store i32 %64, i32* %65, align 8
  %66 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 4
  %67 = load %"class.webrtc::Clock"*, %"class.webrtc::Clock"** %66, align 8
  %68 = bitcast %"class.webrtc::Clock"* %67 to i64 (%"class.webrtc::Clock"*)***
  %69 = load i64 (%"class.webrtc::Clock"*)**, i64 (%"class.webrtc::Clock"*)*** %68, align 8
  %70 = getelementptr inbounds i64 (%"class.webrtc::Clock"*)*, i64 (%"class.webrtc::Clock"*)** %69, i64 2
  %71 = load i64 (%"class.webrtc::Clock"*)*, i64 (%"class.webrtc::Clock"*)** %70, align 8
  %72 = call i64 %71(%"class.webrtc::Clock"* %67) #6
  %73 = add nsw i64 %72, 500
  %74 = sdiv i64 %73, 1000
  %75 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 12
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.webrtc::RtpPacketToSend", %"class.webrtc::RtpPacketToSend"* %1, i64 0, i32 1
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 11
  store i64 %77, i64* %78, align 8
  br label %83

79:                                               ; preds = %13
  %80 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 6
  %81 = load i16, i16* %80, align 2
  %82 = add i16 %81, 1
  store i16 %82, i16* %80, align 2
  tail call void @_ZN6webrtc9RtpPacket17SetSequenceNumberEt(%"class.webrtc::RtpPacket"* %14, i16 zeroext %81) #6
  br label %83

83:                                               ; preds = %20, %62, %11, %79
  %84 = phi i1 [ true, %79 ], [ false, %11 ], [ true, %62 ], [ true, %20 ]
  ret i1 %84
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6webrtc15PacketSequencer21PopulatePaddingFieldsERNS_15RtpPacketToSendE(%"class.webrtc::PacketSequencer"* nocapture readonly, %"class.webrtc::RtpPacketToSend"* dereferenceable(160)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::RtpPacketToSend", %"class.webrtc::RtpPacketToSend"* %1, i64 0, i32 0
  %4 = getelementptr inbounds %"class.webrtc::RtpPacketToSend", %"class.webrtc::RtpPacketToSend"* %1, i64 0, i32 0, i32 5
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %9, label %28

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 7
  %11 = load i8, i8* %10, align 4
  %12 = icmp eq i8 %11, -1
  br i1 %12, label %63, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 2
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 13
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %63, label %21

21:                                               ; preds = %17, %13
  %22 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 9
  %23 = load i32, i32* %22, align 8
  tail call void @_ZN6webrtc9RtpPacket12SetTimestampEj(%"class.webrtc::RtpPacket"* %3, i32 %23) #6
  %24 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 11
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.webrtc::RtpPacketToSend", %"class.webrtc::RtpPacketToSend"* %1, i64 0, i32 1
  store i64 %25, i64* %26, align 8
  %27 = load i8, i8* %10, align 4
  tail call void @_ZN6webrtc9RtpPacket14SetPayloadTypeEh(%"class.webrtc::RtpPacket"* %3, i8 zeroext %27) #6
  br label %63

28:                                               ; preds = %2
  %29 = getelementptr inbounds %"class.webrtc::RtpPacketToSend", %"class.webrtc::RtpPacketToSend"* %1, i64 0, i32 0, i32 7
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %63

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 9
  %34 = load i32, i32* %33, align 8
  tail call void @_ZN6webrtc9RtpPacket12SetTimestampEj(%"class.webrtc::RtpPacket"* %3, i32 %34) #6
  %35 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 11
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.webrtc::RtpPacketToSend", %"class.webrtc::RtpPacketToSend"* %1, i64 0, i32 1
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 4
  %39 = load %"class.webrtc::Clock"*, %"class.webrtc::Clock"** %38, align 8
  %40 = bitcast %"class.webrtc::Clock"* %39 to i64 (%"class.webrtc::Clock"*)***
  %41 = load i64 (%"class.webrtc::Clock"*)**, i64 (%"class.webrtc::Clock"*)*** %40, align 8
  %42 = getelementptr inbounds i64 (%"class.webrtc::Clock"*)*, i64 (%"class.webrtc::Clock"*)** %41, i64 2
  %43 = load i64 (%"class.webrtc::Clock"*)*, i64 (%"class.webrtc::Clock"*)** %42, align 8
  %44 = tail call i64 %43(%"class.webrtc::Clock"* %39) #6
  %45 = add nsw i64 %44, 500
  %46 = sdiv i64 %45, 1000
  %47 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 12
  %48 = load i64, i64* %47, align 8
  %49 = icmp sgt i64 %48, 0
  br i1 %49, label %50, label %63

50:                                               ; preds = %32
  %51 = getelementptr inbounds %"class.webrtc::RtpPacketToSend", %"class.webrtc::RtpPacketToSend"* %1, i64 0, i32 0, i32 4
  %52 = load i32, i32* %51, align 8
  %53 = sub nsw i64 %46, %48
  %54 = trunc i64 %53 to i32
  %55 = mul i32 %54, 90
  %56 = add i32 %52, %55
  tail call void @_ZN6webrtc9RtpPacket12SetTimestampEj(%"class.webrtc::RtpPacket"* %3, i32 %56) #6
  %57 = load i64, i64* %37, align 8
  %58 = icmp sgt i64 %57, 0
  br i1 %58, label %59, label %63

59:                                               ; preds = %50
  %60 = load i64, i64* %47, align 8
  %61 = add i64 %57, %46
  %62 = sub i64 %61, %60
  store i64 %62, i64* %37, align 8
  br label %63

63:                                               ; preds = %32, %59, %50, %28, %17, %9, %21
  %64 = phi i1 [ true, %21 ], [ false, %9 ], [ false, %17 ], [ true, %28 ], [ true, %50 ], [ true, %59 ], [ true, %32 ]
  ret i1 %64
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN6webrtc9RtpPacket17SetSequenceNumberEt(%"class.webrtc::RtpPacket"*, i16 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc15PacketSequencer21UpdateLastPacketStateERKNS_15RtpPacketToSendE(%"class.webrtc::PacketSequencer"* nocapture, %"class.webrtc::RtpPacketToSend"* dereferenceable(160)) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.rtc::CopyOnWriteBuffer", align 8
  %4 = getelementptr inbounds %"class.webrtc::RtpPacketToSend", %"class.webrtc::RtpPacketToSend"* %1, i64 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 13
  store i8 %5, i8* %6, align 8
  %7 = getelementptr inbounds %"class.webrtc::RtpPacketToSend", %"class.webrtc::RtpPacketToSend"* %1, i64 0, i32 11
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %32, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.rtc::CopyOnWriteBuffer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #6
  %12 = getelementptr inbounds %"class.webrtc::RtpPacketToSend", %"class.webrtc::RtpPacketToSend"* %1, i64 0, i32 0, i32 11
  %13 = getelementptr inbounds %"class.webrtc::RtpPacketToSend", %"class.webrtc::RtpPacketToSend"* %1, i64 0, i32 0, i32 6
  %14 = load i64, i64* %13, align 8, !noalias !9
  %15 = getelementptr inbounds %"class.webrtc::RtpPacketToSend", %"class.webrtc::RtpPacketToSend"* %1, i64 0, i32 0, i32 7
  %16 = load i64, i64* %15, align 8, !noalias !9
  %17 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %3, i64 0, i32 1
  %18 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %3, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #6, !alias.scope !12
  call void @_ZN3rtc17CopyOnWriteBufferC1ERKS0_(%"class.rtc::CopyOnWriteBuffer"* nonnull %3, %"class.rtc::CopyOnWriteBuffer"* dereferenceable(24) %12) #6
  %19 = load i64, i64* %17, align 8, !alias.scope !12
  %20 = add i64 %19, %14
  store i64 %20, i64* %17, align 8, !alias.scope !12
  store i64 %16, i64* %18, align 8, !alias.scope !12
  %21 = getelementptr inbounds %"class.rtc::CopyOnWriteBuffer", %"class.rtc::CopyOnWriteBuffer"* %3, i64 0, i32 0, i32 0
  %22 = load %"class.rtc::FinalRefCountedObject"*, %"class.rtc::FinalRefCountedObject"** %21, align 8
  %23 = icmp eq %"class.rtc::FinalRefCountedObject"* %22, null
  br i1 %23, label %28, label %24

24:                                               ; preds = %10
  %25 = getelementptr inbounds %"class.rtc::FinalRefCountedObject", %"class.rtc::FinalRefCountedObject"* %22, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 %20
  br label %28

28:                                               ; preds = %10, %24
  %29 = phi i8* [ %27, %24 ], [ null, %10 ]
  %30 = load i8, i8* %29, align 1
  %31 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 7
  store i8 %30, i8* %31, align 4
  call void @_ZN3rtc17CopyOnWriteBufferD1Ev(%"class.rtc::CopyOnWriteBuffer"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #6
  br label %36

32:                                               ; preds = %2
  %33 = getelementptr inbounds %"class.webrtc::RtpPacketToSend", %"class.webrtc::RtpPacketToSend"* %1, i64 0, i32 0, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 7
  store i8 %34, i8* %35, align 4
  br label %36

36:                                               ; preds = %32, %28
  %37 = getelementptr inbounds %"class.webrtc::RtpPacketToSend", %"class.webrtc::RtpPacketToSend"* %1, i64 0, i32 0, i32 4
  %38 = load i32, i32* %37, align 8
  %39 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 9
  store i32 %38, i32* %39, align 8
  %40 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 4
  %41 = load %"class.webrtc::Clock"*, %"class.webrtc::Clock"** %40, align 8
  %42 = bitcast %"class.webrtc::Clock"* %41 to i64 (%"class.webrtc::Clock"*)***
  %43 = load i64 (%"class.webrtc::Clock"*)**, i64 (%"class.webrtc::Clock"*)*** %42, align 8
  %44 = getelementptr inbounds i64 (%"class.webrtc::Clock"*)*, i64 (%"class.webrtc::Clock"*)** %43, i64 2
  %45 = load i64 (%"class.webrtc::Clock"*)*, i64 (%"class.webrtc::Clock"*)** %44, align 8
  %46 = call i64 %45(%"class.webrtc::Clock"* %41) #6
  %47 = add nsw i64 %46, 500
  %48 = sdiv i64 %47, 1000
  %49 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 12
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"class.webrtc::RtpPacketToSend", %"class.webrtc::RtpPacketToSend"* %1, i64 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 11
  store i64 %51, i64* %52, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc15PacketSequencer11SetRtpStateERKNS_8RtpStateE(%"class.webrtc::PacketSequencer"* nocapture, %"struct.webrtc::RtpState"* nocapture readonly dereferenceable(40)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"struct.webrtc::RtpState", %"struct.webrtc::RtpState"* %1, i64 0, i32 0
  %4 = load i16, i16* %3, align 8
  %5 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 5
  store i16 %4, i16* %5, align 8
  %6 = getelementptr inbounds %"struct.webrtc::RtpState", %"struct.webrtc::RtpState"* %1, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 9
  store i32 %7, i32* %8, align 8
  %9 = getelementptr inbounds %"struct.webrtc::RtpState", %"struct.webrtc::RtpState"* %1, i64 0, i32 5
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 11
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"struct.webrtc::RtpState", %"struct.webrtc::RtpState"* %1, i64 0, i32 6
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 12
  store i64 %13, i64* %14, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK6webrtc15PacketSequencer16PupulateRtpStateERNS_8RtpStateE(%"class.webrtc::PacketSequencer"* nocapture readonly, %"struct.webrtc::RtpState"* nocapture dereferenceable(40)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 5
  %4 = load i16, i16* %3, align 8
  %5 = getelementptr inbounds %"struct.webrtc::RtpState", %"struct.webrtc::RtpState"* %1, i64 0, i32 0
  store i16 %4, i16* %5, align 8
  %6 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 9
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"struct.webrtc::RtpState", %"struct.webrtc::RtpState"* %1, i64 0, i32 3
  store i32 %7, i32* %8, align 8
  %9 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 11
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.webrtc::RtpState", %"struct.webrtc::RtpState"* %1, i64 0, i32 5
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.webrtc::PacketSequencer", %"class.webrtc::PacketSequencer"* %0, i64 0, i32 12
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.webrtc::RtpState", %"struct.webrtc::RtpState"* %1, i64 0, i32 6
  store i64 %13, i64* %14, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3rtc17CopyOnWriteBufferD1Ev(%"class.rtc::CopyOnWriteBuffer"*) unnamed_addr #5

declare void @_ZN6webrtc9RtpPacket12SetTimestampEj(%"class.webrtc::RtpPacket"*, i32) local_unnamed_addr #3

declare void @_ZN6webrtc9RtpPacket14SetPayloadTypeEh(%"class.webrtc::RtpPacket"*, i8 zeroext) local_unnamed_addr #3

declare void @_ZN3rtc17CopyOnWriteBufferC1ERKS0_(%"class.rtc::CopyOnWriteBuffer"*, %"class.rtc::CopyOnWriteBuffer"* dereferenceable(24)) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK6webrtc9RtpPacket13PayloadBufferEv: argument 0"}
!5 = distinct !{!5, !"_ZNK6webrtc9RtpPacket13PayloadBufferEv"}
!6 = !{!7, !4}
!7 = distinct !{!7, !8, !"_ZNK3rtc17CopyOnWriteBuffer5SliceEmm: argument 0"}
!8 = distinct !{!8, !"_ZNK3rtc17CopyOnWriteBuffer5SliceEmm"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK6webrtc9RtpPacket13PayloadBufferEv: argument 0"}
!11 = distinct !{!11, !"_ZNK6webrtc9RtpPacket13PayloadBufferEv"}
!12 = !{!13, !10}
!13 = distinct !{!13, !14, !"_ZNK3rtc17CopyOnWriteBuffer5SliceEmm: argument 0"}
!14 = distinct !{!14, !"_ZNK3rtc17CopyOnWriteBuffer5SliceEmm"}
