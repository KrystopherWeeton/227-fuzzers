; ModuleID = '../../third_party/webrtc/modules/audio_processing/echo_detector/circular_buffer.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/echo_detector/circular_buffer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.webrtc::CircularBuffer" = type { %"class.std::__1::vector", i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { float*, float*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { float* }
%"class.std::__1::__vector_base_common" = type { i8 }

@_ZN6webrtc14CircularBufferC1Em = hidden unnamed_addr alias void (%"struct.webrtc::CircularBuffer"*, i64), void (%"struct.webrtc::CircularBuffer"*, i64)* @_ZN6webrtc14CircularBufferC2Em
@_ZN6webrtc14CircularBufferD1Ev = hidden unnamed_addr alias void (%"struct.webrtc::CircularBuffer"*), void (%"struct.webrtc::CircularBuffer"*)* @_ZN6webrtc14CircularBufferD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc14CircularBufferC2Em(%"struct.webrtc::CircularBuffer"*, i64) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.webrtc::CircularBuffer"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #6
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %26, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 4611686018427387903
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = bitcast %"struct.webrtc::CircularBuffer"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %8) #7
  unreachable

9:                                                ; preds = %5
  %10 = shl i64 %1, 2
  %11 = tail call i8* @_Znwm(i64 %10) #8
  %12 = bitcast i8* %11 to float*
  %13 = getelementptr inbounds %"struct.webrtc::CircularBuffer", %"struct.webrtc::CircularBuffer"* %0, i64 0, i32 0, i32 0, i32 1
  %14 = bitcast %"struct.webrtc::CircularBuffer"* %0 to i8**
  store i8* %11, i8** %14, align 8
  %15 = getelementptr inbounds float, float* %12, i64 %1
  %16 = getelementptr inbounds %"struct.webrtc::CircularBuffer", %"struct.webrtc::CircularBuffer"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store float* %15, float** %16, align 8
  %17 = bitcast float** %13 to i64*
  %18 = ptrtoint i8* %11 to i64
  %19 = add nsw i64 %1, -1
  %20 = getelementptr float, float* %12, i64 %19
  %21 = ptrtoint float* %20 to i64
  %22 = sub i64 4, %18
  %23 = add i64 %22, %21
  %24 = and i64 %23, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %11, i8 0, i64 %24, i1 false) #6
  %25 = ptrtoint float* %15 to i64
  store i64 %25, i64* %17, align 8
  br label %26

26:                                               ; preds = %2, %9
  %27 = getelementptr inbounds %"struct.webrtc::CircularBuffer", %"struct.webrtc::CircularBuffer"* %0, i64 0, i32 1
  %28 = bitcast i64* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc14CircularBufferD2Ev(%"struct.webrtc::CircularBuffer"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.webrtc::CircularBuffer", %"struct.webrtc::CircularBuffer"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load float*, float** %2, align 8
  %4 = icmp eq float* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint float* %3 to i64
  %7 = getelementptr inbounds %"struct.webrtc::CircularBuffer", %"struct.webrtc::CircularBuffer"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast float** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #8
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc14CircularBuffer4PushEf(%"struct.webrtc::CircularBuffer"* nocapture, float) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.webrtc::CircularBuffer", %"struct.webrtc::CircularBuffer"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.webrtc::CircularBuffer", %"struct.webrtc::CircularBuffer"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load float*, float** %5, align 8
  %7 = getelementptr inbounds float, float* %6, i64 %4
  store float %1, float* %7, align 4
  %8 = load i64, i64* %3, align 8
  %9 = add i64 %8, 1
  %10 = getelementptr inbounds %"struct.webrtc::CircularBuffer", %"struct.webrtc::CircularBuffer"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast float** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"struct.webrtc::CircularBuffer"* %0 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 2
  %17 = urem i64 %9, %16
  store i64 %17, i64* %3, align 8
  %18 = getelementptr inbounds %"struct.webrtc::CircularBuffer", %"struct.webrtc::CircularBuffer"* %0, i64 0, i32 2
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, 1
  %21 = icmp ult i64 %16, %20
  %22 = select i1 %21, i64 %16, i64 %20
  store i64 %22, i64* %18, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_ZN6webrtc14CircularBuffer3PopEv(%"struct.webrtc::CircularBuffer"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.webrtc::CircularBuffer", %"struct.webrtc::CircularBuffer"* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %25, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.webrtc::CircularBuffer", %"struct.webrtc::CircularBuffer"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast float** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"struct.webrtc::CircularBuffer"* %0 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = ashr exact i64 %11, 2
  %13 = getelementptr inbounds %"struct.webrtc::CircularBuffer", %"struct.webrtc::CircularBuffer"* %0, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %14, %3
  %16 = add i64 %15, %12
  %17 = urem i64 %16, %12
  %18 = add i64 %3, -1
  store i64 %18, i64* %2, align 8
  %19 = inttoptr i64 %10 to float*
  %20 = getelementptr inbounds float, float* %19, i64 %17
  %21 = bitcast float* %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  %24 = shl nuw i64 %23, 32
  br label %25

25:                                               ; preds = %1, %5
  %26 = phi i64 [ %24, %5 ], [ 0, %1 ]
  %27 = phi i64 [ 1, %5 ], [ 0, %1 ]
  %28 = or i64 %27, %26
  ret i64 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc14CircularBuffer5ClearEv(%"struct.webrtc::CircularBuffer"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.webrtc::CircularBuffer", %"struct.webrtc::CircularBuffer"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load float*, float** %2, align 8
  %4 = getelementptr inbounds %"struct.webrtc::CircularBuffer", %"struct.webrtc::CircularBuffer"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast float** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = ptrtoint float* %3 to i64
  %8 = sub i64 %6, %7
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %10, label %17

10:                                               ; preds = %1
  %11 = bitcast float* %3 to i8*
  %12 = and i64 %8, -4
  %13 = icmp ult i64 %8, 4
  %14 = sext i1 %13 to i64
  %15 = shl nsw i64 %14, 2
  %16 = sub i64 %12, %15
  call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 %16, i1 false)
  br label %17

17:                                               ; preds = %10, %1
  %18 = getelementptr inbounds %"struct.webrtc::CircularBuffer", %"struct.webrtc::CircularBuffer"* %0, i64 0, i32 1
  %19 = bitcast i64* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
