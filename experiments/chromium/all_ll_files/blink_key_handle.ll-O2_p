; ModuleID = '../../components/webcrypto/blink_key_handle.cc'
source_filename = "../../components/webcrypto/blink_key_handle.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.blink::WebCryptoKey" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebCryptoKeyHandle" = type { i32 (...)** }
%"class.webcrypto::(anonymous namespace)::Key" = type { %"class.blink::WebCryptoKeyHandle", %"class.std::__1::vector" }
%"class.webcrypto::(anonymous namespace)::SymKey" = type { %"class.webcrypto::(anonymous namespace)::Key" }
%struct.evp_pkey_st = type { i32, i32, %union.anon, %struct.evp_pkey_asn1_method_st* }
%union.anon = type { i8* }
%struct.evp_pkey_asn1_method_st = type opaque
%"class.webcrypto::(anonymous namespace)::AsymKey" = type { %"class.webcrypto::(anonymous namespace)::Key", %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %struct.evp_pkey_st* }
%"class.webcrypto::CryptoData" = type <{ i8*, i32, [4 x i8] }>

@_ZTVN9webcrypto12_GLOBAL__N_16SymKeyE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webcrypto::(anonymous namespace)::Key"*)* @_ZN9webcrypto12_GLOBAL__N_13KeyD2Ev to i8*), i8* bitcast (void (%"class.webcrypto::(anonymous namespace)::SymKey"*)* @_ZN9webcrypto12_GLOBAL__N_16SymKeyD0Ev to i8*), i8* bitcast (%"class.webcrypto::(anonymous namespace)::SymKey"* (%"class.webcrypto::(anonymous namespace)::SymKey"*)* @_ZN9webcrypto12_GLOBAL__N_16SymKey8AsSymKeyEv to i8*), i8* bitcast (%"class.webcrypto::(anonymous namespace)::AsymKey"* (%"class.webcrypto::(anonymous namespace)::Key"*)* @_ZN9webcrypto12_GLOBAL__N_13Key9AsAsymKeyEv to i8*)] }, align 8
@_ZTVN9webcrypto12_GLOBAL__N_13KeyE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webcrypto::(anonymous namespace)::Key"*)* @_ZN9webcrypto12_GLOBAL__N_13KeyD2Ev to i8*), i8* bitcast (void (%"class.webcrypto::(anonymous namespace)::Key"*)* @_ZN9webcrypto12_GLOBAL__N_13KeyD0Ev to i8*), i8* bitcast (%"class.webcrypto::(anonymous namespace)::SymKey"* (%"class.webcrypto::(anonymous namespace)::Key"*)* @_ZN9webcrypto12_GLOBAL__N_13Key8AsSymKeyEv to i8*), i8* bitcast (%"class.webcrypto::(anonymous namespace)::AsymKey"* (%"class.webcrypto::(anonymous namespace)::Key"*)* @_ZN9webcrypto12_GLOBAL__N_13Key9AsAsymKeyEv to i8*)] }, align 8
@_ZTVN9webcrypto12_GLOBAL__N_17AsymKeyE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webcrypto::(anonymous namespace)::AsymKey"*)* @_ZN9webcrypto12_GLOBAL__N_17AsymKeyD2Ev to i8*), i8* bitcast (void (%"class.webcrypto::(anonymous namespace)::AsymKey"*)* @_ZN9webcrypto12_GLOBAL__N_17AsymKeyD0Ev to i8*), i8* bitcast (%"class.webcrypto::(anonymous namespace)::SymKey"* (%"class.webcrypto::(anonymous namespace)::Key"*)* @_ZN9webcrypto12_GLOBAL__N_13Key8AsSymKeyEv to i8*), i8* bitcast (%"class.webcrypto::(anonymous namespace)::AsymKey"* (%"class.webcrypto::(anonymous namespace)::AsymKey"*)* @_ZN9webcrypto12_GLOBAL__N_17AsymKey9AsAsymKeyEv to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector"* @_ZN9webcrypto19GetSymmetricKeyDataERKN5blink12WebCryptoKeyE(%"class.blink::WebCryptoKey"* dereferenceable(8)) local_unnamed_addr #0 {
  %2 = tail call %"class.blink::WebCryptoKeyHandle"* @_ZNK5blink12WebCryptoKey6HandleEv(%"class.blink::WebCryptoKey"* %0) #7
  %3 = bitcast %"class.blink::WebCryptoKeyHandle"* %2 to %"class.webcrypto::(anonymous namespace)::Key"*
  %4 = bitcast %"class.blink::WebCryptoKeyHandle"* %2 to %"class.webcrypto::(anonymous namespace)::SymKey"* (%"class.webcrypto::(anonymous namespace)::Key"*)***
  %5 = load %"class.webcrypto::(anonymous namespace)::SymKey"* (%"class.webcrypto::(anonymous namespace)::Key"*)**, %"class.webcrypto::(anonymous namespace)::SymKey"* (%"class.webcrypto::(anonymous namespace)::Key"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::SymKey"* (%"class.webcrypto::(anonymous namespace)::Key"*)*, %"class.webcrypto::(anonymous namespace)::SymKey"* (%"class.webcrypto::(anonymous namespace)::Key"*)** %5, i64 2
  %7 = load %"class.webcrypto::(anonymous namespace)::SymKey"* (%"class.webcrypto::(anonymous namespace)::Key"*)*, %"class.webcrypto::(anonymous namespace)::SymKey"* (%"class.webcrypto::(anonymous namespace)::Key"*)** %6, align 8
  %8 = tail call %"class.webcrypto::(anonymous namespace)::SymKey"* %7(%"class.webcrypto::(anonymous namespace)::Key"* %3) #7
  %9 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::SymKey", %"class.webcrypto::(anonymous namespace)::SymKey"* %8, i64 0, i32 0, i32 1
  ret %"class.std::__1::vector"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.evp_pkey_st* @_ZN9webcrypto11GetEVP_PKEYERKN5blink12WebCryptoKeyE(%"class.blink::WebCryptoKey"* dereferenceable(8)) local_unnamed_addr #0 {
  %2 = tail call %"class.blink::WebCryptoKeyHandle"* @_ZNK5blink12WebCryptoKey6HandleEv(%"class.blink::WebCryptoKey"* %0) #7
  %3 = bitcast %"class.blink::WebCryptoKeyHandle"* %2 to %"class.webcrypto::(anonymous namespace)::Key"*
  %4 = bitcast %"class.blink::WebCryptoKeyHandle"* %2 to %"class.webcrypto::(anonymous namespace)::AsymKey"* (%"class.webcrypto::(anonymous namespace)::Key"*)***
  %5 = load %"class.webcrypto::(anonymous namespace)::AsymKey"* (%"class.webcrypto::(anonymous namespace)::Key"*)**, %"class.webcrypto::(anonymous namespace)::AsymKey"* (%"class.webcrypto::(anonymous namespace)::Key"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::AsymKey"* (%"class.webcrypto::(anonymous namespace)::Key"*)*, %"class.webcrypto::(anonymous namespace)::AsymKey"* (%"class.webcrypto::(anonymous namespace)::Key"*)** %5, i64 3
  %7 = load %"class.webcrypto::(anonymous namespace)::AsymKey"* (%"class.webcrypto::(anonymous namespace)::Key"*)*, %"class.webcrypto::(anonymous namespace)::AsymKey"* (%"class.webcrypto::(anonymous namespace)::Key"*)** %6, align 8
  %8 = tail call %"class.webcrypto::(anonymous namespace)::AsymKey"* %7(%"class.webcrypto::(anonymous namespace)::Key"* %3) #7
  %9 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::AsymKey", %"class.webcrypto::(anonymous namespace)::AsymKey"* %8, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %9, align 8
  ret %struct.evp_pkey_st* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector"* @_ZN9webcrypto20GetSerializedKeyDataERKN5blink12WebCryptoKeyE(%"class.blink::WebCryptoKey"* dereferenceable(8)) local_unnamed_addr #0 {
  %2 = tail call %"class.blink::WebCryptoKeyHandle"* @_ZNK5blink12WebCryptoKey6HandleEv(%"class.blink::WebCryptoKey"* %0) #7
  %3 = getelementptr inbounds %"class.blink::WebCryptoKeyHandle", %"class.blink::WebCryptoKeyHandle"* %2, i64 1
  %4 = bitcast %"class.blink::WebCryptoKeyHandle"* %3 to %"class.std::__1::vector"*
  ret %"class.std::__1::vector"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.blink::WebCryptoKeyHandle"* @_ZN9webcrypto24CreateSymmetricKeyHandleERKNS_10CryptoDataE(%"class.webcrypto::CryptoData"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 32) #8
  %3 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN9webcrypto12_GLOBAL__N_13KeyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = getelementptr inbounds %"class.webcrypto::CryptoData", %"class.webcrypto::CryptoData"* %0, i64 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.webcrypto::CryptoData", %"class.webcrypto::CryptoData"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = zext i32 %8 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #7
  %10 = icmp eq i32 %8, 0
  br i1 %10, label %20, label %11

11:                                               ; preds = %1
  %12 = tail call i8* @_Znwm(i64 %9) #8
  %13 = getelementptr inbounds i8, i8* %2, i64 16
  %14 = bitcast i8* %4 to i8**
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds i8, i8* %12, i64 %9
  %16 = getelementptr inbounds i8, i8* %2, i64 24
  %17 = bitcast i8* %16 to i8**
  store i8* %15, i8** %17, align 8
  %18 = bitcast i8* %13 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %12, i8* align 1 %6, i64 %9, i1 false) #7
  %19 = ptrtoint i8* %15 to i64
  store i64 %19, i64* %18, align 8
  br label %20

20:                                               ; preds = %1, %11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN9webcrypto12_GLOBAL__N_16SymKeyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %21 = bitcast i8* %2 to %"class.blink::WebCryptoKeyHandle"*
  ret %"class.blink::WebCryptoKeyHandle"* %21
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.blink::WebCryptoKeyHandle"* @_ZN9webcrypto25CreateAsymmetricKeyHandleENSt3__110unique_ptrI11evp_pkey_stN4bssl8internal7DeleterIS2_EEEERKNS0_6vectorIhNS0_9allocatorIhEEEE(%struct.evp_pkey_st*, %"class.std::__1::vector"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.webcrypto::CryptoData", align 8
  %4 = ptrtoint %struct.evp_pkey_st* %0 to i64
  %5 = tail call i8* @_Znwm(i64 40) #8
  %6 = bitcast %"class.webcrypto::CryptoData"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #7
  call void @_ZN9webcrypto10CryptoDataC1ERKNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.webcrypto::CryptoData"* nonnull %3, %"class.std::__1::vector"* dereferenceable(24) %1) #7
  %7 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN9webcrypto12_GLOBAL__N_13KeyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %5, i64 8
  %9 = getelementptr inbounds %"class.webcrypto::CryptoData", %"class.webcrypto::CryptoData"* %3, i64 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.webcrypto::CryptoData", %"class.webcrypto::CryptoData"* %3, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #7
  %14 = icmp eq i32 %12, 0
  br i1 %14, label %24, label %15

15:                                               ; preds = %2
  %16 = call i8* @_Znwm(i64 %13) #8
  %17 = getelementptr inbounds i8, i8* %5, i64 16
  %18 = bitcast i8* %8 to i8**
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds i8, i8* %16, i64 %13
  %20 = getelementptr inbounds i8, i8* %5, i64 24
  %21 = bitcast i8* %20 to i8**
  store i8* %19, i8** %21, align 8
  %22 = bitcast i8* %17 to i64*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %16, i8* align 1 %10, i64 %13, i1 false) #7
  %23 = ptrtoint i8* %19 to i64
  store i64 %23, i64* %22, align 8
  br label %24

24:                                               ; preds = %15, %2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN9webcrypto12_GLOBAL__N_17AsymKeyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %25 = getelementptr inbounds i8, i8* %5, i64 32
  %26 = bitcast i8* %25 to i64*
  store i64 %4, i64* %26, align 8
  %27 = bitcast i8* %5 to %"class.blink::WebCryptoKeyHandle"*
  ret %"class.blink::WebCryptoKeyHandle"* %27
}

declare %"class.blink::WebCryptoKeyHandle"* @_ZNK5blink12WebCryptoKey6HandleEv(%"class.blink::WebCryptoKey"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN9webcrypto12_GLOBAL__N_16SymKeyD0Ev(%"class.webcrypto::(anonymous namespace)::SymKey"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::SymKey", %"class.webcrypto::(anonymous namespace)::SymKey"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN9webcrypto12_GLOBAL__N_13KeyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::SymKey", %"class.webcrypto::(anonymous namespace)::SymKey"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::SymKey", %"class.webcrypto::(anonymous namespace)::SymKey"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  store i64 %7, i64* %9, align 8
  tail call void @_ZdlPv(i8* nonnull %4) #8
  br label %10

10:                                               ; preds = %1, %6
  %11 = bitcast %"class.webcrypto::(anonymous namespace)::SymKey"* %0 to i8*
  tail call void @_ZdlPv(i8* %11) #8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal %"class.webcrypto::(anonymous namespace)::SymKey"* @_ZN9webcrypto12_GLOBAL__N_16SymKey8AsSymKeyEv(%"class.webcrypto::(anonymous namespace)::SymKey"* readnone returned) unnamed_addr #4 align 2 {
  ret %"class.webcrypto::(anonymous namespace)::SymKey"* %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal noalias %"class.webcrypto::(anonymous namespace)::AsymKey"* @_ZN9webcrypto12_GLOBAL__N_13Key9AsAsymKeyEv(%"class.webcrypto::(anonymous namespace)::Key"* nocapture readnone) unnamed_addr #4 align 2 {
  ret %"class.webcrypto::(anonymous namespace)::AsymKey"* null
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN9webcrypto12_GLOBAL__N_13KeyD2Ev(%"class.webcrypto::(anonymous namespace)::Key"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::Key", %"class.webcrypto::(anonymous namespace)::Key"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN9webcrypto12_GLOBAL__N_13KeyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::Key", %"class.webcrypto::(anonymous namespace)::Key"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::Key", %"class.webcrypto::(anonymous namespace)::Key"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  store i64 %7, i64* %9, align 8
  tail call void @_ZdlPv(i8* nonnull %4) #8
  br label %10

10:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN9webcrypto12_GLOBAL__N_13KeyD0Ev(%"class.webcrypto::(anonymous namespace)::Key"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::Key", %"class.webcrypto::(anonymous namespace)::Key"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN9webcrypto12_GLOBAL__N_13KeyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::Key", %"class.webcrypto::(anonymous namespace)::Key"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::Key", %"class.webcrypto::(anonymous namespace)::Key"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  store i64 %7, i64* %9, align 8
  tail call void @_ZdlPv(i8* nonnull %4) #8
  br label %10

10:                                               ; preds = %1, %6
  %11 = bitcast %"class.webcrypto::(anonymous namespace)::Key"* %0 to i8*
  tail call void @_ZdlPv(i8* %11) #8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal noalias %"class.webcrypto::(anonymous namespace)::SymKey"* @_ZN9webcrypto12_GLOBAL__N_13Key8AsSymKeyEv(%"class.webcrypto::(anonymous namespace)::Key"* nocapture readnone) unnamed_addr #4 align 2 {
  ret %"class.webcrypto::(anonymous namespace)::SymKey"* null
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

declare void @_ZN9webcrypto10CryptoDataC1ERKNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.webcrypto::CryptoData"*, %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN9webcrypto12_GLOBAL__N_17AsymKeyD2Ev(%"class.webcrypto::(anonymous namespace)::AsymKey"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::AsymKey", %"class.webcrypto::(anonymous namespace)::AsymKey"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN9webcrypto12_GLOBAL__N_17AsymKeyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::AsymKey", %"class.webcrypto::(anonymous namespace)::AsymKey"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %3, align 8
  store %struct.evp_pkey_st* null, %struct.evp_pkey_st** %3, align 8
  %5 = icmp eq %struct.evp_pkey_st* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %4) #7
  br label %7

7:                                                ; preds = %1, %6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN9webcrypto12_GLOBAL__N_13KeyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %8 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::AsymKey", %"class.webcrypto::(anonymous namespace)::AsymKey"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = ptrtoint i8* %9 to i64
  %13 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::AsymKey", %"class.webcrypto::(anonymous namespace)::AsymKey"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %14 = bitcast i8** %13 to i64*
  store i64 %12, i64* %14, align 8
  tail call void @_ZdlPv(i8* nonnull %9) #8
  br label %15

15:                                               ; preds = %7, %11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN9webcrypto12_GLOBAL__N_17AsymKeyD0Ev(%"class.webcrypto::(anonymous namespace)::AsymKey"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::AsymKey", %"class.webcrypto::(anonymous namespace)::AsymKey"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN9webcrypto12_GLOBAL__N_17AsymKeyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::AsymKey", %"class.webcrypto::(anonymous namespace)::AsymKey"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %3, align 8
  store %struct.evp_pkey_st* null, %struct.evp_pkey_st** %3, align 8
  %5 = icmp eq %struct.evp_pkey_st* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %4) #7
  br label %7

7:                                                ; preds = %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN9webcrypto12_GLOBAL__N_13KeyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %8 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::AsymKey", %"class.webcrypto::(anonymous namespace)::AsymKey"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = ptrtoint i8* %9 to i64
  %13 = getelementptr inbounds %"class.webcrypto::(anonymous namespace)::AsymKey", %"class.webcrypto::(anonymous namespace)::AsymKey"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %14 = bitcast i8** %13 to i64*
  store i64 %12, i64* %14, align 8
  tail call void @_ZdlPv(i8* nonnull %9) #8
  br label %15

15:                                               ; preds = %7, %11
  %16 = bitcast %"class.webcrypto::(anonymous namespace)::AsymKey"* %0 to i8*
  tail call void @_ZdlPv(i8* %16) #8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal %"class.webcrypto::(anonymous namespace)::AsymKey"* @_ZN9webcrypto12_GLOBAL__N_17AsymKey9AsAsymKeyEv(%"class.webcrypto::(anonymous namespace)::AsymKey"* readnone returned) unnamed_addr #4 align 2 {
  ret %"class.webcrypto::(anonymous namespace)::AsymKey"* %0
}

declare void @EVP_PKEY_free(%struct.evp_pkey_st*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
