; ModuleID = '../../third_party/libaom/source/libaom/aom_dsp/x86/aom_convolve_copy_avx2.c'
source_filename = "../../third_party/libaom/source/libaom/aom_dsp/x86/aom_convolve_copy_avx2.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @aom_convolve_copy_avx2(i8* nocapture readonly, i64, i8* nocapture, i64, i32, i32) local_unnamed_addr #0 {
  switch i32 %4, label %459 [
    i32 2, label %154
    i32 4, label %125
    i32 8, label %96
    i32 16, label %67
    i32 32, label %38
    i32 64, label %7
  ]

7:                                                ; preds = %6
  %8 = add nsw i32 %5, -2
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %33

11:                                               ; preds = %7
  %12 = bitcast i8* %0 to <4 x i64>*
  %13 = load <4 x i64>, <4 x i64>* %12, align 1
  %14 = getelementptr inbounds i8, i8* %0, i64 32
  %15 = bitcast i8* %14 to <4 x i64>*
  %16 = load <4 x i64>, <4 x i64>* %15, align 1
  %17 = getelementptr inbounds i8, i8* %0, i64 %1
  %18 = bitcast i8* %17 to <4 x i64>*
  %19 = load <4 x i64>, <4 x i64>* %18, align 1
  %20 = getelementptr inbounds i8, i8* %17, i64 32
  %21 = bitcast i8* %20 to <4 x i64>*
  %22 = load <4 x i64>, <4 x i64>* %21, align 1
  %23 = getelementptr inbounds i8, i8* %17, i64 %1
  %24 = bitcast i8* %2 to <4 x i64>*
  store <4 x i64> %13, <4 x i64>* %24, align 1
  %25 = getelementptr inbounds i8, i8* %2, i64 32
  %26 = bitcast i8* %25 to <4 x i64>*
  store <4 x i64> %16, <4 x i64>* %26, align 1
  %27 = getelementptr inbounds i8, i8* %2, i64 %3
  %28 = bitcast i8* %27 to <4 x i64>*
  store <4 x i64> %19, <4 x i64>* %28, align 1
  %29 = getelementptr inbounds i8, i8* %27, i64 32
  %30 = bitcast i8* %29 to <4 x i64>*
  store <4 x i64> %22, <4 x i64>* %30, align 1
  %31 = getelementptr inbounds i8, i8* %27, i64 %3
  %32 = add nsw i32 %5, -2
  br label %33

33:                                               ; preds = %11, %7
  %34 = phi i32 [ %5, %7 ], [ %32, %11 ]
  %35 = phi i8* [ %2, %7 ], [ %31, %11 ]
  %36 = phi i8* [ %0, %7 ], [ %23, %11 ]
  %37 = icmp ult i32 %8, 2
  br i1 %37, label %505, label %413

38:                                               ; preds = %6
  %39 = add nsw i32 %5, -2
  %40 = lshr i32 %39, 1
  %41 = add nuw i32 %40, 1
  %42 = and i32 %41, 3
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %62, label %44

44:                                               ; preds = %38, %44
  %45 = phi i32 [ %59, %44 ], [ %5, %38 ]
  %46 = phi i8* [ %58, %44 ], [ %2, %38 ]
  %47 = phi i8* [ %54, %44 ], [ %0, %38 ]
  %48 = phi i32 [ %60, %44 ], [ %42, %38 ]
  %49 = bitcast i8* %47 to <4 x i64>*
  %50 = load <4 x i64>, <4 x i64>* %49, align 1
  %51 = getelementptr inbounds i8, i8* %47, i64 %1
  %52 = bitcast i8* %51 to <4 x i64>*
  %53 = load <4 x i64>, <4 x i64>* %52, align 1
  %54 = getelementptr inbounds i8, i8* %51, i64 %1
  %55 = bitcast i8* %46 to <4 x i64>*
  store <4 x i64> %50, <4 x i64>* %55, align 1
  %56 = getelementptr inbounds i8, i8* %46, i64 %3
  %57 = bitcast i8* %56 to <4 x i64>*
  store <4 x i64> %53, <4 x i64>* %57, align 1
  %58 = getelementptr inbounds i8, i8* %56, i64 %3
  %59 = add nsw i32 %45, -2
  %60 = add i32 %48, -1
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %44, !llvm.loop !2

62:                                               ; preds = %44, %38
  %63 = phi i32 [ %5, %38 ], [ %59, %44 ]
  %64 = phi i8* [ %2, %38 ], [ %58, %44 ]
  %65 = phi i8* [ %0, %38 ], [ %54, %44 ]
  %66 = icmp ult i32 %39, 6
  br i1 %66, label %505, label %367

67:                                               ; preds = %6
  %68 = add nsw i32 %5, -2
  %69 = lshr i32 %68, 1
  %70 = add nuw i32 %69, 1
  %71 = and i32 %70, 3
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %91, label %73

73:                                               ; preds = %67, %73
  %74 = phi i32 [ %88, %73 ], [ %5, %67 ]
  %75 = phi i8* [ %87, %73 ], [ %2, %67 ]
  %76 = phi i8* [ %83, %73 ], [ %0, %67 ]
  %77 = phi i32 [ %89, %73 ], [ %71, %67 ]
  %78 = bitcast i8* %76 to <2 x i64>*
  %79 = load <2 x i64>, <2 x i64>* %78, align 1
  %80 = getelementptr inbounds i8, i8* %76, i64 %1
  %81 = bitcast i8* %80 to <2 x i64>*
  %82 = load <2 x i64>, <2 x i64>* %81, align 1
  %83 = getelementptr inbounds i8, i8* %80, i64 %1
  %84 = bitcast i8* %75 to <2 x i64>*
  store <2 x i64> %79, <2 x i64>* %84, align 16
  %85 = getelementptr inbounds i8, i8* %75, i64 %3
  %86 = bitcast i8* %85 to <2 x i64>*
  store <2 x i64> %82, <2 x i64>* %86, align 16
  %87 = getelementptr inbounds i8, i8* %85, i64 %3
  %88 = add nsw i32 %74, -2
  %89 = add i32 %77, -1
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %73, !llvm.loop !4

91:                                               ; preds = %73, %67
  %92 = phi i32 [ %5, %67 ], [ %88, %73 ]
  %93 = phi i8* [ %2, %67 ], [ %87, %73 ]
  %94 = phi i8* [ %0, %67 ], [ %83, %73 ]
  %95 = icmp ult i32 %68, 6
  br i1 %95, label %505, label %321

96:                                               ; preds = %6
  %97 = add nsw i32 %5, -2
  %98 = lshr i32 %97, 1
  %99 = add nuw i32 %98, 1
  %100 = and i32 %99, 3
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %120, label %102

102:                                              ; preds = %96, %102
  %103 = phi i32 [ %117, %102 ], [ %5, %96 ]
  %104 = phi i8* [ %116, %102 ], [ %2, %96 ]
  %105 = phi i8* [ %112, %102 ], [ %0, %96 ]
  %106 = phi i32 [ %118, %102 ], [ %100, %96 ]
  %107 = bitcast i8* %105 to i64*
  %108 = load i64, i64* %107, align 1
  %109 = getelementptr inbounds i8, i8* %105, i64 %1
  %110 = bitcast i8* %109 to i64*
  %111 = load i64, i64* %110, align 1
  %112 = getelementptr inbounds i8, i8* %109, i64 %1
  %113 = bitcast i8* %104 to i64*
  store i64 %108, i64* %113, align 1
  %114 = getelementptr inbounds i8, i8* %104, i64 %3
  %115 = bitcast i8* %114 to i64*
  store i64 %111, i64* %115, align 1
  %116 = getelementptr inbounds i8, i8* %114, i64 %3
  %117 = add nsw i32 %103, -2
  %118 = add i32 %106, -1
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %102, !llvm.loop !5

120:                                              ; preds = %102, %96
  %121 = phi i32 [ %5, %96 ], [ %117, %102 ]
  %122 = phi i8* [ %2, %96 ], [ %116, %102 ]
  %123 = phi i8* [ %0, %96 ], [ %112, %102 ]
  %124 = icmp ult i32 %97, 6
  br i1 %124, label %505, label %275

125:                                              ; preds = %6
  %126 = add nsw i32 %5, -2
  %127 = lshr i32 %126, 1
  %128 = add nuw i32 %127, 1
  %129 = and i32 %128, 3
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %149, label %131

131:                                              ; preds = %125, %131
  %132 = phi i32 [ %146, %131 ], [ %5, %125 ]
  %133 = phi i8* [ %145, %131 ], [ %2, %125 ]
  %134 = phi i8* [ %144, %131 ], [ %0, %125 ]
  %135 = phi i32 [ %147, %131 ], [ %129, %125 ]
  %136 = bitcast i8* %134 to i32*
  %137 = bitcast i8* %133 to i32*
  %138 = load i32, i32* %136, align 1
  store i32 %138, i32* %137, align 1
  %139 = getelementptr inbounds i8, i8* %134, i64 %1
  %140 = getelementptr inbounds i8, i8* %133, i64 %3
  %141 = bitcast i8* %139 to i32*
  %142 = bitcast i8* %140 to i32*
  %143 = load i32, i32* %141, align 1
  store i32 %143, i32* %142, align 1
  %144 = getelementptr inbounds i8, i8* %139, i64 %1
  %145 = getelementptr inbounds i8, i8* %140, i64 %3
  %146 = add nsw i32 %132, -2
  %147 = add i32 %135, -1
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %131, !llvm.loop !6

149:                                              ; preds = %131, %125
  %150 = phi i32 [ %5, %125 ], [ %146, %131 ]
  %151 = phi i8* [ %2, %125 ], [ %145, %131 ]
  %152 = phi i8* [ %0, %125 ], [ %144, %131 ]
  %153 = icmp ult i32 %126, 6
  br i1 %153, label %505, label %229

154:                                              ; preds = %6
  %155 = add nsw i32 %5, -2
  %156 = lshr i32 %155, 1
  %157 = add nuw i32 %156, 1
  %158 = and i32 %157, 3
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %178, label %160

160:                                              ; preds = %154, %160
  %161 = phi i32 [ %175, %160 ], [ %5, %154 ]
  %162 = phi i8* [ %174, %160 ], [ %2, %154 ]
  %163 = phi i8* [ %173, %160 ], [ %0, %154 ]
  %164 = phi i32 [ %176, %160 ], [ %158, %154 ]
  %165 = bitcast i8* %163 to i16*
  %166 = bitcast i8* %162 to i16*
  %167 = load i16, i16* %165, align 1
  store i16 %167, i16* %166, align 1
  %168 = getelementptr inbounds i8, i8* %163, i64 %1
  %169 = getelementptr inbounds i8, i8* %162, i64 %3
  %170 = bitcast i8* %168 to i16*
  %171 = bitcast i8* %169 to i16*
  %172 = load i16, i16* %170, align 1
  store i16 %172, i16* %171, align 1
  %173 = getelementptr inbounds i8, i8* %168, i64 %1
  %174 = getelementptr inbounds i8, i8* %169, i64 %3
  %175 = add nsw i32 %161, -2
  %176 = add i32 %164, -1
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %160, !llvm.loop !7

178:                                              ; preds = %160, %154
  %179 = phi i32 [ %5, %154 ], [ %175, %160 ]
  %180 = phi i8* [ %2, %154 ], [ %174, %160 ]
  %181 = phi i8* [ %0, %154 ], [ %173, %160 ]
  %182 = icmp ult i32 %155, 6
  br i1 %182, label %505, label %183

183:                                              ; preds = %178, %183
  %184 = phi i32 [ %227, %183 ], [ %179, %178 ]
  %185 = phi i8* [ %226, %183 ], [ %180, %178 ]
  %186 = phi i8* [ %225, %183 ], [ %181, %178 ]
  %187 = bitcast i8* %186 to i16*
  %188 = bitcast i8* %185 to i16*
  %189 = load i16, i16* %187, align 1
  store i16 %189, i16* %188, align 1
  %190 = getelementptr inbounds i8, i8* %186, i64 %1
  %191 = getelementptr inbounds i8, i8* %185, i64 %3
  %192 = bitcast i8* %190 to i16*
  %193 = bitcast i8* %191 to i16*
  %194 = load i16, i16* %192, align 1
  store i16 %194, i16* %193, align 1
  %195 = getelementptr inbounds i8, i8* %190, i64 %1
  %196 = getelementptr inbounds i8, i8* %191, i64 %3
  %197 = bitcast i8* %195 to i16*
  %198 = bitcast i8* %196 to i16*
  %199 = load i16, i16* %197, align 1
  store i16 %199, i16* %198, align 1
  %200 = getelementptr inbounds i8, i8* %195, i64 %1
  %201 = getelementptr inbounds i8, i8* %196, i64 %3
  %202 = bitcast i8* %200 to i16*
  %203 = bitcast i8* %201 to i16*
  %204 = load i16, i16* %202, align 1
  store i16 %204, i16* %203, align 1
  %205 = getelementptr inbounds i8, i8* %200, i64 %1
  %206 = getelementptr inbounds i8, i8* %201, i64 %3
  %207 = bitcast i8* %205 to i16*
  %208 = bitcast i8* %206 to i16*
  %209 = load i16, i16* %207, align 1
  store i16 %209, i16* %208, align 1
  %210 = getelementptr inbounds i8, i8* %205, i64 %1
  %211 = getelementptr inbounds i8, i8* %206, i64 %3
  %212 = bitcast i8* %210 to i16*
  %213 = bitcast i8* %211 to i16*
  %214 = load i16, i16* %212, align 1
  store i16 %214, i16* %213, align 1
  %215 = getelementptr inbounds i8, i8* %210, i64 %1
  %216 = getelementptr inbounds i8, i8* %211, i64 %3
  %217 = bitcast i8* %215 to i16*
  %218 = bitcast i8* %216 to i16*
  %219 = load i16, i16* %217, align 1
  store i16 %219, i16* %218, align 1
  %220 = getelementptr inbounds i8, i8* %215, i64 %1
  %221 = getelementptr inbounds i8, i8* %216, i64 %3
  %222 = bitcast i8* %220 to i16*
  %223 = bitcast i8* %221 to i16*
  %224 = load i16, i16* %222, align 1
  store i16 %224, i16* %223, align 1
  %225 = getelementptr inbounds i8, i8* %220, i64 %1
  %226 = getelementptr inbounds i8, i8* %221, i64 %3
  %227 = add nsw i32 %184, -8
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %505, label %183

229:                                              ; preds = %149, %229
  %230 = phi i32 [ %273, %229 ], [ %150, %149 ]
  %231 = phi i8* [ %272, %229 ], [ %151, %149 ]
  %232 = phi i8* [ %271, %229 ], [ %152, %149 ]
  %233 = bitcast i8* %232 to i32*
  %234 = bitcast i8* %231 to i32*
  %235 = load i32, i32* %233, align 1
  store i32 %235, i32* %234, align 1
  %236 = getelementptr inbounds i8, i8* %232, i64 %1
  %237 = getelementptr inbounds i8, i8* %231, i64 %3
  %238 = bitcast i8* %236 to i32*
  %239 = bitcast i8* %237 to i32*
  %240 = load i32, i32* %238, align 1
  store i32 %240, i32* %239, align 1
  %241 = getelementptr inbounds i8, i8* %236, i64 %1
  %242 = getelementptr inbounds i8, i8* %237, i64 %3
  %243 = bitcast i8* %241 to i32*
  %244 = bitcast i8* %242 to i32*
  %245 = load i32, i32* %243, align 1
  store i32 %245, i32* %244, align 1
  %246 = getelementptr inbounds i8, i8* %241, i64 %1
  %247 = getelementptr inbounds i8, i8* %242, i64 %3
  %248 = bitcast i8* %246 to i32*
  %249 = bitcast i8* %247 to i32*
  %250 = load i32, i32* %248, align 1
  store i32 %250, i32* %249, align 1
  %251 = getelementptr inbounds i8, i8* %246, i64 %1
  %252 = getelementptr inbounds i8, i8* %247, i64 %3
  %253 = bitcast i8* %251 to i32*
  %254 = bitcast i8* %252 to i32*
  %255 = load i32, i32* %253, align 1
  store i32 %255, i32* %254, align 1
  %256 = getelementptr inbounds i8, i8* %251, i64 %1
  %257 = getelementptr inbounds i8, i8* %252, i64 %3
  %258 = bitcast i8* %256 to i32*
  %259 = bitcast i8* %257 to i32*
  %260 = load i32, i32* %258, align 1
  store i32 %260, i32* %259, align 1
  %261 = getelementptr inbounds i8, i8* %256, i64 %1
  %262 = getelementptr inbounds i8, i8* %257, i64 %3
  %263 = bitcast i8* %261 to i32*
  %264 = bitcast i8* %262 to i32*
  %265 = load i32, i32* %263, align 1
  store i32 %265, i32* %264, align 1
  %266 = getelementptr inbounds i8, i8* %261, i64 %1
  %267 = getelementptr inbounds i8, i8* %262, i64 %3
  %268 = bitcast i8* %266 to i32*
  %269 = bitcast i8* %267 to i32*
  %270 = load i32, i32* %268, align 1
  store i32 %270, i32* %269, align 1
  %271 = getelementptr inbounds i8, i8* %266, i64 %1
  %272 = getelementptr inbounds i8, i8* %267, i64 %3
  %273 = add nsw i32 %230, -8
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %505, label %229

275:                                              ; preds = %120, %275
  %276 = phi i32 [ %319, %275 ], [ %121, %120 ]
  %277 = phi i8* [ %318, %275 ], [ %122, %120 ]
  %278 = phi i8* [ %314, %275 ], [ %123, %120 ]
  %279 = bitcast i8* %278 to i64*
  %280 = load i64, i64* %279, align 1
  %281 = getelementptr inbounds i8, i8* %278, i64 %1
  %282 = bitcast i8* %281 to i64*
  %283 = load i64, i64* %282, align 1
  %284 = getelementptr inbounds i8, i8* %281, i64 %1
  %285 = bitcast i8* %277 to i64*
  store i64 %280, i64* %285, align 1
  %286 = getelementptr inbounds i8, i8* %277, i64 %3
  %287 = bitcast i8* %286 to i64*
  store i64 %283, i64* %287, align 1
  %288 = getelementptr inbounds i8, i8* %286, i64 %3
  %289 = bitcast i8* %284 to i64*
  %290 = load i64, i64* %289, align 1
  %291 = getelementptr inbounds i8, i8* %284, i64 %1
  %292 = bitcast i8* %291 to i64*
  %293 = load i64, i64* %292, align 1
  %294 = getelementptr inbounds i8, i8* %291, i64 %1
  %295 = bitcast i8* %288 to i64*
  store i64 %290, i64* %295, align 1
  %296 = getelementptr inbounds i8, i8* %288, i64 %3
  %297 = bitcast i8* %296 to i64*
  store i64 %293, i64* %297, align 1
  %298 = getelementptr inbounds i8, i8* %296, i64 %3
  %299 = bitcast i8* %294 to i64*
  %300 = load i64, i64* %299, align 1
  %301 = getelementptr inbounds i8, i8* %294, i64 %1
  %302 = bitcast i8* %301 to i64*
  %303 = load i64, i64* %302, align 1
  %304 = getelementptr inbounds i8, i8* %301, i64 %1
  %305 = bitcast i8* %298 to i64*
  store i64 %300, i64* %305, align 1
  %306 = getelementptr inbounds i8, i8* %298, i64 %3
  %307 = bitcast i8* %306 to i64*
  store i64 %303, i64* %307, align 1
  %308 = getelementptr inbounds i8, i8* %306, i64 %3
  %309 = bitcast i8* %304 to i64*
  %310 = load i64, i64* %309, align 1
  %311 = getelementptr inbounds i8, i8* %304, i64 %1
  %312 = bitcast i8* %311 to i64*
  %313 = load i64, i64* %312, align 1
  %314 = getelementptr inbounds i8, i8* %311, i64 %1
  %315 = bitcast i8* %308 to i64*
  store i64 %310, i64* %315, align 1
  %316 = getelementptr inbounds i8, i8* %308, i64 %3
  %317 = bitcast i8* %316 to i64*
  store i64 %313, i64* %317, align 1
  %318 = getelementptr inbounds i8, i8* %316, i64 %3
  %319 = add nsw i32 %276, -8
  %320 = icmp eq i32 %319, 0
  br i1 %320, label %505, label %275

321:                                              ; preds = %91, %321
  %322 = phi i32 [ %365, %321 ], [ %92, %91 ]
  %323 = phi i8* [ %364, %321 ], [ %93, %91 ]
  %324 = phi i8* [ %360, %321 ], [ %94, %91 ]
  %325 = bitcast i8* %324 to <2 x i64>*
  %326 = load <2 x i64>, <2 x i64>* %325, align 1
  %327 = getelementptr inbounds i8, i8* %324, i64 %1
  %328 = bitcast i8* %327 to <2 x i64>*
  %329 = load <2 x i64>, <2 x i64>* %328, align 1
  %330 = getelementptr inbounds i8, i8* %327, i64 %1
  %331 = bitcast i8* %323 to <2 x i64>*
  store <2 x i64> %326, <2 x i64>* %331, align 16
  %332 = getelementptr inbounds i8, i8* %323, i64 %3
  %333 = bitcast i8* %332 to <2 x i64>*
  store <2 x i64> %329, <2 x i64>* %333, align 16
  %334 = getelementptr inbounds i8, i8* %332, i64 %3
  %335 = bitcast i8* %330 to <2 x i64>*
  %336 = load <2 x i64>, <2 x i64>* %335, align 1
  %337 = getelementptr inbounds i8, i8* %330, i64 %1
  %338 = bitcast i8* %337 to <2 x i64>*
  %339 = load <2 x i64>, <2 x i64>* %338, align 1
  %340 = getelementptr inbounds i8, i8* %337, i64 %1
  %341 = bitcast i8* %334 to <2 x i64>*
  store <2 x i64> %336, <2 x i64>* %341, align 16
  %342 = getelementptr inbounds i8, i8* %334, i64 %3
  %343 = bitcast i8* %342 to <2 x i64>*
  store <2 x i64> %339, <2 x i64>* %343, align 16
  %344 = getelementptr inbounds i8, i8* %342, i64 %3
  %345 = bitcast i8* %340 to <2 x i64>*
  %346 = load <2 x i64>, <2 x i64>* %345, align 1
  %347 = getelementptr inbounds i8, i8* %340, i64 %1
  %348 = bitcast i8* %347 to <2 x i64>*
  %349 = load <2 x i64>, <2 x i64>* %348, align 1
  %350 = getelementptr inbounds i8, i8* %347, i64 %1
  %351 = bitcast i8* %344 to <2 x i64>*
  store <2 x i64> %346, <2 x i64>* %351, align 16
  %352 = getelementptr inbounds i8, i8* %344, i64 %3
  %353 = bitcast i8* %352 to <2 x i64>*
  store <2 x i64> %349, <2 x i64>* %353, align 16
  %354 = getelementptr inbounds i8, i8* %352, i64 %3
  %355 = bitcast i8* %350 to <2 x i64>*
  %356 = load <2 x i64>, <2 x i64>* %355, align 1
  %357 = getelementptr inbounds i8, i8* %350, i64 %1
  %358 = bitcast i8* %357 to <2 x i64>*
  %359 = load <2 x i64>, <2 x i64>* %358, align 1
  %360 = getelementptr inbounds i8, i8* %357, i64 %1
  %361 = bitcast i8* %354 to <2 x i64>*
  store <2 x i64> %356, <2 x i64>* %361, align 16
  %362 = getelementptr inbounds i8, i8* %354, i64 %3
  %363 = bitcast i8* %362 to <2 x i64>*
  store <2 x i64> %359, <2 x i64>* %363, align 16
  %364 = getelementptr inbounds i8, i8* %362, i64 %3
  %365 = add nsw i32 %322, -8
  %366 = icmp eq i32 %365, 0
  br i1 %366, label %505, label %321

367:                                              ; preds = %62, %367
  %368 = phi i32 [ %411, %367 ], [ %63, %62 ]
  %369 = phi i8* [ %410, %367 ], [ %64, %62 ]
  %370 = phi i8* [ %406, %367 ], [ %65, %62 ]
  %371 = bitcast i8* %370 to <4 x i64>*
  %372 = load <4 x i64>, <4 x i64>* %371, align 1
  %373 = getelementptr inbounds i8, i8* %370, i64 %1
  %374 = bitcast i8* %373 to <4 x i64>*
  %375 = load <4 x i64>, <4 x i64>* %374, align 1
  %376 = getelementptr inbounds i8, i8* %373, i64 %1
  %377 = bitcast i8* %369 to <4 x i64>*
  store <4 x i64> %372, <4 x i64>* %377, align 1
  %378 = getelementptr inbounds i8, i8* %369, i64 %3
  %379 = bitcast i8* %378 to <4 x i64>*
  store <4 x i64> %375, <4 x i64>* %379, align 1
  %380 = getelementptr inbounds i8, i8* %378, i64 %3
  %381 = bitcast i8* %376 to <4 x i64>*
  %382 = load <4 x i64>, <4 x i64>* %381, align 1
  %383 = getelementptr inbounds i8, i8* %376, i64 %1
  %384 = bitcast i8* %383 to <4 x i64>*
  %385 = load <4 x i64>, <4 x i64>* %384, align 1
  %386 = getelementptr inbounds i8, i8* %383, i64 %1
  %387 = bitcast i8* %380 to <4 x i64>*
  store <4 x i64> %382, <4 x i64>* %387, align 1
  %388 = getelementptr inbounds i8, i8* %380, i64 %3
  %389 = bitcast i8* %388 to <4 x i64>*
  store <4 x i64> %385, <4 x i64>* %389, align 1
  %390 = getelementptr inbounds i8, i8* %388, i64 %3
  %391 = bitcast i8* %386 to <4 x i64>*
  %392 = load <4 x i64>, <4 x i64>* %391, align 1
  %393 = getelementptr inbounds i8, i8* %386, i64 %1
  %394 = bitcast i8* %393 to <4 x i64>*
  %395 = load <4 x i64>, <4 x i64>* %394, align 1
  %396 = getelementptr inbounds i8, i8* %393, i64 %1
  %397 = bitcast i8* %390 to <4 x i64>*
  store <4 x i64> %392, <4 x i64>* %397, align 1
  %398 = getelementptr inbounds i8, i8* %390, i64 %3
  %399 = bitcast i8* %398 to <4 x i64>*
  store <4 x i64> %395, <4 x i64>* %399, align 1
  %400 = getelementptr inbounds i8, i8* %398, i64 %3
  %401 = bitcast i8* %396 to <4 x i64>*
  %402 = load <4 x i64>, <4 x i64>* %401, align 1
  %403 = getelementptr inbounds i8, i8* %396, i64 %1
  %404 = bitcast i8* %403 to <4 x i64>*
  %405 = load <4 x i64>, <4 x i64>* %404, align 1
  %406 = getelementptr inbounds i8, i8* %403, i64 %1
  %407 = bitcast i8* %400 to <4 x i64>*
  store <4 x i64> %402, <4 x i64>* %407, align 1
  %408 = getelementptr inbounds i8, i8* %400, i64 %3
  %409 = bitcast i8* %408 to <4 x i64>*
  store <4 x i64> %405, <4 x i64>* %409, align 1
  %410 = getelementptr inbounds i8, i8* %408, i64 %3
  %411 = add nsw i32 %368, -8
  %412 = icmp eq i32 %411, 0
  br i1 %412, label %505, label %367

413:                                              ; preds = %33, %413
  %414 = phi i32 [ %457, %413 ], [ %34, %33 ]
  %415 = phi i8* [ %456, %413 ], [ %35, %33 ]
  %416 = phi i8* [ %448, %413 ], [ %36, %33 ]
  %417 = bitcast i8* %416 to <4 x i64>*
  %418 = load <4 x i64>, <4 x i64>* %417, align 1
  %419 = getelementptr inbounds i8, i8* %416, i64 32
  %420 = bitcast i8* %419 to <4 x i64>*
  %421 = load <4 x i64>, <4 x i64>* %420, align 1
  %422 = getelementptr inbounds i8, i8* %416, i64 %1
  %423 = bitcast i8* %422 to <4 x i64>*
  %424 = load <4 x i64>, <4 x i64>* %423, align 1
  %425 = getelementptr inbounds i8, i8* %422, i64 32
  %426 = bitcast i8* %425 to <4 x i64>*
  %427 = load <4 x i64>, <4 x i64>* %426, align 1
  %428 = getelementptr inbounds i8, i8* %422, i64 %1
  %429 = bitcast i8* %415 to <4 x i64>*
  store <4 x i64> %418, <4 x i64>* %429, align 1
  %430 = getelementptr inbounds i8, i8* %415, i64 32
  %431 = bitcast i8* %430 to <4 x i64>*
  store <4 x i64> %421, <4 x i64>* %431, align 1
  %432 = getelementptr inbounds i8, i8* %415, i64 %3
  %433 = bitcast i8* %432 to <4 x i64>*
  store <4 x i64> %424, <4 x i64>* %433, align 1
  %434 = getelementptr inbounds i8, i8* %432, i64 32
  %435 = bitcast i8* %434 to <4 x i64>*
  store <4 x i64> %427, <4 x i64>* %435, align 1
  %436 = getelementptr inbounds i8, i8* %432, i64 %3
  %437 = bitcast i8* %428 to <4 x i64>*
  %438 = load <4 x i64>, <4 x i64>* %437, align 1
  %439 = getelementptr inbounds i8, i8* %428, i64 32
  %440 = bitcast i8* %439 to <4 x i64>*
  %441 = load <4 x i64>, <4 x i64>* %440, align 1
  %442 = getelementptr inbounds i8, i8* %428, i64 %1
  %443 = bitcast i8* %442 to <4 x i64>*
  %444 = load <4 x i64>, <4 x i64>* %443, align 1
  %445 = getelementptr inbounds i8, i8* %442, i64 32
  %446 = bitcast i8* %445 to <4 x i64>*
  %447 = load <4 x i64>, <4 x i64>* %446, align 1
  %448 = getelementptr inbounds i8, i8* %442, i64 %1
  %449 = bitcast i8* %436 to <4 x i64>*
  store <4 x i64> %438, <4 x i64>* %449, align 1
  %450 = getelementptr inbounds i8, i8* %436, i64 32
  %451 = bitcast i8* %450 to <4 x i64>*
  store <4 x i64> %441, <4 x i64>* %451, align 1
  %452 = getelementptr inbounds i8, i8* %436, i64 %3
  %453 = bitcast i8* %452 to <4 x i64>*
  store <4 x i64> %444, <4 x i64>* %453, align 1
  %454 = getelementptr inbounds i8, i8* %452, i64 32
  %455 = bitcast i8* %454 to <4 x i64>*
  store <4 x i64> %447, <4 x i64>* %455, align 1
  %456 = getelementptr inbounds i8, i8* %452, i64 %3
  %457 = add nsw i32 %414, -4
  %458 = icmp eq i32 %457, 0
  br i1 %458, label %505, label %413

459:                                              ; preds = %6, %459
  %460 = phi i32 [ %503, %459 ], [ %5, %6 ]
  %461 = phi i8* [ %502, %459 ], [ %2, %6 ]
  %462 = phi i8* [ %501, %459 ], [ %0, %6 ]
  %463 = bitcast i8* %462 to <4 x i64>*
  %464 = load <4 x i64>, <4 x i64>* %463, align 1
  %465 = getelementptr inbounds i8, i8* %462, i64 32
  %466 = bitcast i8* %465 to <4 x i64>*
  %467 = load <4 x i64>, <4 x i64>* %466, align 1
  %468 = getelementptr inbounds i8, i8* %462, i64 64
  %469 = bitcast i8* %468 to <4 x i64>*
  %470 = load <4 x i64>, <4 x i64>* %469, align 1
  %471 = getelementptr inbounds i8, i8* %462, i64 96
  %472 = bitcast i8* %471 to <4 x i64>*
  %473 = load <4 x i64>, <4 x i64>* %472, align 1
  %474 = bitcast i8* %461 to <4 x i64>*
  store <4 x i64> %464, <4 x i64>* %474, align 1
  %475 = getelementptr inbounds i8, i8* %461, i64 32
  %476 = bitcast i8* %475 to <4 x i64>*
  store <4 x i64> %467, <4 x i64>* %476, align 1
  %477 = getelementptr inbounds i8, i8* %461, i64 64
  %478 = bitcast i8* %477 to <4 x i64>*
  store <4 x i64> %470, <4 x i64>* %478, align 1
  %479 = getelementptr inbounds i8, i8* %461, i64 96
  %480 = bitcast i8* %479 to <4 x i64>*
  store <4 x i64> %473, <4 x i64>* %480, align 1
  %481 = getelementptr inbounds i8, i8* %462, i64 %1
  %482 = getelementptr inbounds i8, i8* %461, i64 %3
  %483 = bitcast i8* %481 to <4 x i64>*
  %484 = load <4 x i64>, <4 x i64>* %483, align 1
  %485 = getelementptr inbounds i8, i8* %481, i64 32
  %486 = bitcast i8* %485 to <4 x i64>*
  %487 = load <4 x i64>, <4 x i64>* %486, align 1
  %488 = getelementptr inbounds i8, i8* %481, i64 64
  %489 = bitcast i8* %488 to <4 x i64>*
  %490 = load <4 x i64>, <4 x i64>* %489, align 1
  %491 = getelementptr inbounds i8, i8* %481, i64 96
  %492 = bitcast i8* %491 to <4 x i64>*
  %493 = load <4 x i64>, <4 x i64>* %492, align 1
  %494 = bitcast i8* %482 to <4 x i64>*
  store <4 x i64> %484, <4 x i64>* %494, align 1
  %495 = getelementptr inbounds i8, i8* %482, i64 32
  %496 = bitcast i8* %495 to <4 x i64>*
  store <4 x i64> %487, <4 x i64>* %496, align 1
  %497 = getelementptr inbounds i8, i8* %482, i64 64
  %498 = bitcast i8* %497 to <4 x i64>*
  store <4 x i64> %490, <4 x i64>* %498, align 1
  %499 = getelementptr inbounds i8, i8* %482, i64 96
  %500 = bitcast i8* %499 to <4 x i64>*
  store <4 x i64> %493, <4 x i64>* %500, align 1
  %501 = getelementptr inbounds i8, i8* %481, i64 %1
  %502 = getelementptr inbounds i8, i8* %482, i64 %3
  %503 = add nsw i32 %460, -2
  %504 = icmp eq i32 %503, 0
  br i1 %504, label %505, label %459

505:                                              ; preds = %33, %413, %62, %367, %91, %321, %120, %275, %149, %229, %178, %183, %459
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @aom_highbd_convolve_copy_avx2(i16* nocapture readonly, i64, i16* nocapture, i64, i32, i32) local_unnamed_addr #0 {
  switch i32 %4, label %430 [
    i32 2, label %125
    i32 4, label %96
    i32 8, label %67
    i32 16, label %38
    i32 32, label %7
    i32 64, label %384
  ]

7:                                                ; preds = %6
  %8 = add nsw i32 %5, -2
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %33

11:                                               ; preds = %7
  %12 = bitcast i16* %0 to <4 x i64>*
  %13 = load <4 x i64>, <4 x i64>* %12, align 1
  %14 = getelementptr inbounds i16, i16* %0, i64 16
  %15 = bitcast i16* %14 to <4 x i64>*
  %16 = load <4 x i64>, <4 x i64>* %15, align 1
  %17 = getelementptr inbounds i16, i16* %0, i64 %1
  %18 = bitcast i16* %17 to <4 x i64>*
  %19 = load <4 x i64>, <4 x i64>* %18, align 1
  %20 = getelementptr inbounds i16, i16* %17, i64 16
  %21 = bitcast i16* %20 to <4 x i64>*
  %22 = load <4 x i64>, <4 x i64>* %21, align 1
  %23 = getelementptr inbounds i16, i16* %17, i64 %1
  %24 = bitcast i16* %2 to <4 x i64>*
  store <4 x i64> %13, <4 x i64>* %24, align 1
  %25 = getelementptr inbounds i16, i16* %2, i64 16
  %26 = bitcast i16* %25 to <4 x i64>*
  store <4 x i64> %16, <4 x i64>* %26, align 1
  %27 = getelementptr inbounds i16, i16* %2, i64 %3
  %28 = bitcast i16* %27 to <4 x i64>*
  store <4 x i64> %19, <4 x i64>* %28, align 1
  %29 = getelementptr inbounds i16, i16* %27, i64 16
  %30 = bitcast i16* %29 to <4 x i64>*
  store <4 x i64> %22, <4 x i64>* %30, align 1
  %31 = getelementptr inbounds i16, i16* %27, i64 %3
  %32 = add nsw i32 %5, -2
  br label %33

33:                                               ; preds = %11, %7
  %34 = phi i32 [ %5, %7 ], [ %32, %11 ]
  %35 = phi i16* [ %2, %7 ], [ %31, %11 ]
  %36 = phi i16* [ %0, %7 ], [ %23, %11 ]
  %37 = icmp ult i32 %8, 2
  br i1 %37, label %516, label %338

38:                                               ; preds = %6
  %39 = add nsw i32 %5, -2
  %40 = lshr i32 %39, 1
  %41 = add nuw i32 %40, 1
  %42 = and i32 %41, 3
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %62, label %44

44:                                               ; preds = %38, %44
  %45 = phi i32 [ %59, %44 ], [ %5, %38 ]
  %46 = phi i16* [ %58, %44 ], [ %2, %38 ]
  %47 = phi i16* [ %54, %44 ], [ %0, %38 ]
  %48 = phi i32 [ %60, %44 ], [ %42, %38 ]
  %49 = bitcast i16* %47 to <4 x i64>*
  %50 = load <4 x i64>, <4 x i64>* %49, align 1
  %51 = getelementptr inbounds i16, i16* %47, i64 %1
  %52 = bitcast i16* %51 to <4 x i64>*
  %53 = load <4 x i64>, <4 x i64>* %52, align 1
  %54 = getelementptr inbounds i16, i16* %51, i64 %1
  %55 = bitcast i16* %46 to <4 x i64>*
  store <4 x i64> %50, <4 x i64>* %55, align 1
  %56 = getelementptr inbounds i16, i16* %46, i64 %3
  %57 = bitcast i16* %56 to <4 x i64>*
  store <4 x i64> %53, <4 x i64>* %57, align 1
  %58 = getelementptr inbounds i16, i16* %56, i64 %3
  %59 = add nsw i32 %45, -2
  %60 = add i32 %48, -1
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %44, !llvm.loop !8

62:                                               ; preds = %44, %38
  %63 = phi i32 [ %5, %38 ], [ %59, %44 ]
  %64 = phi i16* [ %2, %38 ], [ %58, %44 ]
  %65 = phi i16* [ %0, %38 ], [ %54, %44 ]
  %66 = icmp ult i32 %39, 6
  br i1 %66, label %516, label %292

67:                                               ; preds = %6
  %68 = add nsw i32 %5, -2
  %69 = lshr i32 %68, 1
  %70 = add nuw i32 %69, 1
  %71 = and i32 %70, 3
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %91, label %73

73:                                               ; preds = %67, %73
  %74 = phi i32 [ %88, %73 ], [ %5, %67 ]
  %75 = phi i16* [ %87, %73 ], [ %2, %67 ]
  %76 = phi i16* [ %83, %73 ], [ %0, %67 ]
  %77 = phi i32 [ %89, %73 ], [ %71, %67 ]
  %78 = bitcast i16* %76 to <2 x i64>*
  %79 = load <2 x i64>, <2 x i64>* %78, align 1
  %80 = getelementptr inbounds i16, i16* %76, i64 %1
  %81 = bitcast i16* %80 to <2 x i64>*
  %82 = load <2 x i64>, <2 x i64>* %81, align 1
  %83 = getelementptr inbounds i16, i16* %80, i64 %1
  %84 = bitcast i16* %75 to <2 x i64>*
  store <2 x i64> %79, <2 x i64>* %84, align 16
  %85 = getelementptr inbounds i16, i16* %75, i64 %3
  %86 = bitcast i16* %85 to <2 x i64>*
  store <2 x i64> %82, <2 x i64>* %86, align 16
  %87 = getelementptr inbounds i16, i16* %85, i64 %3
  %88 = add nsw i32 %74, -2
  %89 = add i32 %77, -1
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %73, !llvm.loop !9

91:                                               ; preds = %73, %67
  %92 = phi i32 [ %5, %67 ], [ %88, %73 ]
  %93 = phi i16* [ %2, %67 ], [ %87, %73 ]
  %94 = phi i16* [ %0, %67 ], [ %83, %73 ]
  %95 = icmp ult i32 %68, 6
  br i1 %95, label %516, label %246

96:                                               ; preds = %6
  %97 = add nsw i32 %5, -2
  %98 = lshr i32 %97, 1
  %99 = add nuw i32 %98, 1
  %100 = and i32 %99, 3
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %120, label %102

102:                                              ; preds = %96, %102
  %103 = phi i32 [ %117, %102 ], [ %5, %96 ]
  %104 = phi i16* [ %116, %102 ], [ %2, %96 ]
  %105 = phi i16* [ %112, %102 ], [ %0, %96 ]
  %106 = phi i32 [ %118, %102 ], [ %100, %96 ]
  %107 = bitcast i16* %105 to i64*
  %108 = load i64, i64* %107, align 1
  %109 = getelementptr inbounds i16, i16* %105, i64 %1
  %110 = bitcast i16* %109 to i64*
  %111 = load i64, i64* %110, align 1
  %112 = getelementptr inbounds i16, i16* %109, i64 %1
  %113 = bitcast i16* %104 to i64*
  store i64 %108, i64* %113, align 1
  %114 = getelementptr inbounds i16, i16* %104, i64 %3
  %115 = bitcast i16* %114 to i64*
  store i64 %111, i64* %115, align 1
  %116 = getelementptr inbounds i16, i16* %114, i64 %3
  %117 = add nsw i32 %103, -2
  %118 = add i32 %106, -1
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %102, !llvm.loop !10

120:                                              ; preds = %102, %96
  %121 = phi i32 [ %5, %96 ], [ %117, %102 ]
  %122 = phi i16* [ %2, %96 ], [ %116, %102 ]
  %123 = phi i16* [ %0, %96 ], [ %112, %102 ]
  %124 = icmp ult i32 %97, 6
  br i1 %124, label %516, label %200

125:                                              ; preds = %6
  %126 = add nsw i32 %5, -2
  %127 = lshr i32 %126, 1
  %128 = add nuw i32 %127, 1
  %129 = and i32 %128, 3
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %149, label %131

131:                                              ; preds = %125, %131
  %132 = phi i32 [ %146, %131 ], [ %5, %125 ]
  %133 = phi i16* [ %145, %131 ], [ %2, %125 ]
  %134 = phi i16* [ %144, %131 ], [ %0, %125 ]
  %135 = phi i32 [ %147, %131 ], [ %129, %125 ]
  %136 = bitcast i16* %134 to i32*
  %137 = bitcast i16* %133 to i32*
  %138 = load i32, i32* %136, align 2
  store i32 %138, i32* %137, align 2
  %139 = getelementptr inbounds i16, i16* %134, i64 %1
  %140 = getelementptr inbounds i16, i16* %133, i64 %3
  %141 = bitcast i16* %139 to i32*
  %142 = bitcast i16* %140 to i32*
  %143 = load i32, i32* %141, align 2
  store i32 %143, i32* %142, align 2
  %144 = getelementptr inbounds i16, i16* %139, i64 %1
  %145 = getelementptr inbounds i16, i16* %140, i64 %3
  %146 = add nsw i32 %132, -2
  %147 = add i32 %135, -1
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %131, !llvm.loop !11

149:                                              ; preds = %131, %125
  %150 = phi i32 [ %5, %125 ], [ %146, %131 ]
  %151 = phi i16* [ %2, %125 ], [ %145, %131 ]
  %152 = phi i16* [ %0, %125 ], [ %144, %131 ]
  %153 = icmp ult i32 %126, 6
  br i1 %153, label %516, label %154

154:                                              ; preds = %149, %154
  %155 = phi i32 [ %198, %154 ], [ %150, %149 ]
  %156 = phi i16* [ %197, %154 ], [ %151, %149 ]
  %157 = phi i16* [ %196, %154 ], [ %152, %149 ]
  %158 = bitcast i16* %157 to i32*
  %159 = bitcast i16* %156 to i32*
  %160 = load i32, i32* %158, align 2
  store i32 %160, i32* %159, align 2
  %161 = getelementptr inbounds i16, i16* %157, i64 %1
  %162 = getelementptr inbounds i16, i16* %156, i64 %3
  %163 = bitcast i16* %161 to i32*
  %164 = bitcast i16* %162 to i32*
  %165 = load i32, i32* %163, align 2
  store i32 %165, i32* %164, align 2
  %166 = getelementptr inbounds i16, i16* %161, i64 %1
  %167 = getelementptr inbounds i16, i16* %162, i64 %3
  %168 = bitcast i16* %166 to i32*
  %169 = bitcast i16* %167 to i32*
  %170 = load i32, i32* %168, align 2
  store i32 %170, i32* %169, align 2
  %171 = getelementptr inbounds i16, i16* %166, i64 %1
  %172 = getelementptr inbounds i16, i16* %167, i64 %3
  %173 = bitcast i16* %171 to i32*
  %174 = bitcast i16* %172 to i32*
  %175 = load i32, i32* %173, align 2
  store i32 %175, i32* %174, align 2
  %176 = getelementptr inbounds i16, i16* %171, i64 %1
  %177 = getelementptr inbounds i16, i16* %172, i64 %3
  %178 = bitcast i16* %176 to i32*
  %179 = bitcast i16* %177 to i32*
  %180 = load i32, i32* %178, align 2
  store i32 %180, i32* %179, align 2
  %181 = getelementptr inbounds i16, i16* %176, i64 %1
  %182 = getelementptr inbounds i16, i16* %177, i64 %3
  %183 = bitcast i16* %181 to i32*
  %184 = bitcast i16* %182 to i32*
  %185 = load i32, i32* %183, align 2
  store i32 %185, i32* %184, align 2
  %186 = getelementptr inbounds i16, i16* %181, i64 %1
  %187 = getelementptr inbounds i16, i16* %182, i64 %3
  %188 = bitcast i16* %186 to i32*
  %189 = bitcast i16* %187 to i32*
  %190 = load i32, i32* %188, align 2
  store i32 %190, i32* %189, align 2
  %191 = getelementptr inbounds i16, i16* %186, i64 %1
  %192 = getelementptr inbounds i16, i16* %187, i64 %3
  %193 = bitcast i16* %191 to i32*
  %194 = bitcast i16* %192 to i32*
  %195 = load i32, i32* %193, align 2
  store i32 %195, i32* %194, align 2
  %196 = getelementptr inbounds i16, i16* %191, i64 %1
  %197 = getelementptr inbounds i16, i16* %192, i64 %3
  %198 = add nsw i32 %155, -8
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %516, label %154

200:                                              ; preds = %120, %200
  %201 = phi i32 [ %244, %200 ], [ %121, %120 ]
  %202 = phi i16* [ %243, %200 ], [ %122, %120 ]
  %203 = phi i16* [ %239, %200 ], [ %123, %120 ]
  %204 = bitcast i16* %203 to i64*
  %205 = load i64, i64* %204, align 1
  %206 = getelementptr inbounds i16, i16* %203, i64 %1
  %207 = bitcast i16* %206 to i64*
  %208 = load i64, i64* %207, align 1
  %209 = getelementptr inbounds i16, i16* %206, i64 %1
  %210 = bitcast i16* %202 to i64*
  store i64 %205, i64* %210, align 1
  %211 = getelementptr inbounds i16, i16* %202, i64 %3
  %212 = bitcast i16* %211 to i64*
  store i64 %208, i64* %212, align 1
  %213 = getelementptr inbounds i16, i16* %211, i64 %3
  %214 = bitcast i16* %209 to i64*
  %215 = load i64, i64* %214, align 1
  %216 = getelementptr inbounds i16, i16* %209, i64 %1
  %217 = bitcast i16* %216 to i64*
  %218 = load i64, i64* %217, align 1
  %219 = getelementptr inbounds i16, i16* %216, i64 %1
  %220 = bitcast i16* %213 to i64*
  store i64 %215, i64* %220, align 1
  %221 = getelementptr inbounds i16, i16* %213, i64 %3
  %222 = bitcast i16* %221 to i64*
  store i64 %218, i64* %222, align 1
  %223 = getelementptr inbounds i16, i16* %221, i64 %3
  %224 = bitcast i16* %219 to i64*
  %225 = load i64, i64* %224, align 1
  %226 = getelementptr inbounds i16, i16* %219, i64 %1
  %227 = bitcast i16* %226 to i64*
  %228 = load i64, i64* %227, align 1
  %229 = getelementptr inbounds i16, i16* %226, i64 %1
  %230 = bitcast i16* %223 to i64*
  store i64 %225, i64* %230, align 1
  %231 = getelementptr inbounds i16, i16* %223, i64 %3
  %232 = bitcast i16* %231 to i64*
  store i64 %228, i64* %232, align 1
  %233 = getelementptr inbounds i16, i16* %231, i64 %3
  %234 = bitcast i16* %229 to i64*
  %235 = load i64, i64* %234, align 1
  %236 = getelementptr inbounds i16, i16* %229, i64 %1
  %237 = bitcast i16* %236 to i64*
  %238 = load i64, i64* %237, align 1
  %239 = getelementptr inbounds i16, i16* %236, i64 %1
  %240 = bitcast i16* %233 to i64*
  store i64 %235, i64* %240, align 1
  %241 = getelementptr inbounds i16, i16* %233, i64 %3
  %242 = bitcast i16* %241 to i64*
  store i64 %238, i64* %242, align 1
  %243 = getelementptr inbounds i16, i16* %241, i64 %3
  %244 = add nsw i32 %201, -8
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %516, label %200

246:                                              ; preds = %91, %246
  %247 = phi i32 [ %290, %246 ], [ %92, %91 ]
  %248 = phi i16* [ %289, %246 ], [ %93, %91 ]
  %249 = phi i16* [ %285, %246 ], [ %94, %91 ]
  %250 = bitcast i16* %249 to <2 x i64>*
  %251 = load <2 x i64>, <2 x i64>* %250, align 1
  %252 = getelementptr inbounds i16, i16* %249, i64 %1
  %253 = bitcast i16* %252 to <2 x i64>*
  %254 = load <2 x i64>, <2 x i64>* %253, align 1
  %255 = getelementptr inbounds i16, i16* %252, i64 %1
  %256 = bitcast i16* %248 to <2 x i64>*
  store <2 x i64> %251, <2 x i64>* %256, align 16
  %257 = getelementptr inbounds i16, i16* %248, i64 %3
  %258 = bitcast i16* %257 to <2 x i64>*
  store <2 x i64> %254, <2 x i64>* %258, align 16
  %259 = getelementptr inbounds i16, i16* %257, i64 %3
  %260 = bitcast i16* %255 to <2 x i64>*
  %261 = load <2 x i64>, <2 x i64>* %260, align 1
  %262 = getelementptr inbounds i16, i16* %255, i64 %1
  %263 = bitcast i16* %262 to <2 x i64>*
  %264 = load <2 x i64>, <2 x i64>* %263, align 1
  %265 = getelementptr inbounds i16, i16* %262, i64 %1
  %266 = bitcast i16* %259 to <2 x i64>*
  store <2 x i64> %261, <2 x i64>* %266, align 16
  %267 = getelementptr inbounds i16, i16* %259, i64 %3
  %268 = bitcast i16* %267 to <2 x i64>*
  store <2 x i64> %264, <2 x i64>* %268, align 16
  %269 = getelementptr inbounds i16, i16* %267, i64 %3
  %270 = bitcast i16* %265 to <2 x i64>*
  %271 = load <2 x i64>, <2 x i64>* %270, align 1
  %272 = getelementptr inbounds i16, i16* %265, i64 %1
  %273 = bitcast i16* %272 to <2 x i64>*
  %274 = load <2 x i64>, <2 x i64>* %273, align 1
  %275 = getelementptr inbounds i16, i16* %272, i64 %1
  %276 = bitcast i16* %269 to <2 x i64>*
  store <2 x i64> %271, <2 x i64>* %276, align 16
  %277 = getelementptr inbounds i16, i16* %269, i64 %3
  %278 = bitcast i16* %277 to <2 x i64>*
  store <2 x i64> %274, <2 x i64>* %278, align 16
  %279 = getelementptr inbounds i16, i16* %277, i64 %3
  %280 = bitcast i16* %275 to <2 x i64>*
  %281 = load <2 x i64>, <2 x i64>* %280, align 1
  %282 = getelementptr inbounds i16, i16* %275, i64 %1
  %283 = bitcast i16* %282 to <2 x i64>*
  %284 = load <2 x i64>, <2 x i64>* %283, align 1
  %285 = getelementptr inbounds i16, i16* %282, i64 %1
  %286 = bitcast i16* %279 to <2 x i64>*
  store <2 x i64> %281, <2 x i64>* %286, align 16
  %287 = getelementptr inbounds i16, i16* %279, i64 %3
  %288 = bitcast i16* %287 to <2 x i64>*
  store <2 x i64> %284, <2 x i64>* %288, align 16
  %289 = getelementptr inbounds i16, i16* %287, i64 %3
  %290 = add nsw i32 %247, -8
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %516, label %246

292:                                              ; preds = %62, %292
  %293 = phi i32 [ %336, %292 ], [ %63, %62 ]
  %294 = phi i16* [ %335, %292 ], [ %64, %62 ]
  %295 = phi i16* [ %331, %292 ], [ %65, %62 ]
  %296 = bitcast i16* %295 to <4 x i64>*
  %297 = load <4 x i64>, <4 x i64>* %296, align 1
  %298 = getelementptr inbounds i16, i16* %295, i64 %1
  %299 = bitcast i16* %298 to <4 x i64>*
  %300 = load <4 x i64>, <4 x i64>* %299, align 1
  %301 = getelementptr inbounds i16, i16* %298, i64 %1
  %302 = bitcast i16* %294 to <4 x i64>*
  store <4 x i64> %297, <4 x i64>* %302, align 1
  %303 = getelementptr inbounds i16, i16* %294, i64 %3
  %304 = bitcast i16* %303 to <4 x i64>*
  store <4 x i64> %300, <4 x i64>* %304, align 1
  %305 = getelementptr inbounds i16, i16* %303, i64 %3
  %306 = bitcast i16* %301 to <4 x i64>*
  %307 = load <4 x i64>, <4 x i64>* %306, align 1
  %308 = getelementptr inbounds i16, i16* %301, i64 %1
  %309 = bitcast i16* %308 to <4 x i64>*
  %310 = load <4 x i64>, <4 x i64>* %309, align 1
  %311 = getelementptr inbounds i16, i16* %308, i64 %1
  %312 = bitcast i16* %305 to <4 x i64>*
  store <4 x i64> %307, <4 x i64>* %312, align 1
  %313 = getelementptr inbounds i16, i16* %305, i64 %3
  %314 = bitcast i16* %313 to <4 x i64>*
  store <4 x i64> %310, <4 x i64>* %314, align 1
  %315 = getelementptr inbounds i16, i16* %313, i64 %3
  %316 = bitcast i16* %311 to <4 x i64>*
  %317 = load <4 x i64>, <4 x i64>* %316, align 1
  %318 = getelementptr inbounds i16, i16* %311, i64 %1
  %319 = bitcast i16* %318 to <4 x i64>*
  %320 = load <4 x i64>, <4 x i64>* %319, align 1
  %321 = getelementptr inbounds i16, i16* %318, i64 %1
  %322 = bitcast i16* %315 to <4 x i64>*
  store <4 x i64> %317, <4 x i64>* %322, align 1
  %323 = getelementptr inbounds i16, i16* %315, i64 %3
  %324 = bitcast i16* %323 to <4 x i64>*
  store <4 x i64> %320, <4 x i64>* %324, align 1
  %325 = getelementptr inbounds i16, i16* %323, i64 %3
  %326 = bitcast i16* %321 to <4 x i64>*
  %327 = load <4 x i64>, <4 x i64>* %326, align 1
  %328 = getelementptr inbounds i16, i16* %321, i64 %1
  %329 = bitcast i16* %328 to <4 x i64>*
  %330 = load <4 x i64>, <4 x i64>* %329, align 1
  %331 = getelementptr inbounds i16, i16* %328, i64 %1
  %332 = bitcast i16* %325 to <4 x i64>*
  store <4 x i64> %327, <4 x i64>* %332, align 1
  %333 = getelementptr inbounds i16, i16* %325, i64 %3
  %334 = bitcast i16* %333 to <4 x i64>*
  store <4 x i64> %330, <4 x i64>* %334, align 1
  %335 = getelementptr inbounds i16, i16* %333, i64 %3
  %336 = add nsw i32 %293, -8
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %516, label %292

338:                                              ; preds = %33, %338
  %339 = phi i32 [ %382, %338 ], [ %34, %33 ]
  %340 = phi i16* [ %381, %338 ], [ %35, %33 ]
  %341 = phi i16* [ %373, %338 ], [ %36, %33 ]
  %342 = bitcast i16* %341 to <4 x i64>*
  %343 = load <4 x i64>, <4 x i64>* %342, align 1
  %344 = getelementptr inbounds i16, i16* %341, i64 16
  %345 = bitcast i16* %344 to <4 x i64>*
  %346 = load <4 x i64>, <4 x i64>* %345, align 1
  %347 = getelementptr inbounds i16, i16* %341, i64 %1
  %348 = bitcast i16* %347 to <4 x i64>*
  %349 = load <4 x i64>, <4 x i64>* %348, align 1
  %350 = getelementptr inbounds i16, i16* %347, i64 16
  %351 = bitcast i16* %350 to <4 x i64>*
  %352 = load <4 x i64>, <4 x i64>* %351, align 1
  %353 = getelementptr inbounds i16, i16* %347, i64 %1
  %354 = bitcast i16* %340 to <4 x i64>*
  store <4 x i64> %343, <4 x i64>* %354, align 1
  %355 = getelementptr inbounds i16, i16* %340, i64 16
  %356 = bitcast i16* %355 to <4 x i64>*
  store <4 x i64> %346, <4 x i64>* %356, align 1
  %357 = getelementptr inbounds i16, i16* %340, i64 %3
  %358 = bitcast i16* %357 to <4 x i64>*
  store <4 x i64> %349, <4 x i64>* %358, align 1
  %359 = getelementptr inbounds i16, i16* %357, i64 16
  %360 = bitcast i16* %359 to <4 x i64>*
  store <4 x i64> %352, <4 x i64>* %360, align 1
  %361 = getelementptr inbounds i16, i16* %357, i64 %3
  %362 = bitcast i16* %353 to <4 x i64>*
  %363 = load <4 x i64>, <4 x i64>* %362, align 1
  %364 = getelementptr inbounds i16, i16* %353, i64 16
  %365 = bitcast i16* %364 to <4 x i64>*
  %366 = load <4 x i64>, <4 x i64>* %365, align 1
  %367 = getelementptr inbounds i16, i16* %353, i64 %1
  %368 = bitcast i16* %367 to <4 x i64>*
  %369 = load <4 x i64>, <4 x i64>* %368, align 1
  %370 = getelementptr inbounds i16, i16* %367, i64 16
  %371 = bitcast i16* %370 to <4 x i64>*
  %372 = load <4 x i64>, <4 x i64>* %371, align 1
  %373 = getelementptr inbounds i16, i16* %367, i64 %1
  %374 = bitcast i16* %361 to <4 x i64>*
  store <4 x i64> %363, <4 x i64>* %374, align 1
  %375 = getelementptr inbounds i16, i16* %361, i64 16
  %376 = bitcast i16* %375 to <4 x i64>*
  store <4 x i64> %366, <4 x i64>* %376, align 1
  %377 = getelementptr inbounds i16, i16* %361, i64 %3
  %378 = bitcast i16* %377 to <4 x i64>*
  store <4 x i64> %369, <4 x i64>* %378, align 1
  %379 = getelementptr inbounds i16, i16* %377, i64 16
  %380 = bitcast i16* %379 to <4 x i64>*
  store <4 x i64> %372, <4 x i64>* %380, align 1
  %381 = getelementptr inbounds i16, i16* %377, i64 %3
  %382 = add nsw i32 %339, -4
  %383 = icmp eq i32 %382, 0
  br i1 %383, label %516, label %338

384:                                              ; preds = %6, %384
  %385 = phi i32 [ %428, %384 ], [ %5, %6 ]
  %386 = phi i16* [ %427, %384 ], [ %2, %6 ]
  %387 = phi i16* [ %426, %384 ], [ %0, %6 ]
  %388 = bitcast i16* %387 to <4 x i64>*
  %389 = load <4 x i64>, <4 x i64>* %388, align 1
  %390 = getelementptr inbounds i16, i16* %387, i64 16
  %391 = bitcast i16* %390 to <4 x i64>*
  %392 = load <4 x i64>, <4 x i64>* %391, align 1
  %393 = getelementptr inbounds i16, i16* %387, i64 32
  %394 = bitcast i16* %393 to <4 x i64>*
  %395 = load <4 x i64>, <4 x i64>* %394, align 1
  %396 = getelementptr inbounds i16, i16* %387, i64 48
  %397 = bitcast i16* %396 to <4 x i64>*
  %398 = load <4 x i64>, <4 x i64>* %397, align 1
  %399 = bitcast i16* %386 to <4 x i64>*
  store <4 x i64> %389, <4 x i64>* %399, align 1
  %400 = getelementptr inbounds i16, i16* %386, i64 16
  %401 = bitcast i16* %400 to <4 x i64>*
  store <4 x i64> %392, <4 x i64>* %401, align 1
  %402 = getelementptr inbounds i16, i16* %386, i64 32
  %403 = bitcast i16* %402 to <4 x i64>*
  store <4 x i64> %395, <4 x i64>* %403, align 1
  %404 = getelementptr inbounds i16, i16* %386, i64 48
  %405 = bitcast i16* %404 to <4 x i64>*
  store <4 x i64> %398, <4 x i64>* %405, align 1
  %406 = getelementptr inbounds i16, i16* %387, i64 %1
  %407 = getelementptr inbounds i16, i16* %386, i64 %3
  %408 = bitcast i16* %406 to <4 x i64>*
  %409 = load <4 x i64>, <4 x i64>* %408, align 1
  %410 = getelementptr inbounds i16, i16* %406, i64 16
  %411 = bitcast i16* %410 to <4 x i64>*
  %412 = load <4 x i64>, <4 x i64>* %411, align 1
  %413 = getelementptr inbounds i16, i16* %406, i64 32
  %414 = bitcast i16* %413 to <4 x i64>*
  %415 = load <4 x i64>, <4 x i64>* %414, align 1
  %416 = getelementptr inbounds i16, i16* %406, i64 48
  %417 = bitcast i16* %416 to <4 x i64>*
  %418 = load <4 x i64>, <4 x i64>* %417, align 1
  %419 = bitcast i16* %407 to <4 x i64>*
  store <4 x i64> %409, <4 x i64>* %419, align 1
  %420 = getelementptr inbounds i16, i16* %407, i64 16
  %421 = bitcast i16* %420 to <4 x i64>*
  store <4 x i64> %412, <4 x i64>* %421, align 1
  %422 = getelementptr inbounds i16, i16* %407, i64 32
  %423 = bitcast i16* %422 to <4 x i64>*
  store <4 x i64> %415, <4 x i64>* %423, align 1
  %424 = getelementptr inbounds i16, i16* %407, i64 48
  %425 = bitcast i16* %424 to <4 x i64>*
  store <4 x i64> %418, <4 x i64>* %425, align 1
  %426 = getelementptr inbounds i16, i16* %406, i64 %1
  %427 = getelementptr inbounds i16, i16* %407, i64 %3
  %428 = add nsw i32 %385, -2
  %429 = icmp eq i32 %428, 0
  br i1 %429, label %516, label %384

430:                                              ; preds = %6, %430
  %431 = phi i32 [ %514, %430 ], [ %5, %6 ]
  %432 = phi i16* [ %513, %430 ], [ %2, %6 ]
  %433 = phi i16* [ %512, %430 ], [ %0, %6 ]
  %434 = bitcast i16* %433 to <4 x i64>*
  %435 = load <4 x i64>, <4 x i64>* %434, align 1
  %436 = getelementptr inbounds i16, i16* %433, i64 16
  %437 = bitcast i16* %436 to <4 x i64>*
  %438 = load <4 x i64>, <4 x i64>* %437, align 1
  %439 = getelementptr inbounds i16, i16* %433, i64 32
  %440 = bitcast i16* %439 to <4 x i64>*
  %441 = load <4 x i64>, <4 x i64>* %440, align 1
  %442 = getelementptr inbounds i16, i16* %433, i64 48
  %443 = bitcast i16* %442 to <4 x i64>*
  %444 = load <4 x i64>, <4 x i64>* %443, align 1
  %445 = getelementptr inbounds i16, i16* %433, i64 64
  %446 = bitcast i16* %445 to <4 x i64>*
  %447 = load <4 x i64>, <4 x i64>* %446, align 1
  %448 = getelementptr inbounds i16, i16* %433, i64 80
  %449 = bitcast i16* %448 to <4 x i64>*
  %450 = load <4 x i64>, <4 x i64>* %449, align 1
  %451 = getelementptr inbounds i16, i16* %433, i64 96
  %452 = bitcast i16* %451 to <4 x i64>*
  %453 = load <4 x i64>, <4 x i64>* %452, align 1
  %454 = getelementptr inbounds i16, i16* %433, i64 112
  %455 = bitcast i16* %454 to <4 x i64>*
  %456 = load <4 x i64>, <4 x i64>* %455, align 1
  %457 = bitcast i16* %432 to <4 x i64>*
  store <4 x i64> %435, <4 x i64>* %457, align 1
  %458 = getelementptr inbounds i16, i16* %432, i64 16
  %459 = bitcast i16* %458 to <4 x i64>*
  store <4 x i64> %438, <4 x i64>* %459, align 1
  %460 = getelementptr inbounds i16, i16* %432, i64 32
  %461 = bitcast i16* %460 to <4 x i64>*
  store <4 x i64> %441, <4 x i64>* %461, align 1
  %462 = getelementptr inbounds i16, i16* %432, i64 48
  %463 = bitcast i16* %462 to <4 x i64>*
  store <4 x i64> %444, <4 x i64>* %463, align 1
  %464 = getelementptr inbounds i16, i16* %432, i64 64
  %465 = bitcast i16* %464 to <4 x i64>*
  store <4 x i64> %447, <4 x i64>* %465, align 1
  %466 = getelementptr inbounds i16, i16* %432, i64 80
  %467 = bitcast i16* %466 to <4 x i64>*
  store <4 x i64> %450, <4 x i64>* %467, align 1
  %468 = getelementptr inbounds i16, i16* %432, i64 96
  %469 = bitcast i16* %468 to <4 x i64>*
  store <4 x i64> %453, <4 x i64>* %469, align 1
  %470 = getelementptr inbounds i16, i16* %432, i64 112
  %471 = bitcast i16* %470 to <4 x i64>*
  store <4 x i64> %456, <4 x i64>* %471, align 1
  %472 = getelementptr inbounds i16, i16* %433, i64 %1
  %473 = getelementptr inbounds i16, i16* %432, i64 %3
  %474 = bitcast i16* %472 to <4 x i64>*
  %475 = load <4 x i64>, <4 x i64>* %474, align 1
  %476 = getelementptr inbounds i16, i16* %472, i64 16
  %477 = bitcast i16* %476 to <4 x i64>*
  %478 = load <4 x i64>, <4 x i64>* %477, align 1
  %479 = getelementptr inbounds i16, i16* %472, i64 32
  %480 = bitcast i16* %479 to <4 x i64>*
  %481 = load <4 x i64>, <4 x i64>* %480, align 1
  %482 = getelementptr inbounds i16, i16* %472, i64 48
  %483 = bitcast i16* %482 to <4 x i64>*
  %484 = load <4 x i64>, <4 x i64>* %483, align 1
  %485 = getelementptr inbounds i16, i16* %472, i64 64
  %486 = bitcast i16* %485 to <4 x i64>*
  %487 = load <4 x i64>, <4 x i64>* %486, align 1
  %488 = getelementptr inbounds i16, i16* %472, i64 80
  %489 = bitcast i16* %488 to <4 x i64>*
  %490 = load <4 x i64>, <4 x i64>* %489, align 1
  %491 = getelementptr inbounds i16, i16* %472, i64 96
  %492 = bitcast i16* %491 to <4 x i64>*
  %493 = load <4 x i64>, <4 x i64>* %492, align 1
  %494 = getelementptr inbounds i16, i16* %472, i64 112
  %495 = bitcast i16* %494 to <4 x i64>*
  %496 = load <4 x i64>, <4 x i64>* %495, align 1
  %497 = bitcast i16* %473 to <4 x i64>*
  store <4 x i64> %475, <4 x i64>* %497, align 1
  %498 = getelementptr inbounds i16, i16* %473, i64 16
  %499 = bitcast i16* %498 to <4 x i64>*
  store <4 x i64> %478, <4 x i64>* %499, align 1
  %500 = getelementptr inbounds i16, i16* %473, i64 32
  %501 = bitcast i16* %500 to <4 x i64>*
  store <4 x i64> %481, <4 x i64>* %501, align 1
  %502 = getelementptr inbounds i16, i16* %473, i64 48
  %503 = bitcast i16* %502 to <4 x i64>*
  store <4 x i64> %484, <4 x i64>* %503, align 1
  %504 = getelementptr inbounds i16, i16* %473, i64 64
  %505 = bitcast i16* %504 to <4 x i64>*
  store <4 x i64> %487, <4 x i64>* %505, align 1
  %506 = getelementptr inbounds i16, i16* %473, i64 80
  %507 = bitcast i16* %506 to <4 x i64>*
  store <4 x i64> %490, <4 x i64>* %507, align 1
  %508 = getelementptr inbounds i16, i16* %473, i64 96
  %509 = bitcast i16* %508 to <4 x i64>*
  store <4 x i64> %493, <4 x i64>* %509, align 1
  %510 = getelementptr inbounds i16, i16* %473, i64 112
  %511 = bitcast i16* %510 to <4 x i64>*
  store <4 x i64> %496, <4 x i64>* %511, align 1
  %512 = getelementptr inbounds i16, i16* %472, i64 %1
  %513 = getelementptr inbounds i16, i16* %473, i64 %3
  %514 = add nsw i32 %431, -2
  %515 = icmp eq i32 %514, 0
  br i1 %515, label %516, label %430

516:                                              ; preds = %384, %33, %338, %62, %292, %91, %246, %120, %200, %149, %154, %430
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+avx,+avx2,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !3}
!8 = distinct !{!8, !3}
!9 = distinct !{!9, !3}
!10 = distinct !{!10, !3}
!11 = distinct !{!11, !3}
