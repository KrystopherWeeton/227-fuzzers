; ModuleID = '../../third_party/boringssl/src/crypto/evp/p_ed25519.c'
source_filename = "../../third_party/boringssl/src/crypto/evp/p_ed25519.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.evp_pkey_ctx_st = type { %struct.evp_pkey_method_st*, %struct.engine_st*, %struct.evp_pkey_st*, %struct.evp_pkey_st*, i32, i8* }
%struct.evp_pkey_method_st = type { i32, {}*, i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_ctx_st*)*, void (%struct.evp_pkey_ctx_st*)*, i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*)*, i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_ctx_st*, i32, i32, i8*)* }
%struct.engine_st = type opaque
%struct.evp_pkey_st = type { i32, i32, %union.anon, %struct.evp_pkey_asn1_method_st* }
%union.anon = type { i8* }
%struct.evp_pkey_asn1_method_st = type { i32, [9 x i8], i8, i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, i8*, i64)*, i32 (%struct.evp_pkey_st*, i8*, i64)*, i32 (%struct.evp_pkey_st*, i8*, i64*)*, i32 (%struct.evp_pkey_st*, i8*, i64*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, void (%struct.evp_pkey_st*)* }
%struct.cbs_st = type opaque
%struct.cbb_st = type opaque
%struct.ED25519_KEY = type { %union.anon.0, i8 }
%union.anon.0 = type { [64 x i8] }
%struct.anon = type { [32 x i8], [32 x i8] }

@ed25519_pkey_meth = hidden local_unnamed_addr constant { i32, i32 (%struct.evp_pkey_ctx_st*)*, i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_ctx_st*)*, void (%struct.evp_pkey_ctx_st*)*, i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*)*, i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_ctx_st*, i32, i32, i8*)* } { i32 949, i32 (%struct.evp_pkey_ctx_st*)* null, i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_ctx_st*)* @pkey_ed25519_copy, void (%struct.evp_pkey_ctx_st*)* null, i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_st*)* @pkey_ed25519_keygen, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)* null, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)* @pkey_ed25519_sign_message, i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)* null, i32 (%struct.evp_pkey_ctx_st*, i8*, i64, i8*, i64)* @pkey_ed25519_verify_message, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)* null, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)* null, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*, i8*, i64)* null, i32 (%struct.evp_pkey_ctx_st*, i8*, i64*)* null, i32 (%struct.evp_pkey_ctx_st*, %struct.evp_pkey_st*)* null, i32 (%struct.evp_pkey_ctx_st*, i32, i32, i8*)* null }, align 8
@.str = private unnamed_addr constant [55 x i8] c"../../third_party/boringssl/src/crypto/evp/p_ed25519.c\00", align 1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @pkey_ed25519_copy(%struct.evp_pkey_ctx_st* nocapture readnone, %struct.evp_pkey_ctx_st* nocapture readnone) #0 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @pkey_ed25519_keygen(%struct.evp_pkey_ctx_st* nocapture readnone, %struct.evp_pkey_st*) #1 {
  %3 = alloca [32 x i8], align 16
  %4 = tail call i8* @OPENSSL_malloc(i64 65) #4
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  tail call void @ERR_put_error(i32 6, i32 0, i32 65, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 30) #4
  br label %16

7:                                                ; preds = %2
  %8 = tail call i32 @EVP_PKEY_set_type(%struct.evp_pkey_st* %1, i32 949) #4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %7
  tail call void @OPENSSL_free(i8* nonnull %4) #4
  br label %16

11:                                               ; preds = %7
  %12 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 32, i1 false)
  call void @ED25519_keypair(i8* nonnull %12, i8* nonnull %4) #4
  %13 = getelementptr inbounds i8, i8* %4, i64 64
  store i8 1, i8* %13, align 1
  %14 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %1, i64 0, i32 2, i32 0
  %15 = load i8*, i8** %14, align 8
  call void @OPENSSL_free(i8* %15) #4
  store i8* %4, i8** %14, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #4
  br label %16

16:                                               ; preds = %11, %10, %6
  %17 = phi i32 [ 0, %6 ], [ 1, %11 ], [ 0, %10 ]
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @pkey_ed25519_sign_message(%struct.evp_pkey_ctx_st* nocapture readonly, i8*, i64* nocapture, i8*, i64) #1 {
  %6 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 2
  %7 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %6, align 8
  %8 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %7, i64 0, i32 2, i32 0
  %9 = bitcast i8** %8 to %struct.ED25519_KEY**
  %10 = load %struct.ED25519_KEY*, %struct.ED25519_KEY** %9, align 8
  %11 = getelementptr inbounds %struct.ED25519_KEY, %struct.ED25519_KEY* %10, i64 0, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %5
  tail call void @ERR_put_error(i32 6, i32 0, i32 130, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 53) #4
  br label %27

15:                                               ; preds = %5
  %16 = icmp eq i8* %1, null
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  store i64 64, i64* %2, align 8
  br label %27

18:                                               ; preds = %15
  %19 = load i64, i64* %2, align 8
  %20 = icmp ult i64 %19, 64
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  tail call void @ERR_put_error(i32 6, i32 0, i32 100, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 63) #4
  br label %27

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.ED25519_KEY, %struct.ED25519_KEY* %10, i64 0, i32 0, i32 0, i64 0
  %24 = tail call i32 @ED25519_sign(i8* nonnull %1, i8* %3, i64 %4, i8* %23) #4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %22
  store i64 64, i64* %2, align 8
  br label %27

27:                                               ; preds = %22, %26, %21, %17, %14
  %28 = phi i32 [ 1, %17 ], [ 0, %21 ], [ 1, %26 ], [ 0, %14 ], [ 0, %22 ]
  ret i32 %28
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @pkey_ed25519_verify_message(%struct.evp_pkey_ctx_st* nocapture readonly, i8*, i64, i8*, i64) #1 {
  %6 = icmp eq i64 %2, 64
  br i1 %6, label %7, label %16

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.evp_pkey_ctx_st, %struct.evp_pkey_ctx_st* %0, i64 0, i32 2
  %9 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %8, align 8
  %10 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %9, i64 0, i32 2, i32 0
  %11 = bitcast i8** %10 to %struct.anon**
  %12 = load %struct.anon*, %struct.anon** %11, align 8
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %12, i64 0, i32 1, i64 0
  %14 = tail call i32 @ED25519_verify(i8* %3, i64 %4, i8* %1, i8* %13) #4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %7, %5
  tail call void @ERR_put_error(i32 6, i32 0, i32 131, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 81) #4
  br label %17

17:                                               ; preds = %7, %16
  %18 = phi i32 [ 0, %16 ], [ 1, %7 ]
  ret i32 %18
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #3

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #3

declare i32 @EVP_PKEY_set_type(%struct.evp_pkey_st*, i32) local_unnamed_addr #3

declare void @OPENSSL_free(i8*) local_unnamed_addr #3

declare void @ED25519_keypair(i8*, i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare i32 @ED25519_sign(i8*, i8*, i64, i8*) local_unnamed_addr #3

declare i32 @ED25519_verify(i8*, i64, i8*, i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
