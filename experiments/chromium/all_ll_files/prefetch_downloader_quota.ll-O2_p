; ModuleID = '../../components/offline_pages/core/prefetch/store/prefetch_downloader_quota.cc'
source_filename = "../../components/offline_pages/core/prefetch/store/prefetch_downloader_quota.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.offline_pages::PrefetchDownloaderQuota" = type { %"class.sql::Database"*, %"class.base::Clock"* }
%"class.sql::Database" = type { %struct.sqlite3*, %"struct.sql::DatabaseOptions", %"class.base::flat_map", %"class.std::__1::set", i32, i8, i8, i8, i8, i8, i8, i32, %"class.base::RepeatingCallback", %"class.std::__1::basic_string", %"class.base::HistogramBase"*, %"class.std::__1::unique_ptr" }
%struct.sqlite3 = type opaque
%"struct.sql::DatabaseOptions" = type { i8, i8, i32, i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::HistogramBase" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.sql::DatabaseMemoryDumpProvider"* }
%"class.sql::DatabaseMemoryDumpProvider" = type opaque
%"class.base::Clock" = type { i32 (...)** }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.sql::Statement" = type <{ %class.scoped_refptr.18, i8, i8, [6 x i8] }>
%class.scoped_refptr.18 = type { %"class.sql::Database::StatementRef"* }
%"class.sql::Database::StatementRef" = type <{ %"class.base::RefCounted", [4 x i8], %"class.sql::Database"*, %struct.sqlite3_stmt*, i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%struct.sqlite3_stmt = type opaque
%"class.base::TimeDelta" = type { i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZNK4base9TimeDeltadvES0_ = comdat any

@_ZN13offline_pages23PrefetchDownloaderQuota26kDefaultMaxDailyQuotaBytesE = hidden local_unnamed_addr constant i64 20971520, align 8
@_ZN13offline_pages31kPrefetchingOfflinePagesFeatureE = external global %"struct.base::Feature", align 8
@_ZN13offline_pages12_GLOBAL__N_128kMaxDailyQuotaBytesParamNameE = internal unnamed_addr constant [36 x i8] c"offline_pages_max_daily_quota_bytes\00", align 16
@_ZZN13offline_pages23PrefetchDownloaderQuota22GetAvailableQuotaBytesEvE4kSql = internal constant [86 x i8] c"SELECT update_time, available_quota FROM prefetch_downloader_quota WHERE quota_id = 1\00", align 16
@.str = private unnamed_addr constant [80 x i8] c"../../components/offline_pages/core/prefetch/store/prefetch_downloader_quota.cc\00", align 1
@_ZZN13offline_pages23PrefetchDownloaderQuota22SetAvailableQuotaBytesElE4kSql = internal constant [107 x i8] c"INSERT OR REPLACE INTO prefetch_downloader_quota (quota_id, update_time, available_quota) VALUES (1, ?, ?)\00", align 16
@.str.1 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.2 = private unnamed_addr constant [27 x i8] c"!is_zero() || !a.is_zero()\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"!is_inf() || !a.is_inf()\00", align 1

@_ZN13offline_pages23PrefetchDownloaderQuotaC1EPN3sql8DatabaseEPKN4base5ClockE = hidden unnamed_addr alias void (%"class.offline_pages::PrefetchDownloaderQuota"*, %"class.sql::Database"*, %"class.base::Clock"*), void (%"class.offline_pages::PrefetchDownloaderQuota"*, %"class.sql::Database"*, %"class.base::Clock"*)* @_ZN13offline_pages23PrefetchDownloaderQuotaC2EPN3sql8DatabaseEPKN4base5ClockE
@_ZN13offline_pages23PrefetchDownloaderQuotaD1Ev = hidden unnamed_addr alias void (%"class.offline_pages::PrefetchDownloaderQuota"*), void (%"class.offline_pages::PrefetchDownloaderQuota"*)* @_ZN13offline_pages23PrefetchDownloaderQuotaD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN13offline_pages23PrefetchDownloaderQuotaC2EPN3sql8DatabaseEPKN4base5ClockE(%"class.offline_pages::PrefetchDownloaderQuota"* nocapture, %"class.sql::Database"*, %"class.base::Clock"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.offline_pages::PrefetchDownloaderQuota", %"class.offline_pages::PrefetchDownloaderQuota"* %0, i64 0, i32 0
  store %"class.sql::Database"* %1, %"class.sql::Database"** %4, align 8
  %5 = getelementptr inbounds %"class.offline_pages::PrefetchDownloaderQuota", %"class.offline_pages::PrefetchDownloaderQuota"* %0, i64 0, i32 1
  store %"class.base::Clock"* %2, %"class.base::Clock"** %5, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN13offline_pages23PrefetchDownloaderQuotaD2Ev(%"class.offline_pages::PrefetchDownloaderQuota"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN13offline_pages23PrefetchDownloaderQuota21GetMaxDailyQuotaBytesEv() local_unnamed_addr #2 align 2 {
  %1 = alloca %"class.std::__1::basic_string", align 8
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca i64, align 8
  %4 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #9
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %8 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #9
  %9 = tail call i8* @_Znwm(i64 48) #10
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %9, i8** %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast i64* %11 to <2 x i64>*
  store <2 x i64> <i64 35, i64 -9223372036854775760>, <2 x i64>* %12, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %9, i8* align 16 getelementptr inbounds ([36 x i8], [36 x i8]* @_ZN13offline_pages12_GLOBAL__N_128kMaxDailyQuotaBytesParamNameE, i64 0, i64 0), i64 35, i1 false) #9
  %13 = getelementptr inbounds i8, i8* %9, i64 35
  store i8 0, i8* %13, align 1
  call void @_ZN10variations31GetVariationParamValueByFeatureERKN4base7FeatureERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %1, %"struct.base::Feature"* nonnull dereferenceable(16) @_ZN13offline_pages31kPrefetchingOfflinePagesFeatureE, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #9
  %14 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %0
  %19 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %19) #10
  br label %20

20:                                               ; preds = %0, %18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #9
  %21 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  %25 = load i64, i64* %6, align 8
  %26 = zext i8 %23 to i64
  %27 = select i1 %24, i64 %25, i64 %26
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %40, label %29

29:                                               ; preds = %20
  %30 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #9
  store i64 0, i64* %3, align 8
  %31 = load i8*, i8** %5, align 8
  %32 = select i1 %24, i8* %31, i8* %4
  %33 = call zeroext i1 @_ZN4base13StringToInt64ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPl(i8* %32, i64 %27, i64* nonnull %3) #9
  %34 = load i64, i64* %3, align 8
  %35 = icmp slt i64 %34, 0
  %36 = xor i1 %33, true
  %37 = or i1 %35, %36
  %38 = select i1 %37, i64 20971520, i64 %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #9
  %39 = load i8, i8* %22, align 1
  br label %40

40:                                               ; preds = %20, %29
  %41 = phi i8 [ %39, %29 ], [ %23, %20 ]
  %42 = phi i64 [ %38, %29 ], [ 20971520, %20 ]
  %43 = icmp slt i8 %41, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %40
  %45 = load i8*, i8** %5, align 8
  call void @_ZdlPv(i8* %45) #10
  br label %46

46:                                               ; preds = %40, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #9
  ret i64 %42
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN10variations31GetVariationParamValueByFeatureERKN4base7FeatureERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret, %"struct.base::Feature"* dereferenceable(16), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare zeroext i1 @_ZN4base13StringToInt64ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPl(i8*, i64, i64*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN13offline_pages23PrefetchDownloaderQuota22GetAvailableQuotaBytesEv(%"class.offline_pages::PrefetchDownloaderQuota"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.sql::Statement", align 8
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = getelementptr inbounds %"class.offline_pages::PrefetchDownloaderQuota", %"class.offline_pages::PrefetchDownloaderQuota"* %0, i64 0, i32 0
  %5 = load %"class.sql::Database"*, %"class.sql::Database"** %4, align 8
  %6 = icmp eq %"class.sql::Database"* %5, null
  br i1 %6, label %56, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.offline_pages::PrefetchDownloaderQuota", %"class.offline_pages::PrefetchDownloaderQuota"* %0, i64 0, i32 1
  %9 = load %"class.base::Clock"*, %"class.base::Clock"** %8, align 8
  %10 = icmp eq %"class.base::Clock"* %9, null
  br i1 %10, label %56, label %11

11:                                               ; preds = %7
  %12 = bitcast %"class.sql::Statement"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #9
  %13 = bitcast %"class.sql::Statement"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* nonnull %5, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str, i64 0, i64 0), i64 76, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @_ZZN13offline_pages23PrefetchDownloaderQuota22GetAvailableQuotaBytesEvE4kSql, i64 0, i64 0)) #9
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %2, %"class.sql::Database::StatementRef"* %14) #9
  %15 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %2) #9
  br i1 %15, label %20, label %16

16:                                               ; preds = %11
  %17 = call zeroext i1 @_ZNK3sql9Statement9SucceededEv(%"class.sql::Statement"* nonnull %2) #9
  br i1 %17, label %18, label %54

18:                                               ; preds = %16
  %19 = call i64 @_ZN13offline_pages23PrefetchDownloaderQuota21GetMaxDailyQuotaBytesEv()
  br label %54

20:                                               ; preds = %11
  %21 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %2, i32 0) #9
  %22 = call i64 @_ZN13offline_pages11store_utils16FromDatabaseTimeEl(i64 %21) #9
  %23 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %2, i32 1) #9
  %24 = call i64 @_ZN13offline_pages23PrefetchDownloaderQuota21GetMaxDailyQuotaBytesEv()
  %25 = sitofp i64 %24 to double
  %26 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #9
  %27 = load %"class.base::Clock"*, %"class.base::Clock"** %8, align 8
  %28 = bitcast %"class.base::Clock"* %27 to i64 (%"class.base::Clock"*)***
  %29 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %28, align 8
  %30 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %29, i64 2
  %31 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %30, align 8
  %32 = call i64 %31(%"class.base::Clock"* %27) #9
  %33 = sub nsw i64 %32, %22
  %34 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  store i64 %33, i64* %34, align 8
  %35 = call double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"* nonnull %3, i64 86400000000)
  %36 = fmul double %35, %25
  %37 = call double @llvm.floor.f64(double %36) #9
  %38 = fcmp ult double %37, 0xC3E0000000000000
  %39 = fcmp ugt double %37, 0x43DFFFFFFFFFFFFF
  %40 = fcmp ogt double %37, 0xC3E0000000000000
  %41 = select i1 %40, double %37, double 0xC3E0000000000000
  %42 = fptosi double %41 to i64
  %43 = select i1 %38, i64 0, i64 9223372036854775807
  %44 = select i1 %39, i64 %43, i64 %42
  %45 = add nsw i64 %44, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #9
  %46 = icmp slt i64 %45, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %20
  %48 = call zeroext i1 @_ZN13offline_pages23PrefetchDownloaderQuota22SetAvailableQuotaBytesEl(%"class.offline_pages::PrefetchDownloaderQuota"* %0, i64 0)
  br label %54

49:                                               ; preds = %20
  %50 = call i64 @_ZN13offline_pages23PrefetchDownloaderQuota21GetMaxDailyQuotaBytesEv() #9
  %51 = icmp slt i64 %50, %45
  br i1 %51, label %52, label %54

52:                                               ; preds = %49
  %53 = call i64 @_ZN13offline_pages23PrefetchDownloaderQuota21GetMaxDailyQuotaBytesEv() #9
  br label %54

54:                                               ; preds = %52, %49, %47, %16, %18
  %55 = phi i64 [ %19, %18 ], [ -1, %16 ], [ %53, %52 ], [ %45, %49 ], [ 0, %47 ]
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #9
  br label %56

56:                                               ; preds = %1, %7, %54
  %57 = phi i64 [ %55, %54 ], [ -1, %7 ], [ -1, %1 ]
  ret i64 %57
}

declare %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"*, i8*, i64, i8*) local_unnamed_addr #4

declare void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"*, %"class.sql::Database::StatementRef"*) unnamed_addr #4

declare zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK3sql9Statement9SucceededEv(%"class.sql::Statement"*) local_unnamed_addr #4

declare i64 @_ZN13offline_pages11store_utils16FromDatabaseTimeEl(i64) local_unnamed_addr #4

declare i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"*, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = or i64 %6, %1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 302, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0)) #9
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #9
  %12 = load i64, i64* %5, align 8
  br label %13

13:                                               ; preds = %2, %9
  %14 = phi i64 [ %6, %2 ], [ %12, %9 ]
  %15 = add i64 %14, -9223372036854775807
  %16 = add i64 %1, -9223372036854775807
  %17 = or i64 %15, %16
  %18 = icmp ult i64 %17, 2
  br i1 %18, label %19, label %24

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 303, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0)) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  %22 = load i64, i64* %5, align 8
  %23 = add i64 %22, -9223372036854775807
  br label %24

24:                                               ; preds = %13, %19
  %25 = phi i64 [ %15, %13 ], [ %23, %19 ]
  %26 = phi i64 [ %14, %13 ], [ %22, %19 ]
  %27 = icmp ult i64 %25, 2
  %28 = icmp slt i64 %26, 0
  %29 = select i1 %28, double 0xFFF0000000000000, double 0x7FF0000000000000
  %30 = sitofp i64 %26 to double
  %31 = select i1 %27, double %29, double %30
  %32 = icmp ult i64 %16, 2
  %33 = icmp slt i64 %1, 0
  %34 = select i1 %33, double 0xFFF0000000000000, double 0x7FF0000000000000
  %35 = sitofp i64 %1 to double
  %36 = select i1 %32, double %34, double %35
  %37 = fdiv double %31, %36
  ret double %37
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13offline_pages23PrefetchDownloaderQuota22SetAvailableQuotaBytesEl(%"class.offline_pages::PrefetchDownloaderQuota"* nocapture readonly, i64) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.sql::Statement", align 8
  %4 = getelementptr inbounds %"class.offline_pages::PrefetchDownloaderQuota", %"class.offline_pages::PrefetchDownloaderQuota"* %0, i64 0, i32 0
  %5 = load %"class.sql::Database"*, %"class.sql::Database"** %4, align 8
  %6 = icmp eq %"class.sql::Database"* %5, null
  br i1 %6, label %34, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.offline_pages::PrefetchDownloaderQuota", %"class.offline_pages::PrefetchDownloaderQuota"* %0, i64 0, i32 1
  %9 = load %"class.base::Clock"*, %"class.base::Clock"** %8, align 8
  %10 = icmp eq %"class.base::Clock"* %9, null
  br i1 %10, label %34, label %11

11:                                               ; preds = %7
  %12 = icmp slt i64 %1, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %11
  %14 = tail call i64 @_ZN13offline_pages23PrefetchDownloaderQuota21GetMaxDailyQuotaBytesEv() #9
  %15 = icmp slt i64 %14, %1
  br i1 %15, label %16, label %18

16:                                               ; preds = %13
  %17 = tail call i64 @_ZN13offline_pages23PrefetchDownloaderQuota21GetMaxDailyQuotaBytesEv() #9
  br label %18

18:                                               ; preds = %11, %13, %16
  %19 = phi i64 [ %17, %16 ], [ 0, %11 ], [ %1, %13 ]
  %20 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #9
  %21 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 16, i1 false)
  %22 = load %"class.sql::Database"*, %"class.sql::Database"** %4, align 8
  %23 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %22, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str, i64 0, i64 0), i64 110, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @_ZZN13offline_pages23PrefetchDownloaderQuota22SetAvailableQuotaBytesElE4kSql, i64 0, i64 0)) #9
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %3, %"class.sql::Database::StatementRef"* %23) #9
  %24 = load %"class.base::Clock"*, %"class.base::Clock"** %8, align 8
  %25 = bitcast %"class.base::Clock"* %24 to i64 (%"class.base::Clock"*)***
  %26 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %25, align 8
  %27 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %26, i64 2
  %28 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %27, align 8
  %29 = call i64 %28(%"class.base::Clock"* %24) #9
  %30 = call i64 @_ZN13offline_pages11store_utils14ToDatabaseTimeEN4base4TimeE(i64 %29) #9
  %31 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %3, i32 0, i64 %30) #9
  %32 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %3, i32 1, i64 %19) #9
  %33 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %3) #9
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #9
  br label %34

34:                                               ; preds = %2, %7, %18
  %35 = phi i1 [ %33, %18 ], [ false, %7 ], [ false, %2 ]
  ret i1 %35
}

; Function Attrs: nounwind
declare void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"*) unnamed_addr #5

declare zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"*, i32, i64) local_unnamed_addr #4

declare i64 @_ZN13offline_pages11store_utils14ToDatabaseTimeEN4base4TimeE(i64) local_unnamed_addr #4

declare zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"*) local_unnamed_addr #4

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
