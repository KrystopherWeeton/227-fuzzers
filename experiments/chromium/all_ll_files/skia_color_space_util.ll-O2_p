; ModuleID = '../../ui/gfx/skia_color_space_util.cc'
source_filename = "../../ui/gfx/skia_color_space_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>

; Function Attrs: nofree nounwind ssp uwtable
define hidden float @_ZN3gfx25SkTransferFnEvalUnclampedERK22skcms_TransferFunctionf(%struct.skcms_TransferFunction* nocapture readonly dereferenceable(28), float) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %0, i64 0, i32 4
  %4 = load float, float* %3, align 4
  %5 = fcmp ogt float %4, %1
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %0, i64 0, i32 3
  %8 = load float, float* %7, align 4
  %9 = fmul float %8, %1
  %10 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %0, i64 0, i32 6
  br label %22

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %0, i64 0, i32 1
  %13 = load float, float* %12, align 4
  %14 = fmul float %13, %1
  %15 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %0, i64 0, i32 2
  %16 = load float, float* %15, align 4
  %17 = fadd float %14, %16
  %18 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %0, i64 0, i32 0
  %19 = load float, float* %18, align 4
  %20 = tail call float @powf(float %17, float %19) #6
  %21 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %0, i64 0, i32 5
  br label %22

22:                                               ; preds = %11, %6
  %23 = phi float* [ %21, %11 ], [ %10, %6 ]
  %24 = phi float [ %20, %11 ], [ %9, %6 ]
  %25 = load float, float* %23, align 4
  %26 = fadd float %24, %25
  ret float %26
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN3gfx16SkTransferFnEvalERK22skcms_TransferFunctionf(%struct.skcms_TransferFunction* nocapture readonly dereferenceable(28), float) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %0, i64 0, i32 4
  %4 = load float, float* %3, align 4
  %5 = fcmp ogt float %4, %1
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %0, i64 0, i32 3
  %8 = load float, float* %7, align 4
  %9 = fmul float %8, %1
  %10 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %0, i64 0, i32 6
  br label %22

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %0, i64 0, i32 1
  %13 = load float, float* %12, align 4
  %14 = fmul float %13, %1
  %15 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %0, i64 0, i32 2
  %16 = load float, float* %15, align 4
  %17 = fadd float %14, %16
  %18 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %0, i64 0, i32 0
  %19 = load float, float* %18, align 4
  %20 = tail call float @powf(float %17, float %19) #6
  %21 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %0, i64 0, i32 5
  br label %22

22:                                               ; preds = %6, %11
  %23 = phi float* [ %10, %6 ], [ %21, %11 ]
  %24 = phi float [ %9, %6 ], [ %20, %11 ]
  %25 = load float, float* %23, align 4
  %26 = fadd float %24, %25
  %27 = fcmp olt float %26, 0.000000e+00
  %28 = select i1 %27, float 0.000000e+00, float %26
  %29 = fcmp ogt float %28, 1.000000e+00
  %30 = select i1 %29, float 1.000000e+00, float %28
  ret float %30
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx19SkTransferFnInverseERK22skcms_TransferFunction(%struct.skcms_TransferFunction* noalias nocapture sret, %struct.skcms_TransferFunction* nocapture readonly dereferenceable(28)) local_unnamed_addr #1 {
  %3 = bitcast %struct.skcms_TransferFunction* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 28, i1 false)
  %4 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 1
  %5 = load float, float* %4, align 4
  %6 = fcmp ogt float %5, 0.000000e+00
  br i1 %6, label %7, label %24

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 0
  %9 = load float, float* %8, align 4
  %10 = fcmp ogt float %9, 0.000000e+00
  br i1 %10, label %11, label %24

11:                                               ; preds = %7
  %12 = tail call float @powf(float %5, float %9) #6
  %13 = fdiv float 1.000000e+00, %12
  %14 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %0, i64 0, i32 1
  store float %13, float* %14, align 4
  %15 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 5
  %16 = load float, float* %15, align 4
  %17 = fsub float -0.000000e+00, %16
  %18 = fdiv float %17, %12
  %19 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %0, i64 0, i32 2
  store float %18, float* %19, align 4
  %20 = load float, float* %8, align 4
  %21 = fdiv float 1.000000e+00, %20
  %22 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %0, i64 0, i32 0
  store float %21, float* %22, align 4
  %23 = load float, float* %4, align 4
  br label %24

24:                                               ; preds = %11, %7, %2
  %25 = phi float [ %23, %11 ], [ %5, %7 ], [ %5, %2 ]
  %26 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 3
  %27 = load float, float* %26, align 4
  %28 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 4
  %29 = load float, float* %28, align 4
  %30 = fmul float %27, %29
  %31 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 6
  %32 = load float, float* %31, align 4
  %33 = fadd float %30, %32
  %34 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %0, i64 0, i32 4
  store float %33, float* %34, align 4
  %35 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 2
  %36 = load float, float* %35, align 4
  %37 = fsub float -0.000000e+00, %36
  %38 = fdiv float %37, %25
  %39 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %0, i64 0, i32 5
  store float %38, float* %39, align 4
  %40 = fcmp une float %27, 0.000000e+00
  br i1 %40, label %41, label %47

41:                                               ; preds = %24
  %42 = fdiv float 1.000000e+00, %27
  %43 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %0, i64 0, i32 3
  store float %42, float* %43, align 4
  %44 = fsub float -0.000000e+00, %32
  %45 = fdiv float %44, %27
  %46 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %0, i64 0, i32 6
  store float %45, float* %46, align 4
  br label %47

47:                                               ; preds = %41, %24
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx18SkTransferFnScaledERK22skcms_TransferFunctionf(%struct.skcms_TransferFunction* noalias nocapture sret, %struct.skcms_TransferFunction* nocapture readonly dereferenceable(28), float) local_unnamed_addr #1 {
  %4 = fcmp oeq float %2, 1.000000e+00
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = bitcast %struct.skcms_TransferFunction* %0 to i8*
  %7 = bitcast %struct.skcms_TransferFunction* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 28, i1 false)
  br label %41

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 0
  %10 = load float, float* %9, align 4
  %11 = fdiv float 1.000000e+00, %10
  %12 = tail call float @powf(float %2, float %11) #6
  %13 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 1
  %14 = load float, float* %13, align 4
  %15 = fmul float %12, %14
  %16 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 2
  %17 = load float, float* %16, align 4
  %18 = fmul float %12, %17
  %19 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 3
  %20 = load float, float* %19, align 4
  %21 = fmul float %20, %2
  %22 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 4
  %23 = bitcast float* %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 5
  %26 = load float, float* %25, align 4
  %27 = fmul float %26, %2
  %28 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 6
  %29 = load float, float* %28, align 4
  %30 = fmul float %29, %2
  %31 = bitcast %struct.skcms_TransferFunction* %1 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = bitcast %struct.skcms_TransferFunction* %0 to i32*
  store i32 %32, i32* %33, align 4
  %34 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %0, i64 0, i32 1
  store float %15, float* %34, align 4
  %35 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %0, i64 0, i32 2
  store float %18, float* %35, align 4
  %36 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %0, i64 0, i32 3
  store float %21, float* %36, align 4
  %37 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %0, i64 0, i32 4
  %38 = bitcast float* %37 to i32*
  store i32 %24, i32* %38, align 4
  %39 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %0, i64 0, i32 5
  store float %27, float* %39, align 4
  %40 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %0, i64 0, i32 6
  store float %30, float* %40, align 4
  br label %41

41:                                               ; preds = %8, %5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gfx32SkTransferFnsApproximatelyCancelERK22skcms_TransferFunctionS2_(%struct.skcms_TransferFunction* nocapture readonly dereferenceable(28), %struct.skcms_TransferFunction* nocapture readonly dereferenceable(28)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %0, i64 0, i32 4
  %4 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %0, i64 0, i32 1
  %5 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %0, i64 0, i32 2
  %6 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %0, i64 0, i32 0
  %7 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %0, i64 0, i32 5
  %8 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %0, i64 0, i32 3
  %9 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %0, i64 0, i32 6
  %10 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 4
  %11 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 1
  %12 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 2
  %13 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 0
  %14 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 5
  %15 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 3
  %16 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 6
  br label %17

17:                                               ; preds = %2, %64
  %18 = phi float [ 0.000000e+00, %2 ], [ %65, %64 ]
  %19 = load float, float* %3, align 4
  %20 = fcmp ogt float %19, %18
  br i1 %20, label %21, label %24

21:                                               ; preds = %17
  %22 = load float, float* %8, align 4
  %23 = fmul float %18, %22
  br label %31

24:                                               ; preds = %17
  %25 = load float, float* %4, align 4
  %26 = fmul float %18, %25
  %27 = load float, float* %5, align 4
  %28 = fadd float %26, %27
  %29 = load float, float* %6, align 4
  %30 = tail call float @powf(float %28, float %29) #6
  br label %31

31:                                               ; preds = %21, %24
  %32 = phi float* [ %9, %21 ], [ %7, %24 ]
  %33 = phi float [ %23, %21 ], [ %30, %24 ]
  %34 = load float, float* %32, align 4
  %35 = fadd float %33, %34
  %36 = fcmp olt float %35, 0.000000e+00
  %37 = select i1 %36, float 0.000000e+00, float %35
  %38 = fcmp ogt float %37, 1.000000e+00
  %39 = select i1 %38, float 1.000000e+00, float %37
  %40 = load float, float* %10, align 4
  %41 = fcmp ogt float %40, %39
  br i1 %41, label %42, label %45

42:                                               ; preds = %31
  %43 = load float, float* %15, align 4
  %44 = fmul float %39, %43
  br label %52

45:                                               ; preds = %31
  %46 = load float, float* %11, align 4
  %47 = fmul float %39, %46
  %48 = load float, float* %12, align 4
  %49 = fadd float %47, %48
  %50 = load float, float* %13, align 4
  %51 = tail call float @powf(float %49, float %50) #6
  br label %52

52:                                               ; preds = %42, %45
  %53 = phi float* [ %16, %42 ], [ %14, %45 ]
  %54 = phi float [ %44, %42 ], [ %51, %45 ]
  %55 = load float, float* %53, align 4
  %56 = fadd float %54, %55
  %57 = fcmp olt float %56, 0.000000e+00
  %58 = select i1 %57, float 0.000000e+00, float %56
  %59 = fcmp ogt float %58, 1.000000e+00
  %60 = select i1 %59, float 1.000000e+00, float %58
  %61 = fsub float %60, %18
  %62 = tail call float @llvm.fabs.f32(float %61) #6
  %63 = fcmp ule float %62, 0x3F84000000000000
  br i1 %63, label %64, label %67

64:                                               ; preds = %52
  %65 = fadd float %18, 1.250000e-01
  %66 = fcmp ugt float %65, 1.000000e+00
  br i1 %66, label %67, label %17

67:                                               ; preds = %64, %52
  %68 = phi i1 [ false, %52 ], [ true, %64 ]
  ret i1 %68
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gfx35SkTransferFnIsApproximatelyIdentityERK22skcms_TransferFunction(%struct.skcms_TransferFunction* nocapture readonly dereferenceable(28)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %0, i64 0, i32 4
  %3 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %0, i64 0, i32 1
  %4 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %0, i64 0, i32 2
  %5 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %0, i64 0, i32 0
  %6 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %0, i64 0, i32 5
  %7 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %0, i64 0, i32 3
  %8 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %0, i64 0, i32 6
  br label %9

9:                                                ; preds = %1, %35
  %10 = phi float [ 0.000000e+00, %1 ], [ %36, %35 ]
  %11 = load float, float* %2, align 4
  %12 = fcmp ogt float %11, %10
  br i1 %12, label %13, label %16

13:                                               ; preds = %9
  %14 = load float, float* %7, align 4
  %15 = fmul float %10, %14
  br label %23

16:                                               ; preds = %9
  %17 = load float, float* %3, align 4
  %18 = fmul float %10, %17
  %19 = load float, float* %4, align 4
  %20 = fadd float %18, %19
  %21 = load float, float* %5, align 4
  %22 = tail call float @powf(float %20, float %21) #6
  br label %23

23:                                               ; preds = %13, %16
  %24 = phi float* [ %8, %13 ], [ %6, %16 ]
  %25 = phi float [ %15, %13 ], [ %22, %16 ]
  %26 = load float, float* %24, align 4
  %27 = fadd float %25, %26
  %28 = fcmp olt float %27, 0.000000e+00
  %29 = select i1 %28, float 0.000000e+00, float %27
  %30 = fcmp ogt float %29, 1.000000e+00
  %31 = select i1 %30, float 1.000000e+00, float %29
  %32 = fsub float %31, %10
  %33 = tail call float @llvm.fabs.f32(float %32) #6
  %34 = fcmp ule float %33, 0x3F84000000000000
  br i1 %34, label %35, label %38

35:                                               ; preds = %23
  %36 = fadd float %10, 1.250000e-01
  %37 = fcmp ugt float %36, 1.000000e+00
  br i1 %37, label %38, label %9

38:                                               ; preds = %35, %23
  %39 = phi i1 [ false, %23 ], [ true, %35 ]
  ret i1 %39
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN3gfx31SkMatrixIsApproximatelyIdentityERK10SkMatrix44(%class.SkMatrix44* nocapture readonly dereferenceable(68)) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %0, i64 0, i32 0, i64 0, i64 0
  %3 = load float, float* %2, align 4
  %4 = fsub float 1.000000e+00, %3
  %5 = tail call float @llvm.fabs.f32(float %4) #6
  %6 = fcmp ule float %5, 3.906250e-03
  br i1 %6, label %7, label %13

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %0, i64 0, i32 0, i64 1, i64 0
  %9 = load float, float* %8, align 4
  %10 = fsub float 0.000000e+00, %9
  %11 = tail call float @llvm.fabs.f32(float %10) #6
  %12 = fcmp ule float %11, 3.906250e-03
  br i1 %12, label %15, label %13

13:                                               ; preds = %1, %7, %15, %21, %27, %33, %39, %45, %51, %57, %63, %69, %75, %81, %87, %93, %99
  %14 = phi i1 [ true, %99 ], [ false, %93 ], [ false, %87 ], [ false, %81 ], [ false, %75 ], [ false, %69 ], [ false, %63 ], [ false, %57 ], [ false, %51 ], [ false, %45 ], [ false, %39 ], [ false, %33 ], [ false, %27 ], [ false, %21 ], [ false, %15 ], [ false, %7 ], [ false, %1 ]
  ret i1 %14

15:                                               ; preds = %7
  %16 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %0, i64 0, i32 0, i64 2, i64 0
  %17 = load float, float* %16, align 4
  %18 = fsub float 0.000000e+00, %17
  %19 = tail call float @llvm.fabs.f32(float %18) #6
  %20 = fcmp ule float %19, 3.906250e-03
  br i1 %20, label %21, label %13

21:                                               ; preds = %15
  %22 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %0, i64 0, i32 0, i64 3, i64 0
  %23 = load float, float* %22, align 4
  %24 = fsub float 0.000000e+00, %23
  %25 = tail call float @llvm.fabs.f32(float %24) #6
  %26 = fcmp ule float %25, 3.906250e-03
  br i1 %26, label %27, label %13

27:                                               ; preds = %21
  %28 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %0, i64 0, i32 0, i64 0, i64 1
  %29 = load float, float* %28, align 4
  %30 = fsub float 0.000000e+00, %29
  %31 = tail call float @llvm.fabs.f32(float %30) #6
  %32 = fcmp ule float %31, 3.906250e-03
  br i1 %32, label %33, label %13

33:                                               ; preds = %27
  %34 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %0, i64 0, i32 0, i64 1, i64 1
  %35 = load float, float* %34, align 4
  %36 = fsub float 1.000000e+00, %35
  %37 = tail call float @llvm.fabs.f32(float %36) #6
  %38 = fcmp ule float %37, 3.906250e-03
  br i1 %38, label %39, label %13

39:                                               ; preds = %33
  %40 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %0, i64 0, i32 0, i64 2, i64 1
  %41 = load float, float* %40, align 4
  %42 = fsub float 0.000000e+00, %41
  %43 = tail call float @llvm.fabs.f32(float %42) #6
  %44 = fcmp ule float %43, 3.906250e-03
  br i1 %44, label %45, label %13

45:                                               ; preds = %39
  %46 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %0, i64 0, i32 0, i64 3, i64 1
  %47 = load float, float* %46, align 4
  %48 = fsub float 0.000000e+00, %47
  %49 = tail call float @llvm.fabs.f32(float %48) #6
  %50 = fcmp ule float %49, 3.906250e-03
  br i1 %50, label %51, label %13

51:                                               ; preds = %45
  %52 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %0, i64 0, i32 0, i64 0, i64 2
  %53 = load float, float* %52, align 4
  %54 = fsub float 0.000000e+00, %53
  %55 = tail call float @llvm.fabs.f32(float %54) #6
  %56 = fcmp ule float %55, 3.906250e-03
  br i1 %56, label %57, label %13

57:                                               ; preds = %51
  %58 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %0, i64 0, i32 0, i64 1, i64 2
  %59 = load float, float* %58, align 4
  %60 = fsub float 0.000000e+00, %59
  %61 = tail call float @llvm.fabs.f32(float %60) #6
  %62 = fcmp ule float %61, 3.906250e-03
  br i1 %62, label %63, label %13

63:                                               ; preds = %57
  %64 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %0, i64 0, i32 0, i64 2, i64 2
  %65 = load float, float* %64, align 4
  %66 = fsub float 1.000000e+00, %65
  %67 = tail call float @llvm.fabs.f32(float %66) #6
  %68 = fcmp ule float %67, 3.906250e-03
  br i1 %68, label %69, label %13

69:                                               ; preds = %63
  %70 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %0, i64 0, i32 0, i64 3, i64 2
  %71 = load float, float* %70, align 4
  %72 = fsub float 0.000000e+00, %71
  %73 = tail call float @llvm.fabs.f32(float %72) #6
  %74 = fcmp ule float %73, 3.906250e-03
  br i1 %74, label %75, label %13

75:                                               ; preds = %69
  %76 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %0, i64 0, i32 0, i64 0, i64 3
  %77 = load float, float* %76, align 4
  %78 = fsub float 0.000000e+00, %77
  %79 = tail call float @llvm.fabs.f32(float %78) #6
  %80 = fcmp ule float %79, 3.906250e-03
  br i1 %80, label %81, label %13

81:                                               ; preds = %75
  %82 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %0, i64 0, i32 0, i64 1, i64 3
  %83 = load float, float* %82, align 4
  %84 = fsub float 0.000000e+00, %83
  %85 = tail call float @llvm.fabs.f32(float %84) #6
  %86 = fcmp ule float %85, 3.906250e-03
  br i1 %86, label %87, label %13

87:                                               ; preds = %81
  %88 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %0, i64 0, i32 0, i64 2, i64 3
  %89 = load float, float* %88, align 4
  %90 = fsub float 0.000000e+00, %89
  %91 = tail call float @llvm.fabs.f32(float %90) #6
  %92 = fcmp ule float %91, 3.906250e-03
  br i1 %92, label %93, label %13

93:                                               ; preds = %87
  %94 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %0, i64 0, i32 0, i64 3, i64 3
  %95 = load float, float* %94, align 4
  %96 = fsub float 1.000000e+00, %95
  %97 = tail call float @llvm.fabs.f32(float %96) #6
  %98 = fcmp ule float %97, 3.906250e-03
  br i1 %98, label %99, label %13

99:                                               ; preds = %93
  br label %13
}

; Function Attrs: nofree nounwind
declare float @powf(float, float) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #5

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
