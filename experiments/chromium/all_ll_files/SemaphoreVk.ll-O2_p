; ModuleID = '../../third_party/angle/src/libANGLE/renderer/vulkan/SemaphoreVk.cpp'
source_filename = "../../third_party/angle/src/libANGLE/renderer/vulkan/SemaphoreVk.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.VkDevice_T = type opaque
%struct.VkImportSemaphoreFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32, i32, i32 }
%struct.VkSemaphore_T = type opaque
%struct.VkImportSemaphoreZirconHandleInfoFUCHSIA = type { i32, i8*, %struct.VkSemaphore_T*, i32, i32, i32 }
%struct.VkInstance_T = type opaque
%struct.VkSemaphoreCreateInfo = type { i32, i8*, i32 }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%"class.rx::SemaphoreVk" = type { %"class.rx::SemaphoreImpl", %"class.rx::vk::Semaphore" }
%"class.rx::SemaphoreImpl" = type { i32 (...)** }
%"class.rx::vk::Semaphore" = type { %"class.rx::vk::WrappedObject" }
%"class.rx::vk::WrappedObject" = type { %struct.VkSemaphore_T* }
%"class.gl::Context" = type <{ %"class.egl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::State", i8, i8, i8, i8, [4 x i8], %"class.gl::ErrorSet", %"class.angle::BitSetT.537", [4 x i8], %"class.std::__1::unique_ptr.538", i8*, %"struct.gl::Extensions", [4 x i8], %"class.gl::BindingPointer", %"struct.egl::Config"*, %"class.angle::PackedEnumMap.544", %"class.gl::ResourceMap.546", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.556", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.566", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.576", %"class.gl::HandleAllocator", i8*, i8*, i8*, i8*, %"class.std::__1::vector.586", i8*, %"class.std::__1::vector.586", %"class.std::__1::unique_ptr.593", i8, i8, i8, i8, i32, i8, i8, i8, [5 x i8], %"class.egl::Surface"*, %"class.egl::Surface"*, %"class.egl::Display"*, i8, i8, i8, [5 x i8], %"class.gl::MemoryProgramCache"*, %"class.angle::BitSetT.536", %"class.gl::StateCache", %"class.angle::BitSetT.168", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::vector.337", %"class.std::__1::vector.337", %"class.std::__1::vector.337", %struct.Optional.607, %struct.Optional.607, %"class.std::__1::shared_ptr.608", %"class.std::__1::unique_ptr.609", %"class.std::__1::basic_string", i64, %"class.gl::MockOverlay", i8, i8, i8, [4 x i8] }>
%"class.egl::LabeledObject" = type { i32 (...)** }
%"class.angle::ObserverInterface" = type { i32 (...)** }
%"class.gl::State" = type <{ %"struct.gl::ContextID", i32, i32, %"struct.gl::Version", [4 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", %"class.egl::ShareGroup"*, %"class.gl::BufferManager"*, %"class.gl::ShaderProgramManager"*, %"class.gl::TextureManager"*, %"class.gl::RenderbufferManager"*, %"class.gl::SamplerManager"*, %"class.gl::SyncManager"*, %"class.gl::FramebufferManager"*, %"class.gl::ProgramPipelineManager"*, %"class.gl::MemoryObjectManager"*, %"class.gl::SemaphoreManager"*, i32, i32, %"struct.angle::Color", float, i32, %"struct.gl::RasterizerState", i8, [3 x i8], %"struct.gl::Rectangle", %"struct.gl::BlendState", [4 x i8], %"class.gl::BlendStateExt", %"struct.angle::Color", i8, i8, [2 x i8], float, i8, i8, [2 x i8], i32, %"struct.std::__1::array.373", i8, [3 x i8], float, %"struct.gl::DepthStencilState", i32, i32, float, i32, i32, i32, i8, i8, [2 x i8], %"struct.gl::Rectangle", float, float, i32, i32, %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"*, %"class.gl::BindingPointer.374", %"class.gl::Program"*, %"class.gl::BindingPointer.376", %"class.gl::ProgramExecutable"*, i8, [7 x i8], %"class.std::__1::vector.378", %"class.gl::VertexArray"*, %"class.angle::BitSetT.148", i64, %"class.angle::PackedEnumMap.406", %"class.gl::ActiveTexturesCache", %"class.std::__1::vector.337", %"class.angle::BitSetArray", %"class.std::__1::vector.418", %"class.std::__1::vector.427", %"class.angle::PackedEnumMap.434", %"class.angle::PackedEnumMap.438", %"class.std::__1::vector.440", %"class.std::__1::vector.440", %"class.std::__1::vector.440", %"class.angle::BitSetArray.447", %"class.angle::BitSetT.448", %"class.angle::BitSetT.168", %"class.gl::BindingPointer.449", %"struct.gl::PixelUnpackState", %"struct.gl::PixelPackState", i8, [3 x i8], %"class.gl::Debug", i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, %"class.angle::BitSetT.476", i32, %"class.gl::GLES1State", %"class.angle::BitSetT.168", %"class.angle::BitSetT.535", [4 x i8], %"class.angle::BitSetT.536", %"class.angle::BitSetT.166", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.gl::MockOverlay"*, %"class.angle::BitSetT.147", %"class.angle::BitSetT.147", i8, [5 x i8] }>
%"struct.gl::ContextID" = type { i32 }
%"struct.gl::Version" = type { i32, i32 }
%"struct.gl::Caps" = type <{ float, float, i32, [4 x i8], i64, i32, i32, i32, i32, float, i32, i32, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, [4 x i8], %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap.30", i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.32", %"struct.std::__1::array.32", i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, float, i32, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i32* }
%"struct.gl::TypePrecision" = type { %"struct.std::__1::array.28", i32 }
%"struct.std::__1::array.28" = type { [2 x i32] }
%"class.angle::PackedEnumMap" = type { %"struct.std::__1::array.29" }
%"struct.std::__1::array.29" = type { [6 x i32] }
%"class.angle::PackedEnumMap.30" = type { %"struct.std::__1::array.31" }
%"struct.std::__1::array.31" = type { [6 x i64] }
%"struct.std::__1::array.32" = type { [3 x i32] }
%"class.gl::TextureCapsMap" = type { %"class.angle::PackedEnumMap.33" }
%"class.angle::PackedEnumMap.33" = type { %"struct.std::__1::array.34" }
%"struct.std::__1::array.34" = type { [227 x %"struct.gl::TextureCaps"] }
%"struct.gl::TextureCaps" = type { i8, i8, i8, i8, i8, %"class.std::__1::set.35" }
%"class.std::__1::set.35" = type { %"class.std::__1::__tree.36" }
%"class.std::__1::__tree.36" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"struct.gl::Limitations" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.egl::ShareGroup" = type opaque
%"class.gl::BufferManager" = type { %"class.gl::TypedResourceManager" }
%"class.gl::TypedResourceManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap" }
%"class.gl::ResourceManagerBase" = type { i32 (...)**, %"class.gl::HandleAllocator", i64 }
%"class.gl::ResourceMap" = type { i64, %"class.gl::Buffer"**, %"class.absl::flat_hash_map" }
%"class.gl::Buffer" = type { %"class.gl::RefCountObject.base.53", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.angle::Subject", %"class.gl::BufferState", %"class.rx::BufferImpl"*, %"class.angle::ObserverBinding", %"class.gl::IndexRangeCache" }
%"class.gl::RefCountObject.base.53" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::BufferID" }>
%"class.angle::RefCountObject" = type { i32 (...)**, i64 }
%"class.rx::Serial" = type { i64 }
%"struct.gl::BufferID" = type { i32 }
%"class.gl::LabeledObject" = type { i32 (...)** }
%"class.angle::Subject" = type { i32 (...)**, %"class.angle::FastVector" }
%"class.angle::FastVector" = type { %"struct.std::__1::array", %"class.angle::ObserverBindingBase"**, i64, i64 }
%"struct.std::__1::array" = type { [8 x %"class.angle::ObserverBindingBase"*] }
%"class.angle::ObserverBindingBase" = type { i32 (...)**, %"class.angle::ObserverInterface"*, i64 }
%"class.gl::BufferState" = type <{ %"class.std::__1::basic_string", i8, [7 x i8], i64, i32, i32, i8, [7 x i8], i8*, i64, i64, i32, i32, i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.rx::BufferImpl" = type { %"class.angle::Subject", %"class.gl::BufferState"* }
%"class.gl::IndexRangeCache" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.54" }
%"class.std::__1::__tree.54" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.55", %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type { %"struct.std::__1::pair.1350" }
%"struct.std::__1::pair.1350" = type { i32, %"class.gl::Buffer"* }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.gl::ShaderProgramManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.69", %"class.gl::ResourceMap.122" }
%"class.gl::ResourceMap.69" = type { i64, %"class.gl::Shader"**, %"class.absl::flat_hash_map.113" }
%"class.gl::Shader" = type { %"class.gl::LabeledObject", %"class.gl::ShaderState", %"class.std::__1::unique_ptr.85", %"struct.gl::Limitations", %"struct.gl::ShaderProgramID", i8, i32, i8, %"class.std::__1::basic_string", %"class.gl::BindingPointer", %"class.std::__1::unique_ptr.107", %"class.std::__1::basic_string", %"class.gl::ShaderProgramManager"*, i32, i32 }
%"class.gl::ShaderState" = type <{ %"class.std::__1::basic_string", i8, [3 x i8], i32, %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", [4 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.77", %"class.std::__1::vector.77", %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.70", i8, [3 x i8], %"class.angle::BitSetT", i32, %struct.Optional, %struct.Optional, %struct.Optional.84, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"struct.sh::InterfaceBlock"*, %"struct.sh::InterfaceBlock"*, %"class.std::__1::__compressed_pair.79" }
%"struct.sh::InterfaceBlock" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, i8, i32, i8, i8, i32, %"class.std::__1::vector.70" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.sh::InterfaceBlock"* }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"*, %"class.std::__1::__compressed_pair.72" }
%"struct.sh::ShaderVariable" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", i8, i8, %"class.std::__1::vector.70", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i32, i8, i32, i32, i32, i8, i8, i8, i32, i8, i32, i8, i8, i8, i8, i32 }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"struct.sh::ShaderVariable"* }
%"class.angle::BitSetT" = type { i32 }
%struct.Optional = type { i8, i8 }
%struct.Optional.84 = type { i8, i32 }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.rx::ShaderImpl"* }
%"class.rx::ShaderImpl" = type opaque
%"struct.gl::ShaderProgramID" = type { i32 }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.gl::Shader::CompilingState"* }
%"struct.gl::Shader::CompilingState" = type opaque
%"class.absl::flat_hash_map.113" = type { %"class.absl::container_internal::raw_hash_map.114" }
%"class.absl::container_internal::raw_hash_map.114" = type { %"class.absl::container_internal::raw_hash_set.115" }
%"class.absl::container_internal::raw_hash_set.115" = type { i8*, %"union.absl::container_internal::map_slot_type.116"*, i64, i64, %"class.absl::container_internal::CompressedTuple.117" }
%"union.absl::container_internal::map_slot_type.116" = type opaque
%"class.absl::container_internal::CompressedTuple.117" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.118" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.118" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.122" = type { i64, %"class.gl::Program"**, %"class.absl::flat_hash_map.241" }
%"class.absl::flat_hash_map.241" = type { %"class.absl::container_internal::raw_hash_map.242" }
%"class.absl::container_internal::raw_hash_map.242" = type { %"class.absl::container_internal::raw_hash_set.243" }
%"class.absl::container_internal::raw_hash_set.243" = type { i8*, %"union.absl::container_internal::map_slot_type.244"*, i64, i64, %"class.absl::container_internal::CompressedTuple.245" }
%"union.absl::container_internal::map_slot_type.244" = type { %"struct.std::__1::pair.1352" }
%"struct.std::__1::pair.1352" = type { i32, %"class.gl::Program"* }
%"class.absl::container_internal::CompressedTuple.245" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.246" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.246" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::TextureManager" = type { %"class.gl::TypedResourceManager.250" }
%"class.gl::TypedResourceManager.250" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.251" }
%"class.gl::ResourceMap.251" = type { i64, %"class.gl::Texture"**, %"class.absl::flat_hash_map.270" }
%"class.gl::Texture" = type <{ %"class.gl::RefCountObject.base.253", [4 x i8], %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::TextureState", %"class.angle::BitSetT.266", %"class.rx::TextureImpl"*, %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::basic_string", %"class.egl::Surface"*, %"class.egl::Stream"*, %"class.angle::FastVector.268", %"struct.gl::Texture::SamplerCompletenessCache", [4 x i8] }>
%"class.gl::RefCountObject.base.253" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TextureID" }>
%"struct.gl::TextureID" = type { i32 }
%"class.egl::ImageSibling" = type { %"class.gl::FramebufferAttachmentObject", %"class.std::__1::set", %"class.angle::BindingPointer" }
%"class.gl::FramebufferAttachmentObject" = type { %"class.angle::Subject", %"class.angle::ObserverInterface" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::BindingPointer" = type { i32 (...)**, %"class.egl::Image"* }
%"class.egl::Image" = type <{ %"class.angle::RefCountObject.4", %"class.egl::LabeledObject", %"struct.egl::ImageState", %"class.rx::ImageImpl"*, i8, [7 x i8] }>
%"class.angle::RefCountObject.4" = type { i32 (...)**, i64 }
%"struct.egl::ImageState" = type { i8*, i32, %"class.gl::ImageIndex", %"class.egl::ImageSibling"*, %"class.std::__1::set.5", %"struct.gl::Format", i8, %"struct.gl::Extents", i64, i32, i32 }
%"class.gl::ImageIndex" = type { i8, i32, i32, i32 }
%"class.std::__1::set.5" = type { %"class.std::__1::__tree.6" }
%"class.std::__1::__tree.6" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.gl::Format" = type { %"struct.gl::InternalFormat"* }
%"struct.gl::InternalFormat" = type { i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)* }
%"struct.gl::Extents" = type { i32, i32, i32 }
%"class.rx::ImageImpl" = type opaque
%"class.gl::TextureState" = type <{ i8, [3 x i8], %"struct.gl::SwizzleState", %"class.gl::SamplerState", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %"class.std::__1::vector.257", %"struct.gl::Rectangle", i32, [4 x i8], %"class.gl::OffsetBindingPointer", i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"struct.gl::SwizzleState" = type { i32, i32, i32, i32 }
%"class.gl::SamplerState" = type { i32, i32, i32, i32, i32, float, float, float, i32, i32, i32, %"struct.angle::ColorGeneric", %"union.gl::SamplerState::Completeness" }
%"struct.angle::ColorGeneric" = type <{ %union.anon.254, i8, [3 x i8] }>
%union.anon.254 = type { %"struct.angle::Color" }
%"union.gl::SamplerState::Completeness" = type { i32 }
%"class.std::__1::vector.257" = type { %"class.std::__1::__vector_base.258" }
%"class.std::__1::__vector_base.258" = type { %"struct.gl::ImageDesc"*, %"struct.gl::ImageDesc"*, %"class.std::__1::__compressed_pair.259" }
%"struct.gl::ImageDesc" = type <{ %"struct.gl::Extents", [4 x i8], %"struct.gl::Format", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.gl::ImageDesc"* }
%"class.gl::OffsetBindingPointer" = type { %"class.gl::BindingPointer.264", i64, i64 }
%"class.gl::BindingPointer.264" = type { %"class.angle::BindingPointer.265" }
%"class.angle::BindingPointer.265" = type { i32 (...)**, %"class.gl::Buffer"* }
%"class.angle::BitSetT.266" = type { i64 }
%"class.rx::TextureImpl" = type { %"class.rx::FramebufferAttachmentObjectImpl", %"class.gl::TextureState"* }
%"class.rx::FramebufferAttachmentObjectImpl" = type { %"class.angle::Subject" }
%"class.egl::Stream" = type { %"class.egl::LabeledObject", i8*, %"class.egl::Display"*, %"class.rx::StreamProducerImpl"*, %"class.gl::Context"*, i32, i64, i64, i32, i32, i32, %"struct.std::__1::array.267", i32, i32 }
%"class.rx::StreamProducerImpl" = type opaque
%"struct.std::__1::array.267" = type { [3 x %"struct.egl::Stream::PlaneTexture"] }
%"struct.egl::Stream::PlaneTexture" = type { i32, %"class.gl::Texture"* }
%"class.angle::FastVector.268" = type { %"struct.std::__1::array.269", %"class.rx::Serial"*, i64, i64 }
%"struct.std::__1::array.269" = type { [8 x %"class.rx::Serial"] }
%"struct.gl::Texture::SamplerCompletenessCache" = type <{ %"struct.gl::ContextID", %"class.gl::SamplerState", i8, [3 x i8] }>
%"class.absl::flat_hash_map.270" = type { %"class.absl::container_internal::raw_hash_map.271" }
%"class.absl::container_internal::raw_hash_map.271" = type { %"class.absl::container_internal::raw_hash_set.272" }
%"class.absl::container_internal::raw_hash_set.272" = type { i8*, %"union.absl::container_internal::map_slot_type.273"*, i64, i64, %"class.absl::container_internal::CompressedTuple.274" }
%"union.absl::container_internal::map_slot_type.273" = type { %"struct.std::__1::pair.1354" }
%"struct.std::__1::pair.1354" = type { i32, %"class.gl::Texture"* }
%"class.absl::container_internal::CompressedTuple.274" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.275" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.275" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::RenderbufferManager" = type { %"class.gl::TypedResourceManager.279" }
%"class.gl::TypedResourceManager.279" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.280" }
%"class.gl::ResourceMap.280" = type { i64, %"class.gl::Renderbuffer"**, %"class.absl::flat_hash_map.281" }
%"class.gl::Renderbuffer" = type { %"class.gl::RefCountObject.base", %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::RenderbufferState", %"class.std::__1::unique_ptr", %"class.std::__1::basic_string", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::RenderbufferID" }>
%"struct.gl::RenderbufferID" = type { i32 }
%"class.gl::RenderbufferState" = type <{ i32, i32, %"struct.gl::Format", i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.rx::RenderbufferImpl"* }
%"class.rx::RenderbufferImpl" = type { %"class.rx::FramebufferAttachmentObjectImpl", %"class.gl::RenderbufferState"* }
%"class.absl::flat_hash_map.281" = type { %"class.absl::container_internal::raw_hash_map.282" }
%"class.absl::container_internal::raw_hash_map.282" = type { %"class.absl::container_internal::raw_hash_set.283" }
%"class.absl::container_internal::raw_hash_set.283" = type { i8*, %"union.absl::container_internal::map_slot_type.284"*, i64, i64, %"class.absl::container_internal::CompressedTuple.285" }
%"union.absl::container_internal::map_slot_type.284" = type { %"struct.std::__1::pair.1356" }
%"struct.std::__1::pair.1356" = type { i32, %"class.gl::Renderbuffer"* }
%"class.absl::container_internal::CompressedTuple.285" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.286" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.286" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SamplerManager" = type { %"class.gl::TypedResourceManager.290" }
%"class.gl::TypedResourceManager.290" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.291" }
%"class.gl::ResourceMap.291" = type { i64, %"class.gl::Sampler"**, %"class.absl::flat_hash_map.294" }
%"class.gl::Sampler" = type { %"class.gl::RefCountObject.base.293", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::SamplerState", i8, %"class.rx::SamplerImpl"*, %"class.std::__1::basic_string" }
%"class.gl::RefCountObject.base.293" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::SamplerID" }>
%"struct.gl::SamplerID" = type { i32 }
%"class.rx::SamplerImpl" = type { i32 (...)**, %"class.gl::SamplerState"* }
%"class.absl::flat_hash_map.294" = type { %"class.absl::container_internal::raw_hash_map.295" }
%"class.absl::container_internal::raw_hash_map.295" = type { %"class.absl::container_internal::raw_hash_set.296" }
%"class.absl::container_internal::raw_hash_set.296" = type { i8*, %"union.absl::container_internal::map_slot_type.297"*, i64, i64, %"class.absl::container_internal::CompressedTuple.298" }
%"union.absl::container_internal::map_slot_type.297" = type { %"struct.std::__1::pair.1358" }
%"struct.std::__1::pair.1358" = type { i32, %"class.gl::Sampler"* }
%"class.absl::container_internal::CompressedTuple.298" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.299" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.299" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SyncManager" = type { %"class.gl::TypedResourceManager.303" }
%"class.gl::TypedResourceManager.303" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.304" }
%"class.gl::ResourceMap.304" = type { i64, %"class.gl::Sync"**, %"class.absl::flat_hash_map.305" }
%"class.gl::Sync" = type opaque
%"class.absl::flat_hash_map.305" = type { %"class.absl::container_internal::raw_hash_map.306" }
%"class.absl::container_internal::raw_hash_map.306" = type { %"class.absl::container_internal::raw_hash_set.307" }
%"class.absl::container_internal::raw_hash_set.307" = type { i8*, %"union.absl::container_internal::map_slot_type.308"*, i64, i64, %"class.absl::container_internal::CompressedTuple.309" }
%"union.absl::container_internal::map_slot_type.308" = type opaque
%"class.absl::container_internal::CompressedTuple.309" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.310" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.310" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::FramebufferManager" = type { %"class.gl::TypedResourceManager.314" }
%"class.gl::TypedResourceManager.314" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.315" }
%"class.gl::ResourceMap.315" = type { i64, %"class.gl::Framebuffer"**, %"class.absl::flat_hash_map.316" }
%"class.absl::flat_hash_map.316" = type { %"class.absl::container_internal::raw_hash_map.317" }
%"class.absl::container_internal::raw_hash_map.317" = type { %"class.absl::container_internal::raw_hash_set.318" }
%"class.absl::container_internal::raw_hash_set.318" = type { i8*, %"union.absl::container_internal::map_slot_type.319"*, i64, i64, %"class.absl::container_internal::CompressedTuple.320" }
%"union.absl::container_internal::map_slot_type.319" = type { %"struct.std::__1::pair.1360" }
%"struct.std::__1::pair.1360" = type { i32, %"class.gl::Framebuffer"* }
%"class.absl::container_internal::CompressedTuple.320" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.321" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.321" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ProgramPipelineManager" = type { %"class.gl::TypedResourceManager.325" }
%"class.gl::TypedResourceManager.325" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.326" }
%"class.gl::ResourceMap.326" = type { i64, %"class.gl::ProgramPipeline"**, %"class.absl::flat_hash_map.344" }
%"class.gl::ProgramPipeline" = type { %"class.gl::RefCountObject.base.328", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::HasAttachedShaders", %"class.std::__1::unique_ptr.329", %"class.gl::ProgramPipelineState", %"class.std::__1::vector.337", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base.328" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::ProgramPipelineID" }>
%"struct.gl::ProgramPipelineID" = type { i32 }
%"class.gl::HasAttachedShaders" = type { i32 (...)** }
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.rx::ProgramPipelineImpl"* }
%"class.rx::ProgramPipelineImpl" = type opaque
%"class.gl::ProgramPipelineState" = type <{ %"class.std::__1::basic_string", %"class.gl::Program"*, %"class.angle::PackedEnumMap.335", i8, [7 x i8], %"class.gl::ProgramExecutable"*, i8, [7 x i8] }>
%"class.angle::PackedEnumMap.335" = type { %"struct.std::__1::array.336" }
%"struct.std::__1::array.336" = type { [6 x %"class.gl::Program"*] }
%"class.absl::flat_hash_map.344" = type { %"class.absl::container_internal::raw_hash_map.345" }
%"class.absl::container_internal::raw_hash_map.345" = type { %"class.absl::container_internal::raw_hash_set.346" }
%"class.absl::container_internal::raw_hash_set.346" = type { i8*, %"union.absl::container_internal::map_slot_type.347"*, i64, i64, %"class.absl::container_internal::CompressedTuple.348" }
%"union.absl::container_internal::map_slot_type.347" = type { %"struct.std::__1::pair.1362" }
%"struct.std::__1::pair.1362" = type { i32, %"class.gl::ProgramPipeline"* }
%"class.absl::container_internal::CompressedTuple.348" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.349" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.349" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::MemoryObjectManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.353" }
%"class.gl::ResourceMap.353" = type { i64, %"class.gl::MemoryObject"**, %"class.absl::flat_hash_map.354" }
%"class.gl::MemoryObject" = type opaque
%"class.absl::flat_hash_map.354" = type { %"class.absl::container_internal::raw_hash_map.355" }
%"class.absl::container_internal::raw_hash_map.355" = type { %"class.absl::container_internal::raw_hash_set.356" }
%"class.absl::container_internal::raw_hash_set.356" = type { i8*, %"union.absl::container_internal::map_slot_type.357"*, i64, i64, %"class.absl::container_internal::CompressedTuple.358" }
%"union.absl::container_internal::map_slot_type.357" = type opaque
%"class.absl::container_internal::CompressedTuple.358" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.359" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.359" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SemaphoreManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.363" }
%"class.gl::ResourceMap.363" = type { i64, %"class.gl::Semaphore"**, %"class.absl::flat_hash_map.364" }
%"class.gl::Semaphore" = type opaque
%"class.absl::flat_hash_map.364" = type { %"class.absl::container_internal::raw_hash_map.365" }
%"class.absl::container_internal::raw_hash_map.365" = type { %"class.absl::container_internal::raw_hash_set.366" }
%"class.absl::container_internal::raw_hash_set.366" = type { i8*, %"union.absl::container_internal::map_slot_type.367"*, i64, i64, %"class.absl::container_internal::CompressedTuple.368" }
%"union.absl::container_internal::map_slot_type.367" = type opaque
%"class.absl::container_internal::CompressedTuple.368" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.369" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.369" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.gl::RasterizerState" = type { i8, i8, i32, i8, float, float, i8, i8, i8, i8 }
%"struct.gl::BlendState" = type { i8, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8 }
%"class.gl::BlendStateExt" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.angle::BitSetT.147", %"class.angle::BitSetT.147", i64 }
%"struct.angle::Color" = type { float, float, float, float }
%"struct.std::__1::array.373" = type { [2 x i32] }
%"struct.gl::DepthStencilState" = type { i8, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.gl::Rectangle" = type { i32, i32, i32, i32 }
%"class.gl::Framebuffer" = type { %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::FramebufferState", %"class.rx::FramebufferImpl"*, %struct.Optional.622, %"class.std::__1::vector.337", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::BitSetT.623", %"class.angle::BitSetT.147", %struct.Optional.624 }
%"class.gl::FramebufferState" = type { %"struct.gl::FramebufferID", %"class.rx::Serial", %"class.std::__1::basic_string", %"class.std::__1::vector.615", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.angle::BitSetT.147", %"class.std::__1::vector", i32, %"class.angle::BitSetT.147", %"class.angle::BitSetT.148", i32, i32, i32, i8, i32, %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", i8, %"class.angle::BitSetT.536", i8, %"class.gl::FramebufferAttachment", i32, %"struct.gl::Offset" }
%"struct.gl::FramebufferID" = type { i32 }
%"class.std::__1::vector.615" = type { %"class.std::__1::__vector_base.616" }
%"class.std::__1::__vector_base.616" = type { %"class.gl::FramebufferAttachment"*, %"class.gl::FramebufferAttachment"*, %"class.std::__1::__compressed_pair.617" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.618" }
%"struct.std::__1::__compressed_pair_elem.618" = type { %"class.gl::FramebufferAttachment"* }
%"class.gl::FramebufferAttachment" = type { i32, %"class.gl::FramebufferAttachment::Target", %"class.gl::FramebufferAttachmentObject"*, i32, i8, i32, i32 }
%"class.gl::FramebufferAttachment::Target" = type { i32, %"class.gl::ImageIndex" }
%"struct.gl::Offset" = type { i32, i32, i32 }
%"class.rx::FramebufferImpl" = type opaque
%struct.Optional.622 = type { i8, %"struct.gl::FramebufferStatus" }
%"struct.gl::FramebufferStatus" = type { i32, i8* }
%"class.angle::BitSetT.623" = type { i64 }
%struct.Optional.624 = type { i8, %"class.angle::BitSetT.623" }
%"class.gl::BindingPointer.374" = type { %"class.angle::BindingPointer.375" }
%"class.angle::BindingPointer.375" = type { i32 (...)**, %"class.gl::Renderbuffer"* }
%"class.gl::Program" = type { %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::HasAttachedShaders", %"class.rx::Serial", %"class.gl::ProgramState", %"class.rx::ProgramImpl"*, i8, %"class.gl::ProgramBindings", %"class.gl::ProgramAliasedBindings", %"class.gl::ProgramAliasedBindings", i8, %"class.std::__1::unique_ptr.235", i8, i32, %"class.gl::ShaderProgramManager"*, %"struct.gl::ShaderProgramID", %"class.angle::BitSetT.201" }
%"class.gl::ProgramState" = type { %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", %"class.angle::PackedEnumMap.123", i32, %"class.std::__1::vector.125", %"class.std::__1::vector.132", %"class.std::__1::vector.139", %"class.gl::Range", %"class.angle::BitSetT.147", %"class.std::__1::vector", %"class.angle::BitSetT.148", i8, i8, i8, i8, %"class.angle::BitSetT", i32, i32, i32, i32, i32, i32, %"class.gl::ProgramAliasedBindings", %"class.std::__1::shared_ptr" }
%"class.angle::PackedEnumMap.123" = type { %"struct.std::__1::array.124" }
%"struct.std::__1::array.124" = type { [6 x %"class.gl::Shader"*] }
%"class.std::__1::vector.125" = type { %"class.std::__1::__vector_base.126" }
%"class.std::__1::__vector_base.126" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.132" = type { %"class.std::__1::__vector_base.133" }
%"class.std::__1::__vector_base.133" = type { %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"*, %"class.std::__1::__compressed_pair.134" }
%"struct.gl::VariableLocation" = type <{ i32, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"struct.gl::VariableLocation"* }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"struct.gl::BufferVariable"*, %"struct.gl::BufferVariable"*, %"class.std::__1::__compressed_pair.142" }
%"struct.gl::BufferVariable" = type <{ %"struct.gl::ActiveVariable.base", [7 x i8], %"struct.sh::ShaderVariable", i32, %"struct.sh::BlockMemberInfo", i32, [4 x i8] }>
%"struct.gl::ActiveVariable.base" = type <{ i32 (...)**, %"class.angle::BitSetT.141" }>
%"class.angle::BitSetT.141" = type { i8 }
%"struct.sh::BlockMemberInfo" = type { i32, i32, i32, i8, i32 }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.gl::BufferVariable"* }
%"class.gl::Range" = type { i32, i32 }
%"class.std::__1::shared_ptr" = type { %"class.gl::ProgramExecutable"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.rx::ProgramImpl" = type opaque
%"class.gl::ProgramBindings" = type { %"class.absl::flat_hash_map.226" }
%"class.absl::flat_hash_map.226" = type { %"class.absl::container_internal::raw_hash_map.227" }
%"class.absl::container_internal::raw_hash_map.227" = type { %"class.absl::container_internal::raw_hash_set.228" }
%"class.absl::container_internal::raw_hash_set.228" = type { i8*, %"union.absl::container_internal::map_slot_type.229"*, i64, i64, %"class.absl::container_internal::CompressedTuple.230" }
%"union.absl::container_internal::map_slot_type.229" = type opaque
%"class.absl::container_internal::CompressedTuple.230" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.231" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.231" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ProgramAliasedBindings" = type { %"class.absl::flat_hash_map.149" }
%"class.absl::flat_hash_map.149" = type { %"class.absl::container_internal::raw_hash_map.150" }
%"class.absl::container_internal::raw_hash_map.150" = type { %"class.absl::container_internal::raw_hash_set.151" }
%"class.absl::container_internal::raw_hash_set.151" = type { i8*, %"union.absl::container_internal::map_slot_type.152"*, i64, i64, %"class.absl::container_internal::CompressedTuple.153" }
%"union.absl::container_internal::map_slot_type.152" = type opaque
%"class.absl::container_internal::CompressedTuple.153" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.154" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.154" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"struct.gl::Program::LinkingState"* }
%"struct.gl::Program::LinkingState" = type opaque
%"class.angle::BitSetT.201" = type { i64 }
%"class.gl::BindingPointer.376" = type { %"class.angle::BindingPointer.377" }
%"class.angle::BindingPointer.377" = type { i32 (...)**, %"class.gl::ProgramPipeline"* }
%"class.gl::ProgramExecutable" = type <{ %"class.angle::Subject", %"class.gl::InfoLog", %"class.angle::BitSetT.141", %"class.angle::BitSetT.141", [6 x i8], %"class.angle::BitSetT.166", i32, [4 x i8], %"class.angle::BitSetT.148", %"class.angle::BitSetT.166", %"class.angle::BitSetArray", %"struct.std::__1::array.169", %"struct.std::__1::array.170", %"class.angle::BitSetArray", %"struct.std::__1::array.171", %"struct.std::__1::array.172", %"class.angle::BitSetArray", %"struct.std::__1::array.172", i8, [7 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.132", %"class.std::__1::vector.132", i8, [7 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.173", %"class.std::__1::vector.180", i32, [4 x i8], %"class.std::__1::vector.187", %"class.gl::Range", %"class.gl::Range", %"class.std::__1::vector.194", %"class.angle::BitSetT.201", %"class.std::__1::vector.202", %"class.gl::Range", %"class.std::__1::vector.194", %"class.std::__1::vector.194", %"class.gl::Range", %"class.std::__1::vector.209", %"class.std::__1::vector.216", %"class.std::__1::vector.216", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.angle::PackedEnumMap.223", %"class.angle::PackedEnumMap.223", %"class.angle::PackedEnumMap", i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, %struct.Optional.225, [6 x i8] }>
%"class.gl::InfoLog" = type { %"class.std::__1::unique_ptr.160" }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.std::__1::basic_stringstream"* }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.std::__1::array.169" = type { [96 x i32] }
%"struct.std::__1::array.170" = type { [96 x i8] }
%"struct.std::__1::array.171" = type { [96 x i8] }
%"struct.std::__1::array.172" = type { [96 x %"class.angle::BitSetT.141"] }
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"*, %"class.std::__1::__compressed_pair.175" }
%"struct.gl::TransformFeedbackVarying" = type <{ %"struct.sh::ShaderVariable", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"struct.gl::TransformFeedbackVarying"* }
%"class.std::__1::vector.180" = type { %"class.std::__1::__vector_base.181" }
%"class.std::__1::__vector_base.181" = type { i32*, i32*, %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { i32* }
%"class.std::__1::vector.187" = type { %"class.std::__1::__vector_base.188" }
%"class.std::__1::__vector_base.188" = type { %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"*, %"class.std::__1::__compressed_pair.189" }
%"struct.gl::LinkedUniform" = type { %"struct.gl::ActiveVariable.base", %"struct.sh::ShaderVariable", %"struct.gl::UniformTypeInfo"*, i32, %"struct.sh::BlockMemberInfo", %"class.std::__1::vector" }
%"struct.gl::UniformTypeInfo" = type <{ i32, i32, i32, i32, i32, i8, [3 x i8], i32, i32, i32, [4 x i8], i64, i64, i64, i8, i8, i8, [5 x i8] }>
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"struct.gl::LinkedUniform"* }
%"class.std::__1::vector.202" = type { %"class.std::__1::__vector_base.203" }
%"class.std::__1::__vector_base.203" = type { %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"*, %"class.std::__1::__compressed_pair.204" }
%"struct.gl::ShaderVariableBuffer" = type { %"struct.gl::ActiveVariable.base", i32, i32, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.gl::ShaderVariableBuffer"* }
%"class.std::__1::vector.194" = type { %"class.std::__1::__vector_base.195" }
%"class.std::__1::__vector_base.195" = type { %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"*, %"class.std::__1::__compressed_pair.196" }
%"struct.gl::InterfaceBlock" = type <{ %"struct.gl::ShaderVariableBuffer", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"struct.gl::InterfaceBlock"* }
%"class.std::__1::vector.209" = type { %"class.std::__1::__vector_base.210" }
%"class.std::__1::__vector_base.210" = type { %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"*, %"class.std::__1::__compressed_pair.211" }
%"struct.gl::SamplerBinding" = type { i8, i32, i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"struct.gl::SamplerBinding"* }
%"class.std::__1::vector.216" = type { %"class.std::__1::__vector_base.217" }
%"class.std::__1::__vector_base.217" = type { %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"*, %"class.std::__1::__compressed_pair.218" }
%"struct.gl::ImageBinding" = type { i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"struct.gl::ImageBinding"* }
%"class.angle::PackedEnumMap.223" = type { %"struct.std::__1::array.224" }
%"struct.std::__1::array.224" = type { [6 x %"class.std::__1::vector.70"] }
%struct.Optional.225 = type { i8, i8 }
%"class.std::__1::vector.378" = type { %"class.std::__1::__vector_base.379" }
%"class.std::__1::__vector_base.379" = type { %"struct.gl::VertexAttribCurrentValueData"*, %"struct.gl::VertexAttribCurrentValueData"*, %"class.std::__1::__compressed_pair.381" }
%"struct.gl::VertexAttribCurrentValueData" = type { %union.anon.380, i32 }
%union.anon.380 = type { [4 x float] }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"struct.gl::VertexAttribCurrentValueData"* }
%"class.gl::VertexArray" = type <{ %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"struct.gl::VertexArrayID", [4 x i8], %"class.gl::VertexArrayState", %"class.angle::BitSetT.400", %"struct.std::__1::array.401", %"struct.std::__1::array.403", %struct.Optional.405, %"class.rx::VertexArrayImpl"*, %"class.std::__1::vector.337", %"class.angle::BitSetT.166", %"class.gl::VertexArray::IndexRangeCache", i8, [7 x i8] }>
%"struct.gl::VertexArrayID" = type { i32 }
%"class.gl::VertexArrayState" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.386", %"class.gl::SubjectBindingPointer", %"class.std::__1::vector.393", %"class.angle::BitSetT.166", %"class.angle::BitSetT.148", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166" }
%"class.std::__1::vector.386" = type { %"class.std::__1::__vector_base.387" }
%"class.std::__1::__vector_base.387" = type { %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"*, %"class.std::__1::__compressed_pair.388" }
%"struct.gl::VertexAttribute" = type { i8, %"struct.angle::Format"*, i8*, i32, i32, i32, i64 }
%"struct.angle::Format" = type { i32, i32, i32, void (i64, i64, i64, i8*, i64, i64, i8*, i64, i64)*, void (i8*, i8*)*, void (i8*, i8*)*, %"class.rx::FastCopyFunctionMap"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32 }
%"class.rx::FastCopyFunctionMap" = type { i64, %"struct.rx::FastCopyFunctionMap::Entry"* }
%"struct.rx::FastCopyFunctionMap::Entry" = type { i32, void (i8*, i8*)* }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"struct.gl::VertexAttribute"* }
%"class.gl::SubjectBindingPointer" = type { %"class.gl::BindingPointer.264", %"class.angle::ObserverBindingBase" }
%"class.std::__1::vector.393" = type { %"class.std::__1::__vector_base.394" }
%"class.std::__1::__vector_base.394" = type { %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"*, %"class.std::__1::__compressed_pair.395" }
%"class.gl::VertexBinding" = type { i32, i32, i64, %"class.gl::BindingPointer.264", %"class.angle::BitSetT.166" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.gl::VertexBinding"* }
%"class.angle::BitSetT.400" = type { i64 }
%"struct.std::__1::array.401" = type { [16 x %"class.angle::BitSetT.402"] }
%"class.angle::BitSetT.402" = type { i64 }
%"struct.std::__1::array.403" = type { [16 x %"class.angle::BitSetT.404"] }
%"class.angle::BitSetT.404" = type { i64 }
%struct.Optional.405 = type { i8, %"class.angle::BitSetT.400" }
%"class.rx::VertexArrayImpl" = type opaque
%"class.gl::VertexArray::IndexRangeCache" = type { i64, i32, i64, %"struct.gl::IndexRange" }
%"struct.gl::IndexRange" = type { i64, i64, i64 }
%"class.angle::BitSetT.148" = type { i64 }
%"class.angle::PackedEnumMap.406" = type { %"struct.std::__1::array.407" }
%"struct.std::__1::array.407" = type { [11 x %"class.std::__1::vector.408"] }
%"class.std::__1::vector.408" = type { %"class.std::__1::__vector_base.409" }
%"class.std::__1::__vector_base.409" = type { %"class.gl::BindingPointer.410"*, %"class.gl::BindingPointer.410"*, %"class.std::__1::__compressed_pair.412" }
%"class.gl::BindingPointer.410" = type { %"class.angle::BindingPointer.411" }
%"class.angle::BindingPointer.411" = type { i32 (...)**, %"class.gl::Texture"* }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.gl::BindingPointer.410"* }
%"class.gl::ActiveTexturesCache" = type { %"struct.std::__1::array.417" }
%"struct.std::__1::array.417" = type { [96 x %"class.gl::Texture"*] }
%"class.std::__1::vector.418" = type { %"class.std::__1::__vector_base.419" }
%"class.std::__1::__vector_base.419" = type { %"class.gl::BindingPointer.420"*, %"class.gl::BindingPointer.420"*, %"class.std::__1::__compressed_pair.422" }
%"class.gl::BindingPointer.420" = type { %"class.angle::BindingPointer.421" }
%"class.angle::BindingPointer.421" = type { i32 (...)**, %"class.gl::Sampler"* }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.gl::BindingPointer.420"* }
%"class.std::__1::vector.427" = type { %"class.std::__1::__vector_base.428" }
%"class.std::__1::__vector_base.428" = type { %"struct.gl::ImageUnit"*, %"struct.gl::ImageUnit"*, %"class.std::__1::__compressed_pair.429" }
%"struct.gl::ImageUnit" = type <{ %"class.gl::BindingPointer.410", i32, i8, [3 x i8], i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"struct.gl::ImageUnit"* }
%"class.angle::PackedEnumMap.434" = type { %"struct.std::__1::array.435" }
%"struct.std::__1::array.435" = type { [7 x %"class.gl::BindingPointer.436"] }
%"class.gl::BindingPointer.436" = type { %"class.angle::BindingPointer.437" }
%"class.angle::BindingPointer.437" = type { i32 (...)**, %"class.gl::Query"* }
%"class.gl::Query" = type opaque
%"class.angle::PackedEnumMap.438" = type { %"struct.std::__1::array.439" }
%"struct.std::__1::array.439" = type { [13 x %"class.gl::BindingPointer.264"] }
%"class.std::__1::vector.440" = type { %"class.std::__1::__vector_base.441" }
%"class.std::__1::__vector_base.441" = type { %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"*, %"class.std::__1::__compressed_pair.442" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"class.gl::OffsetBindingPointer"* }
%"class.angle::BitSetArray.447" = type { %"struct.std::__1::array.167" }
%"struct.std::__1::array.167" = type { [2 x %"class.angle::BitSetT.168"] }
%"class.angle::BitSetT.448" = type { i64 }
%"class.gl::BindingPointer.449" = type { %"class.angle::BindingPointer.450" }
%"class.angle::BindingPointer.450" = type { i32 (...)**, %"class.gl::TransformFeedback"* }
%"class.gl::TransformFeedback" = type { %"class.gl::RefCountObject.base.452", %"class.gl::LabeledObject", %"class.gl::TransformFeedbackState", %"class.rx::TransformFeedbackImpl"* }
%"class.gl::RefCountObject.base.452" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TransformFeedbackID" }>
%"struct.gl::TransformFeedbackID" = type { i32 }
%"class.gl::TransformFeedbackState" = type { %"class.std::__1::basic_string", i8, i8, i8, i64, i64, %"class.gl::Program"*, %"class.std::__1::vector.440" }
%"class.rx::TransformFeedbackImpl" = type opaque
%"struct.gl::PixelUnpackState" = type { %"struct.gl::PixelStoreStateBase" }
%"struct.gl::PixelStoreStateBase" = type { i32, i32, i32, i32, i32, i32 }
%"struct.gl::PixelPackState" = type <{ %"struct.gl::PixelStoreStateBase", i8, [3 x i8] }>
%"class.gl::Debug" = type { i8, void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*, %"class.std::__1::deque", i32, i8, %"class.std::__1::vector.462" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.458" }
%"struct.std::__1::__split_buffer" = type { %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"class.std::__1::__compressed_pair.453" }
%"struct.gl::Debug::Message" = type { i32, i32, i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"struct.gl::Debug::Message"** }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.462" = type { %"class.std::__1::__vector_base.463" }
%"class.std::__1::__vector_base.463" = type { %"struct.gl::Debug::Group"*, %"struct.gl::Debug::Group"*, %"class.std::__1::__compressed_pair.471" }
%"struct.gl::Debug::Group" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::vector.464" }
%"class.std::__1::vector.464" = type { %"class.std::__1::__vector_base.465" }
%"class.std::__1::__vector_base.465" = type { %"struct.gl::Debug::Control"*, %"struct.gl::Debug::Control"*, %"class.std::__1::__compressed_pair.466" }
%"struct.gl::Debug::Control" = type <{ i32, i32, i32, [4 x i8], %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"struct.gl::Debug::Control"* }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"struct.gl::Debug::Group"* }
%"class.angle::BitSetT.476" = type { i32 }
%"class.gl::GLES1State" = type <{ %"class.gl::State"*, %"class.angle::BitSetT.166", %"class.std::__1::vector.477", i8, i8, i8, i8, [4 x i8], %"class.std::__1::vector.485", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", %"class.angle::Vector", %"class.std::__1::vector.490", i32, i8, [3 x i8], %"class.angle::FixedVector", %"class.angle::FixedVector", %"class.std::__1::vector.505", %"class.std::__1::vector.512", %"struct.gl::MaterialParameters", %"struct.gl::LightModelParameters", %"class.std::__1::vector.519", %"struct.gl::FogParameters", i8, [3 x i8], %"struct.gl::PointParameters", i8, [3 x i8], float, i8, [7 x i8], %"class.std::__1::vector.528", i8, i8, i8, i8, [4 x i8] }>
%"class.std::__1::vector.477" = type { %"class.std::__1::__vector_base.478" }
%"class.std::__1::__vector_base.478" = type { %"class.angle::BitSetT.479"*, %"class.angle::BitSetT.479"*, %"class.std::__1::__compressed_pair.480" }
%"class.angle::BitSetT.479" = type opaque
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %"class.angle::BitSetT.479"* }
%"class.std::__1::vector.485" = type { i64*, i64, %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::Vector" = type { %"class.angle::VectorBase" }
%"class.angle::VectorBase" = type { [3 x float] }
%"class.std::__1::vector.490" = type { %"class.std::__1::__vector_base.491" }
%"class.std::__1::__vector_base.491" = type { %"struct.gl::TextureCoordF"*, %"struct.gl::TextureCoordF"*, %"class.std::__1::__compressed_pair.492" }
%"struct.gl::TextureCoordF" = type { float, float, float, float }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"struct.gl::TextureCoordF"* }
%"class.angle::FixedVector" = type { %"struct.std::__1::array.497", i64 }
%"struct.std::__1::array.497" = type { [16 x %"class.angle::Mat4"] }
%"class.angle::Mat4" = type { %"class.angle::Matrix" }
%"class.angle::Matrix" = type { %"class.std::__1::vector.498", i32, i32 }
%"class.std::__1::vector.498" = type { %"class.std::__1::__vector_base.499" }
%"class.std::__1::__vector_base.499" = type { float*, float*, %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { float* }
%"class.std::__1::vector.505" = type { %"class.std::__1::__vector_base.506" }
%"class.std::__1::__vector_base.506" = type { %"class.angle::FixedVector"*, %"class.angle::FixedVector"*, %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"class.angle::FixedVector"* }
%"class.std::__1::vector.512" = type { %"class.std::__1::__vector_base.513" }
%"class.std::__1::__vector_base.513" = type { %"struct.gl::TextureEnvironmentParameters"*, %"struct.gl::TextureEnvironmentParameters"*, %"class.std::__1::__compressed_pair.514" }
%"struct.gl::TextureEnvironmentParameters" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", float, float, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.515" }
%"struct.std::__1::__compressed_pair_elem.515" = type { %"struct.gl::TextureEnvironmentParameters"* }
%"struct.gl::MaterialParameters" = type { %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", float }
%"struct.gl::LightModelParameters" = type <{ %"struct.angle::Color", i8, [3 x i8] }>
%"class.std::__1::vector.519" = type { %"class.std::__1::__vector_base.520" }
%"class.std::__1::__vector_base.520" = type { %"struct.gl::LightParameters"*, %"struct.gl::LightParameters"*, %"class.std::__1::__compressed_pair.523" }
%"struct.gl::LightParameters" = type { i8, %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"class.angle::Vector.521", %"class.angle::Vector", float, float, float, float, float }
%"class.angle::Vector.521" = type { %"class.angle::VectorBase.522" }
%"class.angle::VectorBase.522" = type { [4 x float] }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"struct.gl::LightParameters"* }
%"struct.gl::FogParameters" = type { i8, float, float, float, %"struct.angle::Color" }
%"struct.gl::PointParameters" = type { float, float, float, %"class.angle::Vector", float }
%"class.std::__1::vector.528" = type { %"class.std::__1::__vector_base.529" }
%"class.std::__1::__vector_base.529" = type { %"struct.gl::ClipPlaneParameters"*, %"struct.gl::ClipPlaneParameters"*, %"class.std::__1::__compressed_pair.530" }
%"struct.gl::ClipPlaneParameters" = type { i8, %"class.angle::Vector.521" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"struct.gl::ClipPlaneParameters"* }
%"class.angle::BitSetT.535" = type { i32 }
%"class.angle::BitSetT.166" = type { i64 }
%"class.angle::BitSetArray" = type { %"struct.std::__1::array.167" }
%"class.angle::BitSetT.147" = type { i8 }
%"class.gl::ErrorSet" = type { %"class.gl::Context"*, %"class.std::__1::set.35" }
%"class.angle::BitSetT.537" = type { i32 }
%"class.std::__1::unique_ptr.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"class.rx::ContextImpl"* }
%"class.rx::ContextImpl" = type { %"class.rx::GLImplFactory", %"class.gl::State"*, %"class.gl::MemoryProgramCache"*, %"class.gl::ErrorSet"* }
%"class.rx::GLImplFactory" = type { i32 (...)**, %"class.rx::SerialFactoryBase" }
%"class.rx::SerialFactoryBase" = type { i64 }
%"struct.gl::Extensions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, float, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.gl::BindingPointer" = type { %"class.angle::BindingPointer.91" }
%"class.angle::BindingPointer.91" = type { i32 (...)**, %"class.gl::Compiler"* }
%"class.gl::Compiler" = type { %"class.angle::RefCountObject", %"class.std::__1::unique_ptr.92", i32, i32, %struct.ShBuiltInResources, %"class.angle::PackedEnumMap.98" }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.rx::CompilerImpl"* }
%"class.rx::CompilerImpl" = type opaque
%struct.ShBuiltInResources = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 (i8*, i64)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.32", %"struct.std::__1::array.32", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.angle::PackedEnumMap.98" = type { %"struct.std::__1::array.99" }
%"struct.std::__1::array.99" = type { [6 x %"class.std::__1::vector.100"] }
%"class.std::__1::vector.100" = type { %"class.std::__1::__vector_base.101" }
%"class.std::__1::__vector_base.101" = type { %"class.gl::ShCompilerInstance"*, %"class.gl::ShCompilerInstance"*, %"class.std::__1::__compressed_pair.102" }
%"class.gl::ShCompilerInstance" = type <{ i8*, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.gl::ShCompilerInstance"* }
%"struct.egl::Config" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.angle::PackedEnumMap.544" = type { %"struct.std::__1::array.545" }
%"struct.std::__1::array.545" = type { [11 x %"class.gl::BindingPointer.410"] }
%"class.gl::ResourceMap.546" = type { i64, %"class.gl::FenceNV"**, %"class.absl::flat_hash_map.547" }
%"class.gl::FenceNV" = type opaque
%"class.absl::flat_hash_map.547" = type { %"class.absl::container_internal::raw_hash_map.548" }
%"class.absl::container_internal::raw_hash_map.548" = type { %"class.absl::container_internal::raw_hash_set.549" }
%"class.absl::container_internal::raw_hash_set.549" = type { i8*, %"union.absl::container_internal::map_slot_type.550"*, i64, i64, %"class.absl::container_internal::CompressedTuple.551" }
%"union.absl::container_internal::map_slot_type.550" = type opaque
%"class.absl::container_internal::CompressedTuple.551" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.552" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.552" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.556" = type { i64, %"class.gl::Query"**, %"class.absl::flat_hash_map.557" }
%"class.absl::flat_hash_map.557" = type { %"class.absl::container_internal::raw_hash_map.558" }
%"class.absl::container_internal::raw_hash_map.558" = type { %"class.absl::container_internal::raw_hash_set.559" }
%"class.absl::container_internal::raw_hash_set.559" = type { i8*, %"union.absl::container_internal::map_slot_type.560"*, i64, i64, %"class.absl::container_internal::CompressedTuple.561" }
%"union.absl::container_internal::map_slot_type.560" = type opaque
%"class.absl::container_internal::CompressedTuple.561" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.566" = type { i64, %"class.gl::VertexArray"**, %"class.absl::flat_hash_map.567" }
%"class.absl::flat_hash_map.567" = type { %"class.absl::container_internal::raw_hash_map.568" }
%"class.absl::container_internal::raw_hash_map.568" = type { %"class.absl::container_internal::raw_hash_set.569" }
%"class.absl::container_internal::raw_hash_set.569" = type { i8*, %"union.absl::container_internal::map_slot_type.570"*, i64, i64, %"class.absl::container_internal::CompressedTuple.571" }
%"union.absl::container_internal::map_slot_type.570" = type opaque
%"class.absl::container_internal::CompressedTuple.571" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.572" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.572" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.576" = type { i64, %"class.gl::TransformFeedback"**, %"class.absl::flat_hash_map.577" }
%"class.absl::flat_hash_map.577" = type { %"class.absl::container_internal::raw_hash_map.578" }
%"class.absl::container_internal::raw_hash_map.578" = type { %"class.absl::container_internal::raw_hash_set.579" }
%"class.absl::container_internal::raw_hash_set.579" = type { i8*, %"union.absl::container_internal::map_slot_type.580"*, i64, i64, %"class.absl::container_internal::CompressedTuple.581" }
%"union.absl::container_internal::map_slot_type.580" = type opaque
%"class.absl::container_internal::CompressedTuple.581" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.582" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.582" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::HandleAllocator" = type <{ i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.45", %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"*, %"class.std::__1::__compressed_pair.47" }
%"struct.gl::HandleAllocator::HandleRange" = type { i32, i32 }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.gl::HandleAllocator::HandleRange"* }
%"class.std::__1::vector.586" = type { %"class.std::__1::__vector_base.587" }
%"class.std::__1::__vector_base.587" = type { i8**, i8**, %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.589" = type { i8** }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.gl::GLES1Renderer"* }
%"class.gl::GLES1Renderer" = type opaque
%"class.egl::Surface" = type opaque
%"class.egl::Display" = type opaque
%"class.gl::MemoryProgramCache" = type opaque
%"class.gl::StateCache" = type <{ %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", i8, [7 x i8], i64, i64, i64, i64, i8, [7 x i8], %"class.angle::BitSetT.168", %"class.angle::BitSetArray", %"class.angle::PackedEnumMap.599", %"class.angle::PackedEnumMap.601", %"class.angle::PackedEnumMap.603", %"class.angle::PackedEnumMap.605", %"class.angle::PackedEnumMap.605", i8, [7 x i8] }>
%"class.angle::PackedEnumMap.599" = type { %"struct.std::__1::array.600" }
%"struct.std::__1::array.600" = type { [16 x i8] }
%"class.angle::PackedEnumMap.601" = type { %"struct.std::__1::array.602" }
%"struct.std::__1::array.602" = type { [12 x i8] }
%"class.angle::PackedEnumMap.603" = type { %"struct.std::__1::array.604" }
%"struct.std::__1::array.604" = type { [4 x i8] }
%"class.angle::PackedEnumMap.605" = type { %"struct.std::__1::array.606" }
%"struct.std::__1::array.606" = type { [19 x i32] }
%"class.angle::BitSetT.168" = type { i64 }
%"class.angle::BitSetT.536" = type { i64 }
%"class.angle::ObserverBinding" = type { %"class.angle::ObserverBindingBase", %"class.angle::Subject"* }
%"class.std::__1::vector.337" = type { %"class.std::__1::__vector_base.338" }
%"class.std::__1::__vector_base.338" = type { %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"*, %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.angle::ObserverBinding"* }
%struct.Optional.607 = type { i8, %"class.angle::ScratchBuffer" }
%"class.angle::ScratchBuffer" = type { i32, i32, %"class.angle::MemoryBuffer" }
%"class.angle::MemoryBuffer" = type { i64, i8* }
%"class.std::__1::shared_ptr.608" = type { %"class.angle::WorkerThreadPool"*, %"class.std::__1::__shared_weak_count"* }
%"class.angle::WorkerThreadPool" = type { i32 (...)** }
%"class.std::__1::unique_ptr.609" = type { %"class.std::__1::__compressed_pair.610" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"class.angle::FrameCapture"* }
%"class.angle::FrameCapture" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.gl::MockOverlay" = type { %"class.gl::overlay::Mock" }
%"class.gl::overlay::Mock" = type { i8 }
%"class.rx::vk::GarbageObject" = type { i32, %"struct.rx::vk::GarbageHandle_T"* }
%"struct.rx::vk::GarbageHandle_T" = type opaque
%"class.rx::ContextVk" = type { %"class.rx::ContextImpl", %"class.rx::vk::Context", %"class.rx::MultisampleTextureInitializer", %"struct.std::__1::array.644", %"struct.std::__1::array.645", %"class.rx::vk::priv::SecondaryCommandBuffer"*, %"class.rx::vk::PipelineHelper"*, %"class.rx::vk::ObjectAndSerial"*, i8, %"class.rx::WindowSurfaceVk"*, i32, i32, %"class.std::__1::unique_ptr.670", %"class.angle::BitSetT.662", %"class.angle::PackedEnumMap.676", %"class.angle::PackedEnumMap.692", %"class.angle::PackedEnumMap.709", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.rx::VertexArrayVk"*, %"class.rx::FramebufferVk"*, %"class.rx::ProgramVk"*, %"class.rx::ProgramPipelineVk"*, %"class.rx::ProgramExecutableVk"*, i8*, i64, i64, %"class.angle::PackedEnumMap.719", i32, i32, %union.VkClearValue, %union.VkClearValue, i64, %"class.rx::IncompleteTextureSet", i8, i8, i8, i8, i8, %"class.angle::PackedEnumMap.723", %"struct.std::__1::array.757", %"class.rx::vk::TextureDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc", %"struct.std::__1::array.823", %"class.angle::BitSetT.166", %"struct.std::__1::array.824", %"class.rx::vk::CommandPool", %"class.std::__1::vector.826", %"class.rx::RenderPassCache", %"class.rx::vk::CommandBufferHelper"*, %"class.rx::vk::CommandBufferHelper"*, %"class.angle::FastUnorderedSet", %"class.rx::vk::ShaderLibrary", %"class.rx::UtilsVk", i8, [7 x i8], %"class.rx::vk::DynamicQueryPool", %"class.std::__1::vector.959", %"class.std::__1::vector.967", i8, i8, i8, %"class.std::__1::vector.974", %"class.std::__1::vector", %"struct.rx::ContextVk::GpuClockSyncInfo", i64, %"struct.rx::vk::PerfCounters", %"struct.rx::ContextVkPerfCounters", %"struct.rx::ContextVkPerfCounters", %"class.angle::BitSetT.168", %"class.rx::vk::ResourceUseList", i8, %"class.std::__1::vector.989", %"class.std::__1::vector.996", %"class.std::__1::vector.1003", %"class.rx::ShareGroupVk"*, %"class.rx::vk::BufferHelper", %"class.rx::vk::DynamicBuffer", %"class.rx::vk::DynamicBuffer", %"class.std::__1::vector.125", %"class.std::__1::vector.125" }
%"class.rx::vk::Context" = type { i32 (...)**, %"class.rx::RendererVk"* }
%"class.rx::RendererVk" = type { %"class.egl::Display"*, i8, [7 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", %"struct.angle::FeaturesVk", %struct.VkInstance_T*, i8, i8, i8, i32, %struct.VkDebugUtilsMessengerEXT_T*, %struct.VkDebugReportCallbackEXT_T*, %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceLineRasterizationFeaturesEXT, %struct.VkPhysicalDeviceProvokingVertexFeaturesEXT, %struct.VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT, %struct.VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT, %struct.VkPhysicalDeviceTransformFeedbackFeaturesEXT, %struct.VkPhysicalDeviceIndexTypeUint8FeaturesEXT, %struct.VkPhysicalDeviceSubgroupProperties, %struct.VkPhysicalDeviceDeviceMemoryReportFeaturesEXT, %struct.VkDeviceDeviceMemoryReportCreateInfoEXT, %struct.VkPhysicalDeviceExternalMemoryHostPropertiesEXT, %struct.VkPhysicalDeviceShaderFloat16Int8Features, %struct.VkPhysicalDeviceDepthStencilResolveProperties, %struct.VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT, %struct.VkPhysicalDeviceDriverProperties, %struct.VkPhysicalDeviceCustomBorderColorFeaturesEXT, %struct.VkExternalFenceProperties, %struct.VkExternalSemaphoreProperties, %struct.VkPhysicalDeviceSamplerYcbcrConversionFeatures, %"class.std::__1::vector.1094", %"class.angle::PackedEnumMap.1101", i32, i32, i64, i64, i32, %struct.VkDevice_T*, %"class.rx::SerialFactoryBase.1103", i8, %"class.std::__1::mutex", %"class.std::__1::vector.1105", %"class.rx::vk::MemoryProperties", %"class.rx::vk::FormatTable", %"class.std::__1::mutex", %"class.rx::vk::PipelineCache", i32, i8, i8, %"class.angle::PackedEnumMap.1114", %"class.std::__1::basic_string", i32, %"class.rx::DebugAnnotatorVk", i32, %"class.rx::vk::CommandPool", %"class.std::__1::deque.1116", %"class.std::__1::mutex", %"class.rx::vk::CommandQueue", %"class.std::__1::mutex", %"class.std::__1::vector.1163", %"class.rx::vk::CommandProcessor", %"class.rx::vk::Allocator", %"class.rx::SamplerCache", %"class.rx::SamplerYcbcrConversionCache", %"class.rx::vk::ActiveHandleCounter", %"class.rx::vk::ResourceSerialFactory", %"class.rx::vk::MemoryReport", %"class.angle::PackedEnumMap.1311", i32, %"class.std::__1::shared_ptr.1313" }
%"struct.angle::FeaturesVk" = type { %"struct.angle::FeatureSetBase", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.std::__1::array.1093", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature" }
%"struct.angle::FeatureSetBase" = type { %"class.std::__1::map.1082" }
%"class.std::__1::map.1082" = type { %"class.std::__1::__tree.1083" }
%"class.std::__1::__tree.1083" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1084", %"class.std::__1::__compressed_pair.1088" }
%"class.std::__1::__compressed_pair.1084" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1088" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::array.1093" = type { [4 x %"struct.angle::Feature"] }
%"struct.angle::Feature" = type { i8*, i32, i8*, i8*, i8, i8* }
%struct.VkDebugUtilsMessengerEXT_T = type opaque
%struct.VkDebugReportCallbackEXT_T = type opaque
%struct.VkPhysicalDevice_T = type opaque
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceLineRasterizationFeaturesEXT = type { i32, i8*, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceProvokingVertexFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceTransformFeedbackFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceIndexTypeUint8FeaturesEXT = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceSubgroupProperties = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceDeviceMemoryReportFeaturesEXT = type { i32, i8*, i32 }
%struct.VkDeviceDeviceMemoryReportCreateInfoEXT = type { i32, i8*, i32, void (%struct.VkDeviceMemoryReportCallbackDataEXT*, i8*)*, i8* }
%struct.VkDeviceMemoryReportCallbackDataEXT = type { i32, i8*, i32, i32, i64, i64, i32, i64, i32 }
%struct.VkPhysicalDeviceExternalMemoryHostPropertiesEXT = type { i32, i8*, i64 }
%struct.VkPhysicalDeviceShaderFloat16Int8Features = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceDepthStencilResolveProperties = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceDriverProperties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }
%struct.VkConformanceVersion = type { i8, i8, i8, i8 }
%struct.VkPhysicalDeviceCustomBorderColorFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkExternalFenceProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkExternalSemaphoreProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkPhysicalDeviceSamplerYcbcrConversionFeatures = type { i32, i8*, i32 }
%"class.std::__1::vector.1094" = type { %"class.std::__1::__vector_base.1095" }
%"class.std::__1::__vector_base.1095" = type { %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties*, %"class.std::__1::__compressed_pair.1096" }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.1096" = type { %"struct.std::__1::__compressed_pair_elem.1097" }
%"struct.std::__1::__compressed_pair_elem.1097" = type { %struct.VkQueueFamilyProperties* }
%"class.angle::PackedEnumMap.1101" = type { %"struct.std::__1::array.1102" }
%"struct.std::__1::array.1102" = type { [3 x i8] }
%"class.rx::SerialFactoryBase.1103" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1104" }
%"struct.std::__1::__atomic_base.1104" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::vector.1105" = type { %"class.std::__1::__vector_base.1106" }
%"class.std::__1::__vector_base.1106" = type { %"class.rx::vk::SharedGarbage"*, %"class.rx::vk::SharedGarbage"*, %"class.std::__1::__compressed_pair.1107" }
%"class.rx::vk::SharedGarbage" = type { %"class.rx::vk::SharedResourceUse", %"class.std::__1::vector.826" }
%"class.rx::vk::SharedResourceUse" = type { %"struct.rx::vk::ResourceUse"* }
%"struct.rx::vk::ResourceUse" = type { i32, %"class.rx::Serial" }
%"class.std::__1::__compressed_pair.1107" = type { %"struct.std::__1::__compressed_pair_elem.1108" }
%"struct.std::__1::__compressed_pair_elem.1108" = type { %"class.rx::vk::SharedGarbage"* }
%"class.rx::vk::MemoryProperties" = type { %struct.VkPhysicalDeviceMemoryProperties }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%"class.rx::vk::FormatTable" = type { [8 x i8], %"struct.std::__1::array.1112" }
%"struct.std::__1::array.1112" = type { [227 x %"struct.rx::vk::Format"] }
%"struct.rx::vk::Format" = type <{ i32, i32, i32, i32, i32, [4 x i8], void (i64, i64, i64, i8*, i64, i64)*, { void (i64, i64, i64, i8*, i64, i64, i8*, i64, i64)*, i8 } (i32)*, void (i8*, i64, i64, i8*)*, void (i8*, i64, i64, i8*)*, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.rx::vk::PipelineCache" = type { %"class.rx::vk::WrappedObject.1113" }
%"class.rx::vk::WrappedObject.1113" = type { %struct.VkPipelineCache_T* }
%struct.VkPipelineCache_T = type opaque
%"class.angle::PackedEnumMap.1114" = type { %"struct.std::__1::array.1115" }
%"struct.std::__1::array.1115" = type { [227 x %struct.VkFormatProperties] }
%struct.VkFormatProperties = type { i32, i32, i32 }
%"class.rx::DebugAnnotatorVk" = type { %"class.angle::LoggingAnnotator" }
%"class.angle::LoggingAnnotator" = type { %"class.gl::DebugAnnotator" }
%"class.gl::DebugAnnotator" = type { i32 (...)** }
%"class.std::__1::deque.1116" = type { %"class.std::__1::__deque_base.1117" }
%"class.std::__1::__deque_base.1117" = type { %"struct.std::__1::__split_buffer.1118", i64, %"class.std::__1::__compressed_pair.1125" }
%"struct.std::__1::__split_buffer.1118" = type { %"struct.rx::RendererVk::PendingOneOffCommands"**, %"struct.rx::RendererVk::PendingOneOffCommands"**, %"struct.rx::RendererVk::PendingOneOffCommands"**, %"class.std::__1::__compressed_pair.1120" }
%"struct.rx::RendererVk::PendingOneOffCommands" = type { %"class.rx::Serial", %"class.rx::vk::priv::CommandBuffer" }
%"class.rx::vk::priv::CommandBuffer" = type { %"class.rx::vk::WrappedObject.1119" }
%"class.rx::vk::WrappedObject.1119" = type { %struct.VkCommandBuffer_T* }
%struct.VkCommandBuffer_T = type opaque
%"class.std::__1::__compressed_pair.1120" = type { %"struct.std::__1::__compressed_pair_elem.1121" }
%"struct.std::__1::__compressed_pair_elem.1121" = type { %"struct.rx::RendererVk::PendingOneOffCommands"** }
%"class.std::__1::__compressed_pair.1125" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.rx::vk::CommandQueue" = type { %"class.rx::vk::CommandQueueInterface", %"class.std::__1::vector.1129", %"class.std::__1::vector.1137", %"class.rx::vk::priv::CommandBuffer", %"class.rx::vk::PersistentCommandPool", %"class.rx::SerialFactoryBase.1103", %"class.rx::Serial", %"class.rx::Serial", %"class.rx::Serial", %"class.angle::PackedEnumMap.1153", %"class.rx::vk::FenceRecycler" }
%"class.rx::vk::CommandQueueInterface" = type { i32 (...)** }
%"class.std::__1::vector.1129" = type { %"class.std::__1::__vector_base.1130" }
%"class.std::__1::__vector_base.1130" = type { %"class.rx::vk::ObjectAndSerial.1131"*, %"class.rx::vk::ObjectAndSerial.1131"*, %"class.std::__1::__compressed_pair.1132" }
%"class.rx::vk::ObjectAndSerial.1131" = type opaque
%"class.std::__1::__compressed_pair.1132" = type { %"struct.std::__1::__compressed_pair_elem.1133" }
%"struct.std::__1::__compressed_pair_elem.1133" = type { %"class.rx::vk::ObjectAndSerial.1131"* }
%"class.std::__1::vector.1137" = type { %"class.std::__1::__vector_base.1138" }
%"class.std::__1::__vector_base.1138" = type { %"struct.rx::vk::CommandBatch"*, %"struct.rx::vk::CommandBatch"*, %"class.std::__1::__compressed_pair.1141" }
%"struct.rx::vk::CommandBatch" = type { [8 x i8], %"class.rx::vk::priv::CommandBuffer", %"class.rx::vk::CommandPool", %"class.rx::vk::Shared.1139", %"class.rx::Serial" }
%"class.rx::vk::Shared.1139" = type { %"class.rx::vk::RefCounted.1140"* }
%"class.rx::vk::RefCounted.1140" = type { i32, %"class.rx::vk::Fence" }
%"class.rx::vk::Fence" = type { %"class.rx::vk::WrappedObject.1157" }
%"class.rx::vk::WrappedObject.1157" = type { %struct.VkFence_T* }
%struct.VkFence_T = type opaque
%"class.std::__1::__compressed_pair.1141" = type { %"struct.std::__1::__compressed_pair_elem.1142" }
%"struct.std::__1::__compressed_pair_elem.1142" = type { %"struct.rx::vk::CommandBatch"* }
%"class.rx::vk::PersistentCommandPool" = type { %"class.std::__1::vector.1146", %"class.rx::vk::CommandPool" }
%"class.std::__1::vector.1146" = type { %"class.std::__1::__vector_base.1147" }
%"class.std::__1::__vector_base.1147" = type { %"class.rx::vk::priv::CommandBuffer"*, %"class.rx::vk::priv::CommandBuffer"*, %"class.std::__1::__compressed_pair.1148" }
%"class.std::__1::__compressed_pair.1148" = type { %"struct.std::__1::__compressed_pair_elem.1149" }
%"struct.std::__1::__compressed_pair_elem.1149" = type { %"class.rx::vk::priv::CommandBuffer"* }
%"class.angle::PackedEnumMap.1153" = type { %"struct.std::__1::array.1154" }
%"struct.std::__1::array.1154" = type { [3 x %struct.VkQueue_T*] }
%struct.VkQueue_T = type opaque
%"class.rx::vk::FenceRecycler" = type { %"class.std::__1::mutex", %"class.rx::vk::Recycler" }
%"class.rx::vk::Recycler" = type { %"class.std::__1::vector.1155" }
%"class.std::__1::vector.1155" = type { %"class.std::__1::__vector_base.1156" }
%"class.std::__1::__vector_base.1156" = type { %"class.rx::vk::Fence"*, %"class.rx::vk::Fence"*, %"class.std::__1::__compressed_pair.1158" }
%"class.std::__1::__compressed_pair.1158" = type { %"struct.std::__1::__compressed_pair_elem.1159" }
%"struct.std::__1::__compressed_pair_elem.1159" = type { %"class.rx::vk::Fence"* }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.1163" = type { %"class.std::__1::__vector_base.1164" }
%"class.std::__1::__vector_base.1164" = type { %"class.rx::vk::CommandBufferHelper"**, %"class.rx::vk::CommandBufferHelper"**, %"class.std::__1::__compressed_pair.1165" }
%"class.std::__1::__compressed_pair.1165" = type { %"struct.std::__1::__compressed_pair_elem.1166" }
%"struct.std::__1::__compressed_pair_elem.1166" = type { %"class.rx::vk::CommandBufferHelper"** }
%"class.rx::vk::CommandProcessor" = type { %"class.rx::vk::Context", %"class.rx::vk::CommandQueueInterface", %"class.std::__1::queue", %"class.std::__1::mutex", %"class.std::__1::condition_variable", %"class.std::__1::condition_variable", i8, %"class.rx::vk::CommandPool", %"class.rx::vk::CommandQueue", %"class.std::__1::mutex", %"class.std::__1::mutex", %"class.std::__1::queue.1194", %"class.std::__1::mutex", %"class.std::__1::condition_variable", %"class.std::__1::map.1207", %"class.std::__1::thread" }
%"class.std::__1::queue" = type { %"class.std::__1::deque.1170" }
%"class.std::__1::deque.1170" = type { %"class.std::__1::__deque_base.1171" }
%"class.std::__1::__deque_base.1171" = type { %"struct.std::__1::__split_buffer.1172", i64, %"class.std::__1::__compressed_pair.1186" }
%"struct.std::__1::__split_buffer.1172" = type { %"class.rx::vk::CommandProcessorTask"**, %"class.rx::vk::CommandProcessorTask"**, %"class.rx::vk::CommandProcessorTask"**, %"class.std::__1::__compressed_pair.1181" }
%"class.rx::vk::CommandProcessorTask" = type <{ i32, [4 x i8], %"class.rx::vk::RenderPass"*, %"class.rx::vk::CommandBufferHelper"*, %"class.std::__1::vector.974", %"class.std::__1::vector", %"class.rx::vk::Semaphore"*, %"class.std::__1::vector.826", %"class.rx::Serial", %struct.VkPresentInfoKHR, %struct.VkSwapchainKHR_T*, %struct.VkSemaphore_T*, i32, [4 x i8], %struct.VkPresentRegionKHR, %struct.VkPresentRegionsKHR, %"class.std::__1::vector.1174", %struct.VkCommandBuffer_T*, %"class.rx::vk::Fence"*, i8, [7 x i8] }>
%"class.rx::vk::RenderPass" = type { %"class.rx::vk::WrappedObject.1173" }
%"class.rx::vk::WrappedObject.1173" = type { %struct.VkRenderPass_T* }
%struct.VkRenderPass_T = type opaque
%struct.VkPresentInfoKHR = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSwapchainKHR_T**, i32*, i32* }
%struct.VkSwapchainKHR_T = type opaque
%struct.VkPresentRegionKHR = type { i32, %struct.VkRectLayerKHR* }
%struct.VkRectLayerKHR = type { %struct.VkOffset2D, %struct.VkExtent2D, i32 }
%struct.VkOffset2D = type { i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%struct.VkPresentRegionsKHR = type { i32, i8*, i32, %struct.VkPresentRegionKHR* }
%"class.std::__1::vector.1174" = type { %"class.std::__1::__vector_base.1175" }
%"class.std::__1::__vector_base.1175" = type { %struct.VkRectLayerKHR*, %struct.VkRectLayerKHR*, %"class.std::__1::__compressed_pair.1176" }
%"class.std::__1::__compressed_pair.1176" = type { %"struct.std::__1::__compressed_pair_elem.1177" }
%"struct.std::__1::__compressed_pair_elem.1177" = type { %struct.VkRectLayerKHR* }
%"class.std::__1::__compressed_pair.1181" = type { %"struct.std::__1::__compressed_pair_elem.1182" }
%"struct.std::__1::__compressed_pair_elem.1182" = type { %"class.rx::vk::CommandProcessorTask"** }
%"class.std::__1::__compressed_pair.1186" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::queue.1194" = type { %"class.std::__1::deque.1195" }
%"class.std::__1::deque.1195" = type { %"class.std::__1::__deque_base.1196" }
%"class.std::__1::__deque_base.1196" = type { %"struct.std::__1::__split_buffer.1197", i64, %"class.std::__1::__compressed_pair.1203" }
%"struct.std::__1::__split_buffer.1197" = type { %"struct.rx::vk::Error"**, %"struct.rx::vk::Error"**, %"struct.rx::vk::Error"**, %"class.std::__1::__compressed_pair.1198" }
%"struct.rx::vk::Error" = type { i32, i8*, i8*, i32 }
%"class.std::__1::__compressed_pair.1198" = type { %"struct.std::__1::__compressed_pair_elem.1199" }
%"struct.std::__1::__compressed_pair_elem.1199" = type { %"struct.rx::vk::Error"** }
%"class.std::__1::__compressed_pair.1203" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::condition_variable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1190, %union.anon.1192, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1190 = type { i64 }
%union.anon.1192 = type { i64 }
%"class.std::__1::map.1207" = type { %"class.std::__1::__tree.1208" }
%"class.std::__1::__tree.1208" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1209", %"class.std::__1::__compressed_pair.1213" }
%"class.std::__1::__compressed_pair.1209" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1213" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::thread" = type { i64 }
%"class.rx::vk::Allocator" = type { %"class.rx::vk::WrappedObject.1218" }
%"class.rx::vk::WrappedObject.1218" = type { %struct.VmaAllocator_T* }
%struct.VmaAllocator_T = type opaque
%"class.rx::SamplerCache" = type { %"class.rx::HasCacheStats.1219", %"class.std::__1::unordered_map.1220" }
%"class.rx::HasCacheStats.1219" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.rx::CacheStats" = type { i64, i64 }
%"class.std::__1::unordered_map.1220" = type { %"class.std::__1::__hash_table.1221" }
%"class.std::__1::__hash_table.1221" = type <{ %"class.std::__1::unique_ptr.1222", %"class.std::__1::__compressed_pair.1232", %"class.std::__1::__compressed_pair.1237", %"class.std::__1::__compressed_pair.1241", [4 x i8] }>
%"class.std::__1::unique_ptr.1222" = type { %"class.std::__1::__compressed_pair.1223" }
%"class.std::__1::__compressed_pair.1223" = type { %"struct.std::__1::__compressed_pair_elem.1224", %"struct.std::__1::__compressed_pair_elem.1226" }
%"struct.std::__1::__compressed_pair_elem.1224" = type { %"struct.std::__1::__hash_node_base.1225"** }
%"struct.std::__1::__hash_node_base.1225" = type { %"struct.std::__1::__hash_node_base.1225"* }
%"struct.std::__1::__compressed_pair_elem.1226" = type { %"class.std::__1::__bucket_list_deallocator.1227" }
%"class.std::__1::__bucket_list_deallocator.1227" = type { %"class.std::__1::__compressed_pair.1228" }
%"class.std::__1::__compressed_pair.1228" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1232" = type { %"struct.std::__1::__compressed_pair_elem.1233" }
%"struct.std::__1::__compressed_pair_elem.1233" = type { %"struct.std::__1::__hash_node_base.1225" }
%"class.std::__1::__compressed_pair.1237" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1241" = type { %"struct.std::__1::__compressed_pair_elem.906" }
%"struct.std::__1::__compressed_pair_elem.906" = type { float }
%"class.rx::SamplerYcbcrConversionCache" = type { %"class.rx::HasCacheStats.1247", %"class.std::__1::unordered_map.1248" }
%"class.rx::HasCacheStats.1247" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.std::__1::unordered_map.1248" = type { %"class.std::__1::__hash_table.1249" }
%"class.std::__1::__hash_table.1249" = type <{ %"class.std::__1::unique_ptr.1250", %"class.std::__1::__compressed_pair.1260", %"class.std::__1::__compressed_pair.1265", %"class.std::__1::__compressed_pair.1270", [4 x i8] }>
%"class.std::__1::unique_ptr.1250" = type { %"class.std::__1::__compressed_pair.1251" }
%"class.std::__1::__compressed_pair.1251" = type { %"struct.std::__1::__compressed_pair_elem.1252", %"struct.std::__1::__compressed_pair_elem.1254" }
%"struct.std::__1::__compressed_pair_elem.1252" = type { %"struct.std::__1::__hash_node_base.1253"** }
%"struct.std::__1::__hash_node_base.1253" = type { %"struct.std::__1::__hash_node_base.1253"* }
%"struct.std::__1::__compressed_pair_elem.1254" = type { %"class.std::__1::__bucket_list_deallocator.1255" }
%"class.std::__1::__bucket_list_deallocator.1255" = type { %"class.std::__1::__compressed_pair.1256" }
%"class.std::__1::__compressed_pair.1256" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1260" = type { %"struct.std::__1::__compressed_pair_elem.1261" }
%"struct.std::__1::__compressed_pair_elem.1261" = type { %"struct.std::__1::__hash_node_base.1253" }
%"class.std::__1::__compressed_pair.1265" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1270" = type { %"struct.std::__1::__compressed_pair_elem.906" }
%"class.rx::vk::ActiveHandleCounter" = type { %"class.angle::PackedEnumMap.1276", %"class.angle::PackedEnumMap.1276" }
%"class.angle::PackedEnumMap.1276" = type { %"struct.std::__1::array.1277" }
%"struct.std::__1::array.1277" = type { [24 x i32] }
%"class.rx::vk::ResourceSerialFactory" = type { %"struct.std::__1::atomic.1278" }
%"struct.std::__1::atomic.1278" = type { %"struct.std::__1::__atomic_base.1279" }
%"struct.std::__1::__atomic_base.1279" = type { %"struct.std::__1::__atomic_base.1280" }
%"struct.std::__1::__atomic_base.1280" = type { %"struct.std::__1::__cxx_atomic_impl.1281" }
%"struct.std::__1::__cxx_atomic_impl.1281" = type { %"struct.std::__1::__cxx_atomic_base_impl.1282" }
%"struct.std::__1::__cxx_atomic_base_impl.1282" = type { i32 }
%"class.rx::vk::MemoryReport" = type { %"class.std::__1::mutex", i64, i64, %"class.absl::flat_hash_map.1283", i64, i64, %"class.absl::flat_hash_map.1298" }
%"class.absl::flat_hash_map.1283" = type { %"class.absl::container_internal::raw_hash_map.1284" }
%"class.absl::container_internal::raw_hash_map.1284" = type { %"class.absl::container_internal::raw_hash_set.1285" }
%"class.absl::container_internal::raw_hash_set.1285" = type { i8*, %"union.absl::container_internal::map_slot_type.1286"*, i64, i64, %"class.absl::container_internal::CompressedTuple.1287" }
%"union.absl::container_internal::map_slot_type.1286" = type opaque
%"class.absl::container_internal::CompressedTuple.1287" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1288" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1288" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.absl::flat_hash_map.1298" = type { %"class.absl::container_internal::raw_hash_map.1299" }
%"class.absl::container_internal::raw_hash_map.1299" = type { %"class.absl::container_internal::raw_hash_set.1300" }
%"class.absl::container_internal::raw_hash_set.1300" = type { i8*, %"union.absl::container_internal::map_slot_type.1301"*, i64, i64, %"class.absl::container_internal::CompressedTuple.1302" }
%"union.absl::container_internal::map_slot_type.1301" = type opaque
%"class.absl::container_internal::CompressedTuple.1302" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1303" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1303" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.angle::PackedEnumMap.1311" = type { %"struct.std::__1::array.1312" }
%"struct.std::__1::array.1312" = type { [12 x %"class.rx::CacheStats"] }
%"class.std::__1::shared_ptr.1313" = type { %"class.rx::WaitableCompressEvent"*, %"class.std::__1::__shared_weak_count"* }
%"class.rx::WaitableCompressEvent" = type { i32 (...)**, %"class.std::__1::shared_ptr.1314" }
%"class.std::__1::shared_ptr.1314" = type { %"class.angle::WaitableEvent"*, %"class.std::__1::__shared_weak_count"* }
%"class.angle::WaitableEvent" = type { i32 (...)**, %"class.std::__1::shared_ptr.608" }
%"class.rx::MultisampleTextureInitializer" = type { i32 (...)** }
%"struct.std::__1::array.644" = type { [16 x { i64, i64 }] }
%"struct.std::__1::array.645" = type { [16 x { i64, i64 }] }
%"class.rx::vk::priv::SecondaryCommandBuffer" = type { i8, %"class.std::__1::vector.646", %"class.angle::PoolAllocator"*, i8*, i64 }
%"class.std::__1::vector.646" = type { %"class.std::__1::__vector_base.647" }
%"class.std::__1::__vector_base.647" = type { %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"**, %"class.std::__1::__compressed_pair.648" }
%"struct.rx::vk::priv::CommandHeader" = type { i16, i16 }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.649" }
%"struct.std::__1::__compressed_pair_elem.649" = type { %"struct.rx::vk::priv::CommandHeader"** }
%"class.angle::PoolAllocator" = type <{ i64, i64, i64, i64, i64, %"struct.angle::PoolAllocator::Header"*, %"struct.angle::PoolAllocator::Header"*, %"class.std::__1::vector.653", i32, [4 x i8], i64, i8, [7 x i8] }>
%"struct.angle::PoolAllocator::Header" = type { %"struct.angle::PoolAllocator::Header"*, i64 }
%"class.std::__1::vector.653" = type { %"class.std::__1::__vector_base.654" }
%"class.std::__1::__vector_base.654" = type { %"struct.angle::PoolAllocator::AllocState"*, %"struct.angle::PoolAllocator::AllocState"*, %"class.std::__1::__compressed_pair.655" }
%"struct.angle::PoolAllocator::AllocState" = type { i64, %"struct.angle::PoolAllocator::Header"* }
%"class.std::__1::__compressed_pair.655" = type { %"struct.std::__1::__compressed_pair_elem.656" }
%"struct.std::__1::__compressed_pair_elem.656" = type { %"struct.angle::PoolAllocator::AllocState"* }
%"class.rx::vk::PipelineHelper" = type { %"class.std::__1::vector.660", %"class.rx::Serial", %"class.rx::vk::Pipeline" }
%"class.std::__1::vector.660" = type { %"class.std::__1::__vector_base.661" }
%"class.std::__1::__vector_base.661" = type { %"struct.rx::vk::GraphicsPipelineTransition"*, %"struct.rx::vk::GraphicsPipelineTransition"*, %"class.std::__1::__compressed_pair.664" }
%"struct.rx::vk::GraphicsPipelineTransition" = type { %"class.angle::BitSetT.662", %"class.rx::vk::GraphicsPipelineDesc"*, %"class.rx::vk::PipelineHelper"* }
%"class.rx::vk::GraphicsPipelineDesc" = type { %"struct.rx::vk::VertexInputAttributes", %"class.rx::vk::RenderPassDesc", %"struct.rx::vk::PackedRasterizationAndMultisampleStateInfo", %"struct.rx::vk::PackedDepthStencilStateInfo", %"struct.rx::vk::PackedInputAssemblyAndColorBlendStateInfo", %struct.VkViewport, %"struct.rx::vk::PackedScissor", %"struct.rx::vk::PackedExtent" }
%"struct.rx::vk::VertexInputAttributes" = type { [16 x %"struct.rx::vk::PackedAttribDesc"] }
%"struct.rx::vk::PackedAttribDesc" = type { i8, i8, i16, i16 }
%"class.rx::vk::RenderPassDesc" = type { i8, %"class.angle::BitSetT.147", %"class.angle::BitSetT.147", %"struct.std::__1::array.663" }
%"struct.std::__1::array.663" = type { [9 x i8] }
%"struct.rx::vk::PackedRasterizationAndMultisampleStateInfo" = type { %"struct.rx::vk::RasterizationStateBits", float, [2 x i32], float, float, float, float }
%"struct.rx::vk::RasterizationStateBits" = type { i32 }
%"struct.rx::vk::PackedDepthStencilStateInfo" = type { %"struct.rx::vk::DepthStencilEnableFlags", i8, i8, %"struct.rx::vk::DepthCompareOpAndSurfaceRotation", float, float, %"struct.rx::vk::PackedStencilOpState", %"struct.rx::vk::PackedStencilOpState" }
%"struct.rx::vk::DepthStencilEnableFlags" = type { i8 }
%"struct.rx::vk::DepthCompareOpAndSurfaceRotation" = type { i8 }
%"struct.rx::vk::PackedStencilOpState" = type { %"struct.rx::vk::StencilOps", i8, i8 }
%"struct.rx::vk::StencilOps" = type { i16 }
%"struct.rx::vk::PackedInputAssemblyAndColorBlendStateInfo" = type { [4 x i8], [8 x %"struct.rx::vk::PackedColorBlendAttachmentState"], [4 x float], %"struct.rx::vk::LogicOpState", i8, %"struct.rx::vk::PrimitiveState" }
%"struct.rx::vk::PackedColorBlendAttachmentState" = type { i32 }
%"struct.rx::vk::LogicOpState" = type { i8 }
%"struct.rx::vk::PrimitiveState" = type { i16 }
%struct.VkViewport = type { float, float, float, float, float, float }
%"struct.rx::vk::PackedScissor" = type { i16, i16, i16, i16 }
%"struct.rx::vk::PackedExtent" = type { i16, i16 }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.665" }
%"struct.std::__1::__compressed_pair_elem.665" = type { %"struct.rx::vk::GraphicsPipelineTransition"* }
%"class.rx::vk::Pipeline" = type { %"class.rx::vk::WrappedObject.669" }
%"class.rx::vk::WrappedObject.669" = type { %struct.VkPipeline_T* }
%struct.VkPipeline_T = type opaque
%"class.rx::vk::ObjectAndSerial" = type { [8 x i8], %"class.rx::vk::Pipeline", %"class.rx::Serial" }
%"class.rx::WindowSurfaceVk" = type opaque
%"class.std::__1::unique_ptr.670" = type { %"class.std::__1::__compressed_pair.671" }
%"class.std::__1::__compressed_pair.671" = type { %"struct.std::__1::__compressed_pair_elem.672" }
%"struct.std::__1::__compressed_pair_elem.672" = type { %"class.rx::vk::GraphicsPipelineDesc"* }
%"class.angle::BitSetT.662" = type { i64 }
%"class.angle::PackedEnumMap.676" = type { %"struct.std::__1::array.677" }
%"struct.std::__1::array.677" = type { [2 x %"class.rx::vk::DynamicDescriptorPool"] }
%"class.rx::vk::DynamicDescriptorPool" = type { i64, %"class.std::__1::vector.678", %"class.std::__1::vector.685", %struct.VkDescriptorSetLayout_T* }
%"class.std::__1::vector.678" = type { %"class.std::__1::__vector_base.679" }
%"class.std::__1::__vector_base.679" = type { %"class.rx::vk::RefCounted"**, %"class.rx::vk::RefCounted"**, %"class.std::__1::__compressed_pair.680" }
%"class.rx::vk::RefCounted" = type opaque
%"class.std::__1::__compressed_pair.680" = type { %"struct.std::__1::__compressed_pair_elem.681" }
%"struct.std::__1::__compressed_pair_elem.681" = type { %"class.rx::vk::RefCounted"** }
%"class.std::__1::vector.685" = type { %"class.std::__1::__vector_base.686" }
%"class.std::__1::__vector_base.686" = type { %struct.VkDescriptorPoolSize*, %struct.VkDescriptorPoolSize*, %"class.std::__1::__compressed_pair.687" }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorSetLayout_T = type opaque
%"class.angle::PackedEnumMap.692" = type { %"struct.std::__1::array.693" }
%"struct.std::__1::array.693" = type { [7 x %"class.rx::vk::DynamicQueryPool"] }
%"class.angle::PackedEnumMap.709" = type { %"struct.std::__1::array.710" }
%"struct.std::__1::array.710" = type { [7 x %"class.rx::QueryVk"*] }
%"class.rx::QueryVk" = type <{ %"class.rx::QueryImpl.base", [7 x i8], %"class.rx::vk::Shared", %"class.std::__1::vector.712", %"class.rx::vk::QueryHelper", i64, i64, i8, [7 x i8] }>
%"class.rx::QueryImpl.base" = type <{ i32 (...)**, i8 }>
%"class.rx::vk::Shared" = type { %"class.rx::vk::RefCounted.711"* }
%"class.rx::vk::RefCounted.711" = type { i32, [4 x i8], %"class.rx::vk::QueryHelper" }
%"class.std::__1::vector.712" = type { %"class.std::__1::__vector_base.713" }
%"class.std::__1::__vector_base.713" = type { %"class.rx::vk::Shared"*, %"class.rx::vk::Shared"*, %"class.std::__1::__compressed_pair.714" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.715" }
%"struct.std::__1::__compressed_pair_elem.715" = type { %"class.rx::vk::Shared"* }
%"class.rx::vk::QueryHelper" = type <{ %"class.rx::vk::Resource", %"class.rx::vk::DynamicQueryPool"*, i64, i32, [4 x i8] }>
%"class.rx::vk::Resource" = type { i32 (...)**, %"class.rx::vk::SharedResourceUse" }
%"class.rx::VertexArrayVk" = type opaque
%"class.rx::FramebufferVk" = type opaque
%"class.rx::ProgramVk" = type opaque
%"class.rx::ProgramPipelineVk" = type opaque
%"class.rx::ProgramExecutableVk" = type opaque
%"class.angle::PackedEnumMap.719" = type { %"struct.std::__1::array.720" }
%"struct.std::__1::array.720" = type { [3 x i32] }
%union.VkClearValue = type { %union.VkClearColorValue }
%union.VkClearColorValue = type { [4 x float] }
%"class.rx::IncompleteTextureSet" = type { %"class.angle::PackedEnumMap.721", %"class.gl::Buffer"* }
%"class.angle::PackedEnumMap.721" = type { %"struct.std::__1::array.722" }
%"struct.std::__1::array.722" = type { [4 x %"class.angle::PackedEnumMap.544"] }
%"class.angle::PackedEnumMap.723" = type { %"struct.std::__1::array.724" }
%"struct.std::__1::array.724" = type { [2 x %"struct.rx::ContextVk::DriverUniformsDescriptorSet"] }
%"struct.rx::ContextVk::DriverUniformsDescriptorSet" = type { %"class.rx::vk::DynamicBuffer", %struct.VkDescriptorSet_T*, i32, %"class.rx::vk::BindingPointer", %"class.rx::vk::BindingPointer.742", %"class.rx::DriverUniformsDescriptorSetCache" }
%struct.VkDescriptorSet_T = type opaque
%"class.rx::vk::BindingPointer" = type { %"class.rx::vk::RefCounted.741"* }
%"class.rx::vk::RefCounted.741" = type opaque
%"class.rx::vk::BindingPointer.742" = type { %"class.rx::vk::RefCounted"* }
%"class.rx::DriverUniformsDescriptorSetCache" = type { %"class.rx::HasCacheStats", %"class.angle::FastIntegerMap" }
%"class.rx::HasCacheStats" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.angle::FastIntegerMap" = type { %"class.angle::FastIntegerSet", %"class.std::__1::vector.750" }
%"class.angle::FastIntegerSet" = type { %"class.std::__1::vector.743" }
%"class.std::__1::vector.743" = type { %"class.std::__1::__vector_base.744" }
%"class.std::__1::__vector_base.744" = type { %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*, %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.746" }
%"struct.std::__1::__compressed_pair_elem.746" = type { %"class.angle::BitSetT.168"* }
%"class.std::__1::vector.750" = type { %"class.std::__1::__vector_base.751" }
%"class.std::__1::__vector_base.751" = type { %struct.VkDescriptorSet_T**, %struct.VkDescriptorSet_T**, %"class.std::__1::__compressed_pair.752" }
%"class.std::__1::__compressed_pair.752" = type { %"struct.std::__1::__compressed_pair_elem.753" }
%"struct.std::__1::__compressed_pair_elem.753" = type { %struct.VkDescriptorSet_T** }
%"struct.std::__1::array.757" = type { [96 x %"struct.rx::vk::TextureUnit"] }
%"struct.rx::vk::TextureUnit" = type { %"class.rx::TextureVk"*, %"class.rx::vk::SamplerHelper"*, i32 }
%"class.rx::TextureVk" = type { %"class.rx::TextureImpl", %"class.angle::ObserverInterface", i8, i8, i8, i32, i32, [4 x i8], %"class.angle::PackedEnumMap.758", %"class.angle::PackedEnumMap.774", %"class.rx::vk::BufferViewHelper", %"class.angle::PackedEnumMap.807", %"class.rx::vk::ImageHelper"*, %"class.rx::vk::BindingPointer.817", i64, i32, i32, %"class.angle::BitSetT.166", %"class.angle::ObserverBinding" }
%"class.angle::PackedEnumMap.758" = type { %"struct.std::__1::array.759" }
%"struct.std::__1::array.759" = type { [5 x %"class.rx::vk::ImageHelper"] }
%"class.rx::vk::ImageHelper" = type <{ %"class.rx::vk::Resource", %"class.angle::Subject", %"class.rx::vk::Image", %"class.rx::vk::DeviceMemory", i32, i32, i32, i32, %struct.VkExtent3D, i8, [3 x i8], %"struct.rx::vk::Format"*, i32, %"class.rx::vk::ImageSerial", i32, i32, i32, i32, %"class.angle::BitSetT.761", [6 x i8], %"class.rx::vk::BindingPointer.762", i64, %"class.gl::LevelIndexWrapper", i32, i32, [4 x i8], %"class.rx::vk::DynamicBuffer", %"class.std::__1::vector.764", %struct.Optional.772, %"struct.std::__1::array.773", %"struct.std::__1::array.773", [4 x i8] }>
%"class.rx::vk::Image" = type { %"class.rx::vk::WrappedObject.760" }
%"class.rx::vk::WrappedObject.760" = type { %struct.VkImage_T* }
%struct.VkImage_T = type opaque
%"class.rx::vk::DeviceMemory" = type { %"class.rx::vk::WrappedObject.730" }
%"class.rx::vk::WrappedObject.730" = type { %struct.VkDeviceMemory_T* }
%struct.VkDeviceMemory_T = type opaque
%"class.rx::vk::ImageSerial" = type { i32 }
%"class.angle::BitSetT.761" = type { i16 }
%"class.rx::vk::BindingPointer.762" = type { %"class.rx::vk::RefCounted.763"* }
%"class.rx::vk::RefCounted.763" = type opaque
%"class.gl::LevelIndexWrapper" = type { i32 }
%"class.std::__1::vector.764" = type { %"class.std::__1::__vector_base.765" }
%"class.std::__1::__vector_base.765" = type { %"class.std::__1::vector.766"*, %"class.std::__1::vector.766"*, %"class.std::__1::__compressed_pair.767" }
%"class.std::__1::vector.766" = type opaque
%"class.std::__1::__compressed_pair.767" = type { %"struct.std::__1::__compressed_pair_elem.768" }
%"struct.std::__1::__compressed_pair_elem.768" = type { %"class.std::__1::vector.766"* }
%struct.Optional.772 = type { i8, %"struct.rx::vk::ImageHelper::ClearUpdate" }
%"struct.rx::vk::ImageHelper::ClearUpdate" = type { i32, %union.VkClearValue, i32, i32, i32 }
%"struct.std::__1::array.773" = type { [16 x %"class.angle::BitSetT.147"] }
%"class.angle::PackedEnumMap.774" = type { %"struct.std::__1::array.775" }
%"struct.std::__1::array.775" = type { [5 x %"class.rx::vk::ImageViewHelper"] }
%"class.rx::vk::ImageViewHelper" = type <{ %"class.rx::vk::Resource", %"class.gl::LevelIndexWrapper.776", [4 x i8], %"class.std::__1::vector.777", %"class.std::__1::vector.777", %"class.std::__1::vector.777", %"class.std::__1::vector.777", %"class.std::__1::vector.777", %"class.std::__1::vector.777", %"class.std::__1::vector.777", i8, [7 x i8], %"class.std::__1::vector.777", %"class.std::__1::vector.785", %"class.std::__1::vector.777", %"class.std::__1::vector.785", %"class.std::__1::vector.777", %"class.std::__1::vector.785", %"class.rx::vk::ImageOrBufferViewSerial", [4 x i8] }>
%"class.gl::LevelIndexWrapper.776" = type { i32 }
%"class.std::__1::vector.777" = type { %"class.std::__1::__vector_base.778" }
%"class.std::__1::__vector_base.778" = type { %"class.rx::vk::ImageView"*, %"class.rx::vk::ImageView"*, %"class.std::__1::__compressed_pair.780" }
%"class.rx::vk::ImageView" = type { %"class.rx::vk::WrappedObject.779" }
%"class.rx::vk::WrappedObject.779" = type { %struct.VkImageView_T* }
%struct.VkImageView_T = type opaque
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"class.rx::vk::ImageView"* }
%"class.std::__1::vector.785" = type { %"class.std::__1::__vector_base.786" }
%"class.std::__1::__vector_base.786" = type { %"class.std::__1::vector.777"*, %"class.std::__1::vector.777"*, %"class.std::__1::__compressed_pair.787" }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.788" }
%"struct.std::__1::__compressed_pair_elem.788" = type { %"class.std::__1::vector.777"* }
%"class.rx::vk::ImageOrBufferViewSerial" = type { i32 }
%"class.rx::vk::BufferViewHelper" = type <{ %"class.rx::vk::Resource", %"class.absl::flat_hash_map.792", i64, i64, %"class.rx::vk::ImageOrBufferViewSerial", [4 x i8] }>
%"class.absl::flat_hash_map.792" = type { %"class.absl::container_internal::raw_hash_map.793" }
%"class.absl::container_internal::raw_hash_map.793" = type { %"class.absl::container_internal::raw_hash_set.794" }
%"class.absl::container_internal::raw_hash_set.794" = type { i8*, %"union.absl::container_internal::map_slot_type.795"*, i64, i64, %"class.absl::container_internal::CompressedTuple.796" }
%"union.absl::container_internal::map_slot_type.795" = type opaque
%"class.absl::container_internal::CompressedTuple.796" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.797" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.797" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.angle::PackedEnumMap.807" = type { %"struct.std::__1::array.808" }
%"struct.std::__1::array.808" = type { [5 x %"class.std::__1::vector.809"] }
%"class.std::__1::vector.809" = type { %"class.std::__1::__vector_base.810" }
%"class.std::__1::__vector_base.810" = type { %"class.std::__1::vector.811"*, %"class.std::__1::vector.811"*, %"class.std::__1::__compressed_pair.812" }
%"class.std::__1::vector.811" = type opaque
%"class.std::__1::__compressed_pair.812" = type { %"struct.std::__1::__compressed_pair_elem.813" }
%"struct.std::__1::__compressed_pair_elem.813" = type { %"class.std::__1::vector.811"* }
%"class.rx::vk::BindingPointer.817" = type { %"class.rx::vk::RefCounted.818"* }
%"class.rx::vk::RefCounted.818" = type { i32, [4 x i8], %"class.rx::vk::SamplerHelper" }
%"class.rx::vk::SamplerHelper" = type <{ [8 x i8], %"class.rx::vk::Sampler", %"class.rx::vk::SamplerSerial", [4 x i8] }>
%"class.rx::vk::Sampler" = type { %"class.rx::vk::WrappedObject.819" }
%"class.rx::vk::WrappedObject.819" = type { %struct.VkSampler_T* }
%struct.VkSampler_T = type opaque
%"class.rx::vk::SamplerSerial" = type { i32 }
%"class.rx::vk::TextureDescriptorDesc" = type { i32, %"struct.std::__1::array.820" }
%"struct.std::__1::array.820" = type { [96 x %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"] }
%"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials" = type { %"struct.rx::vk::ImageOrBufferViewSubresourceSerial", %"class.rx::vk::SamplerSerial" }
%"struct.rx::vk::ImageOrBufferViewSubresourceSerial" = type { %"class.rx::vk::ImageOrBufferViewSerial", %"struct.rx::vk::ImageSubresourceRange" }
%"struct.rx::vk::ImageSubresourceRange" = type { i32 }
%"class.rx::vk::ShaderBuffersDescriptorDesc" = type { %"class.angle::FastVector.821" }
%"class.angle::FastVector.821" = type { %"struct.std::__1::array.822", i32*, i64, i64 }
%"struct.std::__1::array.822" = type { [32 x i32] }
%"struct.std::__1::array.823" = type { [96 x %"class.rx::TextureVk"*] }
%"struct.std::__1::array.824" = type { [16 x %"class.rx::vk::DynamicBuffer"] }
%"class.rx::vk::CommandPool" = type { %"class.rx::vk::WrappedObject.825" }
%"class.rx::vk::WrappedObject.825" = type { %struct.VkCommandPool_T* }
%struct.VkCommandPool_T = type opaque
%"class.std::__1::vector.826" = type { %"class.std::__1::__vector_base.827" }
%"class.std::__1::__vector_base.827" = type { %"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"*, %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.829" }
%"struct.std::__1::__compressed_pair_elem.829" = type { %"class.rx::vk::GarbageObject"* }
%"class.rx::RenderPassCache" = type { %"class.absl::flat_hash_map.833", %"class.rx::CacheStats", %"class.rx::CacheStats" }
%"class.absl::flat_hash_map.833" = type { %"class.absl::container_internal::raw_hash_map.834" }
%"class.absl::container_internal::raw_hash_map.834" = type { %"class.absl::container_internal::raw_hash_set.835" }
%"class.absl::container_internal::raw_hash_set.835" = type { i8*, %"union.absl::container_internal::map_slot_type.836"*, i64, i64, %"class.absl::container_internal::CompressedTuple.837" }
%"union.absl::container_internal::map_slot_type.836" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.rx::vk::RenderPassDesc", %"class.absl::flat_hash_map.1332" }
%"class.absl::flat_hash_map.1332" = type { %"class.absl::container_internal::raw_hash_map.1333" }
%"class.absl::container_internal::raw_hash_map.1333" = type { %"class.absl::container_internal::raw_hash_set.1334" }
%"class.absl::container_internal::raw_hash_set.1334" = type { i8*, %"union.absl::container_internal::map_slot_type.1335"*, i64, i64, %"class.absl::container_internal::CompressedTuple.1336" }
%"union.absl::container_internal::map_slot_type.1335" = type { %"struct.std::__1::pair.1348" }
%"struct.std::__1::pair.1348" = type { %"class.rx::vk::AttachmentOpsArray", %"class.rx::vk::RenderPassHelper" }
%"class.rx::vk::AttachmentOpsArray" = type { %"struct.std::__1::array.858" }
%"struct.std::__1::array.858" = type { [10 x %"struct.rx::vk::PackedAttachmentOpsDesc"] }
%"struct.rx::vk::PackedAttachmentOpsDesc" = type { i32 }
%"class.rx::vk::RenderPassHelper" = type <{ [8 x i8], %"class.rx::vk::RenderPass", %"struct.rx::vk::RenderPassPerfCounters", [3 x i8] }>
%"struct.rx::vk::RenderPassPerfCounters" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.absl::container_internal::CompressedTuple.1336" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1337" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1337" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.absl::container_internal::CompressedTuple.837" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.838" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.838" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.rx::vk::CommandBufferHelper" = type { [8 x i8], %"class.angle::PoolAllocator", %"class.angle::PackedEnumMap.848", %"class.angle::BitSetT.857", %"class.rx::vk::priv::SecondaryCommandBuffer", i32, %"class.rx::vk::RenderPassDesc", %"class.rx::vk::AttachmentOpsArray", %"class.rx::vk::Framebuffer", %"struct.gl::Rectangle", %"class.rx::vk::PackedClearValuesArray", i8, %"struct.std::__1::array.861", i32, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, %"struct.gl::Rectangle", %"struct.gl::Rectangle", %"class.rx::vk::PackedAttachmentIndex", %"class.angle::FastIntegerMap.862", %"class.angle::FastIntegerSet", %"class.rx::vk::ImageHelper"*, %"class.rx::vk::ImageHelper"*, %"class.gl::LevelIndexWrapper", i32, i32, %"class.rx::vk::PackedAttachmentIndex", %"class.rx::vk::PackedImageAttachmentArray", %"class.rx::vk::PackedImageAttachmentArray", %"class.rx::vk::ImageHelper"* }
%"class.angle::PackedEnumMap.848" = type { %"struct.std::__1::array.849" }
%"struct.std::__1::array.849" = type { [14 x %"class.rx::vk::PipelineBarrier"] }
%"class.rx::vk::PipelineBarrier" = type { i32, i32, i32, i32, %"class.std::__1::vector.850" }
%"class.std::__1::vector.850" = type { %"class.std::__1::__vector_base.851" }
%"class.std::__1::__vector_base.851" = type { %struct.VkImageMemoryBarrier*, %struct.VkImageMemoryBarrier*, %"class.std::__1::__compressed_pair.852" }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.853" }
%"struct.std::__1::__compressed_pair_elem.853" = type { %struct.VkImageMemoryBarrier* }
%"class.angle::BitSetT.857" = type { i16 }
%"class.rx::vk::Framebuffer" = type { %"class.rx::vk::WrappedObject.859" }
%"class.rx::vk::WrappedObject.859" = type { %struct.VkFramebuffer_T* }
%struct.VkFramebuffer_T = type opaque
%"class.rx::vk::PackedClearValuesArray" = type { %"struct.std::__1::array.860" }
%"struct.std::__1::array.860" = type { [10 x %union.VkClearValue] }
%"struct.std::__1::array.861" = type { [4 x %struct.VkBuffer_T*] }
%struct.VkBuffer_T = type opaque
%"class.angle::FastIntegerMap.862" = type { %"class.angle::FastIntegerSet", %"class.std::__1::vector.863" }
%"class.std::__1::vector.863" = type { %"class.std::__1::__vector_base.864" }
%"class.std::__1::__vector_base.864" = type { i32*, i32*, %"class.std::__1::__compressed_pair.865" }
%"class.std::__1::__compressed_pair.865" = type { %"struct.std::__1::__compressed_pair_elem.866" }
%"struct.std::__1::__compressed_pair_elem.866" = type { i32* }
%"class.rx::vk::PackedAttachmentIndex" = type { i32 }
%"class.rx::vk::PackedImageAttachmentArray" = type { %"struct.std::__1::array.870" }
%"struct.std::__1::array.870" = type { [10 x %"class.rx::vk::ImageHelper"*] }
%"class.angle::FastUnorderedSet" = type { %"class.angle::FastVector.871" }
%"class.angle::FastVector.871" = type { %"struct.std::__1::array.872", %"class.rx::vk::BufferHelper"**, i64, i64 }
%"struct.std::__1::array.872" = type { [4 x %"class.rx::vk::BufferHelper"*] }
%"class.rx::vk::ShaderLibrary" = type { [8 x i8], [24 x %"class.rx::vk::RefCounted.873"], [4 x %"class.rx::vk::RefCounted.873"], [4 x %"class.rx::vk::RefCounted.873"], [3 x %"class.rx::vk::RefCounted.873"], [1 x %"class.rx::vk::RefCounted.873"], [8 x %"class.rx::vk::RefCounted.873"], [1 x %"class.rx::vk::RefCounted.873"], [10 x %"class.rx::vk::RefCounted.873"], [48 x %"class.rx::vk::RefCounted.873"], [43 x %"class.rx::vk::RefCounted.873"], [6 x %"class.rx::vk::RefCounted.873"], [2 x %"class.rx::vk::RefCounted.873"] }
%"class.rx::vk::RefCounted.873" = type { i32, %"class.rx::vk::ObjectAndSerial.874" }
%"class.rx::vk::ObjectAndSerial.874" = type { [8 x i8], %"class.rx::vk::ShaderModule", %"class.rx::Serial" }
%"class.rx::vk::ShaderModule" = type { %"class.rx::vk::WrappedObject.875" }
%"class.rx::vk::WrappedObject.875" = type { %struct.VkShaderModule_T* }
%struct.VkShaderModule_T = type opaque
%"class.rx::UtilsVk" = type { [8 x i8], %"class.angle::PackedEnumMap.876", %"class.angle::PackedEnumMap.880", %"class.angle::PackedEnumMap.884", [4 x %"class.rx::vk::ShaderProgramHelper"], [3 x %"class.rx::vk::ShaderProgramHelper"], [1 x %"class.rx::vk::ShaderProgramHelper"], [8 x %"class.rx::vk::ShaderProgramHelper"], %"class.rx::vk::ShaderProgramHelper", [48 x %"class.rx::vk::ShaderProgramHelper"], [43 x %"class.rx::vk::ShaderProgramHelper"], [24 x %"class.rx::vk::ShaderProgramHelper"], [4 x %"class.rx::vk::ShaderProgramHelper"], [6 x %"class.rx::vk::ShaderProgramHelper"], [2 x %"class.rx::vk::ShaderProgramHelper"], [10 x %"class.rx::vk::ShaderProgramHelper"], %"class.std::__1::unordered_map.910", %"class.std::__1::unordered_map.935", %"class.rx::vk::Sampler", %"class.rx::vk::Sampler", %"struct.rx::InternalShaderPerfCounters", %"struct.rx::InternalShaderPerfCounters" }
%"class.angle::PackedEnumMap.876" = type { %"struct.std::__1::array.877" }
%"struct.std::__1::array.877" = type { [22 x %"class.angle::PackedEnumMap.878"] }
%"class.angle::PackedEnumMap.878" = type { %"struct.std::__1::array.879" }
%"struct.std::__1::array.879" = type { [4 x %"class.rx::vk::BindingPointer"] }
%"class.angle::PackedEnumMap.880" = type { %"struct.std::__1::array.881" }
%"struct.std::__1::array.881" = type { [22 x %"class.rx::vk::BindingPointer.882"] }
%"class.rx::vk::BindingPointer.882" = type { %"class.rx::vk::RefCounted.883"* }
%"class.rx::vk::RefCounted.883" = type opaque
%"class.angle::PackedEnumMap.884" = type { %"struct.std::__1::array.885" }
%"struct.std::__1::array.885" = type { [22 x %"class.rx::vk::DynamicDescriptorPool"] }
%"class.rx::vk::ShaderProgramHelper" = type { [8 x i8], %"class.angle::PackedEnumMap.886", %"class.rx::GraphicsPipelineCache", %"class.rx::vk::ObjectAndSerial", %"struct.rx::vk::SpecializationConstants" }
%"class.angle::PackedEnumMap.886" = type { %"struct.std::__1::array.887" }
%"struct.std::__1::array.887" = type { [6 x %"class.rx::vk::BindingPointer.888"] }
%"class.rx::vk::BindingPointer.888" = type { %"class.rx::vk::RefCounted.873"* }
%"class.rx::GraphicsPipelineCache" = type { %"class.rx::HasCacheStats.889", %"class.std::__1::unordered_map" }
%"class.rx::HasCacheStats.889" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.890", %"class.std::__1::__compressed_pair.898", %"class.std::__1::__compressed_pair.903", %"class.std::__1::__compressed_pair.905", [4 x i8] }>
%"class.std::__1::unique_ptr.890" = type { %"class.std::__1::__compressed_pair.891" }
%"class.std::__1::__compressed_pair.891" = type { %"struct.std::__1::__compressed_pair_elem.892", %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.892" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.894" }
%"class.std::__1::__compressed_pair.894" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.903" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.905" = type { %"struct.std::__1::__compressed_pair_elem.906" }
%"struct.rx::vk::SpecializationConstants" = type { i32, i32, i32, i32 }
%"class.std::__1::unordered_map.910" = type { %"class.std::__1::__hash_table.911" }
%"class.std::__1::__hash_table.911" = type <{ %"class.std::__1::unique_ptr.912", %"class.std::__1::__compressed_pair.922", %"class.std::__1::__compressed_pair.927", %"class.std::__1::__compressed_pair.931", [4 x i8] }>
%"class.std::__1::unique_ptr.912" = type { %"class.std::__1::__compressed_pair.913" }
%"class.std::__1::__compressed_pair.913" = type { %"struct.std::__1::__compressed_pair_elem.914", %"struct.std::__1::__compressed_pair_elem.916" }
%"struct.std::__1::__compressed_pair_elem.914" = type { %"struct.std::__1::__hash_node_base.915"** }
%"struct.std::__1::__hash_node_base.915" = type { %"struct.std::__1::__hash_node_base.915"* }
%"struct.std::__1::__compressed_pair_elem.916" = type { %"class.std::__1::__bucket_list_deallocator.917" }
%"class.std::__1::__bucket_list_deallocator.917" = type { %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.923" }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"struct.std::__1::__hash_node_base.915" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.906" }
%"class.std::__1::unordered_map.935" = type { %"class.std::__1::__hash_table.936" }
%"class.std::__1::__hash_table.936" = type <{ %"class.std::__1::unique_ptr.937", %"class.std::__1::__compressed_pair.947", %"class.std::__1::__compressed_pair.952", %"class.std::__1::__compressed_pair.955", [4 x i8] }>
%"class.std::__1::unique_ptr.937" = type { %"class.std::__1::__compressed_pair.938" }
%"class.std::__1::__compressed_pair.938" = type { %"struct.std::__1::__compressed_pair_elem.939", %"struct.std::__1::__compressed_pair_elem.941" }
%"struct.std::__1::__compressed_pair_elem.939" = type { %"struct.std::__1::__hash_node_base.940"** }
%"struct.std::__1::__hash_node_base.940" = type { %"struct.std::__1::__hash_node_base.940"* }
%"struct.std::__1::__compressed_pair_elem.941" = type { %"class.std::__1::__bucket_list_deallocator.942" }
%"class.std::__1::__bucket_list_deallocator.942" = type { %"class.std::__1::__compressed_pair.943" }
%"class.std::__1::__compressed_pair.943" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.947" = type { %"struct.std::__1::__compressed_pair_elem.948" }
%"struct.std::__1::__compressed_pair_elem.948" = type { %"struct.std::__1::__hash_node_base.940" }
%"class.std::__1::__compressed_pair.952" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.955" = type { %"struct.std::__1::__compressed_pair_elem.906" }
%"struct.rx::InternalShaderPerfCounters" = type { i32 }
%"class.rx::vk::DynamicQueryPool" = type { %"class.rx::vk::DynamicallyGrowingPool.base", i32 }
%"class.rx::vk::DynamicallyGrowingPool.base" = type <{ i32 (...)**, i32, [4 x i8], %"class.std::__1::vector.694", %"class.std::__1::vector.702", i64, i32 }>
%"class.std::__1::vector.694" = type { %"class.std::__1::__vector_base.695" }
%"class.std::__1::__vector_base.695" = type { %"class.rx::vk::QueryPool"*, %"class.rx::vk::QueryPool"*, %"class.std::__1::__compressed_pair.697" }
%"class.rx::vk::QueryPool" = type { %"class.rx::vk::WrappedObject.696" }
%"class.rx::vk::WrappedObject.696" = type { %struct.VkQueryPool_T* }
%struct.VkQueryPool_T = type opaque
%"class.std::__1::__compressed_pair.697" = type { %"struct.std::__1::__compressed_pair_elem.698" }
%"struct.std::__1::__compressed_pair_elem.698" = type { %"class.rx::vk::QueryPool"* }
%"class.std::__1::vector.702" = type { %"class.std::__1::__vector_base.703" }
%"class.std::__1::__vector_base.703" = type { %"struct.rx::vk::DynamicallyGrowingPool<rx::vk::QueryPool>::PoolStats"*, %"struct.rx::vk::DynamicallyGrowingPool<rx::vk::QueryPool>::PoolStats"*, %"class.std::__1::__compressed_pair.704" }
%"struct.rx::vk::DynamicallyGrowingPool<rx::vk::QueryPool>::PoolStats" = type opaque
%"class.std::__1::__compressed_pair.704" = type { %"struct.std::__1::__compressed_pair_elem.705" }
%"struct.std::__1::__compressed_pair_elem.705" = type { %"struct.rx::vk::DynamicallyGrowingPool<rx::vk::QueryPool>::PoolStats"* }
%"class.std::__1::vector.959" = type { %"class.std::__1::__vector_base.960" }
%"class.std::__1::__vector_base.960" = type { %"struct.rx::ContextVk::GpuEventQuery"*, %"struct.rx::ContextVk::GpuEventQuery"*, %"class.std::__1::__compressed_pair.962" }
%"struct.rx::ContextVk::GpuEventQuery" = type { %"struct.std::__1::array.961", i8, [7 x i8], %"class.rx::vk::QueryHelper" }
%"struct.std::__1::array.961" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.962" = type { %"struct.std::__1::__compressed_pair_elem.963" }
%"struct.std::__1::__compressed_pair_elem.963" = type { %"struct.rx::ContextVk::GpuEventQuery"* }
%"class.std::__1::vector.967" = type { %"class.std::__1::__vector_base.968" }
%"class.std::__1::__vector_base.968" = type { %"struct.rx::ContextVk::GpuEvent"*, %"struct.rx::ContextVk::GpuEvent"*, %"class.std::__1::__compressed_pair.969" }
%"struct.rx::ContextVk::GpuEvent" = type { i64, %"struct.std::__1::array.961", i8 }
%"class.std::__1::__compressed_pair.969" = type { %"struct.std::__1::__compressed_pair_elem.970" }
%"struct.std::__1::__compressed_pair_elem.970" = type { %"struct.rx::ContextVk::GpuEvent"* }
%"class.std::__1::vector.974" = type { %"class.std::__1::__vector_base.975" }
%"class.std::__1::__vector_base.975" = type { %struct.VkSemaphore_T**, %struct.VkSemaphore_T**, %"class.std::__1::__compressed_pair.976" }
%"class.std::__1::__compressed_pair.976" = type { %"struct.std::__1::__compressed_pair_elem.977" }
%"struct.std::__1::__compressed_pair_elem.977" = type { %struct.VkSemaphore_T** }
%"struct.rx::ContextVk::GpuClockSyncInfo" = type { double, double }
%"struct.rx::vk::PerfCounters" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.rx::ContextVkPerfCounters" = type { %"class.angle::PackedEnumMap.981" }
%"class.angle::PackedEnumMap.981" = type { %"struct.std::__1::array.373" }
%"class.rx::vk::ResourceUseList" = type { i32 (...)**, %"class.std::__1::vector.982" }
%"class.std::__1::vector.982" = type { %"class.std::__1::__vector_base.983" }
%"class.std::__1::__vector_base.983" = type { %"class.rx::vk::SharedResourceUse"*, %"class.rx::vk::SharedResourceUse"*, %"class.std::__1::__compressed_pair.984" }
%"class.std::__1::__compressed_pair.984" = type { %"struct.std::__1::__compressed_pair_elem.985" }
%"struct.std::__1::__compressed_pair_elem.985" = type { %"class.rx::vk::SharedResourceUse"* }
%"class.std::__1::vector.989" = type { %"class.std::__1::__vector_base.990" }
%"class.std::__1::__vector_base.990" = type { %struct.VkDescriptorBufferInfo*, %struct.VkDescriptorBufferInfo*, %"class.std::__1::__compressed_pair.991" }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%"class.std::__1::__compressed_pair.991" = type { %"struct.std::__1::__compressed_pair_elem.992" }
%"struct.std::__1::__compressed_pair_elem.992" = type { %struct.VkDescriptorBufferInfo* }
%"class.std::__1::vector.996" = type { %"class.std::__1::__vector_base.997" }
%"class.std::__1::__vector_base.997" = type { %struct.VkDescriptorImageInfo*, %struct.VkDescriptorImageInfo*, %"class.std::__1::__compressed_pair.998" }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%"class.std::__1::__compressed_pair.998" = type { %"struct.std::__1::__compressed_pair_elem.999" }
%"struct.std::__1::__compressed_pair_elem.999" = type { %struct.VkDescriptorImageInfo* }
%"class.std::__1::vector.1003" = type { %"class.std::__1::__vector_base.1004" }
%"class.std::__1::__vector_base.1004" = type { %struct.VkWriteDescriptorSet*, %struct.VkWriteDescriptorSet*, %"class.std::__1::__compressed_pair.1005" }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkBufferView_T = type opaque
%"class.std::__1::__compressed_pair.1005" = type { %"struct.std::__1::__compressed_pair_elem.1006" }
%"struct.std::__1::__compressed_pair_elem.1006" = type { %struct.VkWriteDescriptorSet* }
%"class.rx::ShareGroupVk" = type <{ %"class.rx::ShareGroupImpl", %"class.rx::PipelineLayoutCache", %"class.rx::DescriptorSetLayoutCache", %"class.std::__1::set.1065", %"class.std::__1::vector.1075", i8, [7 x i8] }>
%"class.rx::ShareGroupImpl" = type { i32 (...)** }
%"class.rx::PipelineLayoutCache" = type { %"class.rx::HasCacheStats.1010", %"class.std::__1::unordered_map.1011" }
%"class.rx::HasCacheStats.1010" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.std::__1::unordered_map.1011" = type { %"class.std::__1::__hash_table.1012" }
%"class.std::__1::__hash_table.1012" = type <{ %"class.std::__1::unique_ptr.1013", %"class.std::__1::__compressed_pair.1023", %"class.std::__1::__compressed_pair.1028", %"class.std::__1::__compressed_pair.1032", [4 x i8] }>
%"class.std::__1::unique_ptr.1013" = type { %"class.std::__1::__compressed_pair.1014" }
%"class.std::__1::__compressed_pair.1014" = type { %"struct.std::__1::__compressed_pair_elem.1015", %"struct.std::__1::__compressed_pair_elem.1017" }
%"struct.std::__1::__compressed_pair_elem.1015" = type { %"struct.std::__1::__hash_node_base.1016"** }
%"struct.std::__1::__hash_node_base.1016" = type { %"struct.std::__1::__hash_node_base.1016"* }
%"struct.std::__1::__compressed_pair_elem.1017" = type { %"class.std::__1::__bucket_list_deallocator.1018" }
%"class.std::__1::__bucket_list_deallocator.1018" = type { %"class.std::__1::__compressed_pair.1019" }
%"class.std::__1::__compressed_pair.1019" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1023" = type { %"struct.std::__1::__compressed_pair_elem.1024" }
%"struct.std::__1::__compressed_pair_elem.1024" = type { %"struct.std::__1::__hash_node_base.1016" }
%"class.std::__1::__compressed_pair.1028" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1032" = type { %"struct.std::__1::__compressed_pair_elem.906" }
%"class.rx::DescriptorSetLayoutCache" = type { %"class.std::__1::unordered_map.1038", %"class.rx::CacheStats" }
%"class.std::__1::unordered_map.1038" = type { %"class.std::__1::__hash_table.1039" }
%"class.std::__1::__hash_table.1039" = type <{ %"class.std::__1::unique_ptr.1040", %"class.std::__1::__compressed_pair.1050", %"class.std::__1::__compressed_pair.1055", %"class.std::__1::__compressed_pair.1059", [4 x i8] }>
%"class.std::__1::unique_ptr.1040" = type { %"class.std::__1::__compressed_pair.1041" }
%"class.std::__1::__compressed_pair.1041" = type { %"struct.std::__1::__compressed_pair_elem.1042", %"struct.std::__1::__compressed_pair_elem.1044" }
%"struct.std::__1::__compressed_pair_elem.1042" = type { %"struct.std::__1::__hash_node_base.1043"** }
%"struct.std::__1::__hash_node_base.1043" = type { %"struct.std::__1::__hash_node_base.1043"* }
%"struct.std::__1::__compressed_pair_elem.1044" = type { %"class.std::__1::__bucket_list_deallocator.1045" }
%"class.std::__1::__bucket_list_deallocator.1045" = type { %"class.std::__1::__compressed_pair.1046" }
%"class.std::__1::__compressed_pair.1046" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1050" = type { %"struct.std::__1::__compressed_pair_elem.1051" }
%"struct.std::__1::__compressed_pair_elem.1051" = type { %"struct.std::__1::__hash_node_base.1043" }
%"class.std::__1::__compressed_pair.1055" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1059" = type { %"struct.std::__1::__compressed_pair_elem.906" }
%"class.std::__1::set.1065" = type { %"class.std::__1::__tree.1066" }
%"class.std::__1::__tree.1066" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1067", %"class.std::__1::__compressed_pair.1071" }
%"class.std::__1::__compressed_pair.1067" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1071" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.1075" = type { %"class.std::__1::__vector_base.1076" }
%"class.std::__1::__vector_base.1076" = type { %"class.rx::vk::ResourceUseList"*, %"class.rx::vk::ResourceUseList"*, %"class.std::__1::__compressed_pair.1077" }
%"class.std::__1::__compressed_pair.1077" = type { %"struct.std::__1::__compressed_pair_elem.1078" }
%"struct.std::__1::__compressed_pair_elem.1078" = type { %"class.rx::vk::ResourceUseList"* }
%"class.rx::vk::BufferHelper" = type { %"class.rx::vk::Resource", %"class.rx::vk::Buffer", %"class.rx::vk::BufferMemory", i32, i64, i32, i32, i32, i32, i32, %"class.rx::vk::BufferSerial" }
%"class.rx::vk::Buffer" = type { %"class.rx::vk::WrappedObject.728" }
%"class.rx::vk::WrappedObject.728" = type { %struct.VkBuffer_T* }
%"class.rx::vk::BufferMemory" = type { [8 x i8], %"class.rx::vk::Allocation", %"class.rx::vk::DeviceMemory", i8*, i8* }
%"class.rx::vk::Allocation" = type { %"class.rx::vk::WrappedObject.729" }
%"class.rx::vk::WrappedObject.729" = type { %struct.VmaAllocation_T* }
%struct.VmaAllocation_T = type opaque
%"class.rx::vk::BufferSerial" = type { i32 }
%"class.rx::vk::DynamicBuffer" = type { i32, i8, i32, i64, %"class.std::__1::unique_ptr.725", i32, i32, i64, i64, i32, %"class.std::__1::vector.734", %"class.std::__1::vector.734" }
%"class.std::__1::unique_ptr.725" = type { %"class.std::__1::__compressed_pair.726" }
%"class.std::__1::__compressed_pair.726" = type { %"struct.std::__1::__compressed_pair_elem.727" }
%"struct.std::__1::__compressed_pair_elem.727" = type { %"class.rx::vk::BufferHelper"* }
%"class.std::__1::vector.734" = type { %"class.std::__1::__vector_base.735" }
%"class.std::__1::__vector_base.735" = type { %"class.std::__1::unique_ptr.725"*, %"class.std::__1::unique_ptr.725"*, %"class.std::__1::__compressed_pair.736" }
%"class.std::__1::__compressed_pair.736" = type { %"struct.std::__1::__compressed_pair_elem.737" }
%"struct.std::__1::__compressed_pair_elem.737" = type { %"class.std::__1::unique_ptr.725"* }
%"class.angle::FastVector.1315" = type { %"struct.std::__1::array.1316", %"class.gl::Buffer"**, i64, i64 }
%"struct.std::__1::array.1316" = type { [16 x %"class.gl::Buffer"*] }
%"class.angle::FastVector.1317" = type { %"struct.std::__1::array.1318", %"struct.gl::TextureAndLayout"*, i64, i64 }
%"struct.std::__1::array.1318" = type { [16 x %"struct.gl::TextureAndLayout"] }
%"struct.gl::TextureAndLayout" = type { %"class.gl::Texture"*, i32 }
%"class.rx::vk::CommandBufferAccess" = type { %"class.angle::FixedVector.1326", %"class.angle::FixedVector.1326", %"class.angle::FixedVector.1328", %"class.angle::FixedVector.1330" }
%"class.angle::FixedVector.1326" = type { %"struct.std::__1::array.1327", i64 }
%"struct.std::__1::array.1327" = type { [2 x %"struct.rx::vk::CommandBufferBufferAccess"] }
%"struct.rx::vk::CommandBufferBufferAccess" = type { %"class.rx::vk::BufferHelper"*, i32, i16 }
%"class.angle::FixedVector.1328" = type { %"struct.std::__1::array.1329", i64 }
%"struct.std::__1::array.1329" = type { [2 x %"struct.rx::vk::CommandBufferImageAccess"] }
%"struct.rx::vk::CommandBufferImageAccess" = type { %"class.rx::vk::ImageHelper"*, i32, i32 }
%"class.angle::FixedVector.1330" = type { %"struct.std::__1::array.1331", i64 }
%"struct.std::__1::array.1331" = type { [1 x %"struct.rx::vk::CommandBufferImageWrite"] }
%"struct.rx::vk::CommandBufferImageWrite" = type { %"struct.rx::vk::CommandBufferImageAccess", %"class.gl::LevelIndexWrapper", i32, i32, i32 }
%"class.rx::BufferVk" = type { %"class.rx::BufferImpl", %"class.rx::vk::BufferHelper"*, i64, %"class.rx::vk::DynamicBuffer", %"class.rx::vk::DynamicBuffer", i64, %"class.rx::vk::DynamicShadowBuffer", %"class.std::__1::vector.1319" }
%"class.rx::vk::DynamicShadowBuffer" = type { i64, i64, %"class.angle::MemoryBuffer" }
%"class.std::__1::vector.1319" = type { %"class.std::__1::__vector_base.1320" }
%"class.std::__1::__vector_base.1320" = type { %"struct.rx::BufferVk::VertexConversionBuffer"*, %"struct.rx::BufferVk::VertexConversionBuffer"*, %"class.std::__1::__compressed_pair.1321" }
%"struct.rx::BufferVk::VertexConversionBuffer" = type { %"struct.rx::ConversionBuffer", i32, i32, i64 }
%"struct.rx::ConversionBuffer" = type { i8, i64, %"class.rx::vk::DynamicBuffer" }
%"class.std::__1::__compressed_pair.1321" = type { %"struct.std::__1::__compressed_pair_elem.1322" }
%"struct.std::__1::__compressed_pair_elem.1322" = type { %"struct.rx::BufferVk::VertexConversionBuffer"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN2rx2vk13GarbageObjectENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_ = comdat any

@_ZTVN2rx11SemaphoreVkE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rx::SemaphoreVk"*)* @_ZN2rx11SemaphoreVkD2Ev to i8*), i8* bitcast (void (%"class.rx::SemaphoreVk"*)* @_ZN2rx11SemaphoreVkD0Ev to i8*), i8* bitcast (void (%"class.rx::SemaphoreVk"*, %"class.gl::Context"*)* @_ZN2rx11SemaphoreVk9onDestroyEPKN2gl7ContextE to i8*), i8* bitcast (i32 (%"class.rx::SemaphoreVk"*, %"class.gl::Context"*, i8, i32)* @_ZN2rx11SemaphoreVk8importFdEPN2gl7ContextENS1_10HandleTypeEi to i8*), i8* bitcast (i32 (%"class.rx::SemaphoreVk"*, %"class.gl::Context"*, i8, i32)* @_ZN2rx11SemaphoreVk18importZirconHandleEPN2gl7ContextENS1_10HandleTypeEj to i8*), i8* bitcast (i32 (%"class.rx::SemaphoreVk"*, %"class.gl::Context"*, %"class.angle::FastVector.1315"*, %"class.angle::FastVector.1317"*)* @_ZN2rx11SemaphoreVk4waitEPN2gl7ContextERKN5angle10FastVectorIPNS1_6BufferELm16ENSt3__15arrayIS7_Lm16EEEEERKNS5_INS1_16TextureAndLayoutELm16ENS9_ISE_Lm16EEEEE to i8*), i8* bitcast (i32 (%"class.rx::SemaphoreVk"*, %"class.gl::Context"*, %"class.angle::FastVector.1315"*, %"class.angle::FastVector.1317"*)* @_ZN2rx11SemaphoreVk6signalEPN2gl7ContextERKN5angle10FastVectorIPNS1_6BufferELm16ENSt3__15arrayIS7_Lm16EEEEERKNS5_INS1_16TextureAndLayoutELm16ENS9_ISE_Lm16EEEEE to i8*)] }, align 8
@.str = private unnamed_addr constant [69 x i8] c"../../third_party/angle/src/libANGLE/renderer/vulkan/SemaphoreVk.cpp\00", align 1
@__func__._ZN2rx11SemaphoreVk8importFdEPN2gl7ContextENS1_10HandleTypeEi = private unnamed_addr constant [9 x i8] c"importFd\00", align 1
@__func__._ZN2rx11SemaphoreVk18importZirconHandleEPN2gl7ContextENS1_10HandleTypeEj = private unnamed_addr constant [19 x i8] c"importZirconHandle\00", align 1
@vkImportSemaphoreFdKHR = external local_unnamed_addr global i32 (%struct.VkDevice_T*, %struct.VkImportSemaphoreFdInfoKHR*)*, align 8
@__func__._ZN2rx11SemaphoreVk14importOpaqueFdEPNS_9ContextVkEi = private unnamed_addr constant [15 x i8] c"importOpaqueFd\00", align 1
@_ZZN2rx11SemaphoreVk17importZirconEventEPNS_9ContextVkEjE36vkImportSemaphoreZirconHandleFUCHSIA = internal unnamed_addr global i32 (%struct.VkDevice_T*, %struct.VkImportSemaphoreZirconHandleInfoFUCHSIA*)* null, align 8
@_ZGVZN2rx11SemaphoreVk17importZirconEventEPNS_9ContextVkEjE36vkImportSemaphoreZirconHandleFUCHSIA = internal global i64 0, align 8
@vkGetInstanceProcAddr = external local_unnamed_addr global void ()* (%struct.VkInstance_T*, i8*)*, align 8
@.str.1 = private unnamed_addr constant [37 x i8] c"vkImportSemaphoreZirconHandleFUCHSIA\00", align 1
@__func__._ZN2rx11SemaphoreVk17importZirconEventEPNS_9ContextVkEj = private unnamed_addr constant [18 x i8] c"importZirconEvent\00", align 1
@vkCreateSemaphore = external local_unnamed_addr global i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)*, align 8

@_ZN2rx11SemaphoreVkC1Ev = hidden unnamed_addr alias void (%"class.rx::SemaphoreVk"*), void (%"class.rx::SemaphoreVk"*)* @_ZN2rx11SemaphoreVkC2Ev
@_ZN2rx11SemaphoreVkD1Ev = hidden unnamed_addr alias void (%"class.rx::SemaphoreVk"*), void (%"class.rx::SemaphoreVk"*)* @_ZN2rx11SemaphoreVkD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2rx11SemaphoreVkC2Ev(%"class.rx::SemaphoreVk"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.rx::SemaphoreVk", %"class.rx::SemaphoreVk"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN2rx11SemaphoreVkE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rx::SemaphoreVk", %"class.rx::SemaphoreVk"* %0, i64 0, i32 1, i32 0, i32 0
  store %struct.VkSemaphore_T* null, %struct.VkSemaphore_T** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2rx11SemaphoreVkD2Ev(%"class.rx::SemaphoreVk"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.rx::SemaphoreVk", %"class.rx::SemaphoreVk"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN2rx11SemaphoreVkE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx11SemaphoreVkD0Ev(%"class.rx::SemaphoreVk"*) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.rx::SemaphoreVk"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx11SemaphoreVk9onDestroyEPKN2gl7ContextE(%"class.rx::SemaphoreVk"* nocapture, %"class.gl::Context"* nocapture readonly) unnamed_addr #1 align 2 {
  %3 = alloca %"class.rx::vk::GarbageObject", align 8
  %4 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %5 = bitcast %"class.rx::ContextImpl"** %4 to %"class.rx::ContextVk"**
  %6 = load %"class.rx::ContextVk"*, %"class.rx::ContextVk"** %5, align 8
  %7 = getelementptr inbounds %"class.rx::SemaphoreVk", %"class.rx::SemaphoreVk"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = load %struct.VkSemaphore_T*, %struct.VkSemaphore_T** %7, align 8
  %9 = icmp eq %struct.VkSemaphore_T* %8, null
  br i1 %9, label %25, label %10

10:                                               ; preds = %2
  %11 = bitcast %struct.VkSemaphore_T* %8 to %"struct.rx::vk::GarbageHandle_T"*
  %12 = bitcast %"class.rx::vk::GarbageObject"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #12
  store %struct.VkSemaphore_T* null, %struct.VkSemaphore_T** %7, align 8, !noalias !2
  call void @_ZN2rx2vk13GarbageObjectC1ENS0_10HandleTypeEPNS0_15GarbageHandle_TE(%"class.rx::vk::GarbageObject"* nonnull %3, i32 22, %"struct.rx::vk::GarbageHandle_T"* nonnull %11) #12
  %13 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %6, i64 0, i32 51, i32 0, i32 1
  %14 = load %"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"** %13, align 8
  %15 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %6, i64 0, i32 51, i32 0, i32 2, i32 0, i32 0
  %16 = load %"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"** %15, align 8
  %17 = icmp ult %"class.rx::vk::GarbageObject"* %14, %16
  br i1 %17, label %18, label %22

18:                                               ; preds = %10
  call void @_ZN2rx2vk13GarbageObjectC1EOS1_(%"class.rx::vk::GarbageObject"* %14, %"class.rx::vk::GarbageObject"* nonnull dereferenceable(16) %3) #12
  %19 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %14, i64 1
  %20 = ptrtoint %"class.rx::vk::GarbageObject"* %19 to i64
  %21 = bitcast %"class.rx::vk::GarbageObject"** %13 to i64*
  store i64 %20, i64* %21, align 8
  br label %24

22:                                               ; preds = %10
  %23 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %6, i64 0, i32 51
  call void @_ZNSt3__16vectorIN2rx2vk13GarbageObjectENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector.826"* %23, %"class.rx::vk::GarbageObject"* nonnull dereferenceable(16) %3) #12
  br label %24

24:                                               ; preds = %22, %18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #12
  br label %25

25:                                               ; preds = %2, %24
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx11SemaphoreVk8importFdEPN2gl7ContextENS1_10HandleTypeEi(%"class.rx::SemaphoreVk"*, %"class.gl::Context"* nocapture readonly, i8 zeroext, i32) unnamed_addr #1 align 2 {
  %5 = alloca %struct.VkSemaphoreCreateInfo, align 8
  %6 = alloca %struct.VkImportSemaphoreFdInfoKHR, align 8
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %8 = bitcast %"class.rx::ContextImpl"** %7 to %"class.rx::ContextVk"**
  %9 = load %"class.rx::ContextVk"*, %"class.rx::ContextVk"** %8, align 8
  %10 = icmp eq i8 %2, 0
  br i1 %10, label %11, label %51

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %9, i64 0, i32 1, i32 1
  %13 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %12, align 8
  %14 = getelementptr inbounds %"class.rx::SemaphoreVk", %"class.rx::SemaphoreVk"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"class.rx::vk::Semaphore", %"class.rx::vk::Semaphore"* %14, i64 0, i32 0, i32 0
  %16 = load %struct.VkSemaphore_T*, %struct.VkSemaphore_T** %15, align 8
  %17 = icmp eq %struct.VkSemaphore_T* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %11
  %19 = ptrtoint %struct.VkSemaphore_T* %16 to i64
  br label %30

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %13, i64 0, i32 43
  %22 = load %struct.VkDevice_T*, %struct.VkDevice_T** %21, align 8
  %23 = bitcast %struct.VkSemaphoreCreateInfo* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 24, i1 false) #12
  %24 = getelementptr inbounds %struct.VkSemaphoreCreateInfo, %struct.VkSemaphoreCreateInfo* %5, i64 0, i32 0
  store i32 9, i32* %24, align 8
  %25 = getelementptr inbounds %struct.VkSemaphoreCreateInfo, %struct.VkSemaphoreCreateInfo* %5, i64 0, i32 2
  store i32 0, i32* %25, align 8
  %26 = load i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)** @vkCreateSemaphore, align 8
  %27 = call i32 %26(%struct.VkDevice_T* %22, %struct.VkSemaphoreCreateInfo* nonnull %5, %struct.VkAllocationCallbacks* null, %struct.VkSemaphore_T** %15) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #12
  %28 = bitcast %"class.rx::vk::Semaphore"* %14 to i64*
  %29 = load i64, i64* %28, align 8
  br label %30

30:                                               ; preds = %20, %18
  %31 = phi i64 [ %19, %18 ], [ %29, %20 ]
  %32 = bitcast %struct.VkImportSemaphoreFdInfoKHR* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %32) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 0, i64 40, i1 false) #12
  %33 = getelementptr inbounds %struct.VkImportSemaphoreFdInfoKHR, %struct.VkImportSemaphoreFdInfoKHR* %6, i64 0, i32 0
  store i32 1000079000, i32* %33, align 8
  %34 = getelementptr inbounds %struct.VkImportSemaphoreFdInfoKHR, %struct.VkImportSemaphoreFdInfoKHR* %6, i64 0, i32 2
  %35 = bitcast %struct.VkSemaphore_T** %34 to i64*
  store i64 %31, i64* %35, align 8
  %36 = getelementptr inbounds %struct.VkImportSemaphoreFdInfoKHR, %struct.VkImportSemaphoreFdInfoKHR* %6, i64 0, i32 3
  store i32 0, i32* %36, align 8
  %37 = getelementptr inbounds %struct.VkImportSemaphoreFdInfoKHR, %struct.VkImportSemaphoreFdInfoKHR* %6, i64 0, i32 4
  store i32 1, i32* %37, align 4
  %38 = getelementptr inbounds %struct.VkImportSemaphoreFdInfoKHR, %struct.VkImportSemaphoreFdInfoKHR* %6, i64 0, i32 5
  store i32 %3, i32* %38, align 8
  %39 = load i32 (%struct.VkDevice_T*, %struct.VkImportSemaphoreFdInfoKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkImportSemaphoreFdInfoKHR*)** @vkImportSemaphoreFdKHR, align 8
  %40 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %13, i64 0, i32 43
  %41 = load %struct.VkDevice_T*, %struct.VkDevice_T** %40, align 8
  %42 = call i32 %39(%struct.VkDevice_T* %41, %struct.VkImportSemaphoreFdInfoKHR* nonnull %6) #12
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %49, label %44, !prof !7

44:                                               ; preds = %30
  %45 = bitcast %"class.rx::ContextVk"* %9 to void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)***
  %46 = load void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)**, void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)*, void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)** %46, i64 67
  %48 = load void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)*, void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)** %47, align 8
  call void %48(%"class.rx::ContextVk"* %9, i32 %42, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__._ZN2rx11SemaphoreVk14importOpaqueFdEPNS_9ContextVkEi, i64 0, i64 0), i32 243) #12
  br label %49

49:                                               ; preds = %30, %44
  %50 = phi i32 [ 1, %44 ], [ 0, %30 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %32) #12
  br label %56

51:                                               ; preds = %4
  %52 = bitcast %"class.rx::ContextVk"* %9 to void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)***
  %53 = load void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)**, void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)*, void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)** %53, i64 67
  %55 = load void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)*, void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)** %54, align 8
  tail call void %55(%"class.rx::ContextVk"* %9, i32 -8, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__func__._ZN2rx11SemaphoreVk8importFdEPN2gl7ContextENS1_10HandleTypeEi, i64 0, i64 0), i32 76) #12
  br label %56

56:                                               ; preds = %51, %49
  %57 = phi i32 [ %50, %49 ], [ 1, %51 ]
  ret i32 %57
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx11SemaphoreVk14importOpaqueFdEPNS_9ContextVkEi(%"class.rx::SemaphoreVk"*, %"class.rx::ContextVk"*, i32) local_unnamed_addr #1 align 2 {
  %4 = alloca %struct.VkSemaphoreCreateInfo, align 8
  %5 = alloca %struct.VkImportSemaphoreFdInfoKHR, align 8
  %6 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 1, i32 1
  %7 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %6, align 8
  %8 = getelementptr inbounds %"class.rx::SemaphoreVk", %"class.rx::SemaphoreVk"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.rx::vk::Semaphore", %"class.rx::vk::Semaphore"* %8, i64 0, i32 0, i32 0
  %10 = load %struct.VkSemaphore_T*, %struct.VkSemaphore_T** %9, align 8
  %11 = icmp eq %struct.VkSemaphore_T* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %3
  %13 = ptrtoint %struct.VkSemaphore_T* %10 to i64
  br label %24

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %7, i64 0, i32 43
  %16 = load %struct.VkDevice_T*, %struct.VkDevice_T** %15, align 8
  %17 = bitcast %struct.VkSemaphoreCreateInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 24, i1 false) #12
  %18 = getelementptr inbounds %struct.VkSemaphoreCreateInfo, %struct.VkSemaphoreCreateInfo* %4, i64 0, i32 0
  store i32 9, i32* %18, align 8
  %19 = getelementptr inbounds %struct.VkSemaphoreCreateInfo, %struct.VkSemaphoreCreateInfo* %4, i64 0, i32 2
  store i32 0, i32* %19, align 8
  %20 = load i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)** @vkCreateSemaphore, align 8
  %21 = call i32 %20(%struct.VkDevice_T* %16, %struct.VkSemaphoreCreateInfo* nonnull %4, %struct.VkAllocationCallbacks* null, %struct.VkSemaphore_T** %9) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #12
  %22 = bitcast %"class.rx::vk::Semaphore"* %8 to i64*
  %23 = load i64, i64* %22, align 8
  br label %24

24:                                               ; preds = %12, %14
  %25 = phi i64 [ %13, %12 ], [ %23, %14 ]
  %26 = bitcast %struct.VkImportSemaphoreFdInfoKHR* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %26) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 40, i1 false)
  %27 = getelementptr inbounds %struct.VkImportSemaphoreFdInfoKHR, %struct.VkImportSemaphoreFdInfoKHR* %5, i64 0, i32 0
  store i32 1000079000, i32* %27, align 8
  %28 = getelementptr inbounds %struct.VkImportSemaphoreFdInfoKHR, %struct.VkImportSemaphoreFdInfoKHR* %5, i64 0, i32 2
  %29 = bitcast %struct.VkSemaphore_T** %28 to i64*
  store i64 %25, i64* %29, align 8
  %30 = getelementptr inbounds %struct.VkImportSemaphoreFdInfoKHR, %struct.VkImportSemaphoreFdInfoKHR* %5, i64 0, i32 3
  store i32 0, i32* %30, align 8
  %31 = getelementptr inbounds %struct.VkImportSemaphoreFdInfoKHR, %struct.VkImportSemaphoreFdInfoKHR* %5, i64 0, i32 4
  store i32 1, i32* %31, align 4
  %32 = getelementptr inbounds %struct.VkImportSemaphoreFdInfoKHR, %struct.VkImportSemaphoreFdInfoKHR* %5, i64 0, i32 5
  store i32 %2, i32* %32, align 8
  %33 = load i32 (%struct.VkDevice_T*, %struct.VkImportSemaphoreFdInfoKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkImportSemaphoreFdInfoKHR*)** @vkImportSemaphoreFdKHR, align 8
  %34 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %7, i64 0, i32 43
  %35 = load %struct.VkDevice_T*, %struct.VkDevice_T** %34, align 8
  %36 = call i32 %33(%struct.VkDevice_T* %35, %struct.VkImportSemaphoreFdInfoKHR* nonnull %5) #12
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %43, label %38, !prof !7

38:                                               ; preds = %24
  %39 = bitcast %"class.rx::ContextVk"* %1 to void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)***
  %40 = load void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)**, void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)*, void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)** %40, i64 67
  %42 = load void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)*, void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)** %41, align 8
  call void %42(%"class.rx::ContextVk"* %1, i32 %36, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__._ZN2rx11SemaphoreVk14importOpaqueFdEPNS_9ContextVkEi, i64 0, i64 0), i32 243) #12
  br label %43

43:                                               ; preds = %24, %38
  %44 = phi i32 [ 1, %38 ], [ 0, %24 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %26) #12
  ret i32 %44
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx11SemaphoreVk18importZirconHandleEPN2gl7ContextENS1_10HandleTypeEj(%"class.rx::SemaphoreVk"*, %"class.gl::Context"* nocapture readonly, i8 zeroext, i32) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %6 = bitcast %"class.rx::ContextImpl"** %5 to %"class.rx::ContextVk"**
  %7 = load %"class.rx::ContextVk"*, %"class.rx::ContextVk"** %6, align 8
  %8 = icmp eq i8 %2, 2
  br i1 %8, label %9, label %11

9:                                                ; preds = %4
  %10 = tail call i32 @_ZN2rx11SemaphoreVk17importZirconEventEPNS_9ContextVkEj(%"class.rx::SemaphoreVk"* %0, %"class.rx::ContextVk"* %7, i32 %3)
  br label %16

11:                                               ; preds = %4
  %12 = bitcast %"class.rx::ContextVk"* %7 to void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)***
  %13 = load void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)**, void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)*, void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)** %13, i64 67
  %15 = load void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)*, void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)** %14, align 8
  tail call void %15(%"class.rx::ContextVk"* %7, i32 -8, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__._ZN2rx11SemaphoreVk18importZirconHandleEPN2gl7ContextENS1_10HandleTypeEj, i64 0, i64 0), i32 93) #12
  br label %16

16:                                               ; preds = %11, %9
  %17 = phi i32 [ %10, %9 ], [ 1, %11 ]
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx11SemaphoreVk17importZirconEventEPNS_9ContextVkEj(%"class.rx::SemaphoreVk"*, %"class.rx::ContextVk"*, i32) local_unnamed_addr #1 align 2 {
  %4 = alloca %struct.VkSemaphoreCreateInfo, align 8
  %5 = alloca %struct.VkImportSemaphoreZirconHandleInfoFUCHSIA, align 8
  %6 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 1, i32 1
  %7 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %6, align 8
  %8 = getelementptr inbounds %"class.rx::SemaphoreVk", %"class.rx::SemaphoreVk"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.rx::vk::Semaphore", %"class.rx::vk::Semaphore"* %8, i64 0, i32 0, i32 0
  %10 = load %struct.VkSemaphore_T*, %struct.VkSemaphore_T** %9, align 8
  %11 = icmp eq %struct.VkSemaphore_T* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %3
  %13 = ptrtoint %struct.VkSemaphore_T* %10 to i64
  br label %24

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %7, i64 0, i32 43
  %16 = load %struct.VkDevice_T*, %struct.VkDevice_T** %15, align 8
  %17 = bitcast %struct.VkSemaphoreCreateInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 24, i1 false) #12
  %18 = getelementptr inbounds %struct.VkSemaphoreCreateInfo, %struct.VkSemaphoreCreateInfo* %4, i64 0, i32 0
  store i32 9, i32* %18, align 8
  %19 = getelementptr inbounds %struct.VkSemaphoreCreateInfo, %struct.VkSemaphoreCreateInfo* %4, i64 0, i32 2
  store i32 0, i32* %19, align 8
  %20 = load i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)** @vkCreateSemaphore, align 8
  %21 = call i32 %20(%struct.VkDevice_T* %16, %struct.VkSemaphoreCreateInfo* nonnull %4, %struct.VkAllocationCallbacks* null, %struct.VkSemaphore_T** %9) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #12
  %22 = bitcast %"class.rx::vk::Semaphore"* %8 to i64*
  %23 = load i64, i64* %22, align 8
  br label %24

24:                                               ; preds = %12, %14
  %25 = phi i64 [ %13, %12 ], [ %23, %14 ]
  %26 = bitcast %struct.VkImportSemaphoreZirconHandleInfoFUCHSIA* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %26) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 40, i1 false)
  %27 = getelementptr inbounds %struct.VkImportSemaphoreZirconHandleInfoFUCHSIA, %struct.VkImportSemaphoreZirconHandleInfoFUCHSIA* %5, i64 0, i32 0
  store i32 1001006000, i32* %27, align 8
  %28 = getelementptr inbounds %struct.VkImportSemaphoreZirconHandleInfoFUCHSIA, %struct.VkImportSemaphoreZirconHandleInfoFUCHSIA* %5, i64 0, i32 2
  %29 = bitcast %struct.VkSemaphore_T** %28 to i64*
  store i64 %25, i64* %29, align 8
  %30 = getelementptr inbounds %struct.VkImportSemaphoreZirconHandleInfoFUCHSIA, %struct.VkImportSemaphoreZirconHandleInfoFUCHSIA* %5, i64 0, i32 3
  store i32 0, i32* %30, align 8
  %31 = getelementptr inbounds %struct.VkImportSemaphoreZirconHandleInfoFUCHSIA, %struct.VkImportSemaphoreZirconHandleInfoFUCHSIA* %5, i64 0, i32 4
  store i32 1048576, i32* %31, align 4
  %32 = getelementptr inbounds %struct.VkImportSemaphoreZirconHandleInfoFUCHSIA, %struct.VkImportSemaphoreZirconHandleInfoFUCHSIA* %5, i64 0, i32 5
  store i32 %2, i32* %32, align 8
  %33 = load atomic i8, i8* bitcast (i64* @_ZGVZN2rx11SemaphoreVk17importZirconEventEPNS_9ContextVkEjE36vkImportSemaphoreZirconHandleFUCHSIA to i8*) acquire, align 8
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %43, !prof !8

35:                                               ; preds = %24
  %36 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2rx11SemaphoreVk17importZirconEventEPNS_9ContextVkEjE36vkImportSemaphoreZirconHandleFUCHSIA) #12
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %35
  %39 = load void ()* (%struct.VkInstance_T*, i8*)*, void ()* (%struct.VkInstance_T*, i8*)** @vkGetInstanceProcAddr, align 8
  %40 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %7, i64 0, i32 8
  %41 = load %struct.VkInstance_T*, %struct.VkInstance_T** %40, align 8
  %42 = call void ()* %39(%struct.VkInstance_T* %41, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0)) #12
  store void ()* %42, void ()** bitcast (i32 (%struct.VkDevice_T*, %struct.VkImportSemaphoreZirconHandleInfoFUCHSIA*)** @_ZZN2rx11SemaphoreVk17importZirconEventEPNS_9ContextVkEjE36vkImportSemaphoreZirconHandleFUCHSIA to void ()**), align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN2rx11SemaphoreVk17importZirconEventEPNS_9ContextVkEjE36vkImportSemaphoreZirconHandleFUCHSIA) #12
  br label %43

43:                                               ; preds = %35, %24, %38
  %44 = load i32 (%struct.VkDevice_T*, %struct.VkImportSemaphoreZirconHandleInfoFUCHSIA*)*, i32 (%struct.VkDevice_T*, %struct.VkImportSemaphoreZirconHandleInfoFUCHSIA*)** @_ZZN2rx11SemaphoreVk17importZirconEventEPNS_9ContextVkEjE36vkImportSemaphoreZirconHandleFUCHSIA, align 8
  %45 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %7, i64 0, i32 43
  %46 = load %struct.VkDevice_T*, %struct.VkDevice_T** %45, align 8
  %47 = call i32 %44(%struct.VkDevice_T* %46, %struct.VkImportSemaphoreZirconHandleInfoFUCHSIA* nonnull %5) #12
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %54, label %49, !prof !7

49:                                               ; preds = %43
  %50 = bitcast %"class.rx::ContextVk"* %1 to void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)***
  %51 = load void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)**, void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)*, void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)** %51, i64 67
  %53 = load void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)*, void (%"class.rx::ContextVk"*, i32, i8*, i8*, i32)** %52, align 8
  call void %53(%"class.rx::ContextVk"* %1, i32 %47, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__._ZN2rx11SemaphoreVk17importZirconEventEPNS_9ContextVkEj, i64 0, i64 0), i32 274) #12
  br label %54

54:                                               ; preds = %43, %49
  %55 = phi i32 [ 1, %49 ], [ 0, %43 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %26) #12
  ret i32 %55
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx11SemaphoreVk4waitEPN2gl7ContextERKN5angle10FastVectorIPNS1_6BufferELm16ENSt3__15arrayIS7_Lm16EEEEERKNS5_INS1_16TextureAndLayoutELm16ENS9_ISE_Lm16EEEEE(%"class.rx::SemaphoreVk"* nocapture readonly, %"class.gl::Context"* nocapture readonly, %"class.angle::FastVector.1315"* nocapture readonly dereferenceable(152), %"class.angle::FastVector.1317"* nocapture readonly dereferenceable(280)) unnamed_addr #1 align 2 {
  %5 = alloca %"class.rx::vk::CommandBufferAccess", align 8
  %6 = alloca %"class.rx::vk::CommandBufferAccess", align 8
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %8 = bitcast %"class.rx::ContextImpl"** %7 to %"class.rx::ContextVk"**
  %9 = load %"class.rx::ContextVk"*, %"class.rx::ContextVk"** %8, align 8
  %10 = getelementptr inbounds %"class.angle::FastVector.1315", %"class.angle::FastVector.1315"* %2, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %22

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.angle::FastVector.1317", %"class.angle::FastVector.1317"* %3, i64 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %22

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %9, i64 0, i32 1, i32 1
  %19 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %18, align 8
  %20 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %19, i64 0, i32 38
  %21 = load i32, i32* %20, align 4
  br label %57

22:                                               ; preds = %4, %13
  %23 = tail call i32 @_ZN2rx9ContextVk18syncExternalMemoryEv(%"class.rx::ContextVk"* %9) #12
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %101, label %25

25:                                               ; preds = %22
  %26 = load i64, i64* %10, align 8
  %27 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %9, i64 0, i32 1, i32 1
  %28 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %27, align 8
  %29 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %28, i64 0, i32 38
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i64 %26, 0
  br i1 %31, label %57, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.angle::FastVector.1315", %"class.angle::FastVector.1315"* %2, i64 0, i32 1
  %34 = load %"class.gl::Buffer"**, %"class.gl::Buffer"*** %33, align 8
  %35 = getelementptr inbounds %"class.gl::Buffer"*, %"class.gl::Buffer"** %34, i64 %26
  %36 = bitcast %"class.rx::vk::CommandBufferAccess"* %5 to i8*
  %37 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %9, i64 0, i32 53
  br label %38

38:                                               ; preds = %32, %54
  %39 = phi %"class.gl::Buffer"** [ %34, %32 ], [ %55, %54 ]
  %40 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %39, align 8
  %41 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %40, i64 0, i32 5
  %42 = bitcast %"class.rx::BufferImpl"** %41 to %"class.rx::BufferVk"**
  %43 = load %"class.rx::BufferVk"*, %"class.rx::BufferVk"** %42, align 8
  %44 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %43, i64 0, i32 1
  %45 = load %"class.rx::vk::BufferHelper"*, %"class.rx::vk::BufferHelper"** %44, align 8
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %36) #12
  call void @_ZN2rx2vk19CommandBufferAccessC1Ev(%"class.rx::vk::CommandBufferAccess"* nonnull %5) #12
  %46 = call i32 @_ZN2rx9ContextVk16onResourceAccessERKNS_2vk19CommandBufferAccessE(%"class.rx::ContextVk"* %9, %"class.rx::vk::CommandBufferAccess"* nonnull dereferenceable(160) %5) #12
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %51, label %48

48:                                               ; preds = %38
  %49 = load %"class.rx::vk::CommandBufferHelper"*, %"class.rx::vk::CommandBufferHelper"** %37, align 8
  %50 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %49, i64 0, i32 4
  br label %51

51:                                               ; preds = %38, %48
  %52 = phi %"class.rx::vk::priv::SecondaryCommandBuffer"* [ inttoptr (i64 -6148914691236517206 to %"class.rx::vk::priv::SecondaryCommandBuffer"*), %38 ], [ %50, %48 ]
  %53 = phi i1 [ true, %38 ], [ false, %48 ]
  call void @_ZN2rx2vk19CommandBufferAccessD1Ev(%"class.rx::vk::CommandBufferAccess"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %36) #12
  br i1 %53, label %101, label %54

54:                                               ; preds = %51
  call void @_ZN2rx2vk12BufferHelper19acquireFromExternalEPNS_9ContextVkEjjPNS0_4priv22SecondaryCommandBufferE(%"class.rx::vk::BufferHelper"* %45, %"class.rx::ContextVk"* %9, i32 -2, i32 %30, %"class.rx::vk::priv::SecondaryCommandBuffer"* %52) #12
  %55 = getelementptr inbounds %"class.gl::Buffer"*, %"class.gl::Buffer"** %39, i64 1
  %56 = icmp eq %"class.gl::Buffer"** %55, %35
  br i1 %56, label %57, label %38

57:                                               ; preds = %54, %17, %25
  %58 = phi i32 [ %30, %25 ], [ %21, %17 ], [ %30, %54 ]
  %59 = getelementptr inbounds %"class.angle::FastVector.1317", %"class.angle::FastVector.1317"* %3, i64 0, i32 2
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %98, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.angle::FastVector.1317", %"class.angle::FastVector.1317"* %3, i64 0, i32 1
  %64 = load %"struct.gl::TextureAndLayout"*, %"struct.gl::TextureAndLayout"** %63, align 8
  %65 = getelementptr inbounds %"struct.gl::TextureAndLayout", %"struct.gl::TextureAndLayout"* %64, i64 %60
  %66 = bitcast %"class.rx::vk::CommandBufferAccess"* %6 to i8*
  %67 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %9, i64 0, i32 53
  br label %68

68:                                               ; preds = %62, %95
  %69 = phi %"struct.gl::TextureAndLayout"* [ %64, %62 ], [ %96, %95 ]
  %70 = getelementptr inbounds %"struct.gl::TextureAndLayout", %"struct.gl::TextureAndLayout"* %69, i64 0, i32 0
  %71 = load %"class.gl::Texture"*, %"class.gl::Texture"** %70, align 8
  %72 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %71, i64 0, i32 6
  %73 = bitcast %"class.rx::TextureImpl"** %72 to %"class.rx::TextureVk"**
  %74 = load %"class.rx::TextureVk"*, %"class.rx::TextureVk"** %73, align 8
  %75 = getelementptr inbounds %"class.rx::TextureVk", %"class.rx::TextureVk"* %74, i64 0, i32 12
  %76 = load %"class.rx::vk::ImageHelper"*, %"class.rx::vk::ImageHelper"** %75, align 8
  %77 = getelementptr inbounds %"struct.gl::TextureAndLayout", %"struct.gl::TextureAndLayout"* %69, i64 0, i32 1
  %78 = load i32, i32* %77, align 8
  switch i32 %78, label %85 [
    i32 38291, label %84
    i32 38285, label %79
    i32 38286, label %80
    i32 38287, label %81
    i32 38288, label %81
    i32 38192, label %81
    i32 38193, label %81
    i32 38289, label %82
    i32 38290, label %83
  ]

79:                                               ; preds = %68
  br label %85

80:                                               ; preds = %68
  br label %85

81:                                               ; preds = %68, %68, %68, %68
  br label %85

82:                                               ; preds = %68
  br label %85

83:                                               ; preds = %68
  br label %85

84:                                               ; preds = %68
  br label %85

85:                                               ; preds = %68, %79, %80, %81, %82, %83, %84
  %86 = phi i32 [ 14, %84 ], [ 13, %83 ], [ 11, %82 ], [ 7, %81 ], [ 1, %80 ], [ 12, %79 ], [ 0, %68 ]
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %66) #12
  call void @_ZN2rx2vk19CommandBufferAccessC1Ev(%"class.rx::vk::CommandBufferAccess"* nonnull %6) #12
  %87 = call i32 @_ZN2rx9ContextVk16onResourceAccessERKNS_2vk19CommandBufferAccessE(%"class.rx::ContextVk"* %9, %"class.rx::vk::CommandBufferAccess"* nonnull dereferenceable(160) %6) #12
  %88 = icmp eq i32 %87, 1
  br i1 %88, label %92, label %89

89:                                               ; preds = %85
  %90 = load %"class.rx::vk::CommandBufferHelper"*, %"class.rx::vk::CommandBufferHelper"** %67, align 8
  %91 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %90, i64 0, i32 4
  br label %92

92:                                               ; preds = %85, %89
  %93 = phi %"class.rx::vk::priv::SecondaryCommandBuffer"* [ inttoptr (i64 -6148914691236517206 to %"class.rx::vk::priv::SecondaryCommandBuffer"*), %85 ], [ %91, %89 ]
  %94 = phi i1 [ true, %85 ], [ false, %89 ]
  call void @_ZN2rx2vk19CommandBufferAccessD1Ev(%"class.rx::vk::CommandBufferAccess"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %66) #12
  br i1 %94, label %101, label %95

95:                                               ; preds = %92
  call void @_ZN2rx2vk11ImageHelper19acquireFromExternalEPNS_9ContextVkEjjNS0_11ImageLayoutEPNS0_4priv22SecondaryCommandBufferE(%"class.rx::vk::ImageHelper"* %76, %"class.rx::ContextVk"* %9, i32 -2, i32 %58, i32 %86, %"class.rx::vk::priv::SecondaryCommandBuffer"* %93) #12
  %96 = getelementptr inbounds %"struct.gl::TextureAndLayout", %"struct.gl::TextureAndLayout"* %69, i64 1
  %97 = icmp eq %"struct.gl::TextureAndLayout"* %96, %65
  br i1 %97, label %98, label %68

98:                                               ; preds = %95, %57
  %99 = getelementptr inbounds %"class.rx::SemaphoreVk", %"class.rx::SemaphoreVk"* %0, i64 0, i32 1, i32 0, i32 0
  %100 = load %struct.VkSemaphore_T*, %struct.VkSemaphore_T** %99, align 8
  call void @_ZN2rx9ContextVk16addWaitSemaphoreEP13VkSemaphore_Tj(%"class.rx::ContextVk"* %9, %struct.VkSemaphore_T* %100, i32 65536) #12
  br label %101

101:                                              ; preds = %51, %92, %22, %98
  %102 = phi i32 [ 1, %22 ], [ 0, %98 ], [ 1, %92 ], [ 1, %51 ]
  ret i32 %102
}

declare i32 @_ZN2rx9ContextVk18syncExternalMemoryEv(%"class.rx::ContextVk"*) local_unnamed_addr #4

declare void @_ZN2rx2vk19CommandBufferAccessC1Ev(%"class.rx::vk::CommandBufferAccess"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2rx2vk19CommandBufferAccessD1Ev(%"class.rx::vk::CommandBufferAccess"*) unnamed_addr #5

declare void @_ZN2rx2vk12BufferHelper19acquireFromExternalEPNS_9ContextVkEjjPNS0_4priv22SecondaryCommandBufferE(%"class.rx::vk::BufferHelper"*, %"class.rx::ContextVk"*, i32, i32, %"class.rx::vk::priv::SecondaryCommandBuffer"*) local_unnamed_addr #4

declare void @_ZN2rx2vk11ImageHelper19acquireFromExternalEPNS_9ContextVkEjjNS0_11ImageLayoutEPNS0_4priv22SecondaryCommandBufferE(%"class.rx::vk::ImageHelper"*, %"class.rx::ContextVk"*, i32, i32, i32, %"class.rx::vk::priv::SecondaryCommandBuffer"*) local_unnamed_addr #4

declare void @_ZN2rx9ContextVk16addWaitSemaphoreEP13VkSemaphore_Tj(%"class.rx::ContextVk"*, %struct.VkSemaphore_T*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx11SemaphoreVk6signalEPN2gl7ContextERKN5angle10FastVectorIPNS1_6BufferELm16ENSt3__15arrayIS7_Lm16EEEEERKNS5_INS1_16TextureAndLayoutELm16ENS9_ISE_Lm16EEEEE(%"class.rx::SemaphoreVk"*, %"class.gl::Context"* nocapture readonly, %"class.angle::FastVector.1315"* nocapture readonly dereferenceable(152), %"class.angle::FastVector.1317"* nocapture readonly dereferenceable(280)) unnamed_addr #1 align 2 {
  %5 = alloca %"class.rx::vk::CommandBufferAccess", align 8
  %6 = alloca %"class.rx::vk::CommandBufferAccess", align 8
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %8 = bitcast %"class.rx::ContextImpl"** %7 to %"class.rx::ContextVk"**
  %9 = load %"class.rx::ContextVk"*, %"class.rx::ContextVk"** %8, align 8
  %10 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %9, i64 0, i32 1, i32 1
  %11 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %10, align 8
  %12 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %11, i64 0, i32 38
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.angle::FastVector.1315", %"class.angle::FastVector.1315"* %2, i64 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %42, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.angle::FastVector.1315", %"class.angle::FastVector.1315"* %2, i64 0, i32 1
  %19 = load %"class.gl::Buffer"**, %"class.gl::Buffer"*** %18, align 8
  %20 = getelementptr inbounds %"class.gl::Buffer"*, %"class.gl::Buffer"** %19, i64 %15
  %21 = bitcast %"class.rx::vk::CommandBufferAccess"* %5 to i8*
  %22 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %9, i64 0, i32 53
  br label %23

23:                                               ; preds = %17, %37
  %24 = phi %"class.gl::Buffer"** [ %19, %17 ], [ %40, %37 ]
  %25 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %24, align 8
  %26 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %25, i64 0, i32 5
  %27 = bitcast %"class.rx::BufferImpl"** %26 to %"class.rx::BufferVk"**
  %28 = load %"class.rx::BufferVk"*, %"class.rx::BufferVk"** %27, align 8
  %29 = getelementptr inbounds %"class.rx::BufferVk", %"class.rx::BufferVk"* %28, i64 0, i32 1
  %30 = load %"class.rx::vk::BufferHelper"*, %"class.rx::vk::BufferHelper"** %29, align 8
  %31 = call i32 @_ZN2rx9ContextVk25onBufferReleaseToExternalERKNS_2vk12BufferHelperE(%"class.rx::ContextVk"* %9, %"class.rx::vk::BufferHelper"* dereferenceable(104) %30) #12
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %100, label %33

33:                                               ; preds = %23
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %21) #12
  call void @_ZN2rx2vk19CommandBufferAccessC1Ev(%"class.rx::vk::CommandBufferAccess"* nonnull %5) #12
  %34 = call i32 @_ZN2rx9ContextVk16onResourceAccessERKNS_2vk19CommandBufferAccessE(%"class.rx::ContextVk"* %9, %"class.rx::vk::CommandBufferAccess"* nonnull dereferenceable(160) %5) #12
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  call void @_ZN2rx2vk19CommandBufferAccessD1Ev(%"class.rx::vk::CommandBufferAccess"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %21) #12
  br label %100

37:                                               ; preds = %33
  %38 = load %"class.rx::vk::CommandBufferHelper"*, %"class.rx::vk::CommandBufferHelper"** %22, align 8
  %39 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %38, i64 0, i32 4
  call void @_ZN2rx2vk19CommandBufferAccessD1Ev(%"class.rx::vk::CommandBufferAccess"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %21) #12
  call void @_ZN2rx2vk12BufferHelper17releaseToExternalEPNS_9ContextVkEjjPNS0_4priv22SecondaryCommandBufferE(%"class.rx::vk::BufferHelper"* %30, %"class.rx::ContextVk"* %9, i32 %13, i32 -2, %"class.rx::vk::priv::SecondaryCommandBuffer"* %39) #12
  %40 = getelementptr inbounds %"class.gl::Buffer"*, %"class.gl::Buffer"** %24, i64 1
  %41 = icmp eq %"class.gl::Buffer"** %40, %20
  br i1 %41, label %42, label %23

42:                                               ; preds = %37, %4
  %43 = getelementptr inbounds %"class.angle::FastVector.1317", %"class.angle::FastVector.1317"* %3, i64 0, i32 2
  %44 = load i64, i64* %43, align 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %89, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.angle::FastVector.1317", %"class.angle::FastVector.1317"* %3, i64 0, i32 1
  %48 = load %"struct.gl::TextureAndLayout"*, %"struct.gl::TextureAndLayout"** %47, align 8
  %49 = getelementptr inbounds %"struct.gl::TextureAndLayout", %"struct.gl::TextureAndLayout"* %48, i64 %44
  %50 = bitcast %"class.rx::vk::CommandBufferAccess"* %6 to i8*
  %51 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %9, i64 0, i32 53
  br label %52

52:                                               ; preds = %46, %82
  %53 = phi %"struct.gl::TextureAndLayout"* [ %48, %46 ], [ %85, %82 ]
  %54 = getelementptr inbounds %"struct.gl::TextureAndLayout", %"struct.gl::TextureAndLayout"* %53, i64 0, i32 0
  %55 = load %"class.gl::Texture"*, %"class.gl::Texture"** %54, align 8
  %56 = getelementptr inbounds %"class.gl::Texture", %"class.gl::Texture"* %55, i64 0, i32 6
  %57 = bitcast %"class.rx::TextureImpl"** %56 to %"class.rx::TextureVk"**
  %58 = load %"class.rx::TextureVk"*, %"class.rx::TextureVk"** %57, align 8
  %59 = getelementptr inbounds %"class.rx::TextureVk", %"class.rx::TextureVk"* %58, i64 0, i32 12
  %60 = load %"class.rx::vk::ImageHelper"*, %"class.rx::vk::ImageHelper"** %59, align 8
  %61 = getelementptr inbounds %"struct.gl::TextureAndLayout", %"struct.gl::TextureAndLayout"* %53, i64 0, i32 1
  %62 = load i32, i32* %61, align 8
  switch i32 %62, label %68 [
    i32 38291, label %67
    i32 38285, label %71
    i32 38286, label %63
    i32 38287, label %64
    i32 38288, label %64
    i32 38192, label %64
    i32 38193, label %64
    i32 38289, label %65
    i32 38290, label %66
  ]

63:                                               ; preds = %52
  br label %71

64:                                               ; preds = %52, %52, %52, %52
  br label %71

65:                                               ; preds = %52
  br label %71

66:                                               ; preds = %52
  br label %71

67:                                               ; preds = %52
  br label %71

68:                                               ; preds = %52
  %69 = getelementptr inbounds %"class.rx::vk::ImageHelper", %"class.rx::vk::ImageHelper"* %60, i64 0, i32 14
  %70 = load i32, i32* %69, align 8
  br label %71

71:                                               ; preds = %52, %63, %64, %65, %66, %67, %68
  %72 = phi i32 [ %70, %68 ], [ 1, %63 ], [ 7, %64 ], [ 11, %65 ], [ 13, %66 ], [ 14, %67 ], [ 12, %52 ]
  %73 = call i32 @_ZN2rx9TextureVk22ensureImageInitializedEPNS_9ContextVkENS_14ImageMipLevelsE(%"class.rx::TextureVk"* %58, %"class.rx::ContextVk"* %9, i32 0) #12
  %74 = icmp eq i32 %73, 1
  br i1 %74, label %100, label %75

75:                                               ; preds = %71
  %76 = call i32 @_ZN2rx9ContextVk24onImageReleaseToExternalERKNS_2vk11ImageHelperE(%"class.rx::ContextVk"* %9, %"class.rx::vk::ImageHelper"* dereferenceable(440) %60) #12
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %100, label %78

78:                                               ; preds = %75
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %50) #12
  call void @_ZN2rx2vk19CommandBufferAccessC1Ev(%"class.rx::vk::CommandBufferAccess"* nonnull %6) #12
  %79 = call i32 @_ZN2rx9ContextVk16onResourceAccessERKNS_2vk19CommandBufferAccessE(%"class.rx::ContextVk"* %9, %"class.rx::vk::CommandBufferAccess"* nonnull dereferenceable(160) %6) #12
  %80 = icmp eq i32 %79, 1
  br i1 %80, label %81, label %82

81:                                               ; preds = %78
  call void @_ZN2rx2vk19CommandBufferAccessD1Ev(%"class.rx::vk::CommandBufferAccess"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %50) #12
  br label %100

82:                                               ; preds = %78
  %83 = load %"class.rx::vk::CommandBufferHelper"*, %"class.rx::vk::CommandBufferHelper"** %51, align 8
  %84 = getelementptr inbounds %"class.rx::vk::CommandBufferHelper", %"class.rx::vk::CommandBufferHelper"* %83, i64 0, i32 4
  call void @_ZN2rx2vk19CommandBufferAccessD1Ev(%"class.rx::vk::CommandBufferAccess"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %50) #12
  call void @_ZN2rx2vk11ImageHelper17releaseToExternalEPNS_9ContextVkEjjNS0_11ImageLayoutEPNS0_4priv22SecondaryCommandBufferE(%"class.rx::vk::ImageHelper"* %60, %"class.rx::ContextVk"* %9, i32 %13, i32 -2, i32 %72, %"class.rx::vk::priv::SecondaryCommandBuffer"* %84) #12
  %85 = getelementptr inbounds %"struct.gl::TextureAndLayout", %"struct.gl::TextureAndLayout"* %53, i64 1
  %86 = icmp eq %"struct.gl::TextureAndLayout"* %85, %49
  br i1 %86, label %87, label %52

87:                                               ; preds = %82
  %88 = load i64, i64* %43, align 8
  br label %89

89:                                               ; preds = %87, %42
  %90 = phi i64 [ 0, %42 ], [ %88, %87 ]
  %91 = load i64, i64* %14, align 8
  %92 = or i64 %90, %91
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %89
  %95 = call i32 @_ZN2rx9ContextVk18syncExternalMemoryEv(%"class.rx::ContextVk"* %9) #12
  %96 = icmp eq i32 %95, 1
  br i1 %96, label %100, label %97

97:                                               ; preds = %94, %89
  %98 = getelementptr inbounds %"class.rx::SemaphoreVk", %"class.rx::SemaphoreVk"* %0, i64 0, i32 1
  %99 = call i32 @_ZN2rx9ContextVk9flushImplEPKNS_2vk9SemaphoreE(%"class.rx::ContextVk"* %9, %"class.rx::vk::Semaphore"* %98) #12
  br label %100

100:                                              ; preds = %23, %75, %71, %36, %81, %94, %97
  %101 = phi i32 [ %99, %97 ], [ 1, %94 ], [ 1, %81 ], [ 1, %36 ], [ 1, %71 ], [ 1, %75 ], [ 1, %23 ]
  ret i32 %101
}

declare i32 @_ZN2rx9ContextVk25onBufferReleaseToExternalERKNS_2vk12BufferHelperE(%"class.rx::ContextVk"*, %"class.rx::vk::BufferHelper"* dereferenceable(104)) local_unnamed_addr #4

declare void @_ZN2rx2vk12BufferHelper17releaseToExternalEPNS_9ContextVkEjjPNS0_4priv22SecondaryCommandBufferE(%"class.rx::vk::BufferHelper"*, %"class.rx::ContextVk"*, i32, i32, %"class.rx::vk::priv::SecondaryCommandBuffer"*) local_unnamed_addr #4

declare i32 @_ZN2rx9TextureVk22ensureImageInitializedEPNS_9ContextVkENS_14ImageMipLevelsE(%"class.rx::TextureVk"*, %"class.rx::ContextVk"*, i32) local_unnamed_addr #4

declare i32 @_ZN2rx9ContextVk24onImageReleaseToExternalERKNS_2vk11ImageHelperE(%"class.rx::ContextVk"*, %"class.rx::vk::ImageHelper"* dereferenceable(440)) local_unnamed_addr #4

declare void @_ZN2rx2vk11ImageHelper17releaseToExternalEPNS_9ContextVkEjjNS0_11ImageLayoutEPNS0_4priv22SecondaryCommandBufferE(%"class.rx::vk::ImageHelper"*, %"class.rx::ContextVk"*, i32, i32, i32, %"class.rx::vk::priv::SecondaryCommandBuffer"*) local_unnamed_addr #4

declare i32 @_ZN2rx9ContextVk9flushImplEPKNS_2vk9SemaphoreE(%"class.rx::ContextVk"*, %"class.rx::vk::Semaphore"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #6

declare i32 @_ZN2rx9ContextVk16onResourceAccessERKNS_2vk19CommandBufferAccessE(%"class.rx::ContextVk"*, %"class.rx::vk::CommandBufferAccess"* dereferenceable(160)) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2rx2vk13GarbageObjectENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector.826"*, %"class.rx::vk::GarbageObject"* dereferenceable(16)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.826", %"class.std::__1::vector.826"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.rx::vk::GarbageObject"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.826"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 4
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 1152921504606846975
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.826"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.826", %"class.std::__1::vector.826"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.rx::vk::GarbageObject"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 4
  %20 = icmp ult i64 %19, 576460752303423487
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 3
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 1152921504606846975
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 1152921504606846975, %14 ]
  %31 = shl i64 %30, 4
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %"class.rx::vk::GarbageObject"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.rx::vk::GarbageObject"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %36, i64 %9
  %38 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %36, i64 %35
  %39 = ptrtoint %"class.rx::vk::GarbageObject"* %38 to i64
  tail call void @_ZN2rx2vk13GarbageObjectC1EOS1_(%"class.rx::vk::GarbageObject"* %37, %"class.rx::vk::GarbageObject"* dereferenceable(16) %1) #12
  %40 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %37, i64 1
  %41 = ptrtoint %"class.rx::vk::GarbageObject"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector.826", %"class.std::__1::vector.826"* %0, i64 0, i32 0, i32 0
  %43 = load %"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"** %42, align 8
  %44 = load %"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"** %3, align 8
  %45 = icmp eq %"class.rx::vk::GarbageObject"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %"class.rx::vk::GarbageObject"* %43 to i64
  br label %56

48:                                               ; preds = %34, %48
  %49 = phi %"class.rx::vk::GarbageObject"* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %"class.rx::vk::GarbageObject"* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %49, i64 -1
  %52 = getelementptr inbounds %"class.rx::vk::GarbageObject", %"class.rx::vk::GarbageObject"* %50, i64 -1
  tail call void @_ZN2rx2vk13GarbageObjectC1EOS1_(%"class.rx::vk::GarbageObject"* %51, %"class.rx::vk::GarbageObject"* dereferenceable(16) %52) #12
  %53 = icmp eq %"class.rx::vk::GarbageObject"* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load i64, i64* %6, align 8
  br label %56

56:                                               ; preds = %46, %54
  %57 = phi %"class.rx::vk::GarbageObject"* [ %37, %46 ], [ %51, %54 ]
  %58 = phi i64 [ %47, %46 ], [ %55, %54 ]
  %59 = ptrtoint %"class.rx::vk::GarbageObject"* %57 to i64
  store i64 %59, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %60 = icmp eq i64 %58, 0
  br i1 %60, label %63, label %61

61:                                               ; preds = %56
  %62 = inttoptr i64 %58 to i8*
  tail call void @_ZdlPv(i8* %62) #11
  br label %63

63:                                               ; preds = %56, %61
  ret void
}

declare void @_ZN2rx2vk13GarbageObjectC1EOS1_(%"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"* dereferenceable(16)) unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare void @_ZN2rx2vk13GarbageObjectC1ENS0_10HandleTypeEPNS0_15GarbageHandle_TE(%"class.rx::vk::GarbageObject"*, i32, %"struct.rx::vk::GarbageHandle_T"*) unnamed_addr #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN2rx2vk13GarbageObject3GetINS0_9SemaphoreEP13VkSemaphore_TEES1_PNS0_13WrappedObjectIT_T0_EE: argument 0"}
!4 = distinct !{!4, !"_ZN2rx2vk13GarbageObject3GetINS0_9SemaphoreEP13VkSemaphore_TEES1_PNS0_13WrappedObjectIT_T0_EE"}
!5 = distinct !{!5, !6, !"_ZN2rx2vk10GetGarbageINS0_9SemaphoreEEENS0_13GarbageObjectEPT_: argument 0"}
!6 = distinct !{!6, !"_ZN2rx2vk10GetGarbageINS0_9SemaphoreEEENS0_13GarbageObjectEPT_"}
!7 = !{!"branch_weights", i32 2000, i32 1}
!8 = !{!"branch_weights", i32 1, i32 1048575}
