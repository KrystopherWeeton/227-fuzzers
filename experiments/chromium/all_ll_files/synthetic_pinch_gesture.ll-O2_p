; ModuleID = '../../content/browser/renderer_host/input/synthetic_pinch_gesture.cc'
source_filename = "../../content/browser/renderer_host/input/synthetic_pinch_gesture.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.content::SyntheticPinchGesture" = type { %"class.content::SyntheticGesture", %"struct.content::SyntheticPinchGestureParams", %"class.std::__1::unique_ptr" }
%"class.content::SyntheticGesture" = type { i32 (...)** }
%"struct.content::SyntheticPinchGestureParams" = type { %"struct.content::SyntheticGestureParams.base", float, %"class.gfx::PointF", float, [4 x i8] }
%"struct.content::SyntheticGestureParams.base" = type <{ i32 (...)**, i32 }>
%"class.gfx::PointF" = type { float, float }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.content::SyntheticGesture"* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.content::SyntheticGestureTarget" = type { i32 (...)** }
%"class.content::SyntheticTouchscreenPinchGesture" = type { %"class.content::SyntheticGesture", %"struct.content::SyntheticPinchGestureParams", %"class.std::__1::unique_ptr.4", float, float, float, i32, i32, %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.content::SyntheticPointerDriver"* }
%"class.content::SyntheticPointerDriver" = type { i32 (...)** }
%"class.content::SyntheticTouchpadPinchGesture" = type <{ %"class.content::SyntheticGesture", %"struct.content::SyntheticPinchGestureParams", i32, i32, %"class.base::TimeTicks", %"class.base::TimeTicks", float, [4 x i8] }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }

@_ZTVN7content21SyntheticPinchGestureE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::SyntheticPinchGesture"*)* @_ZN7content21SyntheticPinchGestureD2Ev to i8*), i8* bitcast (void (%"class.content::SyntheticPinchGesture"*)* @_ZN7content21SyntheticPinchGestureD0Ev to i8*), i8* bitcast (i32 (%"class.content::SyntheticPinchGesture"*, %"class.base::TimeTicks"*, %"class.content::SyntheticGestureTarget"*)* @_ZN7content21SyntheticPinchGesture18ForwardInputEventsERKN4base9TimeTicksEPNS_22SyntheticGestureTargetE to i8*), i8* bitcast (void (%"class.content::SyntheticPinchGesture"*, %"class.base::OnceCallback"*, %"class.content::SyntheticGestureTarget"*)* @_ZNK7content21SyntheticPinchGesture16WaitForTargetAckEN4base12OnceCallbackIFvvEEEPNS_22SyntheticGestureTargetE to i8*), i8* bitcast (i1 (%"class.content::SyntheticGesture"*)* @_ZNK7content16SyntheticGesture26AllowHighFrequencyDispatchEv to i8*)] }, align 8

@_ZN7content21SyntheticPinchGestureC1ERKNS_27SyntheticPinchGestureParamsE = hidden unnamed_addr alias void (%"class.content::SyntheticPinchGesture"*, %"struct.content::SyntheticPinchGestureParams"*), void (%"class.content::SyntheticPinchGesture"*, %"struct.content::SyntheticPinchGestureParams"*)* @_ZN7content21SyntheticPinchGestureC2ERKNS_27SyntheticPinchGestureParamsE
@_ZN7content21SyntheticPinchGestureD1Ev = hidden unnamed_addr alias void (%"class.content::SyntheticPinchGesture"*), void (%"class.content::SyntheticPinchGesture"*)* @_ZN7content21SyntheticPinchGestureD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content21SyntheticPinchGestureC2ERKNS_27SyntheticPinchGestureParamsE(%"class.content::SyntheticPinchGesture"*, %"struct.content::SyntheticPinchGestureParams"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::SyntheticPinchGesture", %"class.content::SyntheticPinchGesture"* %0, i64 0, i32 0
  tail call void @_ZN7content16SyntheticGestureC2Ev(%"class.content::SyntheticGesture"* %3) #5
  %4 = getelementptr inbounds %"class.content::SyntheticPinchGesture", %"class.content::SyntheticPinchGesture"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7content21SyntheticPinchGestureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.content::SyntheticPinchGesture", %"class.content::SyntheticPinchGesture"* %0, i64 0, i32 1
  tail call void @_ZN7content27SyntheticPinchGestureParamsC1ERKS0_(%"struct.content::SyntheticPinchGestureParams"* %5, %"struct.content::SyntheticPinchGestureParams"* dereferenceable(32) %1) #5
  %6 = getelementptr inbounds %"class.content::SyntheticPinchGesture", %"class.content::SyntheticPinchGesture"* %0, i64 0, i32 2
  %7 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  store i64 0, i64* %7, align 8
  ret void
}

declare void @_ZN7content16SyntheticGestureC2Ev(%"class.content::SyntheticGesture"*) unnamed_addr #1

declare void @_ZN7content27SyntheticPinchGestureParamsC1ERKS0_(%"struct.content::SyntheticPinchGestureParams"*, %"struct.content::SyntheticPinchGestureParams"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content21SyntheticPinchGestureD2Ev(%"class.content::SyntheticPinchGesture"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::SyntheticPinchGesture", %"class.content::SyntheticPinchGesture"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7content21SyntheticPinchGestureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::SyntheticPinchGesture", %"class.content::SyntheticPinchGesture"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.content::SyntheticGesture"*, %"class.content::SyntheticGesture"** %3, align 8
  store %"class.content::SyntheticGesture"* null, %"class.content::SyntheticGesture"** %3, align 8
  %5 = icmp eq %"class.content::SyntheticGesture"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.content::SyntheticGesture"* %4 to void (%"class.content::SyntheticGesture"*)***
  %8 = load void (%"class.content::SyntheticGesture"*)**, void (%"class.content::SyntheticGesture"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.content::SyntheticGesture"*)*, void (%"class.content::SyntheticGesture"*)** %8, i64 1
  %10 = load void (%"class.content::SyntheticGesture"*)*, void (%"class.content::SyntheticGesture"*)** %9, align 8
  tail call void %10(%"class.content::SyntheticGesture"* nonnull %4) #5
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.content::SyntheticPinchGesture", %"class.content::SyntheticPinchGesture"* %0, i64 0, i32 1
  tail call void @_ZN7content27SyntheticPinchGestureParamsD1Ev(%"struct.content::SyntheticPinchGestureParams"* %12) #5
  %13 = getelementptr inbounds %"class.content::SyntheticPinchGesture", %"class.content::SyntheticPinchGesture"* %0, i64 0, i32 0
  tail call void @_ZN7content16SyntheticGestureD2Ev(%"class.content::SyntheticGesture"* %13) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7content27SyntheticPinchGestureParamsD1Ev(%"struct.content::SyntheticPinchGestureParams"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7content16SyntheticGestureD2Ev(%"class.content::SyntheticGesture"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content21SyntheticPinchGestureD0Ev(%"class.content::SyntheticPinchGesture"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::SyntheticPinchGesture", %"class.content::SyntheticPinchGesture"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7content21SyntheticPinchGestureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::SyntheticPinchGesture", %"class.content::SyntheticPinchGesture"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.content::SyntheticGesture"*, %"class.content::SyntheticGesture"** %3, align 8
  store %"class.content::SyntheticGesture"* null, %"class.content::SyntheticGesture"** %3, align 8
  %5 = icmp eq %"class.content::SyntheticGesture"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.content::SyntheticGesture"* %4 to void (%"class.content::SyntheticGesture"*)***
  %8 = load void (%"class.content::SyntheticGesture"*)**, void (%"class.content::SyntheticGesture"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.content::SyntheticGesture"*)*, void (%"class.content::SyntheticGesture"*)** %8, i64 1
  %10 = load void (%"class.content::SyntheticGesture"*)*, void (%"class.content::SyntheticGesture"*)** %9, align 8
  tail call void %10(%"class.content::SyntheticGesture"* nonnull %4) #5
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.content::SyntheticPinchGesture", %"class.content::SyntheticPinchGesture"* %0, i64 0, i32 1
  tail call void @_ZN7content27SyntheticPinchGestureParamsD1Ev(%"struct.content::SyntheticPinchGestureParams"* %12) #5
  %13 = getelementptr inbounds %"class.content::SyntheticPinchGesture", %"class.content::SyntheticPinchGesture"* %0, i64 0, i32 0
  tail call void @_ZN7content16SyntheticGestureD2Ev(%"class.content::SyntheticGesture"* %13) #5
  %14 = bitcast %"class.content::SyntheticPinchGesture"* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7content21SyntheticPinchGesture18ForwardInputEventsERKN4base9TimeTicksEPNS_22SyntheticGestureTargetE(%"class.content::SyntheticPinchGesture"*, %"class.base::TimeTicks"* dereferenceable(8), %"class.content::SyntheticGestureTarget"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.content::SyntheticPinchGesture", %"class.content::SyntheticPinchGesture"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.content::SyntheticGesture"*, %"class.content::SyntheticGesture"** %4, align 8
  %6 = icmp eq %"class.content::SyntheticGesture"* %5, null
  br i1 %6, label %7, label %43

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.content::SyntheticPinchGesture", %"class.content::SyntheticPinchGesture"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.content::SyntheticPinchGesture", %"class.content::SyntheticPinchGesture"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %18

12:                                               ; preds = %7
  %13 = bitcast %"class.content::SyntheticGestureTarget"* %2 to i32 (%"class.content::SyntheticGestureTarget"*)***
  %14 = load i32 (%"class.content::SyntheticGestureTarget"*)**, i32 (%"class.content::SyntheticGestureTarget"*)*** %13, align 8
  %15 = getelementptr inbounds i32 (%"class.content::SyntheticGestureTarget"*)*, i32 (%"class.content::SyntheticGestureTarget"*)** %14, i64 3
  %16 = load i32 (%"class.content::SyntheticGestureTarget"*)*, i32 (%"class.content::SyntheticGestureTarget"*)** %15, align 8
  %17 = tail call i32 %16(%"class.content::SyntheticGestureTarget"* %2) #5
  br label %18

18:                                               ; preds = %12, %7
  %19 = phi i32 [ %17, %12 ], [ %10, %7 ]
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %32

21:                                               ; preds = %18
  %22 = tail call i8* @_Znwm(i64 88) #6
  %23 = bitcast i8* %22 to %"class.content::SyntheticTouchscreenPinchGesture"*
  tail call void @_ZN7content32SyntheticTouchscreenPinchGestureC1ERKNS_27SyntheticPinchGestureParamsE(%"class.content::SyntheticTouchscreenPinchGesture"* nonnull %23, %"struct.content::SyntheticPinchGestureParams"* dereferenceable(32) %8) #5
  %24 = load %"class.content::SyntheticGesture"*, %"class.content::SyntheticGesture"** %4, align 8
  %25 = bitcast %"class.content::SyntheticGesture"** %4 to i8**
  store i8* %22, i8** %25, align 8
  %26 = icmp eq %"class.content::SyntheticGesture"* %24, null
  br i1 %26, label %43, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.content::SyntheticGesture"* %24 to void (%"class.content::SyntheticGesture"*)***
  %29 = load void (%"class.content::SyntheticGesture"*)**, void (%"class.content::SyntheticGesture"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.content::SyntheticGesture"*)*, void (%"class.content::SyntheticGesture"*)** %29, i64 1
  %31 = load void (%"class.content::SyntheticGesture"*)*, void (%"class.content::SyntheticGesture"*)** %30, align 8
  tail call void %31(%"class.content::SyntheticGesture"* nonnull %24) #5
  br label %43

32:                                               ; preds = %18
  %33 = tail call i8* @_Znwm(i64 72) #6
  %34 = bitcast i8* %33 to %"class.content::SyntheticTouchpadPinchGesture"*
  tail call void @_ZN7content29SyntheticTouchpadPinchGestureC1ERKNS_27SyntheticPinchGestureParamsE(%"class.content::SyntheticTouchpadPinchGesture"* nonnull %34, %"struct.content::SyntheticPinchGestureParams"* dereferenceable(32) %8) #5
  %35 = load %"class.content::SyntheticGesture"*, %"class.content::SyntheticGesture"** %4, align 8
  %36 = bitcast %"class.content::SyntheticGesture"** %4 to i8**
  store i8* %33, i8** %36, align 8
  %37 = icmp eq %"class.content::SyntheticGesture"* %35, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %32
  %39 = bitcast %"class.content::SyntheticGesture"* %35 to void (%"class.content::SyntheticGesture"*)***
  %40 = load void (%"class.content::SyntheticGesture"*)**, void (%"class.content::SyntheticGesture"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.content::SyntheticGesture"*)*, void (%"class.content::SyntheticGesture"*)** %40, i64 1
  %42 = load void (%"class.content::SyntheticGesture"*)*, void (%"class.content::SyntheticGesture"*)** %41, align 8
  tail call void %42(%"class.content::SyntheticGesture"* nonnull %35) #5
  br label %43

43:                                               ; preds = %3, %32, %38, %21, %27
  %44 = load %"class.content::SyntheticGesture"*, %"class.content::SyntheticGesture"** %4, align 8
  %45 = bitcast %"class.content::SyntheticGesture"* %44 to i32 (%"class.content::SyntheticGesture"*, %"class.base::TimeTicks"*, %"class.content::SyntheticGestureTarget"*)***
  %46 = load i32 (%"class.content::SyntheticGesture"*, %"class.base::TimeTicks"*, %"class.content::SyntheticGestureTarget"*)**, i32 (%"class.content::SyntheticGesture"*, %"class.base::TimeTicks"*, %"class.content::SyntheticGestureTarget"*)*** %45, align 8
  %47 = getelementptr inbounds i32 (%"class.content::SyntheticGesture"*, %"class.base::TimeTicks"*, %"class.content::SyntheticGestureTarget"*)*, i32 (%"class.content::SyntheticGesture"*, %"class.base::TimeTicks"*, %"class.content::SyntheticGestureTarget"*)** %46, i64 2
  %48 = load i32 (%"class.content::SyntheticGesture"*, %"class.base::TimeTicks"*, %"class.content::SyntheticGestureTarget"*)*, i32 (%"class.content::SyntheticGesture"*, %"class.base::TimeTicks"*, %"class.content::SyntheticGestureTarget"*)** %47, align 8
  %49 = tail call i32 %48(%"class.content::SyntheticGesture"* %44, %"class.base::TimeTicks"* dereferenceable(8) %1, %"class.content::SyntheticGestureTarget"* %2) #5
  ret i32 %49
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7content21SyntheticPinchGesture16WaitForTargetAckEN4base12OnceCallbackIFvvEEEPNS_22SyntheticGestureTargetE(%"class.content::SyntheticPinchGesture"*, %"class.base::OnceCallback"* nocapture, %"class.content::SyntheticGestureTarget"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = getelementptr inbounds %"class.content::SyntheticPinchGesture", %"class.content::SyntheticPinchGesture"* %0, i64 0, i32 1
  %6 = tail call i32 @_ZNK7content27SyntheticPinchGestureParams14GetGestureTypeEv(%"struct.content::SyntheticPinchGestureParams"* %5) #5
  %7 = getelementptr inbounds %"class.content::SyntheticPinchGesture", %"class.content::SyntheticPinchGesture"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = bitcast %"class.content::SyntheticGestureTarget"* %2 to void (%"class.content::SyntheticGestureTarget"*, i32, i32, %"class.base::OnceCallback"*)***
  %14 = load void (%"class.content::SyntheticGestureTarget"*, i32, i32, %"class.base::OnceCallback"*)**, void (%"class.content::SyntheticGestureTarget"*, i32, i32, %"class.base::OnceCallback"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.content::SyntheticGestureTarget"*, i32, i32, %"class.base::OnceCallback"*)*, void (%"class.content::SyntheticGestureTarget"*, i32, i32, %"class.base::OnceCallback"*)** %14, i64 9
  %16 = load void (%"class.content::SyntheticGestureTarget"*, i32, i32, %"class.base::OnceCallback"*)*, void (%"class.content::SyntheticGestureTarget"*, i32, i32, %"class.base::OnceCallback"*)** %15, align 8
  call void %16(%"class.content::SyntheticGestureTarget"* %2, i32 %6, i32 %8, %"class.base::OnceCallback"* nonnull %4) #5
  %17 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #5
  ret void
}

declare i32 @_ZNK7content27SyntheticPinchGestureParams14GetGestureTypeEv(%"struct.content::SyntheticPinchGestureParams"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

declare zeroext i1 @_ZNK7content16SyntheticGesture26AllowHighFrequencyDispatchEv(%"class.content::SyntheticGesture"*) unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN7content32SyntheticTouchscreenPinchGestureC1ERKNS_27SyntheticPinchGestureParamsE(%"class.content::SyntheticTouchscreenPinchGesture"*, %"struct.content::SyntheticPinchGestureParams"* dereferenceable(32)) unnamed_addr #1

declare void @_ZN7content29SyntheticTouchpadPinchGestureC1ERKNS_27SyntheticPinchGestureParamsE(%"class.content::SyntheticTouchpadPinchGesture"*, %"struct.content::SyntheticPinchGestureParams"* dereferenceable(32)) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
