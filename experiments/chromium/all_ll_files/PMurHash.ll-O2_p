; ModuleID = '../../third_party/angle/src/common/third_party/smhasher/src/PMurHash.cpp'
source_filename = "../../third_party/angle/src/common/third_party/smhasher/src/PMurHash.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5angle18PMurHash32_ProcessEPjS0_PKvi(i32* nocapture, i32* nocapture, i8*, i32) local_unnamed_addr #0 {
  %5 = load i32, i32* %0, align 4
  %6 = load i32, i32* %1, align 4
  %7 = and i32 %6, 3
  %8 = ptrtoint i8* %2 to i64
  %9 = trunc i64 %8 to i32
  %10 = sub i32 0, %9
  %11 = and i32 %10, 3
  %12 = icmp eq i32 %11, 0
  %13 = icmp sgt i32 %11, %3
  %14 = or i1 %12, %13
  br i1 %14, label %50, label %15

15:                                               ; preds = %4
  %16 = add nsw i32 %11, -1
  %17 = zext i32 %16 to i64
  %18 = add nuw nsw i64 %17, 1
  %19 = getelementptr i8, i8* %2, i64 %18
  %20 = lshr i32 %6, 8
  %21 = getelementptr inbounds i8, i8* %2, i64 1
  %22 = load i8, i8* %2, align 1
  %23 = zext i8 %22 to i32
  %24 = shl nuw i32 %23, 24
  %25 = or i32 %24, %20
  %26 = add nuw nsw i32 %7, 1
  %27 = icmp eq i32 %26, 4
  br i1 %27, label %28, label %40

28:                                               ; preds = %15
  %29 = mul i32 %25, -862048943
  %30 = mul i32 %25, 380141568
  %31 = lshr i32 %29, 17
  %32 = or i32 %31, %30
  %33 = mul i32 %32, 461845907
  %34 = xor i32 %33, %5
  %35 = shl i32 %34, 13
  %36 = lshr i32 %34, 19
  %37 = or i32 %35, %36
  %38 = mul i32 %37, 5
  %39 = add i32 %38, -430675100
  br label %40

40:                                               ; preds = %28, %15
  %41 = phi i32 [ 0, %28 ], [ %26, %15 ]
  %42 = phi i32 [ %33, %28 ], [ %25, %15 ]
  %43 = phi i32 [ %39, %28 ], [ %5, %15 ]
  %44 = icmp eq i32 %11, 1
  br i1 %44, label %45, label %196

45:                                               ; preds = %222, %230, %217, %40
  %46 = phi i32 [ %41, %40 ], [ %218, %217 ], [ 0, %230 ], [ %228, %222 ]
  %47 = phi i32 [ %42, %40 ], [ %219, %217 ], [ %235, %230 ], [ %227, %222 ]
  %48 = phi i32 [ %43, %40 ], [ %220, %217 ], [ %241, %230 ], [ %220, %222 ]
  %49 = sub i32 %3, %11
  br label %50

50:                                               ; preds = %45, %4
  %51 = phi i32 [ %7, %4 ], [ %46, %45 ]
  %52 = phi i8* [ %2, %4 ], [ %19, %45 ]
  %53 = phi i32 [ %6, %4 ], [ %47, %45 ]
  %54 = phi i32 [ %5, %4 ], [ %48, %45 ]
  %55 = phi i32 [ %3, %4 ], [ %49, %45 ]
  %56 = sdiv i32 %55, 4
  %57 = shl nsw i32 %56, 2
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i8, i8* %52, i64 %58
  switch i32 %51, label %152 [
    i32 0, label %66
    i32 1, label %64
    i32 2, label %62
    i32 3, label %60
  ]

60:                                               ; preds = %50
  %61 = icmp sgt i32 %55, 3
  br i1 %61, label %130, label %152

62:                                               ; preds = %50
  %63 = icmp sgt i32 %55, 3
  br i1 %63, label %108, label %152

64:                                               ; preds = %50
  %65 = icmp sgt i32 %55, 3
  br i1 %65, label %86, label %152

66:                                               ; preds = %50
  %67 = icmp sgt i32 %55, 3
  br i1 %67, label %68, label %152

68:                                               ; preds = %66, %68
  %69 = phi i32 [ %83, %68 ], [ %54, %66 ]
  %70 = phi i8* [ %84, %68 ], [ %52, %66 ]
  %71 = bitcast i8* %70 to i32*
  %72 = load i32, i32* %71, align 4
  %73 = mul i32 %72, -862048943
  %74 = mul i32 %72, 380141568
  %75 = lshr i32 %73, 17
  %76 = or i32 %75, %74
  %77 = mul i32 %76, 461845907
  %78 = xor i32 %77, %69
  %79 = shl i32 %78, 13
  %80 = lshr i32 %78, 19
  %81 = or i32 %79, %80
  %82 = mul i32 %81, 5
  %83 = add i32 %82, -430675100
  %84 = getelementptr inbounds i8, i8* %70, i64 4
  %85 = icmp ult i8* %84, %59
  br i1 %85, label %68, label %152

86:                                               ; preds = %64, %86
  %87 = phi i32 [ %105, %86 ], [ %54, %64 ]
  %88 = phi i32 [ %92, %86 ], [ %53, %64 ]
  %89 = phi i8* [ %106, %86 ], [ %52, %64 ]
  %90 = lshr i32 %88, 24
  %91 = bitcast i8* %89 to i32*
  %92 = load i32, i32* %91, align 4
  %93 = shl i32 %92, 8
  %94 = or i32 %93, %90
  %95 = mul i32 %94, -862048943
  %96 = mul i32 %94, 380141568
  %97 = lshr i32 %95, 17
  %98 = or i32 %97, %96
  %99 = mul i32 %98, 461845907
  %100 = xor i32 %99, %87
  %101 = shl i32 %100, 13
  %102 = lshr i32 %100, 19
  %103 = or i32 %101, %102
  %104 = mul i32 %103, 5
  %105 = add i32 %104, -430675100
  %106 = getelementptr inbounds i8, i8* %89, i64 4
  %107 = icmp ult i8* %106, %59
  br i1 %107, label %86, label %152

108:                                              ; preds = %62, %108
  %109 = phi i32 [ %127, %108 ], [ %54, %62 ]
  %110 = phi i32 [ %114, %108 ], [ %53, %62 ]
  %111 = phi i8* [ %128, %108 ], [ %52, %62 ]
  %112 = lshr i32 %110, 16
  %113 = bitcast i8* %111 to i32*
  %114 = load i32, i32* %113, align 4
  %115 = shl i32 %114, 16
  %116 = or i32 %115, %112
  %117 = mul i32 %116, -862048943
  %118 = mul i32 %116, 380141568
  %119 = lshr i32 %117, 17
  %120 = or i32 %119, %118
  %121 = mul i32 %120, 461845907
  %122 = xor i32 %121, %109
  %123 = shl i32 %122, 13
  %124 = lshr i32 %122, 19
  %125 = or i32 %123, %124
  %126 = mul i32 %125, 5
  %127 = add i32 %126, -430675100
  %128 = getelementptr inbounds i8, i8* %111, i64 4
  %129 = icmp ult i8* %128, %59
  br i1 %129, label %108, label %152

130:                                              ; preds = %60, %130
  %131 = phi i32 [ %149, %130 ], [ %54, %60 ]
  %132 = phi i32 [ %136, %130 ], [ %53, %60 ]
  %133 = phi i8* [ %150, %130 ], [ %52, %60 ]
  %134 = lshr i32 %132, 8
  %135 = bitcast i8* %133 to i32*
  %136 = load i32, i32* %135, align 4
  %137 = shl i32 %136, 24
  %138 = or i32 %137, %134
  %139 = mul i32 %138, -862048943
  %140 = mul i32 %138, 380141568
  %141 = lshr i32 %139, 17
  %142 = or i32 %141, %140
  %143 = mul i32 %142, 461845907
  %144 = xor i32 %143, %131
  %145 = shl i32 %144, 13
  %146 = lshr i32 %144, 19
  %147 = or i32 %145, %146
  %148 = mul i32 %147, 5
  %149 = add i32 %148, -430675100
  %150 = getelementptr inbounds i8, i8* %133, i64 4
  %151 = icmp ult i8* %150, %59
  br i1 %151, label %130, label %152

152:                                              ; preds = %130, %108, %86, %68, %60, %62, %64, %66, %50
  %153 = phi i8* [ %52, %50 ], [ %52, %66 ], [ %52, %64 ], [ %52, %62 ], [ %52, %60 ], [ %84, %68 ], [ %106, %86 ], [ %128, %108 ], [ %150, %130 ]
  %154 = phi i32 [ %53, %50 ], [ %53, %66 ], [ %53, %64 ], [ %53, %62 ], [ %53, %60 ], [ %53, %68 ], [ %92, %86 ], [ %114, %108 ], [ %136, %130 ]
  %155 = phi i32 [ %54, %50 ], [ %54, %66 ], [ %54, %64 ], [ %54, %62 ], [ %54, %60 ], [ %83, %68 ], [ %105, %86 ], [ %127, %108 ], [ %149, %130 ]
  %156 = sub nsw i32 %55, %57
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %190, label %158

158:                                              ; preds = %152, %185
  %159 = phi i32 [ %164, %185 ], [ %156, %152 ]
  %160 = phi i32 [ %188, %185 ], [ %155, %152 ]
  %161 = phi i32 [ %187, %185 ], [ %154, %152 ]
  %162 = phi i8* [ %166, %185 ], [ %153, %152 ]
  %163 = phi i32 [ %186, %185 ], [ %51, %152 ]
  %164 = add nsw i32 %159, -1
  %165 = lshr i32 %161, 8
  %166 = getelementptr inbounds i8, i8* %162, i64 1
  %167 = load i8, i8* %162, align 1
  %168 = zext i8 %167 to i32
  %169 = shl nuw i32 %168, 24
  %170 = or i32 %169, %165
  %171 = add nsw i32 %163, 1
  %172 = icmp eq i32 %171, 4
  br i1 %172, label %173, label %185

173:                                              ; preds = %158
  %174 = mul i32 %170, -862048943
  %175 = mul i32 %170, 380141568
  %176 = lshr i32 %174, 17
  %177 = or i32 %176, %175
  %178 = mul i32 %177, 461845907
  %179 = xor i32 %178, %160
  %180 = shl i32 %179, 13
  %181 = lshr i32 %179, 19
  %182 = or i32 %180, %181
  %183 = mul i32 %182, 5
  %184 = add i32 %183, -430675100
  br label %185

185:                                              ; preds = %173, %158
  %186 = phi i32 [ 0, %173 ], [ %171, %158 ]
  %187 = phi i32 [ %178, %173 ], [ %170, %158 ]
  %188 = phi i32 [ %184, %173 ], [ %160, %158 ]
  %189 = icmp eq i32 %164, 0
  br i1 %189, label %190, label %158

190:                                              ; preds = %185, %152
  %191 = phi i32 [ %51, %152 ], [ %186, %185 ]
  %192 = phi i32 [ %154, %152 ], [ %187, %185 ]
  %193 = phi i32 [ %155, %152 ], [ %188, %185 ]
  store i32 %193, i32* %0, align 4
  %194 = and i32 %192, -256
  %195 = or i32 %194, %191
  store i32 %195, i32* %1, align 4
  ret void

196:                                              ; preds = %40
  %197 = lshr i32 %42, 8
  %198 = getelementptr inbounds i8, i8* %2, i64 2
  %199 = load i8, i8* %21, align 1
  %200 = zext i8 %199 to i32
  %201 = shl nuw i32 %200, 24
  %202 = or i32 %201, %197
  %203 = add nsw i32 %41, 1
  %204 = icmp eq i32 %203, 4
  br i1 %204, label %205, label %217

205:                                              ; preds = %196
  %206 = mul i32 %202, -862048943
  %207 = mul i32 %202, 380141568
  %208 = lshr i32 %206, 17
  %209 = or i32 %208, %207
  %210 = mul i32 %209, 461845907
  %211 = xor i32 %210, %43
  %212 = shl i32 %211, 13
  %213 = lshr i32 %211, 19
  %214 = or i32 %212, %213
  %215 = mul i32 %214, 5
  %216 = add i32 %215, -430675100
  br label %217

217:                                              ; preds = %205, %196
  %218 = phi i32 [ 0, %205 ], [ %203, %196 ]
  %219 = phi i32 [ %210, %205 ], [ %202, %196 ]
  %220 = phi i32 [ %216, %205 ], [ %43, %196 ]
  %221 = icmp eq i32 %11, 2
  br i1 %221, label %45, label %222

222:                                              ; preds = %217
  %223 = lshr i32 %219, 8
  %224 = load i8, i8* %198, align 1
  %225 = zext i8 %224 to i32
  %226 = shl nuw i32 %225, 24
  %227 = or i32 %226, %223
  %228 = add nsw i32 %218, 1
  %229 = icmp eq i32 %228, 4
  br i1 %229, label %230, label %45

230:                                              ; preds = %222
  %231 = mul i32 %227, -862048943
  %232 = mul i32 %227, 380141568
  %233 = lshr i32 %231, 17
  %234 = or i32 %233, %232
  %235 = mul i32 %234, 461845907
  %236 = xor i32 %235, %220
  %237 = shl i32 %236, 13
  %238 = lshr i32 %236, 19
  %239 = or i32 %237, %238
  %240 = mul i32 %239, 5
  %241 = add i32 %240, -430675100
  br label %45
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5angle17PMurHash32_ResultEjjj(i32, i32, i32) local_unnamed_addr #2 {
  %4 = and i32 %1, 3
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %16, label %6

6:                                                ; preds = %3
  %7 = shl nuw nsw i32 %4, 3
  %8 = sub nuw nsw i32 32, %7
  %9 = lshr i32 %1, %8
  %10 = mul i32 %9, -862048943
  %11 = mul i32 %9, 380141568
  %12 = lshr i32 %10, 17
  %13 = or i32 %12, %11
  %14 = mul i32 %13, 461845907
  %15 = xor i32 %14, %0
  br label %16

16:                                               ; preds = %3, %6
  %17 = phi i32 [ %15, %6 ], [ %0, %3 ]
  %18 = xor i32 %17, %2
  %19 = lshr i32 %18, 16
  %20 = xor i32 %19, %18
  %21 = mul i32 %20, -2048144789
  %22 = lshr i32 %21, 13
  %23 = xor i32 %22, %21
  %24 = mul i32 %23, -1028477387
  %25 = lshr i32 %24, 16
  %26 = xor i32 %25, %24
  ret i32 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5angle10PMurHash32EjPKvi(i32, i8*, i32) local_unnamed_addr #3 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #4
  store i32 %0, i32* %4, align 4
  %7 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #4
  store i32 0, i32* %5, align 4
  call void @_ZN5angle18PMurHash32_ProcessEPjS0_PKvi(i32* nonnull %4, i32* nonnull %5, i8* %1, i32 %2)
  %8 = load i32, i32* %4, align 4
  %9 = load i32, i32* %5, align 4
  %10 = and i32 %9, 3
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %22, label %12

12:                                               ; preds = %3
  %13 = shl nuw nsw i32 %10, 3
  %14 = sub nuw nsw i32 32, %13
  %15 = lshr i32 %9, %14
  %16 = mul i32 %15, -862048943
  %17 = mul i32 %15, 380141568
  %18 = lshr i32 %16, 17
  %19 = or i32 %18, %17
  %20 = mul i32 %19, 461845907
  %21 = xor i32 %20, %8
  br label %22

22:                                               ; preds = %3, %12
  %23 = phi i32 [ %21, %12 ], [ %8, %3 ]
  %24 = xor i32 %23, %2
  %25 = lshr i32 %24, 16
  %26 = xor i32 %25, %24
  %27 = mul i32 %26, -2048144789
  %28 = lshr i32 %27, 13
  %29 = xor i32 %28, %27
  %30 = mul i32 %29, -1028477387
  %31 = lshr i32 %30, 16
  %32 = xor i32 %31, %30
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #4
  ret i32 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5angle15PMurHash32_testEPKvijPv(i8*, i32, i32, i8* nocapture) local_unnamed_addr #3 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #4
  store i32 %2, i32* %5, align 4
  %8 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #4
  store i32 0, i32* %6, align 4
  call void @_ZN5angle18PMurHash32_ProcessEPjS0_PKvi(i32* nonnull %5, i32* nonnull %6, i8* %0, i32 %1)
  %9 = load i32, i32* %5, align 4
  %10 = load i32, i32* %6, align 4
  %11 = and i32 %10, 3
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %23, label %13

13:                                               ; preds = %4
  %14 = shl nuw nsw i32 %11, 3
  %15 = sub nuw nsw i32 32, %14
  %16 = lshr i32 %10, %15
  %17 = mul i32 %16, -862048943
  %18 = mul i32 %16, 380141568
  %19 = lshr i32 %17, 17
  %20 = or i32 %19, %18
  %21 = mul i32 %20, 461845907
  %22 = xor i32 %21, %9
  br label %23

23:                                               ; preds = %4, %13
  %24 = phi i32 [ %22, %13 ], [ %9, %4 ]
  %25 = xor i32 %24, %1
  %26 = lshr i32 %25, 16
  %27 = xor i32 %26, %25
  %28 = mul i32 %27, -2048144789
  %29 = lshr i32 %28, 13
  %30 = xor i32 %29, %28
  %31 = mul i32 %30, -1028477387
  %32 = lshr i32 %31, 16
  %33 = xor i32 %32, %31
  %34 = bitcast i8* %3 to i32*
  store i32 %33, i32* %34, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #4
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
