; ModuleID = '../../third_party/boringssl/src/crypto/x509v3/v3_pci.c'
source_filename = "../../third_party/boringssl/src/crypto/x509v3/v3_pci.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ASN1_ITEM_st = type opaque
%struct.v3_ext_method = type { i32, i32, %struct.ASN1_ITEM_st*, i8* ()*, void (i8*)*, i8* (i8*, i8**, i64)*, i32 (i8*, i8**)*, {}*, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)*, %struct.stack_st_CONF_VALUE* (%struct.v3_ext_method*, i8*, %struct.stack_st_CONF_VALUE*)*, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, %struct.stack_st_CONF_VALUE*)*, i32 (%struct.v3_ext_method*, i8*, %struct.bio_st*, i32)*, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)*, i8* }
%struct.stack_st_CONF_VALUE = type opaque
%struct.v3_ext_ctx = type { i32, %struct.x509_st*, %struct.x509_st*, %struct.X509_req_st*, %struct.X509_crl_st*, %struct.X509V3_CONF_METHOD_st*, i8* }
%struct.x509_st = type { %struct.x509_cinf_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, %struct.crypto_ex_data_st, i64, i64, i64, i64, i64, i64, %struct.asn1_string_st*, %struct.AUTHORITY_KEYID_st*, %struct.X509_POLICY_CACHE_st*, %struct.stack_st_DIST_POINT*, %struct.stack_st_GENERAL_NAME*, %struct.NAME_CONSTRAINTS_st*, [20 x i8], %struct.x509_cert_aux_st*, %struct.crypto_buffer_st*, %union.crypto_mutex_st }
%struct.x509_cinf_st = type { %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.X509_val_st*, %struct.X509_name_st*, %struct.X509_pubkey_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.X509_val_st = type opaque
%struct.X509_name_st = type { %struct.stack_st_X509_NAME_ENTRY*, i32, %struct.buf_mem_st*, i8*, i32 }
%struct.stack_st_X509_NAME_ENTRY = type opaque
%struct.buf_mem_st = type { i64, i8*, i64 }
%struct.X509_pubkey_st = type opaque
%struct.stack_st_X509_EXTENSION = type opaque
%struct.ASN1_ENCODING_st = type { i8*, i64, i32, i8 }
%struct.X509_algor_st = type { %struct.asn1_object_st*, %struct.asn1_type_st* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_type_st = type { i32, %union.anon }
%union.anon = type { i8* }
%struct.crypto_ex_data_st = type { %struct.stack_st_void* }
%struct.stack_st_void = type opaque
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.AUTHORITY_KEYID_st = type { %struct.asn1_string_st*, %struct.stack_st_GENERAL_NAME*, %struct.asn1_string_st* }
%struct.X509_POLICY_CACHE_st = type opaque
%struct.stack_st_DIST_POINT = type opaque
%struct.stack_st_GENERAL_NAME = type opaque
%struct.NAME_CONSTRAINTS_st = type { %struct.stack_st_GENERAL_SUBTREE*, %struct.stack_st_GENERAL_SUBTREE* }
%struct.stack_st_GENERAL_SUBTREE = type opaque
%struct.x509_cert_aux_st = type opaque
%struct.crypto_buffer_st = type opaque
%union.crypto_mutex_st = type { double, [48 x i8] }
%struct.X509_req_st = type opaque
%struct.X509_crl_st = type { %struct.X509_crl_info_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, i32, %struct.AUTHORITY_KEYID_st*, %struct.ISSUING_DIST_POINT_st*, i32, i32, %struct.asn1_string_st*, %struct.asn1_string_st*, [20 x i8], %struct.stack_st_GENERAL_NAMES*, %struct.x509_crl_method_st*, i8* }
%struct.X509_crl_info_st = type { %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_REVOKED*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.stack_st_X509_REVOKED = type opaque
%struct.ISSUING_DIST_POINT_st = type { %struct.DIST_POINT_NAME_st*, i32, i32, %struct.asn1_string_st*, i32, i32 }
%struct.DIST_POINT_NAME_st = type { i32, %union.anon.0, %struct.X509_name_st* }
%union.anon.0 = type { %struct.stack_st_GENERAL_NAME* }
%struct.stack_st_GENERAL_NAMES = type opaque
%struct.x509_crl_method_st = type opaque
%struct.X509V3_CONF_METHOD_st = type { i8* (i8*, i8*, i8*)*, %struct.stack_st_CONF_VALUE* (i8*, i8*)*, void (i8*, i8*)*, void (i8*, %struct.stack_st_CONF_VALUE*)* }
%struct.bio_st = type { %struct.bio_method_st*, i32, i32, i32, i32, i32, i32, i8*, %struct.bio_st*, i64, i64 }
%struct.bio_method_st = type { i32, i8*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*)*, i32 (%struct.bio_st*, i8*, i32)*, i64 (%struct.bio_st*, i32, i64, i8*)*, i32 (%struct.bio_st*)*, i32 (%struct.bio_st*)*, i64 (%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* }
%struct.PROXY_CERT_INFO_EXTENSION_st = type { %struct.asn1_string_st*, %struct.PROXY_POLICY_st* }
%struct.PROXY_POLICY_st = type { %struct.asn1_object_st*, %struct.asn1_string_st* }
%struct.stack_st = type { i64, i8**, i32, i64, i32 (i8**, i8**)* }
%struct.conf_value_st = type { i8*, i8*, i8* }

@PROXY_CERT_INFO_EXTENSION_it = external constant %struct.ASN1_ITEM_st, align 1
@v3_pci = hidden local_unnamed_addr constant { i32, i32, %struct.ASN1_ITEM_st*, i8* ()*, void (i8*)*, i8* (i8*, i8**, i64)*, i32 (i8*, i8**)*, i8* (%struct.v3_ext_method*, i8*)*, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)*, %struct.stack_st_CONF_VALUE* (%struct.v3_ext_method*, i8*, %struct.stack_st_CONF_VALUE*)*, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, %struct.stack_st_CONF_VALUE*)*, i32 (%struct.v3_ext_method*, i8*, %struct.bio_st*, i32)*, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)*, i8* } { i32 663, i32 0, %struct.ASN1_ITEM_st* @PROXY_CERT_INFO_EXTENSION_it, i8* ()* null, void (i8*)* null, i8* (i8*, i8**, i64)* null, i32 (i8*, i8**)* null, i8* (%struct.v3_ext_method*, i8*)* null, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)* null, %struct.stack_st_CONF_VALUE* (%struct.v3_ext_method*, i8*, %struct.stack_st_CONF_VALUE*)* null, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, %struct.stack_st_CONF_VALUE*)* null, i32 (%struct.v3_ext_method*, i8*, %struct.bio_st*, i32)* bitcast (i32 (%struct.v3_ext_method*, %struct.PROXY_CERT_INFO_EXTENSION_st*, %struct.bio_st*, i32)* @i2r_pci to i32 (%struct.v3_ext_method*, i8*, %struct.bio_st*, i32)*), i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)* bitcast (%struct.PROXY_CERT_INFO_EXTENSION_st* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)* @r2i_pci to i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)*), i8* null }, align 8
@.str = private unnamed_addr constant [28 x i8] c"%*sPath Length Constraint: \00", align 1
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"infinite\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4 = private unnamed_addr constant [21 x i8] c"%*sPolicy Language: \00", align 1
@.str.5 = private unnamed_addr constant [20 x i8] c"%*sPolicy Text: %s\0A\00", align 1
@.str.6 = private unnamed_addr constant [55 x i8] c"../../third_party/boringssl/src/crypto/x509v3/v3_pci.c\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"section:\00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c",name:\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c",value:\00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c"language\00", align 1
@.str.11 = private unnamed_addr constant [8 x i8] c"pathlen\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c"policy\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"hex:\00", align 1
@.str.14 = private unnamed_addr constant [6 x i8] c"text:\00", align 1

; Function Attrs: nounwind ssp uwtable
define internal i32 @i2r_pci(%struct.v3_ext_method* nocapture readnone, %struct.PROXY_CERT_INFO_EXTENSION_st* nocapture readonly, %struct.bio_st*, i32) #0 {
  %5 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 %3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0)) #6
  %6 = getelementptr inbounds %struct.PROXY_CERT_INFO_EXTENSION_st, %struct.PROXY_CERT_INFO_EXTENSION_st* %1, i64 0, i32 0
  %7 = load %struct.asn1_string_st*, %struct.asn1_string_st** %6, align 8
  %8 = icmp eq %struct.asn1_string_st* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %4
  %10 = tail call i32 @i2a_ASN1_INTEGER(%struct.bio_st* %2, %struct.asn1_string_st* nonnull %7) #6
  br label %13

11:                                               ; preds = %4
  %12 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0)) #6
  br label %13

13:                                               ; preds = %11, %9
  %14 = tail call i32 @BIO_puts(%struct.bio_st* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6
  %15 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i32 %3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0)) #6
  %16 = getelementptr inbounds %struct.PROXY_CERT_INFO_EXTENSION_st, %struct.PROXY_CERT_INFO_EXTENSION_st* %1, i64 0, i32 1
  %17 = load %struct.PROXY_POLICY_st*, %struct.PROXY_POLICY_st** %16, align 8
  %18 = getelementptr inbounds %struct.PROXY_POLICY_st, %struct.PROXY_POLICY_st* %17, i64 0, i32 0
  %19 = load %struct.asn1_object_st*, %struct.asn1_object_st** %18, align 8
  %20 = tail call i32 @i2a_ASN1_OBJECT(%struct.bio_st* %2, %struct.asn1_object_st* %19) #6
  %21 = tail call i32 @BIO_puts(%struct.bio_st* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #6
  %22 = load %struct.PROXY_POLICY_st*, %struct.PROXY_POLICY_st** %16, align 8
  %23 = getelementptr inbounds %struct.PROXY_POLICY_st, %struct.PROXY_POLICY_st* %22, i64 0, i32 1
  %24 = load %struct.asn1_string_st*, %struct.asn1_string_st** %23, align 8
  %25 = icmp eq %struct.asn1_string_st* %24, null
  br i1 %25, label %32, label %26

26:                                               ; preds = %13
  %27 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %24, i64 0, i32 2
  %28 = load i8*, i8** %27, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %26
  %31 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i64 0, i64 0), i32 %3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i8* nonnull %28) #6
  br label %32

32:                                               ; preds = %26, %13, %30
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal %struct.PROXY_CERT_INFO_EXTENSION_st* @r2i_pci(%struct.v3_ext_method* nocapture readnone, %struct.v3_ext_ctx*, i8*) #0 {
  %4 = alloca %struct.asn1_object_st*, align 8
  %5 = alloca %struct.asn1_string_st*, align 8
  %6 = alloca %struct.asn1_string_st*, align 8
  %7 = bitcast %struct.asn1_object_st** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #6
  store %struct.asn1_object_st* null, %struct.asn1_object_st** %4, align 8
  %8 = bitcast %struct.asn1_string_st** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #6
  store %struct.asn1_string_st* null, %struct.asn1_string_st** %5, align 8
  %9 = bitcast %struct.asn1_string_st** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #6
  store %struct.asn1_string_st* null, %struct.asn1_string_st** %6, align 8
  %10 = tail call %struct.stack_st_CONF_VALUE* @X509V3_parse_list(i8* %2) #6
  %11 = bitcast %struct.stack_st_CONF_VALUE* %10 to %struct.stack_st*
  %12 = call i64 @sk_num(%struct.stack_st* %11) #6
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %82, label %14

14:                                               ; preds = %3, %74
  %15 = phi i64 [ %75, %74 ], [ 0, %3 ]
  %16 = call i8* @sk_value(%struct.stack_st* %11, i64 %15) #6
  %17 = bitcast i8* %16 to %struct.conf_value_st*
  %18 = getelementptr inbounds i8, i8* %16, i64 8
  %19 = bitcast i8* %18 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %30, label %22

22:                                               ; preds = %14
  %23 = load i8, i8* %20, align 1
  %24 = icmp eq i8 %23, 64
  br i1 %24, label %38, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds i8, i8* %16, i64 16
  %27 = bitcast i8* %26 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %30, label %64

30:                                               ; preds = %14, %25
  %31 = bitcast i8* %18 to i8**
  call void @ERR_put_error(i32 20, i32 0, i32 132, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 212) #6
  %32 = bitcast i8* %16 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = load i8*, i8** %31, align 8
  %35 = getelementptr inbounds i8, i8* %16, i64 16
  %36 = bitcast i8* %35 to i8**
  %37 = load i8*, i8** %36, align 8
  call void (i32, ...) @ERR_add_error_data(i32 6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i8* %33, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i8* %34, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i8* %37) #6
  br label %106

38:                                               ; preds = %22
  %39 = getelementptr inbounds i8, i8* %20, i64 1
  %40 = call %struct.stack_st_CONF_VALUE* @X509V3_get_section(%struct.v3_ext_ctx* %1, i8* %39) #6
  %41 = icmp eq %struct.stack_st_CONF_VALUE* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %38
  %43 = bitcast %struct.stack_st_CONF_VALUE* %40 to %struct.stack_st*
  br label %52

44:                                               ; preds = %38
  %45 = bitcast i8* %18 to i8**
  call void @ERR_put_error(i32 20, i32 0, i32 134, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 222) #6
  %46 = bitcast i8* %16 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = load i8*, i8** %45, align 8
  %49 = getelementptr inbounds i8, i8* %16, i64 16
  %50 = bitcast i8* %49 to i8**
  %51 = load i8*, i8** %50, align 8
  call void (i32, ...) @ERR_add_error_data(i32 6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i8* %47, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i8* %48, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i8* %51) #6
  br label %106

52:                                               ; preds = %42, %57
  %53 = phi i64 [ 0, %42 ], [ %61, %57 ]
  %54 = call i64 @sk_num(%struct.stack_st* nonnull %43) #6
  %55 = icmp ult i64 %53, %54
  br i1 %55, label %57, label %56

56:                                               ; preds = %52
  call void @X509V3_section_free(%struct.v3_ext_ctx* %1, %struct.stack_st_CONF_VALUE* nonnull %40) #6
  br label %74

57:                                               ; preds = %52
  %58 = call i8* @sk_value(%struct.stack_st* nonnull %43, i64 %53) #6
  %59 = bitcast i8* %58 to %struct.conf_value_st*
  %60 = call fastcc i32 @process_pci_value(%struct.conf_value_st* %59, %struct.asn1_object_st** nonnull %4, %struct.asn1_string_st** nonnull %5, %struct.asn1_string_st** nonnull %6)
  %61 = add nuw i64 %53, 1
  %62 = icmp eq i32 %60, 0
  br i1 %62, label %63, label %52

63:                                               ; preds = %57
  call void @X509V3_section_free(%struct.v3_ext_ctx* %1, %struct.stack_st_CONF_VALUE* nonnull %40) #6
  br label %106

64:                                               ; preds = %25
  %65 = call fastcc i32 @process_pci_value(%struct.conf_value_st* %17, %struct.asn1_object_st** nonnull %4, %struct.asn1_string_st** nonnull %5, %struct.asn1_string_st** nonnull %6)
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %74

67:                                               ; preds = %64
  %68 = bitcast i8* %18 to i8**
  %69 = bitcast i8* %26 to i8**
  %70 = bitcast i8* %16 to i8**
  %71 = load i8*, i8** %70, align 8
  %72 = load i8*, i8** %68, align 8
  %73 = load i8*, i8** %69, align 8
  call void (i32, ...) @ERR_add_error_data(i32 6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i8* %71, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i8* %72, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i8* %73) #6
  br label %106

74:                                               ; preds = %56, %64
  %75 = add nuw i64 %15, 1
  %76 = call i64 @sk_num(%struct.stack_st* %11) #6
  %77 = icmp ult i64 %75, %76
  br i1 %77, label %14, label %78

78:                                               ; preds = %74
  %79 = load %struct.asn1_object_st*, %struct.asn1_object_st** %4, align 8
  %80 = ptrtoint %struct.asn1_object_st* %79 to i64
  %81 = icmp eq %struct.asn1_object_st* %79, null
  br i1 %81, label %82, label %83

82:                                               ; preds = %3, %78
  call void @ERR_put_error(i32 20, i32 0, i32 143, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 245) #6
  br label %110

83:                                               ; preds = %78
  %84 = call i32 @OBJ_obj2nid(%struct.asn1_object_st* nonnull %79) #6
  %85 = or i32 %84, 2
  %86 = icmp eq i32 %85, 667
  %87 = load %struct.asn1_string_st*, %struct.asn1_string_st** %6, align 8
  %88 = icmp ne %struct.asn1_string_st* %87, null
  %89 = and i1 %86, %88
  %90 = ptrtoint %struct.asn1_string_st* %87 to i64
  br i1 %89, label %91, label %92

91:                                               ; preds = %83
  call void @ERR_put_error(i32 20, i32 0, i32 152, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 251) #6
  br label %106

92:                                               ; preds = %83
  %93 = call %struct.PROXY_CERT_INFO_EXTENSION_st* @PROXY_CERT_INFO_EXTENSION_new() #6
  %94 = icmp eq %struct.PROXY_CERT_INFO_EXTENSION_st* %93, null
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  call void @ERR_put_error(i32 20, i32 0, i32 65, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 257) #6
  br label %106

96:                                               ; preds = %92
  %97 = getelementptr inbounds %struct.PROXY_CERT_INFO_EXTENSION_st, %struct.PROXY_CERT_INFO_EXTENSION_st* %93, i64 0, i32 1
  %98 = bitcast %struct.PROXY_POLICY_st** %97 to i64**
  %99 = load i64*, i64** %98, align 8
  store i64 %80, i64* %99, align 8
  store %struct.asn1_object_st* null, %struct.asn1_object_st** %4, align 8
  %100 = load %struct.PROXY_POLICY_st*, %struct.PROXY_POLICY_st** %97, align 8
  %101 = getelementptr inbounds %struct.PROXY_POLICY_st, %struct.PROXY_POLICY_st* %100, i64 0, i32 1
  %102 = bitcast %struct.asn1_string_st** %101 to i64*
  store i64 %90, i64* %102, align 8
  store %struct.asn1_string_st* null, %struct.asn1_string_st** %6, align 8
  %103 = bitcast %struct.asn1_string_st** %5 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %struct.PROXY_CERT_INFO_EXTENSION_st* %93 to i64*
  store i64 %104, i64* %105, align 8
  store %struct.asn1_string_st* null, %struct.asn1_string_st** %5, align 8
  br label %118

106:                                              ; preds = %63, %44, %30, %67, %95, %91
  %107 = load %struct.asn1_object_st*, %struct.asn1_object_st** %4, align 8
  %108 = icmp eq %struct.asn1_object_st* %107, null
  br i1 %108, label %110, label %109

109:                                              ; preds = %106
  call void @ASN1_OBJECT_free(%struct.asn1_object_st* nonnull %107) #6
  store %struct.asn1_object_st* null, %struct.asn1_object_st** %4, align 8
  br label %110

110:                                              ; preds = %82, %106, %109
  %111 = load %struct.asn1_string_st*, %struct.asn1_string_st** %5, align 8
  %112 = icmp eq %struct.asn1_string_st* %111, null
  br i1 %112, label %114, label %113

113:                                              ; preds = %110
  call void @ASN1_INTEGER_free(%struct.asn1_string_st* nonnull %111) #6
  store %struct.asn1_string_st* null, %struct.asn1_string_st** %5, align 8
  br label %114

114:                                              ; preds = %110, %113
  %115 = load %struct.asn1_string_st*, %struct.asn1_string_st** %6, align 8
  %116 = icmp eq %struct.asn1_string_st* %115, null
  br i1 %116, label %118, label %117

117:                                              ; preds = %114
  call void @ASN1_OCTET_STRING_free(%struct.asn1_string_st* nonnull %115) #6
  store %struct.asn1_string_st* null, %struct.asn1_string_st** %6, align 8
  br label %118

118:                                              ; preds = %96, %114, %117
  %119 = phi %struct.PROXY_CERT_INFO_EXTENSION_st* [ %93, %96 ], [ null, %114 ], [ null, %117 ]
  call void @sk_pop_free_ex(%struct.stack_st* %11, void (void (i8*)*, i8*)* nonnull @sk_CONF_VALUE_call_free_func, void (i8*)* bitcast (void (%struct.conf_value_st*)* @X509V3_conf_free to void (i8*)*)) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #6
  ret %struct.PROXY_CERT_INFO_EXTENSION_st* %119
}

declare i32 @BIO_printf(%struct.bio_st*, i8*, ...) local_unnamed_addr #1

declare i32 @i2a_ASN1_INTEGER(%struct.bio_st*, %struct.asn1_string_st*) local_unnamed_addr #1

declare i32 @BIO_puts(%struct.bio_st*, i8*) local_unnamed_addr #1

declare i32 @i2a_ASN1_OBJECT(%struct.bio_st*, %struct.asn1_object_st*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %struct.stack_st_CONF_VALUE* @X509V3_parse_list(i8*) local_unnamed_addr #1

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #1

declare void @ERR_add_error_data(i32, ...) local_unnamed_addr #1

declare %struct.stack_st_CONF_VALUE* @X509V3_get_section(%struct.v3_ext_ctx*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @process_pci_value(%struct.conf_value_st*, %struct.asn1_object_st** nocapture, %struct.asn1_string_st**, %struct.asn1_string_st** nocapture) unnamed_addr #0 {
  %5 = alloca i64, align 8
  %6 = getelementptr inbounds %struct.conf_value_st, %struct.conf_value_st* %0, i64 0, i32 1
  %7 = load i8*, i8** %6, align 8
  %8 = tail call i32 @strcmp(i8* %7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0)) #7
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %29

10:                                               ; preds = %4
  %11 = load %struct.asn1_object_st*, %struct.asn1_object_st** %1, align 8
  %12 = icmp eq %struct.asn1_object_st* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %10
  tail call void @ERR_put_error(i32 20, i32 0, i32 149, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 92) #6
  %14 = getelementptr inbounds %struct.conf_value_st, %struct.conf_value_st* %0, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = load i8*, i8** %6, align 8
  %17 = getelementptr inbounds %struct.conf_value_st, %struct.conf_value_st* %0, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  tail call void (i32, ...) @ERR_add_error_data(i32 6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i8* %15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i8* %16, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i8* %18) #6
  br label %192

19:                                               ; preds = %10
  %20 = getelementptr inbounds %struct.conf_value_st, %struct.conf_value_st* %0, i64 0, i32 2
  %21 = load i8*, i8** %20, align 8
  %22 = tail call %struct.asn1_object_st* @OBJ_txt2obj(i8* %21, i32 0) #6
  store %struct.asn1_object_st* %22, %struct.asn1_object_st** %1, align 8
  %23 = icmp eq %struct.asn1_object_st* %22, null
  br i1 %23, label %24, label %192

24:                                               ; preds = %19
  tail call void @ERR_put_error(i32 20, i32 0, i32 129, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 97) #6
  %25 = getelementptr inbounds %struct.conf_value_st, %struct.conf_value_st* %0, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = load i8*, i8** %6, align 8
  %28 = load i8*, i8** %20, align 8
  tail call void (i32, ...) @ERR_add_error_data(i32 6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i8* %26, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i8* %27, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i8* %28) #6
  br label %192

29:                                               ; preds = %4
  %30 = tail call i32 @strcmp(i8* %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i64 0, i64 0)) #7
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %50

32:                                               ; preds = %29
  %33 = load %struct.asn1_string_st*, %struct.asn1_string_st** %2, align 8
  %34 = icmp eq %struct.asn1_string_st* %33, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %32
  tail call void @ERR_put_error(i32 20, i32 0, i32 151, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 104) #6
  %36 = getelementptr inbounds %struct.conf_value_st, %struct.conf_value_st* %0, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = load i8*, i8** %6, align 8
  %39 = getelementptr inbounds %struct.conf_value_st, %struct.conf_value_st* %0, i64 0, i32 2
  %40 = load i8*, i8** %39, align 8
  tail call void (i32, ...) @ERR_add_error_data(i32 6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i8* %37, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i8* %38, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i8* %40) #6
  br label %192

41:                                               ; preds = %32
  %42 = tail call i32 @X509V3_get_value_int(%struct.conf_value_st* %0, %struct.asn1_string_st** %2) #6
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %192

44:                                               ; preds = %41
  tail call void @ERR_put_error(i32 20, i32 0, i32 150, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 109) #6
  %45 = getelementptr inbounds %struct.conf_value_st, %struct.conf_value_st* %0, i64 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = load i8*, i8** %6, align 8
  %48 = getelementptr inbounds %struct.conf_value_st, %struct.conf_value_st* %0, i64 0, i32 2
  %49 = load i8*, i8** %48, align 8
  tail call void (i32, ...) @ERR_add_error_data(i32 6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i8* %46, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i8* %47, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i8* %49) #6
  br label %192

50:                                               ; preds = %29
  %51 = tail call i32 @strcmp(i8* %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0)) #7
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %192

53:                                               ; preds = %50
  %54 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #6
  store i64 -6148914691236517206, i64* %5, align 8
  %55 = load %struct.asn1_string_st*, %struct.asn1_string_st** %3, align 8
  %56 = icmp eq %struct.asn1_string_st* %55, null
  br i1 %56, label %57, label %60

57:                                               ; preds = %53
  %58 = tail call %struct.asn1_string_st* @ASN1_OCTET_STRING_new() #6
  store %struct.asn1_string_st* %58, %struct.asn1_string_st** %3, align 8
  %59 = icmp eq %struct.asn1_string_st* %58, null
  br i1 %59, label %182, label %60

60:                                               ; preds = %57, %53
  %61 = phi %struct.asn1_string_st* [ %55, %53 ], [ %58, %57 ]
  %62 = phi i32 [ 0, %53 ], [ 1, %57 ]
  %63 = getelementptr inbounds %struct.conf_value_st, %struct.conf_value_st* %0, i64 0, i32 2
  %64 = load i8*, i8** %63, align 8
  %65 = tail call i32 @strncmp(i8* %64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0), i64 4) #7
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %126

67:                                               ; preds = %60
  %68 = getelementptr inbounds i8, i8* %64, i64 4
  %69 = call i8* @x509v3_hex_to_bytes(i8* %68, i64* nonnull %5) #6
  %70 = icmp eq i8* %69, null
  br i1 %70, label %71, label %76

71:                                               ; preds = %67
  call void @ERR_put_error(i32 20, i32 0, i32 118, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 130) #6
  %72 = getelementptr inbounds %struct.conf_value_st, %struct.conf_value_st* %0, i64 0, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = load i8*, i8** %6, align 8
  %75 = load i8*, i8** %63, align 8
  call void (i32, ...) @ERR_add_error_data(i32 6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i8* %73, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i8* %74, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i8* %75) #6
  br label %188

76:                                               ; preds = %67
  %77 = load %struct.asn1_string_st*, %struct.asn1_string_st** %3, align 8
  %78 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %77, i64 0, i32 2
  %79 = load i8*, i8** %78, align 8
  %80 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %77, i64 0, i32 0
  %81 = load i32, i32* %80, align 8
  %82 = sext i32 %81 to i64
  %83 = load i64, i64* %5, align 8
  %84 = add nsw i64 %82, 1
  %85 = add i64 %84, %83
  %86 = call i8* @OPENSSL_realloc(i8* %79, i64 %85) #6
  %87 = icmp eq i8* %86, null
  br i1 %87, label %104, label %88

88:                                               ; preds = %76
  %89 = load %struct.asn1_string_st*, %struct.asn1_string_st** %3, align 8
  %90 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %89, i64 0, i32 2
  store i8* %86, i8** %90, align 8
  %91 = load %struct.asn1_string_st*, %struct.asn1_string_st** %3, align 8
  %92 = load i64, i64* %5, align 8
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %113, label %94

94:                                               ; preds = %88
  %95 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %91, i64 0, i32 2
  %96 = load i8*, i8** %95, align 8
  %97 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %91, i64 0, i32 0
  %98 = load i32, i32* %97, align 8
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds i8, i8* %96, i64 %99
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %100, i8* nonnull align 1 %69, i64 %92, i1 false) #6
  %101 = load i64, i64* %5, align 8
  %102 = load %struct.asn1_string_st*, %struct.asn1_string_st** %3, align 8
  %103 = trunc i64 %101 to i32
  br label %113

104:                                              ; preds = %76
  call void @OPENSSL_free(i8* nonnull %69) #6
  %105 = load %struct.asn1_string_st*, %struct.asn1_string_st** %3, align 8
  %106 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %105, i64 0, i32 2
  store i8* null, i8** %106, align 8
  %107 = load %struct.asn1_string_st*, %struct.asn1_string_st** %3, align 8
  %108 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %107, i64 0, i32 0
  store i32 0, i32* %108, align 8
  call void @ERR_put_error(i32 20, i32 0, i32 65, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 151) #6
  %109 = getelementptr inbounds %struct.conf_value_st, %struct.conf_value_st* %0, i64 0, i32 0
  %110 = load i8*, i8** %109, align 8
  %111 = load i8*, i8** %6, align 8
  %112 = load i8*, i8** %63, align 8
  call void (i32, ...) @ERR_add_error_data(i32 6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i8* %110, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i8* %111, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i8* %112) #6
  br label %188

113:                                              ; preds = %94, %88
  %114 = phi %struct.asn1_string_st* [ %102, %94 ], [ %91, %88 ]
  %115 = phi i32 [ %103, %94 ], [ 0, %88 ]
  %116 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %114, i64 0, i32 0
  %117 = load i32, i32* %116, align 8
  %118 = add i32 %117, %115
  store i32 %118, i32* %116, align 8
  %119 = load %struct.asn1_string_st*, %struct.asn1_string_st** %3, align 8
  %120 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %119, i64 0, i32 2
  %121 = load i8*, i8** %120, align 8
  %122 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %119, i64 0, i32 0
  %123 = load i32, i32* %122, align 8
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds i8, i8* %121, i64 %124
  store i8 0, i8* %125, align 1
  call void @OPENSSL_free(i8* nonnull %69) #6
  br label %181

126:                                              ; preds = %60
  %127 = tail call i32 @strncmp(i8* %64, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0), i64 5) #7
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %176

129:                                              ; preds = %126
  %130 = getelementptr inbounds i8, i8* %64, i64 5
  %131 = tail call i64 @strlen(i8* %130) #7
  store i64 %131, i64* %5, align 8
  %132 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %61, i64 0, i32 2
  %133 = load i8*, i8** %132, align 8
  %134 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %61, i64 0, i32 0
  %135 = load i32, i32* %134, align 8
  %136 = sext i32 %135 to i64
  %137 = add i64 %131, 1
  %138 = add i64 %137, %136
  %139 = tail call i8* @OPENSSL_realloc(i8* %133, i64 %138) #6
  %140 = icmp eq i8* %139, null
  %141 = load %struct.asn1_string_st*, %struct.asn1_string_st** %3, align 8
  %142 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %141, i64 0, i32 2
  br i1 %140, label %169, label %143

143:                                              ; preds = %129
  store i8* %139, i8** %142, align 8
  %144 = load %struct.asn1_string_st*, %struct.asn1_string_st** %3, align 8
  %145 = icmp eq i64 %131, 0
  br i1 %145, label %156, label %146

146:                                              ; preds = %143
  %147 = load i8*, i8** %63, align 8
  %148 = getelementptr inbounds i8, i8* %147, i64 5
  %149 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %144, i64 0, i32 2
  %150 = load i8*, i8** %149, align 8
  %151 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %144, i64 0, i32 0
  %152 = load i32, i32* %151, align 8
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds i8, i8* %150, i64 %153
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %154, i8* align 1 %148, i64 %131, i1 false) #6
  %155 = load %struct.asn1_string_st*, %struct.asn1_string_st** %3, align 8
  br label %156

156:                                              ; preds = %143, %146
  %157 = phi %struct.asn1_string_st* [ %144, %143 ], [ %155, %146 ]
  %158 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %157, i64 0, i32 0
  %159 = load i32, i32* %158, align 8
  %160 = trunc i64 %131 to i32
  %161 = add i32 %159, %160
  store i32 %161, i32* %158, align 8
  %162 = load %struct.asn1_string_st*, %struct.asn1_string_st** %3, align 8
  %163 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %162, i64 0, i32 2
  %164 = load i8*, i8** %163, align 8
  %165 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %162, i64 0, i32 0
  %166 = load i32, i32* %165, align 8
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds i8, i8* %164, i64 %167
  store i8 0, i8* %168, align 1
  br label %181

169:                                              ; preds = %129
  store i8* null, i8** %142, align 8
  %170 = load %struct.asn1_string_st*, %struct.asn1_string_st** %3, align 8
  %171 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %170, i64 0, i32 0
  store i32 0, i32* %171, align 8
  tail call void @ERR_put_error(i32 20, i32 0, i32 65, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 173) #6
  %172 = getelementptr inbounds %struct.conf_value_st, %struct.conf_value_st* %0, i64 0, i32 0
  %173 = load i8*, i8** %172, align 8
  %174 = load i8*, i8** %6, align 8
  %175 = load i8*, i8** %63, align 8
  tail call void (i32, ...) @ERR_add_error_data(i32 6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i8* %173, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i8* %174, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i8* %175) #6
  br label %188

176:                                              ; preds = %126
  tail call void @ERR_put_error(i32 20, i32 0, i32 119, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 178) #6
  %177 = getelementptr inbounds %struct.conf_value_st, %struct.conf_value_st* %0, i64 0, i32 0
  %178 = load i8*, i8** %177, align 8
  %179 = load i8*, i8** %6, align 8
  %180 = load i8*, i8** %63, align 8
  tail call void (i32, ...) @ERR_add_error_data(i32 6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i8* %178, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i8* %179, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i8* %180) #6
  br label %188

181:                                              ; preds = %113, %156
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #6
  br label %192

182:                                              ; preds = %57
  tail call void @ERR_put_error(i32 20, i32 0, i32 65, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 119) #6
  %183 = getelementptr inbounds %struct.conf_value_st, %struct.conf_value_st* %0, i64 0, i32 0
  %184 = load i8*, i8** %183, align 8
  %185 = load i8*, i8** %6, align 8
  %186 = getelementptr inbounds %struct.conf_value_st, %struct.conf_value_st* %0, i64 0, i32 2
  %187 = load i8*, i8** %186, align 8
  tail call void (i32, ...) @ERR_add_error_data(i32 6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i8* %184, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i8* %185, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i8* %187) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #6
  br label %192

188:                                              ; preds = %71, %104, %169, %176
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #6
  %189 = icmp eq i32 %62, 0
  br i1 %189, label %192, label %190

190:                                              ; preds = %188
  %191 = load %struct.asn1_string_st*, %struct.asn1_string_st** %3, align 8
  call void @ASN1_OCTET_STRING_free(%struct.asn1_string_st* %191) #6
  store %struct.asn1_string_st* null, %struct.asn1_string_st** %3, align 8
  br label %192

192:                                              ; preds = %50, %41, %19, %181, %182, %190, %188, %44, %35, %24, %13
  %193 = phi i32 [ 0, %13 ], [ 0, %24 ], [ 0, %35 ], [ 0, %44 ], [ 0, %182 ], [ 0, %188 ], [ 0, %190 ], [ 1, %181 ], [ 1, %19 ], [ 1, %41 ], [ 1, %50 ]
  ret i32 %193
}

declare void @X509V3_section_free(%struct.v3_ext_ctx*, %struct.stack_st_CONF_VALUE*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare i32 @OBJ_obj2nid(%struct.asn1_object_st*) local_unnamed_addr #1

declare %struct.PROXY_CERT_INFO_EXTENSION_st* @PROXY_CERT_INFO_EXTENSION_new() local_unnamed_addr #1

declare void @ASN1_OBJECT_free(%struct.asn1_object_st*) local_unnamed_addr #1

declare void @ASN1_INTEGER_free(%struct.asn1_string_st*) local_unnamed_addr #1

declare void @ASN1_OCTET_STRING_free(%struct.asn1_string_st*) local_unnamed_addr #1

declare void @X509V3_conf_free(%struct.conf_value_st*) #1

declare i64 @sk_num(%struct.stack_st*) local_unnamed_addr #1

declare i8* @sk_value(%struct.stack_st*, i64) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #3

declare %struct.asn1_object_st* @OBJ_txt2obj(i8*, i32) local_unnamed_addr #1

declare i32 @X509V3_get_value_int(%struct.conf_value_st*, %struct.asn1_string_st**) local_unnamed_addr #1

declare %struct.asn1_string_st* @ASN1_OCTET_STRING_new() local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #3

declare i8* @x509v3_hex_to_bytes(i8*, i64*) local_unnamed_addr #1

declare i8* @OPENSSL_realloc(i8*, i64) local_unnamed_addr #1

declare void @OPENSSL_free(i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @sk_pop_free_ex(%struct.stack_st*, void (void (i8*)*, i8*)*, void (i8*)*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @sk_CONF_VALUE_call_free_func(void (i8*)* nocapture, i8*) #5 {
  %3 = bitcast void (i8*)* %0 to void (%struct.conf_value_st*)*
  %4 = bitcast i8* %1 to %struct.conf_value_st*
  tail call void %3(%struct.conf_value_st* %4) #6
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
