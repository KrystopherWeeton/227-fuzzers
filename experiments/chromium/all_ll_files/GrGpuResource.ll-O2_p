; ModuleID = '../../third_party/skia/src/gpu/GrGpuResource.cpp'
source_filename = "../../third_party/skia/src/gpu/GrGpuResource.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp, i8* }
%class.sk_sp = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.GrGpu = type { %class.SkRefCnt.base, %"class.GrGpu::Stats", %class.sk_sp.1, %"class.std::__1::unique_ptr", i32, %class.GrDirectContext*, %class.SkSTArray, i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.GrGpu::Stats" = type { i8 }
%class.sk_sp.1 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.2, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.2 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkSL::Compiler"* }
%"class.SkSL::Compiler" = type opaque
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.62", %class.sk_sp.68, %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.108", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.127" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.5", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.50" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.4 }
%class.sk_sp.4 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap, %class.SkTHashMap.15, %class.SkTArray.24, %class.SkTArray.26, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.8"*, i64 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.26, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.27 }
%class.sk_sp.27 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.9" }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.15 = type { %class.SkTHashTable.16 }
%class.SkTHashTable.16 = type { i32, i32, %class.SkAutoTArray.17 }
%class.SkAutoTArray.17 = type { %"class.std::__1::unique_ptr.18" }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.146" }
%"struct.std::__1::pair.146" = type { i32, %class.SkTArray.147* }
%class.SkTArray.147 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.24 = type { %"class.std::__1::unique_ptr.25"*, i64 }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.147, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.26 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.37" }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.40 }
%class.SkFibBlockSizes.40 = type { i32 }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.68 = type { %class.GrGpu* }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %class.GrResourceCache* }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.80, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.96, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.72 }
%class.SkTHashTable.72 = type { i32, i32, %class.SkAutoTArray.73 }
%class.SkAutoTArray.73 = type { %"class.std::__1::unique_ptr.74" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.80 = type { %class.SkTHashTable.81 }
%class.SkTHashTable.81 = type { i32, i32, %class.SkAutoTArray.82 }
%class.SkAutoTArray.82 = type { %"class.std::__1::unique_ptr.83" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.89, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.89 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.90" }
%"struct.std::__1::atomic.90" = type { %"struct.std::__1::__atomic_base.91" }
%"struct.std::__1::__atomic_base.91" = type { %"struct.std::__1::__atomic_base.92" }
%"struct.std::__1::__atomic_base.92" = type { %"struct.std::__1::__cxx_atomic_impl.93" }
%"struct.std::__1::__cxx_atomic_impl.93" = type { %"struct.std::__1::__cxx_atomic_base_impl.94" }
%"struct.std::__1::__cxx_atomic_base_impl.94" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.95, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.95 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.134 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.134 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.135, void (i8*)*, i8* }
%class.SkNVRefCnt.135 = type { %"struct.std::__1::atomic" }
%class.SkTHashMap.96 = type { %class.SkTHashTable.97 }
%class.SkTHashTable.97 = type { i32, i32, %class.SkAutoTArray.98 }
%class.SkAutoTArray.98 = type { %"class.std::__1::unique_ptr.99" }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.1, %class.sk_sp.111, %class.sk_sp.111 }
%class.sk_sp.111 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.133 }
%class.SkAlignedSTStorage = type { [64 x i8] }
%class.SkTArray.133 = type { %"struct.GrGpu::SubmittedProc"*, i64 }
%"struct.GrGpu::SubmittedProc" = type { void (i8*, i1)*, i8* }
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.SkTraceMemoryDump = type { i32 (...)** }
%"class.GrGpuResource::ProxyAccess" = type { %class.GrGpuResource* }

$_ZN13GrGpuResource9onReleaseEv = comdat any

$_ZN13GrGpuResource9onAbandonEv = comdat any

$_ZNK13GrGpuResource16setMemoryBackingEP17SkTraceMemoryDumpRK8SkString = comdat any

$_ZNK13GrGpuResource17computeScratchKeyEP12GrScratchKey = comdat any

@_ZTV13GrGpuResource = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGpuResource*, %class.SkTraceMemoryDump*)* @_ZNK13GrGpuResource20dumpMemoryStatisticsEP17SkTraceMemoryDump to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrGpuResource*)* @_ZN13GrGpuResourceD2Ev to i8*), i8* bitcast (void (%class.GrGpuResource*)* @_ZN13GrGpuResourceD0Ev to i8*), i8* bitcast (void (%class.GrGpuResource*)* @_ZN13GrGpuResource9onReleaseEv to i8*), i8* bitcast (void (%class.GrGpuResource*)* @_ZN13GrGpuResource9onAbandonEv to i8*), i8* bitcast (void (%class.GrGpuResource*, %class.SkTraceMemoryDump*, %class.SkString*)* @_ZNK13GrGpuResource16setMemoryBackingEP17SkTraceMemoryDumpRK8SkString to i8*), i8* bitcast (void (%class.GrGpuResource*, %class.GrScratchKey*)* @_ZNK13GrGpuResource17computeScratchKeyEP12GrScratchKey to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str = private unnamed_addr constant [8 x i8] c"Scratch\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"Other\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"bytes\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"category\00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c"purgeable_size\00", align 1
@.str.7 = private unnamed_addr constant [29 x i8] c"skia/gpu_resources/resource_\00", align 1
@_ZZN13GrGpuResource14CreateUniqueIDEvE6nextID = internal global { { i32 } } { { i32 } { i32 1 } }, align 4

@_ZN13GrGpuResourceD1Ev = hidden unnamed_addr alias void (%class.GrGpuResource*), void (%class.GrGpuResource*)* @_ZN13GrGpuResourceD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13GrGpuResourceC2EP5GrGpu(%class.GrGpuResource*, %class.GrGpu*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %3, align 4
  %4 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV13GrGpuResource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 4, i32 0, i32 0
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 5, i32 0, i32 0, i32 1, i32 0, i64 0
  store i32* %8, i32** %7, align 8
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 5, i32 0, i32 0, i32 1, i32 0, i64 1
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 6, i32 0, i32 0, i32 1, i32 0, i64 0
  store i32* %11, i32** %10, align 8
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 6, i32 0, i32 0, i32 1, i32 0, i64 1
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 6, i32 1, i32 0
  %14 = bitcast %class.SkData** %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #8
  %15 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 7
  store %class.GrGpu* %1, %class.GrGpu** %15, align 8
  %16 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 8
  store i64 -1, i64* %16, align 8
  %17 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 9
  store i8 1, i8* %17, align 8
  %18 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 10
  store i8 0, i8* %18, align 1
  br label %19

19:                                               ; preds = %19, %2
  %20 = atomicrmw add i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN13GrGpuResource14CreateUniqueIDEvE6nextID, i64 0, i32 0, i32 0), i32 1 monotonic
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %19, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 11, i32 0
  store i32 %20, i32* %23, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN13GrGpuResource14CreateUniqueIDEv() local_unnamed_addr #1 align 2 {
  br label %1

1:                                                ; preds = %1, %0
  %2 = atomicrmw add i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN13GrGpuResource14CreateUniqueIDEvE6nextID, i64 0, i32 0, i32 0), i32 1 monotonic
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %1, label %4

4:                                                ; preds = %1
  ret i32 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13GrGpuResource17registerWithCacheE10SkBudgeted(%class.GrGpuResource*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = xor i1 %1, true
  %4 = zext i1 %3 to i8
  %5 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 9
  store i8 %4, i8* %5, align 8
  %6 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 5
  %7 = bitcast %class.GrGpuResource* %0 to void (%class.GrGpuResource*, %class.GrScratchKey*)***
  %8 = load void (%class.GrGpuResource*, %class.GrScratchKey*)**, void (%class.GrGpuResource*, %class.GrScratchKey*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.GrGpuResource*, %class.GrScratchKey*)*, void (%class.GrGpuResource*, %class.GrScratchKey*)** %8, i64 7
  %10 = load void (%class.GrGpuResource*, %class.GrScratchKey*)*, void (%class.GrGpuResource*, %class.GrScratchKey*)** %9, align 8
  tail call void %10(%class.GrGpuResource* %0, %class.GrScratchKey* %6) #8
  %11 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 7
  %12 = load %class.GrGpu*, %class.GrGpu** %11, align 8
  %13 = getelementptr inbounds %class.GrGpu, %class.GrGpu* %12, i64 0, i32 5
  %14 = load %class.GrDirectContext*, %class.GrDirectContext** %13, align 8
  %15 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %14, i64 0, i32 5, i32 0, i32 0, i32 0
  %16 = load %class.GrResourceCache*, %class.GrResourceCache** %15, align 8
  tail call void @_ZN15GrResourceCache14insertResourceEP13GrGpuResource(%class.GrResourceCache* %16, %class.GrGpuResource* %0) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13GrGpuResource24registerWithCacheWrappedE15GrWrapCacheable(%class.GrGpuResource*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = select i1 %1, i8 2, i8 1
  %4 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 9
  store i8 %3, i8* %4, align 8
  %5 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 10
  store i8 1, i8* %5, align 1
  %6 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 7
  %7 = load %class.GrGpu*, %class.GrGpu** %6, align 8
  %8 = getelementptr inbounds %class.GrGpu, %class.GrGpu* %7, i64 0, i32 5
  %9 = load %class.GrDirectContext*, %class.GrDirectContext** %8, align 8
  %10 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %9, i64 0, i32 5, i32 0, i32 0, i32 0
  %11 = load %class.GrResourceCache*, %class.GrResourceCache** %10, align 8
  tail call void @_ZN15GrResourceCache14insertResourceEP13GrGpuResource(%class.GrResourceCache* %11, %class.GrGpuResource* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13GrGpuResourceD2Ev(%class.GrGpuResource*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV13GrGpuResource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 6, i32 1, i32 0
  %4 = load %class.SkData*, %class.SkData** %3, align 8
  %5 = icmp eq %class.SkData* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkData, %class.SkData* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %4) #8
  %11 = bitcast %class.SkData* %4 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %11) #8
  br label %12

12:                                               ; preds = %10, %6, %1
  %13 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 6, i32 0, i32 0, i32 1, i32 0, i64 0
  %16 = icmp eq i32* %14, %15
  br i1 %16, label %19, label %17

17:                                               ; preds = %12
  %18 = bitcast i32* %14 to i8*
  tail call void @_Z7sk_freePv(i8* %18) #8
  br label %19

19:                                               ; preds = %12, %17
  %20 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8
  %22 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 5, i32 0, i32 0, i32 1, i32 0, i64 0
  %23 = icmp eq i32* %21, %22
  br i1 %23, label %26, label %24

24:                                               ; preds = %19
  %25 = bitcast i32* %21 to i8*
  tail call void @_Z7sk_freePv(i8* %25) #8
  br label %26

26:                                               ; preds = %19, %24
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN13GrGpuResourceD0Ev(%class.GrGpuResource* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13GrGpuResource7releaseEv(%class.GrGpuResource*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %class.GrGpuResource* %0 to void (%class.GrGpuResource*)***
  %3 = load void (%class.GrGpuResource*)**, void (%class.GrGpuResource*)*** %2, align 8
  %4 = getelementptr inbounds void (%class.GrGpuResource*)*, void (%class.GrGpuResource*)** %3, i64 4
  %5 = load void (%class.GrGpuResource*)*, void (%class.GrGpuResource*)** %4, align 8
  tail call void %5(%class.GrGpuResource* %0) #8
  %6 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 7
  %7 = load %class.GrGpu*, %class.GrGpu** %6, align 8
  %8 = getelementptr inbounds %class.GrGpu, %class.GrGpu* %7, i64 0, i32 5
  %9 = load %class.GrDirectContext*, %class.GrDirectContext** %8, align 8
  %10 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %9, i64 0, i32 5, i32 0, i32 0, i32 0
  %11 = load %class.GrResourceCache*, %class.GrResourceCache** %10, align 8
  tail call void @_ZN15GrResourceCache14removeResourceEP13GrGpuResource(%class.GrResourceCache* %11, %class.GrGpuResource* %0) #8
  %12 = bitcast %class.GrGpu** %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13GrGpuResource7abandonEv(%class.GrGpuResource*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 7
  %3 = load %class.GrGpu*, %class.GrGpu** %2, align 8
  %4 = icmp eq %class.GrGpu* %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = bitcast %class.GrGpuResource* %0 to void (%class.GrGpuResource*)***
  %7 = load void (%class.GrGpuResource*)**, void (%class.GrGpuResource*)*** %6, align 8
  %8 = getelementptr inbounds void (%class.GrGpuResource*)*, void (%class.GrGpuResource*)** %7, i64 5
  %9 = load void (%class.GrGpuResource*)*, void (%class.GrGpuResource*)** %8, align 8
  tail call void %9(%class.GrGpuResource* %0) #8
  %10 = load %class.GrGpu*, %class.GrGpu** %2, align 8
  %11 = getelementptr inbounds %class.GrGpu, %class.GrGpu* %10, i64 0, i32 5
  %12 = load %class.GrDirectContext*, %class.GrDirectContext** %11, align 8
  %13 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %12, i64 0, i32 5, i32 0, i32 0, i32 0
  %14 = load %class.GrResourceCache*, %class.GrResourceCache** %13, align 8
  tail call void @_ZN15GrResourceCache14removeResourceEP13GrGpuResource(%class.GrResourceCache* %14, %class.GrGpuResource* %0) #8
  %15 = bitcast %class.GrGpu** %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false)
  br label %16

16:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13GrGpuResource20dumpMemoryStatisticsEP17SkTraceMemoryDump(%class.GrGpuResource*, %class.SkTraceMemoryDump*) unnamed_addr #0 align 2 {
  %3 = alloca %class.SkString, align 8
  %4 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 10
  %5 = load i8, i8* %4, align 1, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = bitcast %class.SkTraceMemoryDump* %1 to i1 (%class.SkTraceMemoryDump*)***
  %9 = load i1 (%class.SkTraceMemoryDump*)**, i1 (%class.SkTraceMemoryDump*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%class.SkTraceMemoryDump*)*, i1 (%class.SkTraceMemoryDump*)** %9, i64 5
  %11 = load i1 (%class.SkTraceMemoryDump*)*, i1 (%class.SkTraceMemoryDump*)** %10, align 8
  %12 = tail call zeroext i1 %11(%class.SkTraceMemoryDump* %1) #8
  br i1 %12, label %13, label %34

13:                                               ; preds = %2, %7
  %14 = bitcast %class.SkString* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  %15 = getelementptr inbounds %class.SkString, %class.SkString* %3, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %15, align 8, !alias.scope !3
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7, i64 0, i64 0)) #8
  %16 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 11, i32 0
  %17 = load i32, i32* %16, align 4, !noalias !3
  call void @_ZN8SkString9insertU32Emj(%class.SkString* nonnull %3, i64 -1, i32 %17) #8
  %18 = bitcast %class.GrGpuResource* %0 to i8* (%class.GrGpuResource*)***
  %19 = load i8* (%class.GrGpuResource*)**, i8* (%class.GrGpuResource*)*** %18, align 8
  %20 = getelementptr inbounds i8* (%class.GrGpuResource*)*, i8* (%class.GrGpuResource*)** %19, i64 1
  %21 = load i8* (%class.GrGpuResource*)*, i8* (%class.GrGpuResource*)** %20, align 8
  %22 = call i8* %21(%class.GrGpuResource* %0) #8
  %23 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 8
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, -1
  br i1 %25, label %26, label %32

26:                                               ; preds = %13
  %27 = bitcast %class.GrGpuResource* %0 to i64 (%class.GrGpuResource*)***
  %28 = load i64 (%class.GrGpuResource*)**, i64 (%class.GrGpuResource*)*** %27, align 8
  %29 = getelementptr inbounds i64 (%class.GrGpuResource*)*, i64 (%class.GrGpuResource*)** %28, i64 8
  %30 = load i64 (%class.GrGpuResource*)*, i64 (%class.GrGpuResource*)** %29, align 8
  %31 = call i64 %30(%class.GrGpuResource* %0) #8
  store i64 %31, i64* %23, align 8
  br label %32

32:                                               ; preds = %13, %26
  %33 = phi i64 [ %31, %26 ], [ %24, %13 ]
  call void @_ZNK13GrGpuResource24dumpMemoryStatisticsPrivEP17SkTraceMemoryDumpRK8SkStringPKcm(%class.GrGpuResource* %0, %class.SkTraceMemoryDump* %1, %class.SkString* nonnull dereferenceable(8) %3, i8* %22, i64 %33)
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  br label %34

34:                                               ; preds = %7, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13GrGpuResource24dumpMemoryStatisticsPrivEP17SkTraceMemoryDumpRK8SkStringPKcm(%class.GrGpuResource*, %class.SkTraceMemoryDump*, %class.SkString* dereferenceable(8), i8*, i64) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = getelementptr inbounds i32, i32* %7, i64 1
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 65535
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 6, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = icmp eq i8* %14, null
  %16 = select i1 %15, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i8* %14
  br label %17

17:                                               ; preds = %5, %12
  %18 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), %5 ], [ %16, %12 ]
  %19 = getelementptr inbounds %class.SkString, %class.SkString* %2, i64 0, i32 0, i32 0
  %20 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %19, align 8
  %21 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %20, i64 0, i32 2
  %22 = bitcast %class.SkTraceMemoryDump* %1 to void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)***
  %23 = load void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)**, void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)*** %22, align 8
  %24 = load void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)*, void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)** %23, align 8
  tail call void %24(%class.SkTraceMemoryDump* %1, i8* %21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i64 %4) #8
  %25 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %19, align 8
  %26 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %25, i64 0, i32 2
  %27 = bitcast %class.SkTraceMemoryDump* %1 to void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)***
  %28 = load void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)**, void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)*** %27, align 8
  %29 = getelementptr inbounds void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)*, void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)** %28, i64 1
  %30 = load void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)*, void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)** %29, align 8
  tail call void %30(%class.SkTraceMemoryDump* %1, i8* %26, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %3) #8
  %31 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %19, align 8
  %32 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %31, i64 0, i32 2
  %33 = load void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)**, void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)*** %27, align 8
  %34 = getelementptr inbounds void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)*, void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)** %33, i64 1
  %35 = load void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)*, void (%class.SkTraceMemoryDump*, i8*, i8*, i8*)** %34, align 8
  tail call void %35(%class.SkTraceMemoryDump* %1, i8* %32, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0), i8* nonnull %18) #8
  %36 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %58

39:                                               ; preds = %17
  %40 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 acquire, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %58

43:                                               ; preds = %39
  %44 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 9
  %45 = load i8, i8* %44, align 8
  %46 = icmp eq i8 %45, 2
  br i1 %46, label %47, label %53

47:                                               ; preds = %43
  %48 = load i32*, i32** %6, align 8
  %49 = getelementptr inbounds i32, i32* %48, i64 1
  %50 = load i32, i32* %49, align 4
  %51 = and i32 %50, 65535
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %58

53:                                               ; preds = %43, %47
  %54 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %19, align 8
  %55 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %54, i64 0, i32 2
  %56 = load void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)**, void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)*** %22, align 8
  %57 = load void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)*, void (%class.SkTraceMemoryDump*, i8*, i8*, i8*, i64)** %56, align 8
  tail call void %57(%class.SkTraceMemoryDump* %1, i8* %55, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i64 %4) #8
  br label %58

58:                                               ; preds = %17, %39, %53, %47
  %59 = bitcast %class.SkTraceMemoryDump* %1 to i1 (%class.SkTraceMemoryDump*)***
  %60 = load i1 (%class.SkTraceMemoryDump*)**, i1 (%class.SkTraceMemoryDump*)*** %59, align 8
  %61 = getelementptr inbounds i1 (%class.SkTraceMemoryDump*)*, i1 (%class.SkTraceMemoryDump*)** %60, i64 5
  %62 = load i1 (%class.SkTraceMemoryDump*)*, i1 (%class.SkTraceMemoryDump*)** %61, align 8
  %63 = tail call zeroext i1 %62(%class.SkTraceMemoryDump* %1) #8
  br i1 %63, label %64, label %74

64:                                               ; preds = %58
  %65 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %19, align 8
  %66 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %65, i64 0, i32 2
  %67 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 10
  %68 = load i8, i8* %67, align 1, !range !2
  %69 = icmp ne i8 %68, 0
  %70 = bitcast %class.SkTraceMemoryDump* %1 to void (%class.SkTraceMemoryDump*, i8*, i1)***
  %71 = load void (%class.SkTraceMemoryDump*, i8*, i1)**, void (%class.SkTraceMemoryDump*, i8*, i1)*** %70, align 8
  %72 = getelementptr inbounds void (%class.SkTraceMemoryDump*, i8*, i1)*, void (%class.SkTraceMemoryDump*, i8*, i1)** %71, i64 6
  %73 = load void (%class.SkTraceMemoryDump*, i8*, i1)*, void (%class.SkTraceMemoryDump*, i8*, i1)** %72, align 8
  tail call void %73(%class.SkTraceMemoryDump* %1, i8* %66, i1 zeroext %69) #8
  br label %74

74:                                               ; preds = %64, %58
  %75 = bitcast %class.GrGpuResource* %0 to void (%class.GrGpuResource*, %class.SkTraceMemoryDump*, %class.SkString*)***
  %76 = load void (%class.GrGpuResource*, %class.SkTraceMemoryDump*, %class.SkString*)**, void (%class.GrGpuResource*, %class.SkTraceMemoryDump*, %class.SkString*)*** %75, align 8
  %77 = getelementptr inbounds void (%class.GrGpuResource*, %class.SkTraceMemoryDump*, %class.SkString*)*, void (%class.GrGpuResource*, %class.SkTraceMemoryDump*, %class.SkString*)** %76, i64 6
  %78 = load void (%class.GrGpuResource*, %class.SkTraceMemoryDump*, %class.SkString*)*, void (%class.GrGpuResource*, %class.SkTraceMemoryDump*, %class.SkString*)** %77, align 8
  tail call void %78(%class.GrGpuResource* %0, %class.SkTraceMemoryDump* %1, %class.SkString* dereferenceable(8) %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13GrGpuResource15getResourceNameEv(%class.SkString* noalias sret, %class.GrGpuResource* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %3, align 8
  tail call void @_ZN8SkStringC1EPKc(%class.SkString* %0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7, i64 0, i64 0)) #8
  %4 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %1, i64 0, i32 11, i32 0
  %5 = load i32, i32* %4, align 4
  tail call void @_ZN8SkString9insertU32Emj(%class.SkString* %0, i64 -1, i32 %5) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK13GrGpuResource11isPurgeableEv(%class.GrGpuResource* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i32, i32* %2 monotonic, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %20

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 acquire, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %20

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 9
  %11 = load i8, i8* %10, align 8
  %12 = icmp eq i8 %11, 2
  br i1 %12, label %13, label %20

13:                                               ; preds = %9
  %14 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %15 = load i32*, i32** %14, align 8
  %16 = getelementptr inbounds i32, i32* %15, i64 1
  %17 = load i32, i32* %16, align 4
  %18 = and i32 %17, 65535
  %19 = icmp eq i32 %18, 0
  br label %20

20:                                               ; preds = %1, %9, %13, %5
  %21 = phi i1 [ false, %5 ], [ false, %1 ], [ true, %9 ], [ %19, %13 ]
  ret i1 %21
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK13GrGpuResource6hasRefEv(%class.GrGpuResource* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i32, i32* %2 monotonic, align 4
  %4 = icmp ne i32 %3, 0
  ret i1 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK13GrGpuResource24hasNoCommandBufferUsagesEv(%class.GrGpuResource* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i32, i32* %2 acquire, align 4
  %4 = icmp eq i32 %3, 0
  ret i1 %4
}

declare void @_ZN8SkStringC1EPKc(%class.SkString*, i8*) unnamed_addr #6

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.GrDirectContext* @_ZNK13GrGpuResource10getContextEv(%class.GrGpuResource* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 7
  %3 = load %class.GrGpu*, %class.GrGpu** %2, align 8
  %4 = icmp eq %class.GrGpu* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.GrGpu, %class.GrGpu* %3, i64 0, i32 5
  %7 = load %class.GrDirectContext*, %class.GrDirectContext** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %class.GrDirectContext* [ %7, %5 ], [ null, %1 ]
  ret %class.GrDirectContext* %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.GrDirectContext* @_ZN13GrGpuResource10getContextEv(%class.GrGpuResource* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 7
  %3 = load %class.GrGpu*, %class.GrGpu** %2, align 8
  %4 = icmp eq %class.GrGpu* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.GrGpu, %class.GrGpu* %3, i64 0, i32 5
  %7 = load %class.GrDirectContext*, %class.GrDirectContext** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %class.GrDirectContext* [ %7, %5 ], [ null, %1 ]
  ret %class.GrDirectContext* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13GrGpuResource15removeUniqueKeyEv(%class.GrGpuResource*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 7
  %3 = load %class.GrGpu*, %class.GrGpu** %2, align 8
  %4 = icmp eq %class.GrGpu* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.GrGpu, %class.GrGpu* %3, i64 0, i32 5
  %7 = load %class.GrDirectContext*, %class.GrDirectContext** %6, align 8
  %8 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %7, i64 0, i32 5, i32 0, i32 0, i32 0
  %9 = load %class.GrResourceCache*, %class.GrResourceCache** %8, align 8
  tail call void @_ZN15GrResourceCache15removeUniqueKeyEP13GrGpuResource(%class.GrResourceCache* %9, %class.GrGpuResource* %0) #8
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13GrGpuResource12setUniqueKeyERK11GrUniqueKey(%class.GrGpuResource*, %class.GrUniqueKey* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 9
  %4 = load i8, i8* %3, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 10
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %19, label %10

10:                                               ; preds = %2, %6
  %11 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 7
  %12 = load %class.GrGpu*, %class.GrGpu** %11, align 8
  %13 = icmp eq %class.GrGpu* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %class.GrGpu, %class.GrGpu* %12, i64 0, i32 5
  %16 = load %class.GrDirectContext*, %class.GrDirectContext** %15, align 8
  %17 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %16, i64 0, i32 5, i32 0, i32 0, i32 0
  %18 = load %class.GrResourceCache*, %class.GrResourceCache** %17, align 8
  tail call void @_ZN15GrResourceCache15changeUniqueKeyEP13GrGpuResourceRK11GrUniqueKey(%class.GrResourceCache* %18, %class.GrGpuResource* %0, %class.GrUniqueKey* dereferenceable(56) %1) #8
  br label %19

19:                                               ; preds = %10, %6, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 7
  %4 = load %class.GrGpu*, %class.GrGpu** %3, align 8
  %5 = icmp eq %class.GrGpu* %4, null
  br i1 %5, label %6, label %21

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 acquire, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %26

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = icmp ne i32 %12, 0
  %14 = icmp eq %class.GrGpuResource* %0, null
  %15 = or i1 %14, %13
  br i1 %15, label %26, label %16

16:                                               ; preds = %10
  %17 = bitcast %class.GrGpuResource* %0 to void (%class.GrGpuResource*)***
  %18 = load void (%class.GrGpuResource*)**, void (%class.GrGpuResource*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.GrGpuResource*)*, void (%class.GrGpuResource*)** %18, i64 3
  %20 = load void (%class.GrGpuResource*)*, void (%class.GrGpuResource*)** %19, align 8
  tail call void %20(%class.GrGpuResource* nonnull %0) #8
  br label %26

21:                                               ; preds = %2
  %22 = getelementptr inbounds %class.GrGpu, %class.GrGpu* %4, i64 0, i32 5
  %23 = load %class.GrDirectContext*, %class.GrDirectContext** %22, align 8
  %24 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %23, i64 0, i32 5, i32 0, i32 0, i32 0
  %25 = load %class.GrResourceCache*, %class.GrResourceCache** %24, align 8
  tail call void @_ZN15GrResourceCache24notifyARefCntReachedZeroEP13GrGpuResourceN7GrIORefIS0_E14LastRemovedRefE(%class.GrResourceCache* %25, %class.GrGpuResource* %0, i32 %1) #8
  br label %26

26:                                               ; preds = %6, %10, %16, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13GrGpuResource16removeScratchKeyEv(%class.GrGpuResource*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 7
  %3 = load %class.GrGpu*, %class.GrGpu** %2, align 8
  %4 = icmp eq %class.GrGpu* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = getelementptr inbounds i32, i32* %7, i64 1
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 65535
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %24, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %class.GrGpu, %class.GrGpu* %3, i64 0, i32 5
  %14 = load %class.GrDirectContext*, %class.GrDirectContext** %13, align 8
  %15 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %14, i64 0, i32 5, i32 0, i32 0, i32 0
  %16 = load %class.GrResourceCache*, %class.GrResourceCache** %15, align 8
  tail call void @_ZN15GrResourceCache20willRemoveScratchKeyEPK13GrGpuResource(%class.GrResourceCache* %16, %class.GrGpuResource* %0) #8
  %17 = load i32*, i32** %6, align 8
  %18 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 5, i32 0, i32 0, i32 1, i32 0, i64 0
  %19 = icmp eq i32* %17, %18
  br i1 %19, label %22, label %20

20:                                               ; preds = %12
  %21 = bitcast i32* %17 to i8*
  tail call void @_Z7sk_freePv(i8* %21) #8
  br label %22

22:                                               ; preds = %12, %20
  store i32* %18, i32** %6, align 8
  store i32 0, i32* %18, align 4
  %23 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 5, i32 0, i32 0, i32 1, i32 0, i64 1
  store i32 0, i32* %23, align 4
  br label %24

24:                                               ; preds = %5, %22, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13GrGpuResource12makeBudgetedEv(%class.GrGpuResource*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 7
  %3 = load %class.GrGpu*, %class.GrGpu** %2, align 8
  %4 = icmp eq %class.GrGpu* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 9
  %7 = load i8, i8* %6, align 8
  %8 = icmp eq i8 %7, 1
  br i1 %8, label %9, label %14

9:                                                ; preds = %5
  store i8 0, i8* %6, align 8
  %10 = getelementptr inbounds %class.GrGpu, %class.GrGpu* %3, i64 0, i32 5
  %11 = load %class.GrDirectContext*, %class.GrDirectContext** %10, align 8
  %12 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %11, i64 0, i32 5, i32 0, i32 0, i32 0
  %13 = load %class.GrResourceCache*, %class.GrResourceCache** %12, align 8
  tail call void @_ZN15GrResourceCache21didChangeBudgetStatusEP13GrGpuResource(%class.GrResourceCache* %13, %class.GrGpuResource* %0) #8
  br label %14

14:                                               ; preds = %9, %5, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13GrGpuResource14makeUnbudgetedEv(%class.GrGpuResource*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 7
  %3 = load %class.GrGpu*, %class.GrGpu** %2, align 8
  %4 = icmp eq %class.GrGpu* %3, null
  br i1 %4, label %21, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 9
  %7 = load i8, i8* %6, align 8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %21

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.GrGpuResource, %class.GrGpuResource* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = getelementptr inbounds i32, i32* %11, i64 1
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 65535
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %21

16:                                               ; preds = %9
  store i8 1, i8* %6, align 8
  %17 = getelementptr inbounds %class.GrGpu, %class.GrGpu* %3, i64 0, i32 5
  %18 = load %class.GrDirectContext*, %class.GrDirectContext** %17, align 8
  %19 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %18, i64 0, i32 5, i32 0, i32 0, i32 0
  %20 = load %class.GrResourceCache*, %class.GrResourceCache** %19, align 8
  tail call void @_ZN15GrResourceCache21didChangeBudgetStatusEP13GrGpuResource(%class.GrResourceCache* %20, %class.GrGpuResource* %0) #8
  br label %21

21:                                               ; preds = %9, %16, %5, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13GrGpuResource11ProxyAccess3refEP15GrResourceCache(%"class.GrGpuResource::ProxyAccess"* nocapture readonly, %class.GrResourceCache*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.GrGpuResource::ProxyAccess", %"class.GrGpuResource::ProxyAccess"* %0, i64 0, i32 0
  %4 = load %class.GrGpuResource*, %class.GrGpuResource** %3, align 8
  tail call void @_ZN15GrResourceCache11refResourceEP13GrGpuResource(%class.GrResourceCache* %1, %class.GrGpuResource* %4) #8
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13GrGpuResource9onReleaseEv(%class.GrGpuResource*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13GrGpuResource9onAbandonEv(%class.GrGpuResource*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK13GrGpuResource16setMemoryBackingEP17SkTraceMemoryDumpRK8SkString(%class.GrGpuResource*, %class.SkTraceMemoryDump*, %class.SkString* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK13GrGpuResource17computeScratchKeyEP12GrScratchKey(%class.GrGpuResource*, %class.GrScratchKey*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN15GrResourceCache14insertResourceEP13GrGpuResource(%class.GrResourceCache*, %class.GrGpuResource*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #5

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #6

declare void @_ZN15GrResourceCache14removeResourceEP13GrGpuResource(%class.GrResourceCache*, %class.GrGpuResource*) local_unnamed_addr #6

declare void @_ZN8SkString9insertU32Emj(%class.SkString*, i64, i32) local_unnamed_addr #6

declare void @_ZN15GrResourceCache15removeUniqueKeyEP13GrGpuResource(%class.GrResourceCache*, %class.GrGpuResource*) local_unnamed_addr #6

declare void @_ZN15GrResourceCache15changeUniqueKeyEP13GrGpuResourceRK11GrUniqueKey(%class.GrResourceCache*, %class.GrGpuResource*, %class.GrUniqueKey* dereferenceable(56)) local_unnamed_addr #6

declare void @_ZN15GrResourceCache24notifyARefCntReachedZeroEP13GrGpuResourceN7GrIORefIS0_E14LastRemovedRefE(%class.GrResourceCache*, %class.GrGpuResource*, i32) local_unnamed_addr #6

declare void @_ZN15GrResourceCache20willRemoveScratchKeyEPK13GrGpuResource(%class.GrResourceCache*, %class.GrGpuResource*) local_unnamed_addr #6

declare void @_ZN15GrResourceCache21didChangeBudgetStatusEP13GrGpuResource(%class.GrResourceCache*, %class.GrGpuResource*) local_unnamed_addr #6

declare void @_ZN15GrResourceCache11refResourceEP13GrGpuResource(%class.GrResourceCache*, %class.GrGpuResource*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK13GrGpuResource15getResourceNameEv: argument 0"}
!5 = distinct !{!5, !"_ZNK13GrGpuResource15getResourceNameEv"}
