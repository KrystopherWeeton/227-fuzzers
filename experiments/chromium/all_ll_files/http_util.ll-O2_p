; ModuleID = '../../net/http/http_util.cc'
source_filename = "../../net/http/http_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::HttpUtil::HeadersIterator" = type { %"class.base::StringTokenizerT", %"class.std::__1::__wrap_iter.16", %"class.std::__1::__wrap_iter.16", %"class.std::__1::__wrap_iter.16", %"class.std::__1::__wrap_iter.16" }
%"class.base::StringTokenizerT" = type <{ %"class.std::__1::__wrap_iter.16", %"class.std::__1::__wrap_iter.16", %"class.std::__1::__wrap_iter.16", %"class.std::__1::__wrap_iter.16", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__wrap_iter.16" = type { i8* }
%"class.net::HttpUtil::ValuesIterator" = type <{ %"class.base::StringTokenizerT", %"class.std::__1::__wrap_iter.16", %"class.std::__1::__wrap_iter.16", i8, [7 x i8] }>
%"class.net::HttpUtil::NameValuePairsIterator" = type <{ %"class.net::HttpUtil::ValuesIterator", i8, [7 x i8], %"class.std::__1::__wrap_iter.16", %"class.std::__1::__wrap_iter.16", %"class.std::__1::__wrap_iter.16", %"class.std::__1::__wrap_iter.16", %"class.std::__1::basic_string", i8, i8, i8, [5 x i8] }>
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.4" }
%"struct.std::__1::pair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::pair"* }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"class.net::HttpByteRange"*, %"class.net::HttpByteRange"*, %"class.std::__1::__compressed_pair.11" }
%"class.net::HttpByteRange" = type <{ i64, i64, i64, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.net::HttpByteRange"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::StringTokenizerT.17" = type <{ i8*, i8*, i8*, i8*, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.std::__1::basic_string"* }
%"class.net::(anonymous namespace)::AcceptLanguageBuilder" = type { %"class.std::__1::basic_string", %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.27", %"class.std::__1::__compressed_pair.36", %"class.std::__1::__compressed_pair.41", %"class.std::__1::__compressed_pair.43", [4 x i8] }>
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29", %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { i64 }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { float }
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { i32*, i32*, %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { i32* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.53", %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.std::__1::basic_string" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }

$_ZN4base5EraseIcNSt3__111char_traitsIcEENS1_9allocatorIcEEcEEmRNS1_12basic_stringIT_T0_T1_EERKT2_ = comdat any

$_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE4findIS6_EENS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_ = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm = comdat any

$_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKcE12QuickGetNextEv = comdat any

$_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKcE11FullGetNextEv = comdat any

$_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE12QuickGetNextEv = comdat any

$_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE11FullGetNextEv = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_ = comdat any

@.str = private unnamed_addr constant [4 x i8] c"*/*\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"charset\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"boundary\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"bytes\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"GET\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"HEAD\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"OPTIONS\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"TRACE\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"PUT\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"DELETE\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"proxy-\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"sec-\00", align 1
@_ZN3net12_GLOBAL__N_122kForbiddenHeaderFieldsE = internal constant [21 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.62, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.65, i32 0, i32 0)], align 16
@_ZZN3net8HttpUtil21IsNonCoalescingHeaderEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEE21kNonCoalescingHeaders = internal constant [9 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.20, i32 0, i32 0)], align 16
@.str.12 = private unnamed_addr constant [5 x i8] c"date\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c"expires\00", align 1
@.str.14 = private unnamed_addr constant [14 x i8] c"last-modified\00", align 1
@.str.15 = private unnamed_addr constant [9 x i8] c"location\00", align 1
@.str.16 = private unnamed_addr constant [12 x i8] c"retry-after\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"set-cookie\00", align 1
@.str.18 = private unnamed_addr constant [17 x i8] c"www-authenticate\00", align 1
@.str.19 = private unnamed_addr constant [19 x i8] c"proxy-authenticate\00", align 1
@.str.20 = private unnamed_addr constant [26 x i8] c"strict-transport-security\00", align 1
@.str.21 = private unnamed_addr constant [3 x i8] c" \09\00", align 1
@.str.22 = private unnamed_addr constant [5 x i8] c"http\00", align 1
@.str.23 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.24 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.25 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.26 = private unnamed_addr constant [3 x i8] c"\0A\0A\00", align 1
@.str.27 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.29 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@.str.30 = private unnamed_addr constant [2 x i8] c"i\00", align 1
@.str.31 = private unnamed_addr constant [11 x i8] c",%s;q=0.%d\00", align 1
@.str.32 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.34 = private unnamed_addr constant [2 x i8] c"q\00", align 1
@.str.35 = private unnamed_addr constant [6 x i8] c"1.000\00", align 1
@.str.39 = private unnamed_addr constant [7 x i8] c"x-gzip\00", align 1
@.str.41 = private unnamed_addr constant [11 x i8] c"x-compress\00", align 1
@.str.43 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.44 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.46 = private unnamed_addr constant [15 x i8] c"accept-charset\00", align 1
@.str.47 = private unnamed_addr constant [16 x i8] c"accept-encoding\00", align 1
@.str.48 = private unnamed_addr constant [31 x i8] c"access-control-request-headers\00", align 1
@.str.49 = private unnamed_addr constant [30 x i8] c"access-control-request-method\00", align 1
@.str.50 = private unnamed_addr constant [11 x i8] c"connection\00", align 1
@.str.51 = private unnamed_addr constant [15 x i8] c"content-length\00", align 1
@.str.52 = private unnamed_addr constant [7 x i8] c"cookie\00", align 1
@.str.53 = private unnamed_addr constant [8 x i8] c"cookie2\00", align 1
@.str.54 = private unnamed_addr constant [4 x i8] c"dnt\00", align 1
@.str.55 = private unnamed_addr constant [7 x i8] c"expect\00", align 1
@.str.56 = private unnamed_addr constant [5 x i8] c"host\00", align 1
@.str.57 = private unnamed_addr constant [11 x i8] c"keep-alive\00", align 1
@.str.58 = private unnamed_addr constant [7 x i8] c"origin\00", align 1
@.str.59 = private unnamed_addr constant [8 x i8] c"referer\00", align 1
@.str.60 = private unnamed_addr constant [3 x i8] c"te\00", align 1
@.str.61 = private unnamed_addr constant [8 x i8] c"trailer\00", align 1
@.str.62 = private unnamed_addr constant [18 x i8] c"transfer-encoding\00", align 1
@.str.63 = private unnamed_addr constant [8 x i8] c"upgrade\00", align 1
@.str.64 = private unnamed_addr constant [11 x i8] c"user-agent\00", align 1
@.str.65 = private unnamed_addr constant [4 x i8] c"via\00", align 1
@.str.68 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.69 = private unnamed_addr constant [4 x i8] c",%s\00", align 1
@.str.71 = private unnamed_addr constant [2 x i8] c"-\00", align 1

@_ZN3net8HttpUtil15HeadersIteratorC1ENSt3__111__wrap_iterIPKcEES6_RKNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE = hidden unnamed_addr alias void (%"class.net::HttpUtil::HeadersIterator"*, i8*, i8*, %"class.std::__1::basic_string"*), void (%"class.net::HttpUtil::HeadersIterator"*, i8*, i8*, %"class.std::__1::basic_string"*)* @_ZN3net8HttpUtil15HeadersIteratorC2ENSt3__111__wrap_iterIPKcEES6_RKNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE
@_ZN3net8HttpUtil15HeadersIteratorD1Ev = hidden unnamed_addr alias void (%"class.net::HttpUtil::HeadersIterator"*), void (%"class.net::HttpUtil::HeadersIterator"*)* @_ZN3net8HttpUtil15HeadersIteratorD2Ev
@_ZN3net8HttpUtil14ValuesIteratorC1ENSt3__111__wrap_iterIPKcEES6_cb = hidden unnamed_addr alias void (%"class.net::HttpUtil::ValuesIterator"*, i8*, i8*, i8, i1), void (%"class.net::HttpUtil::ValuesIterator"*, i8*, i8*, i8, i1)* @_ZN3net8HttpUtil14ValuesIteratorC2ENSt3__111__wrap_iterIPKcEES6_cb
@_ZN3net8HttpUtil14ValuesIteratorC1ERKS1_ = hidden unnamed_addr alias void (%"class.net::HttpUtil::ValuesIterator"*, %"class.net::HttpUtil::ValuesIterator"*), void (%"class.net::HttpUtil::ValuesIterator"*, %"class.net::HttpUtil::ValuesIterator"*)* @_ZN3net8HttpUtil14ValuesIteratorC2ERKS1_
@_ZN3net8HttpUtil14ValuesIteratorD1Ev = hidden unnamed_addr alias void (%"class.net::HttpUtil::ValuesIterator"*), void (%"class.net::HttpUtil::ValuesIterator"*)* @_ZN3net8HttpUtil14ValuesIteratorD2Ev
@_ZN3net8HttpUtil22NameValuePairsIteratorC1ENSt3__111__wrap_iterIPKcEES6_cNS1_6ValuesENS1_6QuotesE = hidden unnamed_addr alias void (%"class.net::HttpUtil::NameValuePairsIterator"*, i8*, i8*, i8, i32, i32), void (%"class.net::HttpUtil::NameValuePairsIterator"*, i8*, i8*, i8, i32, i32)* @_ZN3net8HttpUtil22NameValuePairsIteratorC2ENSt3__111__wrap_iterIPKcEES6_cNS1_6ValuesENS1_6QuotesE
@_ZN3net8HttpUtil22NameValuePairsIteratorC1ENSt3__111__wrap_iterIPKcEES6_c = hidden unnamed_addr alias void (%"class.net::HttpUtil::NameValuePairsIterator"*, i8*, i8*, i8), void (%"class.net::HttpUtil::NameValuePairsIterator"*, i8*, i8*, i8)* @_ZN3net8HttpUtil22NameValuePairsIteratorC2ENSt3__111__wrap_iterIPKcEES6_c
@_ZN3net8HttpUtil22NameValuePairsIteratorC1ERKS1_ = hidden unnamed_addr alias void (%"class.net::HttpUtil::NameValuePairsIterator"*, %"class.net::HttpUtil::NameValuePairsIterator"*), void (%"class.net::HttpUtil::NameValuePairsIterator"*, %"class.net::HttpUtil::NameValuePairsIterator"*)* @_ZN3net8HttpUtil22NameValuePairsIteratorC2ERKS1_
@_ZN3net8HttpUtil22NameValuePairsIteratorD1Ev = hidden unnamed_addr alias void (%"class.net::HttpUtil::NameValuePairsIterator"*), void (%"class.net::HttpUtil::NameValuePairsIterator"*)* @_ZN3net8HttpUtil22NameValuePairsIteratorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net8HttpUtil14SpecForRequestERK4GURL(%"class.std::__1::basic_string"* noalias sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.GURL, align 8
  %4 = bitcast %class.GURL* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %4) #17
  call void @_ZN3net21SimplifyUrlForRequestERK4GURL(%class.GURL* nonnull sret %3, %class.GURL* dereferenceable(120) %1) #17
  %5 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* nonnull %3) #17
  %6 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %12 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false) #17
  br label %18

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %15, i64 %17) #17
  br label %18

18:                                               ; preds = %10, %13
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %4) #17
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN3net21SimplifyUrlForRequestERK4GURL(%class.GURL* sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net8HttpUtil16ParseContentTypeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPS7_SA_PbSA_(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* nocapture, i8* nocapture, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.base::BasicStringPiece", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.base::BasicStringPiece", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #17
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #17
  %19 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #17
  %20 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #17
  %22 = call zeroext i1 @_ZN3net13ParseMimeTypeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPS6_PNS0_6vectorINS0_4pairIS6_S6_EENS4_ISC_EEEE(%"class.std::__1::basic_string"* dereferenceable(24) %0, %"class.std::__1::basic_string"* nonnull %7, %"class.std::__1::vector"* nonnull %8) #17
  br i1 %22, label %23, label %274

23:                                               ; preds = %5
  %24 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp eq i64 %31, 3
  br i1 %32, label %33, label %36

33:                                               ; preds = %23
  %34 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3) #17
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %274, label %36

36:                                               ; preds = %23, %33
  %37 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #17
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 0, i64 24, i1 false) #17
  %40 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %20, align 8
  %41 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %21, align 8
  %42 = icmp eq %"struct.std::__1::pair"* %40, %41
  br i1 %42, label %69, label %43

43:                                               ; preds = %36
  %44 = icmp ne %"class.std::__1::basic_string"* %4, null
  %45 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %46 = bitcast %"class.base::BasicStringPiece"* %13 to i8*
  %47 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %13, i64 0, i32 0
  %48 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %13, i64 0, i32 1
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %58 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %59 = bitcast %"class.base::BasicStringPiece"* %11 to i8*
  %60 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %11, i64 0, i32 0
  %61 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %11, i64 0, i32 1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %65 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  br label %100

69:                                               ; preds = %218, %36
  %70 = phi i8 [ 0, %36 ], [ %219, %218 ]
  %71 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  br label %80

78:                                               ; preds = %69
  %79 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  br label %80

80:                                               ; preds = %75, %78
  %81 = phi i8* [ %77, %75 ], [ %79, %78 ]
  %82 = icmp eq i8* %81, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %80
  %84 = call i64 @strlen(i8* nonnull %81) #17
  br label %88

85:                                               ; preds = %80
  %86 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.43, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.44, i64 0, i64 0)) #17
  %87 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #17
  br label %88

88:                                               ; preds = %83, %85
  %89 = phi i64 [ 0, %85 ], [ %84, %83 ]
  %90 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  %92 = load i8, i8* %91, align 1
  %93 = icmp slt i8 %92, 0
  %94 = load i8*, i8** %17, align 8
  %95 = select i1 %93, i8* %94, i8* %16
  %96 = load i64, i64* %18, align 8
  %97 = zext i8 %92 to i64
  %98 = select i1 %93, i64 %96, i64 %97
  %99 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %81, i64 %89, i8* %95, i64 %98) #17
  br i1 %99, label %241, label %223

100:                                              ; preds = %43, %218
  %101 = phi i8 [ 0, %43 ], [ %220, %218 ]
  %102 = phi i8 [ 0, %43 ], [ %219, %218 ]
  %103 = phi %"struct.std::__1::pair"* [ %40, %43 ], [ %221, %218 ]
  %104 = and i8 %102, 1
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %106, label %160

106:                                              ; preds = %100
  %107 = bitcast %"struct.std::__1::pair"* %103 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  %109 = load i8, i8* %108, align 1
  %110 = icmp slt i8 %109, 0
  %111 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %103, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load i8*, i8** %111, align 8
  %113 = bitcast %"struct.std::__1::pair"* %103 to i8*
  %114 = select i1 %110, i8* %112, i8* %113
  %115 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %103, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %116 = load i64, i64* %115, align 8
  %117 = zext i8 %109 to i64
  %118 = select i1 %110, i64 %116, i64 %117
  %119 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %114, i64 %118, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7) #17
  br i1 %119, label %120, label %160

120:                                              ; preds = %106
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #17
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #17
  %121 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %103, i64 0, i32 1
  %122 = bitcast %"class.std::__1::basic_string"* %121 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %123 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %122, i64 0, i32 1, i32 0
  %124 = load i8, i8* %123, align 1
  %125 = icmp slt i8 %124, 0
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load i8*, i8** %126, align 8
  %128 = bitcast %"class.std::__1::basic_string"* %121 to i8*
  %129 = select i1 %125, i8* %127, i8* %128
  store i8* %129, i8** %60, align 8
  %130 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %103, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %131 = load i64, i64* %130, align 8
  %132 = zext i8 %124 to i64
  %133 = select i1 %125, i64 %131, i64 %132
  store i64 %133, i64* %61, align 8
  %134 = call { i8*, i64 } @_ZN3net8HttpUtil7TrimLWSERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %11)
  %135 = extractvalue { i8*, i64 } %134, 0
  %136 = extractvalue { i8*, i64 } %134, 1
  %137 = icmp ugt i64 %136, -17
  br i1 %137, label %138, label %140

138:                                              ; preds = %120
  %139 = bitcast %"class.std::__1::basic_string"* %10 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %139) #18
  unreachable

140:                                              ; preds = %120
  %141 = icmp ult i64 %136, 23
  br i1 %141, label %147, label %142

142:                                              ; preds = %140
  %143 = add nuw i64 %136, 16
  %144 = and i64 %143, -16
  %145 = call i8* @_Znwm(i64 %144) #19
  store i8* %145, i8** %62, align 8, !alias.scope !2
  %146 = or i64 %144, -9223372036854775808
  store i64 %146, i64* %63, align 8, !alias.scope !2
  store i64 %136, i64* %64, align 8, !alias.scope !2
  br label %150

147:                                              ; preds = %140
  %148 = trunc i64 %136 to i8
  store i8 %148, i8* %66, align 1, !alias.scope !2
  %149 = icmp eq i64 %136, 0
  br i1 %149, label %152, label %150

150:                                              ; preds = %147, %142
  %151 = phi i8* [ %145, %142 ], [ %58, %147 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %151, i8* align 1 %135, i64 %136, i1 false) #17
  br label %152

152:                                              ; preds = %147, %150
  %153 = phi i8* [ %58, %147 ], [ %151, %150 ]
  %154 = getelementptr inbounds i8, i8* %153, i64 %136
  store i8 0, i8* %154, align 1
  %155 = load i8, i8* %68, align 1
  %156 = icmp slt i8 %155, 0
  br i1 %156, label %157, label %159

157:                                              ; preds = %152
  %158 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %158) #19
  br label %159

159:                                              ; preds = %157, %152
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* nonnull align 8 %58, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #17
  br label %218

160:                                              ; preds = %100, %106
  %161 = and i8 %101, 1
  %162 = icmp eq i8 %161, 0
  %163 = and i1 %44, %162
  br i1 %163, label %164, label %218

164:                                              ; preds = %160
  %165 = bitcast %"struct.std::__1::pair"* %103 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %166 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %165, i64 0, i32 1, i32 0
  %167 = load i8, i8* %166, align 1
  %168 = icmp slt i8 %167, 0
  %169 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %103, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = load i8*, i8** %169, align 8
  %171 = bitcast %"struct.std::__1::pair"* %103 to i8*
  %172 = select i1 %168, i8* %170, i8* %171
  %173 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %103, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %174 = load i64, i64* %173, align 8
  %175 = zext i8 %167 to i64
  %176 = select i1 %168, i64 %174, i64 %175
  %177 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %172, i64 %176, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 8) #17
  br i1 %177, label %178, label %218

178:                                              ; preds = %164
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #17
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #17
  %179 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %103, i64 0, i32 1
  %180 = bitcast %"class.std::__1::basic_string"* %179 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %181 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %180, i64 0, i32 1, i32 0
  %182 = load i8, i8* %181, align 1
  %183 = icmp slt i8 %182, 0
  %184 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %179, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = load i8*, i8** %184, align 8
  %186 = bitcast %"class.std::__1::basic_string"* %179 to i8*
  %187 = select i1 %183, i8* %185, i8* %186
  store i8* %187, i8** %47, align 8
  %188 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %103, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %189 = load i64, i64* %188, align 8
  %190 = zext i8 %182 to i64
  %191 = select i1 %183, i64 %189, i64 %190
  store i64 %191, i64* %48, align 8
  %192 = call { i8*, i64 } @_ZN3net8HttpUtil7TrimLWSERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %13)
  %193 = extractvalue { i8*, i64 } %192, 0
  %194 = extractvalue { i8*, i64 } %192, 1
  %195 = icmp ugt i64 %194, -17
  br i1 %195, label %196, label %198

196:                                              ; preds = %178
  %197 = bitcast %"class.std::__1::basic_string"* %12 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %197) #18
  unreachable

198:                                              ; preds = %178
  %199 = icmp ult i64 %194, 23
  br i1 %199, label %205, label %200

200:                                              ; preds = %198
  %201 = add nuw i64 %194, 16
  %202 = and i64 %201, -16
  %203 = call i8* @_Znwm(i64 %202) #19
  store i8* %203, i8** %49, align 8, !alias.scope !5
  %204 = or i64 %202, -9223372036854775808
  store i64 %204, i64* %50, align 8, !alias.scope !5
  store i64 %194, i64* %51, align 8, !alias.scope !5
  br label %208

205:                                              ; preds = %198
  %206 = trunc i64 %194 to i8
  store i8 %206, i8* %53, align 1, !alias.scope !5
  %207 = icmp eq i64 %194, 0
  br i1 %207, label %210, label %208

208:                                              ; preds = %205, %200
  %209 = phi i8* [ %203, %200 ], [ %45, %205 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %209, i8* align 1 %193, i64 %194, i1 false) #17
  br label %210

210:                                              ; preds = %205, %208
  %211 = phi i8* [ %45, %205 ], [ %209, %208 ]
  %212 = getelementptr inbounds i8, i8* %211, i64 %194
  store i8 0, i8* %212, align 1
  %213 = load i8, i8* %55, align 1
  %214 = icmp slt i8 %213, 0
  br i1 %214, label %215, label %217

215:                                              ; preds = %210
  %216 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %216) #19
  br label %217

217:                                              ; preds = %215, %210
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %57, i8* nonnull align 8 %45, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #17
  br label %218

218:                                              ; preds = %164, %160, %217, %159
  %219 = phi i8 [ %102, %217 ], [ 1, %159 ], [ %102, %160 ], [ %102, %164 ]
  %220 = phi i8 [ 1, %217 ], [ %101, %159 ], [ %101, %160 ], [ %101, %164 ]
  %221 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %103, i64 1
  %222 = icmp eq %"struct.std::__1::pair"* %221, %41
  br i1 %222, label %69, label %100

223:                                              ; preds = %88
  %224 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %224) #17
  %225 = load i8, i8* %91, align 1
  %226 = icmp slt i8 %225, 0
  %227 = load i8*, i8** %17, align 8
  %228 = select i1 %226, i8* %227, i8* %16
  %229 = load i64, i64* %18, align 8
  %230 = zext i8 %225 to i64
  %231 = select i1 %226, i64 %229, i64 %230
  call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %14, i8* %228, i64 %231) #17
  %232 = load i8, i8* %72, align 1
  %233 = icmp slt i8 %232, 0
  br i1 %233, label %234, label %237

234:                                              ; preds = %223
  %235 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %236 = load i8*, i8** %235, align 8
  call void @_ZdlPv(i8* %236) #19
  br label %237

237:                                              ; preds = %234, %223
  %238 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %238, i8* nonnull align 8 %224, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %224) #17
  %239 = load i8, i8* %3, align 1, !range !8
  %240 = icmp eq i8 %239, 0
  br i1 %240, label %241, label %246

241:                                              ; preds = %88, %237
  %242 = and i8 %70, 1
  %243 = icmp eq i8 %242, 0
  br i1 %243, label %244, label %246

244:                                              ; preds = %241
  %245 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %266

246:                                              ; preds = %241, %237
  store i8 1, i8* %3, align 1
  %247 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %247) #17
  %248 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %249 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %248, i64 0, i32 1, i32 0
  %250 = load i8, i8* %249, align 1
  %251 = icmp slt i8 %250, 0
  %252 = load i8*, i8** %38, align 8
  %253 = select i1 %251, i8* %252, i8* %37
  %254 = load i64, i64* %39, align 8
  %255 = zext i8 %250 to i64
  %256 = select i1 %251, i64 %254, i64 %255
  call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %15, i8* %253, i64 %256) #17
  %257 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %258 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %257, i64 0, i32 1, i32 0
  %259 = load i8, i8* %258, align 1
  %260 = icmp slt i8 %259, 0
  br i1 %260, label %261, label %264

261:                                              ; preds = %246
  %262 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %263 = load i8*, i8** %262, align 8
  call void @_ZdlPv(i8* %263) #19
  br label %264

264:                                              ; preds = %261, %246
  %265 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %265, i8* nonnull align 8 %247, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %247) #17
  br label %266

266:                                              ; preds = %244, %264
  %267 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %245, %244 ], [ %248, %264 ]
  %268 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %267, i64 0, i32 1, i32 0
  %269 = load i8, i8* %268, align 1
  %270 = icmp slt i8 %269, 0
  br i1 %270, label %271, label %273

271:                                              ; preds = %266
  %272 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %272) #19
  br label %273

273:                                              ; preds = %266, %271
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #17
  br label %274

274:                                              ; preds = %5, %33, %273
  %275 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %20, align 8
  %276 = icmp eq %"struct.std::__1::pair"* %275, null
  br i1 %276, label %307, label %277

277:                                              ; preds = %274
  %278 = bitcast %"struct.std::__1::pair"* %275 to i8*
  %279 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %21, align 8
  %280 = icmp eq %"struct.std::__1::pair"* %279, %275
  br i1 %280, label %305, label %281

281:                                              ; preds = %277, %300
  %282 = phi %"struct.std::__1::pair"* [ %283, %300 ], [ %279, %277 ]
  %283 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %282, i64 -1
  %284 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %282, i64 -1, i32 1
  %285 = bitcast %"class.std::__1::basic_string"* %284 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %286 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %285, i64 0, i32 1, i32 0
  %287 = load i8, i8* %286, align 1
  %288 = icmp slt i8 %287, 0
  br i1 %288, label %289, label %292

289:                                              ; preds = %281
  %290 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %284, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %291 = load i8*, i8** %290, align 8
  call void @_ZdlPv(i8* %291) #19
  br label %292

292:                                              ; preds = %289, %281
  %293 = bitcast %"struct.std::__1::pair"* %283 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %294 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %293, i64 0, i32 1, i32 0
  %295 = load i8, i8* %294, align 1
  %296 = icmp slt i8 %295, 0
  br i1 %296, label %297, label %300

297:                                              ; preds = %292
  %298 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %283, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %299 = load i8*, i8** %298, align 8
  call void @_ZdlPv(i8* %299) #19
  br label %300

300:                                              ; preds = %297, %292
  %301 = icmp eq %"struct.std::__1::pair"* %283, %275
  br i1 %301, label %302, label %281

302:                                              ; preds = %300
  %303 = bitcast %"class.std::__1::vector"* %8 to i8**
  %304 = load i8*, i8** %303, align 8
  br label %305

305:                                              ; preds = %302, %277
  %306 = phi i8* [ %304, %302 ], [ %278, %277 ]
  store %"struct.std::__1::pair"* %275, %"struct.std::__1::pair"** %21, align 8
  call void @_ZdlPv(i8* %306) #19
  br label %307

307:                                              ; preds = %274, %305
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #17
  %308 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %309 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %308, i64 0, i32 1, i32 0
  %310 = load i8, i8* %309, align 1
  %311 = icmp slt i8 %310, 0
  br i1 %311, label %312, label %314

312:                                              ; preds = %307
  %313 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %313) #19
  br label %314

314:                                              ; preds = %307, %312
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #17
  ret void
}

declare zeroext i1 @_ZN3net13ParseMimeTypeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPS6_PNS0_6vectorINS0_4pairIS6_S6_EENS4_ISC_EEEE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"*, %"class.std::__1::vector"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8*, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind readonly ssp uwtable
define hidden { i8*, i64 } @_ZN3net8HttpUtil7TrimLWSERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* nocapture readonly dereferenceable(16)) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds i8, i8* %3, i64 %5
  %7 = ptrtoint i8* %6 to i64
  %8 = icmp sgt i64 %5, 0
  br i1 %8, label %9, label %22

9:                                                ; preds = %1, %19
  %10 = phi i8* [ %20, %19 ], [ %3, %1 ]
  %11 = load i8, i8* %10, align 1
  %12 = sext i8 %11 to i32
  %13 = tail call i8* @memchr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0), i32 %12, i64 2) #17
  %14 = icmp ne i8* %13, null
  %15 = ptrtoint i8* %13 to i64
  %16 = sub i64 %15, ptrtoint ([3 x i8]* @.str.21 to i64)
  %17 = icmp ne i64 %16, -1
  %18 = and i1 %14, %17
  br i1 %18, label %19, label %22

19:                                               ; preds = %9
  %20 = getelementptr inbounds i8, i8* %10, i64 1
  %21 = icmp ult i8* %20, %6
  br i1 %21, label %9, label %22

22:                                               ; preds = %19, %9, %1
  %23 = phi i8* [ %3, %1 ], [ %10, %9 ], [ %20, %19 ]
  %24 = icmp ult i8* %23, %6
  br i1 %24, label %25, label %52

25:                                               ; preds = %22
  %26 = getelementptr inbounds i8, i8* %6, i64 -1
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i32
  %29 = tail call i8* @memchr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0), i32 %28, i64 2) #17
  %30 = icmp ne i8* %29, null
  %31 = ptrtoint i8* %29 to i64
  %32 = sub i64 %31, ptrtoint ([3 x i8]* @.str.21 to i64)
  %33 = icmp ne i64 %32, -1
  %34 = and i1 %30, %33
  br i1 %34, label %45, label %52

35:                                               ; preds = %45
  %36 = getelementptr inbounds i8, i8* %46, i64 -1
  %37 = load i8, i8* %36, align 1
  %38 = sext i8 %37 to i32
  %39 = tail call i8* @memchr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0), i32 %38, i64 2) #17
  %40 = icmp ne i8* %39, null
  %41 = ptrtoint i8* %39 to i64
  %42 = sub i64 %41, ptrtoint ([3 x i8]* @.str.21 to i64)
  %43 = icmp ne i64 %42, -1
  %44 = and i1 %40, %43
  br i1 %44, label %45, label %50

45:                                               ; preds = %25, %35
  %46 = phi i8* [ %36, %35 ], [ %26, %25 ]
  %47 = icmp ult i8* %23, %46
  br i1 %47, label %35, label %48

48:                                               ; preds = %45
  %49 = ptrtoint i8* %46 to i64
  br label %52

50:                                               ; preds = %35
  %51 = ptrtoint i8* %46 to i64
  br label %52

52:                                               ; preds = %50, %25, %48, %22
  %53 = phi i64 [ %7, %22 ], [ %49, %48 ], [ %7, %25 ], [ %51, %50 ]
  %54 = ptrtoint i8* %23 to i64
  %55 = sub i64 %53, %54
  %56 = insertvalue { i8*, i64 } undef, i8* %23, 0
  %57 = insertvalue { i8*, i64 } %56, i64 %55, 1
  ret { i8*, i64 } %57
}

declare void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net8HttpUtil16ParseRangeHeaderERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS1_6vectorINS_13HttpByteRangeENS5_ISB_EEEE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector.9"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::BasicStringPiece", align 8
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = alloca %"class.net::HttpUtil::ValuesIterator", align 8
  %6 = alloca %"class.base::BasicStringPiece", align 8
  %7 = alloca %"class.base::BasicStringPiece", align 8
  %8 = alloca %"class.net::HttpByteRange", align 8
  %9 = alloca i64, align 8
  %10 = alloca %"class.base::BasicStringPiece", align 8
  %11 = alloca i64, align 8
  %12 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %0, i8 signext 61, i64 0) #17
  %13 = icmp eq i64 %12, -1
  br i1 %13, label %268, label %14

14:                                               ; preds = %2
  %15 = bitcast %"class.base::BasicStringPiece"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #17
  %16 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 0
  %17 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 1
  %18 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #17
  %19 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  %20 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %27 = select i1 %23, i8* %25, i8* %26
  store i8* %27, i8** %19, align 8
  %28 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = zext i8 %22 to i64
  %32 = select i1 %23, i64 %30, i64 %31
  store i64 %32, i64* %28, align 8
  %33 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %4, i64 0, i64 %12)
  %34 = extractvalue { i8*, i64 } %33, 0
  store i8* %34, i8** %16, align 8
  %35 = extractvalue { i8*, i64 } %33, 1
  store i64 %35, i64* %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #17
  %36 = call { i8*, i64 } @_ZN3net8HttpUtil7TrimLWSERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %3)
  %37 = extractvalue { i8*, i64 } %36, 0
  %38 = extractvalue { i8*, i64 } %36, 1
  store i8* %37, i8** %16, align 8
  store i64 %38, i64* %17, align 8
  %39 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %37, i64 %38, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i64 5) #17
  br i1 %39, label %40, label %266

40:                                               ; preds = %14
  %41 = load i8, i8* %21, align 1
  %42 = icmp slt i8 %41, 0
  %43 = load i8*, i8** %24, align 8
  %44 = load i64, i64* %29, align 8
  %45 = zext i8 %41 to i64
  %46 = select i1 %42, i8* %43, i8* %26
  %47 = select i1 %42, i64 %44, i64 %45
  %48 = getelementptr inbounds i8, i8* %46, i64 %12
  %49 = getelementptr inbounds i8, i8* %48, i64 1
  %50 = getelementptr inbounds i8, i8* %46, i64 %47
  %51 = bitcast %"class.net::HttpUtil::ValuesIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %51) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 120, i1 false)
  %52 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %5, i64 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %5, i64 0, i32 0, i32 1, i32 0
  %54 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %5, i64 0, i32 0, i32 2, i32 0
  %55 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %5, i64 0, i32 0, i32 3, i32 0
  store i8* %49, i8** %52, align 8
  store i8* %49, i8** %53, align 8
  store i8* %49, i8** %54, align 8
  store i8* %50, i8** %55, align 8
  %56 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %5, i64 0, i32 0, i32 4
  %57 = bitcast %"class.std::__1::basic_string"* %56 to i8*
  store i8 44, i8* %57, align 8
  %58 = getelementptr inbounds i8, i8* %51, i64 33
  store i8 0, i8* %58, align 1
  %59 = getelementptr inbounds i8, i8* %51, i64 55
  store i8 1, i8* %59, align 1
  %60 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %5, i64 0, i32 0, i32 6
  store i32 0, i32* %60, align 8
  %61 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %5, i64 0, i32 0, i32 7
  store i8 1, i8* %61, align 4
  %62 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %5, i64 0, i32 0, i32 9
  store i32 0, i32* %62, align 8
  %63 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %5, i64 0, i32 1, i32 0
  %64 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %5, i64 0, i32 3
  %65 = bitcast i8** %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 16, i1 false) #17
  store i8 1, i8* %64, align 8
  %66 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %5, i64 0, i32 0, i32 5
  %67 = bitcast %"class.std::__1::basic_string"* %66 to i8*
  store i8 34, i8* %67, align 8
  %68 = getelementptr inbounds i8, i8* %51, i64 57
  store i8 0, i8* %68, align 1
  %69 = getelementptr inbounds i8, i8* %51, i64 79
  store i8 1, i8* %69, align 1
  %70 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %5, i64 0, i32 1
  %71 = getelementptr inbounds %"class.std::__1::__wrap_iter.16", %"class.std::__1::__wrap_iter.16"* %70, i64 0, i32 0
  %72 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %5, i64 0, i32 0
  %73 = bitcast %"class.std::__1::basic_string"* %66 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %5, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %76 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %5, i64 0, i32 2, i32 0
  %77 = bitcast i8** %76 to i64*
  %78 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %5, i64 0, i32 2
  %79 = getelementptr inbounds %"class.std::__1::__wrap_iter.16", %"class.std::__1::__wrap_iter.16"* %78, i64 0, i32 0
  %80 = bitcast %"class.base::BasicStringPiece"* %6 to i8*
  %81 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 0
  %82 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 1
  %83 = bitcast %"class.base::BasicStringPiece"* %7 to i8*
  %84 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 0
  %85 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 1
  %86 = bitcast %"class.net::HttpByteRange"* %8 to i8*
  %87 = getelementptr inbounds %"class.net::HttpByteRange", %"class.net::HttpByteRange"* %8, i64 0, i32 0
  %88 = getelementptr inbounds %"class.net::HttpByteRange", %"class.net::HttpByteRange"* %8, i64 0, i32 1
  %89 = getelementptr inbounds %"class.net::HttpByteRange", %"class.net::HttpByteRange"* %8, i64 0, i32 2
  %90 = bitcast i64* %9 to i8*
  %91 = bitcast %"class.base::BasicStringPiece"* %10 to i8*
  %92 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %10, i64 0, i32 0
  %93 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %10, i64 0, i32 1
  %94 = bitcast i64* %11 to i8*
  %95 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %1, i64 0, i32 0, i32 1
  %96 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %97 = bitcast %"class.net::HttpByteRange"** %95 to i64*
  %98 = bitcast %"class.std::__1::vector.9"* %1 to i64*
  %99 = bitcast %"class.net::HttpByteRange"** %96 to i64*
  %100 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %1, i64 0, i32 0, i32 0
  %101 = bitcast %"class.net::HttpByteRange"* %8 to i8*
  %102 = bitcast i8** %53 to <2 x i64>*
  %103 = bitcast i8** %63 to <2 x i64>*
  br label %104

104:                                              ; preds = %129, %40
  %105 = load i8, i8* %74, align 1
  %106 = icmp slt i8 %105, 0
  %107 = load i64, i64* %75, align 8
  %108 = zext i8 %105 to i64
  %109 = select i1 %106, i64 %107, i64 %108
  %110 = icmp eq i64 %109, 0
  %111 = load i32, i32* %60, align 8
  %112 = icmp eq i32 %111, 0
  %113 = and i1 %110, %112
  br i1 %113, label %114, label %116

114:                                              ; preds = %104
  %115 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE12QuickGetNextEv(%"class.base::StringTokenizerT"* nonnull %72) #17
  br i1 %115, label %118, label %246

116:                                              ; preds = %104
  %117 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE11FullGetNextEv(%"class.base::StringTokenizerT"* nonnull %72) #17
  br i1 %117, label %118, label %246

118:                                              ; preds = %116, %114
  %119 = load <2 x i64>, <2 x i64>* %102, align 8
  store <2 x i64> %119, <2 x i64>* %103, align 8
  call void @_ZN3net8HttpUtil7TrimLWSEPNSt3__111__wrap_iterIPKcEES6_(%"class.std::__1::__wrap_iter.16"* %70, %"class.std::__1::__wrap_iter.16"* %78) #17
  %120 = load i8, i8* %64, align 8, !range !8
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %122, label %125

122:                                              ; preds = %118
  %123 = load i8*, i8** %63, align 8
  %124 = load i64, i64* %77, align 8
  br label %132

125:                                              ; preds = %118
  %126 = load i8*, i8** %71, align 8
  %127 = load i8*, i8** %79, align 8
  %128 = icmp eq i8* %126, %127
  br i1 %128, label %129, label %130

129:                                              ; preds = %125, %243
  br label %104

130:                                              ; preds = %125
  %131 = ptrtoint i8* %127 to i64
  br label %132

132:                                              ; preds = %130, %122
  %133 = phi i64 [ %124, %122 ], [ %131, %130 ]
  %134 = phi i8* [ %123, %122 ], [ %126, %130 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80) #17
  %135 = ptrtoint i8* %134 to i64
  %136 = sub i64 %133, %135
  store i8* %134, i8** %81, align 8
  store i64 %136, i64* %82, align 8
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %242, label %138

138:                                              ; preds = %132
  %139 = call i8* @memchr(i8* %134, i32 45, i64 %136) #17
  %140 = icmp eq i8* %139, null
  br i1 %140, label %242, label %141

141:                                              ; preds = %138
  %142 = ptrtoint i8* %139 to i64
  %143 = sub i64 %142, %135
  %144 = icmp eq i64 %143, -1
  br i1 %144, label %242, label %145

145:                                              ; preds = %141
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #17
  %146 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %6, i64 0, i64 %143)
  %147 = extractvalue { i8*, i64 } %146, 0
  store i8* %147, i8** %84, align 8
  %148 = extractvalue { i8*, i64 } %146, 1
  store i64 %148, i64* %85, align 8
  %149 = call { i8*, i64 } @_ZN3net8HttpUtil7TrimLWSERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %7)
  %150 = extractvalue { i8*, i64 } %149, 0
  %151 = extractvalue { i8*, i64 } %149, 1
  store i8* %150, i8** %84, align 8
  store i64 %151, i64* %85, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %86) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %101, i8 -86, i64 32, i1 false)
  call void @_ZN3net13HttpByteRangeC1Ev(%"class.net::HttpByteRange"* nonnull %8) #17
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %158, label %153

153:                                              ; preds = %145
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #17
  store i64 -1, i64* %9, align 8
  %154 = call zeroext i1 @_ZN4base13StringToInt64ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPl(i8* %150, i64 %151, i64* nonnull %9) #17
  br i1 %154, label %155, label %157

155:                                              ; preds = %153
  %156 = load i64, i64* %9, align 8
  store i64 %156, i64* %87, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #17
  br label %158

157:                                              ; preds = %153
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #17
  br label %243

158:                                              ; preds = %155, %145
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %91) #17
  %159 = add nuw i64 %143, 1
  %160 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %6, i64 %159, i64 -1)
  %161 = extractvalue { i8*, i64 } %160, 0
  store i8* %161, i8** %92, align 8
  %162 = extractvalue { i8*, i64 } %160, 1
  store i64 %162, i64* %93, align 8
  %163 = call { i8*, i64 } @_ZN3net8HttpUtil7TrimLWSERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %10)
  %164 = extractvalue { i8*, i64 } %163, 0
  %165 = extractvalue { i8*, i64 } %163, 1
  store i8* %164, i8** %92, align 8
  store i64 %165, i64* %93, align 8
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %174, label %167

167:                                              ; preds = %158
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #17
  store i64 -6148914691236517206, i64* %11, align 8
  %168 = call zeroext i1 @_ZN4base13StringToInt64ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPl(i8* %164, i64 %165, i64* nonnull %11) #17
  br i1 %168, label %169, label %173

169:                                              ; preds = %167
  %170 = call zeroext i1 @_ZNK3net13HttpByteRange20HasFirstBytePositionEv(%"class.net::HttpByteRange"* nonnull %8) #17
  %171 = load i64, i64* %11, align 8
  %172 = select i1 %170, i64* %88, i64* %89
  store i64 %171, i64* %172, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #17
  br label %176

173:                                              ; preds = %167
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #17
  br label %240

174:                                              ; preds = %158
  %175 = call zeroext i1 @_ZNK3net13HttpByteRange20HasFirstBytePositionEv(%"class.net::HttpByteRange"* nonnull %8) #17
  br i1 %175, label %176, label %240

176:                                              ; preds = %169, %174
  %177 = call zeroext i1 @_ZNK3net13HttpByteRange7IsValidEv(%"class.net::HttpByteRange"* nonnull %8) #17
  br i1 %177, label %178, label %240

178:                                              ; preds = %176
  %179 = load %"class.net::HttpByteRange"*, %"class.net::HttpByteRange"** %95, align 8
  %180 = load %"class.net::HttpByteRange"*, %"class.net::HttpByteRange"** %96, align 8
  %181 = icmp eq %"class.net::HttpByteRange"* %179, %180
  %182 = ptrtoint %"class.net::HttpByteRange"* %180 to i64
  br i1 %181, label %187, label %183

183:                                              ; preds = %178
  %184 = bitcast %"class.net::HttpByteRange"* %179 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %184, i8* nonnull align 8 %86, i64 32, i1 false) #17
  %185 = getelementptr inbounds %"class.net::HttpByteRange", %"class.net::HttpByteRange"* %179, i64 1
  %186 = ptrtoint %"class.net::HttpByteRange"* %185 to i64
  store i64 %186, i64* %97, align 8
  br label %240

187:                                              ; preds = %178
  %188 = ptrtoint %"class.net::HttpByteRange"* %179 to i64
  %189 = load i64, i64* %98, align 8
  %190 = sub i64 %188, %189
  %191 = ashr exact i64 %190, 5
  %192 = add nsw i64 %191, 1
  %193 = icmp ugt i64 %192, 576460752303423487
  br i1 %193, label %194, label %196

194:                                              ; preds = %187
  %195 = bitcast %"class.std::__1::vector.9"* %1 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %195) #18
  unreachable

196:                                              ; preds = %187
  %197 = sub i64 %182, %189
  %198 = ashr exact i64 %197, 5
  %199 = icmp ult i64 %198, 288230376151711743
  br i1 %199, label %200, label %208

200:                                              ; preds = %196
  %201 = ashr exact i64 %197, 4
  %202 = icmp ult i64 %201, %192
  %203 = select i1 %202, i64 %192, i64 %201
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %213, label %205

205:                                              ; preds = %200
  %206 = icmp ugt i64 %203, 576460752303423487
  br i1 %206, label %207, label %208

207:                                              ; preds = %205
  call void @abort() #18
  unreachable

208:                                              ; preds = %205, %196
  %209 = phi i64 [ %203, %205 ], [ 576460752303423487, %196 ]
  %210 = shl i64 %209, 5
  %211 = call i8* @_Znwm(i64 %210) #19
  %212 = bitcast i8* %211 to %"class.net::HttpByteRange"*
  br label %213

213:                                              ; preds = %208, %200
  %214 = phi i64 [ %209, %208 ], [ 0, %200 ]
  %215 = phi %"class.net::HttpByteRange"* [ %212, %208 ], [ null, %200 ]
  %216 = getelementptr inbounds %"class.net::HttpByteRange", %"class.net::HttpByteRange"* %215, i64 %191
  %217 = getelementptr inbounds %"class.net::HttpByteRange", %"class.net::HttpByteRange"* %215, i64 %214
  %218 = ptrtoint %"class.net::HttpByteRange"* %217 to i64
  %219 = bitcast %"class.net::HttpByteRange"* %216 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %219, i8* nonnull align 8 %86, i64 32, i1 false) #17
  %220 = getelementptr inbounds %"class.net::HttpByteRange", %"class.net::HttpByteRange"* %216, i64 1
  %221 = ptrtoint %"class.net::HttpByteRange"* %220 to i64
  %222 = load %"class.net::HttpByteRange"*, %"class.net::HttpByteRange"** %100, align 8
  %223 = load i64, i64* %97, align 8
  %224 = ptrtoint %"class.net::HttpByteRange"* %222 to i64
  %225 = sub i64 %223, %224
  %226 = ashr exact i64 %225, 5
  %227 = sub nsw i64 0, %226
  %228 = getelementptr inbounds %"class.net::HttpByteRange", %"class.net::HttpByteRange"* %216, i64 %227
  %229 = ptrtoint %"class.net::HttpByteRange"* %228 to i64
  %230 = icmp sgt i64 %225, 0
  br i1 %230, label %231, label %235

231:                                              ; preds = %213
  %232 = bitcast %"class.net::HttpByteRange"* %228 to i8*
  %233 = bitcast %"class.net::HttpByteRange"* %222 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %232, i8* align 8 %233, i64 %225, i1 false) #17
  %234 = load %"class.net::HttpByteRange"*, %"class.net::HttpByteRange"** %100, align 8
  br label %235

235:                                              ; preds = %231, %213
  %236 = phi %"class.net::HttpByteRange"* [ %222, %213 ], [ %234, %231 ]
  store i64 %229, i64* %98, align 8
  store i64 %221, i64* %97, align 8
  store i64 %218, i64* %99, align 8
  %237 = icmp eq %"class.net::HttpByteRange"* %236, null
  br i1 %237, label %240, label %238

238:                                              ; preds = %235
  %239 = bitcast %"class.net::HttpByteRange"* %236 to i8*
  call void @_ZdlPv(i8* %239) #19
  br label %240

240:                                              ; preds = %238, %235, %183, %173, %176, %174
  %241 = phi i32 [ 1, %173 ], [ 1, %174 ], [ 1, %176 ], [ 0, %183 ], [ 0, %235 ], [ 0, %238 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %91) #17
  br label %243

242:                                              ; preds = %132, %141, %138
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #17
  br label %250

243:                                              ; preds = %240, %157
  %244 = phi i32 [ %241, %240 ], [ 1, %157 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %86) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #17
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %129, label %250

246:                                              ; preds = %116, %114
  %247 = load %"class.net::HttpByteRange"*, %"class.net::HttpByteRange"** %100, align 8
  %248 = load %"class.net::HttpByteRange"*, %"class.net::HttpByteRange"** %95, align 8
  %249 = icmp ne %"class.net::HttpByteRange"* %247, %248
  br label %250

250:                                              ; preds = %243, %242, %246
  %251 = phi i1 [ %249, %246 ], [ false, %242 ], [ false, %243 ]
  %252 = load i8, i8* %74, align 1
  %253 = icmp slt i8 %252, 0
  br i1 %253, label %254, label %257

254:                                              ; preds = %250
  %255 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %256 = load i8*, i8** %255, align 8
  call void @_ZdlPv(i8* %256) #19
  br label %257

257:                                              ; preds = %254, %250
  %258 = bitcast %"class.std::__1::basic_string"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %259 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %258, i64 0, i32 1, i32 0
  %260 = load i8, i8* %259, align 1
  %261 = icmp slt i8 %260, 0
  br i1 %261, label %262, label %265

262:                                              ; preds = %257
  %263 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %264 = load i8*, i8** %263, align 8
  call void @_ZdlPv(i8* %264) #19
  br label %265

265:                                              ; preds = %257, %262
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %51) #17
  br label %266

266:                                              ; preds = %14, %265
  %267 = phi i1 [ %251, %265 ], [ false, %14 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #17
  br label %268

268:                                              ; preds = %2, %266
  %269 = phi i1 [ %267, %266 ], [ false, %2 ]
  ret i1 %269
}

; Function Attrs: nounwind
declare i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"*, i8 signext, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"*, i64, i64) local_unnamed_addr #0 align 2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net8HttpUtil14ValuesIterator7GetNextEv(%"class.net::HttpUtil::ValuesIterator"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::__wrap_iter.16", %"class.std::__1::__wrap_iter.16"* %2, i64 0, i32 0
  %4 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %0, i64 0, i32 0, i32 5
  %6 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %0, i64 0, i32 0, i32 6
  %10 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %0, i64 0, i32 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %0, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %0, i64 0, i32 2
  %13 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %0, i64 0, i32 3
  %14 = getelementptr inbounds %"class.std::__1::__wrap_iter.16", %"class.std::__1::__wrap_iter.16"* %12, i64 0, i32 0
  %15 = bitcast i8** %10 to <2 x i64>*
  %16 = bitcast i8** %11 to <2 x i64>*
  br label %17

17:                                               ; preds = %38, %1
  %18 = load i8, i8* %7, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %17
  %21 = load i64, i64* %8, align 8
  br label %24

22:                                               ; preds = %17
  %23 = zext i8 %18 to i64
  br label %24

24:                                               ; preds = %22, %20
  %25 = phi i64 [ %21, %20 ], [ %23, %22 ]
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %32

27:                                               ; preds = %24
  %28 = load i32, i32* %9, align 8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %27
  %31 = tail call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE12QuickGetNextEv(%"class.base::StringTokenizerT"* %4) #17
  br i1 %31, label %34, label %42

32:                                               ; preds = %24, %27
  %33 = tail call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE11FullGetNextEv(%"class.base::StringTokenizerT"* %4) #17
  br i1 %33, label %34, label %42

34:                                               ; preds = %30, %32
  %35 = load <2 x i64>, <2 x i64>* %15, align 8
  store <2 x i64> %35, <2 x i64>* %16, align 8
  tail call void @_ZN3net8HttpUtil7TrimLWSEPNSt3__111__wrap_iterIPKcEES6_(%"class.std::__1::__wrap_iter.16"* %2, %"class.std::__1::__wrap_iter.16"* %12)
  %36 = load i8, i8* %13, align 8, !range !8
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %34
  %39 = load i8*, i8** %3, align 8
  %40 = load i8*, i8** %14, align 8
  %41 = icmp eq i8* %39, %40
  br i1 %41, label %17, label %42

42:                                               ; preds = %38, %30, %32, %34
  %43 = phi i1 [ true, %34 ], [ true, %38 ], [ false, %32 ], [ false, %30 ]
  ret i1 %43
}

declare void @_ZN3net13HttpByteRangeC1Ev(%"class.net::HttpByteRange"*) unnamed_addr #2

declare zeroext i1 @_ZN4base13StringToInt64ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPl(i8*, i64, i64*) local_unnamed_addr #2

declare zeroext i1 @_ZNK3net13HttpByteRange20HasFirstBytePositionEv(%"class.net::HttpByteRange"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK3net13HttpByteRange7IsValidEv(%"class.net::HttpByteRange"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net8HttpUtil29ParseContentRangeHeaderFor206EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPlS7_S7_(i8*, i64, i64*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::BasicStringPiece", align 8
  %7 = alloca %"class.base::BasicStringPiece", align 8
  %8 = alloca %"class.base::BasicStringPiece", align 8
  %9 = alloca %"class.base::BasicStringPiece", align 8
  %10 = alloca %"class.base::BasicStringPiece", align 8
  %11 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 0
  store i8* %0, i8** %11, align 8
  %12 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 1
  store i64 %1, i64* %12, align 8
  store i64 -1, i64* %4, align 8
  store i64 -1, i64* %3, align 8
  store i64 -1, i64* %2, align 8
  %13 = call { i8*, i64 } @_ZN3net8HttpUtil7TrimLWSERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %6)
  %14 = extractvalue { i8*, i64 } %13, 0
  %15 = extractvalue { i8*, i64 } %13, 1
  store i8* %14, i8** %11, align 8
  store i64 %15, i64* %12, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %112, label %17

17:                                               ; preds = %5
  %18 = tail call i8* @memchr(i8* %14, i32 32, i64 %15) #17
  %19 = icmp eq i8* %18, null
  br i1 %19, label %112, label %20

20:                                               ; preds = %17
  %21 = ptrtoint i8* %18 to i64
  %22 = ptrtoint i8* %14 to i64
  %23 = sub i64 %21, %22
  %24 = icmp eq i64 %23, -1
  br i1 %24, label %112, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.base::BasicStringPiece"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #17
  %27 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %6, i64 0, i64 %23)
  %28 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 0
  %29 = extractvalue { i8*, i64 } %27, 0
  store i8* %29, i8** %28, align 8
  %30 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 1
  %31 = extractvalue { i8*, i64 } %27, 1
  store i64 %31, i64* %30, align 8
  %32 = call { i8*, i64 } @_ZN3net8HttpUtil7TrimLWSERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %7)
  %33 = extractvalue { i8*, i64 } %32, 0
  %34 = extractvalue { i8*, i64 } %32, 1
  %35 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %33, i64 %34, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i64 5) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #17
  br i1 %35, label %36, label %112

36:                                               ; preds = %25
  %37 = add nuw i64 %23, 1
  %38 = load i64, i64* %12, align 8
  %39 = icmp ugt i64 %38, %37
  br i1 %39, label %40, label %112

40:                                               ; preds = %36
  %41 = load i8*, i8** %11, align 8
  %42 = getelementptr inbounds i8, i8* %41, i64 %37
  %43 = sub i64 %38, %37
  %44 = call i8* @memchr(i8* %42, i32 45, i64 %43) #17
  %45 = icmp eq i8* %44, null
  br i1 %45, label %112, label %46

46:                                               ; preds = %40
  %47 = ptrtoint i8* %44 to i64
  %48 = ptrtoint i8* %41 to i64
  %49 = sub i64 %47, %48
  %50 = icmp eq i64 %49, -1
  br i1 %50, label %112, label %51

51:                                               ; preds = %46
  %52 = add nuw i64 %49, 1
  %53 = icmp ugt i64 %38, %52
  br i1 %53, label %54, label %112

54:                                               ; preds = %51
  %55 = getelementptr inbounds i8, i8* %41, i64 %52
  %56 = sub i64 %38, %52
  %57 = call i8* @memchr(i8* %55, i32 47, i64 %56) #17
  %58 = icmp eq i8* %57, null
  br i1 %58, label %112, label %59

59:                                               ; preds = %54
  %60 = ptrtoint i8* %57 to i64
  %61 = sub i64 %60, %48
  %62 = icmp eq i64 %61, -1
  br i1 %62, label %112, label %63

63:                                               ; preds = %59
  %64 = bitcast %"class.base::BasicStringPiece"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64) #17
  %65 = sub i64 %49, %37
  %66 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %6, i64 %37, i64 %65)
  %67 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 0
  %68 = extractvalue { i8*, i64 } %66, 0
  store i8* %68, i8** %67, align 8
  %69 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 1
  %70 = extractvalue { i8*, i64 } %66, 1
  store i64 %70, i64* %69, align 8
  %71 = call { i8*, i64 } @_ZN3net8HttpUtil7TrimLWSERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %8)
  %72 = extractvalue { i8*, i64 } %71, 0
  %73 = extractvalue { i8*, i64 } %71, 1
  %74 = call zeroext i1 @_ZN4base13StringToInt64ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPl(i8* %72, i64 %73, i64* %2) #17
  %75 = bitcast %"class.base::BasicStringPiece"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %75) #17
  %76 = bitcast %"class.base::BasicStringPiece"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #17
  br i1 %74, label %77, label %110

77:                                               ; preds = %63
  %78 = load i64, i64* %2, align 8
  %79 = icmp sgt i64 %78, -1
  br i1 %79, label %80, label %110

80:                                               ; preds = %77
  %81 = sub i64 %61, %52
  %82 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %6, i64 %52, i64 %81)
  %83 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 0
  %84 = extractvalue { i8*, i64 } %82, 0
  store i8* %84, i8** %83, align 8
  %85 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 1
  %86 = extractvalue { i8*, i64 } %82, 1
  store i64 %86, i64* %85, align 8
  %87 = call { i8*, i64 } @_ZN3net8HttpUtil7TrimLWSERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %9)
  %88 = extractvalue { i8*, i64 } %87, 0
  %89 = extractvalue { i8*, i64 } %87, 1
  %90 = call zeroext i1 @_ZN4base13StringToInt64ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPl(i8* %88, i64 %89, i64* %3) #17
  br i1 %90, label %91, label %110

91:                                               ; preds = %80
  %92 = load i64, i64* %3, align 8
  %93 = load i64, i64* %2, align 8
  %94 = icmp slt i64 %92, %93
  br i1 %94, label %110, label %95

95:                                               ; preds = %91
  %96 = add nuw i64 %61, 1
  %97 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %6, i64 %96, i64 -1)
  %98 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %10, i64 0, i32 0
  %99 = extractvalue { i8*, i64 } %97, 0
  store i8* %99, i8** %98, align 8
  %100 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %10, i64 0, i32 1
  %101 = extractvalue { i8*, i64 } %97, 1
  store i64 %101, i64* %100, align 8
  %102 = call { i8*, i64 } @_ZN3net8HttpUtil7TrimLWSERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %10)
  %103 = extractvalue { i8*, i64 } %102, 0
  %104 = extractvalue { i8*, i64 } %102, 1
  %105 = call zeroext i1 @_ZN4base13StringToInt64ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPl(i8* %103, i64 %104, i64* %4) #17
  br i1 %105, label %106, label %110

106:                                              ; preds = %95
  %107 = load i64, i64* %4, align 8
  %108 = load i64, i64* %3, align 8
  %109 = icmp sgt i64 %107, %108
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %75) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64) #17
  br i1 %109, label %112, label %111

110:                                              ; preds = %63, %77, %80, %91, %95
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %75) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64) #17
  br label %111

111:                                              ; preds = %110, %106
  store i64 -1, i64* %4, align 8
  store i64 -1, i64* %3, align 8
  store i64 -1, i64* %2, align 8
  br label %112

112:                                              ; preds = %5, %54, %51, %40, %36, %17, %46, %106, %59, %111, %25, %20
  %113 = phi i1 [ false, %20 ], [ false, %25 ], [ false, %46 ], [ false, %111 ], [ false, %59 ], [ true, %106 ], [ false, %5 ], [ false, %17 ], [ false, %36 ], [ false, %40 ], [ false, %51 ], [ false, %54 ]
  ret i1 %113
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net8HttpUtil21ParseRetryAfterHeaderERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base4TimeEPNSA_9TimeDeltaE(%"class.std::__1::basic_string"* dereferenceable(24), i64, %"class.base::TimeDelta"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %"class.base::Time", align 8
  %6 = alloca %"class.base::BasicStringPiece", align 8
  %7 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #17
  store i32 -1431655766, i32* %4, align 4
  %8 = bitcast %"class.base::Time"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #17
  %9 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %5, i64 0, i32 0, i32 0
  store i64 0, i64* %9, align 8
  %10 = bitcast %"class.base::BasicStringPiece"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #17
  %11 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 0
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %19 = select i1 %15, i8* %17, i8* %18
  store i8* %19, i8** %11, align 8
  %20 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 1
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = zext i8 %14 to i64
  %24 = select i1 %15, i64 %22, i64 %23
  store i64 %24, i64* %20, align 8
  %25 = call zeroext i1 @_ZN3net11ParseUint32ERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPjPNS_13ParseIntErrorE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %6, i32* nonnull %4, i32* null) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #17
  br i1 %25, label %26, label %30

26:                                               ; preds = %3
  %27 = load i32, i32* %4, align 4
  %28 = zext i32 %27 to i64
  %29 = mul nuw nsw i64 %28, 1000000
  br label %40

30:                                               ; preds = %3
  %31 = load i8, i8* %13, align 1
  %32 = icmp slt i8 %31, 0
  %33 = load i8*, i8** %16, align 8
  %34 = select i1 %32, i8* %33, i8* %18
  %35 = call zeroext i1 @_ZN4base4Time18FromStringInternalEPKcbPS0_(i8* %34, i1 zeroext false, %"class.base::Time"* nonnull %5) #17
  br i1 %35, label %36, label %43

36:                                               ; preds = %30
  %37 = load i64, i64* %9, align 8
  %38 = sub nsw i64 %37, %1
  %39 = icmp slt i64 %38, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %26, %36
  %41 = phi i64 [ %29, %26 ], [ %38, %36 ]
  %42 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 0, i32 0
  store i64 %41, i64* %42, align 8
  br label %43

43:                                               ; preds = %36, %30, %40
  %44 = phi i1 [ true, %40 ], [ false, %30 ], [ false, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #17
  ret i1 %44
}

declare zeroext i1 @_ZN3net11ParseUint32ERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPjPNS_13ParseIntErrorE(%"class.base::BasicStringPiece"* dereferenceable(16), i32*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN3net8HttpUtil12IsMethodSafeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* nocapture readonly, i64) local_unnamed_addr #4 align 2 {
  switch i64 %1, label %12 [
    i64 3, label %3
    i64 4, label %8
    i64 7, label %6
    i64 5, label %7
  ]

3:                                                ; preds = %2
  %4 = tail call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i64 3) #17
  %5 = icmp eq i32 %4, 0
  ret i1 %5

6:                                                ; preds = %2
  br label %8

7:                                                ; preds = %2
  br label %8

8:                                                ; preds = %2, %7, %6
  %9 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), %6 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0), %7 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), %2 ]
  %10 = tail call i32 @bcmp(i8* %0, i8* %9, i64 %1) #17
  %11 = icmp eq i32 %10, 0
  br label %12

12:                                               ; preds = %8, %2
  %13 = phi i1 [ false, %2 ], [ %11, %8 ]
  ret i1 %13
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN3net8HttpUtil18IsMethodIdempotentEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* nocapture readonly, i64) local_unnamed_addr #4 align 2 {
  switch i64 %1, label %22 [
    i64 3, label %3
    i64 4, label %6
    i64 7, label %12
    i64 5, label %9
    i64 6, label %19
  ]

3:                                                ; preds = %2
  %4 = tail call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i64 3) #17
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %22, label %16

6:                                                ; preds = %2
  %7 = tail call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i64 4) #17
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %22, label %15

9:                                                ; preds = %2
  %10 = tail call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0), i64 5) #17
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %22, label %15

12:                                               ; preds = %2
  %13 = tail call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i64 7) #17
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %6, %9, %12
  br label %22

16:                                               ; preds = %3
  %17 = tail call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i64 3) #17
  %18 = icmp eq i32 %17, 0
  ret i1 %18

19:                                               ; preds = %2
  %20 = tail call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0), i64 %1) #17
  %21 = icmp eq i32 %20, 0
  br label %22

22:                                               ; preds = %15, %2, %19, %6, %9, %3, %12
  %23 = phi i1 [ true, %12 ], [ true, %3 ], [ true, %9 ], [ true, %6 ], [ %21, %19 ], [ false, %2 ], [ false, %15 ]
  ret i1 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net8HttpUtil12IsSafeHeaderEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = tail call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %0, i64 %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), i64 6, i32 1) #17
  br i1 %4, label %23, label %5

5:                                                ; preds = %2
  %6 = tail call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %0, i64 %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0), i64 4, i32 1) #17
  br i1 %6, label %23, label %7

7:                                                ; preds = %5
  %8 = bitcast %"class.logging::CheckError"* %3 to i8*
  br label %11

9:                                                ; preds = %19
  %10 = icmp eq i8** %22, getelementptr inbounds ([21 x i8*], [21 x i8*]* @_ZN3net12_GLOBAL__N_122kForbiddenHeaderFieldsE, i64 1, i64 0)
  br i1 %10, label %23, label %11

11:                                               ; preds = %7, %9
  %12 = phi i8** [ getelementptr inbounds ([21 x i8*], [21 x i8*]* @_ZN3net12_GLOBAL__N_122kForbiddenHeaderFieldsE, i64 0, i64 0), %7 ], [ %22, %9 ]
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = call i64 @strlen(i8* nonnull %13) #17
  br label %19

17:                                               ; preds = %11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.43, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.44, i64 0, i64 0)) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #17
  br label %19

19:                                               ; preds = %15, %17
  %20 = phi i64 [ 0, %17 ], [ %16, %15 ]
  %21 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %0, i64 %1, i8* %13, i64 %20) #17
  %22 = getelementptr inbounds i8*, i8** %12, i64 1
  br i1 %21, label %23, label %9

23:                                               ; preds = %19, %9, %2, %5
  %24 = phi i1 [ false, %5 ], [ false, %2 ], [ true, %9 ], [ false, %19 ]
  ret i1 %24
}

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN3net8HttpUtil17IsValidHeaderNameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* readonly, i64) local_unnamed_addr #5 align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %13, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %0, i64 %1
  br label %8

6:                                                ; preds = %8
  %7 = icmp eq i8* %12, %5
  br i1 %7, label %13, label %8

8:                                                ; preds = %6, %4
  %9 = phi i8* [ %12, %6 ], [ %0, %4 ]
  %10 = load i8, i8* %9, align 1
  %11 = tail call zeroext i1 @_ZN3net8HttpUtil11IsTokenCharEc(i8 signext %10) #17
  %12 = getelementptr inbounds i8, i8* %9, i64 1
  br i1 %11, label %6, label %13

13:                                               ; preds = %6, %8, %2
  %14 = phi i1 [ false, %2 ], [ true, %6 ], [ false, %8 ]
  ret i1 %14
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN3net8HttpUtil7IsTokenEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #5 align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %13, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %0, i64 %1
  br label %8

6:                                                ; preds = %8
  %7 = icmp eq i8* %12, %5
  br i1 %7, label %13, label %8

8:                                                ; preds = %4, %6
  %9 = phi i8* [ %12, %6 ], [ %0, %4 ]
  %10 = load i8, i8* %9, align 1
  %11 = tail call zeroext i1 @_ZN3net8HttpUtil11IsTokenCharEc(i8 signext %10)
  %12 = getelementptr inbounds i8, i8* %9, i64 1
  br i1 %11, label %6, label %13

13:                                               ; preds = %8, %6, %2
  %14 = phi i1 [ false, %2 ], [ false, %8 ], [ true, %6 ]
  ret i1 %14
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN3net8HttpUtil18IsValidHeaderValueEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds i8, i8* %0, i64 %1
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %2, %8
  %6 = phi i8* [ %9, %8 ], [ %0, %2 ]
  %7 = load i8, i8* %6, align 1
  switch i8 %7, label %8 [
    i8 0, label %11
    i8 13, label %11
    i8 10, label %11
  ]

8:                                                ; preds = %5
  %9 = getelementptr inbounds i8, i8* %6, i64 1
  %10 = icmp eq i8* %9, %3
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %5, %5, %8, %2
  %12 = phi i1 [ true, %2 ], [ true, %8 ], [ false, %5 ], [ false, %5 ], [ false, %5 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net8HttpUtil21IsNonCoalescingHeaderEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.logging::CheckError"* %3 to i8*
  br label %7

5:                                                ; preds = %15
  %6 = icmp eq i8** %18, getelementptr inbounds ([9 x i8*], [9 x i8*]* @_ZZN3net8HttpUtil21IsNonCoalescingHeaderEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEE21kNonCoalescingHeaders, i64 1, i64 0)
  br i1 %6, label %19, label %7

7:                                                ; preds = %2, %5
  %8 = phi i8** [ getelementptr inbounds ([9 x i8*], [9 x i8*]* @_ZZN3net8HttpUtil21IsNonCoalescingHeaderEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEE21kNonCoalescingHeaders, i64 0, i64 0), %2 ], [ %18, %5 ]
  %9 = load i8*, i8** %8, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = call i64 @strlen(i8* nonnull %9) #17
  br label %15

13:                                               ; preds = %7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.43, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.44, i64 0, i64 0)) #17
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #17
  br label %15

15:                                               ; preds = %11, %13
  %16 = phi i64 [ 0, %13 ], [ %12, %11 ]
  %17 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %0, i64 %1, i8* %9, i64 %16) #17
  %18 = getelementptr inbounds i8*, i8** %8, i64 1
  br i1 %17, label %19, label %5

19:                                               ; preds = %15, %5
  %20 = phi i1 [ true, %15 ], [ false, %5 ]
  ret i1 %20
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN3net8HttpUtil5IsLWSEc(i8 signext) local_unnamed_addr #4 align 2 {
  %2 = sext i8 %0 to i32
  %3 = tail call i8* @memchr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0), i32 %2, i64 2) #17
  %4 = icmp ne i8* %3, null
  %5 = ptrtoint i8* %3 to i64
  %6 = sub i64 %5, ptrtoint ([3 x i8]* @.str.21 to i64)
  %7 = icmp ne i64 %6, -1
  %8 = and i1 %7, %4
  ret i1 %8
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN3net8HttpUtil7TrimLWSEPNSt3__111__wrap_iterIPKcEES6_(%"class.std::__1::__wrap_iter.16"* nocapture, %"class.std::__1::__wrap_iter.16"* nocapture) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__wrap_iter.16", %"class.std::__1::__wrap_iter.16"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::__wrap_iter.16", %"class.std::__1::__wrap_iter.16"* %1, i64 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ult i8* %4, %6
  br i1 %7, label %8, label %31

8:                                                ; preds = %2
  %9 = load i8, i8* %4, align 1
  %10 = sext i8 %9 to i32
  %11 = tail call i8* @memchr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0), i32 %10, i64 2) #17
  %12 = icmp ne i8* %11, null
  %13 = ptrtoint i8* %11 to i64
  %14 = sub i64 %13, ptrtoint ([3 x i8]* @.str.21 to i64)
  %15 = icmp ne i64 %14, -1
  %16 = and i1 %12, %15
  br i1 %16, label %26, label %31

17:                                               ; preds = %26
  %18 = load i8, i8* %28, align 1
  %19 = sext i8 %18 to i32
  %20 = tail call i8* @memchr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0), i32 %19, i64 2) #17
  %21 = icmp ne i8* %20, null
  %22 = ptrtoint i8* %20 to i64
  %23 = sub i64 %22, ptrtoint ([3 x i8]* @.str.21 to i64)
  %24 = icmp ne i64 %23, -1
  %25 = and i1 %21, %24
  br i1 %25, label %26, label %31

26:                                               ; preds = %8, %17
  %27 = phi i8* [ %28, %17 ], [ %4, %8 ]
  %28 = getelementptr inbounds i8, i8* %27, i64 1
  store i8* %28, i8** %3, align 8
  %29 = load i8*, i8** %5, align 8
  %30 = icmp ult i8* %28, %29
  br i1 %30, label %17, label %31

31:                                               ; preds = %17, %26, %8, %2
  %32 = phi i8* [ %6, %2 ], [ %6, %8 ], [ %29, %26 ], [ %29, %17 ]
  %33 = phi i8* [ %4, %2 ], [ %4, %8 ], [ %28, %26 ], [ %28, %17 ]
  %34 = icmp ult i8* %33, %32
  br i1 %34, label %35, label %49

35:                                               ; preds = %31, %46
  %36 = phi i8* [ %37, %46 ], [ %32, %31 ]
  %37 = getelementptr inbounds i8, i8* %36, i64 -1
  %38 = load i8, i8* %37, align 1
  %39 = sext i8 %38 to i32
  %40 = tail call i8* @memchr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0), i32 %39, i64 2) #17
  %41 = icmp ne i8* %40, null
  %42 = ptrtoint i8* %40 to i64
  %43 = sub i64 %42, ptrtoint ([3 x i8]* @.str.21 to i64)
  %44 = icmp ne i64 %43, -1
  %45 = and i1 %41, %44
  br i1 %45, label %46, label %49

46:                                               ; preds = %35
  store i8* %37, i8** %5, align 8
  %47 = load i8*, i8** %3, align 8
  %48 = icmp ult i8* %47, %37
  br i1 %48, label %35, label %49

49:                                               ; preds = %35, %46, %31
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN3net8HttpUtil11IsTokenCharEc(i8 signext) local_unnamed_addr #7 align 2 {
  %2 = icmp slt i8 %0, 33
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  switch i8 %0, label %4 [
    i8 127, label %5
    i8 123, label %5
    i8 93, label %5
    i8 92, label %5
    i8 91, label %5
    i8 64, label %5
    i8 63, label %5
    i8 62, label %5
    i8 61, label %5
    i8 60, label %5
    i8 59, label %5
    i8 58, label %5
    i8 47, label %5
    i8 44, label %5
    i8 41, label %5
    i8 40, label %5
    i8 34, label %5
    i8 125, label %5
  ]

4:                                                ; preds = %3
  br label %5

5:                                                ; preds = %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %1, %4
  %6 = phi i1 [ false, %3 ], [ true, %4 ], [ false, %1 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ], [ false, %3 ]
  ret i1 %6
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN3net8HttpUtil13IsControlCharEc(i8 signext) local_unnamed_addr #7 align 2 {
  %2 = icmp ult i8 %0, 32
  %3 = icmp eq i8 %0, 127
  %4 = or i1 %2, %3
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN3net8HttpUtil10IsParmNameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #5 align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %14, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %0, i64 %1
  br label %6

6:                                                ; preds = %4, %11
  %7 = phi i8* [ %12, %11 ], [ %0, %4 ]
  %8 = load i8, i8* %7, align 1
  %9 = tail call zeroext i1 @_ZN3net8HttpUtil11IsTokenCharEc(i8 signext %8)
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  switch i8 %8, label %11 [
    i8 42, label %14
    i8 39, label %14
    i8 37, label %14
  ]

11:                                               ; preds = %10
  %12 = getelementptr inbounds i8, i8* %7, i64 1
  %13 = icmp eq i8* %12, %5
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %11, %10, %10, %10, %2
  %15 = phi i1 [ false, %2 ], [ true, %11 ], [ false, %6 ], [ false, %10 ], [ false, %10 ], [ false, %10 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net8HttpUtil7UnquoteEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* noalias sret, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #17
  %7 = call fastcc zeroext i1 @_ZN3net12_GLOBAL__N_111UnquoteImplEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEbPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(i8* %1, i64 %2, i1 zeroext false, %"class.std::__1::basic_string"* nonnull %4)
  br i1 %7, label %30, label %8

8:                                                ; preds = %3
  %9 = icmp ugt i64 %2, -17
  br i1 %9, label %10, label %12

10:                                               ; preds = %8
  %11 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %11) #18
  unreachable

12:                                               ; preds = %8
  %13 = icmp ult i64 %2, 23
  br i1 %13, label %22, label %14

14:                                               ; preds = %12
  %15 = add nuw i64 %2, 16
  %16 = and i64 %15, -16
  %17 = tail call i8* @_Znwm(i64 %16) #19
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %17, i8** %18, align 8, !alias.scope !9
  %19 = or i64 %16, -9223372036854775808
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %19, i64* %20, align 8, !alias.scope !9
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %2, i64* %21, align 8, !alias.scope !9
  br label %28

22:                                               ; preds = %12
  %23 = trunc i64 %2 to i8
  %24 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  store i8 %23, i8* %25, align 1, !alias.scope !9
  %26 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %27 = icmp eq i64 %2, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %22, %14
  %29 = phi i8* [ %17, %14 ], [ %26, %22 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %29, i8* align 1 %1, i64 %2, i1 false) #17
  br label %32

30:                                               ; preds = %3
  %31 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* nonnull align 8 %5, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #17
  br label %41

32:                                               ; preds = %28, %22
  %33 = phi i8* [ %26, %22 ], [ %29, %28 ]
  %34 = getelementptr inbounds i8, i8* %33, i64 %2
  store i8 0, i8* %34, align 1
  %35 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %32
  %40 = load i8*, i8** %6, align 8
  tail call void @_ZdlPv(i8* %40) #19
  br label %41

41:                                               ; preds = %30, %32, %39
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN3net12_GLOBAL__N_111UnquoteImplEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEbPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(i8*, i64, i1 zeroext, %"class.std::__1::basic_string"* nocapture) unnamed_addr #0 {
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  store i8* %0, i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  store i64 %1, i64* %8, align 8
  %9 = icmp eq i64 %1, 0
  br i1 %9, label %73, label %10

10:                                               ; preds = %4
  %11 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %5, i64 0) #17
  %12 = load i8, i8* %11, align 1
  %13 = icmp ne i8 %12, 34
  %14 = load i64, i64* %8, align 8
  %15 = icmp ult i64 %14, 2
  %16 = or i1 %13, %15
  br i1 %16, label %73, label %17

17:                                               ; preds = %10
  %18 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %5, i64 0) #17
  %19 = load i8, i8* %18, align 1
  %20 = load i64, i64* %8, align 8
  %21 = add i64 %20, -1
  %22 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %5, i64 %21) #17
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %19, %23
  br i1 %24, label %25, label %73

25:                                               ; preds = %17
  call void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_prefixEm(%"class.base::BasicStringPiece"* nonnull %5, i64 1)
  call void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_suffixEm(%"class.base::BasicStringPiece"* nonnull %5, i64 1)
  %26 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #17
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 24, i1 false) #17
  %28 = load i8*, i8** %7, align 8
  %29 = load i64, i64* %8, align 8
  %30 = getelementptr inbounds i8, i8* %28, i64 %29
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %52, label %32

32:                                               ; preds = %25, %44
  %33 = phi i8* [ %46, %44 ], [ %28, %25 ]
  %34 = phi i8 [ %45, %44 ], [ 0, %25 ]
  %35 = load i8, i8* %33, align 1
  %36 = icmp eq i8 %35, 92
  %37 = icmp eq i8 %34, 0
  %38 = and i1 %37, %36
  br i1 %38, label %44, label %39

39:                                               ; preds = %32
  %40 = and i1 %37, %2
  %41 = icmp eq i8 %35, 34
  %42 = and i1 %40, %41
  br i1 %42, label %64, label %43

43:                                               ; preds = %39
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* nonnull %6, i8 signext %35) #17
  br label %44

44:                                               ; preds = %43, %32
  %45 = phi i8 [ 1, %32 ], [ 0, %43 ]
  %46 = getelementptr inbounds i8, i8* %33, i64 1
  %47 = icmp eq i8* %46, %30
  br i1 %47, label %48, label %32

48:                                               ; preds = %44
  %49 = xor i1 %2, true
  %50 = icmp eq i8 %45, 0
  %51 = or i1 %50, %49
  br i1 %51, label %52, label %64

52:                                               ; preds = %25, %48
  %53 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %59) #19
  br label %60

60:                                               ; preds = %52, %57
  %61 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* nonnull align 8 %26, i64 24, i1 false) #17
  %62 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  store i8 0, i8* %63, align 1
  store i8 0, i8* %26, align 8
  br label %64

64:                                               ; preds = %39, %48, %60
  %65 = phi i1 [ true, %60 ], [ false, %48 ], [ false, %39 ]
  %66 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %64
  %71 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %71) #19
  br label %72

72:                                               ; preds = %64, %70
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #17
  br label %73

73:                                               ; preds = %10, %17, %4, %72
  %74 = phi i1 [ %65, %72 ], [ false, %4 ], [ false, %10 ], [ false, %17 ]
  ret i1 %74
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net8HttpUtil13StrictUnquoteEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(i8*, i64, %"class.std::__1::basic_string"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = tail call fastcc zeroext i1 @_ZN3net12_GLOBAL__N_111UnquoteImplEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEbPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(i8* %0, i64 %1, i1 zeroext true, %"class.std::__1::basic_string"* %2)
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net8HttpUtil5QuoteEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* noalias sret, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #17
  %5 = add i64 %2, 2
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"* %0, i64 %5) #17
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %0, i8 signext 34) #17
  %6 = getelementptr inbounds i8, i8* %1, i64 %2
  %7 = icmp eq i64 %2, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %13, %3
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %0, i8 signext 34) #17
  ret void

9:                                                ; preds = %3, %13
  %10 = phi i8* [ %14, %13 ], [ %1, %3 ]
  %11 = load i8, i8* %10, align 1
  switch i8 %11, label %13 [
    i8 34, label %12
    i8 92, label %12
  ]

12:                                               ; preds = %9, %9
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %0, i8 signext 92) #17
  br label %13

13:                                               ; preds = %9, %12
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %0, i8 signext %11) #17
  %14 = getelementptr inbounds i8, i8* %10, i64 1
  %15 = icmp eq i8* %14, %6
  br i1 %15, label %8, label %9
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"*, i64) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"*, i8 signext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3net8HttpUtil23LocateStartOfStatusLineEPKcm(i8*, i64) local_unnamed_addr #0 align 2 {
  %3 = icmp ugt i64 %1, 3
  br i1 %3, label %4, label %15

4:                                                ; preds = %2
  %5 = add i64 %1, -4
  %6 = icmp ult i64 %5, 4
  %7 = select i1 %6, i64 %5, i64 4
  br label %8

8:                                                ; preds = %4, %12
  %9 = phi i64 [ 0, %4 ], [ %13, %12 ]
  %10 = getelementptr inbounds i8, i8* %0, i64 %9
  %11 = tail call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %10, i64 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0), i64 4) #17
  br i1 %11, label %15, label %12

12:                                               ; preds = %8
  %13 = add i64 %9, 1
  %14 = icmp ugt i64 %13, %7
  br i1 %14, label %15, label %8

15:                                               ; preds = %12, %8, %2
  %16 = phi i64 [ -1, %2 ], [ -1, %12 ], [ %9, %8 ]
  ret i64 %16
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN3net8HttpUtil28LocateEndOfAdditionalHeadersEPKcmm(i8* nocapture readonly, i64, i64) local_unnamed_addr #5 align 2 {
  %4 = icmp ult i64 %2, %1
  br i1 %4, label %5, label %23

5:                                                ; preds = %3, %17
  %6 = phi i8 [ %18, %17 ], [ 1, %3 ]
  %7 = phi i8 [ %10, %17 ], [ 10, %3 ]
  %8 = phi i64 [ %19, %17 ], [ %2, %3 ]
  %9 = getelementptr inbounds i8, i8* %0, i64 %8
  %10 = load i8, i8* %9, align 1
  switch i8 %10, label %13 [
    i8 10, label %14
    i8 13, label %11
  ]

11:                                               ; preds = %5
  %12 = icmp eq i8 %7, 10
  br i1 %12, label %17, label %13

13:                                               ; preds = %11, %5
  br label %17

14:                                               ; preds = %5
  %15 = and i8 %6, 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %14, %13, %11
  %18 = phi i8 [ 1, %14 ], [ %6, %11 ], [ 0, %13 ]
  %19 = add i64 %8, 1
  %20 = icmp eq i64 %19, %1
  br i1 %20, label %23, label %5

21:                                               ; preds = %14
  %22 = add nuw i64 %8, 1
  br label %23

23:                                               ; preds = %17, %3, %21
  %24 = phi i64 [ -1, %3 ], [ %22, %21 ], [ -1, %17 ]
  ret i64 %24
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN3net8HttpUtil18LocateEndOfHeadersEPKcmm(i8* nocapture readonly, i64, i64) local_unnamed_addr #5 align 2 {
  %4 = icmp ult i64 %2, %1
  br i1 %4, label %5, label %23

5:                                                ; preds = %3, %17
  %6 = phi i8 [ %18, %17 ], [ 0, %3 ]
  %7 = phi i8 [ %10, %17 ], [ 0, %3 ]
  %8 = phi i64 [ %19, %17 ], [ %2, %3 ]
  %9 = getelementptr inbounds i8, i8* %0, i64 %8
  %10 = load i8, i8* %9, align 1
  switch i8 %10, label %13 [
    i8 10, label %14
    i8 13, label %11
  ]

11:                                               ; preds = %5
  %12 = icmp eq i8 %7, 10
  br i1 %12, label %17, label %13

13:                                               ; preds = %11, %5
  br label %17

14:                                               ; preds = %5
  %15 = and i8 %6, 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %14, %13, %11
  %18 = phi i8 [ 1, %14 ], [ %6, %11 ], [ 0, %13 ]
  %19 = add i64 %8, 1
  %20 = icmp eq i64 %19, %1
  br i1 %20, label %23, label %5

21:                                               ; preds = %14
  %22 = add nuw i64 %8, 1
  br label %23

23:                                               ; preds = %17, %3, %21
  %24 = phi i64 [ -1, %3 ], [ %22, %21 ], [ -1, %17 ]
  ret i64 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net8HttpUtil18AssembleRawHeadersEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* noalias sret, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to %"class.base::BasicStringPiece"*
  %6 = alloca %"class.base::BasicStringPiece", align 8
  %7 = alloca %"class.base::BasicStringPiece", align 8
  %8 = alloca %"class.base::BasicStringPiece", align 8
  %9 = alloca %"class.base::StringTokenizerT.17", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca <2 x i64>, align 16
  %12 = bitcast <2 x i64>* %11 to %"class.base::BasicStringPiece"*
  %13 = alloca [2 x %"class.base::BasicStringPiece"], align 8
  %14 = alloca [2 x %"class.base::BasicStringPiece"], align 8
  %15 = alloca i8, align 1
  %16 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 0
  store i8* %1, i8** %16, align 8
  %17 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 1
  store i64 %2, i64* %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #17
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"* %0, i64 %2) #17
  %21 = icmp ugt i64 %2, 3
  br i1 %21, label %22, label %38

22:                                               ; preds = %3
  %23 = add i64 %2, -4
  %24 = icmp ult i64 %23, 4
  %25 = select i1 %24, i64 %23, i64 4
  br label %26

26:                                               ; preds = %30, %22
  %27 = phi i64 [ 0, %22 ], [ %31, %30 ]
  %28 = getelementptr inbounds i8, i8* %1, i64 %27
  %29 = tail call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %28, i64 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0), i64 4) #17
  br i1 %29, label %33, label %30

30:                                               ; preds = %26
  %31 = add i64 %27, 1
  %32 = icmp ugt i64 %31, %25
  br i1 %32, label %38, label %26

33:                                               ; preds = %26
  %34 = icmp eq i64 %27, -1
  br i1 %34, label %38, label %35

35:                                               ; preds = %33
  call void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_prefixEm(%"class.base::BasicStringPiece"* nonnull %8, i64 %27)
  %36 = load i8*, i8** %16, align 8
  %37 = load i64, i64* %17, align 8
  br label %38

38:                                               ; preds = %30, %35, %33, %3
  %39 = phi i64 [ %2, %3 ], [ %2, %33 ], [ %37, %35 ], [ %2, %30 ]
  %40 = phi i8* [ %1, %3 ], [ %1, %33 ], [ %36, %35 ], [ %1, %30 ]
  %41 = call i64 @_ZN4base8internal13find_first_ofENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_m(i8* %40, i64 %39, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23, i64 0, i64 0), i64 2, i64 0) #17
  %42 = icmp eq i64 %41, -1
  %43 = select i1 %42, i64 %39, i64 %41
  %44 = load i8*, i8** %16, align 8
  %45 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %44, i64 %43) #17
  call void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_prefixEm(%"class.base::BasicStringPiece"* nonnull %8, i64 %43)
  %46 = bitcast %"class.base::StringTokenizerT.17"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %46) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 96, i1 false)
  %47 = load i8*, i8** %16, align 8
  %48 = load i64, i64* %17, align 8
  %49 = getelementptr inbounds i8, i8* %47, i64 %48
  %50 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #17
  %51 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  store i8 2, i8* %52, align 1
  %53 = bitcast %"class.std::__1::basic_string"* %10 to i16*
  store i16 2573, i16* %53, align 8
  %54 = getelementptr inbounds i8, i8* %50, i64 2
  store i8 0, i8* %54, align 2
  %55 = getelementptr inbounds %"class.base::StringTokenizerT.17", %"class.base::StringTokenizerT.17"* %9, i64 0, i32 4
  %56 = bitcast %"class.std::__1::basic_string"* %55 to i8*
  %57 = getelementptr inbounds %"class.base::StringTokenizerT.17", %"class.base::StringTokenizerT.17"* %9, i64 0, i32 0
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 1
  %59 = bitcast %"class.std::__1::basic_string"* %58 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 24, i1 false) #17
  store i8* %47, i8** %57, align 8
  %60 = getelementptr inbounds %"class.base::StringTokenizerT.17", %"class.base::StringTokenizerT.17"* %9, i64 0, i32 1
  store i8* %47, i8** %60, align 8
  %61 = getelementptr inbounds %"class.base::StringTokenizerT.17", %"class.base::StringTokenizerT.17"* %9, i64 0, i32 2
  store i8* %47, i8** %61, align 8
  %62 = getelementptr inbounds %"class.base::StringTokenizerT.17", %"class.base::StringTokenizerT.17"* %9, i64 0, i32 3
  store i8* %49, i8** %62, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* nonnull align 8 %50, i64 24, i1 false) #17
  %63 = getelementptr inbounds %"class.base::StringTokenizerT.17", %"class.base::StringTokenizerT.17"* %9, i64 0, i32 6
  store i32 0, i32* %63, align 8
  %64 = getelementptr inbounds %"class.base::StringTokenizerT.17", %"class.base::StringTokenizerT.17"* %9, i64 0, i32 7
  store i8 1, i8* %64, align 4
  %65 = getelementptr inbounds %"class.base::StringTokenizerT.17", %"class.base::StringTokenizerT.17"* %9, i64 0, i32 9
  store i32 0, i32* %65, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #17
  %66 = getelementptr inbounds %"class.base::StringTokenizerT.17", %"class.base::StringTokenizerT.17"* %9, i64 0, i32 5
  %67 = bitcast %"class.std::__1::basic_string"* %66 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = getelementptr inbounds %"class.base::StringTokenizerT.17", %"class.base::StringTokenizerT.17"* %9, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %70 = bitcast <2 x i64>* %11 to i8*
  %71 = bitcast <2 x i64>* %11 to i8**
  %72 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %12, i64 0, i32 1
  %73 = bitcast i8** %61 to i64*
  %74 = bitcast [2 x %"class.base::BasicStringPiece"]* %13 to i8*
  %75 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %13, i64 0, i64 0
  %76 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %13, i64 0, i64 0, i32 0
  %77 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %13, i64 0, i64 0, i32 1
  %78 = bitcast <2 x i64>* %4 to i8*
  %79 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  %80 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %13, i64 0, i64 1, i32 0
  %81 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %13, i64 0, i64 1, i32 1
  %82 = bitcast [2 x %"class.base::BasicStringPiece"]* %14 to i8*
  %83 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %14, i64 0, i64 0
  %84 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %14, i64 0, i64 0, i32 0
  %85 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %14, i64 0, i64 0, i32 1
  %86 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %14, i64 0, i64 1
  %87 = bitcast %"class.base::BasicStringPiece"* %86 to i8*
  %88 = bitcast %"class.base::BasicStringPiece"* %6 to i8*
  %89 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 0
  %90 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 1
  %91 = bitcast %"class.base::BasicStringPiece"* %7 to i8*
  %92 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 0
  %93 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 1
  br label %94

94:                                               ; preds = %184, %38
  %95 = phi i32 [ 0, %38 ], [ %188, %184 ]
  %96 = phi i64 [ 0, %38 ], [ %187, %184 ]
  %97 = phi i8 [ 0, %38 ], [ %186, %184 ]
  %98 = phi i8 [ 0, %38 ], [ %185, %184 ]
  %99 = icmp slt i8 %97, 0
  %100 = zext i8 %97 to i64
  %101 = select i1 %99, i64 %96, i64 %100
  %102 = icmp eq i64 %101, 0
  %103 = icmp eq i32 %95, 0
  %104 = and i1 %102, %103
  br i1 %104, label %105, label %107

105:                                              ; preds = %94
  %106 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKcE12QuickGetNextEv(%"class.base::StringTokenizerT.17"* nonnull %9) #17
  br i1 %106, label %109, label %189

107:                                              ; preds = %94
  %108 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKcE11FullGetNextEv(%"class.base::StringTokenizerT.17"* nonnull %9) #17
  br i1 %108, label %109, label %189

109:                                              ; preds = %105, %107
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70) #17
  %110 = load i8*, i8** %60, align 8
  %111 = load i64, i64* %73, align 8
  %112 = ptrtoint i8* %110 to i64
  %113 = sub i64 %111, %112
  store i8* %110, i8** %71, align 16
  store i64 %113, i64* %72, align 8
  %114 = and i8 %98, 1
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %152, label %116

116:                                              ; preds = %109
  %117 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %12, i64 0) #17
  %118 = load i8, i8* %117, align 1
  %119 = sext i8 %118 to i32
  %120 = call i8* @memchr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0), i32 %119, i64 2) #17
  %121 = icmp ne i8* %120, null
  %122 = ptrtoint i8* %120 to i64
  %123 = sub i64 %122, ptrtoint ([3 x i8]* @.str.21 to i64)
  %124 = icmp ne i64 %123, -1
  %125 = and i1 %121, %124
  br i1 %125, label %126, label %152

126:                                              ; preds = %116
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %74) #17
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i64 0, i64 0), i8** %76, align 8
  store i64 1, i64* %77, align 8
  %127 = load <2 x i64>, <2 x i64>* %11, align 16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %78)
  store <2 x i64> %127, <2 x i64>* %4, align 16
  %128 = extractelement <2 x i64> %127, i32 1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %149, label %130

130:                                              ; preds = %126, %145
  %131 = phi i64 [ %146, %145 ], [ 0, %126 ]
  %132 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %5, i64 %131) #17
  %133 = load i8, i8* %132, align 1
  %134 = sext i8 %133 to i32
  %135 = call i8* @memchr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0), i32 %134, i64 2) #17
  %136 = icmp ne i8* %135, null
  %137 = ptrtoint i8* %135 to i64
  %138 = sub i64 %137, ptrtoint ([3 x i8]* @.str.21 to i64)
  %139 = icmp ne i64 %138, -1
  %140 = and i1 %136, %139
  br i1 %140, label %145, label %141

141:                                              ; preds = %130
  %142 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %5, i64 %131, i64 -1) #17
  %143 = extractvalue { i8*, i64 } %142, 0
  %144 = extractvalue { i8*, i64 } %142, 1
  br label %149

145:                                              ; preds = %130
  %146 = add nuw i64 %131, 1
  %147 = load i64, i64* %79, align 8
  %148 = icmp ult i64 %146, %147
  br i1 %148, label %130, label %149

149:                                              ; preds = %145, %126, %141
  %150 = phi i8* [ %143, %141 ], [ null, %126 ], [ null, %145 ]
  %151 = phi i64 [ %144, %141 ], [ 0, %126 ], [ 0, %145 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %78)
  store i8* %150, i8** %80, align 8
  store i64 %151, i64* %81, align 8
  call void @_ZN4base9StrAppendEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS_4spanIKNS_16BasicStringPieceIcS3_EELm18446744073709551615EEE(%"class.std::__1::basic_string"* %0, i64 2, %"class.base::BasicStringPiece"* nonnull %75) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %74) #17
  br label %184

152:                                              ; preds = %109, %116
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %82) #17
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i64 0, i64 0), i8** %84, align 8
  store i64 1, i64* %85, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* nonnull align 16 %70, i64 16, i1 false)
  call void @_ZN4base9StrAppendEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS_4spanIKNS_16BasicStringPieceIcS3_EELm18446744073709551615EEE(%"class.std::__1::basic_string"* %0, i64 2, %"class.base::BasicStringPiece"* nonnull %83) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %82) #17
  %153 = load i8*, i8** %71, align 16
  %154 = load i64, i64* %72, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %88)
  store i8* %153, i8** %89, align 8
  store i64 %154, i64* %90, align 8
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %181, label %156

156:                                              ; preds = %152
  %157 = call i8* @memchr(i8* %153, i32 58, i64 %154) #17
  %158 = icmp eq i8* %157, null
  br i1 %158, label %181, label %159

159:                                              ; preds = %156
  %160 = ptrtoint i8* %157 to i64
  %161 = ptrtoint i8* %153 to i64
  %162 = sub i64 %160, %161
  %163 = icmp eq i64 %162, -1
  br i1 %163, label %181, label %164

164:                                              ; preds = %159
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %91) #17
  %165 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %6, i64 0, i64 %162) #17
  %166 = extractvalue { i8*, i64 } %165, 0
  store i8* %166, i8** %92, align 8
  %167 = extractvalue { i8*, i64 } %165, 1
  store i64 %167, i64* %93, align 8
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %179, label %169

169:                                              ; preds = %164
  %170 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %7, i64 0) #17
  %171 = load i8, i8* %170, align 1
  %172 = sext i8 %171 to i32
  %173 = call i8* @memchr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0), i32 %172, i64 2) #17
  %174 = icmp eq i8* %173, null
  %175 = ptrtoint i8* %173 to i64
  %176 = sub i64 %175, ptrtoint ([3 x i8]* @.str.21 to i64)
  %177 = icmp eq i64 %176, -1
  %178 = or i1 %174, %177
  br label %179

179:                                              ; preds = %169, %164
  %180 = phi i1 [ false, %164 ], [ %178, %169 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %91) #17
  br label %181

181:                                              ; preds = %152, %156, %159, %179
  %182 = phi i1 [ false, %152 ], [ %180, %179 ], [ false, %159 ], [ false, %156 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %88)
  %183 = zext i1 %182 to i8
  br label %184

184:                                              ; preds = %181, %149
  %185 = phi i8 [ %98, %149 ], [ %183, %181 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70) #17
  %186 = load i8, i8* %68, align 1
  %187 = load i64, i64* %69, align 8
  %188 = load i32, i32* %63, align 8
  br label %94

189:                                              ; preds = %105, %107
  %190 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i64 0, i64 0), i64 2) #17
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %15) #17
  store i8 0, i8* %15, align 1
  %191 = call i64 @_ZN4base5EraseIcNSt3__111char_traitsIcEENS1_9allocatorIcEEcEEmRNS1_12basic_stringIT_T0_T1_EERKT2_(%"class.std::__1::basic_string"* dereferenceable(24) %0, i8* nonnull dereferenceable(1) %15)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #17
  %192 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %193 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %192, i64 0, i32 1, i32 0
  %194 = load i8, i8* %193, align 1
  %195 = icmp slt i8 %194, 0
  %196 = load i8*, i8** %18, align 8
  %197 = load i64, i64* %19, align 8
  %198 = zext i8 %194 to i64
  %199 = select i1 %195, i8* %196, i8* %20
  %200 = select i1 %195, i64 %197, i64 %198
  %201 = getelementptr inbounds i8, i8* %199, i64 %200
  %202 = icmp eq i64 %200, 0
  br i1 %202, label %306, label %203

203:                                              ; preds = %189
  %204 = icmp ult i64 %200, 16
  br i1 %204, label %296, label %205

205:                                              ; preds = %203
  %206 = and i64 %200, -16
  %207 = getelementptr i8, i8* %199, i64 %206
  br label %208

208:                                              ; preds = %291, %205
  %209 = phi i64 [ 0, %205 ], [ %292, %291 ]
  %210 = getelementptr i8, i8* %199, i64 %209
  %211 = bitcast i8* %210 to <16 x i8>*
  %212 = load <16 x i8>, <16 x i8>* %211, align 1
  %213 = icmp eq <16 x i8> %212, <i8 10, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10>
  %214 = extractelement <16 x i1> %213, i32 0
  br i1 %214, label %215, label %216

215:                                              ; preds = %208
  store i8 0, i8* %210, align 1
  br label %216

216:                                              ; preds = %215, %208
  %217 = extractelement <16 x i1> %213, i32 1
  br i1 %217, label %218, label %221

218:                                              ; preds = %216
  %219 = or i64 %209, 1
  %220 = getelementptr i8, i8* %199, i64 %219
  store i8 0, i8* %220, align 1
  br label %221

221:                                              ; preds = %218, %216
  %222 = extractelement <16 x i1> %213, i32 2
  br i1 %222, label %223, label %226

223:                                              ; preds = %221
  %224 = or i64 %209, 2
  %225 = getelementptr i8, i8* %199, i64 %224
  store i8 0, i8* %225, align 1
  br label %226

226:                                              ; preds = %223, %221
  %227 = extractelement <16 x i1> %213, i32 3
  br i1 %227, label %228, label %231

228:                                              ; preds = %226
  %229 = or i64 %209, 3
  %230 = getelementptr i8, i8* %199, i64 %229
  store i8 0, i8* %230, align 1
  br label %231

231:                                              ; preds = %228, %226
  %232 = extractelement <16 x i1> %213, i32 4
  br i1 %232, label %233, label %236

233:                                              ; preds = %231
  %234 = or i64 %209, 4
  %235 = getelementptr i8, i8* %199, i64 %234
  store i8 0, i8* %235, align 1
  br label %236

236:                                              ; preds = %233, %231
  %237 = extractelement <16 x i1> %213, i32 5
  br i1 %237, label %238, label %241

238:                                              ; preds = %236
  %239 = or i64 %209, 5
  %240 = getelementptr i8, i8* %199, i64 %239
  store i8 0, i8* %240, align 1
  br label %241

241:                                              ; preds = %238, %236
  %242 = extractelement <16 x i1> %213, i32 6
  br i1 %242, label %243, label %246

243:                                              ; preds = %241
  %244 = or i64 %209, 6
  %245 = getelementptr i8, i8* %199, i64 %244
  store i8 0, i8* %245, align 1
  br label %246

246:                                              ; preds = %243, %241
  %247 = extractelement <16 x i1> %213, i32 7
  br i1 %247, label %248, label %251

248:                                              ; preds = %246
  %249 = or i64 %209, 7
  %250 = getelementptr i8, i8* %199, i64 %249
  store i8 0, i8* %250, align 1
  br label %251

251:                                              ; preds = %248, %246
  %252 = extractelement <16 x i1> %213, i32 8
  br i1 %252, label %253, label %256

253:                                              ; preds = %251
  %254 = or i64 %209, 8
  %255 = getelementptr i8, i8* %199, i64 %254
  store i8 0, i8* %255, align 1
  br label %256

256:                                              ; preds = %253, %251
  %257 = extractelement <16 x i1> %213, i32 9
  br i1 %257, label %258, label %261

258:                                              ; preds = %256
  %259 = or i64 %209, 9
  %260 = getelementptr i8, i8* %199, i64 %259
  store i8 0, i8* %260, align 1
  br label %261

261:                                              ; preds = %258, %256
  %262 = extractelement <16 x i1> %213, i32 10
  br i1 %262, label %263, label %266

263:                                              ; preds = %261
  %264 = or i64 %209, 10
  %265 = getelementptr i8, i8* %199, i64 %264
  store i8 0, i8* %265, align 1
  br label %266

266:                                              ; preds = %263, %261
  %267 = extractelement <16 x i1> %213, i32 11
  br i1 %267, label %268, label %271

268:                                              ; preds = %266
  %269 = or i64 %209, 11
  %270 = getelementptr i8, i8* %199, i64 %269
  store i8 0, i8* %270, align 1
  br label %271

271:                                              ; preds = %268, %266
  %272 = extractelement <16 x i1> %213, i32 12
  br i1 %272, label %273, label %276

273:                                              ; preds = %271
  %274 = or i64 %209, 12
  %275 = getelementptr i8, i8* %199, i64 %274
  store i8 0, i8* %275, align 1
  br label %276

276:                                              ; preds = %273, %271
  %277 = extractelement <16 x i1> %213, i32 13
  br i1 %277, label %278, label %281

278:                                              ; preds = %276
  %279 = or i64 %209, 13
  %280 = getelementptr i8, i8* %199, i64 %279
  store i8 0, i8* %280, align 1
  br label %281

281:                                              ; preds = %278, %276
  %282 = extractelement <16 x i1> %213, i32 14
  br i1 %282, label %283, label %286

283:                                              ; preds = %281
  %284 = or i64 %209, 14
  %285 = getelementptr i8, i8* %199, i64 %284
  store i8 0, i8* %285, align 1
  br label %286

286:                                              ; preds = %283, %281
  %287 = extractelement <16 x i1> %213, i32 15
  br i1 %287, label %288, label %291

288:                                              ; preds = %286
  %289 = or i64 %209, 15
  %290 = getelementptr i8, i8* %199, i64 %289
  store i8 0, i8* %290, align 1
  br label %291

291:                                              ; preds = %288, %286
  %292 = add i64 %209, 16
  %293 = icmp eq i64 %292, %206
  br i1 %293, label %294, label %208, !llvm.loop !12

294:                                              ; preds = %291
  %295 = icmp eq i64 %200, %206
  br i1 %295, label %306, label %296

296:                                              ; preds = %294, %203
  %297 = phi i8* [ %199, %203 ], [ %207, %294 ]
  br label %298

298:                                              ; preds = %296, %303
  %299 = phi i8* [ %304, %303 ], [ %297, %296 ]
  %300 = load i8, i8* %299, align 1
  %301 = icmp eq i8 %300, 10
  br i1 %301, label %302, label %303

302:                                              ; preds = %298
  store i8 0, i8* %299, align 1
  br label %303

303:                                              ; preds = %302, %298
  %304 = getelementptr inbounds i8, i8* %299, i64 1
  %305 = icmp eq i8* %304, %201
  br i1 %305, label %306, label %298, !llvm.loop !14

306:                                              ; preds = %303, %294, %189
  %307 = load i8, i8* %68, align 1
  %308 = icmp slt i8 %307, 0
  br i1 %308, label %309, label %312

309:                                              ; preds = %306
  %310 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %311 = load i8*, i8** %310, align 8
  call void @_ZdlPv(i8* %311) #19
  br label %312

312:                                              ; preds = %309, %306
  %313 = bitcast %"class.std::__1::basic_string"* %55 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %314 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %313, i64 0, i32 1, i32 0
  %315 = load i8, i8* %314, align 1
  %316 = icmp slt i8 %315, 0
  br i1 %316, label %317, label %320

317:                                              ; preds = %312
  %318 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %319 = load i8*, i8** %318, align 8
  call void @_ZdlPv(i8* %319) #19
  br label %320

320:                                              ; preds = %312, %317
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %46) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
declare void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_prefixEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #0 align 2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4base5EraseIcNSt3__111char_traitsIcEENS1_9allocatorIcEEcEEmRNS1_12basic_stringIT_T0_T1_EERKT2_(%"class.std::__1::basic_string"* dereferenceable(24), i8* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %12 = zext i8 %5 to i64
  %13 = select i1 %6, i8* %8, i8* %11
  %14 = select i1 %6, i64 %10, i64 %12
  %15 = getelementptr inbounds i8, i8* %13, i64 %14
  %16 = icmp eq i64 %14, 0
  br i1 %16, label %28, label %17

17:                                               ; preds = %2
  %18 = load i8, i8* %1, align 1
  br label %19

19:                                               ; preds = %23, %17
  %20 = phi i8* [ %13, %17 ], [ %24, %23 ]
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, %18
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds i8, i8* %20, i64 1
  %25 = icmp eq i8* %24, %15
  br i1 %25, label %26, label %19

26:                                               ; preds = %23
  %27 = ptrtoint i8* %15 to i64
  br label %51

28:                                               ; preds = %19, %2
  %29 = phi i8* [ %13, %2 ], [ %20, %19 ]
  %30 = ptrtoint i8* %29 to i64
  %31 = icmp eq i8* %29, %15
  br i1 %31, label %51, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds i8, i8* %29, i64 1
  %34 = icmp eq i8* %33, %15
  br i1 %34, label %51, label %35

35:                                               ; preds = %32, %45
  %36 = phi i8* [ %47, %45 ], [ %33, %32 ]
  %37 = phi i64 [ %46, %45 ], [ %30, %32 ]
  %38 = load i8, i8* %36, align 1
  %39 = load i8, i8* %1, align 1
  %40 = icmp eq i8 %38, %39
  br i1 %40, label %45, label %41

41:                                               ; preds = %35
  %42 = inttoptr i64 %37 to i8*
  store i8 %38, i8* %42, align 1
  %43 = getelementptr inbounds i8, i8* %42, i64 1
  %44 = ptrtoint i8* %43 to i64
  br label %45

45:                                               ; preds = %41, %35
  %46 = phi i64 [ %37, %35 ], [ %44, %41 ]
  %47 = getelementptr inbounds i8, i8* %36, i64 1
  %48 = icmp eq i8* %47, %15
  br i1 %48, label %49, label %35

49:                                               ; preds = %45
  %50 = load i8, i8* %4, align 1
  br label %51

51:                                               ; preds = %49, %26, %28, %32
  %52 = phi i8 [ %5, %28 ], [ %5, %26 ], [ %5, %32 ], [ %50, %49 ]
  %53 = phi i64 [ %30, %28 ], [ %27, %26 ], [ %30, %32 ], [ %46, %49 ]
  %54 = icmp slt i8 %52, 0
  %55 = load i8*, i8** %7, align 8
  %56 = load i64, i64* %9, align 8
  %57 = getelementptr inbounds i8, i8* %55, i64 %56
  %58 = ptrtoint i8* %55 to i64
  %59 = zext i8 %52 to i64
  %60 = getelementptr inbounds i8, i8* %11, i64 %59
  %61 = ptrtoint %"class.std::__1::basic_string"* %0 to i64
  %62 = select i1 %54, i8* %57, i8* %60
  %63 = select i1 %54, i64 %58, i64 %61
  %64 = select i1 %54, i64 %56, i64 %59
  %65 = ptrtoint i8* %62 to i64
  %66 = sub i64 %65, %53
  %67 = ptrtoint i8* %62 to i64
  %68 = sub i64 %53, %63
  %69 = sub i64 %67, %53
  %70 = icmp ult i64 %64, %68
  br i1 %70, label %71, label %73

71:                                               ; preds = %51
  %72 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %72) #18
  unreachable

73:                                               ; preds = %51
  %74 = icmp eq i64 %69, -1
  br i1 %74, label %75, label %82

75:                                               ; preds = %73
  br i1 %54, label %76, label %79

76:                                               ; preds = %75
  %77 = load i8*, i8** %7, align 8
  %78 = getelementptr inbounds i8, i8* %77, i64 %68
  store i8 0, i8* %78, align 1
  store i64 %68, i64* %9, align 8
  br label %83

79:                                               ; preds = %75
  %80 = getelementptr inbounds i8, i8* %11, i64 %68
  store i8 0, i8* %80, align 1
  %81 = trunc i64 %68 to i8
  store i8 %81, i8* %4, align 1
  br label %83

82:                                               ; preds = %73
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE26__erase_external_with_moveEmm(%"class.std::__1::basic_string"* %0, i64 %68, i64 %69) #17
  br label %83

83:                                               ; preds = %76, %79, %82
  ret i64 %66
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net8HttpUtil32ConvertHeadersBackToHTTPResponseERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::StringTokenizerT", align 8
  %4 = alloca [2 x %"class.base::BasicStringPiece"], align 8
  %5 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #17
  %6 = bitcast %"class.base::StringTokenizerT"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %6) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 96, i1 false)
  %7 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 1, i32 0
  %9 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 2, i32 0
  %10 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 3, i32 0
  %11 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 4
  %12 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = bitcast i64* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 40, i1 false) #17
  %16 = load i8, i8* %13, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %23 = zext i8 %16 to i64
  %24 = select i1 %17, i8* %19, i8* %22
  %25 = select i1 %17, i64 %21, i64 %23
  %26 = getelementptr inbounds i8, i8* %24, i64 %25
  store i8* %24, i8** %7, align 8
  store i8* %24, i8** %8, align 8
  store i8* %24, i8** %9, align 8
  store i8* %26, i8** %10, align 8
  %27 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* null, i8** %27, align 8
  %28 = getelementptr inbounds i8, i8* %6, i64 55
  store i8 1, i8* %28, align 1
  %29 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 6
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 7
  store i8 1, i8* %30, align 4
  %31 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 9
  store i32 0, i32* %31, align 8
  %32 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 5
  %33 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = bitcast [2 x %"class.base::BasicStringPiece"]* %4 to i8*
  %37 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %4, i64 0, i64 0
  %38 = bitcast i8** %9 to i64*
  %39 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %4, i64 0, i64 0, i32 0
  %40 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %4, i64 0, i64 0, i32 1
  %41 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %4, i64 0, i64 1, i32 0
  %42 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %4, i64 0, i64 1, i32 1
  br label %43

43:                                               ; preds = %57, %2
  %44 = phi i32 [ %64, %57 ], [ 0, %2 ]
  %45 = phi i64 [ %63, %57 ], [ 0, %2 ]
  %46 = phi i8 [ %62, %57 ], [ 0, %2 ]
  %47 = icmp slt i8 %46, 0
  %48 = zext i8 %46 to i64
  %49 = select i1 %47, i64 %45, i64 %48
  %50 = icmp eq i64 %49, 0
  %51 = icmp eq i32 %44, 0
  %52 = and i1 %50, %51
  br i1 %52, label %53, label %55

53:                                               ; preds = %43
  %54 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE12QuickGetNextEv(%"class.base::StringTokenizerT"* nonnull %3) #17
  br i1 %54, label %57, label %65

55:                                               ; preds = %43
  %56 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE11FullGetNextEv(%"class.base::StringTokenizerT"* nonnull %3) #17
  br i1 %56, label %57, label %65

57:                                               ; preds = %53, %55
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #17
  %58 = load i8*, i8** %8, align 8
  %59 = load i64, i64* %38, align 8
  %60 = ptrtoint i8* %58 to i64
  %61 = sub i64 %59, %60
  store i8* %58, i8** %39, align 8
  store i64 %61, i64* %40, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23, i64 0, i64 0), i8** %41, align 8
  store i64 2, i64* %42, align 8
  call void @_ZN4base9StrAppendEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS_4spanIKNS_16BasicStringPieceIcS3_EELm18446744073709551615EEE(%"class.std::__1::basic_string"* %0, i64 2, %"class.base::BasicStringPiece"* nonnull %37) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #17
  %62 = load i8, i8* %34, align 1
  %63 = load i64, i64* %35, align 8
  %64 = load i32, i32* %29, align 8
  br label %43

65:                                               ; preds = %53, %55
  %66 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23, i64 0, i64 0)) #17
  %67 = load i8, i8* %34, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  call void @_ZdlPv(i8* %71) #19
  br label %72

72:                                               ; preds = %69, %65
  %73 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  call void @_ZdlPv(i8* %79) #19
  br label %80

80:                                               ; preds = %72, %77
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %6) #17
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net8HttpUtil18ExpandLanguageListERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.20", align 8
  %4 = alloca %"class.net::(anonymous namespace)::AcceptLanguageBuilder", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %"class.std::__1::vector.20"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #17
  %8 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %3, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %3, i64 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = bitcast %"class.std::__1::vector.20"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  %13 = load i8, i8* %11, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %18 = select i1 %14, i8* %16, i8* %17
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = zext i8 %13 to i64
  %22 = select i1 %14, i64 %20, i64 %21
  call void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.20"* nonnull sret %3, i8* %18, i64 %22, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27, i64 0, i64 0), i64 1, i32 1, i32 0) #17
  %23 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %24 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %25 = icmp eq %"class.std::__1::basic_string"* %23, %24
  br i1 %25, label %26, label %30

26:                                               ; preds = %2
  %27 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  store i8 0, i8* %28, align 1
  %29 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %29, align 8
  br label %232

30:                                               ; preds = %2
  %31 = ptrtoint %"class.std::__1::basic_string"* %23 to i64
  %32 = ptrtoint %"class.std::__1::basic_string"* %24 to i64
  %33 = bitcast %"class.net::(anonymous namespace)::AcceptLanguageBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %33) #17
  %34 = getelementptr inbounds %"class.net::(anonymous namespace)::AcceptLanguageBuilder", %"class.net::(anonymous namespace)::AcceptLanguageBuilder"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.net::(anonymous namespace)::AcceptLanguageBuilder", %"class.net::(anonymous namespace)::AcceptLanguageBuilder"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.net::(anonymous namespace)::AcceptLanguageBuilder", %"class.net::(anonymous namespace)::AcceptLanguageBuilder"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.net::(anonymous namespace)::AcceptLanguageBuilder", %"class.net::(anonymous namespace)::AcceptLanguageBuilder"* %4, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.net::(anonymous namespace)::AcceptLanguageBuilder", %"class.net::(anonymous namespace)::AcceptLanguageBuilder"* %4, i64 0, i32 1, i32 0, i32 4, i64 0
  %39 = getelementptr inbounds %"class.net::(anonymous namespace)::AcceptLanguageBuilder", %"class.net::(anonymous namespace)::AcceptLanguageBuilder"* %4, i64 0, i32 1, i32 0, i32 3
  %40 = bitcast %"class.std::__1::__compressed_pair.43"* %39 to i32*
  %41 = bitcast i8* %38 to i32*
  store i32 -1431655766, i32* %41, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 56, i1 false) #17
  store i32 1065353216, i32* %40, align 8
  %42 = sub i64 %32, %31
  %43 = sdiv exact i64 %42, 24
  %44 = icmp eq i64 %42, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %30
  %46 = bitcast %"class.net::(anonymous namespace)::AcceptLanguageBuilder"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  br label %67

48:                                               ; preds = %30
  %49 = getelementptr inbounds %"class.net::(anonymous namespace)::AcceptLanguageBuilder", %"class.net::(anonymous namespace)::AcceptLanguageBuilder"* %4, i64 0, i32 1, i32 0
  %50 = getelementptr inbounds %"class.net::(anonymous namespace)::AcceptLanguageBuilder", %"class.net::(anonymous namespace)::AcceptLanguageBuilder"* %4, i64 0, i32 0
  %51 = bitcast %"class.net::(anonymous namespace)::AcceptLanguageBuilder"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %54 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %57 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %58 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %104

63:                                               ; preds = %227
  %64 = load i8, i8* %52, align 1, !noalias !16
  %65 = icmp slt i8 %64, 0
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  br i1 %65, label %70, label %67

67:                                               ; preds = %45, %63
  %68 = phi i8* [ %47, %45 ], [ %66, %63 ]
  %69 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* nonnull align 8 %33, i64 24, i1 false) #17
  br label %73

70:                                               ; preds = %63
  %71 = load i8*, i8** %34, align 8, !noalias !16
  %72 = load i64, i64* %35, align 8, !noalias !16
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %71, i64 %72) #17
  br label %73

73:                                               ; preds = %67, %70
  %74 = phi i8* [ %68, %67 ], [ %66, %70 ]
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %92, label %77

77:                                               ; preds = %73, %89
  %78 = phi %"struct.std::__1::__hash_node_base"* [ %80, %89 ], [ %75, %73 ]
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %78, i64 0, i32 0
  %80 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %79, align 8
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %78, i64 2
  %82 = bitcast %"struct.std::__1::__hash_node_base"* %81 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %82, i64 0, i32 1, i32 0
  %84 = load i8, i8* %83, align 1
  %85 = icmp slt i8 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %77
  %87 = bitcast %"struct.std::__1::__hash_node_base"* %81 to i8**
  %88 = load i8*, i8** %87, align 8
  call void @_ZdlPv(i8* %88) #19
  br label %89

89:                                               ; preds = %86, %77
  %90 = bitcast %"struct.std::__1::__hash_node_base"* %78 to i8*
  call void @_ZdlPv(i8* %90) #19
  %91 = icmp eq %"struct.std::__1::__hash_node_base"* %80, null
  br i1 %91, label %92, label %77

92:                                               ; preds = %89, %73
  %93 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %36, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %36, align 8
  %94 = icmp eq %"struct.std::__1::__hash_node_base"** %93, null
  br i1 %94, label %97, label %95

95:                                               ; preds = %92
  %96 = bitcast %"struct.std::__1::__hash_node_base"** %93 to i8*
  call void @_ZdlPv(i8* %96) #19
  br label %97

97:                                               ; preds = %95, %92
  %98 = load i8, i8* %74, align 1
  %99 = icmp slt i8 %98, 0
  br i1 %99, label %100, label %102

100:                                              ; preds = %97
  %101 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %101) #19
  br label %102

102:                                              ; preds = %97, %100
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %33) #17
  %103 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  br label %232

104:                                              ; preds = %230, %48
  %105 = phi %"class.std::__1::basic_string"* [ %23, %48 ], [ %231, %230 ]
  %106 = phi i64 [ 0, %48 ], [ %228, %230 ]
  %107 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %105, i64 %106
  %108 = call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE4findIS6_EENS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(%"class.std::__1::__hash_table"* %49, %"class.std::__1::basic_string"* dereferenceable(24) %107) #17
  %109 = icmp eq %"struct.std::__1::__hash_node_base"* %108, null
  br i1 %109, label %110, label %127

110:                                              ; preds = %104
  %111 = load i8, i8* %52, align 1
  %112 = icmp slt i8 %111, 0
  %113 = load i64, i64* %35, align 8
  %114 = zext i8 %111 to i64
  %115 = select i1 %112, i64 %113, i64 %114
  %116 = icmp eq i64 %115, 0
  %117 = bitcast %"class.std::__1::basic_string"* %107 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %117, i64 0, i32 1, i32 0
  %119 = load i8, i8* %118, align 1
  %120 = icmp slt i8 %119, 0
  %121 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %107, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load i8*, i8** %121, align 8
  %123 = bitcast %"class.std::__1::basic_string"* %107 to i8*
  %124 = select i1 %120, i8* %122, i8* %123
  %125 = select i1 %116, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.68, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.69, i64 0, i64 0)
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"* nonnull %50, i8* %125, i8* %124) #17
  %126 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %49, %"class.std::__1::basic_string"* dereferenceable(24) %107, %"class.std::__1::basic_string"* dereferenceable(24) %107) #17
  br label %127

127:                                              ; preds = %104, %110
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #17
  call fastcc void @_ZN3net12_GLOBAL__N_119GetBaseLanguageCodeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.std::__1::basic_string"* dereferenceable(24) %107)
  %128 = load i8, i8* %55, align 1
  %129 = icmp slt i8 %128, 0
  %130 = load i64, i64* %56, align 8
  %131 = zext i8 %128 to i64
  %132 = select i1 %129, i64 %130, i64 %131
  %133 = icmp eq i64 %132, 1
  br i1 %133, label %134, label %141

134:                                              ; preds = %127
  %135 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %5, i64 0, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0), i64 1) #17
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %222, label %137

137:                                              ; preds = %134
  %138 = load i8, i8* %55, align 1
  %139 = load i64, i64* %56, align 8
  %140 = zext i8 %138 to i64
  br label %141

141:                                              ; preds = %137, %127
  %142 = phi i64 [ %140, %137 ], [ %131, %127 ]
  %143 = phi i64 [ %139, %137 ], [ %130, %127 ]
  %144 = phi i8 [ %138, %137 ], [ %128, %127 ]
  %145 = icmp slt i8 %144, 0
  %146 = select i1 %145, i64 %143, i64 %142
  %147 = icmp eq i64 %146, 1
  br i1 %147, label %148, label %151

148:                                              ; preds = %141
  %149 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %5, i64 0, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30, i64 0, i64 0), i64 1) #17
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %222, label %151

151:                                              ; preds = %141, %148
  %152 = add nuw i64 %106, 1
  %153 = icmp ult i64 %152, %43
  br i1 %153, label %154, label %204

154:                                              ; preds = %151
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #17
  %155 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %156 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %155, i64 %152
  call fastcc void @_ZN3net12_GLOBAL__N_119GetBaseLanguageCodeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %6, %"class.std::__1::basic_string"* dereferenceable(24) %156)
  %157 = load i8, i8* %59, align 1
  %158 = icmp slt i8 %157, 0
  %159 = load i64, i64* %60, align 8
  %160 = zext i8 %157 to i64
  %161 = select i1 %158, i64 %159, i64 %160
  %162 = load i8, i8* %55, align 1
  %163 = icmp slt i8 %162, 0
  %164 = load i64, i64* %56, align 8
  %165 = zext i8 %162 to i64
  %166 = select i1 %163, i64 %164, i64 %165
  %167 = icmp eq i64 %161, %166
  br i1 %167, label %168, label %198

168:                                              ; preds = %154
  %169 = load i8*, i8** %61, align 8
  %170 = select i1 %158, i8* %169, i8* %57
  %171 = load i8*, i8** %62, align 8
  %172 = select i1 %163, i8* %171, i8* %53
  %173 = icmp eq i64 %161, 0
  br i1 %158, label %181, label %174

174:                                              ; preds = %168
  br i1 %173, label %197, label %175

175:                                              ; preds = %174
  %176 = ptrtoint i8* %169 to i64
  %177 = trunc i64 %176 to i8
  %178 = load i8, i8* %172, align 1
  %179 = icmp eq i8 %178, %177
  br i1 %179, label %185, label %180

180:                                              ; preds = %175
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #17
  br label %204

181:                                              ; preds = %168
  br i1 %173, label %220, label %182

182:                                              ; preds = %181
  %183 = call i32 @bcmp(i8* %170, i8* %172, i64 %161) #17
  %184 = icmp ne i32 %183, 0
  br label %200

185:                                              ; preds = %175, %192
  %186 = phi i64 [ %189, %192 ], [ %160, %175 ]
  %187 = phi i8* [ %190, %192 ], [ %57, %175 ]
  %188 = phi i8* [ %193, %192 ], [ %172, %175 ]
  %189 = add i64 %186, -1
  %190 = getelementptr inbounds i8, i8* %187, i64 1
  %191 = icmp eq i64 %189, 0
  br i1 %191, label %198, label %192

192:                                              ; preds = %185
  %193 = getelementptr inbounds i8, i8* %188, i64 1
  %194 = load i8, i8* %190, align 1
  %195 = load i8, i8* %193, align 1
  %196 = icmp eq i8 %194, %195
  br i1 %196, label %185, label %198

197:                                              ; preds = %174
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #17
  br label %222

198:                                              ; preds = %185, %192, %154
  %199 = phi i1 [ true, %154 ], [ false, %185 ], [ true, %192 ]
  br i1 %158, label %200, label %203

200:                                              ; preds = %182, %198
  %201 = phi i1 [ %199, %198 ], [ %184, %182 ]
  %202 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %202) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #17
  br i1 %201, label %204, label %222

203:                                              ; preds = %198
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #17
  br i1 %199, label %204, label %222

204:                                              ; preds = %180, %200, %151, %203
  %205 = call %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE4findIS6_EENS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(%"class.std::__1::__hash_table"* %49, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #17
  %206 = icmp eq %"struct.std::__1::__hash_node_base"* %205, null
  br i1 %206, label %207, label %222

207:                                              ; preds = %204
  %208 = load i8, i8* %52, align 1
  %209 = icmp slt i8 %208, 0
  %210 = load i64, i64* %35, align 8
  %211 = zext i8 %208 to i64
  %212 = select i1 %209, i64 %210, i64 %211
  %213 = icmp eq i64 %212, 0
  %214 = load i8, i8* %55, align 1
  %215 = icmp slt i8 %214, 0
  %216 = load i8*, i8** %62, align 8
  %217 = select i1 %215, i8* %216, i8* %53
  %218 = select i1 %213, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.68, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.69, i64 0, i64 0)
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"* nonnull %50, i8* %218, i8* %217) #17
  %219 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %49, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #17
  br label %222

220:                                              ; preds = %181
  %221 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %221) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #17
  br label %222

222:                                              ; preds = %220, %197, %200, %207, %204, %203, %134, %148
  %223 = load i8, i8* %55, align 1
  %224 = icmp slt i8 %223, 0
  br i1 %224, label %225, label %227

225:                                              ; preds = %222
  %226 = load i8*, i8** %62, align 8
  call void @_ZdlPv(i8* %226) #19
  br label %227

227:                                              ; preds = %222, %225
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #17
  %228 = add nuw i64 %106, 1
  %229 = icmp ult i64 %228, %43
  br i1 %229, label %230, label %63

230:                                              ; preds = %227
  %231 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  br label %104

232:                                              ; preds = %102, %26
  %233 = phi %"class.std::__1::basic_string"* [ %103, %102 ], [ %23, %26 ]
  %234 = icmp eq %"class.std::__1::basic_string"* %233, null
  br i1 %234, label %256, label %235

235:                                              ; preds = %232
  %236 = bitcast %"class.std::__1::basic_string"* %233 to i8*
  %237 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %238 = icmp eq %"class.std::__1::basic_string"* %237, %233
  br i1 %238, label %254, label %239

239:                                              ; preds = %235, %249
  %240 = phi %"class.std::__1::basic_string"* [ %241, %249 ], [ %237, %235 ]
  %241 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %240, i64 -1
  %242 = bitcast %"class.std::__1::basic_string"* %241 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %243 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %242, i64 0, i32 1, i32 0
  %244 = load i8, i8* %243, align 1
  %245 = icmp slt i8 %244, 0
  br i1 %245, label %246, label %249

246:                                              ; preds = %239
  %247 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %241, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %248 = load i8*, i8** %247, align 8
  call void @_ZdlPv(i8* %248) #19
  br label %249

249:                                              ; preds = %246, %239
  %250 = icmp eq %"class.std::__1::basic_string"* %241, %233
  br i1 %250, label %251, label %239

251:                                              ; preds = %249
  %252 = bitcast %"class.std::__1::vector.20"* %3 to i8**
  %253 = load i8*, i8** %252, align 8
  br label %254

254:                                              ; preds = %251, %235
  %255 = phi i8* [ %253, %251 ], [ %236, %235 ]
  store %"class.std::__1::basic_string"* %233, %"class.std::__1::basic_string"** %9, align 8
  call void @_ZdlPv(i8* %255) #19
  br label %256

256:                                              ; preds = %232, %254
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #17
  ret void
}

declare void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.20"* sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3net12_GLOBAL__N_119GetBaseLanguageCodeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 {
  %3 = alloca %"class.std::__1::vector.20", align 8
  %4 = bitcast %"class.std::__1::vector.20"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #17
  %5 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %3, i64 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = bitcast %"class.std::__1::vector.20"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  %10 = load i8, i8* %8, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %15 = select i1 %11, i8* %13, i8* %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %10 to i64
  %19 = select i1 %11, i64 %17, i64 %18
  call void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.20"* nonnull sret %3, i8* %15, i64 %19, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.71, i64 0, i64 0), i64 1, i32 1, i32 0) #17
  %20 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8
  %21 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %22 = icmp eq %"class.std::__1::basic_string"* %20, %21
  br i1 %22, label %23, label %27

23:                                               ; preds = %2
  %24 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  store i8 0, i8* %25, align 1
  %26 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %26, align 8
  br label %41

27:                                               ; preds = %2
  %28 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %27
  %33 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %34 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 24, i1 false) #17
  br label %41

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %37, i64 %39) #17
  %40 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8
  br label %41

41:                                               ; preds = %35, %32, %23
  %42 = phi %"class.std::__1::basic_string"* [ %40, %35 ], [ %20, %32 ], [ %20, %23 ]
  %43 = icmp eq %"class.std::__1::basic_string"* %42, null
  br i1 %43, label %65, label %44

44:                                               ; preds = %41
  %45 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  %46 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %47 = icmp eq %"class.std::__1::basic_string"* %46, %42
  br i1 %47, label %63, label %48

48:                                               ; preds = %44, %58
  %49 = phi %"class.std::__1::basic_string"* [ %50, %58 ], [ %46, %44 ]
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 -1
  %51 = bitcast %"class.std::__1::basic_string"* %50 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %48
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %57) #19
  br label %58

58:                                               ; preds = %55, %48
  %59 = icmp eq %"class.std::__1::basic_string"* %50, %42
  br i1 %59, label %60, label %48

60:                                               ; preds = %58
  %61 = bitcast %"class.std::__1::vector.20"* %3 to i8**
  %62 = load i8*, i8** %61, align 8
  br label %63

63:                                               ; preds = %60, %44
  %64 = phi i8* [ %62, %60 ], [ %45, %44 ]
  store %"class.std::__1::basic_string"* %42, %"class.std::__1::basic_string"** %6, align 8
  call void @_ZdlPv(i8* %64) #19
  br label %65

65:                                               ; preds = %41, %63
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net8HttpUtil28GenerateAcceptLanguageHeaderERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::StringTokenizerT", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.base::StringTokenizerT"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %6) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 96, i1 false)
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #17
  %8 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  store i8 1, i8* %9, align 1
  store i8 44, i8* %7, align 8
  %10 = getelementptr inbounds i8, i8* %7, i64 1
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 1, i32 0
  %13 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 2, i32 0
  %14 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 3, i32 0
  %15 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 4
  %16 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 5
  %19 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #17
  %20 = load i8, i8* %17, align 1
  %21 = icmp slt i8 %20, 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %27 = zext i8 %20 to i64
  %28 = select i1 %21, i8* %23, i8* %26
  %29 = select i1 %21, i64 %25, i64 %27
  %30 = getelementptr inbounds i8, i8* %28, i64 %29
  store i8* %28, i8** %11, align 8
  store i8* %28, i8** %12, align 8
  store i8* %28, i8** %13, align 8
  store i8* %30, i8** %14, align 8
  %31 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* nonnull align 8 %7, i64 24, i1 false) #17
  %32 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 6
  store i32 0, i32* %32, align 8
  %33 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 7
  store i8 1, i8* %33, align 4
  %34 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 9
  store i32 0, i32* %34, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #17
  %35 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false) #17
  %36 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 5
  %37 = bitcast %"class.std::__1::basic_string"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %44 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = icmp eq %"class.std::__1::basic_string"* %5, %0
  %47 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  br label %50

50:                                               ; preds = %224, %2
  %51 = phi i32 [ 0, %2 ], [ %228, %224 ]
  %52 = phi i64 [ 0, %2 ], [ %227, %224 ]
  %53 = phi i8 [ 0, %2 ], [ %226, %224 ]
  %54 = phi i32 [ 10, %2 ], [ %225, %224 ]
  %55 = icmp slt i8 %53, 0
  %56 = zext i8 %53 to i64
  %57 = select i1 %55, i64 %52, i64 %56
  %58 = icmp eq i64 %57, 0
  %59 = icmp eq i32 %51, 0
  %60 = and i1 %58, %59
  br i1 %60, label %61, label %63

61:                                               ; preds = %50
  %62 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE12QuickGetNextEv(%"class.base::StringTokenizerT"* nonnull %3) #17
  br i1 %62, label %65, label %229

63:                                               ; preds = %50
  %64 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE11FullGetNextEv(%"class.base::StringTokenizerT"* nonnull %3) #17
  br i1 %64, label %65, label %229

65:                                               ; preds = %61, %63
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 24, i1 false)
  %66 = load i8*, i8** %12, align 8, !noalias !19
  %67 = ptrtoint i8* %66 to i64
  %68 = load i8*, i8** %13, align 8, !noalias !19
  %69 = ptrtoint i8* %68 to i64
  %70 = sub i64 %69, %67
  %71 = icmp ugt i64 %70, -17
  br i1 %71, label %72, label %74

72:                                               ; preds = %65
  %73 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %73) #18
  unreachable

74:                                               ; preds = %65
  %75 = icmp ult i64 %70, 23
  br i1 %75, label %76, label %78

76:                                               ; preds = %74
  %77 = trunc i64 %70 to i8
  store i8 %77, i8* %45, align 1, !alias.scope !19
  br label %83

78:                                               ; preds = %74
  %79 = add nuw i64 %70, 16
  %80 = and i64 %79, -16
  %81 = call i8* @_Znwm(i64 %80) #19
  store i8* %81, i8** %41, align 8, !alias.scope !19
  %82 = or i64 %80, -9223372036854775808
  store i64 %82, i64* %43, align 8, !alias.scope !19
  store i64 %70, i64* %42, align 8, !alias.scope !19
  br label %83

83:                                               ; preds = %78, %76
  %84 = phi i8* [ %40, %76 ], [ %81, %78 ]
  %85 = icmp eq i8* %66, %68
  br i1 %85, label %188, label %86

86:                                               ; preds = %83
  %87 = ptrtoint i8* %68 to i64
  %88 = sub i64 %87, %67
  %89 = icmp ult i64 %88, 32
  br i1 %89, label %178, label %90

90:                                               ; preds = %86
  %91 = ptrtoint i8* %68 to i64
  %92 = sub i64 %91, %67
  %93 = getelementptr i8, i8* %84, i64 %92
  %94 = icmp ult i8* %84, %68
  %95 = icmp ult i8* %66, %93
  %96 = and i1 %94, %95
  br i1 %96, label %178, label %97

97:                                               ; preds = %90
  %98 = and i64 %88, -32
  %99 = getelementptr i8, i8* %84, i64 %98
  %100 = getelementptr i8, i8* %66, i64 %98
  %101 = add i64 %98, -32
  %102 = lshr exact i64 %101, 5
  %103 = add nuw nsw i64 %102, 1
  %104 = and i64 %103, 3
  %105 = icmp ult i64 %101, 96
  br i1 %105, label %157, label %106

106:                                              ; preds = %97
  %107 = sub nsw i64 %103, %104
  br label %108

108:                                              ; preds = %108, %106
  %109 = phi i64 [ 0, %106 ], [ %154, %108 ]
  %110 = phi i64 [ %107, %106 ], [ %155, %108 ]
  %111 = getelementptr i8, i8* %84, i64 %109
  %112 = getelementptr i8, i8* %66, i64 %109
  %113 = bitcast i8* %112 to <16 x i8>*
  %114 = load <16 x i8>, <16 x i8>* %113, align 1, !alias.scope !22
  %115 = getelementptr i8, i8* %112, i64 16
  %116 = bitcast i8* %115 to <16 x i8>*
  %117 = load <16 x i8>, <16 x i8>* %116, align 1, !alias.scope !22
  %118 = bitcast i8* %111 to <16 x i8>*
  store <16 x i8> %114, <16 x i8>* %118, align 1, !alias.scope !25, !noalias !22
  %119 = getelementptr i8, i8* %111, i64 16
  %120 = bitcast i8* %119 to <16 x i8>*
  store <16 x i8> %117, <16 x i8>* %120, align 1, !alias.scope !25, !noalias !22
  %121 = or i64 %109, 32
  %122 = getelementptr i8, i8* %84, i64 %121
  %123 = getelementptr i8, i8* %66, i64 %121
  %124 = bitcast i8* %123 to <16 x i8>*
  %125 = load <16 x i8>, <16 x i8>* %124, align 1, !alias.scope !22
  %126 = getelementptr i8, i8* %123, i64 16
  %127 = bitcast i8* %126 to <16 x i8>*
  %128 = load <16 x i8>, <16 x i8>* %127, align 1, !alias.scope !22
  %129 = bitcast i8* %122 to <16 x i8>*
  store <16 x i8> %125, <16 x i8>* %129, align 1, !alias.scope !25, !noalias !22
  %130 = getelementptr i8, i8* %122, i64 16
  %131 = bitcast i8* %130 to <16 x i8>*
  store <16 x i8> %128, <16 x i8>* %131, align 1, !alias.scope !25, !noalias !22
  %132 = or i64 %109, 64
  %133 = getelementptr i8, i8* %84, i64 %132
  %134 = getelementptr i8, i8* %66, i64 %132
  %135 = bitcast i8* %134 to <16 x i8>*
  %136 = load <16 x i8>, <16 x i8>* %135, align 1, !alias.scope !22
  %137 = getelementptr i8, i8* %134, i64 16
  %138 = bitcast i8* %137 to <16 x i8>*
  %139 = load <16 x i8>, <16 x i8>* %138, align 1, !alias.scope !22
  %140 = bitcast i8* %133 to <16 x i8>*
  store <16 x i8> %136, <16 x i8>* %140, align 1, !alias.scope !25, !noalias !22
  %141 = getelementptr i8, i8* %133, i64 16
  %142 = bitcast i8* %141 to <16 x i8>*
  store <16 x i8> %139, <16 x i8>* %142, align 1, !alias.scope !25, !noalias !22
  %143 = or i64 %109, 96
  %144 = getelementptr i8, i8* %84, i64 %143
  %145 = getelementptr i8, i8* %66, i64 %143
  %146 = bitcast i8* %145 to <16 x i8>*
  %147 = load <16 x i8>, <16 x i8>* %146, align 1, !alias.scope !22
  %148 = getelementptr i8, i8* %145, i64 16
  %149 = bitcast i8* %148 to <16 x i8>*
  %150 = load <16 x i8>, <16 x i8>* %149, align 1, !alias.scope !22
  %151 = bitcast i8* %144 to <16 x i8>*
  store <16 x i8> %147, <16 x i8>* %151, align 1, !alias.scope !25, !noalias !22
  %152 = getelementptr i8, i8* %144, i64 16
  %153 = bitcast i8* %152 to <16 x i8>*
  store <16 x i8> %150, <16 x i8>* %153, align 1, !alias.scope !25, !noalias !22
  %154 = add i64 %109, 128
  %155 = add i64 %110, -4
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %157, label %108, !llvm.loop !27

157:                                              ; preds = %108, %97
  %158 = phi i64 [ 0, %97 ], [ %154, %108 ]
  %159 = icmp eq i64 %104, 0
  br i1 %159, label %176, label %160

160:                                              ; preds = %157, %160
  %161 = phi i64 [ %173, %160 ], [ %158, %157 ]
  %162 = phi i64 [ %174, %160 ], [ %104, %157 ]
  %163 = getelementptr i8, i8* %84, i64 %161
  %164 = getelementptr i8, i8* %66, i64 %161
  %165 = bitcast i8* %164 to <16 x i8>*
  %166 = load <16 x i8>, <16 x i8>* %165, align 1, !alias.scope !22
  %167 = getelementptr i8, i8* %164, i64 16
  %168 = bitcast i8* %167 to <16 x i8>*
  %169 = load <16 x i8>, <16 x i8>* %168, align 1, !alias.scope !22
  %170 = bitcast i8* %163 to <16 x i8>*
  store <16 x i8> %166, <16 x i8>* %170, align 1, !alias.scope !25, !noalias !22
  %171 = getelementptr i8, i8* %163, i64 16
  %172 = bitcast i8* %171 to <16 x i8>*
  store <16 x i8> %169, <16 x i8>* %172, align 1, !alias.scope !25, !noalias !22
  %173 = add i64 %161, 32
  %174 = add i64 %162, -1
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %176, label %160, !llvm.loop !28

176:                                              ; preds = %160, %157
  %177 = icmp eq i64 %88, %98
  br i1 %177, label %188, label %178

178:                                              ; preds = %176, %90, %86
  %179 = phi i8* [ %84, %90 ], [ %84, %86 ], [ %99, %176 ]
  %180 = phi i8* [ %66, %90 ], [ %66, %86 ], [ %100, %176 ]
  br label %181

181:                                              ; preds = %178, %181
  %182 = phi i8* [ %186, %181 ], [ %179, %178 ]
  %183 = phi i8* [ %185, %181 ], [ %180, %178 ]
  %184 = load i8, i8* %183, align 1
  store i8 %184, i8* %182, align 1
  %185 = getelementptr inbounds i8, i8* %183, i64 1
  %186 = getelementptr inbounds i8, i8* %182, i64 1
  %187 = icmp eq i8* %185, %68
  br i1 %187, label %188, label %181, !llvm.loop !30

188:                                              ; preds = %181, %176, %83
  %189 = phi i8* [ %84, %83 ], [ %99, %176 ], [ %186, %181 ]
  store i8 0, i8* %189, align 1
  %190 = icmp eq i32 %54, 10
  br i1 %190, label %191, label %211

191:                                              ; preds = %188
  br i1 %46, label %216, label %192

192:                                              ; preds = %191
  %193 = load i8, i8* %48, align 1
  %194 = icmp slt i8 %193, 0
  %195 = load i8, i8* %45, align 1
  %196 = icmp slt i8 %195, 0
  br i1 %194, label %204, label %197

197:                                              ; preds = %192
  br i1 %196, label %200, label %198

198:                                              ; preds = %197
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* nonnull align 8 %40, i64 24, i1 false) #17
  %199 = add nsw i32 %54, -1
  br label %224

200:                                              ; preds = %197
  %201 = load i8*, i8** %41, align 8
  %202 = load i64, i64* %42, align 8
  %203 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %0, i8* %201, i64 %202) #17
  br label %216

204:                                              ; preds = %192
  %205 = load i8*, i8** %41, align 8
  %206 = load i64, i64* %42, align 8
  %207 = zext i8 %195 to i64
  %208 = select i1 %196, i8* %205, i8* %40
  %209 = select i1 %196, i64 %206, i64 %207
  %210 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %0, i8* %208, i64 %209) #17
  br label %216

211:                                              ; preds = %188
  %212 = load i8, i8* %45, align 1
  %213 = icmp slt i8 %212, 0
  %214 = load i8*, i8** %41, align 8
  %215 = select i1 %213, i8* %214, i8* %40
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.31, i64 0, i64 0), i8* %215, i32 %54) #17
  br label %216

216:                                              ; preds = %204, %200, %191, %211
  %217 = load i8, i8* %45, align 1
  %218 = icmp ugt i32 %54, 1
  %219 = zext i1 %218 to i32
  %220 = sub i32 %54, %219
  %221 = icmp slt i8 %217, 0
  br i1 %221, label %222, label %224

222:                                              ; preds = %216
  %223 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %223) #19
  br label %224

224:                                              ; preds = %198, %216, %222
  %225 = phi i32 [ %199, %198 ], [ %220, %216 ], [ %220, %222 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #17
  %226 = load i8, i8* %38, align 1
  %227 = load i64, i64* %39, align 8
  %228 = load i32, i32* %32, align 8
  br label %50

229:                                              ; preds = %61, %63
  %230 = load i8, i8* %38, align 1
  %231 = icmp slt i8 %230, 0
  br i1 %231, label %232, label %235

232:                                              ; preds = %229
  %233 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %234 = load i8*, i8** %233, align 8
  call void @_ZdlPv(i8* %234) #19
  br label %235

235:                                              ; preds = %232, %229
  %236 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %237 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %236, i64 0, i32 1, i32 0
  %238 = load i8, i8* %237, align 1
  %239 = icmp slt i8 %238, 0
  br i1 %239, label %240, label %243

240:                                              ; preds = %235
  %241 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = load i8*, i8** %241, align 8
  call void @_ZdlPv(i8* %242) #19
  br label %243

243:                                              ; preds = %235, %240
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %6) #17
  ret void
}

declare void @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"*, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net8HttpUtil19HasStrongValidatorsENS_11HttpVersionERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_SA_(i32, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::Time", align 8
  %6 = alloca %"class.std::__1::__wrap_iter.16", align 8
  %7 = alloca %"class.std::__1::__wrap_iter.16", align 8
  %8 = alloca %"class.base::Time", align 8
  %9 = alloca %"class.base::Time", align 8
  %10 = icmp ult i32 %0, 65536
  br i1 %10, label %119, label %11

11:                                               ; preds = %4
  %12 = bitcast %"class.base::Time"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #17
  %13 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %5, i64 0, i32 0, i32 0
  store i64 0, i64* %13, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %21 = select i1 %17, i8* %19, i8* %20
  %22 = call zeroext i1 @_ZN4base4Time18FromStringInternalEPKcbPS0_(i8* %21, i1 zeroext true, %"class.base::Time"* nonnull %5) #17
  br i1 %22, label %36, label %23

23:                                               ; preds = %11
  %24 = icmp ugt i32 %0, 65536
  br i1 %24, label %26, label %25

25:                                               ; preds = %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #17
  br label %119

26:                                               ; preds = %23
  %27 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = zext i8 %29 to i64
  %34 = select i1 %30, i64 %32, i64 %33
  %35 = icmp eq i64 %34, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #17
  br i1 %35, label %119, label %45

36:                                               ; preds = %11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #17
  %37 = icmp ult i32 %0, 65537
  br i1 %37, label %119, label %38

38:                                               ; preds = %36
  %39 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = zext i8 %41 to i64
  br label %45

45:                                               ; preds = %38, %26
  %46 = phi i64 [ %44, %38 ], [ %33, %26 ]
  %47 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %39, %38 ], [ %27, %26 ]
  %48 = phi i64 [ %43, %38 ], [ %32, %26 ]
  %49 = phi i8 [ %41, %38 ], [ %29, %26 ]
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %51 = icmp slt i8 %49, 0
  %52 = select i1 %51, i64 %48, i64 %46
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %86, label %54

54:                                               ; preds = %45
  %55 = call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %1, i8 signext 47, i64 0) #17
  %56 = add i64 %55, 1
  %57 = icmp ult i64 %56, 2
  br i1 %57, label %119, label %58

58:                                               ; preds = %54
  %59 = bitcast %"class.std::__1::__wrap_iter.16"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #17
  %60 = getelementptr inbounds %"class.std::__1::__wrap_iter.16", %"class.std::__1::__wrap_iter.16"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %60, align 8
  %61 = load i8, i8* %50, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %70

63:                                               ; preds = %58
  %64 = bitcast %"class.std::__1::basic_string"* %1 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__wrap_iter.16"* %6 to i64*
  store i64 %65, i64* %66, align 8
  %67 = bitcast %"class.std::__1::__wrap_iter.16"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #17
  %68 = getelementptr inbounds %"class.std::__1::__wrap_iter.16", %"class.std::__1::__wrap_iter.16"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %68, align 8
  %69 = inttoptr i64 %65 to i8*
  br label %75

70:                                               ; preds = %58
  %71 = bitcast %"class.std::__1::__wrap_iter.16"* %6 to %"class.std::__1::basic_string"**
  store %"class.std::__1::basic_string"* %1, %"class.std::__1::basic_string"** %71, align 8
  %72 = bitcast %"class.std::__1::__wrap_iter.16"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #17
  %73 = getelementptr inbounds %"class.std::__1::__wrap_iter.16", %"class.std::__1::__wrap_iter.16"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %73, align 8
  %74 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  br label %75

75:                                               ; preds = %63, %70
  %76 = phi i8** [ %68, %63 ], [ %73, %70 ]
  %77 = phi i8* [ %67, %63 ], [ %72, %70 ]
  %78 = phi i8* [ %69, %63 ], [ %74, %70 ]
  %79 = getelementptr inbounds i8, i8* %78, i64 %55
  store i8* %79, i8** %76, align 8
  call void @_ZN3net8HttpUtil7TrimLWSEPNSt3__111__wrap_iterIPKcEES6_(%"class.std::__1::__wrap_iter.16"* nonnull %6, %"class.std::__1::__wrap_iter.16"* nonnull %7)
  %80 = load i8*, i8** %60, align 8
  %81 = bitcast i8** %76 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = ptrtoint i8* %80 to i64
  %84 = sub i64 %82, %83
  %85 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %80, i64 %84, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0), i64 1) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #17
  br i1 %85, label %86, label %119

86:                                               ; preds = %75, %45
  %87 = bitcast %"class.base::Time"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #17
  %88 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %8, i64 0, i32 0, i32 0
  store i64 0, i64* %88, align 8
  %89 = load i8, i8* %15, align 1
  %90 = icmp slt i8 %89, 0
  %91 = load i8*, i8** %18, align 8
  %92 = select i1 %90, i8* %91, i8* %20
  %93 = call zeroext i1 @_ZN4base4Time18FromStringInternalEPKcbPS0_(i8* %92, i1 zeroext true, %"class.base::Time"* nonnull %8) #17
  br i1 %93, label %94, label %117

94:                                               ; preds = %86
  %95 = bitcast %"class.base::Time"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #17
  %96 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %9, i64 0, i32 0, i32 0
  store i64 0, i64* %96, align 8
  %97 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load i8*, i8** %101, align 8
  %103 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %104 = select i1 %100, i8* %102, i8* %103
  %105 = call zeroext i1 @_ZN4base4Time18FromStringInternalEPKcbPS0_(i8* %104, i1 zeroext true, %"class.base::Time"* nonnull %9) #17
  br i1 %105, label %106, label %115

106:                                              ; preds = %94
  %107 = load i64, i64* %88, align 8
  %108 = load i64, i64* %96, align 8
  %109 = sub nsw i64 %108, %107
  %110 = add i64 %109, -9223372036854775807
  %111 = icmp ult i64 %110, 2
  %112 = sdiv i64 %109, 1000000
  %113 = select i1 %111, i64 %109, i64 %112
  %114 = icmp sgt i64 %113, 59
  br label %115

115:                                              ; preds = %94, %106
  %116 = phi i1 [ %114, %106 ], [ false, %94 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #17
  br label %117

117:                                              ; preds = %86, %115
  %118 = phi i1 [ %116, %115 ], [ false, %86 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #17
  br label %119

119:                                              ; preds = %26, %54, %75, %4, %25, %36, %117
  %120 = phi i1 [ %118, %117 ], [ false, %26 ], [ false, %36 ], [ false, %25 ], [ false, %4 ], [ true, %75 ], [ true, %54 ]
  ret i1 %120
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net8HttpUtil13HasValidatorsENS_11HttpVersionERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_(i32, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::Time", align 8
  %5 = icmp ult i32 %0, 65536
  br i1 %5, label %32, label %6

6:                                                ; preds = %3
  %7 = bitcast %"class.base::Time"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #17
  %8 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %4, i64 0, i32 0, i32 0
  store i64 0, i64* %8, align 8
  %9 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %16 = select i1 %12, i8* %14, i8* %15
  %17 = call zeroext i1 @_ZN4base4Time18FromStringInternalEPKcbPS0_(i8* %16, i1 zeroext true, %"class.base::Time"* nonnull %4) #17
  br i1 %17, label %30, label %18

18:                                               ; preds = %6
  %19 = icmp ugt i32 %0, 65536
  br i1 %19, label %20, label %30

20:                                               ; preds = %18
  %21 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = zext i8 %23 to i64
  %28 = select i1 %24, i64 %26, i64 %27
  %29 = icmp ne i64 %28, 0
  br label %30

30:                                               ; preds = %18, %20, %6
  %31 = phi i1 [ true, %6 ], [ false, %18 ], [ %29, %20 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #17
  br label %32

32:                                               ; preds = %3, %30
  %33 = phi i1 [ %31, %30 ], [ false, %3 ]
  ret i1 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net8HttpUtil26GetStatusCodesForHistogramEv(%"class.std::__1::vector.46"* noalias sret) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %0, i64 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i32** %3 to i64*
  %5 = bitcast %"class.std::__1::vector.46"* %0 to i64*
  %6 = tail call i8* @_Znwm(i64 2004) #19
  %7 = getelementptr inbounds i8, i8* %6, i64 2004
  %8 = ptrtoint i8* %7 to i64
  %9 = insertelement <2 x i8*> undef, i8* %6, i32 0
  %10 = shufflevector <2 x i8*> %9, <2 x i8*> undef, <2 x i32> zeroinitializer
  %11 = ptrtoint <2 x i8*> %10 to <2 x i64>
  %12 = bitcast %"class.std::__1::vector.46"* %0 to <2 x i64>*
  store <2 x i64> %11, <2 x i64>* %12, align 8
  store i64 %8, i64* %4, align 8
  %13 = bitcast i8* %6 to i32*
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %6, i64 4
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast i32** %2 to i64*
  store i64 %15, i64* %16, align 8
  br label %18

17:                                               ; preds = %70
  ret void

18:                                               ; preds = %70, %1
  %19 = phi i32 [ 100, %1 ], [ %71, %70 ]
  %20 = load i32*, i32** %2, align 8
  %21 = load i32*, i32** %3, align 8
  %22 = icmp eq i32* %20, %21
  %23 = ptrtoint i32* %21 to i64
  br i1 %22, label %27, label %24

24:                                               ; preds = %18
  store i32 %19, i32* %20, align 4
  %25 = getelementptr inbounds i32, i32* %20, i64 1
  %26 = ptrtoint i32* %25 to i64
  store i64 %26, i64* %16, align 8
  br label %70

27:                                               ; preds = %18
  %28 = ptrtoint i32* %20 to i64
  %29 = load i64, i64* %5, align 8
  %30 = sub i64 %28, %29
  %31 = ashr exact i64 %30, 2
  %32 = add nsw i64 %31, 1
  %33 = icmp ugt i64 %32, 4611686018427387903
  br i1 %33, label %34, label %36

34:                                               ; preds = %27
  %35 = bitcast %"class.std::__1::vector.46"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %35) #18
  unreachable

36:                                               ; preds = %27
  %37 = sub i64 %23, %29
  %38 = ashr exact i64 %37, 2
  %39 = icmp ult i64 %38, 2305843009213693951
  br i1 %39, label %40, label %48

40:                                               ; preds = %36
  %41 = ashr exact i64 %37, 1
  %42 = icmp ult i64 %41, %32
  %43 = select i1 %42, i64 %32, i64 %41
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %53, label %45

45:                                               ; preds = %40
  %46 = icmp ugt i64 %43, 4611686018427387903
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @abort() #18
  unreachable

48:                                               ; preds = %45, %36
  %49 = phi i64 [ %43, %45 ], [ 4611686018427387903, %36 ]
  %50 = shl i64 %49, 2
  %51 = tail call i8* @_Znwm(i64 %50) #19
  %52 = bitcast i8* %51 to i32*
  br label %53

53:                                               ; preds = %48, %40
  %54 = phi i64 [ %49, %48 ], [ 0, %40 ]
  %55 = phi i8* [ %51, %48 ], [ null, %40 ]
  %56 = phi i32* [ %52, %48 ], [ null, %40 ]
  %57 = getelementptr inbounds i32, i32* %56, i64 %31
  %58 = getelementptr inbounds i32, i32* %56, i64 %54
  %59 = ptrtoint i32* %58 to i64
  store i32 %19, i32* %57, align 4
  %60 = getelementptr inbounds i32, i32* %57, i64 1
  %61 = ptrtoint i32* %60 to i64
  %62 = ptrtoint i32* %56 to i64
  %63 = icmp sgt i64 %30, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %53
  %65 = inttoptr i64 %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %55, i8* align 4 %65, i64 %30, i1 false) #17
  br label %66

66:                                               ; preds = %64, %53
  store i64 %62, i64* %5, align 8
  store i64 %61, i64* %16, align 8
  store i64 %59, i64* %4, align 8
  %67 = icmp eq i64 %29, 0
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = inttoptr i64 %29 to i8*
  tail call void @_ZdlPv(i8* %69) #19
  br label %70

70:                                               ; preds = %24, %66, %68
  %71 = add nuw nsw i32 %19, 1
  %72 = icmp eq i32 %71, 600
  br i1 %72, label %17, label %18
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN3net8HttpUtil25MapStatusCodeForHistogramEi(i32) local_unnamed_addr #7 align 2 {
  %2 = add i32 %0, -100
  %3 = icmp ult i32 %2, 500
  %4 = select i1 %3, i32 %0, i32 0
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net8HttpUtil15HeadersIteratorC2ENSt3__111__wrap_iterIPKcEES6_RKNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.net::HttpUtil::HeadersIterator"*, i8*, i8*, %"class.std::__1::basic_string"* readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.net::HttpUtil::HeadersIterator", %"class.net::HttpUtil::HeadersIterator"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.net::HttpUtil::HeadersIterator", %"class.net::HttpUtil::HeadersIterator"* %0, i64 0, i32 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.net::HttpUtil::HeadersIterator", %"class.net::HttpUtil::HeadersIterator"* %0, i64 0, i32 0, i32 2, i32 0
  %8 = getelementptr inbounds %"class.net::HttpUtil::HeadersIterator", %"class.net::HttpUtil::HeadersIterator"* %0, i64 0, i32 0, i32 3, i32 0
  %9 = getelementptr inbounds %"class.net::HttpUtil::HeadersIterator", %"class.net::HttpUtil::HeadersIterator"* %0, i64 0, i32 0, i32 4
  %10 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 48, i1 false) #17
  store i8* %1, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i8* %1, i8** %7, align 8
  store i8* %2, i8** %8, align 8
  %11 = icmp eq %"class.std::__1::basic_string"* %9, %3
  br i1 %11, label %25, label %12

12:                                               ; preds = %4
  %13 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %12
  %18 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %18, i64 24, i1 false) #17
  br label %25

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %9, i8* %21, i64 %23) #17
  br label %25

25:                                               ; preds = %4, %17, %19
  %26 = getelementptr inbounds %"class.net::HttpUtil::HeadersIterator", %"class.net::HttpUtil::HeadersIterator"* %0, i64 0, i32 0, i32 6
  store i32 0, i32* %26, align 8
  %27 = getelementptr inbounds %"class.net::HttpUtil::HeadersIterator", %"class.net::HttpUtil::HeadersIterator"* %0, i64 0, i32 0, i32 7
  store i8 1, i8* %27, align 4
  %28 = getelementptr inbounds %"class.net::HttpUtil::HeadersIterator", %"class.net::HttpUtil::HeadersIterator"* %0, i64 0, i32 0, i32 9
  store i32 0, i32* %28, align 8
  %29 = getelementptr inbounds %"class.net::HttpUtil::HeadersIterator", %"class.net::HttpUtil::HeadersIterator"* %0, i64 0, i32 1, i32 0
  %30 = bitcast i8** %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net8HttpUtil15HeadersIteratorD2Ev(%"class.net::HttpUtil::HeadersIterator"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::HttpUtil::HeadersIterator", %"class.net::HttpUtil::HeadersIterator"* %0, i64 0, i32 0, i32 5
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #19
  br label %10

10:                                               ; preds = %7, %1
  %11 = getelementptr inbounds %"class.net::HttpUtil::HeadersIterator", %"class.net::HttpUtil::HeadersIterator"* %0, i64 0, i32 0, i32 4
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #19
  br label %19

19:                                               ; preds = %10, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net8HttpUtil15HeadersIterator7GetNextEv(%"class.net::HttpUtil::HeadersIterator"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::HttpUtil::HeadersIterator", %"class.net::HttpUtil::HeadersIterator"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.net::HttpUtil::HeadersIterator", %"class.net::HttpUtil::HeadersIterator"* %0, i64 0, i32 0, i32 5
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = getelementptr inbounds %"class.net::HttpUtil::HeadersIterator", %"class.net::HttpUtil::HeadersIterator"* %0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.net::HttpUtil::HeadersIterator", %"class.net::HttpUtil::HeadersIterator"* %0, i64 0, i32 0, i32 6
  %8 = getelementptr inbounds %"class.net::HttpUtil::HeadersIterator", %"class.net::HttpUtil::HeadersIterator"* %0, i64 0, i32 0, i32 1, i32 0
  %9 = getelementptr inbounds %"class.net::HttpUtil::HeadersIterator", %"class.net::HttpUtil::HeadersIterator"* %0, i64 0, i32 1, i32 0
  %10 = getelementptr inbounds %"class.net::HttpUtil::HeadersIterator", %"class.net::HttpUtil::HeadersIterator"* %0, i64 0, i32 0, i32 2, i32 0
  %11 = getelementptr inbounds %"class.net::HttpUtil::HeadersIterator", %"class.net::HttpUtil::HeadersIterator"* %0, i64 0, i32 4, i32 0
  %12 = getelementptr inbounds %"class.net::HttpUtil::HeadersIterator", %"class.net::HttpUtil::HeadersIterator"* %0, i64 0, i32 4
  %13 = getelementptr inbounds %"class.net::HttpUtil::HeadersIterator", %"class.net::HttpUtil::HeadersIterator"* %0, i64 0, i32 2
  %14 = bitcast %"class.std::__1::__wrap_iter.16"* %13 to i64*
  %15 = getelementptr inbounds %"class.net::HttpUtil::HeadersIterator", %"class.net::HttpUtil::HeadersIterator"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.net::HttpUtil::HeadersIterator", %"class.net::HttpUtil::HeadersIterator"* %0, i64 0, i32 2, i32 0
  br label %17

17:                                               ; preds = %64, %1
  %18 = load i8, i8* %5, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %17
  %21 = load i64, i64* %6, align 8
  br label %24

22:                                               ; preds = %17
  %23 = zext i8 %18 to i64
  br label %24

24:                                               ; preds = %22, %20
  %25 = phi i64 [ %21, %20 ], [ %23, %22 ]
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %32

27:                                               ; preds = %24
  %28 = load i32, i32* %7, align 8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %27
  %31 = tail call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE12QuickGetNextEv(%"class.base::StringTokenizerT"* %2) #17
  br i1 %31, label %34, label %76

32:                                               ; preds = %24, %27
  %33 = tail call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE11FullGetNextEv(%"class.base::StringTokenizerT"* %2) #17
  br i1 %33, label %34, label %76

34:                                               ; preds = %30, %32
  %35 = load i8*, i8** %8, align 8
  store i8* %35, i8** %9, align 8
  %36 = load i8*, i8** %10, align 8
  store i8* %36, i8** %11, align 8
  %37 = icmp eq i8* %35, %36
  br i1 %37, label %45, label %38

38:                                               ; preds = %34, %42
  %39 = phi i8* [ %43, %42 ], [ %35, %34 ]
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 58
  br i1 %41, label %45, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds i8, i8* %39, i64 1
  %44 = icmp eq i8* %43, %36
  br i1 %44, label %64, label %38

45:                                               ; preds = %38, %34
  %46 = phi i8* [ %35, %34 ], [ %39, %38 ]
  %47 = icmp eq i8* %46, %36
  br i1 %47, label %64, label %48

48:                                               ; preds = %45
  %49 = ptrtoint i8* %46 to i64
  store i64 %49, i64* %14, align 8
  %50 = icmp eq i8* %35, %46
  br i1 %50, label %64, label %51

51:                                               ; preds = %48
  %52 = load i8, i8* %35, align 1
  %53 = sext i8 %52 to i32
  %54 = tail call i8* @memchr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0), i32 %53, i64 2) #17
  %55 = icmp ne i8* %54, null
  %56 = ptrtoint i8* %54 to i64
  %57 = sub i64 %56, ptrtoint ([3 x i8]* @.str.21 to i64)
  %58 = icmp ne i64 %57, -1
  %59 = and i1 %55, %58
  br i1 %59, label %64, label %60

60:                                               ; preds = %51
  tail call void @_ZN3net8HttpUtil7TrimLWSEPNSt3__111__wrap_iterIPKcEES6_(%"class.std::__1::__wrap_iter.16"* %15, %"class.std::__1::__wrap_iter.16"* %13)
  %61 = load i8*, i8** %9, align 8
  %62 = load i8*, i8** %16, align 8
  %63 = icmp eq i8* %62, %61
  br i1 %63, label %64, label %67

64:                                               ; preds = %42, %67, %60, %48, %51, %45
  br label %17

65:                                               ; preds = %67
  %66 = icmp eq i8* %71, %62
  br i1 %66, label %72, label %67

67:                                               ; preds = %60, %65
  %68 = phi i8* [ %71, %65 ], [ %61, %60 ]
  %69 = load i8, i8* %68, align 1
  %70 = tail call zeroext i1 @_ZN3net8HttpUtil11IsTokenCharEc(i8 signext %69) #17
  %71 = getelementptr inbounds i8, i8* %68, i64 1
  br i1 %70, label %65, label %64

72:                                               ; preds = %65
  %73 = getelementptr inbounds i8, i8* %46, i64 1
  %74 = getelementptr inbounds %"class.net::HttpUtil::HeadersIterator", %"class.net::HttpUtil::HeadersIterator"* %0, i64 0, i32 3, i32 0
  store i8* %73, i8** %74, align 8
  %75 = getelementptr inbounds %"class.net::HttpUtil::HeadersIterator", %"class.net::HttpUtil::HeadersIterator"* %0, i64 0, i32 3
  tail call void @_ZN3net8HttpUtil7TrimLWSEPNSt3__111__wrap_iterIPKcEES6_(%"class.std::__1::__wrap_iter.16"* %75, %"class.std::__1::__wrap_iter.16"* %12)
  br label %76

76:                                               ; preds = %30, %32, %72
  %77 = phi i1 [ true, %72 ], [ false, %32 ], [ false, %30 ]
  ret i1 %77
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net8HttpUtil15HeadersIterator9AdvanceToEPKc(%"class.net::HttpUtil::HeadersIterator"*, i8*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.net::HttpUtil::HeadersIterator", %"class.net::HttpUtil::HeadersIterator"* %0, i64 0, i32 1, i32 0
  %5 = getelementptr inbounds %"class.net::HttpUtil::HeadersIterator", %"class.net::HttpUtil::HeadersIterator"* %0, i64 0, i32 2, i32 0
  %6 = bitcast i8** %5 to i64*
  %7 = icmp eq i8* %1, null
  %8 = bitcast %"class.logging::CheckError"* %3 to i8*
  br label %9

9:                                                ; preds = %20, %2
  %10 = call zeroext i1 @_ZN3net8HttpUtil15HeadersIterator7GetNextEv(%"class.net::HttpUtil::HeadersIterator"* %0)
  br i1 %10, label %11, label %23

11:                                               ; preds = %9
  %12 = load i8*, i8** %4, align 8
  %13 = load i64, i64* %6, align 8
  %14 = ptrtoint i8* %12 to i64
  %15 = sub i64 %13, %14
  br i1 %7, label %18, label %16

16:                                               ; preds = %11
  %17 = call i64 @strlen(i8* nonnull %1) #17
  br label %20

18:                                               ; preds = %11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.43, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.44, i64 0, i64 0)) #17
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #17
  br label %20

20:                                               ; preds = %16, %18
  %21 = phi i64 [ 0, %18 ], [ %17, %16 ]
  %22 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %12, i64 %15, i8* %1, i64 %21) #17
  br i1 %22, label %23, label %9

23:                                               ; preds = %9, %20
  %24 = phi i1 [ true, %20 ], [ false, %9 ]
  ret i1 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net8HttpUtil14ValuesIteratorC2ENSt3__111__wrap_iterIPKcEES6_cb(%"class.net::HttpUtil::ValuesIterator"*, i8*, i8*, i8 signext, i1 zeroext) unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = zext i1 %4 to i8
  %9 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #17
  %10 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  store i8 1, i8* %11, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 %3, i64 1, i1 false) #17
  %12 = getelementptr inbounds i8, i8* %9, i64 1
  store i8 0, i8* %12, align 1
  %13 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %0, i64 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %0, i64 0, i32 0, i32 1, i32 0
  %15 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %0, i64 0, i32 0, i32 2, i32 0
  %16 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %0, i64 0, i32 0, i32 3, i32 0
  %17 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %0, i64 0, i32 0, i32 4
  %18 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  store i8* %1, i8** %13, align 8
  store i8* %1, i8** %14, align 8
  store i8* %1, i8** %15, align 8
  store i8* %2, i8** %16, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* nonnull align 8 %9, i64 24, i1 false) #17
  %19 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %0, i64 0, i32 0, i32 6
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %0, i64 0, i32 0, i32 7
  store i8 1, i8* %20, align 4
  %21 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %0, i64 0, i32 0, i32 9
  store i32 0, i32* %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #17
  %22 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %0, i64 0, i32 1, i32 0
  %23 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %0, i64 0, i32 3
  %24 = bitcast i8** %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false)
  store i8 %8, i8* %23, align 8
  %25 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #17
  %26 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  store i8 1, i8* %27, align 1
  store i8 34, i8* %25, align 8
  %28 = getelementptr inbounds i8, i8* %25, i64 1
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %0, i64 0, i32 0, i32 5
  %30 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* nonnull align 8 %25, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #17
  br i1 %4, label %32, label %31

31:                                               ; preds = %5
  store i32 2, i32* %19, align 8
  br label %32

32:                                               ; preds = %5, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net8HttpUtil14ValuesIteratorC2ERKS1_(%"class.net::HttpUtil::ValuesIterator"*, %"class.net::HttpUtil::ValuesIterator"* nocapture readonly dereferenceable(120)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.net::HttpUtil::ValuesIterator"* %0 to i8*
  %4 = bitcast %"class.net::HttpUtil::ValuesIterator"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 32, i1 false) #17
  %5 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %0, i64 0, i32 0, i32 4
  %6 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %1, i64 0, i32 0, i32 4
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %13 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false) #17
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %1, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %5, i8* %16, i64 %18) #17
  br label %19

19:                                               ; preds = %14, %11
  %20 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %0, i64 0, i32 0, i32 5
  %21 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %1, i64 0, i32 0, i32 5
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %28 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 24, i1 false) #17
  br label %34

29:                                               ; preds = %19
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %1, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %20, i8* %31, i64 %33) #17
  br label %34

34:                                               ; preds = %26, %29
  %35 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %0, i64 0, i32 0, i32 6
  %36 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %1, i64 0, i32 0, i32 6
  %37 = bitcast i32* %35 to i8*
  %38 = bitcast i32* %36 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 12, i1 false) #17
  %39 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %0, i64 0, i32 1
  %40 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %1, i64 0, i32 1
  %41 = bitcast %"class.std::__1::__wrap_iter.16"* %39 to i8*
  %42 = bitcast %"class.std::__1::__wrap_iter.16"* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 17, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net8HttpUtil14ValuesIteratorD2Ev(%"class.net::HttpUtil::ValuesIterator"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %0, i64 0, i32 0, i32 5
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #19
  br label %10

10:                                               ; preds = %7, %1
  %11 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %0, i64 0, i32 0, i32 4
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #19
  br label %19

19:                                               ; preds = %10, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net8HttpUtil22NameValuePairsIteratorC2ENSt3__111__wrap_iterIPKcEES6_cNS1_6ValuesENS1_6QuotesE(%"class.net::HttpUtil::NameValuePairsIterator"* nocapture, i8*, i8*, i8 signext, i32, i32) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %9 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 0, i32 0, i32 2, i32 0
  %10 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 0, i32 0, i32 3, i32 0
  store i8* %1, i8** %7, align 8
  store i8* %1, i8** %8, align 8
  store i8* %1, i8** %9, align 8
  store i8* %2, i8** %10, align 8
  %11 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 0, i32 0, i32 4
  %12 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  store i8 %3, i8* %12, align 8
  %13 = bitcast %"class.net::HttpUtil::NameValuePairsIterator"* %0 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 33
  store i8 0, i8* %14, align 1
  %15 = getelementptr inbounds i8, i8* %13, i64 55
  store i8 1, i8* %15, align 1
  %16 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 0, i32 0, i32 6
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 0, i32 0, i32 7
  store i8 1, i8* %17, align 4
  %18 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 0, i32 0, i32 9
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 0, i32 3
  %21 = bitcast i8** %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #17
  store i8 1, i8* %20, align 8
  %22 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 0, i32 0, i32 5
  %23 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  store i8 34, i8* %23, align 8
  %24 = getelementptr inbounds i8, i8* %13, i64 57
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds i8, i8* %13, i64 79
  store i8 1, i8* %25, align 1
  %26 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 1
  store i8 1, i8* %26, align 8
  %27 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 3, i32 0
  store i8* %2, i8** %27, align 8
  %28 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 4, i32 0
  store i8* %2, i8** %28, align 8
  %29 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 5, i32 0
  store i8* %2, i8** %29, align 8
  %30 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 6, i32 0
  store i8* %2, i8** %30, align 8
  %31 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 7
  %32 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 9
  %33 = icmp eq i32 %4, 0
  %34 = zext i1 %33 to i8
  %35 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 25, i1 false)
  store i8 %34, i8* %32, align 1
  %36 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 10
  %37 = icmp eq i32 %5, 0
  %38 = zext i1 %37 to i8
  store i8 %38, i8* %36, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net8HttpUtil22NameValuePairsIteratorC2ENSt3__111__wrap_iterIPKcEES6_c(%"class.net::HttpUtil::NameValuePairsIterator"* nocapture, i8*, i8*, i8 signext) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 0, i32 0, i32 2, i32 0
  %8 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 0, i32 0, i32 3, i32 0
  store i8* %1, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i8* %1, i8** %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 0, i32 0, i32 4
  %10 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  store i8 %3, i8* %10, align 8
  %11 = bitcast %"class.net::HttpUtil::NameValuePairsIterator"* %0 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 33
  store i8 0, i8* %12, align 1
  %13 = getelementptr inbounds i8, i8* %11, i64 55
  store i8 1, i8* %13, align 1
  %14 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 0, i32 0, i32 6
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 0, i32 0, i32 7
  store i8 1, i8* %15, align 4
  %16 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 0, i32 0, i32 9
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 0, i32 3
  %19 = bitcast i8** %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #17
  store i8 1, i8* %18, align 8
  %20 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 0, i32 0, i32 5
  %21 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  store i8 34, i8* %21, align 8
  %22 = getelementptr inbounds i8, i8* %11, i64 57
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds i8, i8* %11, i64 79
  store i8 1, i8* %23, align 1
  %24 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 1
  store i8 1, i8* %24, align 8
  %25 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 3, i32 0
  store i8* %2, i8** %25, align 8
  %26 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 4, i32 0
  store i8* %2, i8** %26, align 8
  %27 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 5, i32 0
  store i8* %2, i8** %27, align 8
  %28 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 6, i32 0
  store i8* %2, i8** %28, align 8
  %29 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 7
  %30 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 27, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net8HttpUtil22NameValuePairsIteratorC2ERKS1_(%"class.net::HttpUtil::NameValuePairsIterator"*, %"class.net::HttpUtil::NameValuePairsIterator"* nocapture readonly dereferenceable(192)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.net::HttpUtil::NameValuePairsIterator"* %0 to i8*
  %4 = bitcast %"class.net::HttpUtil::NameValuePairsIterator"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 32, i1 false) #17
  %5 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 0, i32 0, i32 4
  %6 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %1, i64 0, i32 0, i32 0, i32 4
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %13 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false) #17
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %1, i64 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %5, i8* %16, i64 %18) #17
  br label %19

19:                                               ; preds = %14, %11
  %20 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 0, i32 0, i32 5
  %21 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %1, i64 0, i32 0, i32 0, i32 5
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %28 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 24, i1 false) #17
  br label %34

29:                                               ; preds = %19
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %1, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %20, i8* %31, i64 %33) #17
  br label %34

34:                                               ; preds = %26, %29
  %35 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 0, i32 0, i32 6
  %36 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %1, i64 0, i32 0, i32 0, i32 6
  %37 = bitcast i32* %35 to i8*
  %38 = bitcast i32* %36 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 12, i1 false) #17
  %39 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %1, i64 0, i32 0, i32 1
  %41 = bitcast %"class.std::__1::__wrap_iter.16"* %39 to i8*
  %42 = bitcast %"class.std::__1::__wrap_iter.16"* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 17, i1 false) #17
  %43 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %1, i64 0, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 40, i1 false)
  %45 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 7
  %46 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %1, i64 0, i32 7
  %47 = bitcast %"class.std::__1::basic_string"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %34
  %52 = bitcast %"class.std::__1::basic_string"* %45 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %46 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #17
  br label %59

54:                                               ; preds = %34
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = load i64, i64* %57, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %45, i8* %56, i64 %58) #17
  br label %59

59:                                               ; preds = %51, %54
  %60 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 8
  %61 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %1, i64 0, i32 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 3, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net8HttpUtil22NameValuePairsIteratorD2Ev(%"class.net::HttpUtil::NameValuePairsIterator"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 7
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #19
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 0, i32 0, i32 5
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #19
  br label %19

19:                                               ; preds = %16, %10
  %20 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 0, i32 0, i32 4
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %27) #19
  br label %28

28:                                               ; preds = %19, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net8HttpUtil22NameValuePairsIterator7GetNextEv(%"class.net::HttpUtil::NameValuePairsIterator"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::__wrap_iter.16", %"class.std::__1::__wrap_iter.16"* %3, i64 0, i32 0
  %5 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 0, i32 0, i32 5
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 0, i32 0, i32 6
  %11 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 0, i32 1, i32 0
  %13 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 0, i32 2, i32 0
  %14 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 0, i32 3
  %16 = getelementptr inbounds %"class.std::__1::__wrap_iter.16", %"class.std::__1::__wrap_iter.16"* %14, i64 0, i32 0
  %17 = bitcast i8** %11 to <2 x i64>*
  %18 = bitcast i8** %12 to <2 x i64>*
  br label %19

19:                                               ; preds = %43, %1
  %20 = load i8, i8* %8, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %19
  %23 = load i64, i64* %9, align 8
  br label %26

24:                                               ; preds = %19
  %25 = zext i8 %20 to i64
  br label %26

26:                                               ; preds = %24, %22
  %27 = phi i64 [ %23, %22 ], [ %25, %24 ]
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %29, label %34

29:                                               ; preds = %26
  %30 = load i32, i32* %10, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %29
  %33 = tail call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE12QuickGetNextEv(%"class.base::StringTokenizerT"* %5) #17
  br i1 %33, label %36, label %154

34:                                               ; preds = %29, %26
  %35 = tail call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE11FullGetNextEv(%"class.base::StringTokenizerT"* %5) #17
  br i1 %35, label %36, label %154

36:                                               ; preds = %34, %32
  %37 = load <2 x i64>, <2 x i64>* %17, align 8
  store <2 x i64> %37, <2 x i64>* %18, align 8
  tail call void @_ZN3net8HttpUtil7TrimLWSEPNSt3__111__wrap_iterIPKcEES6_(%"class.std::__1::__wrap_iter.16"* %3, %"class.std::__1::__wrap_iter.16"* %14) #17
  %38 = load i8, i8* %15, align 8, !range !8
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %36
  %41 = load i8*, i8** %12, align 8
  %42 = load i8*, i8** %13, align 8
  br label %47

43:                                               ; preds = %36
  %44 = load i8*, i8** %4, align 8
  %45 = load i8*, i8** %16, align 8
  %46 = icmp eq i8* %44, %45
  br i1 %46, label %19, label %47

47:                                               ; preds = %43, %40
  %48 = phi i8* [ %42, %40 ], [ %45, %43 ]
  %49 = phi i8* [ %41, %40 ], [ %44, %43 ]
  %50 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 5, i32 0
  store i8* %49, i8** %50, align 8
  %51 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 6, i32 0
  store i8* %48, i8** %51, align 8
  %52 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 6
  %53 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 4
  %54 = bitcast %"class.std::__1::__wrap_iter.16"* %53 to i64*
  %55 = ptrtoint i8* %48 to i64
  store i64 %55, i64* %54, align 8
  %56 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 3
  %57 = bitcast %"class.std::__1::__wrap_iter.16"* %56 to i64*
  store i64 %55, i64* %57, align 8
  %58 = icmp eq i8* %49, %48
  %59 = ptrtoint i8* %49 to i64
  br i1 %58, label %69, label %60

60:                                               ; preds = %47, %66
  %61 = phi i8* [ %67, %66 ], [ %49, %47 ]
  %62 = load i8, i8* %61, align 1
  %63 = icmp eq i8 %62, 61
  br i1 %63, label %64, label %66

64:                                               ; preds = %60
  %65 = ptrtoint i8* %61 to i64
  br label %69

66:                                               ; preds = %60
  %67 = getelementptr inbounds i8, i8* %61, i64 1
  %68 = icmp eq i8* %67, %48
  br i1 %68, label %69, label %60

69:                                               ; preds = %66, %64, %47
  %70 = phi i64 [ %55, %47 ], [ %65, %64 ], [ %55, %66 ]
  %71 = phi i8* [ %48, %47 ], [ %61, %64 ], [ %48, %66 ]
  %72 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 5
  %73 = getelementptr inbounds %"class.std::__1::__wrap_iter.16", %"class.std::__1::__wrap_iter.16"* %72, i64 0, i32 0
  %74 = icmp eq i8* %71, %49
  br i1 %74, label %75, label %77

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 1
  store i8 0, i8* %76, align 8
  br label %154

77:                                               ; preds = %69
  %78 = getelementptr inbounds %"class.std::__1::__wrap_iter.16", %"class.std::__1::__wrap_iter.16"* %52, i64 0, i32 0
  %79 = icmp eq i8* %71, %48
  br i1 %79, label %80, label %88

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 9
  %82 = load i8, i8* %81, align 1, !range !8
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %84, label %95

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 1
  store i8 0, i8* %85, align 8
  br label %154

86:                                               ; preds = %88
  %87 = icmp eq i8* %92, %71
  br i1 %87, label %95, label %88

88:                                               ; preds = %77, %86
  %89 = phi i8* [ %92, %86 ], [ %49, %77 ]
  %90 = load i8, i8* %89, align 1
  %91 = icmp eq i8 %90, 34
  %92 = getelementptr inbounds i8, i8* %89, i64 1
  br i1 %91, label %93, label %86

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 1
  store i8 0, i8* %94, align 8
  br label %154

95:                                               ; preds = %86, %80
  store i64 %59, i64* %57, align 8
  store i64 %70, i64* %54, align 8
  %96 = getelementptr inbounds i8, i8* %71, i64 1
  %97 = select i1 %79, i8* %48, i8* %96
  store i8* %97, i8** %50, align 8
  tail call void @_ZN3net8HttpUtil7TrimLWSEPNSt3__111__wrap_iterIPKcEES6_(%"class.std::__1::__wrap_iter.16"* %56, %"class.std::__1::__wrap_iter.16"* %53)
  tail call void @_ZN3net8HttpUtil7TrimLWSEPNSt3__111__wrap_iterIPKcEES6_(%"class.std::__1::__wrap_iter.16"* %72, %"class.std::__1::__wrap_iter.16"* %52)
  %98 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 8
  store i8 0, i8* %98, align 8
  %99 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 7
  %100 = bitcast %"class.std::__1::basic_string"* %99 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %108

104:                                              ; preds = %95
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  store i8 0, i8* %106, align 1
  %107 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %107, align 8
  br label %110

108:                                              ; preds = %95
  %109 = bitcast %"class.std::__1::basic_string"* %99 to i8*
  store i8 0, i8* %109, align 1
  store i8 0, i8* %101, align 1
  br label %110

110:                                              ; preds = %104, %108
  %111 = load i8*, i8** %78, align 8
  %112 = icmp ne i8* %71, %111
  %113 = ptrtoint i8* %111 to i64
  %114 = load i8*, i8** %73, align 8
  %115 = icmp eq i8* %114, %111
  %116 = and i1 %112, %115
  br i1 %116, label %117, label %119

117:                                              ; preds = %110
  %118 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 1
  store i8 0, i8* %118, align 8
  br label %154

119:                                              ; preds = %110
  %120 = icmp eq i8* %114, %111
  br i1 %120, label %154, label %121

121:                                              ; preds = %119
  %122 = load i8, i8* %114, align 1
  %123 = icmp eq i8 %122, 34
  br i1 %123, label %124, label %154

124:                                              ; preds = %121
  store i8 1, i8* %98, align 8
  %125 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 10
  %126 = load i8, i8* %125, align 2, !range !8
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %134, label %128

128:                                              ; preds = %124
  %129 = ptrtoint i8* %114 to i64
  %130 = sub i64 %113, %129
  %131 = tail call fastcc zeroext i1 @_ZN3net12_GLOBAL__N_111UnquoteImplEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEbPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(i8* %114, i64 %130, i1 zeroext true, %"class.std::__1::basic_string"* %99) #17
  br i1 %131, label %154, label %132

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"class.net::HttpUtil::NameValuePairsIterator", %"class.net::HttpUtil::NameValuePairsIterator"* %0, i64 0, i32 1
  store i8 0, i8* %133, align 8
  br label %154

134:                                              ; preds = %124
  %135 = load i8, i8* %114, align 1
  %136 = getelementptr inbounds i8, i8* %111, i64 -1
  %137 = load i8, i8* %136, align 1
  %138 = icmp ne i8 %135, %137
  %139 = getelementptr inbounds i8, i8* %114, i64 1
  %140 = icmp eq i8* %139, %111
  %141 = or i1 %140, %138
  br i1 %141, label %142, label %143

142:                                              ; preds = %134
  store i8 0, i8* %98, align 8
  store i8* %139, i8** %73, align 8
  br label %154

143:                                              ; preds = %134
  %144 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %144) #17
  %145 = ptrtoint i8* %114 to i64
  %146 = sub i64 %113, %145
  call void @_ZN3net8HttpUtil7UnquoteEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %2, i8* %114, i64 %146)
  %147 = load i8, i8* %101, align 1
  %148 = icmp slt i8 %147, 0
  br i1 %148, label %149, label %152

149:                                              ; preds = %143
  %150 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load i8*, i8** %150, align 8
  call void @_ZdlPv(i8* %151) #19
  br label %152

152:                                              ; preds = %149, %143
  %153 = bitcast %"class.std::__1::basic_string"* %99 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %153, i8* nonnull align 8 %144, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %144) #17
  br label %154

154:                                              ; preds = %34, %32, %119, %75, %84, %117, %132, %93, %128, %142, %152, %121
  %155 = phi i1 [ false, %75 ], [ false, %117 ], [ false, %132 ], [ false, %84 ], [ false, %93 ], [ true, %128 ], [ true, %142 ], [ true, %152 ], [ true, %121 ], [ true, %119 ], [ false, %32 ], [ false, %34 ]
  ret i1 %155
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net8HttpUtil19ParseAcceptEncodingERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS1_3setIS7_NS1_4lessIS7_EENS5_IS7_EEEE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::set"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %4 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %5 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %6 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %7 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %8 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %9 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %10 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %11 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %12 = alloca %"class.base::StringTokenizerT", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.base::BasicStringPiece", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.base::BasicStringPiece", align 8
  %17 = alloca %"class.base::BasicStringPiece", align 8
  %18 = alloca %"class.base::BasicStringPiece", align 8
  %19 = alloca %"class.base::BasicStringPiece", align 8
  %20 = alloca %"class.std::__1::basic_string", align 8
  %21 = alloca %"class.std::__1::basic_string", align 8
  %22 = alloca %"class.std::__1::basic_string", align 8
  %23 = alloca %"class.std::__1::basic_string", align 8
  %24 = alloca %"class.std::__1::basic_string", align 8
  %25 = alloca %"class.std::__1::basic_string", align 8
  %26 = alloca %"class.std::__1::basic_string", align 8
  %27 = alloca %"class.std::__1::basic_string", align 8
  %28 = alloca %"class.std::__1::basic_string", align 8
  %29 = alloca %"class.std::__1::basic_string", align 8
  %30 = alloca %"class.std::__1::basic_string", align 8
  %31 = alloca %"class.std::__1::basic_string", align 8
  %32 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %41 = zext i8 %34 to i64
  %42 = select i1 %35, i8* %37, i8* %40
  %43 = select i1 %35, i64 %39, i64 %41
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %61, label %45

45:                                               ; preds = %2
  %46 = getelementptr inbounds i8, i8* %42, i64 %43
  br label %47

47:                                               ; preds = %51, %45
  %48 = phi i8* [ %42, %45 ], [ %52, %51 ]
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 34
  br i1 %50, label %54, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds i8, i8* %48, i64 1
  %53 = icmp eq i8* %52, %46
  br i1 %53, label %61, label %47

54:                                               ; preds = %47
  %55 = icmp eq i8* %48, %46
  %56 = ptrtoint i8* %48 to i64
  %57 = ptrtoint i8* %42 to i64
  %58 = sub i64 %56, %57
  %59 = icmp eq i64 %58, -1
  %60 = or i1 %55, %59
  br i1 %60, label %61, label %666

61:                                               ; preds = %51, %2, %54
  %62 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %1, i64 0, i32 0
  %63 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %64 = bitcast %"class.std::__1::__tree_end_node"* %63 to %"class.std::__1::__tree_node"**
  %65 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %64, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %62, %"class.std::__1::__tree_node"* %65) #17
  %66 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %66, align 8
  %67 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %1, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %63, %"class.std::__1::__tree_end_node"** %67, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %63, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %68, align 8
  %69 = bitcast %"class.base::StringTokenizerT"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %69) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 -86, i64 96, i1 false)
  %70 = load i8, i8* %33, align 1
  %71 = icmp slt i8 %70, 0
  %72 = load i8*, i8** %36, align 8
  %73 = load i64, i64* %38, align 8
  %74 = zext i8 %70 to i64
  %75 = select i1 %71, i8* %72, i8* %40
  %76 = select i1 %71, i64 %73, i64 %74
  %77 = getelementptr inbounds i8, i8* %75, i64 %76
  %78 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #17
  %79 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  store i8 1, i8* %80, align 1
  store i8 44, i8* %78, align 8
  %81 = getelementptr inbounds i8, i8* %78, i64 1
  store i8 0, i8* %81, align 1
  %82 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %12, i64 0, i32 0, i32 0
  %83 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %12, i64 0, i32 1, i32 0
  %84 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %12, i64 0, i32 2, i32 0
  %85 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %12, i64 0, i32 3, i32 0
  %86 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %12, i64 0, i32 4
  %87 = bitcast %"class.std::__1::basic_string"* %86 to i8*
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %86, i64 1
  %89 = bitcast %"class.std::__1::basic_string"* %88 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 24, i1 false) #17
  store i8* %75, i8** %82, align 8
  store i8* %75, i8** %83, align 8
  store i8* %75, i8** %84, align 8
  store i8* %77, i8** %85, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* nonnull align 8 %78, i64 24, i1 false) #17
  %90 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %12, i64 0, i32 6
  store i32 0, i32* %90, align 8
  %91 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %12, i64 0, i32 7
  store i8 1, i8* %91, align 4
  %92 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %12, i64 0, i32 9
  store i32 0, i32* %92, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #17
  %93 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %12, i64 0, i32 5
  %94 = bitcast %"class.std::__1::basic_string"* %93 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %94, i64 0, i32 1, i32 0
  %96 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %12, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %97 = bitcast %"class.base::BasicStringPiece"* %14 to i8*
  %98 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %14, i64 0, i32 0
  %99 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %14, i64 0, i32 1
  %100 = bitcast i8** %84 to i64*
  %101 = bitcast %"class.base::BasicStringPiece"* %16 to i8*
  %102 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %16, i64 0, i32 0
  %103 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %16, i64 0, i32 1
  %104 = bitcast %"class.base::BasicStringPiece"* %17 to i8*
  %105 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %17, i64 0, i32 0
  %106 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %17, i64 0, i32 1
  %107 = bitcast %"class.base::BasicStringPiece"* %18 to i8*
  %108 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %18, i64 0, i32 0
  %109 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %18, i64 0, i32 1
  %110 = bitcast %"class.base::BasicStringPiece"* %19 to i8*
  %111 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %19, i64 0, i32 0
  %112 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %19, i64 0, i32 1
  %113 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %114 = bitcast %"class.std::__1::__tree_end_node"** %9 to i8*
  %115 = bitcast %"class.std::__1::__tree_end_node"** %9 to i64*
  %116 = bitcast %"class.std::__1::set"* %1 to i64*
  %117 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %119 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %118, i64 0, i32 1, i32 0
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %122 = bitcast %"class.std::__1::__tree_end_node"** %10 to i8*
  %123 = bitcast %"class.std::__1::__tree_end_node"** %10 to i64*
  %124 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %125 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %124, i64 0, i32 1, i32 0
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %128 = bitcast %"class.std::__1::__tree_end_node"** %11 to i8*
  %129 = bitcast %"class.std::__1::__tree_end_node"** %11 to i64*
  %130 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %131 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %130, i64 0, i32 1, i32 0
  %132 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = bitcast %"class.base::BasicStringPiece"* %17 to i8*
  %134 = bitcast %"class.base::BasicStringPiece"* %19 to i8*
  br label %135

135:                                              ; preds = %356, %61
  %136 = phi i32 [ %359, %356 ], [ 0, %61 ]
  %137 = phi i64 [ %358, %356 ], [ 0, %61 ]
  %138 = phi i8 [ %357, %356 ], [ 0, %61 ]
  %139 = icmp slt i8 %138, 0
  %140 = zext i8 %138 to i64
  %141 = select i1 %139, i64 %137, i64 %140
  %142 = icmp eq i64 %141, 0
  %143 = icmp eq i32 %136, 0
  %144 = and i1 %142, %143
  br i1 %144, label %145, label %147

145:                                              ; preds = %135
  %146 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE12QuickGetNextEv(%"class.base::StringTokenizerT"* nonnull %12) #17
  br i1 %146, label %149, label %360

147:                                              ; preds = %135
  %148 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE11FullGetNextEv(%"class.base::StringTokenizerT"* nonnull %12) #17
  br i1 %148, label %149, label %360

149:                                              ; preds = %145, %147
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %97) #17
  %150 = load i8*, i8** %83, align 8
  %151 = load i64, i64* %100, align 8
  %152 = ptrtoint i8* %150 to i64
  %153 = sub i64 %151, %152
  store i8* %150, i8** %98, align 8
  store i64 %153, i64* %99, align 8
  %154 = call { i8*, i64 } @_ZN3net8HttpUtil7TrimLWSERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %14)
  %155 = extractvalue { i8*, i64 } %154, 0
  %156 = extractvalue { i8*, i64 } %154, 1
  store i8* %155, i8** %98, align 8
  store i64 %156, i64* %99, align 8
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %166, label %158

158:                                              ; preds = %149
  %159 = call i8* @memchr(i8* %155, i32 59, i64 %156) #17
  %160 = icmp eq i8* %159, null
  br i1 %160, label %166, label %161

161:                                              ; preds = %158
  %162 = ptrtoint i8* %159 to i64
  %163 = ptrtoint i8* %155 to i64
  %164 = sub i64 %162, %163
  %165 = icmp eq i64 %164, -1
  br i1 %165, label %166, label %203

166:                                              ; preds = %149, %158, %161
  %167 = call i64 @_ZN4base8internal13find_first_ofENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_m(i8* %155, i64 %156, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0), i64 2, i64 0) #17
  %168 = icmp eq i64 %167, -1
  br i1 %168, label %170, label %169

169:                                              ; preds = %166
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #17
  br label %650

170:                                              ; preds = %166
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %127) #17
  %171 = load i8*, i8** %98, align 8
  %172 = load i64, i64* %99, align 8
  call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %15, i8* %171, i64 %172) #17
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %128) #17
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %11, align 8
  %173 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree"* %62, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %11, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %15) #17
  %174 = bitcast %"class.std::__1::__tree_node_base"** %173 to %"class.std::__1::__tree_node"**
  %175 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node"* %175, null
  br i1 %176, label %177, label %197

177:                                              ; preds = %170
  %178 = call i8* @_Znwm(i64 56) #19, !noalias !31
  %179 = getelementptr inbounds i8, i8* %178, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %179, i8* nonnull align 8 %127, i64 24, i1 false) #17, !noalias !31
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %127, i8 0, i64 24, i1 false) #17, !noalias !31
  %180 = load i64, i64* %129, align 8
  %181 = bitcast i8* %178 to %"class.std::__1::__tree_node_base"*
  %182 = getelementptr inbounds i8, i8* %178, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %178, i8 0, i64 16, i1 false) #17
  %183 = bitcast i8* %182 to i64*
  store i64 %180, i64* %183, align 8
  %184 = bitcast %"class.std::__1::__tree_node_base"** %173 to i8**
  store i8* %178, i8** %184, align 8
  %185 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %67, align 8
  %186 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %185, i64 0, i32 0
  %187 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %188 = icmp eq %"class.std::__1::__tree_node_base"* %187, null
  br i1 %188, label %192, label %189

189:                                              ; preds = %177
  %190 = ptrtoint %"class.std::__1::__tree_node_base"* %187 to i64
  store i64 %190, i64* %116, align 8
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %173, align 8
  br label %192

192:                                              ; preds = %189, %177
  %193 = phi %"class.std::__1::__tree_node_base"* [ %181, %177 ], [ %191, %189 ]
  %194 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %117, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %194, %"class.std::__1::__tree_node_base"* %193) #17
  %195 = load i64, i64* %66, align 8
  %196 = add i64 %195, 1
  store i64 %196, i64* %66, align 8
  br label %197

197:                                              ; preds = %170, %192
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128) #17
  %198 = load i8, i8* %131, align 1
  %199 = icmp slt i8 %198, 0
  br i1 %199, label %200, label %202

200:                                              ; preds = %197
  %201 = load i8*, i8** %132, align 8
  call void @_ZdlPv(i8* %201) #19
  br label %202

202:                                              ; preds = %200, %197
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %127) #17
  br label %356

203:                                              ; preds = %161
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %101) #17
  %204 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %14, i64 0, i64 %164)
  %205 = extractvalue { i8*, i64 } %204, 0
  store i8* %205, i8** %102, align 8
  %206 = extractvalue { i8*, i64 } %204, 1
  store i64 %206, i64* %103, align 8
  %207 = call { i8*, i64 } @_ZN3net8HttpUtil7TrimLWSERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %16)
  %208 = extractvalue { i8*, i64 } %207, 0
  %209 = extractvalue { i8*, i64 } %207, 1
  store i8* %208, i8** %102, align 8
  store i64 %209, i64* %103, align 8
  %210 = call i64 @_ZN4base8internal13find_first_ofENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_m(i8* %208, i64 %209, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0), i64 2, i64 0) #17
  %211 = icmp eq i64 %210, -1
  br i1 %211, label %213, label %212

212:                                              ; preds = %203
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %101) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #17
  br label %650

213:                                              ; preds = %203
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #17
  %214 = add nuw i64 %164, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %133, i8 -86, i64 16, i1 false)
  %215 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %14, i64 %214, i64 -1)
  %216 = extractvalue { i8*, i64 } %215, 0
  store i8* %216, i8** %105, align 8
  %217 = extractvalue { i8*, i64 } %215, 1
  store i64 %217, i64* %106, align 8
  %218 = call { i8*, i64 } @_ZN3net8HttpUtil7TrimLWSERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %17)
  %219 = extractvalue { i8*, i64 } %218, 0
  %220 = extractvalue { i8*, i64 } %218, 1
  store i8* %219, i8** %105, align 8
  store i64 %220, i64* %106, align 8
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %353, label %222

222:                                              ; preds = %213
  %223 = call i8* @memchr(i8* %219, i32 61, i64 %220) #17
  %224 = icmp eq i8* %223, null
  br i1 %224, label %353, label %225

225:                                              ; preds = %222
  %226 = ptrtoint i8* %223 to i64
  %227 = ptrtoint i8* %219 to i64
  %228 = sub i64 %226, %227
  %229 = icmp eq i64 %228, -1
  br i1 %229, label %353, label %230

230:                                              ; preds = %225
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %107) #17
  %231 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %17, i64 0, i64 %228)
  %232 = extractvalue { i8*, i64 } %231, 0
  store i8* %232, i8** %108, align 8
  %233 = extractvalue { i8*, i64 } %231, 1
  store i64 %233, i64* %109, align 8
  %234 = call { i8*, i64 } @_ZN3net8HttpUtil7TrimLWSERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %18)
  %235 = extractvalue { i8*, i64 } %234, 0
  %236 = extractvalue { i8*, i64 } %234, 1
  store i8* %235, i8** %108, align 8
  store i64 %236, i64* %109, align 8
  %237 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %235, i64 %236, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i64 0, i64 0), i64 1) #17
  br i1 %237, label %239, label %238

238:                                              ; preds = %230
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %107) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %101) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #17
  br label %650

239:                                              ; preds = %230
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %110) #17
  %240 = add nuw i64 %228, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %134, i8 -86, i64 16, i1 false)
  %241 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %17, i64 %240, i64 -1)
  %242 = extractvalue { i8*, i64 } %241, 0
  store i8* %242, i8** %111, align 8
  %243 = extractvalue { i8*, i64 } %241, 1
  store i64 %243, i64* %112, align 8
  %244 = call { i8*, i64 } @_ZN3net8HttpUtil7TrimLWSERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %19)
  %245 = extractvalue { i8*, i64 } %244, 0
  %246 = extractvalue { i8*, i64 } %244, 1
  store i8* %245, i8** %111, align 8
  store i64 %246, i64* %112, align 8
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %354, label %248

248:                                              ; preds = %239
  %249 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %19, i64 0) #17
  %250 = load i8, i8* %249, align 1
  %251 = icmp eq i8 %250, 49
  br i1 %251, label %252, label %287

252:                                              ; preds = %248
  %253 = load i8*, i8** %111, align 8
  %254 = load i64, i64* %112, align 8
  %255 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35, i64 0, i64 0), i64 5, i8* %253, i64 %254, i32 0) #17
  br i1 %255, label %256, label %354

256:                                              ; preds = %252
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %121) #17
  call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %20, i8* %208, i64 %209) #17
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122) #17
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %10, align 8
  %257 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree"* %62, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %10, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %20) #17
  %258 = bitcast %"class.std::__1::__tree_node_base"** %257 to %"class.std::__1::__tree_node"**
  %259 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %258, align 8
  %260 = icmp eq %"class.std::__1::__tree_node"* %259, null
  br i1 %260, label %261, label %281

261:                                              ; preds = %256
  %262 = call i8* @_Znwm(i64 56) #19, !noalias !34
  %263 = getelementptr inbounds i8, i8* %262, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %263, i8* nonnull align 8 %121, i64 24, i1 false) #17, !noalias !34
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %121, i8 0, i64 24, i1 false) #17, !noalias !34
  %264 = load i64, i64* %123, align 8
  %265 = bitcast i8* %262 to %"class.std::__1::__tree_node_base"*
  %266 = getelementptr inbounds i8, i8* %262, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %262, i8 0, i64 16, i1 false) #17
  %267 = bitcast i8* %266 to i64*
  store i64 %264, i64* %267, align 8
  %268 = bitcast %"class.std::__1::__tree_node_base"** %257 to i8**
  store i8* %262, i8** %268, align 8
  %269 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %67, align 8
  %270 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %269, i64 0, i32 0
  %271 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %270, align 8
  %272 = icmp eq %"class.std::__1::__tree_node_base"* %271, null
  br i1 %272, label %276, label %273

273:                                              ; preds = %261
  %274 = ptrtoint %"class.std::__1::__tree_node_base"* %271 to i64
  store i64 %274, i64* %116, align 8
  %275 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %257, align 8
  br label %276

276:                                              ; preds = %273, %261
  %277 = phi %"class.std::__1::__tree_node_base"* [ %265, %261 ], [ %275, %273 ]
  %278 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %117, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %278, %"class.std::__1::__tree_node_base"* %277) #17
  %279 = load i64, i64* %66, align 8
  %280 = add i64 %279, 1
  store i64 %280, i64* %66, align 8
  br label %281

281:                                              ; preds = %256, %276
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #17
  %282 = load i8, i8* %125, align 1
  %283 = icmp slt i8 %282, 0
  br i1 %283, label %284, label %286

284:                                              ; preds = %281
  %285 = load i8*, i8** %126, align 8
  call void @_ZdlPv(i8* %285) #19
  br label %286

286:                                              ; preds = %281, %284
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %121) #17
  br label %355

287:                                              ; preds = %248
  %288 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %19, i64 0) #17
  %289 = load i8, i8* %288, align 1
  %290 = icmp eq i8 %289, 48
  br i1 %290, label %291, label %354

291:                                              ; preds = %287
  %292 = load i64, i64* %112, align 8
  %293 = icmp eq i64 %292, 1
  br i1 %293, label %355, label %294

294:                                              ; preds = %291
  %295 = add i64 %292, -3
  %296 = icmp ugt i64 %295, 2
  br i1 %296, label %354, label %297

297:                                              ; preds = %294
  %298 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %19, i64 1) #17
  %299 = load i8, i8* %298, align 1
  %300 = icmp eq i8 %299, 46
  br i1 %300, label %301, label %354

301:                                              ; preds = %297
  %302 = load i64, i64* %112, align 8
  %303 = icmp ugt i64 %302, 2
  br i1 %303, label %304, label %355

304:                                              ; preds = %301, %311
  %305 = phi i8 [ %315, %311 ], [ 0, %301 ]
  %306 = phi i64 [ %316, %311 ], [ 2, %301 ]
  %307 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %19, i64 %306) #17
  %308 = load i8, i8* %307, align 1
  %309 = add i8 %308, -48
  %310 = icmp ult i8 %309, 10
  br i1 %310, label %311, label %354

311:                                              ; preds = %304
  %312 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %19, i64 %306) #17
  %313 = load i8, i8* %312, align 1
  %314 = icmp eq i8 %313, 48
  %315 = select i1 %314, i8 %305, i8 1
  %316 = add nuw i64 %306, 1
  %317 = load i64, i64* %112, align 8
  %318 = icmp ult i64 %316, %317
  br i1 %318, label %304, label %319

319:                                              ; preds = %311
  %320 = and i8 %315, 1
  %321 = icmp eq i8 %320, 0
  br i1 %321, label %355, label %322

322:                                              ; preds = %319
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %113) #17
  call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %21, i8* %208, i64 %209) #17
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %114) #17
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %9, align 8
  %323 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree"* %62, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %9, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %21) #17
  %324 = bitcast %"class.std::__1::__tree_node_base"** %323 to %"class.std::__1::__tree_node"**
  %325 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %324, align 8
  %326 = icmp eq %"class.std::__1::__tree_node"* %325, null
  br i1 %326, label %327, label %347

327:                                              ; preds = %322
  %328 = call i8* @_Znwm(i64 56) #19, !noalias !37
  %329 = getelementptr inbounds i8, i8* %328, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %329, i8* nonnull align 8 %113, i64 24, i1 false) #17, !noalias !37
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %113, i8 0, i64 24, i1 false) #17, !noalias !37
  %330 = load i64, i64* %115, align 8
  %331 = bitcast i8* %328 to %"class.std::__1::__tree_node_base"*
  %332 = getelementptr inbounds i8, i8* %328, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %328, i8 0, i64 16, i1 false) #17
  %333 = bitcast i8* %332 to i64*
  store i64 %330, i64* %333, align 8
  %334 = bitcast %"class.std::__1::__tree_node_base"** %323 to i8**
  store i8* %328, i8** %334, align 8
  %335 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %67, align 8
  %336 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %335, i64 0, i32 0
  %337 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %336, align 8
  %338 = icmp eq %"class.std::__1::__tree_node_base"* %337, null
  br i1 %338, label %342, label %339

339:                                              ; preds = %327
  %340 = ptrtoint %"class.std::__1::__tree_node_base"* %337 to i64
  store i64 %340, i64* %116, align 8
  %341 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %323, align 8
  br label %342

342:                                              ; preds = %339, %327
  %343 = phi %"class.std::__1::__tree_node_base"* [ %331, %327 ], [ %341, %339 ]
  %344 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %117, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %344, %"class.std::__1::__tree_node_base"* %343) #17
  %345 = load i64, i64* %66, align 8
  %346 = add i64 %345, 1
  store i64 %346, i64* %66, align 8
  br label %347

347:                                              ; preds = %322, %342
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %114) #17
  %348 = load i8, i8* %119, align 1
  %349 = icmp slt i8 %348, 0
  br i1 %349, label %350, label %352

350:                                              ; preds = %347
  %351 = load i8*, i8** %120, align 8
  call void @_ZdlPv(i8* %351) #19
  br label %352

352:                                              ; preds = %347, %350
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %113) #17
  br label %355

353:                                              ; preds = %225, %213, %222
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %101) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #17
  br label %650

354:                                              ; preds = %239, %252, %287, %294, %297, %304
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %110) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %107) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %101) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #17
  br label %650

355:                                              ; preds = %301, %286, %291, %352, %319
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %110) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %107) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %101) #17
  br label %356

356:                                              ; preds = %355, %202
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #17
  %357 = load i8, i8* %95, align 1
  %358 = load i64, i64* %96, align 8
  %359 = load i32, i32* %90, align 8
  br label %135

360:                                              ; preds = %145, %147
  %361 = load i64, i64* %66, align 8
  %362 = icmp eq i64 %361, 0
  br i1 %362, label %363, label %401

363:                                              ; preds = %360
  %364 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %364) #17
  %365 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %366 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %365, i64 0, i32 1, i32 0
  store i8 1, i8* %366, align 1
  store i8 42, i8* %364, align 8
  %367 = getelementptr inbounds i8, i8* %364, i64 1
  store i8 0, i8* %367, align 1
  %368 = bitcast %"class.std::__1::__tree_end_node"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %368) #17
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %8, align 8
  %369 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree"* %62, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %22) #17
  %370 = bitcast %"class.std::__1::__tree_node_base"** %369 to %"class.std::__1::__tree_node"**
  %371 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %370, align 8
  %372 = icmp eq %"class.std::__1::__tree_node"* %371, null
  br i1 %372, label %373, label %394

373:                                              ; preds = %363
  %374 = call i8* @_Znwm(i64 56) #19, !noalias !40
  %375 = getelementptr inbounds i8, i8* %374, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %375, i8* nonnull align 8 %364, i64 24, i1 false) #17, !noalias !40
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %364, i8 0, i64 24, i1 false) #17, !noalias !40
  %376 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  %377 = load i64, i64* %376, align 8
  %378 = bitcast i8* %374 to %"class.std::__1::__tree_node_base"*
  %379 = getelementptr inbounds i8, i8* %374, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %374, i8 0, i64 16, i1 false) #17
  %380 = bitcast i8* %379 to i64*
  store i64 %377, i64* %380, align 8
  %381 = bitcast %"class.std::__1::__tree_node_base"** %369 to i8**
  store i8* %374, i8** %381, align 8
  %382 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %67, align 8
  %383 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %382, i64 0, i32 0
  %384 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %383, align 8
  %385 = icmp eq %"class.std::__1::__tree_node_base"* %384, null
  br i1 %385, label %389, label %386

386:                                              ; preds = %373
  %387 = ptrtoint %"class.std::__1::__tree_node_base"* %384 to i64
  store i64 %387, i64* %116, align 8
  %388 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %369, align 8
  br label %389

389:                                              ; preds = %386, %373
  %390 = phi %"class.std::__1::__tree_node_base"* [ %378, %373 ], [ %388, %386 ]
  %391 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %117, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %391, %"class.std::__1::__tree_node_base"* %390) #17
  %392 = load i64, i64* %66, align 8
  %393 = add i64 %392, 1
  store i64 %393, i64* %66, align 8
  br label %394

394:                                              ; preds = %363, %389
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %368) #17
  %395 = load i8, i8* %366, align 1
  %396 = icmp slt i8 %395, 0
  br i1 %396, label %397, label %400

397:                                              ; preds = %394
  %398 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %399 = load i8*, i8** %398, align 8
  call void @_ZdlPv(i8* %399) #19
  br label %400

400:                                              ; preds = %394, %397
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %364) #17
  br label %650

401:                                              ; preds = %360
  %402 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %402) #17
  %403 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %404 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %403, i64 0, i32 1, i32 0
  store i8 8, i8* %404, align 1
  %405 = bitcast %"class.std::__1::basic_string"* %23 to i64*
  store i64 8751735924676977769, i64* %405, align 8
  %406 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %407 = bitcast i64* %406 to i8*
  store i8 0, i8* %407, align 8
  %408 = bitcast %"class.std::__1::__tree_end_node"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %408) #17
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %7, align 8
  %409 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree"* %62, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %23) #17
  %410 = bitcast %"class.std::__1::__tree_node_base"** %409 to %"class.std::__1::__tree_node"**
  %411 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %410, align 8
  %412 = icmp eq %"class.std::__1::__tree_node"* %411, null
  br i1 %412, label %413, label %434

413:                                              ; preds = %401
  %414 = call i8* @_Znwm(i64 56) #19, !noalias !43
  %415 = getelementptr inbounds i8, i8* %414, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %415, i8* nonnull align 8 %402, i64 24, i1 false) #17, !noalias !43
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %402, i8 0, i64 24, i1 false) #17, !noalias !43
  %416 = bitcast %"class.std::__1::__tree_end_node"** %7 to i64*
  %417 = load i64, i64* %416, align 8
  %418 = bitcast i8* %414 to %"class.std::__1::__tree_node_base"*
  %419 = getelementptr inbounds i8, i8* %414, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %414, i8 0, i64 16, i1 false) #17
  %420 = bitcast i8* %419 to i64*
  store i64 %417, i64* %420, align 8
  %421 = bitcast %"class.std::__1::__tree_node_base"** %409 to i8**
  store i8* %414, i8** %421, align 8
  %422 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %67, align 8
  %423 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %422, i64 0, i32 0
  %424 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %423, align 8
  %425 = icmp eq %"class.std::__1::__tree_node_base"* %424, null
  br i1 %425, label %429, label %426

426:                                              ; preds = %413
  %427 = ptrtoint %"class.std::__1::__tree_node_base"* %424 to i64
  store i64 %427, i64* %116, align 8
  %428 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %409, align 8
  br label %429

429:                                              ; preds = %426, %413
  %430 = phi %"class.std::__1::__tree_node_base"* [ %418, %413 ], [ %428, %426 ]
  %431 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %117, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %431, %"class.std::__1::__tree_node_base"* %430) #17
  %432 = load i64, i64* %66, align 8
  %433 = add i64 %432, 1
  store i64 %433, i64* %66, align 8
  br label %434

434:                                              ; preds = %401, %429
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %408) #17
  %435 = load i8, i8* %404, align 1
  %436 = icmp slt i8 %435, 0
  br i1 %436, label %437, label %440

437:                                              ; preds = %434
  %438 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %439 = load i8*, i8** %438, align 8
  call void @_ZdlPv(i8* %439) #19
  br label %440

440:                                              ; preds = %434, %437
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %402) #17
  %441 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %441) #17
  %442 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %443 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %442, i64 0, i32 1, i32 0
  store i8 4, i8* %443, align 1
  %444 = bitcast %"class.std::__1::basic_string"* %24 to i32*
  store i32 1885960807, i32* %444, align 8
  %445 = getelementptr inbounds i8, i8* %441, i64 4
  store i8 0, i8* %445, align 4
  %446 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree"* %62, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %24) #17
  %447 = icmp eq %"class.std::__1::__tree_end_node"* %446, %63
  %448 = load i8, i8* %443, align 1
  %449 = icmp slt i8 %448, 0
  br i1 %449, label %450, label %453

450:                                              ; preds = %440
  %451 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %452 = load i8*, i8** %451, align 8
  call void @_ZdlPv(i8* %452) #19
  br label %453

453:                                              ; preds = %440, %450
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %441) #17
  br i1 %447, label %492, label %454

454:                                              ; preds = %453
  %455 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %455) #17
  %456 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %457 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %456, i64 0, i32 1, i32 0
  store i8 6, i8* %457, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %455, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.39, i64 0, i64 0), i64 6, i1 false) #17
  %458 = getelementptr inbounds i8, i8* %455, i64 6
  store i8 0, i8* %458, align 2
  %459 = bitcast %"class.std::__1::__tree_end_node"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %459) #17
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %6, align 8
  %460 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree"* %62, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %25) #17
  %461 = bitcast %"class.std::__1::__tree_node_base"** %460 to %"class.std::__1::__tree_node"**
  %462 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %461, align 8
  %463 = icmp eq %"class.std::__1::__tree_node"* %462, null
  br i1 %463, label %464, label %485

464:                                              ; preds = %454
  %465 = call i8* @_Znwm(i64 56) #19, !noalias !46
  %466 = getelementptr inbounds i8, i8* %465, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %466, i8* nonnull align 8 %455, i64 24, i1 false) #17, !noalias !46
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %455, i8 0, i64 24, i1 false) #17, !noalias !46
  %467 = bitcast %"class.std::__1::__tree_end_node"** %6 to i64*
  %468 = load i64, i64* %467, align 8
  %469 = bitcast i8* %465 to %"class.std::__1::__tree_node_base"*
  %470 = getelementptr inbounds i8, i8* %465, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %465, i8 0, i64 16, i1 false) #17
  %471 = bitcast i8* %470 to i64*
  store i64 %468, i64* %471, align 8
  %472 = bitcast %"class.std::__1::__tree_node_base"** %460 to i8**
  store i8* %465, i8** %472, align 8
  %473 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %67, align 8
  %474 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %473, i64 0, i32 0
  %475 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %474, align 8
  %476 = icmp eq %"class.std::__1::__tree_node_base"* %475, null
  br i1 %476, label %480, label %477

477:                                              ; preds = %464
  %478 = ptrtoint %"class.std::__1::__tree_node_base"* %475 to i64
  store i64 %478, i64* %116, align 8
  %479 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %460, align 8
  br label %480

480:                                              ; preds = %477, %464
  %481 = phi %"class.std::__1::__tree_node_base"* [ %469, %464 ], [ %479, %477 ]
  %482 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %117, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %482, %"class.std::__1::__tree_node_base"* %481) #17
  %483 = load i64, i64* %66, align 8
  %484 = add i64 %483, 1
  store i64 %484, i64* %66, align 8
  br label %485

485:                                              ; preds = %454, %480
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %459) #17
  %486 = load i8, i8* %457, align 1
  %487 = icmp slt i8 %486, 0
  br i1 %487, label %488, label %491

488:                                              ; preds = %485
  %489 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %490 = load i8*, i8** %489, align 8
  call void @_ZdlPv(i8* %490) #19
  br label %491

491:                                              ; preds = %485, %488
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %455) #17
  br label %492

492:                                              ; preds = %453, %491
  %493 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %493) #17
  %494 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %495 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %494, i64 0, i32 1, i32 0
  store i8 6, i8* %495, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %493, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.39, i64 0, i64 0), i64 6, i1 false) #17
  %496 = getelementptr inbounds i8, i8* %493, i64 6
  store i8 0, i8* %496, align 2
  %497 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree"* %62, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %26) #17
  %498 = icmp eq %"class.std::__1::__tree_end_node"* %497, %63
  %499 = load i8, i8* %495, align 1
  %500 = icmp slt i8 %499, 0
  br i1 %500, label %501, label %504

501:                                              ; preds = %492
  %502 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %503 = load i8*, i8** %502, align 8
  call void @_ZdlPv(i8* %503) #19
  br label %504

504:                                              ; preds = %492, %501
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %493) #17
  br i1 %498, label %544, label %505

505:                                              ; preds = %504
  %506 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %506) #17
  %507 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %508 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %507, i64 0, i32 1, i32 0
  store i8 4, i8* %508, align 1
  %509 = bitcast %"class.std::__1::basic_string"* %27 to i32*
  store i32 1885960807, i32* %509, align 8
  %510 = getelementptr inbounds i8, i8* %506, i64 4
  store i8 0, i8* %510, align 4
  %511 = bitcast %"class.std::__1::__tree_end_node"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %511) #17
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %5, align 8
  %512 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree"* %62, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %27) #17
  %513 = bitcast %"class.std::__1::__tree_node_base"** %512 to %"class.std::__1::__tree_node"**
  %514 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %513, align 8
  %515 = icmp eq %"class.std::__1::__tree_node"* %514, null
  br i1 %515, label %516, label %537

516:                                              ; preds = %505
  %517 = call i8* @_Znwm(i64 56) #19, !noalias !49
  %518 = getelementptr inbounds i8, i8* %517, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %518, i8* nonnull align 8 %506, i64 24, i1 false) #17, !noalias !49
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %506, i8 0, i64 24, i1 false) #17, !noalias !49
  %519 = bitcast %"class.std::__1::__tree_end_node"** %5 to i64*
  %520 = load i64, i64* %519, align 8
  %521 = bitcast i8* %517 to %"class.std::__1::__tree_node_base"*
  %522 = getelementptr inbounds i8, i8* %517, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %517, i8 0, i64 16, i1 false) #17
  %523 = bitcast i8* %522 to i64*
  store i64 %520, i64* %523, align 8
  %524 = bitcast %"class.std::__1::__tree_node_base"** %512 to i8**
  store i8* %517, i8** %524, align 8
  %525 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %67, align 8
  %526 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %525, i64 0, i32 0
  %527 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %526, align 8
  %528 = icmp eq %"class.std::__1::__tree_node_base"* %527, null
  br i1 %528, label %532, label %529

529:                                              ; preds = %516
  %530 = ptrtoint %"class.std::__1::__tree_node_base"* %527 to i64
  store i64 %530, i64* %116, align 8
  %531 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %512, align 8
  br label %532

532:                                              ; preds = %529, %516
  %533 = phi %"class.std::__1::__tree_node_base"* [ %521, %516 ], [ %531, %529 ]
  %534 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %117, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %534, %"class.std::__1::__tree_node_base"* %533) #17
  %535 = load i64, i64* %66, align 8
  %536 = add i64 %535, 1
  store i64 %536, i64* %66, align 8
  br label %537

537:                                              ; preds = %505, %532
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %511) #17
  %538 = load i8, i8* %508, align 1
  %539 = icmp slt i8 %538, 0
  br i1 %539, label %540, label %543

540:                                              ; preds = %537
  %541 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %542 = load i8*, i8** %541, align 8
  call void @_ZdlPv(i8* %542) #19
  br label %543

543:                                              ; preds = %537, %540
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %506) #17
  br label %544

544:                                              ; preds = %504, %543
  %545 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %545) #17
  %546 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %547 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %546, i64 0, i32 1, i32 0
  store i8 8, i8* %547, align 1
  %548 = bitcast %"class.std::__1::basic_string"* %28 to i64*
  store i64 8319104478870335331, i64* %548, align 8
  %549 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %550 = bitcast i64* %549 to i8*
  store i8 0, i8* %550, align 8
  %551 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree"* %62, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %28) #17
  %552 = icmp eq %"class.std::__1::__tree_end_node"* %551, %63
  %553 = load i8, i8* %547, align 1
  %554 = icmp slt i8 %553, 0
  br i1 %554, label %555, label %558

555:                                              ; preds = %544
  %556 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %557 = load i8*, i8** %556, align 8
  call void @_ZdlPv(i8* %557) #19
  br label %558

558:                                              ; preds = %544, %555
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %545) #17
  br i1 %552, label %597, label %559

559:                                              ; preds = %558
  %560 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %560) #17
  %561 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %562 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %561, i64 0, i32 1, i32 0
  store i8 10, i8* %562, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %560, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str.41, i64 0, i64 0), i64 10, i1 false) #17
  %563 = getelementptr inbounds i8, i8* %560, i64 10
  store i8 0, i8* %563, align 2
  %564 = bitcast %"class.std::__1::__tree_end_node"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %564) #17
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %4, align 8
  %565 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree"* %62, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %29) #17
  %566 = bitcast %"class.std::__1::__tree_node_base"** %565 to %"class.std::__1::__tree_node"**
  %567 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %566, align 8
  %568 = icmp eq %"class.std::__1::__tree_node"* %567, null
  br i1 %568, label %569, label %590

569:                                              ; preds = %559
  %570 = call i8* @_Znwm(i64 56) #19, !noalias !52
  %571 = getelementptr inbounds i8, i8* %570, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %571, i8* nonnull align 8 %560, i64 24, i1 false) #17, !noalias !52
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %560, i8 0, i64 24, i1 false) #17, !noalias !52
  %572 = bitcast %"class.std::__1::__tree_end_node"** %4 to i64*
  %573 = load i64, i64* %572, align 8
  %574 = bitcast i8* %570 to %"class.std::__1::__tree_node_base"*
  %575 = getelementptr inbounds i8, i8* %570, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %570, i8 0, i64 16, i1 false) #17
  %576 = bitcast i8* %575 to i64*
  store i64 %573, i64* %576, align 8
  %577 = bitcast %"class.std::__1::__tree_node_base"** %565 to i8**
  store i8* %570, i8** %577, align 8
  %578 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %67, align 8
  %579 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %578, i64 0, i32 0
  %580 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %579, align 8
  %581 = icmp eq %"class.std::__1::__tree_node_base"* %580, null
  br i1 %581, label %585, label %582

582:                                              ; preds = %569
  %583 = ptrtoint %"class.std::__1::__tree_node_base"* %580 to i64
  store i64 %583, i64* %116, align 8
  %584 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %565, align 8
  br label %585

585:                                              ; preds = %582, %569
  %586 = phi %"class.std::__1::__tree_node_base"* [ %574, %569 ], [ %584, %582 ]
  %587 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %117, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %587, %"class.std::__1::__tree_node_base"* %586) #17
  %588 = load i64, i64* %66, align 8
  %589 = add i64 %588, 1
  store i64 %589, i64* %66, align 8
  br label %590

590:                                              ; preds = %559, %585
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %564) #17
  %591 = load i8, i8* %562, align 1
  %592 = icmp slt i8 %591, 0
  br i1 %592, label %593, label %596

593:                                              ; preds = %590
  %594 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %595 = load i8*, i8** %594, align 8
  call void @_ZdlPv(i8* %595) #19
  br label %596

596:                                              ; preds = %590, %593
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %560) #17
  br label %597

597:                                              ; preds = %558, %596
  %598 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %598) #17
  %599 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %600 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %599, i64 0, i32 1, i32 0
  store i8 10, i8* %600, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %598, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str.41, i64 0, i64 0), i64 10, i1 false) #17
  %601 = getelementptr inbounds i8, i8* %598, i64 10
  store i8 0, i8* %601, align 2
  %602 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree"* %62, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %30) #17
  %603 = icmp eq %"class.std::__1::__tree_end_node"* %602, %63
  %604 = load i8, i8* %600, align 1
  %605 = icmp slt i8 %604, 0
  br i1 %605, label %606, label %609

606:                                              ; preds = %597
  %607 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %608 = load i8*, i8** %607, align 8
  call void @_ZdlPv(i8* %608) #19
  br label %609

609:                                              ; preds = %597, %606
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %598) #17
  br i1 %603, label %650, label %610

610:                                              ; preds = %609
  %611 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %611) #17
  %612 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %613 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %612, i64 0, i32 1, i32 0
  store i8 8, i8* %613, align 1
  %614 = bitcast %"class.std::__1::basic_string"* %31 to i64*
  store i64 8319104478870335331, i64* %614, align 8
  %615 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %616 = bitcast i64* %615 to i8*
  store i8 0, i8* %616, align 8
  %617 = bitcast %"class.std::__1::__tree_end_node"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %617) #17
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %3, align 8
  %618 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree"* %62, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %31) #17
  %619 = bitcast %"class.std::__1::__tree_node_base"** %618 to %"class.std::__1::__tree_node"**
  %620 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %619, align 8
  %621 = icmp eq %"class.std::__1::__tree_node"* %620, null
  br i1 %621, label %622, label %643

622:                                              ; preds = %610
  %623 = call i8* @_Znwm(i64 56) #19, !noalias !55
  %624 = getelementptr inbounds i8, i8* %623, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %624, i8* nonnull align 8 %611, i64 24, i1 false) #17, !noalias !55
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %611, i8 0, i64 24, i1 false) #17, !noalias !55
  %625 = bitcast %"class.std::__1::__tree_end_node"** %3 to i64*
  %626 = load i64, i64* %625, align 8
  %627 = bitcast i8* %623 to %"class.std::__1::__tree_node_base"*
  %628 = getelementptr inbounds i8, i8* %623, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %623, i8 0, i64 16, i1 false) #17
  %629 = bitcast i8* %628 to i64*
  store i64 %626, i64* %629, align 8
  %630 = bitcast %"class.std::__1::__tree_node_base"** %618 to i8**
  store i8* %623, i8** %630, align 8
  %631 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %67, align 8
  %632 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %631, i64 0, i32 0
  %633 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %632, align 8
  %634 = icmp eq %"class.std::__1::__tree_node_base"* %633, null
  br i1 %634, label %638, label %635

635:                                              ; preds = %622
  %636 = ptrtoint %"class.std::__1::__tree_node_base"* %633 to i64
  store i64 %636, i64* %116, align 8
  %637 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %618, align 8
  br label %638

638:                                              ; preds = %635, %622
  %639 = phi %"class.std::__1::__tree_node_base"* [ %627, %622 ], [ %637, %635 ]
  %640 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %117, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %640, %"class.std::__1::__tree_node_base"* %639) #17
  %641 = load i64, i64* %66, align 8
  %642 = add i64 %641, 1
  store i64 %642, i64* %66, align 8
  br label %643

643:                                              ; preds = %610, %638
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %617) #17
  %644 = load i8, i8* %613, align 1
  %645 = icmp slt i8 %644, 0
  br i1 %645, label %646, label %649

646:                                              ; preds = %643
  %647 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %648 = load i8*, i8** %647, align 8
  call void @_ZdlPv(i8* %648) #19
  br label %649

649:                                              ; preds = %643, %646
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %611) #17
  br label %650

650:                                              ; preds = %212, %353, %238, %354, %609, %169, %649, %400
  %651 = phi i1 [ true, %400 ], [ true, %649 ], [ true, %609 ], [ false, %169 ], [ false, %354 ], [ false, %238 ], [ false, %353 ], [ false, %212 ]
  %652 = load i8, i8* %95, align 1
  %653 = icmp slt i8 %652, 0
  br i1 %653, label %654, label %657

654:                                              ; preds = %650
  %655 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %93, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %656 = load i8*, i8** %655, align 8
  call void @_ZdlPv(i8* %656) #19
  br label %657

657:                                              ; preds = %654, %650
  %658 = bitcast %"class.std::__1::basic_string"* %86 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %659 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %658, i64 0, i32 1, i32 0
  %660 = load i8, i8* %659, align 1
  %661 = icmp slt i8 %660, 0
  br i1 %661, label %662, label %665

662:                                              ; preds = %657
  %663 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %664 = load i8*, i8** %663, align 8
  call void @_ZdlPv(i8* %664) #19
  br label %665

665:                                              ; preds = %657, %662
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %69) #17
  br label %666

666:                                              ; preds = %54, %665
  %667 = phi i1 [ %651, %665 ], [ false, %54 ]
  ret i1 %667
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net8HttpUtil20ParseContentEncodingERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS1_3setIS7_NS1_4lessIS7_EENS5_IS7_EEEE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::set"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %4 = alloca %"class.base::StringTokenizerT", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.base::BasicStringPiece", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %17 = zext i8 %10 to i64
  %18 = select i1 %11, i8* %13, i8* %16
  %19 = select i1 %11, i64 %15, i64 %17
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %33, label %21

21:                                               ; preds = %2
  %22 = getelementptr inbounds i8, i8* %18, i64 %19
  br label %23

23:                                               ; preds = %157, %21
  %24 = phi i8* [ %18, %21 ], [ %158, %157 ]
  %25 = load i8, i8* %24, align 1
  switch i8 %25, label %157 [
    i8 34, label %26
    i8 61, label %26
    i8 59, label %26
    i8 42, label %26
  ]

26:                                               ; preds = %23, %23, %23, %23
  %27 = icmp eq i8* %24, %22
  %28 = ptrtoint i8* %24 to i64
  %29 = ptrtoint i8* %18 to i64
  %30 = sub i64 %28, %29
  %31 = icmp eq i64 %30, -1
  %32 = or i1 %27, %31
  br i1 %32, label %33, label %155

33:                                               ; preds = %157, %2, %26
  %34 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %1, i64 0, i32 0
  %35 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %36 = bitcast %"class.std::__1::__tree_end_node"* %35 to %"class.std::__1::__tree_node"**
  %37 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %36, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %34, %"class.std::__1::__tree_node"* %37) #17
  %38 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %38, align 8
  %39 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %1, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %35, %"class.std::__1::__tree_end_node"** %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %35, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %40, align 8
  %41 = bitcast %"class.base::StringTokenizerT"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %41) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 96, i1 false)
  %42 = load i8, i8* %9, align 1
  %43 = icmp slt i8 %42, 0
  %44 = load i8*, i8** %12, align 8
  %45 = load i64, i64* %14, align 8
  %46 = zext i8 %42 to i64
  %47 = select i1 %43, i8* %44, i8* %16
  %48 = select i1 %43, i64 %45, i64 %46
  %49 = getelementptr inbounds i8, i8* %47, i64 %48
  %50 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #17
  %51 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  store i8 1, i8* %52, align 1
  store i8 44, i8* %50, align 8
  %53 = getelementptr inbounds i8, i8* %50, i64 1
  store i8 0, i8* %53, align 1
  %54 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 1, i32 0
  %56 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 2, i32 0
  %57 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 3, i32 0
  %58 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 4
  %59 = bitcast %"class.std::__1::basic_string"* %58 to i8*
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 1
  %61 = bitcast %"class.std::__1::basic_string"* %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 24, i1 false) #17
  store i8* %47, i8** %54, align 8
  store i8* %47, i8** %55, align 8
  store i8* %47, i8** %56, align 8
  store i8* %49, i8** %57, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* nonnull align 8 %50, i64 24, i1 false) #17
  %62 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 6
  store i32 0, i32* %62, align 8
  %63 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 7
  store i8 1, i8* %63, align 4
  %64 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 9
  store i32 0, i32* %64, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #17
  %65 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 5
  %66 = bitcast %"class.std::__1::basic_string"* %65 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %69 = bitcast %"class.base::BasicStringPiece"* %6 to i8*
  %70 = bitcast i8** %56 to i64*
  %71 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 0
  %72 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 1
  %73 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %74 = bitcast %"class.std::__1::__tree_end_node"** %3 to i8*
  %75 = bitcast %"class.std::__1::__tree_end_node"** %3 to i64*
  %76 = bitcast %"class.std::__1::set"* %1 to i64*
  %77 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %78 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %81

81:                                               ; preds = %135, %33
  %82 = phi i32 [ %138, %135 ], [ 0, %33 ]
  %83 = phi i64 [ %137, %135 ], [ 0, %33 ]
  %84 = phi i8 [ %136, %135 ], [ 0, %33 ]
  %85 = icmp slt i8 %84, 0
  %86 = zext i8 %84 to i64
  %87 = select i1 %85, i64 %83, i64 %86
  %88 = icmp eq i64 %87, 0
  %89 = icmp eq i32 %82, 0
  %90 = and i1 %88, %89
  br i1 %90, label %91, label %93

91:                                               ; preds = %81
  %92 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE12QuickGetNextEv(%"class.base::StringTokenizerT"* nonnull %4) #17
  br i1 %92, label %95, label %139

93:                                               ; preds = %81
  %94 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE11FullGetNextEv(%"class.base::StringTokenizerT"* nonnull %4) #17
  br i1 %94, label %95, label %139

95:                                               ; preds = %91, %93
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69) #17
  %96 = load i8*, i8** %55, align 8
  %97 = load i64, i64* %70, align 8
  %98 = ptrtoint i8* %96 to i64
  %99 = sub i64 %97, %98
  store i8* %96, i8** %71, align 8
  store i64 %99, i64* %72, align 8
  %100 = call { i8*, i64 } @_ZN3net8HttpUtil7TrimLWSERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %6)
  %101 = extractvalue { i8*, i64 } %100, 0
  %102 = extractvalue { i8*, i64 } %100, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69) #17
  %103 = call i64 @_ZN4base8internal13find_first_ofENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_m(i8* %101, i64 %102, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0), i64 2, i64 0) #17
  %104 = icmp eq i64 %103, -1
  br i1 %104, label %105, label %139

105:                                              ; preds = %95
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #17
  call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %7, i8* %101, i64 %102) #17
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #17
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %3, align 8
  %106 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree"* %34, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #17
  %107 = bitcast %"class.std::__1::__tree_node_base"** %106 to %"class.std::__1::__tree_node"**
  %108 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %107, align 8
  %109 = icmp eq %"class.std::__1::__tree_node"* %108, null
  br i1 %109, label %110, label %130

110:                                              ; preds = %105
  %111 = call i8* @_Znwm(i64 56) #19, !noalias !58
  %112 = getelementptr inbounds i8, i8* %111, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* nonnull align 8 %73, i64 24, i1 false) #17, !noalias !58
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 0, i64 24, i1 false) #17, !noalias !58
  %113 = load i64, i64* %75, align 8
  %114 = bitcast i8* %111 to %"class.std::__1::__tree_node_base"*
  %115 = getelementptr inbounds i8, i8* %111, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %111, i8 0, i64 16, i1 false) #17
  %116 = bitcast i8* %115 to i64*
  store i64 %113, i64* %116, align 8
  %117 = bitcast %"class.std::__1::__tree_node_base"** %106 to i8**
  store i8* %111, i8** %117, align 8
  %118 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %39, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %118, i64 0, i32 0
  %120 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %119, align 8
  %121 = icmp eq %"class.std::__1::__tree_node_base"* %120, null
  br i1 %121, label %125, label %122

122:                                              ; preds = %110
  %123 = ptrtoint %"class.std::__1::__tree_node_base"* %120 to i64
  store i64 %123, i64* %76, align 8
  %124 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %106, align 8
  br label %125

125:                                              ; preds = %122, %110
  %126 = phi %"class.std::__1::__tree_node_base"* [ %114, %110 ], [ %124, %122 ]
  %127 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %77, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %127, %"class.std::__1::__tree_node_base"* %126) #17
  %128 = load i64, i64* %38, align 8
  %129 = add i64 %128, 1
  store i64 %129, i64* %38, align 8
  br label %130

130:                                              ; preds = %105, %125
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #17
  %131 = load i8, i8* %79, align 1
  %132 = icmp slt i8 %131, 0
  br i1 %132, label %133, label %135

133:                                              ; preds = %130
  %134 = load i8*, i8** %80, align 8
  call void @_ZdlPv(i8* %134) #19
  br label %135

135:                                              ; preds = %130, %133
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #17
  %136 = load i8, i8* %67, align 1
  %137 = load i64, i64* %68, align 8
  %138 = load i32, i32* %62, align 8
  br label %81

139:                                              ; preds = %95, %91, %93
  %140 = phi i1 [ true, %93 ], [ true, %91 ], [ false, %95 ]
  %141 = load i8, i8* %67, align 1
  %142 = icmp slt i8 %141, 0
  br i1 %142, label %143, label %146

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load i8*, i8** %144, align 8
  call void @_ZdlPv(i8* %145) #19
  br label %146

146:                                              ; preds = %143, %139
  %147 = bitcast %"class.std::__1::basic_string"* %58 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %148 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %147, i64 0, i32 1, i32 0
  %149 = load i8, i8* %148, align 1
  %150 = icmp slt i8 %149, 0
  br i1 %150, label %151, label %154

151:                                              ; preds = %146
  %152 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load i8*, i8** %152, align 8
  call void @_ZdlPv(i8* %153) #19
  br label %154

154:                                              ; preds = %146, %151
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %41) #17
  br label %155

155:                                              ; preds = %26, %154
  %156 = phi i1 [ %140, %154 ], [ false, %26 ]
  ret i1 %156

157:                                              ; preds = %23
  %158 = getelementptr inbounds i8, i8* %24, i64 1
  %159 = icmp eq i8* %158, %22
  br i1 %159, label %33, label %23
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #9

declare zeroext i1 @_ZN4base4Time18FromStringInternalEPKcbPS0_(i8*, i1 zeroext, %"class.base::Time"*) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
declare void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_suffixEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #0 align 2

declare void @_ZN4base9StrAppendEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS_4spanIKNS_16BasicStringPieceIcS3_EELm18446744073709551615EEE(%"class.std::__1::basic_string"*, i64, %"class.base::BasicStringPiece"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base"* @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE4findIS6_EENS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(%"class.std::__1::__hash_table"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i8* %9, i8* %12
  %15 = select i1 %7, i64 %11, i64 %13
  %16 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #17
  %17 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %3, i8* %14, i64 %15) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #17
  %18 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %111, label %21

21:                                               ; preds = %2
  %22 = call i64 @llvm.ctpop.i64(i64 %19) #17, !range !61
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = add i64 %19, -1
  %26 = and i64 %25, %17
  br label %31

27:                                               ; preds = %21
  %28 = icmp ult i64 %17, %19
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = urem i64 %17, %19
  br label %31

31:                                               ; preds = %24, %27, %29
  %32 = phi i64 [ %26, %24 ], [ %30, %29 ], [ %17, %27 ]
  %33 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %34, i64 %32
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %111, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base"* %40, null
  br i1 %41, label %111, label %42

42:                                               ; preds = %38
  %43 = add i64 %19, -1
  %44 = load i8, i8* %5, align 1
  %45 = icmp slt i8 %44, 0
  %46 = load i64, i64* %10, align 8
  %47 = zext i8 %44 to i64
  %48 = select i1 %45, i64 %46, i64 %47
  %49 = load i8*, i8** %8, align 8
  %50 = select i1 %45, i8* %49, i8* %12
  %51 = icmp eq i64 %48, 0
  br label %52

52:                                               ; preds = %42, %107
  %53 = phi %"struct.std::__1::__hash_node_base"* [ %40, %42 ], [ %109, %107 ]
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 1
  %55 = bitcast %"struct.std::__1::__hash_node_base"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %56, %17
  br i1 %57, label %68, label %58

58:                                               ; preds = %52
  br i1 %23, label %61, label %59

59:                                               ; preds = %58
  %60 = and i64 %56, %43
  br label %65

61:                                               ; preds = %58
  %62 = icmp ult i64 %56, %19
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = urem i64 %56, %19
  br label %65

65:                                               ; preds = %59, %61, %63
  %66 = phi i64 [ %60, %59 ], [ %64, %63 ], [ %56, %61 ]
  %67 = icmp eq i64 %66, %32
  br i1 %67, label %107, label %111

68:                                               ; preds = %52
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 3
  %75 = bitcast %"struct.std::__1::__hash_node_base"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = zext i8 %72 to i64
  %78 = select i1 %73, i64 %76, i64 %77
  %79 = icmp eq i64 %78, %48
  br i1 %79, label %80, label %107

80:                                               ; preds = %68
  %81 = bitcast %"struct.std::__1::__hash_node_base"* %69 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = bitcast %"struct.std::__1::__hash_node_base"* %69 to i8*
  %84 = select i1 %73, i8* %82, i8* %83
  br i1 %73, label %91, label %85

85:                                               ; preds = %80
  br i1 %51, label %111, label %86

86:                                               ; preds = %85
  %87 = ptrtoint i8* %82 to i64
  %88 = trunc i64 %87 to i8
  %89 = load i8, i8* %50, align 1
  %90 = icmp eq i8 %89, %88
  br i1 %90, label %92, label %107

91:                                               ; preds = %80
  br i1 %51, label %111, label %104

92:                                               ; preds = %86, %99
  %93 = phi i64 [ %96, %99 ], [ %77, %86 ]
  %94 = phi i8* [ %97, %99 ], [ %83, %86 ]
  %95 = phi i8* [ %100, %99 ], [ %50, %86 ]
  %96 = add i64 %93, -1
  %97 = getelementptr inbounds i8, i8* %94, i64 1
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %111, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds i8, i8* %95, i64 1
  %101 = load i8, i8* %97, align 1
  %102 = load i8, i8* %100, align 1
  %103 = icmp eq i8 %101, %102
  br i1 %103, label %92, label %107

104:                                              ; preds = %91
  %105 = call i32 @bcmp(i8* %84, i8* %50, i64 %48) #17
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %99, %86, %68, %65, %104
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base"* %109, null
  br i1 %110, label %111, label %52

111:                                              ; preds = %104, %107, %65, %91, %85, %92, %38, %2, %31
  %112 = phi %"struct.std::__1::__hash_node_base"* [ null, %31 ], [ null, %2 ], [ null, %38 ], [ %53, %92 ], [ %53, %104 ], [ null, %107 ], [ null, %65 ], [ %53, %91 ], [ %53, %85 ]
  ret %"struct.std::__1::__hash_node_base"* %112
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #10 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %50

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2)
  br label %329

9:                                                ; preds = %5
  %10 = bitcast i8* %1 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = mul i64 %11, -5435081209227447693
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = mul i64 %19, -7286425919675154353
  %21 = getelementptr inbounds i8, i8* %16, i64 -16
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = mul i64 %23, -4348849565147123417
  %25 = sub i64 %12, %15
  %26 = lshr i64 %25, 43
  %27 = shl i64 %25, 21
  %28 = or i64 %27, %26
  %29 = lshr i64 %20, 30
  %30 = mul i64 %19, -4737503975807385600
  %31 = or i64 %29, %30
  %32 = add i64 %24, %28
  %33 = add i64 %32, %31
  %34 = xor i64 %15, -3942382747735136937
  %35 = lshr i64 %34, 20
  %36 = shl i64 %34, 44
  %37 = or i64 %36, %35
  %38 = add i64 %12, %2
  %39 = sub i64 %38, %20
  %40 = add i64 %39, %37
  %41 = xor i64 %33, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %329

50:                                               ; preds = %3
  %51 = icmp ult i64 %2, 65
  br i1 %51, label %52, label %132

52:                                               ; preds = %50
  %53 = getelementptr inbounds i8, i8* %1, i64 24
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 1
  %56 = bitcast i8* %1 to i64*
  %57 = load i64, i64* %56, align 1
  %58 = getelementptr inbounds i8, i8* %1, i64 %2
  %59 = getelementptr inbounds i8, i8* %58, i64 -16
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 1
  %62 = add i64 %61, %2
  %63 = mul i64 %62, -4348849565147123417
  %64 = add i64 %63, %57
  %65 = add i64 %64, %55
  %66 = lshr i64 %65, 52
  %67 = shl i64 %65, 12
  %68 = or i64 %67, %66
  %69 = lshr i64 %64, 37
  %70 = shl i64 %64, 27
  %71 = or i64 %70, %69
  %72 = getelementptr inbounds i8, i8* %1, i64 8
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 1
  %75 = add i64 %64, %74
  %76 = lshr i64 %75, 7
  %77 = shl i64 %75, 57
  %78 = or i64 %77, %76
  %79 = getelementptr inbounds i8, i8* %1, i64 16
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 1
  %82 = add i64 %75, %81
  %83 = lshr i64 %82, 31
  %84 = shl i64 %82, 33
  %85 = or i64 %84, %83
  %86 = add i64 %78, %71
  %87 = add i64 %86, %68
  %88 = add i64 %87, %85
  %89 = getelementptr inbounds i8, i8* %58, i64 -32
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 1
  %92 = add i64 %91, %81
  %93 = getelementptr inbounds i8, i8* %58, i64 -8
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 1
  %96 = add i64 %95, %55
  %97 = add i64 %96, %92
  %98 = lshr i64 %97, 52
  %99 = shl i64 %97, 12
  %100 = or i64 %99, %98
  %101 = lshr i64 %92, 37
  %102 = shl i64 %92, 27
  %103 = or i64 %102, %101
  %104 = getelementptr inbounds i8, i8* %58, i64 -24
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 1
  %107 = add i64 %106, %92
  %108 = lshr i64 %107, 7
  %109 = shl i64 %107, 57
  %110 = or i64 %109, %108
  %111 = add i64 %107, %61
  %112 = add i64 %111, %96
  %113 = lshr i64 %111, 31
  %114 = shl i64 %111, 33
  %115 = or i64 %114, %113
  %116 = add i64 %82, %55
  %117 = add i64 %116, %103
  %118 = add i64 %117, %110
  %119 = add i64 %118, %100
  %120 = add i64 %119, %115
  %121 = mul i64 %120, -7286425919675154353
  %122 = add i64 %112, %88
  %123 = mul i64 %122, -4348849565147123417
  %124 = add i64 %121, %123
  %125 = lshr i64 %124, 47
  %126 = xor i64 %125, %124
  %127 = mul i64 %126, -4348849565147123417
  %128 = add i64 %127, %88
  %129 = lshr i64 %128, 47
  %130 = xor i64 %129, %128
  %131 = mul i64 %130, -7286425919675154353
  br label %329

132:                                              ; preds = %50
  %133 = getelementptr inbounds i8, i8* %1, i64 %2
  %134 = getelementptr inbounds i8, i8* %133, i64 -40
  %135 = bitcast i8* %134 to i64*
  %136 = load i64, i64* %135, align 1
  %137 = getelementptr inbounds i8, i8* %133, i64 -16
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 1
  %140 = getelementptr inbounds i8, i8* %133, i64 -56
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 1
  %143 = add i64 %142, %139
  %144 = getelementptr inbounds i8, i8* %133, i64 -48
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 1
  %147 = add i64 %146, %2
  %148 = getelementptr inbounds i8, i8* %133, i64 -24
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 1
  %151 = xor i64 %150, %147
  %152 = mul i64 %151, -7070675565921424023
  %153 = lshr i64 %152, 47
  %154 = xor i64 %152, %150
  %155 = xor i64 %154, %153
  %156 = mul i64 %155, -7070675565921424023
  %157 = lshr i64 %156, 47
  %158 = xor i64 %157, %156
  %159 = mul i64 %158, -7070675565921424023
  %160 = getelementptr inbounds i8, i8* %133, i64 -64
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %161, align 1
  %163 = add i64 %162, %2
  %164 = add i64 %136, %163
  %165 = add i64 %164, %159
  %166 = lshr i64 %165, 21
  %167 = shl i64 %165, 43
  %168 = or i64 %167, %166
  %169 = add i64 %163, %142
  %170 = add i64 %169, %146
  %171 = lshr i64 %170, 44
  %172 = shl i64 %170, 20
  %173 = or i64 %172, %171
  %174 = add i64 %170, %136
  %175 = add i64 %173, %163
  %176 = add i64 %175, %168
  %177 = getelementptr inbounds i8, i8* %133, i64 -32
  %178 = add i64 %143, -5435081209227447693
  %179 = bitcast i8* %177 to i64*
  %180 = load i64, i64* %179, align 1
  %181 = getelementptr inbounds i8, i8* %177, i64 24
  %182 = bitcast i8* %181 to i64*
  %183 = load i64, i64* %182, align 1
  %184 = add i64 %178, %180
  %185 = add i64 %184, %136
  %186 = add i64 %185, %183
  %187 = lshr i64 %186, 21
  %188 = shl i64 %186, 43
  %189 = or i64 %188, %187
  %190 = add i64 %184, %150
  %191 = add i64 %190, %139
  %192 = lshr i64 %191, 44
  %193 = shl i64 %191, 20
  %194 = or i64 %193, %192
  %195 = add i64 %191, %183
  %196 = add i64 %194, %184
  %197 = add i64 %196, %189
  %198 = mul i64 %136, -5435081209227447693
  %199 = bitcast i8* %1 to i64*
  %200 = load i64, i64* %199, align 1
  %201 = add i64 %200, %198
  %202 = add i64 %2, -1
  %203 = and i64 %202, -64
  br label %204

204:                                              ; preds = %292, %132
  %205 = phi i64 [ %200, %132 ], [ %294, %292 ]
  %206 = phi i64 [ %197, %132 ], [ %288, %292 ]
  %207 = phi i64 [ %195, %132 ], [ %286, %292 ]
  %208 = phi i64 [ %174, %132 ], [ %264, %292 ]
  %209 = phi i64 [ %176, %132 ], [ %266, %292 ]
  %210 = phi i64 [ %159, %132 ], [ %234, %292 ]
  %211 = phi i64 [ %201, %132 ], [ %244, %292 ]
  %212 = phi i64 [ %203, %132 ], [ %290, %292 ]
  %213 = phi i8* [ %1, %132 ], [ %289, %292 ]
  %214 = phi i64 [ %143, %132 ], [ %239, %292 ]
  %215 = getelementptr inbounds i8, i8* %213, i64 8
  %216 = bitcast i8* %215 to i64*
  %217 = load i64, i64* %216, align 1
  %218 = add i64 %211, %208
  %219 = add i64 %218, %214
  %220 = add i64 %219, %217
  %221 = lshr i64 %220, 37
  %222 = shl i64 %220, 27
  %223 = or i64 %222, %221
  %224 = mul i64 %223, -5435081209227447693
  %225 = add i64 %214, %209
  %226 = getelementptr inbounds i8, i8* %213, i64 48
  %227 = bitcast i8* %226 to i64*
  %228 = load i64, i64* %227, align 1
  %229 = add i64 %225, %228
  %230 = lshr i64 %229, 42
  %231 = shl i64 %229, 22
  %232 = or i64 %231, %230
  %233 = mul i64 %232, -5435081209227447693
  %234 = xor i64 %224, %206
  %235 = getelementptr inbounds i8, i8* %213, i64 40
  %236 = bitcast i8* %235 to i64*
  %237 = load i64, i64* %236, align 1
  %238 = add i64 %237, %208
  %239 = add i64 %238, %233
  %240 = add i64 %210, %207
  %241 = lshr i64 %240, 33
  %242 = shl i64 %240, 31
  %243 = or i64 %242, %241
  %244 = mul i64 %243, -5435081209227447693
  %245 = mul i64 %209, -5435081209227447693
  %246 = getelementptr inbounds i8, i8* %213, i64 16
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = getelementptr inbounds i8, i8* %213, i64 24
  %250 = bitcast i8* %249 to i64*
  %251 = load i64, i64* %250, align 1
  %252 = add i64 %205, %245
  %253 = add i64 %252, %207
  %254 = add i64 %253, %251
  %255 = add i64 %254, %234
  %256 = lshr i64 %255, 21
  %257 = shl i64 %255, 43
  %258 = or i64 %257, %256
  %259 = add i64 %252, %217
  %260 = add i64 %259, %248
  %261 = lshr i64 %260, 44
  %262 = shl i64 %260, 20
  %263 = or i64 %262, %261
  %264 = add i64 %260, %251
  %265 = add i64 %263, %252
  %266 = add i64 %265, %258
  %267 = getelementptr inbounds i8, i8* %213, i64 32
  %268 = add i64 %244, %206
  %269 = add i64 %239, %248
  %270 = bitcast i8* %267 to i64*
  %271 = load i64, i64* %270, align 1
  %272 = getelementptr inbounds i8, i8* %213, i64 56
  %273 = bitcast i8* %272 to i64*
  %274 = load i64, i64* %273, align 1
  %275 = add i64 %268, %271
  %276 = add i64 %269, %275
  %277 = add i64 %276, %274
  %278 = lshr i64 %277, 21
  %279 = shl i64 %277, 43
  %280 = or i64 %279, %278
  %281 = add i64 %275, %237
  %282 = add i64 %281, %228
  %283 = lshr i64 %282, 44
  %284 = shl i64 %282, 20
  %285 = or i64 %284, %283
  %286 = add i64 %282, %274
  %287 = add i64 %285, %275
  %288 = add i64 %287, %280
  %289 = getelementptr inbounds i8, i8* %213, i64 64
  %290 = add i64 %212, -64
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %295, label %292

292:                                              ; preds = %204
  %293 = bitcast i8* %289 to i64*
  %294 = load i64, i64* %293, align 1
  br label %204

295:                                              ; preds = %204
  %296 = xor i64 %286, %264
  %297 = mul i64 %296, -7070675565921424023
  %298 = lshr i64 %297, 47
  %299 = xor i64 %297, %286
  %300 = xor i64 %299, %298
  %301 = mul i64 %300, -7070675565921424023
  %302 = lshr i64 %301, 47
  %303 = xor i64 %302, %301
  %304 = mul i64 %303, -7070675565921424023
  %305 = lshr i64 %239, 47
  %306 = xor i64 %305, %239
  %307 = mul i64 %306, -5435081209227447693
  %308 = add i64 %307, %234
  %309 = add i64 %308, %304
  %310 = xor i64 %288, %266
  %311 = mul i64 %310, -7070675565921424023
  %312 = lshr i64 %311, 47
  %313 = xor i64 %311, %288
  %314 = xor i64 %313, %312
  %315 = mul i64 %314, -7070675565921424023
  %316 = lshr i64 %315, 47
  %317 = xor i64 %316, %315
  %318 = mul i64 %317, -7070675565921424023
  %319 = add i64 %318, %244
  %320 = xor i64 %319, %309
  %321 = mul i64 %320, -7070675565921424023
  %322 = lshr i64 %321, 47
  %323 = xor i64 %321, %319
  %324 = xor i64 %323, %322
  %325 = mul i64 %324, -7070675565921424023
  %326 = lshr i64 %325, 47
  %327 = xor i64 %326, %325
  %328 = mul i64 %327, -7070675565921424023
  br label %329

329:                                              ; preds = %295, %52, %9, %7
  %330 = phi i64 [ %8, %7 ], [ %49, %9 ], [ %131, %52 ], [ %328, %295 ]
  ret i64 %330
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %14 = zext i8 %7 to i64
  %15 = select i1 %8, i8* %10, i8* %13
  %16 = select i1 %8, i64 %12, i64 %14
  %17 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #17
  %18 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %4, i8* %15, i64 %16) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #17
  %19 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %112, label %22

22:                                               ; preds = %3
  %23 = call i64 @llvm.ctpop.i64(i64 %20) #17, !range !61
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %26, %18
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base"* %37, null
  br i1 %38, label %112, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %37, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %42, label %112, label %43

43:                                               ; preds = %39
  %44 = add i64 %20, -1
  %45 = load i8, i8* %6, align 1
  %46 = icmp slt i8 %45, 0
  %47 = load i64, i64* %11, align 8
  %48 = zext i8 %45 to i64
  %49 = select i1 %46, i64 %47, i64 %48
  %50 = load i8*, i8** %9, align 8
  %51 = select i1 %46, i8* %50, i8* %13
  %52 = icmp eq i64 %49, 0
  br label %53

53:                                               ; preds = %43, %96
  %54 = phi %"struct.std::__1::__hash_node_base"* [ %41, %43 ], [ %98, %96 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 1
  %56 = bitcast %"struct.std::__1::__hash_node_base"* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, %18
  br i1 %58, label %69, label %59

59:                                               ; preds = %53
  br i1 %24, label %62, label %60

60:                                               ; preds = %59
  %61 = and i64 %57, %44
  br label %66

62:                                               ; preds = %59
  %63 = icmp ult i64 %57, %20
  br i1 %63, label %66, label %64

64:                                               ; preds = %62
  %65 = urem i64 %57, %20
  br label %66

66:                                               ; preds = %60, %62, %64
  %67 = phi i64 [ %61, %60 ], [ %65, %64 ], [ %57, %62 ]
  %68 = icmp eq i64 %67, %33
  br i1 %68, label %69, label %112

69:                                               ; preds = %53, %66
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 2
  %71 = bitcast %"struct.std::__1::__hash_node_base"* %70 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 3
  %76 = bitcast %"struct.std::__1::__hash_node_base"* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = zext i8 %73 to i64
  %79 = select i1 %74, i64 %77, i64 %78
  %80 = icmp eq i64 %79, %49
  br i1 %80, label %81, label %96

81:                                               ; preds = %69
  %82 = bitcast %"struct.std::__1::__hash_node_base"* %70 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %70 to i8*
  %85 = select i1 %74, i8* %83, i8* %84
  br i1 %74, label %92, label %86

86:                                               ; preds = %81
  br i1 %52, label %210, label %87

87:                                               ; preds = %86
  %88 = ptrtoint i8* %83 to i64
  %89 = trunc i64 %88 to i8
  %90 = load i8, i8* %51, align 1
  %91 = icmp eq i8 %90, %89
  br i1 %91, label %100, label %96

92:                                               ; preds = %81
  br i1 %52, label %210, label %93

93:                                               ; preds = %92
  %94 = call i32 @bcmp(i8* %85, i8* %51, i64 %49) #17
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %210, label %96

96:                                               ; preds = %107, %69, %87, %93
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 0, i32 0
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %112, label %53

100:                                              ; preds = %87, %107
  %101 = phi i64 [ %104, %107 ], [ %78, %87 ]
  %102 = phi i8* [ %105, %107 ], [ %84, %87 ]
  %103 = phi i8* [ %108, %107 ], [ %51, %87 ]
  %104 = add i64 %101, -1
  %105 = getelementptr inbounds i8, i8* %102, i64 1
  %106 = icmp eq i64 %104, 0
  br i1 %106, label %210, label %107

107:                                              ; preds = %100
  %108 = getelementptr inbounds i8, i8* %103, i64 1
  %109 = load i8, i8* %105, align 1
  %110 = load i8, i8* %108, align 1
  %111 = icmp eq i8 %109, %110
  br i1 %111, label %100, label %96

112:                                              ; preds = %66, %96, %39, %32, %3
  %113 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %39 ], [ %33, %96 ], [ %33, %66 ]
  %114 = call i8* @_Znwm(i64 40) #19, !noalias !62
  %115 = getelementptr inbounds i8, i8* %114, i64 16
  %116 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %116, i64 0, i32 1, i32 0
  %118 = load i8, i8* %117, align 1, !noalias !62
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %122, label %120

120:                                              ; preds = %112
  %121 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* align 8 %121, i64 24, i1 false) #17, !noalias !62
  br label %128

122:                                              ; preds = %112
  %123 = bitcast i8* %115 to %"class.std::__1::basic_string"*
  %124 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i8*, i8** %124, align 8, !noalias !62
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %127 = load i64, i64* %126, align 8, !noalias !62
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %123, i8* %125, i64 %127) #17, !noalias !62
  br label %128

128:                                              ; preds = %120, %122
  %129 = getelementptr inbounds i8, i8* %114, i64 8
  %130 = bitcast i8* %129 to i64*
  store i64 %18, i64* %130, align 8, !noalias !62
  %131 = bitcast i8* %114 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %131, align 8, !noalias !62
  %132 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %133 = load i64, i64* %132, align 8
  %134 = add i64 %133, 1
  %135 = uitofp i64 %134 to float
  %136 = uitofp i64 %20 to float
  %137 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %138 = load float, float* %137, align 4
  %139 = fmul float %138, %136
  %140 = fcmp olt float %139, %135
  %141 = or i1 %21, %140
  br i1 %141, label %142, label %165

142:                                              ; preds = %128
  %143 = shl i64 %20, 1
  %144 = icmp ult i64 %20, 3
  %145 = call i64 @llvm.ctpop.i64(i64 %20) #17, !range !61
  %146 = icmp ugt i64 %145, 1
  %147 = or i1 %144, %146
  %148 = zext i1 %147 to i64
  %149 = or i64 %143, %148
  %150 = fdiv float %135, %138
  %151 = call float @llvm.ceil.f32(float %150) #17
  %152 = fptoui float %151 to i64
  %153 = icmp ult i64 %149, %152
  %154 = select i1 %153, i64 %152, i64 %149
  call void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %154)
  %155 = load i64, i64* %19, align 8
  %156 = call i64 @llvm.ctpop.i64(i64 %155) #17, !range !61
  %157 = icmp ugt i64 %156, 1
  br i1 %157, label %161, label %158

158:                                              ; preds = %142
  %159 = add i64 %155, -1
  %160 = and i64 %159, %18
  br label %165

161:                                              ; preds = %142
  %162 = icmp ult i64 %18, %155
  br i1 %162, label %165, label %163

163:                                              ; preds = %161
  %164 = urem i64 %18, %155
  br label %165

165:                                              ; preds = %163, %161, %158, %128
  %166 = phi i64 [ %20, %128 ], [ %155, %158 ], [ %155, %161 ], [ %155, %163 ]
  %167 = phi i64 [ %113, %128 ], [ %160, %158 ], [ %18, %161 ], [ %164, %163 ]
  %168 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %169 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %168, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %169, i64 %167
  %171 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %170, align 8
  %172 = icmp eq %"struct.std::__1::__hash_node_base"* %171, null
  br i1 %172, label %173, label %199

173:                                              ; preds = %165
  %174 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %175 = bitcast %"struct.std::__1::__hash_node_base"* %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = bitcast i8* %114 to i64*
  store i64 %176, i64* %177, align 8
  %178 = bitcast %"struct.std::__1::__hash_node_base"* %174 to i8**
  store i8* %114, i8** %178, align 8
  store %"struct.std::__1::__hash_node_base"* %174, %"struct.std::__1::__hash_node_base"** %170, align 8
  %179 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %180 = icmp eq %"struct.std::__1::__hash_node_base"* %179, null
  br i1 %180, label %206, label %181

181:                                              ; preds = %173
  %182 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %179, i64 1
  %183 = bitcast %"struct.std::__1::__hash_node_base"* %182 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = call i64 @llvm.ctpop.i64(i64 %166) #17, !range !61
  %186 = icmp ugt i64 %185, 1
  br i1 %186, label %190, label %187

187:                                              ; preds = %181
  %188 = add i64 %166, -1
  %189 = and i64 %184, %188
  br label %194

190:                                              ; preds = %181
  %191 = icmp ult i64 %184, %166
  br i1 %191, label %194, label %192

192:                                              ; preds = %190
  %193 = urem i64 %184, %166
  br label %194

194:                                              ; preds = %187, %190, %192
  %195 = phi i64 [ %189, %187 ], [ %193, %192 ], [ %184, %190 ]
  %196 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %168, align 8
  %197 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %196, i64 %195
  %198 = bitcast %"struct.std::__1::__hash_node_base"** %197 to i8**
  br label %204

199:                                              ; preds = %165
  %200 = bitcast %"struct.std::__1::__hash_node_base"* %171 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = bitcast i8* %114 to i64*
  store i64 %201, i64* %202, align 8
  %203 = bitcast %"struct.std::__1::__hash_node_base"* %171 to i8**
  br label %204

204:                                              ; preds = %194, %199
  %205 = phi i8** [ %203, %199 ], [ %198, %194 ]
  store i8* %114, i8** %205, align 8
  br label %206

206:                                              ; preds = %204, %173
  %207 = bitcast i8* %114 to %"struct.std::__1::__hash_node_base"*
  %208 = load i64, i64* %132, align 8
  %209 = add i64 %208, 1
  store i64 %209, i64* %132, align 8
  br label %210

210:                                              ; preds = %86, %92, %93, %100, %206
  %211 = phi i8 [ 1, %206 ], [ 0, %100 ], [ 0, %93 ], [ 0, %92 ], [ 0, %86 ]
  %212 = phi %"struct.std::__1::__hash_node_base"* [ %207, %206 ], [ %54, %100 ], [ %54, %93 ], [ %54, %92 ], [ %54, %86 ]
  %213 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %212, 0
  %214 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %213, i8 %211, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %214
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !61
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #17
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #17, !range !61
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #17
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #17, !range !61
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #17
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %186, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #18
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #19
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #19
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !65

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %194, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #17, !range !61
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %194, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %180
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %184, %180 ]
  %81 = phi i64 [ %71, %77 ], [ %182, %180 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %181, %180 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %180, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %118, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base"* %102, null
  br i1 %103, label %166, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base"* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 3
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = zext i8 %108 to i64
  %114 = select i1 %109, i64 %112, i64 %113
  %115 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i8**
  %116 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i8*
  %117 = icmp eq i64 %114, 0
  br label %119

118:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %180

119:                                              ; preds = %104, %162
  %120 = phi %"struct.std::__1::__hash_node_base"* [ %102, %104 ], [ %164, %162 ]
  %121 = phi %"struct.std::__1::__hash_node_base"* [ %80, %104 ], [ %120, %162 ]
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 2
  %123 = bitcast %"struct.std::__1::__hash_node_base"* %122 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 3
  %128 = bitcast %"struct.std::__1::__hash_node_base"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = zext i8 %125 to i64
  %131 = select i1 %126, i64 %129, i64 %130
  %132 = icmp eq i64 %114, %131
  br i1 %132, label %133, label %166

133:                                              ; preds = %119
  %134 = load i8*, i8** %115, align 8
  %135 = select i1 %109, i8* %134, i8* %116
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i8**
  %137 = load i8*, i8** %136, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i8*
  %139 = select i1 %126, i8* %137, i8* %138
  br i1 %109, label %146, label %140

140:                                              ; preds = %133
  br i1 %117, label %162, label %141

141:                                              ; preds = %140
  %142 = ptrtoint i8* %134 to i64
  %143 = trunc i64 %142 to i8
  %144 = load i8, i8* %139, align 1
  %145 = icmp eq i8 %144, %143
  br i1 %145, label %147, label %166

146:                                              ; preds = %133
  br i1 %117, label %162, label %159

147:                                              ; preds = %141, %154
  %148 = phi i64 [ %151, %154 ], [ %113, %141 ]
  %149 = phi i8* [ %152, %154 ], [ %116, %141 ]
  %150 = phi i8* [ %155, %154 ], [ %139, %141 ]
  %151 = add i64 %148, -1
  %152 = getelementptr inbounds i8, i8* %149, i64 1
  %153 = icmp eq i64 %151, 0
  br i1 %153, label %162, label %154

154:                                              ; preds = %147
  %155 = getelementptr inbounds i8, i8* %150, i64 1
  %156 = load i8, i8* %152, align 1
  %157 = load i8, i8* %155, align 1
  %158 = icmp eq i8 %156, %157
  br i1 %158, label %147, label %166

159:                                              ; preds = %146
  %160 = tail call i32 @bcmp(i8* %135, i8* %139, i64 %114) #17
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %166

162:                                              ; preds = %147, %140, %146, %159
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 0, i32 0
  %164 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %163, align 8
  %165 = icmp eq %"struct.std::__1::__hash_node_base"* %164, null
  br i1 %165, label %166, label %119

166:                                              ; preds = %159, %162, %119, %141, %154, %100
  %167 = phi %"struct.std::__1::__hash_node_base"* [ %80, %100 ], [ %121, %154 ], [ %121, %141 ], [ %121, %159 ], [ %120, %162 ], [ %121, %119 ]
  %168 = bitcast %"struct.std::__1::__hash_node_base"* %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %169, i64* %170, align 8
  %171 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %171, i64 %93
  %173 = bitcast %"struct.std::__1::__hash_node_base"** %172 to i64**
  %174 = load i64*, i64** %173, align 8
  %175 = load i64, i64* %174, align 8
  store i64 %175, i64* %168, align 8
  %176 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %176, i64 %93
  %178 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %177, align 8
  %179 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %178, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %179, align 8
  br label %180

180:                                              ; preds = %92, %166, %118
  %181 = phi %"struct.std::__1::__hash_node_base"* [ %80, %118 ], [ %82, %166 ], [ %80, %92 ]
  %182 = phi i64 [ %93, %118 ], [ %81, %166 ], [ %81, %92 ]
  %183 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %181, i64 0, i32 0
  %184 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %183, align 8
  %185 = icmp eq %"struct.std::__1::__hash_node_base"* %184, null
  br i1 %185, label %194, label %79

186:                                              ; preds = %2
  %187 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %188 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %187, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %187, align 8
  %189 = icmp eq %"struct.std::__1::__hash_node_base"** %188, null
  br i1 %189, label %192, label %190

190:                                              ; preds = %186
  %191 = bitcast %"struct.std::__1::__hash_node_base"** %188 to i8*
  tail call void @_ZdlPv(i8* %191) #19
  br label %192

192:                                              ; preds = %186, %190
  %193 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %193, align 8
  br label %194

194:                                              ; preds = %180, %70, %35, %192
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #14

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #14

declare i64 @_ZN4base8internal13find_first_ofENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_m(i8*, i64, i8*, i64, i64) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #15

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKcE12QuickGetNextEv(%"class.base::StringTokenizerT.17"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::StringTokenizerT.17", %"class.base::StringTokenizerT.17"* %0, i64 0, i32 7
  store i8 0, i8* %2, align 4
  %3 = getelementptr inbounds %"class.base::StringTokenizerT.17", %"class.base::StringTokenizerT.17"* %0, i64 0, i32 2
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::StringTokenizerT.17", %"class.base::StringTokenizerT.17"* %0, i64 0, i32 1
  %7 = bitcast i8** %6 to i64*
  store i64 %5, i64* %7, align 8
  %8 = inttoptr i64 %5 to i8*
  %9 = getelementptr inbounds %"class.base::StringTokenizerT.17", %"class.base::StringTokenizerT.17"* %0, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = icmp eq i8* %10, %8
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.base::StringTokenizerT.17", %"class.base::StringTokenizerT.17"* %0, i64 0, i32 4
  %14 = getelementptr inbounds %"class.base::StringTokenizerT.17", %"class.base::StringTokenizerT.17"* %0, i64 0, i32 9
  br label %16

15:                                               ; preds = %32, %1
  store i8 1, i8* %2, align 4
  br label %59

16:                                               ; preds = %12, %32
  %17 = phi i8* [ %8, %12 ], [ %34, %32 ]
  %18 = getelementptr inbounds i8, i8* %17, i64 1
  store i8* %18, i8** %3, align 8
  %19 = load i8, i8* %17, align 1
  %20 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %13, i8 signext %19, i64 0) #17
  %21 = icmp eq i64 %20, -1
  br i1 %21, label %22, label %32

22:                                               ; preds = %16
  %23 = load i32, i32* %14, align 8
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %28

25:                                               ; preds = %22
  %26 = load i8*, i8** %6, align 8
  %27 = load i8, i8* %26, align 1
  switch i8 %27, label %28 [
    i8 32, label %32
    i8 13, label %32
    i8 10, label %32
    i8 9, label %32
    i8 12, label %32
  ]

28:                                               ; preds = %25, %22
  %29 = load i8*, i8** %3, align 8
  %30 = load i8*, i8** %9, align 8
  %31 = icmp eq i8* %29, %30
  br i1 %31, label %59, label %37

32:                                               ; preds = %25, %25, %25, %25, %25, %16
  %33 = load i64, i64* %4, align 8
  store i64 %33, i64* %7, align 8
  %34 = inttoptr i64 %33 to i8*
  %35 = load i8*, i8** %9, align 8
  %36 = icmp eq i8* %35, %34
  br i1 %36, label %15, label %16

37:                                               ; preds = %28, %50
  %38 = phi i8* [ %51, %50 ], [ %29, %28 ]
  %39 = load i8, i8* %38, align 1
  %40 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %13, i8 signext %39, i64 0) #17
  %41 = icmp eq i64 %40, -1
  br i1 %41, label %42, label %59

42:                                               ; preds = %37
  %43 = load i8*, i8** %3, align 8
  %44 = load i32, i32* %14, align 8
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %50

46:                                               ; preds = %42
  %47 = load i8, i8* %43, align 1
  %48 = add i8 %47, -9
  %49 = icmp ult i8 %48, 24
  br i1 %49, label %54, label %50

50:                                               ; preds = %54, %46, %42
  %51 = getelementptr inbounds i8, i8* %43, i64 1
  store i8* %51, i8** %3, align 8
  %52 = load i8*, i8** %9, align 8
  %53 = icmp eq i8* %51, %52
  br i1 %53, label %59, label %37

54:                                               ; preds = %46
  %55 = zext i8 %48 to i32
  %56 = lshr i32 8388635, %55
  %57 = and i32 %56, 1
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %50, label %59

59:                                               ; preds = %15, %28, %37, %50, %54
  %60 = phi i1 [ true, %54 ], [ false, %15 ], [ true, %28 ], [ true, %37 ], [ true, %50 ]
  ret i1 %60
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKcE11FullGetNextEv(%"class.base::StringTokenizerT.17"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::StringTokenizerT.17", %"class.base::StringTokenizerT.17"* %0, i64 0, i32 2
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.base::StringTokenizerT.17", %"class.base::StringTokenizerT.17"* %0, i64 0, i32 3
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %3, %5
  %7 = ptrtoint i8* %3 to i64
  br i1 %6, label %22, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.base::StringTokenizerT.17", %"class.base::StringTokenizerT.17"* %0, i64 0, i32 9
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %22

12:                                               ; preds = %8, %16
  %13 = phi i64 [ %19, %16 ], [ %7, %8 ]
  %14 = phi i8* [ %17, %16 ], [ %3, %8 ]
  %15 = load i8, i8* %14, align 1
  switch i8 %15, label %22 [
    i8 32, label %16
    i8 13, label %16
    i8 10, label %16
    i8 9, label %16
    i8 12, label %16
  ]

16:                                               ; preds = %12, %12, %12, %12, %12
  %17 = getelementptr inbounds i8, i8* %14, i64 1
  store i8* %17, i8** %2, align 8
  %18 = icmp eq i8* %17, %5
  %19 = ptrtoint i8* %17 to i64
  br i1 %18, label %20, label %12

20:                                               ; preds = %16
  %21 = ptrtoint i8* %17 to i64
  br label %22

22:                                               ; preds = %12, %20, %8, %1
  %23 = phi i64 [ %7, %8 ], [ %7, %1 ], [ %21, %20 ], [ %13, %12 ]
  %24 = phi i8* [ %3, %8 ], [ %3, %1 ], [ %5, %20 ], [ %14, %12 ]
  %25 = getelementptr inbounds %"class.base::StringTokenizerT.17", %"class.base::StringTokenizerT.17"* %0, i64 0, i32 6
  %26 = getelementptr inbounds %"class.base::StringTokenizerT.17", %"class.base::StringTokenizerT.17"* %0, i64 0, i32 7
  %27 = getelementptr inbounds %"class.base::StringTokenizerT.17", %"class.base::StringTokenizerT.17"* %0, i64 0, i32 1
  %28 = bitcast i8** %27 to i64*
  %29 = getelementptr inbounds %"class.base::StringTokenizerT.17", %"class.base::StringTokenizerT.17"* %0, i64 0, i32 4
  %30 = getelementptr inbounds %"class.base::StringTokenizerT.17", %"class.base::StringTokenizerT.17"* %0, i64 0, i32 9
  %31 = getelementptr inbounds %"class.base::StringTokenizerT.17", %"class.base::StringTokenizerT.17"* %0, i64 0, i32 5
  %32 = load i8, i8* %26, align 4, !range !8
  %33 = icmp eq i8 %32, 0
  br label %34

34:                                               ; preds = %111, %22
  %35 = phi i8* [ %5, %22 ], [ %104, %111 ]
  %36 = phi i64 [ %23, %22 ], [ %116, %111 ]
  %37 = phi i8* [ %24, %22 ], [ %112, %111 ]
  %38 = phi i1 [ %33, %22 ], [ false, %111 ]
  %39 = phi i8 [ 0, %22 ], [ %106, %111 ]
  %40 = phi i8 [ 0, %22 ], [ %107, %111 ]
  %41 = phi i8 [ 0, %22 ], [ %108, %111 ]
  br i1 %38, label %103, label %42

42:                                               ; preds = %34
  store i8 0, i8* %26, align 4
  store i64 %36, i64* %28, align 8
  %43 = inttoptr i64 %36 to i8*
  %44 = icmp eq i8* %35, %43
  br i1 %44, label %89, label %45

45:                                               ; preds = %42, %74
  %46 = phi i8* [ %75, %74 ], [ %35, %42 ]
  %47 = phi i8* [ %80, %74 ], [ %37, %42 ]
  %48 = phi i8* [ %80, %74 ], [ %43, %42 ]
  %49 = phi i8 [ %79, %74 ], [ %41, %42 ]
  %50 = phi i8 [ %78, %74 ], [ %40, %42 ]
  %51 = phi i8 [ %77, %74 ], [ %39, %42 ]
  %52 = load i8, i8* %48, align 1
  %53 = icmp eq i8 %49, 0
  br i1 %53, label %61, label %54

54:                                               ; preds = %45
  %55 = icmp eq i8 %50, 0
  br i1 %55, label %56, label %74

56:                                               ; preds = %54
  %57 = icmp eq i8 %52, 92
  br i1 %57, label %74, label %58

58:                                               ; preds = %56
  %59 = icmp eq i8 %51, %52
  %60 = select i1 %59, i8 0, i8 %49
  br label %74

61:                                               ; preds = %45
  %62 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %29, i8 signext %52, i64 0) #17
  %63 = icmp eq i64 %62, -1
  br i1 %63, label %64, label %82

64:                                               ; preds = %61
  %65 = load i32, i32* %30, align 8
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  switch i8 %52, label %68 [
    i8 32, label %82
    i8 13, label %82
    i8 10, label %82
    i8 9, label %82
    i8 12, label %82
  ]

68:                                               ; preds = %67, %64
  %69 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %31, i8 signext %52, i64 0) #17
  %70 = icmp ne i64 %69, -1
  %71 = zext i1 %70 to i8
  %72 = load i8*, i8** %2, align 8
  %73 = load i8*, i8** %4, align 8
  br label %74

74:                                               ; preds = %58, %68, %54, %56
  %75 = phi i8* [ %46, %56 ], [ %46, %54 ], [ %73, %68 ], [ %46, %58 ]
  %76 = phi i8* [ %47, %56 ], [ %47, %54 ], [ %72, %68 ], [ %47, %58 ]
  %77 = phi i8 [ %51, %56 ], [ %51, %54 ], [ %52, %68 ], [ %51, %58 ]
  %78 = phi i8 [ 1, %56 ], [ 0, %54 ], [ %50, %68 ], [ 0, %58 ]
  %79 = phi i8 [ %49, %56 ], [ %49, %54 ], [ %71, %68 ], [ %60, %58 ]
  %80 = getelementptr inbounds i8, i8* %76, i64 1
  store i8* %80, i8** %2, align 8
  %81 = icmp eq i8* %80, %75
  br i1 %81, label %82, label %45

82:                                               ; preds = %67, %67, %67, %67, %67, %61, %74
  %83 = phi i8 [ %77, %74 ], [ %51, %61 ], [ %51, %67 ], [ %51, %67 ], [ %51, %67 ], [ %51, %67 ], [ %51, %67 ]
  %84 = phi i8 [ %78, %74 ], [ %50, %61 ], [ %50, %67 ], [ %50, %67 ], [ %50, %67 ], [ %50, %67 ], [ %50, %67 ]
  %85 = phi i8 [ %79, %74 ], [ 0, %61 ], [ 0, %67 ], [ 0, %67 ], [ 0, %67 ], [ 0, %67 ], [ 0, %67 ]
  %86 = load i8*, i8** %27, align 8
  %87 = load i8*, i8** %2, align 8
  %88 = ptrtoint i8* %87 to i64
  br label %89

89:                                               ; preds = %82, %42
  %90 = phi i64 [ %36, %42 ], [ %88, %82 ]
  %91 = phi i8* [ %37, %42 ], [ %87, %82 ]
  %92 = phi i8* [ %35, %42 ], [ %86, %82 ]
  %93 = phi i8 [ %39, %42 ], [ %83, %82 ]
  %94 = phi i8 [ %40, %42 ], [ %84, %82 ]
  %95 = phi i8 [ %41, %42 ], [ %85, %82 ]
  %96 = icmp eq i8* %92, %91
  br i1 %96, label %97, label %117

97:                                               ; preds = %89
  %98 = load i32, i32* %25, align 8
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %117

101:                                              ; preds = %97
  %102 = load i8*, i8** %4, align 8
  br label %103

103:                                              ; preds = %101, %34
  %104 = phi i8* [ %35, %34 ], [ %102, %101 ]
  %105 = phi i64 [ %36, %34 ], [ %90, %101 ]
  %106 = phi i8 [ %39, %34 ], [ %93, %101 ]
  %107 = phi i8 [ %40, %34 ], [ %94, %101 ]
  %108 = phi i8 [ %41, %34 ], [ %95, %101 ]
  store i8 1, i8* %26, align 4
  store i64 %105, i64* %28, align 8
  %109 = inttoptr i64 %105 to i8*
  %110 = icmp eq i8* %104, %109
  br i1 %110, label %117, label %111

111:                                              ; preds = %103
  %112 = getelementptr inbounds i8, i8* %109, i64 1
  store i8* %112, i8** %2, align 8
  %113 = load i32, i32* %25, align 8
  %114 = and i32 %113, 1
  %115 = icmp eq i32 %114, 0
  %116 = ptrtoint i8* %112 to i64
  br i1 %115, label %34, label %117

117:                                              ; preds = %111, %103, %89, %97
  %118 = phi i1 [ true, %97 ], [ true, %89 ], [ false, %103 ], [ true, %111 ]
  ret i1 %118
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #15

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE26__erase_external_with_moveEmm(%"class.std::__1::basic_string"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE12QuickGetNextEv(%"class.base::StringTokenizerT"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 7
  store i8 0, i8* %2, align 4
  %3 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::__wrap_iter.16"* %3 to i64*
  %6 = bitcast %"class.std::__1::__wrap_iter.16"* %4 to i64*
  %7 = load i64, i64* %5, align 8
  store i64 %7, i64* %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::__wrap_iter.16", %"class.std::__1::__wrap_iter.16"* %3, i64 0, i32 0
  %9 = inttoptr i64 %7 to i8*
  %10 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 3, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, %9
  br i1 %12, label %17, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 4
  %15 = getelementptr inbounds %"class.std::__1::__wrap_iter.16", %"class.std::__1::__wrap_iter.16"* %4, i64 0, i32 0
  %16 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 9
  br label %18

17:                                               ; preds = %34, %1
  store i8 1, i8* %2, align 4
  br label %61

18:                                               ; preds = %13, %34
  %19 = phi i8* [ %9, %13 ], [ %36, %34 ]
  %20 = getelementptr inbounds i8, i8* %19, i64 1
  store i8* %20, i8** %8, align 8
  %21 = load i8, i8* %19, align 1
  %22 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %14, i8 signext %21, i64 0) #17
  %23 = icmp eq i64 %22, -1
  br i1 %23, label %24, label %34

24:                                               ; preds = %18
  %25 = load i32, i32* %16, align 8
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %30

27:                                               ; preds = %24
  %28 = load i8*, i8** %15, align 8
  %29 = load i8, i8* %28, align 1
  switch i8 %29, label %30 [
    i8 32, label %34
    i8 13, label %34
    i8 10, label %34
    i8 9, label %34
    i8 12, label %34
  ]

30:                                               ; preds = %27, %24
  %31 = load i8*, i8** %8, align 8
  %32 = load i8*, i8** %10, align 8
  %33 = icmp eq i8* %31, %32
  br i1 %33, label %61, label %39

34:                                               ; preds = %27, %27, %27, %27, %27, %18
  %35 = load i64, i64* %5, align 8
  store i64 %35, i64* %6, align 8
  %36 = inttoptr i64 %35 to i8*
  %37 = load i8*, i8** %10, align 8
  %38 = icmp eq i8* %37, %36
  br i1 %38, label %17, label %18

39:                                               ; preds = %30, %52
  %40 = phi i8* [ %53, %52 ], [ %31, %30 ]
  %41 = load i8, i8* %40, align 1
  %42 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %14, i8 signext %41, i64 0) #17
  %43 = icmp eq i64 %42, -1
  br i1 %43, label %44, label %61

44:                                               ; preds = %39
  %45 = load i8*, i8** %8, align 8
  %46 = load i32, i32* %16, align 8
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %52

48:                                               ; preds = %44
  %49 = load i8, i8* %45, align 1
  %50 = add i8 %49, -9
  %51 = icmp ult i8 %50, 24
  br i1 %51, label %56, label %52

52:                                               ; preds = %56, %48, %44
  %53 = getelementptr inbounds i8, i8* %45, i64 1
  store i8* %53, i8** %8, align 8
  %54 = load i8*, i8** %10, align 8
  %55 = icmp eq i8* %53, %54
  br i1 %55, label %61, label %39

56:                                               ; preds = %48
  %57 = zext i8 %50 to i32
  %58 = lshr i32 8388635, %57
  %59 = and i32 %58, 1
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %52, label %61

61:                                               ; preds = %17, %30, %52, %39, %56
  %62 = phi i1 [ true, %56 ], [ false, %17 ], [ true, %30 ], [ true, %52 ], [ true, %39 ]
  ret i1 %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE11FullGetNextEv(%"class.base::StringTokenizerT"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 2, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 3, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %3, %5
  %7 = ptrtoint i8* %3 to i64
  br i1 %6, label %22, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 9
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %22

12:                                               ; preds = %8, %16
  %13 = phi i64 [ %19, %16 ], [ %7, %8 ]
  %14 = phi i8* [ %17, %16 ], [ %3, %8 ]
  %15 = load i8, i8* %14, align 1
  switch i8 %15, label %22 [
    i8 32, label %16
    i8 13, label %16
    i8 10, label %16
    i8 9, label %16
    i8 12, label %16
  ]

16:                                               ; preds = %12, %12, %12, %12, %12
  %17 = getelementptr inbounds i8, i8* %14, i64 1
  store i8* %17, i8** %2, align 8
  %18 = icmp eq i8* %17, %5
  %19 = ptrtoint i8* %17 to i64
  br i1 %18, label %20, label %12

20:                                               ; preds = %16
  %21 = ptrtoint i8* %17 to i64
  br label %22

22:                                               ; preds = %12, %20, %8, %1
  %23 = phi i64 [ %7, %8 ], [ %7, %1 ], [ %21, %20 ], [ %13, %12 ]
  %24 = phi i8* [ %3, %8 ], [ %3, %1 ], [ %5, %20 ], [ %14, %12 ]
  %25 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 6
  %26 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 2, i32 0
  %27 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 7
  %28 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 1
  %29 = bitcast %"class.std::__1::__wrap_iter.16"* %28 to i64*
  %30 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 4
  %31 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 9
  %32 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 5
  %33 = getelementptr inbounds %"class.std::__1::__wrap_iter.16", %"class.std::__1::__wrap_iter.16"* %28, i64 0, i32 0
  %34 = load i8, i8* %27, align 4, !range !8
  %35 = icmp eq i8 %34, 0
  br label %36

36:                                               ; preds = %113, %22
  %37 = phi i8* [ %5, %22 ], [ %106, %113 ]
  %38 = phi i64 [ %23, %22 ], [ %118, %113 ]
  %39 = phi i8* [ %24, %22 ], [ %114, %113 ]
  %40 = phi i1 [ %35, %22 ], [ false, %113 ]
  %41 = phi i8 [ 0, %22 ], [ %108, %113 ]
  %42 = phi i8 [ 0, %22 ], [ %109, %113 ]
  %43 = phi i8 [ 0, %22 ], [ %110, %113 ]
  br i1 %40, label %105, label %44

44:                                               ; preds = %36
  store i8 0, i8* %27, align 4
  store i64 %38, i64* %29, align 8
  %45 = inttoptr i64 %38 to i8*
  %46 = icmp eq i8* %37, %45
  br i1 %46, label %91, label %47

47:                                               ; preds = %44, %76
  %48 = phi i8* [ %77, %76 ], [ %37, %44 ]
  %49 = phi i8* [ %82, %76 ], [ %39, %44 ]
  %50 = phi i8* [ %82, %76 ], [ %45, %44 ]
  %51 = phi i8 [ %81, %76 ], [ %43, %44 ]
  %52 = phi i8 [ %80, %76 ], [ %42, %44 ]
  %53 = phi i8 [ %79, %76 ], [ %41, %44 ]
  %54 = load i8, i8* %50, align 1
  %55 = icmp eq i8 %51, 0
  br i1 %55, label %63, label %56

56:                                               ; preds = %47
  %57 = icmp eq i8 %52, 0
  br i1 %57, label %58, label %76

58:                                               ; preds = %56
  %59 = icmp eq i8 %54, 92
  br i1 %59, label %76, label %60

60:                                               ; preds = %58
  %61 = icmp eq i8 %53, %54
  %62 = select i1 %61, i8 0, i8 %51
  br label %76

63:                                               ; preds = %47
  %64 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %30, i8 signext %54, i64 0) #17
  %65 = icmp eq i64 %64, -1
  br i1 %65, label %66, label %84

66:                                               ; preds = %63
  %67 = load i32, i32* %31, align 8
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  switch i8 %54, label %70 [
    i8 32, label %84
    i8 13, label %84
    i8 10, label %84
    i8 9, label %84
    i8 12, label %84
  ]

70:                                               ; preds = %69, %66
  %71 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %32, i8 signext %54, i64 0) #17
  %72 = icmp ne i64 %71, -1
  %73 = zext i1 %72 to i8
  %74 = load i8*, i8** %26, align 8
  %75 = load i8*, i8** %4, align 8
  br label %76

76:                                               ; preds = %60, %70, %56, %58
  %77 = phi i8* [ %48, %58 ], [ %48, %56 ], [ %75, %70 ], [ %48, %60 ]
  %78 = phi i8* [ %49, %58 ], [ %49, %56 ], [ %74, %70 ], [ %49, %60 ]
  %79 = phi i8 [ %53, %58 ], [ %53, %56 ], [ %54, %70 ], [ %53, %60 ]
  %80 = phi i8 [ 1, %58 ], [ 0, %56 ], [ %52, %70 ], [ 0, %60 ]
  %81 = phi i8 [ %51, %58 ], [ %51, %56 ], [ %73, %70 ], [ %62, %60 ]
  %82 = getelementptr inbounds i8, i8* %78, i64 1
  store i8* %82, i8** %26, align 8
  %83 = icmp eq i8* %82, %77
  br i1 %83, label %84, label %47

84:                                               ; preds = %76, %69, %69, %69, %69, %69, %63
  %85 = phi i8 [ %53, %63 ], [ %53, %69 ], [ %53, %69 ], [ %53, %69 ], [ %53, %69 ], [ %53, %69 ], [ %79, %76 ]
  %86 = phi i8 [ %52, %63 ], [ %52, %69 ], [ %52, %69 ], [ %52, %69 ], [ %52, %69 ], [ %52, %69 ], [ %80, %76 ]
  %87 = phi i8 [ 0, %63 ], [ 0, %69 ], [ 0, %69 ], [ 0, %69 ], [ 0, %69 ], [ 0, %69 ], [ %81, %76 ]
  %88 = load i8*, i8** %33, align 8
  %89 = load i8*, i8** %26, align 8
  %90 = ptrtoint i8* %89 to i64
  br label %91

91:                                               ; preds = %84, %44
  %92 = phi i64 [ %38, %44 ], [ %90, %84 ]
  %93 = phi i8* [ %39, %44 ], [ %89, %84 ]
  %94 = phi i8* [ %37, %44 ], [ %88, %84 ]
  %95 = phi i8 [ %41, %44 ], [ %85, %84 ]
  %96 = phi i8 [ %42, %44 ], [ %86, %84 ]
  %97 = phi i8 [ %43, %44 ], [ %87, %84 ]
  %98 = icmp eq i8* %94, %93
  br i1 %98, label %99, label %119

99:                                               ; preds = %91
  %100 = load i32, i32* %25, align 8
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %119

103:                                              ; preds = %99
  %104 = load i8*, i8** %4, align 8
  br label %105

105:                                              ; preds = %103, %36
  %106 = phi i8* [ %37, %36 ], [ %104, %103 ]
  %107 = phi i64 [ %38, %36 ], [ %92, %103 ]
  %108 = phi i8 [ %41, %36 ], [ %95, %103 ]
  %109 = phi i8 [ %42, %36 ], [ %96, %103 ]
  %110 = phi i8 [ %43, %36 ], [ %97, %103 ]
  store i8 1, i8* %27, align 4
  store i64 %107, i64* %29, align 8
  %111 = inttoptr i64 %107 to i8*
  %112 = icmp eq i8* %106, %111
  br i1 %112, label %119, label %113

113:                                              ; preds = %105
  %114 = getelementptr inbounds i8, i8* %111, i64 1
  store i8* %114, i8** %26, align 8
  %115 = load i32, i32* %25, align 8
  %116 = and i32 %115, 1
  %117 = icmp eq i32 %116, 0
  %118 = ptrtoint i8* %114 to i64
  br i1 %117, label %36, label %119

119:                                              ; preds = %91, %113, %105, %99
  %120 = phi i1 [ true, %99 ], [ true, %91 ], [ false, %105 ], [ true, %113 ]
  ret i1 %120
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #17
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #17
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #19
  br label %18

18:                                               ; preds = %4, %15
  %19 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #19
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %79, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %21 = select i1 %13, i8* %19, i8* %20
  br label %22

22:                                               ; preds = %8, %75
  %23 = phi %"class.std::__1::__tree_node"* [ %78, %75 ], [ %6, %8 ]
  %24 = phi %"class.std::__1::__tree_node_base"** [ %77, %75 ], [ %9, %8 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1
  %26 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp ult i64 %33, %17
  %35 = select i1 %34, i64 %33, i64 %17
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %41 = select i1 %29, i8* %39, i8* %40
  %42 = tail call i32 @memcmp(i8* %21, i8* %41, i64 %35) #17
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %37, %22
  %45 = icmp ult i64 %17, %33
  br i1 %45, label %48, label %54

46:                                               ; preds = %37
  %47 = icmp slt i32 %42, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %44, %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %75

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

54:                                               ; preds = %44
  br i1 %36, label %64, label %55

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %59 = select i1 %29, i8* %57, i8* %58
  br label %60

60:                                               ; preds = %55, %46
  %61 = phi i8* [ %59, %55 ], [ %41, %46 ]
  %62 = tail call i32 @memcmp(i8* %61, i8* %21, i64 %35) #17
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %60, %54
  br i1 %34, label %67, label %73

65:                                               ; preds = %60
  %66 = icmp slt i32 %62, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %64, %65
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

73:                                               ; preds = %64, %65
  %74 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

75:                                               ; preds = %67, %48
  %76 = phi %"class.std::__1::__tree_node_base"* [ %50, %48 ], [ %69, %67 ]
  %77 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %68, %67 ]
  %78 = bitcast %"class.std::__1::__tree_node_base"* %76 to %"class.std::__1::__tree_node"*
  br label %22

79:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %81

81:                                               ; preds = %79, %73, %71, %52
  %82 = phi %"class.std::__1::__tree_node_base"** [ %49, %52 ], [ %68, %71 ], [ %24, %73 ], [ %80, %79 ]
  ret %"class.std::__1::__tree_node_base"** %82
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !8
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !8
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %84, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %19 = select i1 %11, i8* %17, i8* %18
  br label %20

20:                                               ; preds = %46, %7
  %21 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %54, %46 ]
  %22 = phi %"class.std::__1::__tree_node"* [ %5, %7 ], [ %55, %46 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1
  %24 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %15, %31
  %33 = select i1 %32, i64 %15, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  %39 = select i1 %27, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %39, i8* %19, i64 %33) #17
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %35, %20
  %43 = icmp ult i64 %31, %15
  %44 = zext i1 %32 to i32
  %45 = select i1 %43, i32 -1, i32 %44
  br label %46

46:                                               ; preds = %42, %35
  %47 = phi i32 [ %45, %42 ], [ %40, %35 ]
  %48 = icmp slt i32 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 1
  %50 = bitcast %"class.std::__1::__tree_node_base"** %49 to %"class.std::__1::__tree_node"**
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0
  %52 = bitcast %"class.std::__1::__tree_node"* %22 to %"class.std::__1::__tree_node"**
  %53 = select i1 %48, %"class.std::__1::__tree_node"** %50, %"class.std::__1::__tree_node"** %52
  %54 = select i1 %48, %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"* %51
  %55 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %53, align 8
  %56 = icmp eq %"class.std::__1::__tree_node"* %55, null
  br i1 %56, label %57, label %20

57:                                               ; preds = %46
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %54, %3
  br i1 %58, label %84, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 4
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 5
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %63 to i64
  %69 = select i1 %64, i64 %67, i64 %68
  %70 = icmp ult i64 %69, %15
  %71 = select i1 %70, i64 %69, i64 %15
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %59
  %74 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8*
  %77 = select i1 %64, i8* %75, i8* %76
  %78 = tail call i32 @memcmp(i8* %19, i8* %77, i64 %71) #17
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %73, %59
  %81 = icmp ult i64 %15, %69
  br i1 %81, label %84, label %85

82:                                               ; preds = %73
  %83 = icmp slt i32 %78, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %57, %80, %2, %82
  br label %85

85:                                               ; preds = %80, %82, %84
  %86 = phi %"class.std::__1::__tree_end_node"* [ %3, %84 ], [ %54, %82 ], [ %54, %80 ]
  ret %"class.std::__1::__tree_end_node"* %86
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #14

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #16

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind readnone speculatable }
attributes #15 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nofree nounwind readonly }
attributes #17 = { nounwind }
attributes #18 = { noreturn nounwind }
attributes #19 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!7 = distinct !{!7, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!8 = !{i8 0, i8 2}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!11 = distinct !{!11, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.isvectorized", i32 1}
!14 = distinct !{!14, !15, !13}
!15 = !{!"llvm.loop.unroll.runtime.disable"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNK3net12_GLOBAL__N_121AcceptLanguageBuilder9GetStringEv: argument 0"}
!18 = distinct !{!18, !"_ZNK3net12_GLOBAL__N_121AcceptLanguageBuilder9GetStringEv"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNK4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE5tokenEv: argument 0"}
!21 = distinct !{!21, !"_ZNK4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE5tokenEv"}
!22 = !{!23}
!23 = distinct !{!23, !24}
!24 = distinct !{!24, !"LVerDomain"}
!25 = !{!26}
!26 = distinct !{!26, !24}
!27 = distinct !{!27, !13}
!28 = distinct !{!28, !29}
!29 = !{!"llvm.loop.unroll.disable"}
!30 = distinct !{!30, !13}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISF_EEEEEEDpOT_: argument 0"}
!33 = distinct !{!33, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISF_EEEEEEDpOT_"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISF_EEEEEEDpOT_: argument 0"}
!36 = distinct !{!36, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISF_EEEEEEDpOT_"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISF_EEEEEEDpOT_: argument 0"}
!39 = distinct !{!39, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISF_EEEEEEDpOT_"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISF_EEEEEEDpOT_: argument 0"}
!42 = distinct !{!42, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISF_EEEEEEDpOT_"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISF_EEEEEEDpOT_: argument 0"}
!45 = distinct !{!45, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISF_EEEEEEDpOT_"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISF_EEEEEEDpOT_: argument 0"}
!48 = distinct !{!48, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISF_EEEEEEDpOT_"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISF_EEEEEEDpOT_: argument 0"}
!51 = distinct !{!51, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISF_EEEEEEDpOT_"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISF_EEEEEEDpOT_: argument 0"}
!54 = distinct !{!54, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISF_EEEEEEDpOT_"}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISF_EEEEEEDpOT_: argument 0"}
!57 = distinct !{!57, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISF_EEEEEEDpOT_"}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISF_EEEEEEDpOT_: argument 0"}
!60 = distinct !{!60, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISF_EEEEEEDpOT_"}
!61 = !{i64 0, i64 65}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE21__construct_node_hashIRKS6_JEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS4_ISJ_EEEEEEmOT_DpOT0_: argument 0"}
!64 = distinct !{!64, !"_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE21__construct_node_hashIRKS6_JEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS4_ISJ_EEEEEEmOT_DpOT0_"}
!65 = distinct !{!65, !29}
