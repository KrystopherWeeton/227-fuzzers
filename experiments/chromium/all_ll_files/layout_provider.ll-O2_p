; ModuleID = '../../ui/views/layout/layout_provider.cc'
source_filename = "../../ui/views/layout/layout_provider.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.views::LayoutProvider" = type { i32 (...)**, %"class.views::TypographyProvider" }
%"class.views::TypographyProvider" = type { i32 (...)** }
%"class.gfx::FontList" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.gfx::FontListImpl"* }
%"class.gfx::FontListImpl" = type opaque
%"class.gfx::Size" = type { i32, i32 }

@_ZTVN5views14LayoutProviderE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.views::LayoutProvider"*)* @_ZN5views14LayoutProviderD2Ev to i8*), i8* bitcast (void (%"class.views::LayoutProvider"*)* @_ZN5views14LayoutProviderD0Ev to i8*), i8* bitcast ({ i64, i64 } (%"class.views::LayoutProvider"*, i32)* @_ZNK5views14LayoutProvider15GetInsetsMetricEi to i8*), i8* bitcast (i32 (%"class.views::LayoutProvider"*, i32)* @_ZNK5views14LayoutProvider17GetDistanceMetricEi to i8*), i8* bitcast (%"class.views::TypographyProvider"* (%"class.views::LayoutProvider"*)* @_ZNK5views14LayoutProvider21GetTypographyProviderEv to i8*), i8* bitcast (i32 (%"class.views::LayoutProvider"*, i32)* @_ZNK5views14LayoutProvider21GetSnappedDialogWidthEi to i8*), i8* bitcast (i32 (%"class.views::LayoutProvider"*, i32, %"class.gfx::Size"*)* @_ZNK5views14LayoutProvider21GetCornerRadiusMetricENS_8EmphasisERKN3gfx4SizeE to i8*), i8* bitcast (i32 (%"class.views::LayoutProvider"*, i32)* @_ZNK5views14LayoutProvider24GetShadowElevationMetricENS_8EmphasisE to i8*)] }, align 8
@_ZN5views12_GLOBAL__N_117g_layout_delegateE = internal unnamed_addr global %"class.views::LayoutProvider"* null, align 8
@_ZTVN5views18TypographyProviderE = external unnamed_addr constant { [7 x i8*] }, align 8
@switch.table._ZNK5views14LayoutProvider24GetShadowElevationMetricENS_8EmphasisE = private unnamed_addr constant [5 x i32] [i32 0, i32 1, i32 2, i32 3, i32 16], align 4

@_ZN5views14LayoutProviderC1Ev = hidden unnamed_addr alias void (%"class.views::LayoutProvider"*), void (%"class.views::LayoutProvider"*)* @_ZN5views14LayoutProviderC2Ev
@_ZN5views14LayoutProviderD1Ev = hidden unnamed_addr alias void (%"class.views::LayoutProvider"*), void (%"class.views::LayoutProvider"*)* @_ZN5views14LayoutProviderD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5views14LayoutProviderC2Ev(%"class.views::LayoutProvider"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.views::LayoutProvider"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5views14LayoutProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5views18TypographyProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  store %"class.views::LayoutProvider"* %0, %"class.views::LayoutProvider"** @_ZN5views12_GLOBAL__N_117g_layout_delegateE, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5views14LayoutProviderD2Ev(%"class.views::LayoutProvider"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.views::LayoutProvider", %"class.views::LayoutProvider"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5views14LayoutProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = load %"class.views::LayoutProvider"*, %"class.views::LayoutProvider"** @_ZN5views12_GLOBAL__N_117g_layout_delegateE, align 8
  %4 = icmp eq %"class.views::LayoutProvider"* %3, %0
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  store %"class.views::LayoutProvider"* null, %"class.views::LayoutProvider"** @_ZN5views12_GLOBAL__N_117g_layout_delegateE, align 8
  br label %6

6:                                                ; preds = %5, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views14LayoutProviderD0Ev(%"class.views::LayoutProvider"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.views::LayoutProvider", %"class.views::LayoutProvider"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5views14LayoutProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = load %"class.views::LayoutProvider"*, %"class.views::LayoutProvider"** @_ZN5views12_GLOBAL__N_117g_layout_delegateE, align 8
  %4 = icmp eq %"class.views::LayoutProvider"* %3, %0
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  store %"class.views::LayoutProvider"* null, %"class.views::LayoutProvider"** @_ZN5views12_GLOBAL__N_117g_layout_delegateE, align 8
  br label %6

6:                                                ; preds = %1, %5
  %7 = bitcast %"class.views::LayoutProvider"* %0 to i8*
  tail call void @_ZdlPv(i8* %7) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.views::LayoutProvider"* @_ZN5views14LayoutProvider3GetEv() local_unnamed_addr #4 align 2 {
  %1 = load %"class.views::LayoutProvider"*, %"class.views::LayoutProvider"** @_ZN5views12_GLOBAL__N_117g_layout_delegateE, align 8
  ret %"class.views::LayoutProvider"* %1
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5views14LayoutProvider23GetControlHeightForFontEiiRKN3gfx8FontListE(i32, i32, %"class.gfx::FontList"* dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %4 = tail call i32 @_ZN5views5style13GetLineHeightEii(i32 %0, i32 %1) #10
  %5 = tail call i32 @_ZNK3gfx8FontList9GetHeightEv(%"class.gfx::FontList"* %2) #10
  %6 = icmp slt i32 %4, %5
  %7 = select i1 %6, i32 %5, i32 %4
  %8 = load %"class.views::LayoutProvider"*, %"class.views::LayoutProvider"** @_ZN5views12_GLOBAL__N_117g_layout_delegateE, align 8
  %9 = bitcast %"class.views::LayoutProvider"* %8 to i32 (%"class.views::LayoutProvider"*, i32)***
  %10 = load i32 (%"class.views::LayoutProvider"*, i32)**, i32 (%"class.views::LayoutProvider"*, i32)*** %9, align 8
  %11 = getelementptr inbounds i32 (%"class.views::LayoutProvider"*, i32)*, i32 (%"class.views::LayoutProvider"*, i32)** %10, i64 3
  %12 = load i32 (%"class.views::LayoutProvider"*, i32)*, i32 (%"class.views::LayoutProvider"*, i32)** %11, align 8
  %13 = tail call i32 %12(%"class.views::LayoutProvider"* %8, i32 4100) #10
  %14 = shl i32 %13, 1
  %15 = add nsw i32 %14, %7
  ret i32 %15
}

declare i32 @_ZN5views5style13GetLineHeightEii(i32, i32) local_unnamed_addr #5

declare i32 @_ZNK3gfx8FontList9GetHeightEv(%"class.gfx::FontList"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5views14LayoutProvider15GetInsetsMetricEi(%"class.views::LayoutProvider"*, i32) unnamed_addr #2 align 2 {
  switch i32 %1, label %70 [
    i32 1, label %71
    i32 3, label %71
    i32 2, label %3
    i32 4, label %35
    i32 5, label %66
    i32 0, label %67
    i32 6, label %68
    i32 7, label %69
  ]

3:                                                ; preds = %2
  %4 = bitcast %"class.views::LayoutProvider"* %0 to { i64, i64 } (%"class.views::LayoutProvider"*, i32)***
  %5 = load { i64, i64 } (%"class.views::LayoutProvider"*, i32)**, { i64, i64 } (%"class.views::LayoutProvider"*, i32)*** %4, align 8
  %6 = getelementptr inbounds { i64, i64 } (%"class.views::LayoutProvider"*, i32)*, { i64, i64 } (%"class.views::LayoutProvider"*, i32)** %5, i64 2
  %7 = load { i64, i64 } (%"class.views::LayoutProvider"*, i32)*, { i64, i64 } (%"class.views::LayoutProvider"*, i32)** %6, align 8
  %8 = tail call { i64, i64 } %7(%"class.views::LayoutProvider"* %0, i32 1) #10
  %9 = extractvalue { i64, i64 } %8, 0
  %10 = lshr i64 %9, 32
  %11 = trunc i64 %10 to i32
  %12 = extractvalue { i64, i64 } %8, 1
  %13 = lshr i64 %12, 32
  %14 = trunc i64 %13 to i32
  %15 = and i64 %12, 4294967295
  %16 = icmp sgt i32 %11, 0
  %17 = icmp sgt i32 %14, 0
  %18 = and i1 %16, %17
  %19 = sub nuw nsw i32 2147483647, %11
  %20 = icmp ult i32 %19, %14
  %21 = and i1 %20, %18
  br i1 %21, label %30, label %22

22:                                               ; preds = %3
  %23 = and i64 %13, %10
  %24 = trunc i64 %23 to i32
  %25 = icmp slt i32 %24, 0
  %26 = sub nsw i32 -2147483648, %11
  %27 = icmp sgt i32 %26, %14
  %28 = and i1 %27, %25
  %29 = select i1 %28, i32 %26, i32 %14
  br label %30

30:                                               ; preds = %3, %22
  %31 = phi i32 [ %29, %22 ], [ %19, %3 ]
  %32 = zext i32 %31 to i64
  %33 = shl nuw i64 %32, 32
  %34 = or i64 %33, %15
  br label %71

35:                                               ; preds = %2
  %36 = bitcast %"class.views::LayoutProvider"* %0 to { i64, i64 } (%"class.views::LayoutProvider"*, i32)***
  %37 = load { i64, i64 } (%"class.views::LayoutProvider"*, i32)**, { i64, i64 } (%"class.views::LayoutProvider"*, i32)*** %36, align 8
  %38 = getelementptr inbounds { i64, i64 } (%"class.views::LayoutProvider"*, i32)*, { i64, i64 } (%"class.views::LayoutProvider"*, i32)** %37, i64 2
  %39 = load { i64, i64 } (%"class.views::LayoutProvider"*, i32)*, { i64, i64 } (%"class.views::LayoutProvider"*, i32)** %38, align 8
  %40 = tail call { i64, i64 } %39(%"class.views::LayoutProvider"* %0, i32 1) #10
  %41 = extractvalue { i64, i64 } %40, 0
  %42 = lshr i64 %41, 32
  %43 = trunc i64 %42 to i32
  %44 = extractvalue { i64, i64 } %40, 1
  %45 = lshr i64 %44, 32
  %46 = trunc i64 %45 to i32
  %47 = icmp sgt i32 %43, 0
  %48 = icmp sgt i32 %46, 0
  %49 = and i1 %47, %48
  %50 = sub nuw nsw i32 2147483647, %43
  %51 = icmp ult i32 %50, %46
  %52 = and i1 %51, %49
  br i1 %52, label %61, label %53

53:                                               ; preds = %35
  %54 = and i64 %45, %42
  %55 = trunc i64 %54 to i32
  %56 = icmp slt i32 %55, 0
  %57 = sub nsw i32 -2147483648, %43
  %58 = icmp sgt i32 %57, %46
  %59 = and i1 %58, %56
  %60 = select i1 %59, i32 %57, i32 %46
  br label %61

61:                                               ; preds = %35, %53
  %62 = phi i32 [ %60, %53 ], [ %50, %35 ]
  %63 = zext i32 %62 to i64
  %64 = shl nuw i64 %63, 32
  %65 = and i64 %41, 4294967295
  br label %71

66:                                               ; preds = %2
  br label %71

67:                                               ; preds = %2
  br label %71

68:                                               ; preds = %2
  br label %71

69:                                               ; preds = %2
  br label %71

70:                                               ; preds = %2
  br label %71

71:                                               ; preds = %2, %2, %70, %69, %68, %67, %66, %61, %30
  %72 = phi i64 [ 0, %70 ], [ 25769803781, %69 ], [ 17179869188, %68 ], [ 25769803781, %67 ], [ 34359738376, %66 ], [ %64, %61 ], [ %34, %30 ], [ 55834574861, %2 ], [ 55834574861, %2 ]
  %73 = phi i64 [ 0, %70 ], [ 6, %69 ], [ 4, %68 ], [ 6, %67 ], [ 8, %66 ], [ %42, %61 ], [ %10, %30 ], [ 13, %2 ], [ 13, %2 ]
  %74 = phi i64 [ 0, %70 ], [ 5, %69 ], [ 4, %68 ], [ 5, %67 ], [ 8, %66 ], [ %65, %61 ], [ 0, %30 ], [ 13, %2 ], [ 13, %2 ]
  %75 = shl nuw i64 %73, 32
  %76 = or i64 %75, %74
  %77 = insertvalue { i64, i64 } undef, i64 %76, 0
  %78 = insertvalue { i64, i64 } %77, i64 %72, 1
  ret { i64, i64 } %78
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5views14LayoutProvider17GetDistanceMetricEi(%"class.views::LayoutProvider"*, i32) unnamed_addr #2 align 2 {
  switch i32 %1, label %41 [
    i32 4096, label %42
    i32 4097, label %3
    i32 4098, label %4
    i32 4099, label %5
    i32 4100, label %6
    i32 4101, label %7
    i32 4102, label %15
    i32 4103, label %16
    i32 4104, label %23
    i32 4105, label %24
    i32 4106, label %31
    i32 4107, label %32
    i32 4108, label %33
    i32 4109, label %34
    i32 4110, label %35
    i32 4111, label %36
    i32 4112, label %37
    i32 4113, label %38
    i32 4114, label %39
    i32 4115, label %40
    i32 8192, label %40
  ]

3:                                                ; preds = %2
  br label %42

4:                                                ; preds = %2
  br label %42

5:                                                ; preds = %2
  br label %42

6:                                                ; preds = %2
  br label %42

7:                                                ; preds = %2
  %8 = bitcast %"class.views::LayoutProvider"* %0 to i32 (%"class.views::LayoutProvider"*, i32)***
  %9 = load i32 (%"class.views::LayoutProvider"*, i32)**, i32 (%"class.views::LayoutProvider"*, i32)*** %8, align 8
  %10 = getelementptr inbounds i32 (%"class.views::LayoutProvider"*, i32)*, i32 (%"class.views::LayoutProvider"*, i32)** %9, i64 3
  %11 = load i32 (%"class.views::LayoutProvider"*, i32)*, i32 (%"class.views::LayoutProvider"*, i32)** %10, align 8
  %12 = tail call i32 %11(%"class.views::LayoutProvider"* %0, i32 4097) #10
  %13 = shl i32 %12, 1
  %14 = add nsw i32 %13, 32
  br label %42

15:                                               ; preds = %2
  br label %42

16:                                               ; preds = %2
  %17 = bitcast %"class.views::LayoutProvider"* %0 to i32 (%"class.views::LayoutProvider"*, i32)***
  %18 = load i32 (%"class.views::LayoutProvider"*, i32)**, i32 (%"class.views::LayoutProvider"*, i32)*** %17, align 8
  %19 = getelementptr inbounds i32 (%"class.views::LayoutProvider"*, i32)*, i32 (%"class.views::LayoutProvider"*, i32)** %18, i64 3
  %20 = load i32 (%"class.views::LayoutProvider"*, i32)*, i32 (%"class.views::LayoutProvider"*, i32)** %19, align 8
  %21 = tail call i32 %20(%"class.views::LayoutProvider"* %0, i32 4102) #10
  %22 = add nsw i32 %21, -8
  br label %42

23:                                               ; preds = %2
  br label %42

24:                                               ; preds = %2
  %25 = bitcast %"class.views::LayoutProvider"* %0 to i32 (%"class.views::LayoutProvider"*, i32)***
  %26 = load i32 (%"class.views::LayoutProvider"*, i32)**, i32 (%"class.views::LayoutProvider"*, i32)*** %25, align 8
  %27 = getelementptr inbounds i32 (%"class.views::LayoutProvider"*, i32)*, i32 (%"class.views::LayoutProvider"*, i32)** %26, i64 3
  %28 = load i32 (%"class.views::LayoutProvider"*, i32)*, i32 (%"class.views::LayoutProvider"*, i32)** %27, align 8
  %29 = tail call i32 %28(%"class.views::LayoutProvider"* %0, i32 4104) #10
  %30 = add nsw i32 %29, -8
  br label %42

31:                                               ; preds = %2
  br label %42

32:                                               ; preds = %2
  br label %42

33:                                               ; preds = %2
  br label %42

34:                                               ; preds = %2
  br label %42

35:                                               ; preds = %2
  br label %42

36:                                               ; preds = %2
  br label %42

37:                                               ; preds = %2
  br label %42

38:                                               ; preds = %2
  br label %42

39:                                               ; preds = %2
  br label %42

40:                                               ; preds = %2, %2
  br label %42

41:                                               ; preds = %2
  br label %42

42:                                               ; preds = %2, %41, %40, %39, %38, %37, %36, %35, %34, %33, %32, %31, %24, %23, %16, %15, %7, %6, %5, %4, %3
  %43 = phi i32 [ 0, %41 ], [ 0, %40 ], [ 16, %39 ], [ 8, %38 ], [ 12, %37 ], [ 192, %36 ], [ 12, %35 ], [ 8, %34 ], [ 16, %33 ], [ 8, %32 ], [ 448, %31 ], [ %30, %24 ], [ 16, %23 ], [ %22, %16 ], [ 24, %15 ], [ %14, %7 ], [ 6, %6 ], [ 4, %5 ], [ 112, %4 ], [ 16, %3 ], [ 320, %2 ]
  ret i32 %43
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.views::TypographyProvider"* @_ZNK5views14LayoutProvider21GetTypographyProviderEv(%"class.views::LayoutProvider"* readnone) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.views::LayoutProvider", %"class.views::LayoutProvider"* %0, i64 0, i32 1
  ret %"class.views::TypographyProvider"* %2
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden i32 @_ZNK5views14LayoutProvider21GetSnappedDialogWidthEi(%"class.views::LayoutProvider"* nocapture readnone, i32) unnamed_addr #7 align 2 {
  %3 = icmp sgt i32 %1, 320
  %4 = select i1 %3, i32 %1, i32 320
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5views14LayoutProvider29GetDialogInsetsForContentTypeENS_17DialogContentTypeES1_(%"class.views::LayoutProvider"*, i32, i32) local_unnamed_addr #2 align 2 {
  %4 = icmp eq i32 %1, 0
  %5 = bitcast %"class.views::LayoutProvider"* %0 to i32 (%"class.views::LayoutProvider"*, i32)***
  %6 = load i32 (%"class.views::LayoutProvider"*, i32)**, i32 (%"class.views::LayoutProvider"*, i32)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.views::LayoutProvider"*, i32)*, i32 (%"class.views::LayoutProvider"*, i32)** %6, i64 3
  %8 = load i32 (%"class.views::LayoutProvider"*, i32)*, i32 (%"class.views::LayoutProvider"*, i32)** %7, align 8
  %9 = select i1 %4, i32 4104, i32 4105
  %10 = tail call i32 %8(%"class.views::LayoutProvider"* %0, i32 %9) #10
  %11 = icmp eq i32 %2, 0
  %12 = load i32 (%"class.views::LayoutProvider"*, i32)**, i32 (%"class.views::LayoutProvider"*, i32)*** %5, align 8
  %13 = getelementptr inbounds i32 (%"class.views::LayoutProvider"*, i32)*, i32 (%"class.views::LayoutProvider"*, i32)** %12, i64 3
  %14 = load i32 (%"class.views::LayoutProvider"*, i32)*, i32 (%"class.views::LayoutProvider"*, i32)** %13, align 8
  %15 = select i1 %11, i32 4102, i32 4103
  %16 = tail call i32 %14(%"class.views::LayoutProvider"* %0, i32 %15) #10
  %17 = bitcast %"class.views::LayoutProvider"* %0 to { i64, i64 } (%"class.views::LayoutProvider"*, i32)***
  %18 = load { i64, i64 } (%"class.views::LayoutProvider"*, i32)**, { i64, i64 } (%"class.views::LayoutProvider"*, i32)*** %17, align 8
  %19 = getelementptr inbounds { i64, i64 } (%"class.views::LayoutProvider"*, i32)*, { i64, i64 } (%"class.views::LayoutProvider"*, i32)** %18, i64 2
  %20 = load { i64, i64 } (%"class.views::LayoutProvider"*, i32)*, { i64, i64 } (%"class.views::LayoutProvider"*, i32)** %19, align 8
  %21 = tail call { i64, i64 } %20(%"class.views::LayoutProvider"* %0, i32 1) #10
  %22 = extractvalue { i64, i64 } %21, 0
  %23 = lshr i64 %22, 32
  %24 = trunc i64 %23 to i32
  %25 = extractvalue { i64, i64 } %21, 1
  %26 = lshr i64 %25, 32
  %27 = trunc i64 %26 to i32
  %28 = icmp sgt i32 %10, 0
  %29 = icmp sgt i32 %16, 0
  %30 = and i1 %28, %29
  %31 = sub nuw nsw i32 2147483647, %10
  %32 = icmp ult i32 %31, %16
  %33 = and i1 %32, %30
  br i1 %33, label %41, label %34

34:                                               ; preds = %3
  %35 = and i32 %16, %10
  %36 = icmp slt i32 %35, 0
  %37 = sub nsw i32 -2147483648, %10
  %38 = icmp sgt i32 %37, %16
  %39 = and i1 %38, %36
  %40 = select i1 %39, i32 %37, i32 %16
  br label %41

41:                                               ; preds = %34, %3
  %42 = phi i32 [ %40, %34 ], [ %31, %3 ]
  %43 = icmp sgt i32 %24, 0
  %44 = icmp sgt i32 %27, 0
  %45 = and i1 %43, %44
  %46 = sub nuw nsw i32 2147483647, %24
  %47 = icmp ult i32 %46, %27
  %48 = and i1 %47, %45
  br i1 %48, label %57, label %49

49:                                               ; preds = %41
  %50 = and i64 %26, %23
  %51 = trunc i64 %50 to i32
  %52 = icmp slt i32 %51, 0
  %53 = sub nsw i32 -2147483648, %24
  %54 = icmp sgt i32 %53, %27
  %55 = and i1 %54, %52
  %56 = select i1 %55, i32 %53, i32 %27
  br label %57

57:                                               ; preds = %41, %49
  %58 = phi i32 [ %56, %49 ], [ %46, %41 ]
  %59 = and i64 %22, -4294967296
  %60 = zext i32 %10 to i64
  %61 = or i64 %59, %60
  %62 = insertvalue { i64, i64 } undef, i64 %61, 0
  %63 = zext i32 %58 to i64
  %64 = shl nuw i64 %63, 32
  %65 = zext i32 %42 to i64
  %66 = or i64 %64, %65
  %67 = insertvalue { i64, i64 } %62, i64 %66, 1
  ret { i64, i64 } %67
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK5views14LayoutProvider21GetCornerRadiusMetricENS_8EmphasisERKN3gfx4SizeE(%"class.views::LayoutProvider"* nocapture readnone, i32, %"class.gfx::Size"* nocapture readonly dereferenceable(8)) unnamed_addr #8 align 2 {
  switch i32 %1, label %14 [
    i32 0, label %15
    i32 1, label %4
    i32 2, label %4
    i32 3, label %5
    i32 4, label %6
  ]

4:                                                ; preds = %3, %3
  br label %15

5:                                                ; preds = %3
  br label %15

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %2, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %2, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp slt i32 %10, %8
  %12 = select i1 %11, i32 %10, i32 %8
  %13 = sdiv i32 %12, 2
  br label %15

14:                                               ; preds = %3
  unreachable

15:                                               ; preds = %3, %6, %5, %4
  %16 = phi i32 [ %13, %6 ], [ 8, %5 ], [ 4, %4 ], [ %1, %3 ]
  ret i32 %16
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5views14LayoutProvider24GetShadowElevationMetricENS_8EmphasisE(%"class.views::LayoutProvider"* nocapture readnone, i32) unnamed_addr #6 align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds [5 x i32], [5 x i32]* @switch.table._ZNK5views14LayoutProvider24GetShadowElevationMetricENS_8EmphasisE, i64 0, i64 %3
  %5 = load i32, i32* %4, align 4
  ret i32 %5
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
