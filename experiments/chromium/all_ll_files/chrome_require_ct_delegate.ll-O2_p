; ModuleID = '../../components/certificate_transparency/chrome_require_ct_delegate.cc'
source_filename = "../../components/certificate_transparency/chrome_require_ct_delegate.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.certificate_transparency::ChromeRequireCTDelegate" = type { %"class.net::TransportSecurityState::RequireCTDelegate", %"class.std::__1::unique_ptr", i32, %"class.std::__1::map.65", %"class.std::__1::vector.74", %"class.std::__1::vector.74" }
%"class.net::TransportSecurityState::RequireCTDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.url_matcher::URLMatcher"* }
%"class.url_matcher::URLMatcher" = type { %"class.url_matcher::URLMatcherConditionFactory", %"class.std::__1::map.6", %"class.std::__1::map.15", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.url_matcher::RegexSetMatcher", %"class.url_matcher::RegexSetMatcher" }
%"class.url_matcher::URLMatcherConditionFactory" = type { i32, %"class.std::__1::map", %"class.std::__1::map", %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.0", %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { i64 }
%"class.std::__1::map.6" = type { %"class.std::__1::__tree.7" }
%"class.std::__1::__tree.7" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.8", %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::map.15" = type { %"class.std::__1::__tree.16" }
%"class.std::__1::__tree.16" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.17", %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.url_matcher::SubstringSetMatcher"* }
%"class.url_matcher::SubstringSetMatcher" = type <{ %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*, %"class.std::__1::__compressed_pair.34" }
%"class.url_matcher::SubstringSetMatcher::AhoCorasickNode" = type <{ %"class.base::flat_map", i32, i32, i32, [4 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.27" }
%"class.std::__1::vector.27" = type { %"class.std::__1::__vector_base.28" }
%"class.std::__1::__vector_base.28" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.29" }
%"struct.std::__1::pair" = type { i8, i32 }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.std::__1::pair"* }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* }
%"class.url_matcher::RegexSetMatcher" = type { i32 (...)**, %"class.std::__1::map.40", %"class.std::__1::vector.49", %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.24" }
%"class.std::__1::map.40" = type { %"class.std::__1::__tree.41" }
%"class.std::__1::__tree.41" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::vector.49" = type { %"class.std::__1::__vector_base.50" }
%"class.std::__1::__vector_base.50" = type { i32*, i32*, %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { i32* }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.re2::FilteredRE2"* }
%"class.re2::FilteredRE2" = type opaque
%"class.std::__1::map.65" = type { %"class.std::__1::__tree.66" }
%"class.std::__1::__tree.66" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.67", %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::vector.74" = type { %"class.std::__1::__vector_base.75" }
%"class.std::__1::__vector_base.75" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.76" }
%"class.net::HashValue" = type { i32, %union.anon }
%union.anon = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.net::HashValue"* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.167" }
%"struct.std::__1::pair.167" = type { i32, %"struct.certificate_transparency::ChromeRequireCTDelegate::Filter" }
%"struct.certificate_transparency::ChromeRequireCTDelegate::Filter" = type { i8, i8, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.83 }
%union.anon.83 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.95", %"class.std::__1::vector.99" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.88", %"class.std::__1::vector.88", %"class.std::__1::vector.88", %"class.std::__1::vector.88" }
%"class.std::__1::vector.88" = type { %"class.std::__1::__vector_base.89" }
%"class.std::__1::__vector_base.89" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.std::__1::basic_string"* }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.99" = type { %"class.std::__1::__vector_base.100" }
%"class.std::__1::__vector_base.100" = type { %"class.std::__1::unique_ptr.95"*, %"class.std::__1::unique_ptr.95"*, %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.std::__1::unique_ptr.95"* }
%"class.std::__1::set.152" = type { %"class.std::__1::__tree.153" }
%"class.std::__1::__tree.153" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.154", %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.160" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %class.GURL* }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__tree_node.280" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"class.net::der::Input" = type { i8*, i64 }
%"struct.net::ParseCertificateOptions" = type { i8 }
%"class.std::__1::vector.253" = type { %"class.std::__1::__vector_base.254" }
%"class.std::__1::__vector_base.254" = type { %"class.std::__1::vector.255"*, %"class.std::__1::vector.255"*, %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::vector.255" = type { %"class.std::__1::__vector_base.256" }
%"class.std::__1::__vector_base.256" = type { %"struct.net::X509NameAttribute"*, %"struct.net::X509NameAttribute"*, %"class.std::__1::__compressed_pair.257" }
%"struct.net::X509NameAttribute" = type { %"class.net::der::Input", i32, %"class.net::der::Input" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"struct.net::X509NameAttribute"* }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.std::__1::vector.255"* }
%"class.std::__1::vector.168" = type { %"class.std::__1::__vector_base.169" }
%"class.std::__1::__vector_base.169" = type { %struct.crypto_buffer_st**, %struct.crypto_buffer_st**, %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %struct.crypto_buffer_st** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.net::ParsedCertificate" = type { %"class.base::RefCountedThreadSafe.177", %"class.std::__1::unique_ptr.95", %"class.net::der::Input", %"class.net::der::Input", %"class.net::der::Input", %"class.net::der::BitString", %"struct.net::ParsedTbsCertificate", %"class.std::__1::unique_ptr.178", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"struct.net::ParsedBasicConstraints", i8, [3 x i8], %"class.net::der::BitString", i8, %"class.std::__1::vector.184", %"struct.net::ParsedExtension", %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.219", i8, [7 x i8], %"struct.net::ParsedExtension", %"class.std::__1::vector.194", %"class.std::__1::vector.194", i8, %"class.std::__1::vector.184", i8, %"struct.net::ParsedPolicyConstraints", i8, %"class.std::__1::vector.225", i8, i8, %"class.absl::optional", %"class.absl::optional.233", %"class.std::__1::map.242" }
%"class.base::RefCountedThreadSafe.177" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ParsedTbsCertificate" = type { i32, %"class.net::der::Input", %"class.net::der::Input", %"class.net::der::Input", %"struct.net::der::GeneralizedTime", %"struct.net::der::GeneralizedTime", %"class.net::der::Input", %"class.net::der::Input", i8, [7 x i8], %"class.net::der::BitString", i8, [7 x i8], %"class.net::der::BitString", i8, %"class.net::der::Input" }
%"struct.net::der::GeneralizedTime" = type { i16, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.net::SignatureAlgorithm"* }
%"class.net::SignatureAlgorithm" = type opaque
%"struct.net::ParsedBasicConstraints" = type { i8, i8, i8 }
%"class.net::der::BitString" = type <{ %"class.net::der::Input", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"struct.net::GeneralNames"* }
%"struct.net::GeneralNames" = type <{ %"class.std::__1::vector.184", %"class.std::__1::vector.194", %"class.std::__1::vector.194", %"class.std::__1::vector.184", %"class.std::__1::vector.184", %"class.std::__1::vector.184", %"class.std::__1::vector.194", %"class.std::__1::vector.201", %"class.std::__1::vector.208", %"class.std::__1::vector.184", i32, [4 x i8] }>
%"class.std::__1::vector.201" = type { %"class.std::__1::__vector_base.202" }
%"class.std::__1::__vector_base.202" = type { %"class.net::IPAddress"*, %"class.net::IPAddress"*, %"class.std::__1::__compressed_pair.203" }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.net::IPAddress"* }
%"class.std::__1::vector.208" = type { %"class.std::__1::__vector_base.209" }
%"class.std::__1::__vector_base.209" = type { %"struct.std::__1::pair.210"*, %"struct.std::__1::pair.210"*, %"class.std::__1::__compressed_pair.211" }
%"struct.std::__1::pair.210" = type opaque
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"struct.std::__1::pair.210"* }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.net::NameConstraints"* }
%"class.net::NameConstraints" = type { %"struct.net::GeneralNames", %"struct.net::GeneralNames", i32, [4 x i8] }
%"struct.net::ParsedExtension" = type <{ %"class.net::der::Input", %"class.net::der::Input", i8, [7 x i8] }>
%"class.std::__1::vector.194" = type { %"class.std::__1::__vector_base.195" }
%"class.std::__1::__vector_base.195" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.196" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.base::BasicStringPiece"* }
%"class.std::__1::vector.184" = type { %"class.std::__1::__vector_base.185" }
%"class.std::__1::__vector_base.185" = type { %"class.net::der::Input"*, %"class.net::der::Input"*, %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.net::der::Input"* }
%"struct.net::ParsedPolicyConstraints" = type { i8, i8, i8, i8 }
%"class.std::__1::vector.225" = type { %"class.std::__1::__vector_base.226" }
%"class.std::__1::__vector_base.226" = type { %"struct.net::ParsedPolicyMapping"*, %"struct.net::ParsedPolicyMapping"*, %"class.std::__1::__compressed_pair.227" }
%"struct.net::ParsedPolicyMapping" = type { %"class.net::der::Input", %"class.net::der::Input" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"struct.net::ParsedPolicyMapping"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.232 }
%union.anon.232 = type { %"struct.net::ParsedAuthorityKeyIdentifier" }
%"struct.net::ParsedAuthorityKeyIdentifier" = type { %"class.absl::optional.233", %"class.absl::optional.233", %"class.absl::optional.233" }
%"class.absl::optional.233" = type { %"class.absl::optional_internal::optional_data.234" }
%"class.absl::optional_internal::optional_data.234" = type { %"class.absl::optional_internal::optional_data_base.235" }
%"class.absl::optional_internal::optional_data_base.235" = type { %"class.absl::optional_internal::optional_data_dtor_base.236" }
%"class.absl::optional_internal::optional_data_dtor_base.236" = type { i8, %union.anon.237 }
%union.anon.237 = type { %"class.net::der::Input" }
%"class.std::__1::map.242" = type { %"class.std::__1::__tree.243" }
%"class.std::__1::__tree.243" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.244", %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.net::CertErrors" = type opaque
%"class.std::__1::vector.106" = type { %"class.std::__1::__vector_base.107" }
%"class.std::__1::__vector_base.107" = type { %class.scoped_refptr*, %class.scoped_refptr*, %"class.std::__1::__compressed_pair.147" }
%class.scoped_refptr = type { %"class.url_matcher::URLMatcherConditionSet"* }
%"class.url_matcher::URLMatcherConditionSet" = type { %"class.base::RefCounted", i32, %"class.std::__1::set", %"class.std::__1::set.117", %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.133" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::set" = type { %"class.std::__1::__tree.108" }
%"class.std::__1::__tree.108" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.109", %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::set.117" = type { %"class.std::__1::__tree.118" }
%"class.std::__1::__tree.118" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.119", %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.url_matcher::URLMatcherSchemeFilter"* }
%"class.url_matcher::URLMatcherSchemeFilter" = type { %"class.std::__1::vector.88" }
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.url_matcher::URLMatcherPortFilter"* }
%"class.url_matcher::URLMatcherPortFilter" = type { %"class.std::__1::vector.136" }
%"class.std::__1::vector.136" = type { %"class.std::__1::__vector_base.137" }
%"class.std::__1::__vector_base.137" = type { %"struct.std::__1::pair.138"*, %"struct.std::__1::pair.138"*, %"class.std::__1::__compressed_pair.139" }
%"struct.std::__1::pair.138" = type opaque
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"struct.std::__1::pair.138"* }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %class.scoped_refptr* }
%"class.url::RawCanonOutputT" = type { %"class.url::CanonOutputT", [1024 x i8] }
%"class.url::CanonOutputT" = type { i32 (...)**, i8*, i32, i32 }
%"struct.url::CanonHostInfo" = type { i32, i32, %"struct.url::Component", [16 x i8] }
%"class.url_matcher::URLMatcherCondition" = type { i32, %"class.url_matcher::StringPattern"* }
%"class.url_matcher::StringPattern" = type <{ %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.std::__1::__tree_node.287" = type { %"class.std::__1::__tree_node_base.base", %"class.url_matcher::URLMatcherCondition" }
%"struct.std::__1::__less.281" = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN3url15RawCanonOutputTIcLi1024EED2Ev = comdat any

$_ZNSt3__16__treeINS_12__value_typeIiN24certificate_transparency23ChromeRequireCTDelegate6FilterEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE = comdat any

$_ZN3url15RawCanonOutputTIcLi1024EED0Ev = comdat any

$_ZN3url15RawCanonOutputTIcLi1024EE6ResizeEi = comdat any

$_ZNSt3__16__treeIN11url_matcher19URLMatcherConditionENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE = comdat any

$_ZNSt3__16__treeIN11url_matcher19URLMatcherConditionENS_4lessIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JS2_EEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorI13scoped_refptrIN11url_matcher22URLMatcherConditionSetEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_ = comdat any

$_ZNSt3__16__sortIRNS_6__lessIN3net9HashValueES3_EEPS3_EEvT0_S7_T_ = comdat any

$_ZNSt3__17__sort3IRNS_6__lessIN3net9HashValueES3_EEPS3_EEjT0_S7_S7_T_ = comdat any

$_ZNSt3__17__sort5IRNS_6__lessIN3net9HashValueES3_EEPS3_EEjT0_S7_S7_S7_S7_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN3net9HashValueES3_EEPS3_EEbT0_S7_T_ = comdat any

$_ZTVN3url15RawCanonOutputTIcLi1024EEE = comdat any

@_ZTVN24certificate_transparency23ChromeRequireCTDelegateE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (i32 (%"class.certificate_transparency::ChromeRequireCTDelegate"*, %"class.std::__1::basic_string"*, %"class.net::X509Certificate"*, %"class.std::__1::vector.74"*)* @_ZN24certificate_transparency23ChromeRequireCTDelegate19IsCTRequiredForHostERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKN3net15X509CertificateERKNS1_6vectorINSA_9HashValueENS5_ISF_EEEE to i8*), i8* bitcast (void (%"class.certificate_transparency::ChromeRequireCTDelegate"*)* @_ZN24certificate_transparency23ChromeRequireCTDelegateD2Ev to i8*), i8* bitcast (void (%"class.certificate_transparency::ChromeRequireCTDelegate"*)* @_ZN24certificate_transparency23ChromeRequireCTDelegateD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [9 x i8] c"https://\00", align 1
@.str.1 = private unnamed_addr constant [72 x i8] c"../../components/certificate_transparency/chrome_require_ct_delegate.cc\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c"active_filter\00", align 1
@__const._ZN24certificate_transparency23ChromeRequireCTDelegate10AddFiltersEbRKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEPNS2_I13scoped_refptrIN11url_matcher22URLMatcherConditionSetEENS6_ISG_EEEE.filter = private unnamed_addr constant { i8, i8, [6 x i8], i64 } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", i64 -6148914691236517206 }, align 8
@.str.3 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.9 = private unnamed_addr constant [28 x i8] c"Non-legacy SPKI configured \00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZTVN3url15RawCanonOutputTIcLi1024EEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.url::RawCanonOutputT"*)* @_ZN3url15RawCanonOutputTIcLi1024EED2Ev to i8*), i8* bitcast (void (%"class.url::RawCanonOutputT"*)* @_ZN3url15RawCanonOutputTIcLi1024EED0Ev to i8*), i8* bitcast (void (%"class.url::RawCanonOutputT"*, i32)* @_ZN3url15RawCanonOutputTIcLi1024EE6ResizeEi to i8*)] }, comdat, align 8

@_ZN24certificate_transparency23ChromeRequireCTDelegateC1Ev = hidden unnamed_addr alias void (%"class.certificate_transparency::ChromeRequireCTDelegate"*), void (%"class.certificate_transparency::ChromeRequireCTDelegate"*)* @_ZN24certificate_transparency23ChromeRequireCTDelegateC2Ev
@_ZN24certificate_transparency23ChromeRequireCTDelegateD1Ev = hidden unnamed_addr alias void (%"class.certificate_transparency::ChromeRequireCTDelegate"*), void (%"class.certificate_transparency::ChromeRequireCTDelegate"*)* @_ZN24certificate_transparency23ChromeRequireCTDelegateD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24certificate_transparency23ChromeRequireCTDelegateC2Ev(%"class.certificate_transparency::ChromeRequireCTDelegate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN24certificate_transparency23ChromeRequireCTDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = tail call i8* @_Znwm(i64 288) #11
  %4 = bitcast i8* %3 to %"class.url_matcher::URLMatcher"*
  tail call void @_ZN11url_matcher10URLMatcherC1Ev(%"class.url_matcher::URLMatcher"* nonnull %4) #12
  %5 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = bitcast %"class.url_matcher::URLMatcher"** %5 to i8**
  store i8* %3, i8** %6, align 8
  %7 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 2
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %10 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 3, i32 0, i32 0
  %11 = bitcast %"class.std::__1::__tree_node_base"** %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %9, %"class.std::__1::__tree_end_node"** %10, align 8
  %12 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 4
  %13 = bitcast %"class.std::__1::vector.74"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24certificate_transparency23ChromeRequireCTDelegateD2Ev(%"class.certificate_transparency::ChromeRequireCTDelegate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN24certificate_transparency23ChromeRequireCTDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 5, i32 0, i32 0
  %4 = load %"class.net::HashValue"*, %"class.net::HashValue"** %3, align 8
  %5 = icmp eq %"class.net::HashValue"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.net::HashValue"* %4 to i64
  %8 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 5, i32 0, i32 1
  %9 = bitcast %"class.net::HashValue"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.net::HashValue"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 4, i32 0, i32 0
  %13 = load %"class.net::HashValue"*, %"class.net::HashValue"** %12, align 8
  %14 = icmp eq %"class.net::HashValue"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %"class.net::HashValue"* %13 to i64
  %17 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 4, i32 0, i32 1
  %18 = bitcast %"class.net::HashValue"** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"class.net::HashValue"* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #11
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 3, i32 0
  %22 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %23 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.std::__1::__tree_node"**
  %24 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %23, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiN24certificate_transparency23ChromeRequireCTDelegate6FilterEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.66"* %21, %"class.std::__1::__tree_node"* %24) #12
  %25 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %26 = load %"class.url_matcher::URLMatcher"*, %"class.url_matcher::URLMatcher"** %25, align 8
  store %"class.url_matcher::URLMatcher"* null, %"class.url_matcher::URLMatcher"** %25, align 8
  %27 = icmp eq %"class.url_matcher::URLMatcher"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %20
  tail call void @_ZN11url_matcher10URLMatcherD1Ev(%"class.url_matcher::URLMatcher"* nonnull %26) #12
  %29 = bitcast %"class.url_matcher::URLMatcher"* %26 to i8*
  tail call void @_ZdlPv(i8* %29) #11
  br label %30

30:                                               ; preds = %20, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24certificate_transparency23ChromeRequireCTDelegateD0Ev(%"class.certificate_transparency::ChromeRequireCTDelegate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN24certificate_transparency23ChromeRequireCTDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 5, i32 0, i32 0
  %4 = load %"class.net::HashValue"*, %"class.net::HashValue"** %3, align 8
  %5 = icmp eq %"class.net::HashValue"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.net::HashValue"* %4 to i64
  %8 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 5, i32 0, i32 1
  %9 = bitcast %"class.net::HashValue"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.net::HashValue"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 4, i32 0, i32 0
  %13 = load %"class.net::HashValue"*, %"class.net::HashValue"** %12, align 8
  %14 = icmp eq %"class.net::HashValue"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %"class.net::HashValue"* %13 to i64
  %17 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 4, i32 0, i32 1
  %18 = bitcast %"class.net::HashValue"** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"class.net::HashValue"* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #11
  br label %20

20:                                               ; preds = %15, %11
  %21 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 3, i32 0
  %22 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %23 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.std::__1::__tree_node"**
  %24 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %23, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiN24certificate_transparency23ChromeRequireCTDelegate6FilterEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.66"* %21, %"class.std::__1::__tree_node"* %24) #12
  %25 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %26 = load %"class.url_matcher::URLMatcher"*, %"class.url_matcher::URLMatcher"** %25, align 8
  store %"class.url_matcher::URLMatcher"* null, %"class.url_matcher::URLMatcher"** %25, align 8
  %27 = icmp eq %"class.url_matcher::URLMatcher"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %20
  tail call void @_ZN11url_matcher10URLMatcherD1Ev(%"class.url_matcher::URLMatcher"* nonnull %26) #12
  %29 = bitcast %"class.url_matcher::URLMatcher"* %26 to i8*
  tail call void @_ZdlPv(i8* %29) #11
  br label %30

30:                                               ; preds = %20, %28
  %31 = bitcast %"class.certificate_transparency::ChromeRequireCTDelegate"* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN24certificate_transparency23ChromeRequireCTDelegate19IsCTRequiredForHostERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKN3net15X509CertificateERKNS1_6vectorINSA_9HashValueENS5_ISF_EEEE(%"class.certificate_transparency::ChromeRequireCTDelegate"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.net::X509Certificate"* nocapture readonly, %"class.std::__1::vector.74"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #12
  store i8 0, i8* %5, align 1
  %6 = call zeroext i1 @_ZNK24certificate_transparency23ChromeRequireCTDelegate13MatchHostnameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPb(%"class.certificate_transparency::ChromeRequireCTDelegate"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1, i8* nonnull %5)
  br i1 %6, label %9, label %7

7:                                                ; preds = %4
  %8 = call zeroext i1 @_ZNK24certificate_transparency23ChromeRequireCTDelegate9MatchSPKIEPKN3net15X509CertificateERKNSt3__16vectorINS1_9HashValueENS5_9allocatorIS7_EEEEPb(%"class.certificate_transparency::ChromeRequireCTDelegate"* %0, %"class.net::X509Certificate"* %2, %"class.std::__1::vector.74"* dereferenceable(24) %3, i8* nonnull %5)
  br i1 %8, label %9, label %13

9:                                                ; preds = %7, %4
  %10 = load i8, i8* %5, align 1, !range !2
  %11 = xor i8 %10, 1
  %12 = zext i8 %11 to i32
  br label %23

13:                                               ; preds = %7
  %14 = tail call i64 @_ZN4base4Time9UnixEpochEv() #12
  %15 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %14, i64 1525132800000000) #12
  %16 = extractvalue { i64, i1 } %15, 1
  %17 = extractvalue { i64, i1 } %15, 0
  %18 = select i1 %16, i64 9223372036854775807, i64 %17, !prof !3
  %19 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %2, i64 0, i32 3, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp slt i64 %20, %18
  %22 = select i1 %21, i32 2, i32 0
  br label %23

23:                                               ; preds = %13, %9
  %24 = phi i32 [ %12, %9 ], [ %22, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #12
  ret i32 %24
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK24certificate_transparency23ChromeRequireCTDelegate13MatchHostnameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPb(%"class.certificate_transparency::ChromeRequireCTDelegate"*, %"class.std::__1::basic_string"* dereferenceable(24), i8* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::set.152", align 8
  %5 = alloca %class.GURL, align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.net::HostPortPair", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.url_matcher::URLMatcher"*, %"class.url_matcher::URLMatcher"** %10, align 8
  %12 = tail call zeroext i1 @_ZNK11url_matcher10URLMatcher7IsEmptyEv(%"class.url_matcher::URLMatcher"* %11) #12
  br i1 %12, label %195, label %13

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::set.152"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.std::__1::set.152", %"class.std::__1::set.152"* %4, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::set.152", %"class.std::__1::set.152"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.std::__1::set.152"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false)
  %18 = load %"class.url_matcher::URLMatcher"*, %"class.url_matcher::URLMatcher"** %10, align 8
  %19 = bitcast %class.GURL* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %19) #12
  %20 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #12
  %21 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #12
  %22 = bitcast %"class.net::HostPortPair"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #12
  call void @_ZN3net12HostPortPairC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEt(%"class.net::HostPortPair"* nonnull %8, %"class.std::__1::basic_string"* dereferenceable(24) %1, i16 zeroext 443) #12
  call void @_ZNK3net12HostPortPair10HostForURLEv(%"class.std::__1::basic_string"* nonnull sret %7, %"class.net::HostPortPair"* nonnull %8) #12
  %23 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %7, i64 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)) #12, !noalias !4
  %24 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 8 %24, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #12, !noalias !4
  %25 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = select i1 %28, i8* %30, i8* %20
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = zext i8 %27 to i64
  %35 = select i1 %28, i64 %33, i64 %34
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %5, i8* %31, i64 %35) #12
  call void @_ZNK11url_matcher10URLMatcher8MatchURLERK4GURL(%"class.std::__1::set.152"* nonnull sret %4, %"class.url_matcher::URLMatcher"* %18, %class.GURL* nonnull dereferenceable(120) %5) #12
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %5) #12
  %36 = load i8, i8* %26, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %13
  %39 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %39) #11
  br label %40

40:                                               ; preds = %13, %38
  %41 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  call void @_ZdlPv(i8* %47) #11
  br label %48

48:                                               ; preds = %40, %45
  %49 = bitcast %"class.net::HostPortPair"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %55) #11
  br label %56

56:                                               ; preds = %48, %53
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %19) #12
  %57 = load i64, i64* %16, align 8
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %189, label %59

59:                                               ; preds = %56
  %60 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %61 = getelementptr inbounds %"class.std::__1::set.152", %"class.std::__1::set.152"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %62 = icmp eq %"class.std::__1::__tree_end_node"* %60, %61
  br i1 %62, label %182, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 3, i32 0, i32 0
  %65 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %64, align 8
  %66 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  br label %67

67:                                               ; preds = %63, %176
  %68 = phi %"struct.certificate_transparency::ChromeRequireCTDelegate::Filter"* [ null, %63 ], [ %148, %176 ]
  %69 = phi %"class.std::__1::__tree_end_node"* [ %65, %63 ], [ %77, %176 ]
  %70 = phi %"class.std::__1::__tree_end_node"* [ %60, %63 ], [ %177, %176 ]
  %71 = icmp eq %"class.std::__1::__tree_end_node"* %69, %66
  br i1 %71, label %179, label %72

72:                                               ; preds = %67
  %73 = bitcast %"class.std::__1::__tree_end_node"* %70 to %"class.std::__1::__tree_node.280"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_node.280", %"class.std::__1::__tree_node.280"* %73, i64 0, i32 1
  %75 = load i32, i32* %74, align 4
  br label %76

76:                                               ; preds = %72, %110
  %77 = phi %"class.std::__1::__tree_end_node"* [ %69, %72 ], [ %111, %110 ]
  %78 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %77, i64 4
  %79 = bitcast %"class.std::__1::__tree_end_node"* %78 to i32*
  %80 = load i32, i32* %79, align 8
  %81 = icmp slt i32 %80, %75
  br i1 %81, label %82, label %113

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %77, i64 1, i32 0
  %84 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %83, align 8
  %85 = icmp eq %"class.std::__1::__tree_node_base"* %84, null
  br i1 %85, label %86, label %94

86:                                               ; preds = %82
  %87 = bitcast %"class.std::__1::__tree_end_node"* %77 to %"class.std::__1::__tree_node_base"*
  %88 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %77, i64 2
  %89 = bitcast %"class.std::__1::__tree_end_node"* %88 to %"class.std::__1::__tree_end_node"**
  %90 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %89, align 8
  %91 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %90, i64 0, i32 0
  %92 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %91, align 8
  %93 = icmp eq %"class.std::__1::__tree_node_base"* %92, %87
  br i1 %93, label %110, label %101

94:                                               ; preds = %82, %94
  %95 = phi %"class.std::__1::__tree_node_base"* [ %97, %94 ], [ %84, %82 ]
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %95, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, null
  br i1 %98, label %99, label %94

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %95, i64 0, i32 0
  br label %110

101:                                              ; preds = %86, %101
  %102 = phi %"class.std::__1::__tree_end_node"** [ %105, %101 ], [ %89, %86 ]
  %103 = bitcast %"class.std::__1::__tree_end_node"** %102 to %"class.std::__1::__tree_node_base"**
  %104 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %103, align 8
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %104, i64 0, i32 2
  %106 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %105, align 8
  %107 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %106, i64 0, i32 0
  %108 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %107, align 8
  %109 = icmp eq %"class.std::__1::__tree_node_base"* %108, %104
  br i1 %109, label %110, label %101

110:                                              ; preds = %101, %86, %99
  %111 = phi %"class.std::__1::__tree_end_node"* [ %100, %99 ], [ %90, %86 ], [ %106, %101 ]
  %112 = icmp eq %"class.std::__1::__tree_end_node"* %111, %66
  br i1 %112, label %179, label %76

113:                                              ; preds = %76
  %114 = icmp eq %"class.std::__1::__tree_end_node"* %77, %66
  br i1 %114, label %179, label %115

115:                                              ; preds = %113
  %116 = icmp eq %"struct.certificate_transparency::ChromeRequireCTDelegate::Filter"* %68, null
  br i1 %116, label %144, label %117

117:                                              ; preds = %115
  %118 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %77, i64 5
  %119 = bitcast %"class.std::__1::__tree_end_node"* %118 to %"struct.certificate_transparency::ChromeRequireCTDelegate::Filter"*
  %120 = getelementptr inbounds %"struct.certificate_transparency::ChromeRequireCTDelegate::Filter", %"struct.certificate_transparency::ChromeRequireCTDelegate::Filter"* %119, i64 0, i32 1
  %121 = load i8, i8* %120, align 1, !range !2
  %122 = getelementptr inbounds %"struct.certificate_transparency::ChromeRequireCTDelegate::Filter", %"struct.certificate_transparency::ChromeRequireCTDelegate::Filter"* %68, i64 0, i32 1
  %123 = load i8, i8* %122, align 1, !range !2
  %124 = icmp eq i8 %121, %123
  br i1 %124, label %127, label %125

125:                                              ; preds = %117
  %126 = icmp eq i8 %121, 0
  br i1 %126, label %144, label %147

127:                                              ; preds = %117
  %128 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %77, i64 6
  %129 = bitcast %"class.std::__1::__tree_end_node"* %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = getelementptr inbounds %"struct.certificate_transparency::ChromeRequireCTDelegate::Filter", %"struct.certificate_transparency::ChromeRequireCTDelegate::Filter"* %68, i64 0, i32 2
  %132 = load i64, i64* %131, align 8
  %133 = icmp eq i64 %130, %132
  br i1 %133, label %134, label %142

134:                                              ; preds = %127
  %135 = bitcast %"class.std::__1::__tree_end_node"* %118 to i8*
  %136 = load i8, i8* %135, align 8, !range !2
  %137 = getelementptr inbounds %"struct.certificate_transparency::ChromeRequireCTDelegate::Filter", %"struct.certificate_transparency::ChromeRequireCTDelegate::Filter"* %68, i64 0, i32 0
  %138 = load i8, i8* %137, align 8, !range !2
  %139 = icmp ne i8 %136, %138
  %140 = icmp ne i8 %136, 0
  %141 = and i1 %140, %139
  br i1 %141, label %144, label %147

142:                                              ; preds = %127
  %143 = icmp ugt i64 %130, %132
  br i1 %143, label %144, label %147

144:                                              ; preds = %115, %125, %134, %142
  %145 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %77, i64 5
  %146 = bitcast %"class.std::__1::__tree_end_node"* %145 to %"struct.certificate_transparency::ChromeRequireCTDelegate::Filter"*
  br label %147

147:                                              ; preds = %144, %142, %134, %125
  %148 = phi %"struct.certificate_transparency::ChromeRequireCTDelegate::Filter"* [ %68, %125 ], [ %68, %134 ], [ %68, %142 ], [ %146, %144 ]
  %149 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %70, i64 1, i32 0
  %150 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %149, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %150, null
  br i1 %151, label %152, label %160

152:                                              ; preds = %147
  %153 = bitcast %"class.std::__1::__tree_end_node"* %70 to %"class.std::__1::__tree_node_base"*
  %154 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %70, i64 2
  %155 = bitcast %"class.std::__1::__tree_end_node"* %154 to %"class.std::__1::__tree_end_node"**
  %156 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %155, align 8
  %157 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %156, i64 0, i32 0
  %158 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %157, align 8
  %159 = icmp eq %"class.std::__1::__tree_node_base"* %158, %153
  br i1 %159, label %176, label %167

160:                                              ; preds = %147, %160
  %161 = phi %"class.std::__1::__tree_node_base"* [ %163, %160 ], [ %150, %147 ]
  %162 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %161, i64 0, i32 0, i32 0
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, null
  br i1 %164, label %165, label %160

165:                                              ; preds = %160
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %161, i64 0, i32 0
  br label %176

167:                                              ; preds = %152, %167
  %168 = phi %"class.std::__1::__tree_end_node"** [ %171, %167 ], [ %155, %152 ]
  %169 = bitcast %"class.std::__1::__tree_end_node"** %168 to %"class.std::__1::__tree_node_base"**
  %170 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %169, align 8
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 2
  %172 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %171, align 8
  %173 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %172, i64 0, i32 0
  %174 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %173, align 8
  %175 = icmp eq %"class.std::__1::__tree_node_base"* %174, %170
  br i1 %175, label %176, label %167

176:                                              ; preds = %167, %152, %165
  %177 = phi %"class.std::__1::__tree_end_node"* [ %166, %165 ], [ %156, %152 ], [ %172, %167 ]
  %178 = icmp eq %"class.std::__1::__tree_end_node"* %177, %61
  br i1 %178, label %179, label %67

179:                                              ; preds = %67, %113, %176, %110
  %180 = phi %"struct.certificate_transparency::ChromeRequireCTDelegate::Filter"* [ %68, %110 ], [ %68, %67 ], [ %148, %176 ], [ %68, %113 ]
  %181 = icmp eq %"struct.certificate_transparency::ChromeRequireCTDelegate::Filter"* %180, null
  br i1 %181, label %182, label %185

182:                                              ; preds = %59, %179
  %183 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %183) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1, i64 0, i64 0), i32 252, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0)) #12
  %184 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %183) #12
  br label %185

185:                                              ; preds = %179, %182
  %186 = phi %"struct.certificate_transparency::ChromeRequireCTDelegate::Filter"* [ %180, %179 ], [ null, %182 ]
  %187 = getelementptr inbounds %"struct.certificate_transparency::ChromeRequireCTDelegate::Filter", %"struct.certificate_transparency::ChromeRequireCTDelegate::Filter"* %186, i64 0, i32 0
  %188 = load i8, i8* %187, align 8, !range !2
  store i8 %188, i8* %2, align 1
  br label %189

189:                                              ; preds = %56, %185
  %190 = phi i1 [ true, %185 ], [ false, %56 ]
  %191 = getelementptr inbounds %"class.std::__1::set.152", %"class.std::__1::set.152"* %4, i64 0, i32 0
  %192 = getelementptr inbounds %"class.std::__1::set.152", %"class.std::__1::set.152"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %193 = bitcast %"class.std::__1::__tree_end_node"* %192 to %"class.std::__1::__tree_node.280"**
  %194 = load %"class.std::__1::__tree_node.280"*, %"class.std::__1::__tree_node.280"** %193, align 8
  call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.153"* nonnull %191, %"class.std::__1::__tree_node.280"* %194) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #12
  br label %195

195:                                              ; preds = %3, %189
  %196 = phi i1 [ %190, %189 ], [ false, %3 ]
  ret i1 %196
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK24certificate_transparency23ChromeRequireCTDelegate9MatchSPKIEPKN3net15X509CertificateERKNSt3__16vectorINS1_9HashValueENS5_9allocatorIS7_EEEEPb(%"class.certificate_transparency::ChromeRequireCTDelegate"* nocapture readonly, %"class.net::X509Certificate"* nocapture readonly, %"class.std::__1::vector.74"* nocapture readonly dereferenceable(24), i8* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to %"class.net::der::Input"*
  %7 = alloca %"class.net::der::Input", align 8
  %8 = alloca <2 x i64>, align 16
  %9 = bitcast <2 x i64>* %8 to %"class.net::der::Input"*
  %10 = alloca <2 x i64>, align 16
  %11 = bitcast <2 x i64>* %10 to %"class.net::der::Input"*
  %12 = alloca <2 x i64>, align 16
  %13 = bitcast <2 x i64>* %12 to %"class.net::der::Input"*
  %14 = alloca %"class.net::der::Input", align 8
  %15 = alloca %"class.net::der::Input", align 8
  %16 = alloca %"class.net::der::Input", align 8
  %17 = alloca %"class.net::der::Input", align 8
  %18 = alloca %"class.net::der::Input", align 8
  %19 = alloca %"struct.net::ParseCertificateOptions", align 1
  %20 = alloca %"class.std::__1::vector.253", align 8
  %21 = alloca %"class.std::__1::vector.253", align 8
  %22 = alloca <2 x i64>, align 16
  %23 = bitcast <2 x i64>* %22 to %"class.net::der::Input"*
  %24 = alloca %"class.std::__1::vector.74", align 8
  %25 = alloca %"class.net::HashValue", align 4
  %26 = alloca %"class.std::__1::vector.168", align 8
  %27 = alloca %"struct.net::ParseCertificateOptions", align 1
  %28 = alloca %"class.std::__1::vector.253", align 8
  %29 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 5, i32 0, i32 0
  %30 = load %"class.net::HashValue"*, %"class.net::HashValue"** %29, align 8
  %31 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 5, i32 0, i32 1
  %32 = load %"class.net::HashValue"*, %"class.net::HashValue"** %31, align 8
  %33 = icmp eq %"class.net::HashValue"* %30, %32
  br i1 %33, label %74, label %34

34:                                               ; preds = %4
  %35 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %2, i64 0, i32 0, i32 0
  %36 = load %"class.net::HashValue"*, %"class.net::HashValue"** %35, align 8
  %37 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %2, i64 0, i32 0, i32 1
  %38 = load %"class.net::HashValue"*, %"class.net::HashValue"** %37, align 8
  %39 = icmp eq %"class.net::HashValue"* %36, %38
  br i1 %39, label %74, label %40

40:                                               ; preds = %34, %70
  %41 = phi %"class.net::HashValue"* [ %72, %70 ], [ %32, %34 ]
  %42 = phi %"class.net::HashValue"* [ %71, %70 ], [ %30, %34 ]
  %43 = phi %"class.net::HashValue"* [ %68, %70 ], [ %36, %34 ]
  %44 = ptrtoint %"class.net::HashValue"* %42 to i64
  %45 = ptrtoint %"class.net::HashValue"* %41 to i64
  %46 = sub i64 %45, %44
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %62, label %48

48:                                               ; preds = %40
  %49 = sdiv exact i64 %46, 36
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi %"class.net::HashValue"* [ %60, %50 ], [ %42, %48 ]
  %52 = phi i64 [ %59, %50 ], [ %49, %48 ]
  %53 = lshr i64 %52, 1
  %54 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %51, i64 %53
  %55 = tail call zeroext i1 @_ZN3netltERKNS_9HashValueES2_(%"class.net::HashValue"* dereferenceable(36) %54, %"class.net::HashValue"* dereferenceable(36) %43) #12
  %56 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %54, i64 1
  %57 = xor i64 %53, -1
  %58 = add i64 %52, %57
  %59 = select i1 %55, i64 %58, i64 %53
  %60 = select i1 %55, %"class.net::HashValue"* %56, %"class.net::HashValue"* %51
  %61 = icmp eq i64 %59, 0
  br i1 %61, label %62, label %50

62:                                               ; preds = %50, %40
  %63 = phi %"class.net::HashValue"* [ %42, %40 ], [ %60, %50 ]
  %64 = icmp eq %"class.net::HashValue"* %63, %41
  br i1 %64, label %67, label %65

65:                                               ; preds = %62
  %66 = tail call zeroext i1 @_ZN3netltERKNS_9HashValueES2_(%"class.net::HashValue"* dereferenceable(36) %43, %"class.net::HashValue"* dereferenceable(36) %63) #12
  br i1 %66, label %67, label %73

67:                                               ; preds = %65, %62
  %68 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %43, i64 1
  %69 = icmp eq %"class.net::HashValue"* %68, %38
  br i1 %69, label %74, label %70

70:                                               ; preds = %67
  %71 = load %"class.net::HashValue"*, %"class.net::HashValue"** %29, align 8
  %72 = load %"class.net::HashValue"*, %"class.net::HashValue"** %31, align 8
  br label %40

73:                                               ; preds = %65
  store i8 0, i8* %3, align 1
  br label %790

74:                                               ; preds = %67, %34, %4
  %75 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 4, i32 0, i32 0
  %76 = load %"class.net::HashValue"*, %"class.net::HashValue"** %75, align 8
  %77 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 4, i32 0, i32 1
  %78 = load %"class.net::HashValue"*, %"class.net::HashValue"** %77, align 8
  %79 = icmp eq %"class.net::HashValue"* %76, %78
  br i1 %79, label %790, label %80

80:                                               ; preds = %74
  %81 = bitcast %"class.std::__1::vector.74"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #12
  %82 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %24, i64 0, i32 0, i32 0
  %83 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %24, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 0, i64 24, i1 false) #12
  %84 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %2, i64 0, i32 0, i32 0
  %85 = load %"class.net::HashValue"*, %"class.net::HashValue"** %84, align 8
  %86 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %2, i64 0, i32 0, i32 1
  %87 = load %"class.net::HashValue"*, %"class.net::HashValue"** %86, align 8
  %88 = icmp eq %"class.net::HashValue"* %85, %87
  br i1 %88, label %788, label %89

89:                                               ; preds = %80
  %90 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %24, i64 0, i32 0, i32 2, i32 0, i32 0
  %91 = bitcast %"class.net::HashValue"** %83 to i64*
  %92 = bitcast %"class.std::__1::vector.74"* %24 to i64*
  %93 = bitcast %"class.net::HashValue"** %90 to i64*
  br label %96

94:                                               ; preds = %180
  %95 = icmp eq %"class.net::HashValue"* %182, %181
  br i1 %95, label %780, label %193

96:                                               ; preds = %190, %89
  %97 = phi %"class.net::HashValue"* [ null, %89 ], [ %181, %190 ]
  %98 = phi %"class.net::HashValue"* [ null, %89 ], [ %182, %190 ]
  %99 = phi i64 [ 0, %89 ], [ %183, %190 ]
  %100 = phi %"class.net::HashValue"* [ null, %89 ], [ %184, %190 ]
  %101 = phi i64 [ 0, %89 ], [ %185, %190 ]
  %102 = phi %"class.net::HashValue"* [ null, %89 ], [ %186, %190 ]
  %103 = phi %"class.net::HashValue"* [ null, %89 ], [ %187, %190 ]
  %104 = phi %"class.net::HashValue"* [ %78, %89 ], [ %192, %190 ]
  %105 = phi %"class.net::HashValue"* [ %76, %89 ], [ %191, %190 ]
  %106 = phi %"class.net::HashValue"* [ %85, %89 ], [ %188, %190 ]
  %107 = ptrtoint %"class.net::HashValue"* %105 to i64
  %108 = ptrtoint %"class.net::HashValue"* %104 to i64
  %109 = sub i64 %108, %107
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %125, label %111

111:                                              ; preds = %96
  %112 = sdiv exact i64 %109, 36
  br label %113

113:                                              ; preds = %113, %111
  %114 = phi %"class.net::HashValue"* [ %123, %113 ], [ %105, %111 ]
  %115 = phi i64 [ %122, %113 ], [ %112, %111 ]
  %116 = lshr i64 %115, 1
  %117 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %114, i64 %116
  %118 = tail call zeroext i1 @_ZN3netltERKNS_9HashValueES2_(%"class.net::HashValue"* dereferenceable(36) %117, %"class.net::HashValue"* dereferenceable(36) %106) #12
  %119 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %117, i64 1
  %120 = xor i64 %116, -1
  %121 = add i64 %115, %120
  %122 = select i1 %118, i64 %121, i64 %116
  %123 = select i1 %118, %"class.net::HashValue"* %119, %"class.net::HashValue"* %114
  %124 = icmp eq i64 %122, 0
  br i1 %124, label %125, label %113

125:                                              ; preds = %113, %96
  %126 = phi %"class.net::HashValue"* [ %105, %96 ], [ %123, %113 ]
  %127 = icmp eq %"class.net::HashValue"* %126, %104
  br i1 %127, label %180, label %128

128:                                              ; preds = %125
  %129 = tail call zeroext i1 @_ZN3netltERKNS_9HashValueES2_(%"class.net::HashValue"* dereferenceable(36) %106, %"class.net::HashValue"* dereferenceable(36) %126) #12
  br i1 %129, label %180, label %130

130:                                              ; preds = %128
  %131 = icmp eq %"class.net::HashValue"* %103, %102
  br i1 %131, label %137, label %132

132:                                              ; preds = %130
  %133 = bitcast %"class.net::HashValue"* %103 to i8*
  %134 = bitcast %"class.net::HashValue"* %106 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %133, i8* align 4 %134, i64 36, i1 false) #12
  %135 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %103, i64 1
  %136 = ptrtoint %"class.net::HashValue"* %135 to i64
  store i64 %136, i64* %91, align 8
  br label %180

137:                                              ; preds = %130
  %138 = ptrtoint %"class.net::HashValue"* %102 to i64
  %139 = sub i64 %138, %101
  %140 = sdiv exact i64 %139, 36
  %141 = add nsw i64 %140, 1
  %142 = icmp ugt i64 %141, 512409557603043100
  br i1 %142, label %143, label %145

143:                                              ; preds = %137
  %144 = bitcast %"class.std::__1::vector.74"* %24 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %144) #13
  unreachable

145:                                              ; preds = %137
  %146 = icmp ult i64 %140, 256204778801521550
  br i1 %146, label %147, label %152

147:                                              ; preds = %145
  %148 = shl nsw i64 %140, 1
  %149 = icmp ult i64 %148, %141
  %150 = select i1 %149, i64 %141, i64 %148
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %157, label %152

152:                                              ; preds = %147, %145
  %153 = phi i64 [ %150, %147 ], [ 512409557603043100, %145 ]
  %154 = mul i64 %153, 36
  %155 = tail call i8* @_Znwm(i64 %154) #11
  %156 = bitcast i8* %155 to %"class.net::HashValue"*
  br label %157

157:                                              ; preds = %152, %147
  %158 = phi i64 [ %153, %152 ], [ 0, %147 ]
  %159 = phi %"class.net::HashValue"* [ %156, %152 ], [ null, %147 ]
  %160 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %159, i64 %140
  %161 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %159, i64 %158
  %162 = ptrtoint %"class.net::HashValue"* %161 to i64
  %163 = bitcast %"class.net::HashValue"* %160 to i8*
  %164 = bitcast %"class.net::HashValue"* %106 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %163, i8* align 4 %164, i64 36, i1 false) #12
  %165 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %160, i64 1
  %166 = ptrtoint %"class.net::HashValue"* %165 to i64
  %167 = ptrtoint %"class.net::HashValue"* %100 to i64
  %168 = sub i64 %99, %167
  %169 = sdiv exact i64 %168, -36
  %170 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %160, i64 %169
  %171 = ptrtoint %"class.net::HashValue"* %170 to i64
  %172 = icmp sgt i64 %168, 0
  br i1 %172, label %173, label %176

173:                                              ; preds = %157
  %174 = bitcast %"class.net::HashValue"* %170 to i8*
  %175 = bitcast %"class.net::HashValue"* %100 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %174, i8* align 4 %175, i64 %168, i1 false) #12
  br label %176

176:                                              ; preds = %173, %157
  store i64 %171, i64* %92, align 8
  store i64 %166, i64* %91, align 8
  store i64 %162, i64* %93, align 8
  %177 = icmp eq %"class.net::HashValue"* %100, null
  br i1 %177, label %180, label %178

178:                                              ; preds = %176
  %179 = bitcast %"class.net::HashValue"* %100 to i8*
  tail call void @_ZdlPv(i8* %179) #11
  br label %180

180:                                              ; preds = %128, %125, %178, %176, %132
  %181 = phi %"class.net::HashValue"* [ %97, %128 ], [ %97, %125 ], [ %165, %178 ], [ %165, %176 ], [ %135, %132 ]
  %182 = phi %"class.net::HashValue"* [ %98, %128 ], [ %98, %125 ], [ %170, %178 ], [ %170, %176 ], [ %98, %132 ]
  %183 = phi i64 [ %99, %128 ], [ %99, %125 ], [ %166, %178 ], [ %166, %176 ], [ %136, %132 ]
  %184 = phi %"class.net::HashValue"* [ %100, %128 ], [ %100, %125 ], [ %170, %178 ], [ %170, %176 ], [ %100, %132 ]
  %185 = phi i64 [ %101, %128 ], [ %101, %125 ], [ %171, %178 ], [ %171, %176 ], [ %101, %132 ]
  %186 = phi %"class.net::HashValue"* [ %102, %128 ], [ %102, %125 ], [ %161, %178 ], [ %161, %176 ], [ %102, %132 ]
  %187 = phi %"class.net::HashValue"* [ %103, %128 ], [ %103, %125 ], [ %165, %178 ], [ %165, %176 ], [ %135, %132 ]
  %188 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %106, i64 1
  %189 = icmp eq %"class.net::HashValue"* %188, %87
  br i1 %189, label %94, label %190

190:                                              ; preds = %180
  %191 = load %"class.net::HashValue"*, %"class.net::HashValue"** %75, align 8
  %192 = load %"class.net::HashValue"*, %"class.net::HashValue"** %77, align 8
  br label %96

193:                                              ; preds = %94
  %194 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %195 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %194, align 8
  %196 = bitcast %"class.net::HashValue"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %196) #12
  %197 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %25, i64 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %197, i8 -86, i64 32, i1 false)
  %198 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %25, i64 0, i32 0
  store i32 0, i32* %198, align 4
  %199 = call zeroext i1 @_ZN3net9x509_util23CalculateSha256SpkiHashEPK16crypto_buffer_stPNS_9HashValueE(%struct.crypto_buffer_st* %195, %"class.net::HashValue"* nonnull %25) #12
  br i1 %199, label %200, label %215

200:                                              ; preds = %193
  %201 = load %"class.net::HashValue"*, %"class.net::HashValue"** %82, align 8
  %202 = load %"class.net::HashValue"*, %"class.net::HashValue"** %83, align 8
  %203 = icmp eq %"class.net::HashValue"* %201, %202
  br i1 %203, label %215, label %204

204:                                              ; preds = %200, %207
  %205 = phi %"class.net::HashValue"* [ %208, %207 ], [ %201, %200 ]
  %206 = call zeroext i1 @_ZN3neteqERKNS_9HashValueES2_(%"class.net::HashValue"* dereferenceable(36) %205, %"class.net::HashValue"* nonnull dereferenceable(36) %25) #12
  br i1 %206, label %210, label %207

207:                                              ; preds = %204
  %208 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %205, i64 1
  %209 = icmp eq %"class.net::HashValue"* %208, %202
  br i1 %209, label %210, label %204

210:                                              ; preds = %204, %207
  %211 = phi %"class.net::HashValue"* [ %205, %204 ], [ %202, %207 ]
  %212 = load %"class.net::HashValue"*, %"class.net::HashValue"** %83, align 8
  %213 = icmp eq %"class.net::HashValue"* %211, %212
  br i1 %213, label %215, label %214

214:                                              ; preds = %210
  store i8 0, i8* %3, align 1
  br label %777

215:                                              ; preds = %210, %200, %193
  %216 = bitcast %"class.std::__1::vector.168"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %216) #12
  %217 = getelementptr inbounds %"class.std::__1::vector.168", %"class.std::__1::vector.168"* %26, i64 0, i32 0, i32 0
  %218 = getelementptr inbounds %"class.std::__1::vector.168", %"class.std::__1::vector.168"* %26, i64 0, i32 0, i32 1
  %219 = getelementptr inbounds %"class.std::__1::vector.168", %"class.std::__1::vector.168"* %26, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %216, i8 0, i64 24, i1 false) #12
  %220 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %1, i64 0, i32 7, i32 0, i32 0
  %221 = load %"class.std::__1::unique_ptr.95"*, %"class.std::__1::unique_ptr.95"** %220, align 8
  %222 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %1, i64 0, i32 7, i32 0, i32 1
  %223 = load %"class.std::__1::unique_ptr.95"*, %"class.std::__1::unique_ptr.95"** %222, align 8
  %224 = icmp eq %"class.std::__1::unique_ptr.95"* %221, %223
  br i1 %224, label %775, label %225

225:                                              ; preds = %215
  %226 = bitcast %struct.crypto_buffer_st*** %218 to i64*
  %227 = bitcast %"class.std::__1::vector.168"* %26 to i64*
  %228 = bitcast %struct.crypto_buffer_st*** %219 to i64*
  br label %233

229:                                              ; preds = %307
  %230 = load %struct.crypto_buffer_st**, %struct.crypto_buffer_st*** %217, align 8
  %231 = load %struct.crypto_buffer_st**, %struct.crypto_buffer_st*** %218, align 8
  %232 = icmp eq %struct.crypto_buffer_st** %230, %231
  br i1 %232, label %767, label %310

233:                                              ; preds = %225, %307
  %234 = phi %"class.std::__1::unique_ptr.95"* [ %221, %225 ], [ %308, %307 ]
  %235 = getelementptr inbounds %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.95"* %234, i64 0, i32 0, i32 0, i32 0
  %236 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %235, align 8
  %237 = call zeroext i1 @_ZN3net9x509_util23CalculateSha256SpkiHashEPK16crypto_buffer_stPNS_9HashValueE(%struct.crypto_buffer_st* %236, %"class.net::HashValue"* nonnull %25) #12
  br i1 %237, label %238, label %307

238:                                              ; preds = %233
  %239 = load %"class.net::HashValue"*, %"class.net::HashValue"** %82, align 8
  %240 = load %"class.net::HashValue"*, %"class.net::HashValue"** %83, align 8
  %241 = icmp eq %"class.net::HashValue"* %239, %240
  br i1 %241, label %307, label %242

242:                                              ; preds = %238, %245
  %243 = phi %"class.net::HashValue"* [ %246, %245 ], [ %239, %238 ]
  %244 = call zeroext i1 @_ZN3neteqERKNS_9HashValueES2_(%"class.net::HashValue"* dereferenceable(36) %243, %"class.net::HashValue"* nonnull dereferenceable(36) %25) #12
  br i1 %244, label %248, label %245

245:                                              ; preds = %242
  %246 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %243, i64 1
  %247 = icmp eq %"class.net::HashValue"* %246, %240
  br i1 %247, label %248, label %242

248:                                              ; preds = %242, %245
  %249 = phi %"class.net::HashValue"* [ %243, %242 ], [ %240, %245 ]
  %250 = load %"class.net::HashValue"*, %"class.net::HashValue"** %83, align 8
  %251 = icmp eq %"class.net::HashValue"* %249, %250
  br i1 %251, label %307, label %252

252:                                              ; preds = %248
  %253 = bitcast %"class.std::__1::unique_ptr.95"* %234 to i64*
  %254 = load i64, i64* %253, align 8
  %255 = load %struct.crypto_buffer_st**, %struct.crypto_buffer_st*** %218, align 8
  %256 = load %struct.crypto_buffer_st**, %struct.crypto_buffer_st*** %219, align 8
  %257 = icmp ult %struct.crypto_buffer_st** %255, %256
  %258 = ptrtoint %struct.crypto_buffer_st** %256 to i64
  br i1 %257, label %259, label %263

259:                                              ; preds = %252
  %260 = bitcast %struct.crypto_buffer_st** %255 to i64*
  store i64 %254, i64* %260, align 8
  %261 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %255, i64 1
  %262 = ptrtoint %struct.crypto_buffer_st** %261 to i64
  store i64 %262, i64* %226, align 8
  br label %307

263:                                              ; preds = %252
  %264 = ptrtoint %struct.crypto_buffer_st** %255 to i64
  %265 = load i64, i64* %227, align 8
  %266 = sub i64 %264, %265
  %267 = ashr exact i64 %266, 3
  %268 = add nsw i64 %267, 1
  %269 = icmp ugt i64 %268, 2305843009213693951
  br i1 %269, label %270, label %272

270:                                              ; preds = %263
  %271 = bitcast %"class.std::__1::vector.168"* %26 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %271) #13
  unreachable

272:                                              ; preds = %263
  %273 = sub i64 %258, %265
  %274 = ashr exact i64 %273, 3
  %275 = icmp ult i64 %274, 1152921504606846975
  br i1 %275, label %276, label %284

276:                                              ; preds = %272
  %277 = ashr exact i64 %273, 2
  %278 = icmp ult i64 %277, %268
  %279 = select i1 %278, i64 %268, i64 %277
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %289, label %281

281:                                              ; preds = %276
  %282 = icmp ugt i64 %279, 2305843009213693951
  br i1 %282, label %283, label %284

283:                                              ; preds = %281
  call void @abort() #13
  unreachable

284:                                              ; preds = %281, %272
  %285 = phi i64 [ %279, %281 ], [ 2305843009213693951, %272 ]
  %286 = shl i64 %285, 3
  %287 = call i8* @_Znwm(i64 %286) #11
  %288 = bitcast i8* %287 to %struct.crypto_buffer_st**
  br label %289

289:                                              ; preds = %284, %276
  %290 = phi i64 [ %285, %284 ], [ 0, %276 ]
  %291 = phi i8* [ %287, %284 ], [ null, %276 ]
  %292 = phi %struct.crypto_buffer_st** [ %288, %284 ], [ null, %276 ]
  %293 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %292, i64 %267
  %294 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %292, i64 %290
  %295 = ptrtoint %struct.crypto_buffer_st** %294 to i64
  %296 = bitcast %struct.crypto_buffer_st** %293 to i64*
  store i64 %254, i64* %296, align 8
  %297 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %293, i64 1
  %298 = ptrtoint %struct.crypto_buffer_st** %297 to i64
  %299 = ptrtoint %struct.crypto_buffer_st** %292 to i64
  %300 = icmp sgt i64 %266, 0
  br i1 %300, label %301, label %303

301:                                              ; preds = %289
  %302 = inttoptr i64 %265 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %291, i8* align 8 %302, i64 %266, i1 false) #12
  br label %303

303:                                              ; preds = %301, %289
  store i64 %299, i64* %227, align 8
  store i64 %298, i64* %226, align 8
  store i64 %295, i64* %228, align 8
  %304 = icmp eq i64 %265, 0
  br i1 %304, label %307, label %305

305:                                              ; preds = %303
  %306 = inttoptr i64 %265 to i8*
  call void @_ZdlPv(i8* %306) #11
  br label %307

307:                                              ; preds = %248, %238, %305, %303, %259, %233
  %308 = getelementptr inbounds %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.95"* %234, i64 1
  %309 = icmp eq %"class.std::__1::unique_ptr.95"* %308, %223
  br i1 %309, label %229, label %233

310:                                              ; preds = %229
  %311 = icmp eq %struct.crypto_buffer_st* %195, null
  br i1 %311, label %314, label %312

312:                                              ; preds = %310
  %313 = call i32 @CRYPTO_BUFFER_up_ref(%struct.crypto_buffer_st* nonnull %195) #12
  br label %314

314:                                              ; preds = %310, %312
  %315 = getelementptr inbounds %"struct.net::ParseCertificateOptions", %"struct.net::ParseCertificateOptions"* %27, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %315) #12
  store i8 0, i8* %315, align 1
  %316 = call %"class.net::ParsedCertificate"* @_ZN3net17ParsedCertificate6CreateENSt3__110unique_ptrI16crypto_buffer_stN4bssl8internal7DeleterIS3_EEEERKNS_23ParseCertificateOptionsEPNS_10CertErrorsE(%struct.crypto_buffer_st* %195, %"struct.net::ParseCertificateOptions"* nonnull dereferenceable(1) %27, %"class.net::CertErrors"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %315) #12
  %317 = icmp eq %"class.net::ParsedCertificate"* %316, null
  br i1 %317, label %764, label %318

318:                                              ; preds = %314
  %319 = bitcast %"class.std::__1::vector.253"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %319) #12
  %320 = getelementptr inbounds %"class.std::__1::vector.253", %"class.std::__1::vector.253"* %28, i64 0, i32 0, i32 0
  %321 = getelementptr inbounds %"class.std::__1::vector.253", %"class.std::__1::vector.253"* %28, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %319, i8 0, i64 24, i1 false) #12
  %322 = bitcast <2 x i64>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %322)
  %323 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %316, i64 0, i32 8
  call void @_ZN3net3der5InputC1EPKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.net::der::Input"* nonnull %9, %"class.std::__1::basic_string"* %323) #12
  %324 = load <2 x i64>, <2 x i64>* %8, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %322)
  %325 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %325)
  store <2 x i64> %324, <2 x i64>* %5, align 16
  %326 = call zeroext i1 @_ZN3net14ParseNameValueERKNS_3der5InputEPNSt3__16vectorINS5_INS_17X509NameAttributeENS4_9allocatorIS6_EEEENS7_IS9_EEEE(%"class.net::der::Input"* nonnull dereferenceable(16) %6, %"class.std::__1::vector.253"* nonnull %28) #12
  br i1 %326, label %327, label %355

327:                                              ; preds = %318
  %328 = load %"class.std::__1::vector.255"*, %"class.std::__1::vector.255"** %320, align 8
  %329 = load %"class.std::__1::vector.255"*, %"class.std::__1::vector.255"** %321, align 8
  %330 = icmp eq %"class.std::__1::vector.255"* %328, %329
  br i1 %330, label %355, label %331

331:                                              ; preds = %327
  %332 = bitcast %"class.net::der::Input"* %7 to i8*
  %333 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %7, i64 0, i32 0
  %334 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %7, i64 0, i32 1
  br label %335

335:                                              ; preds = %352, %331
  %336 = phi %"class.std::__1::vector.255"* [ %328, %331 ], [ %353, %352 ]
  %337 = getelementptr inbounds %"class.std::__1::vector.255", %"class.std::__1::vector.255"* %336, i64 0, i32 0, i32 0
  %338 = load %"struct.net::X509NameAttribute"*, %"struct.net::X509NameAttribute"** %337, align 8
  %339 = getelementptr inbounds %"class.std::__1::vector.255", %"class.std::__1::vector.255"* %336, i64 0, i32 0, i32 1
  %340 = load %"struct.net::X509NameAttribute"*, %"struct.net::X509NameAttribute"** %339, align 8
  %341 = icmp eq %"struct.net::X509NameAttribute"* %338, %340
  br i1 %341, label %352, label %344

342:                                              ; preds = %344
  %343 = icmp eq %"struct.net::X509NameAttribute"* %351, %340
  br i1 %343, label %352, label %344

344:                                              ; preds = %335, %342
  %345 = phi %"struct.net::X509NameAttribute"* [ %351, %342 ], [ %338, %335 ]
  %346 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %345, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %332) #12
  %347 = call { i8*, i64 } @_ZN3net23TypeOrganizationNameOidEv() #12
  %348 = extractvalue { i8*, i64 } %347, 0
  store i8* %348, i8** %333, align 8
  %349 = extractvalue { i8*, i64 } %347, 1
  store i64 %349, i64* %334, align 8
  %350 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %346, %"class.net::der::Input"* nonnull dereferenceable(16) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %332) #12
  %351 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %345, i64 1
  br i1 %350, label %356, label %342

352:                                              ; preds = %342, %335
  %353 = getelementptr inbounds %"class.std::__1::vector.255", %"class.std::__1::vector.255"* %336, i64 1
  %354 = icmp eq %"class.std::__1::vector.255"* %353, %329
  br i1 %354, label %355, label %335

355:                                              ; preds = %352, %318, %327
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %325)
  br label %732

356:                                              ; preds = %344
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %325)
  %357 = load %struct.crypto_buffer_st**, %struct.crypto_buffer_st*** %217, align 8
  %358 = load %struct.crypto_buffer_st**, %struct.crypto_buffer_st*** %218, align 8
  %359 = icmp eq %struct.crypto_buffer_st** %357, %358
  br i1 %359, label %732, label %360

360:                                              ; preds = %356
  %361 = getelementptr inbounds %"struct.net::ParseCertificateOptions", %"struct.net::ParseCertificateOptions"* %19, i64 0, i32 0
  %362 = bitcast %"class.std::__1::vector.253"* %20 to i8*
  %363 = getelementptr inbounds %"class.std::__1::vector.253", %"class.std::__1::vector.253"* %20, i64 0, i32 0, i32 0
  %364 = getelementptr inbounds %"class.std::__1::vector.253", %"class.std::__1::vector.253"* %20, i64 0, i32 0, i32 1
  %365 = bitcast <2 x i64>* %12 to i8*
  %366 = bitcast %"class.net::der::Input"* %14 to i8*
  %367 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %14, i64 0, i32 0
  %368 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %14, i64 0, i32 1
  %369 = bitcast %"class.std::__1::vector.253"* %20 to i8**
  %370 = bitcast %"class.std::__1::vector.253"* %21 to i8*
  %371 = getelementptr inbounds %"class.std::__1::vector.253", %"class.std::__1::vector.253"* %21, i64 0, i32 0, i32 0
  %372 = getelementptr inbounds %"class.std::__1::vector.253", %"class.std::__1::vector.253"* %21, i64 0, i32 0, i32 1
  %373 = bitcast <2 x i64>* %22 to i8*
  %374 = bitcast <2 x i64>* %10 to i8*
  %375 = bitcast %"class.std::__1::vector.253"* %28 to i64*
  %376 = bitcast %"class.net::der::Input"* %15 to i8*
  %377 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %15, i64 0, i32 0
  %378 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %15, i64 0, i32 1
  %379 = bitcast %"class.std::__1::vector.253"* %21 to i64*
  %380 = bitcast %"class.net::der::Input"* %16 to i8*
  %381 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %16, i64 0, i32 0
  %382 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %16, i64 0, i32 1
  %383 = bitcast %"class.net::der::Input"* %17 to i8*
  %384 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %17, i64 0, i32 0
  %385 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %17, i64 0, i32 1
  %386 = bitcast %"class.net::der::Input"* %18 to i8*
  %387 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %18, i64 0, i32 0
  %388 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %18, i64 0, i32 1
  %389 = bitcast %"class.std::__1::vector.253"* %21 to i8**
  br label %390

390:                                              ; preds = %360, %728
  %391 = phi %struct.crypto_buffer_st** [ %357, %360 ], [ %729, %728 ]
  %392 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %391, align 8
  %393 = icmp eq %struct.crypto_buffer_st* %392, null
  br i1 %393, label %396, label %394

394:                                              ; preds = %390
  %395 = call i32 @CRYPTO_BUFFER_up_ref(%struct.crypto_buffer_st* nonnull %392) #12
  br label %396

396:                                              ; preds = %394, %390
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %361) #12
  store i8 0, i8* %361, align 1
  %397 = call %"class.net::ParsedCertificate"* @_ZN3net17ParsedCertificate6CreateENSt3__110unique_ptrI16crypto_buffer_stN4bssl8internal7DeleterIS3_EEEERKNS_23ParseCertificateOptionsEPNS_10CertErrorsE(%struct.crypto_buffer_st* %392, %"struct.net::ParseCertificateOptions"* nonnull dereferenceable(1) %19, %"class.net::CertErrors"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %361) #12
  %398 = icmp eq %"class.net::ParsedCertificate"* %397, null
  br i1 %398, label %728, label %399

399:                                              ; preds = %396
  %400 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %397, i64 0, i32 19, i32 0, i32 0, i32 0
  %401 = load %"class.net::NameConstraints"*, %"class.net::NameConstraints"** %400, align 8
  %402 = icmp eq %"class.net::NameConstraints"* %401, null
  br i1 %402, label %468, label %403

403:                                              ; preds = %399
  %404 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %401, i64 0, i32 0, i32 4, i32 0, i32 0
  %405 = load %"class.net::der::Input"*, %"class.net::der::Input"** %404, align 8
  %406 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %401, i64 0, i32 0, i32 4, i32 0, i32 1
  %407 = load %"class.net::der::Input"*, %"class.net::der::Input"** %406, align 8
  %408 = icmp eq %"class.net::der::Input"* %405, %407
  br i1 %408, label %468, label %411

409:                                              ; preds = %465
  %410 = icmp eq %"class.net::der::Input"* %467, %407
  br i1 %410, label %468, label %411

411:                                              ; preds = %403, %409
  %412 = phi %"class.net::der::Input"* [ %467, %409 ], [ %405, %403 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %362) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %362, i8 0, i64 24, i1 false) #12
  %413 = bitcast %"class.net::der::Input"* %412 to <2 x i64>*
  %414 = load <2 x i64>, <2 x i64>* %413, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %365) #12
  store <2 x i64> %414, <2 x i64>* %12, align 16
  %415 = call zeroext i1 @_ZN3net14ParseNameValueERKNS_3der5InputEPNSt3__16vectorINS5_INS_17X509NameAttributeENS4_9allocatorIS6_EEEENS7_IS9_EEEE(%"class.net::der::Input"* nonnull dereferenceable(16) %13, %"class.std::__1::vector.253"* nonnull %20) #12
  br i1 %415, label %416, label %440

416:                                              ; preds = %411
  %417 = load %"class.std::__1::vector.255"*, %"class.std::__1::vector.255"** %363, align 8
  %418 = load %"class.std::__1::vector.255"*, %"class.std::__1::vector.255"** %364, align 8
  %419 = icmp eq %"class.std::__1::vector.255"* %417, %418
  br i1 %419, label %440, label %420

420:                                              ; preds = %416, %437
  %421 = phi %"class.std::__1::vector.255"* [ %438, %437 ], [ %417, %416 ]
  %422 = getelementptr inbounds %"class.std::__1::vector.255", %"class.std::__1::vector.255"* %421, i64 0, i32 0, i32 0
  %423 = load %"struct.net::X509NameAttribute"*, %"struct.net::X509NameAttribute"** %422, align 8
  %424 = getelementptr inbounds %"class.std::__1::vector.255", %"class.std::__1::vector.255"* %421, i64 0, i32 0, i32 1
  %425 = load %"struct.net::X509NameAttribute"*, %"struct.net::X509NameAttribute"** %424, align 8
  %426 = icmp eq %"struct.net::X509NameAttribute"* %423, %425
  br i1 %426, label %437, label %429

427:                                              ; preds = %429
  %428 = icmp eq %"struct.net::X509NameAttribute"* %436, %425
  br i1 %428, label %437, label %429

429:                                              ; preds = %420, %427
  %430 = phi %"struct.net::X509NameAttribute"* [ %436, %427 ], [ %423, %420 ]
  %431 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %430, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %366) #12
  %432 = call { i8*, i64 } @_ZN3net23TypeOrganizationNameOidEv() #12
  %433 = extractvalue { i8*, i64 } %432, 0
  store i8* %433, i8** %367, align 8
  %434 = extractvalue { i8*, i64 } %432, 1
  store i64 %434, i64* %368, align 8
  %435 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %431, %"class.net::der::Input"* nonnull dereferenceable(16) %14) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %366) #12
  %436 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %430, i64 1
  br i1 %435, label %440, label %427

437:                                              ; preds = %427, %420
  %438 = getelementptr inbounds %"class.std::__1::vector.255", %"class.std::__1::vector.255"* %421, i64 1
  %439 = icmp eq %"class.std::__1::vector.255"* %438, %418
  br i1 %439, label %440, label %420

440:                                              ; preds = %437, %429, %411, %416
  %441 = phi i32 [ 0, %416 ], [ 0, %411 ], [ 1, %429 ], [ 0, %437 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %365) #12
  %442 = load %"class.std::__1::vector.255"*, %"class.std::__1::vector.255"** %363, align 8
  %443 = icmp eq %"class.std::__1::vector.255"* %442, null
  br i1 %443, label %465, label %444

444:                                              ; preds = %440
  %445 = bitcast %"class.std::__1::vector.255"* %442 to i8*
  %446 = load %"class.std::__1::vector.255"*, %"class.std::__1::vector.255"** %364, align 8
  %447 = icmp eq %"class.std::__1::vector.255"* %446, %442
  br i1 %447, label %463, label %448

448:                                              ; preds = %444, %459
  %449 = phi %"class.std::__1::vector.255"* [ %450, %459 ], [ %446, %444 ]
  %450 = getelementptr inbounds %"class.std::__1::vector.255", %"class.std::__1::vector.255"* %449, i64 -1
  %451 = getelementptr inbounds %"class.std::__1::vector.255", %"class.std::__1::vector.255"* %450, i64 0, i32 0, i32 0
  %452 = load %"struct.net::X509NameAttribute"*, %"struct.net::X509NameAttribute"** %451, align 8
  %453 = icmp eq %"struct.net::X509NameAttribute"* %452, null
  br i1 %453, label %459, label %454

454:                                              ; preds = %448
  %455 = ptrtoint %"struct.net::X509NameAttribute"* %452 to i64
  %456 = getelementptr inbounds %"class.std::__1::vector.255", %"class.std::__1::vector.255"* %449, i64 -1, i32 0, i32 1
  %457 = bitcast %"struct.net::X509NameAttribute"** %456 to i64*
  store i64 %455, i64* %457, align 8
  %458 = bitcast %"struct.net::X509NameAttribute"* %452 to i8*
  call void @_ZdlPv(i8* %458) #11
  br label %459

459:                                              ; preds = %454, %448
  %460 = icmp eq %"class.std::__1::vector.255"* %450, %442
  br i1 %460, label %461, label %448

461:                                              ; preds = %459
  %462 = load i8*, i8** %369, align 8
  br label %463

463:                                              ; preds = %461, %444
  %464 = phi i8* [ %462, %461 ], [ %445, %444 ]
  store %"class.std::__1::vector.255"* %442, %"class.std::__1::vector.255"** %364, align 8
  call void @_ZdlPv(i8* %464) #11
  br label %465

465:                                              ; preds = %463, %440
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %362) #12
  %466 = icmp eq i32 %441, 0
  %467 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %412, i64 1
  br i1 %466, label %409, label %720

468:                                              ; preds = %409, %403, %399
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %370) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %370, i8 0, i64 24, i1 false) #12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %373) #12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %374) #12
  %469 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %397, i64 0, i32 8
  call void @_ZN3net3der5InputC1EPKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.net::der::Input"* nonnull %11, %"class.std::__1::basic_string"* %469) #12
  %470 = load <2 x i64>, <2 x i64>* %10, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %374) #12
  store <2 x i64> %470, <2 x i64>* %22, align 16
  %471 = call zeroext i1 @_ZN3net14ParseNameValueERKNS_3der5InputEPNSt3__16vectorINS5_INS_17X509NameAttributeENS4_9allocatorIS6_EEEENS7_IS9_EEEE(%"class.net::der::Input"* nonnull dereferenceable(16) %23, %"class.std::__1::vector.253"* nonnull %21) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %373) #12
  br i1 %471, label %472, label %694

472:                                              ; preds = %468
  %473 = load i64, i64* %375, align 8
  %474 = load %"class.std::__1::vector.255"*, %"class.std::__1::vector.255"** %321, align 8
  %475 = inttoptr i64 %473 to %"class.std::__1::vector.255"*
  %476 = icmp eq %"class.std::__1::vector.255"* %474, %475
  br i1 %476, label %517, label %477

477:                                              ; preds = %472
  %478 = inttoptr i64 %473 to i64*
  br label %479

479:                                              ; preds = %512, %477
  %480 = phi i64* [ %478, %477 ], [ %514, %512 ]
  %481 = phi i64 [ %473, %477 ], [ %513, %512 ]
  %482 = phi %"class.std::__1::vector.255"* [ %475, %477 ], [ %510, %512 ]
  %483 = load i64, i64* %480, align 8
  %484 = inttoptr i64 %483 to %"struct.net::X509NameAttribute"*
  %485 = getelementptr inbounds %"class.std::__1::vector.255", %"class.std::__1::vector.255"* %482, i64 0, i32 0, i32 1
  %486 = load %"struct.net::X509NameAttribute"*, %"struct.net::X509NameAttribute"** %485, align 8
  %487 = icmp eq %"struct.net::X509NameAttribute"* %486, %484
  br i1 %487, label %507, label %488

488:                                              ; preds = %479
  %489 = inttoptr i64 %481 to %"class.std::__1::vector.255"*
  %490 = getelementptr inbounds %"class.std::__1::vector.255", %"class.std::__1::vector.255"* %489, i64 0, i32 0, i32 1
  br label %491

491:                                              ; preds = %499, %488
  %492 = phi i64 [ %502, %499 ], [ %483, %488 ]
  %493 = phi %"struct.net::X509NameAttribute"* [ %501, %499 ], [ %484, %488 ]
  %494 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %493, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %376) #12
  %495 = call { i8*, i64 } @_ZN3net23TypeOrganizationNameOidEv() #12
  %496 = extractvalue { i8*, i64 } %495, 0
  store i8* %496, i8** %377, align 8
  %497 = extractvalue { i8*, i64 } %495, 1
  store i64 %497, i64* %378, align 8
  %498 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %494, %"class.net::der::Input"* nonnull dereferenceable(16) %15) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %376) #12
  br i1 %498, label %517, label %499

499:                                              ; preds = %491
  %500 = inttoptr i64 %492 to %"struct.net::X509NameAttribute"*
  %501 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %500, i64 1
  %502 = ptrtoint %"struct.net::X509NameAttribute"* %501 to i64
  %503 = load %"struct.net::X509NameAttribute"*, %"struct.net::X509NameAttribute"** %490, align 8
  %504 = icmp eq %"struct.net::X509NameAttribute"* %501, %503
  br i1 %504, label %505, label %491

505:                                              ; preds = %499
  %506 = ptrtoint %"struct.net::X509NameAttribute"* %501 to i64
  br label %507

507:                                              ; preds = %505, %479
  %508 = phi i64 [ %483, %479 ], [ %506, %505 ]
  %509 = phi %"class.std::__1::vector.255"* [ %482, %479 ], [ %489, %505 ]
  %510 = getelementptr inbounds %"class.std::__1::vector.255", %"class.std::__1::vector.255"* %509, i64 1
  %511 = icmp eq %"class.std::__1::vector.255"* %510, %474
  br i1 %511, label %515, label %512

512:                                              ; preds = %507
  %513 = ptrtoint %"class.std::__1::vector.255"* %510 to i64
  %514 = bitcast %"class.std::__1::vector.255"* %510 to i64*
  br label %479

515:                                              ; preds = %507
  %516 = ptrtoint %"class.std::__1::vector.255"* %474 to i64
  br label %517

517:                                              ; preds = %491, %515, %472
  %518 = phi i64 [ 0, %472 ], [ %508, %515 ], [ %492, %491 ]
  %519 = phi i64 [ %473, %472 ], [ %516, %515 ], [ %481, %491 ]
  %520 = load i64, i64* %379, align 8
  %521 = load %"class.std::__1::vector.255"*, %"class.std::__1::vector.255"** %372, align 8
  %522 = inttoptr i64 %520 to %"class.std::__1::vector.255"*
  %523 = icmp eq %"class.std::__1::vector.255"* %521, %522
  br i1 %523, label %566, label %524

524:                                              ; preds = %517
  %525 = inttoptr i64 %520 to i64*
  br label %526

526:                                              ; preds = %559, %524
  %527 = phi i64* [ %525, %524 ], [ %561, %559 ]
  %528 = phi i64 [ %520, %524 ], [ %560, %559 ]
  %529 = phi %"class.std::__1::vector.255"* [ %522, %524 ], [ %557, %559 ]
  %530 = load i64, i64* %527, align 8
  %531 = inttoptr i64 %530 to %"struct.net::X509NameAttribute"*
  %532 = getelementptr inbounds %"class.std::__1::vector.255", %"class.std::__1::vector.255"* %529, i64 0, i32 0, i32 1
  %533 = load %"struct.net::X509NameAttribute"*, %"struct.net::X509NameAttribute"** %532, align 8
  %534 = icmp eq %"struct.net::X509NameAttribute"* %533, %531
  br i1 %534, label %554, label %535

535:                                              ; preds = %526
  %536 = inttoptr i64 %528 to %"class.std::__1::vector.255"*
  %537 = getelementptr inbounds %"class.std::__1::vector.255", %"class.std::__1::vector.255"* %536, i64 0, i32 0, i32 1
  br label %538

538:                                              ; preds = %546, %535
  %539 = phi i64 [ %549, %546 ], [ %530, %535 ]
  %540 = phi %"struct.net::X509NameAttribute"* [ %548, %546 ], [ %531, %535 ]
  %541 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %540, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %380) #12
  %542 = call { i8*, i64 } @_ZN3net23TypeOrganizationNameOidEv() #12
  %543 = extractvalue { i8*, i64 } %542, 0
  store i8* %543, i8** %381, align 8
  %544 = extractvalue { i8*, i64 } %542, 1
  store i64 %544, i64* %382, align 8
  %545 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %541, %"class.net::der::Input"* nonnull dereferenceable(16) %16) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %380) #12
  br i1 %545, label %564, label %546

546:                                              ; preds = %538
  %547 = inttoptr i64 %539 to %"struct.net::X509NameAttribute"*
  %548 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %547, i64 1
  %549 = ptrtoint %"struct.net::X509NameAttribute"* %548 to i64
  %550 = load %"struct.net::X509NameAttribute"*, %"struct.net::X509NameAttribute"** %537, align 8
  %551 = icmp eq %"struct.net::X509NameAttribute"* %548, %550
  br i1 %551, label %552, label %538

552:                                              ; preds = %546
  %553 = ptrtoint %"struct.net::X509NameAttribute"* %548 to i64
  br label %554

554:                                              ; preds = %552, %526
  %555 = phi i64 [ %530, %526 ], [ %553, %552 ]
  %556 = phi %"class.std::__1::vector.255"* [ %529, %526 ], [ %536, %552 ]
  %557 = getelementptr inbounds %"class.std::__1::vector.255", %"class.std::__1::vector.255"* %556, i64 1
  %558 = icmp eq %"class.std::__1::vector.255"* %557, %521
  br i1 %558, label %562, label %559

559:                                              ; preds = %554
  %560 = ptrtoint %"class.std::__1::vector.255"* %557 to i64
  %561 = bitcast %"class.std::__1::vector.255"* %557 to i64*
  br label %526

562:                                              ; preds = %554
  %563 = ptrtoint %"class.std::__1::vector.255"* %521 to i64
  br label %566

564:                                              ; preds = %538
  %565 = inttoptr i64 %528 to %"class.std::__1::vector.255"*
  br label %566

566:                                              ; preds = %564, %562, %517
  %567 = phi %"class.std::__1::vector.255"* [ %521, %562 ], [ %521, %517 ], [ %565, %564 ]
  %568 = phi i64 [ %555, %562 ], [ 0, %517 ], [ %539, %564 ]
  %569 = phi i64 [ %563, %562 ], [ %520, %517 ], [ %528, %564 ]
  %570 = inttoptr i64 %519 to %"class.std::__1::vector.255"*
  %571 = icmp eq %"class.std::__1::vector.255"* %474, %570
  %572 = icmp ne %"class.std::__1::vector.255"* %521, %567
  br i1 %571, label %691, label %573

573:                                              ; preds = %566
  %574 = ptrtoint %"class.std::__1::vector.255"* %474 to i64
  %575 = ptrtoint %"class.std::__1::vector.255"* %521 to i64
  br label %576

576:                                              ; preds = %684, %573
  %577 = phi i1 [ %572, %573 ], [ %690, %684 ]
  %578 = phi %"class.std::__1::vector.255"* [ %567, %573 ], [ %689, %684 ]
  %579 = phi %"class.std::__1::vector.255"* [ %570, %573 ], [ %687, %684 ]
  %580 = phi i64 [ %569, %573 ], [ %686, %684 ]
  %581 = phi i64 [ %568, %573 ], [ %685, %684 ]
  %582 = phi i64 [ %519, %573 ], [ %643, %684 ]
  %583 = phi i64 [ %518, %573 ], [ %642, %684 ]
  br i1 %577, label %584, label %694

584:                                              ; preds = %576
  %585 = inttoptr i64 %583 to %"struct.net::X509NameAttribute"*
  %586 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %585, i64 0, i32 0
  %587 = inttoptr i64 %581 to %"struct.net::X509NameAttribute"*
  %588 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %587, i64 0, i32 0
  %589 = call zeroext i1 @_ZN3net3derneERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %586, %"class.net::der::Input"* dereferenceable(16) %588) #12
  br i1 %589, label %694, label %590

590:                                              ; preds = %584
  %591 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %585, i64 0, i32 1
  %592 = load i32, i32* %591, align 8
  %593 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %587, i64 0, i32 1
  %594 = load i32, i32* %593, align 8
  %595 = icmp eq i32 %592, %594
  br i1 %595, label %596, label %694

596:                                              ; preds = %590
  %597 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %585, i64 0, i32 2
  %598 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %587, i64 0, i32 2
  %599 = call zeroext i1 @_ZN3net3derneERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %597, %"class.net::der::Input"* dereferenceable(16) %598) #12
  br i1 %599, label %694, label %600

600:                                              ; preds = %596
  %601 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %585, i64 1
  %602 = ptrtoint %"struct.net::X509NameAttribute"* %601 to i64
  %603 = icmp eq %"class.std::__1::vector.255"* %474, %579
  br i1 %603, label %641, label %604

604:                                              ; preds = %600, %636
  %605 = phi i64 [ %639, %636 ], [ %602, %600 ]
  %606 = phi i64 [ %637, %636 ], [ %582, %600 ]
  %607 = phi %"struct.net::X509NameAttribute"* [ %640, %636 ], [ %601, %600 ]
  %608 = phi %"class.std::__1::vector.255"* [ %634, %636 ], [ %579, %600 ]
  %609 = getelementptr inbounds %"class.std::__1::vector.255", %"class.std::__1::vector.255"* %608, i64 0, i32 0, i32 1
  %610 = load %"struct.net::X509NameAttribute"*, %"struct.net::X509NameAttribute"** %609, align 8
  %611 = icmp eq %"struct.net::X509NameAttribute"* %607, %610
  br i1 %611, label %631, label %612

612:                                              ; preds = %604
  %613 = inttoptr i64 %606 to %"class.std::__1::vector.255"*
  %614 = getelementptr inbounds %"class.std::__1::vector.255", %"class.std::__1::vector.255"* %613, i64 0, i32 0, i32 1
  br label %615

615:                                              ; preds = %623, %612
  %616 = phi i64 [ %626, %623 ], [ %605, %612 ]
  %617 = phi %"struct.net::X509NameAttribute"* [ %625, %623 ], [ %607, %612 ]
  %618 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %617, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %383) #12
  %619 = call { i8*, i64 } @_ZN3net23TypeOrganizationNameOidEv() #12
  %620 = extractvalue { i8*, i64 } %619, 0
  store i8* %620, i8** %384, align 8
  %621 = extractvalue { i8*, i64 } %619, 1
  store i64 %621, i64* %385, align 8
  %622 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %618, %"class.net::der::Input"* nonnull dereferenceable(16) %17) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %383) #12
  br i1 %622, label %641, label %623

623:                                              ; preds = %615
  %624 = inttoptr i64 %616 to %"struct.net::X509NameAttribute"*
  %625 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %624, i64 1
  %626 = ptrtoint %"struct.net::X509NameAttribute"* %625 to i64
  %627 = load %"struct.net::X509NameAttribute"*, %"struct.net::X509NameAttribute"** %614, align 8
  %628 = icmp eq %"struct.net::X509NameAttribute"* %625, %627
  br i1 %628, label %629, label %615

629:                                              ; preds = %623
  %630 = ptrtoint %"struct.net::X509NameAttribute"* %625 to i64
  br label %631

631:                                              ; preds = %629, %604
  %632 = phi i64 [ %605, %604 ], [ %630, %629 ]
  %633 = phi %"class.std::__1::vector.255"* [ %608, %604 ], [ %613, %629 ]
  %634 = getelementptr inbounds %"class.std::__1::vector.255", %"class.std::__1::vector.255"* %633, i64 1
  %635 = icmp eq %"class.std::__1::vector.255"* %634, %474
  br i1 %635, label %641, label %636

636:                                              ; preds = %631
  %637 = ptrtoint %"class.std::__1::vector.255"* %634 to i64
  %638 = bitcast %"class.std::__1::vector.255"* %634 to i64*
  %639 = load i64, i64* %638, align 8
  %640 = inttoptr i64 %639 to %"struct.net::X509NameAttribute"*
  br label %604

641:                                              ; preds = %631, %615, %600
  %642 = phi i64 [ %602, %600 ], [ %616, %615 ], [ %632, %631 ]
  %643 = phi i64 [ %582, %600 ], [ %606, %615 ], [ %574, %631 ]
  %644 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %587, i64 1
  %645 = ptrtoint %"struct.net::X509NameAttribute"* %644 to i64
  %646 = icmp eq %"class.std::__1::vector.255"* %521, %578
  br i1 %646, label %684, label %647

647:                                              ; preds = %641, %679
  %648 = phi i64 [ %682, %679 ], [ %645, %641 ]
  %649 = phi i64 [ %680, %679 ], [ %580, %641 ]
  %650 = phi %"struct.net::X509NameAttribute"* [ %683, %679 ], [ %644, %641 ]
  %651 = phi %"class.std::__1::vector.255"* [ %677, %679 ], [ %578, %641 ]
  %652 = getelementptr inbounds %"class.std::__1::vector.255", %"class.std::__1::vector.255"* %651, i64 0, i32 0, i32 1
  %653 = load %"struct.net::X509NameAttribute"*, %"struct.net::X509NameAttribute"** %652, align 8
  %654 = icmp eq %"struct.net::X509NameAttribute"* %650, %653
  br i1 %654, label %674, label %655

655:                                              ; preds = %647
  %656 = inttoptr i64 %649 to %"class.std::__1::vector.255"*
  %657 = getelementptr inbounds %"class.std::__1::vector.255", %"class.std::__1::vector.255"* %656, i64 0, i32 0, i32 1
  br label %658

658:                                              ; preds = %666, %655
  %659 = phi i64 [ %669, %666 ], [ %648, %655 ]
  %660 = phi %"struct.net::X509NameAttribute"* [ %668, %666 ], [ %650, %655 ]
  %661 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %660, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %386) #12
  %662 = call { i8*, i64 } @_ZN3net23TypeOrganizationNameOidEv() #12
  %663 = extractvalue { i8*, i64 } %662, 0
  store i8* %663, i8** %387, align 8
  %664 = extractvalue { i8*, i64 } %662, 1
  store i64 %664, i64* %388, align 8
  %665 = call zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %661, %"class.net::der::Input"* nonnull dereferenceable(16) %18) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %386) #12
  br i1 %665, label %684, label %666

666:                                              ; preds = %658
  %667 = inttoptr i64 %659 to %"struct.net::X509NameAttribute"*
  %668 = getelementptr inbounds %"struct.net::X509NameAttribute", %"struct.net::X509NameAttribute"* %667, i64 1
  %669 = ptrtoint %"struct.net::X509NameAttribute"* %668 to i64
  %670 = load %"struct.net::X509NameAttribute"*, %"struct.net::X509NameAttribute"** %657, align 8
  %671 = icmp eq %"struct.net::X509NameAttribute"* %668, %670
  br i1 %671, label %672, label %658

672:                                              ; preds = %666
  %673 = ptrtoint %"struct.net::X509NameAttribute"* %668 to i64
  br label %674

674:                                              ; preds = %672, %647
  %675 = phi i64 [ %648, %647 ], [ %673, %672 ]
  %676 = phi %"class.std::__1::vector.255"* [ %651, %647 ], [ %656, %672 ]
  %677 = getelementptr inbounds %"class.std::__1::vector.255", %"class.std::__1::vector.255"* %676, i64 1
  %678 = icmp eq %"class.std::__1::vector.255"* %677, %521
  br i1 %678, label %684, label %679

679:                                              ; preds = %674
  %680 = ptrtoint %"class.std::__1::vector.255"* %677 to i64
  %681 = bitcast %"class.std::__1::vector.255"* %677 to i64*
  %682 = load i64, i64* %681, align 8
  %683 = inttoptr i64 %682 to %"struct.net::X509NameAttribute"*
  br label %647

684:                                              ; preds = %674, %658, %641
  %685 = phi i64 [ %645, %641 ], [ %659, %658 ], [ %675, %674 ]
  %686 = phi i64 [ %580, %641 ], [ %649, %658 ], [ %575, %674 ]
  %687 = inttoptr i64 %643 to %"class.std::__1::vector.255"*
  %688 = icmp eq %"class.std::__1::vector.255"* %474, %687
  %689 = inttoptr i64 %686 to %"class.std::__1::vector.255"*
  %690 = icmp ne %"class.std::__1::vector.255"* %521, %689
  br i1 %688, label %691, label %576

691:                                              ; preds = %684, %566
  %692 = phi i1 [ %572, %566 ], [ %690, %684 ]
  %693 = xor i1 %692, true
  br label %694

694:                                              ; preds = %596, %590, %584, %576, %691, %468
  %695 = phi i1 [ false, %468 ], [ %693, %691 ], [ false, %576 ], [ false, %584 ], [ false, %590 ], [ false, %596 ]
  %696 = load %"class.std::__1::vector.255"*, %"class.std::__1::vector.255"** %371, align 8
  %697 = icmp eq %"class.std::__1::vector.255"* %696, null
  br i1 %697, label %719, label %698

698:                                              ; preds = %694
  %699 = bitcast %"class.std::__1::vector.255"* %696 to i8*
  %700 = load %"class.std::__1::vector.255"*, %"class.std::__1::vector.255"** %372, align 8
  %701 = icmp eq %"class.std::__1::vector.255"* %700, %696
  br i1 %701, label %717, label %702

702:                                              ; preds = %698, %713
  %703 = phi %"class.std::__1::vector.255"* [ %704, %713 ], [ %700, %698 ]
  %704 = getelementptr inbounds %"class.std::__1::vector.255", %"class.std::__1::vector.255"* %703, i64 -1
  %705 = getelementptr inbounds %"class.std::__1::vector.255", %"class.std::__1::vector.255"* %704, i64 0, i32 0, i32 0
  %706 = load %"struct.net::X509NameAttribute"*, %"struct.net::X509NameAttribute"** %705, align 8
  %707 = icmp eq %"struct.net::X509NameAttribute"* %706, null
  br i1 %707, label %713, label %708

708:                                              ; preds = %702
  %709 = ptrtoint %"struct.net::X509NameAttribute"* %706 to i64
  %710 = getelementptr inbounds %"class.std::__1::vector.255", %"class.std::__1::vector.255"* %703, i64 -1, i32 0, i32 1
  %711 = bitcast %"struct.net::X509NameAttribute"** %710 to i64*
  store i64 %709, i64* %711, align 8
  %712 = bitcast %"struct.net::X509NameAttribute"* %706 to i8*
  call void @_ZdlPv(i8* %712) #11
  br label %713

713:                                              ; preds = %708, %702
  %714 = icmp eq %"class.std::__1::vector.255"* %704, %696
  br i1 %714, label %715, label %702

715:                                              ; preds = %713
  %716 = load i8*, i8** %389, align 8
  br label %717

717:                                              ; preds = %715, %698
  %718 = phi i8* [ %716, %715 ], [ %699, %698 ]
  store %"class.std::__1::vector.255"* %696, %"class.std::__1::vector.255"** %372, align 8
  call void @_ZdlPv(i8* %718) #11
  br label %719

719:                                              ; preds = %717, %694
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %370) #12
  br label %720

720:                                              ; preds = %465, %719
  %721 = phi i1 [ %695, %719 ], [ true, %465 ]
  %722 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %397, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %723 = atomicrmw sub i32* %722, i32 1 acq_rel
  %724 = icmp eq i32 %723, 1
  br i1 %724, label %725, label %727

725:                                              ; preds = %720
  call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %397) #12
  %726 = bitcast %"class.net::ParsedCertificate"* %397 to i8*
  call void @_ZdlPv(i8* %726) #11
  br i1 %721, label %731, label %728

727:                                              ; preds = %720
  br i1 %721, label %731, label %728

728:                                              ; preds = %396, %727, %725
  %729 = getelementptr inbounds %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %391, i64 1
  %730 = icmp eq %struct.crypto_buffer_st** %729, %358
  br i1 %730, label %732, label %390

731:                                              ; preds = %725, %727
  store i8 0, i8* %3, align 1
  br label %732

732:                                              ; preds = %728, %356, %731, %355
  %733 = phi i1 [ false, %355 ], [ true, %731 ], [ false, %356 ], [ false, %728 ]
  %734 = load %"class.std::__1::vector.255"*, %"class.std::__1::vector.255"** %320, align 8
  %735 = icmp eq %"class.std::__1::vector.255"* %734, null
  br i1 %735, label %758, label %736

736:                                              ; preds = %732
  %737 = bitcast %"class.std::__1::vector.255"* %734 to i8*
  %738 = load %"class.std::__1::vector.255"*, %"class.std::__1::vector.255"** %321, align 8
  %739 = icmp eq %"class.std::__1::vector.255"* %738, %734
  br i1 %739, label %756, label %740

740:                                              ; preds = %736, %751
  %741 = phi %"class.std::__1::vector.255"* [ %742, %751 ], [ %738, %736 ]
  %742 = getelementptr inbounds %"class.std::__1::vector.255", %"class.std::__1::vector.255"* %741, i64 -1
  %743 = getelementptr inbounds %"class.std::__1::vector.255", %"class.std::__1::vector.255"* %742, i64 0, i32 0, i32 0
  %744 = load %"struct.net::X509NameAttribute"*, %"struct.net::X509NameAttribute"** %743, align 8
  %745 = icmp eq %"struct.net::X509NameAttribute"* %744, null
  br i1 %745, label %751, label %746

746:                                              ; preds = %740
  %747 = ptrtoint %"struct.net::X509NameAttribute"* %744 to i64
  %748 = getelementptr inbounds %"class.std::__1::vector.255", %"class.std::__1::vector.255"* %741, i64 -1, i32 0, i32 1
  %749 = bitcast %"struct.net::X509NameAttribute"** %748 to i64*
  store i64 %747, i64* %749, align 8
  %750 = bitcast %"struct.net::X509NameAttribute"* %744 to i8*
  call void @_ZdlPv(i8* %750) #11
  br label %751

751:                                              ; preds = %746, %740
  %752 = icmp eq %"class.std::__1::vector.255"* %742, %734
  br i1 %752, label %753, label %740

753:                                              ; preds = %751
  %754 = bitcast %"class.std::__1::vector.253"* %28 to i8**
  %755 = load i8*, i8** %754, align 8
  br label %756

756:                                              ; preds = %753, %736
  %757 = phi i8* [ %755, %753 ], [ %737, %736 ]
  store %"class.std::__1::vector.255"* %734, %"class.std::__1::vector.255"** %321, align 8
  call void @_ZdlPv(i8* %757) #11
  br label %758

758:                                              ; preds = %756, %732
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %319) #12
  %759 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %316, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %760 = atomicrmw sub i32* %759, i32 1 acq_rel
  %761 = icmp eq i32 %760, 1
  br i1 %761, label %762, label %764

762:                                              ; preds = %758
  call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %316) #12
  %763 = bitcast %"class.net::ParsedCertificate"* %316 to i8*
  call void @_ZdlPv(i8* %763) #11
  br label %764

764:                                              ; preds = %314, %758, %762
  %765 = phi i1 [ %733, %762 ], [ %733, %758 ], [ false, %314 ]
  %766 = load %struct.crypto_buffer_st**, %struct.crypto_buffer_st*** %217, align 8
  br label %767

767:                                              ; preds = %764, %229
  %768 = phi %struct.crypto_buffer_st** [ %766, %764 ], [ %231, %229 ]
  %769 = phi i1 [ %765, %764 ], [ false, %229 ]
  %770 = icmp eq %struct.crypto_buffer_st** %768, null
  br i1 %770, label %775, label %771

771:                                              ; preds = %767
  %772 = bitcast %struct.crypto_buffer_st** %768 to i8*
  %773 = ptrtoint %struct.crypto_buffer_st** %768 to i64
  %774 = bitcast %struct.crypto_buffer_st*** %218 to i64*
  store i64 %773, i64* %774, align 8
  call void @_ZdlPv(i8* %772) #11
  br label %775

775:                                              ; preds = %215, %767, %771
  %776 = phi i1 [ %769, %767 ], [ %769, %771 ], [ false, %215 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %216) #12
  br label %777

777:                                              ; preds = %775, %214
  %778 = phi i1 [ true, %214 ], [ %776, %775 ]
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %196) #12
  %779 = load %"class.net::HashValue"*, %"class.net::HashValue"** %82, align 8
  br label %780

780:                                              ; preds = %94, %777
  %781 = phi %"class.net::HashValue"* [ %181, %94 ], [ %779, %777 ]
  %782 = phi i1 [ false, %94 ], [ %778, %777 ]
  %783 = icmp eq %"class.net::HashValue"* %781, null
  br i1 %783, label %788, label %784

784:                                              ; preds = %780
  %785 = ptrtoint %"class.net::HashValue"* %781 to i64
  %786 = bitcast %"class.net::HashValue"** %83 to i64*
  store i64 %785, i64* %786, align 8
  %787 = bitcast %"class.net::HashValue"* %781 to i8*
  call void @_ZdlPv(i8* %787) #11
  br label %788

788:                                              ; preds = %80, %780, %784
  %789 = phi i1 [ %782, %780 ], [ %782, %784 ], [ false, %80 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #12
  br label %790

790:                                              ; preds = %73, %74, %788
  %791 = phi i1 [ %789, %788 ], [ true, %73 ], [ false, %74 ]
  ret i1 %791
}

declare i64 @_ZN4base4Time9UnixEpochEv() local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24certificate_transparency23ChromeRequireCTDelegate16UpdateCTPoliciesERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEESC_SC_SC_(%"class.certificate_transparency::ChromeRequireCTDelegate"*, %"class.std::__1::vector.88"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.88"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.88"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.88"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::vector.106", align 8
  %7 = alloca %"class.std::__1::vector.88", align 8
  %8 = alloca %"class.std::__1::vector.88", align 8
  %9 = tail call i8* @_Znwm(i64 288) #11
  %10 = bitcast i8* %9 to %"class.url_matcher::URLMatcher"*
  tail call void @_ZN11url_matcher10URLMatcherC1Ev(%"class.url_matcher::URLMatcher"* nonnull %10) #12
  %11 = ptrtoint i8* %9 to i64
  %12 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.url_matcher::URLMatcher"*, %"class.url_matcher::URLMatcher"** %13, align 8
  %15 = bitcast %"class.std::__1::unique_ptr"* %12 to i64*
  store i64 %11, i64* %15, align 8
  %16 = icmp eq %"class.url_matcher::URLMatcher"* %14, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %5
  tail call void @_ZN11url_matcher10URLMatcherD1Ev(%"class.url_matcher::URLMatcher"* nonnull %14) #12
  %18 = bitcast %"class.url_matcher::URLMatcher"* %14 to i8*
  tail call void @_ZdlPv(i8* %18) #11
  br label %19

19:                                               ; preds = %17, %5
  %20 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 3
  %21 = getelementptr inbounds %"class.std::__1::map.65", %"class.std::__1::map.65"* %20, i64 0, i32 0
  %22 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %23 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.std::__1::__tree_node"**
  %24 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %23, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiN24certificate_transparency23ChromeRequireCTDelegate6FilterEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.66"* %21, %"class.std::__1::__tree_node"* %24) #12
  %25 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %25, align 8
  %26 = getelementptr inbounds %"class.std::__1::map.65", %"class.std::__1::map.65"* %20, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %22, %"class.std::__1::__tree_end_node"** %26, align 8
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %27, align 8
  %28 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 2
  store i32 0, i32* %28, align 8
  %29 = bitcast %"class.std::__1::vector.106"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #12
  %30 = getelementptr inbounds %"class.std::__1::vector.106", %"class.std::__1::vector.106"* %6, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::vector.106", %"class.std::__1::vector.106"* %6, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 24, i1 false) #12
  call void @_ZN24certificate_transparency23ChromeRequireCTDelegate10AddFiltersEbRKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEPNS2_I13scoped_refptrIN11url_matcher22URLMatcherConditionSetEENS6_ISG_EEEE(%"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i1 zeroext true, %"class.std::__1::vector.88"* dereferenceable(24) %1, %"class.std::__1::vector.106"* nonnull %6)
  call void @_ZN24certificate_transparency23ChromeRequireCTDelegate10AddFiltersEbRKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEPNS2_I13scoped_refptrIN11url_matcher22URLMatcherConditionSetEENS6_ISG_EEEE(%"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i1 zeroext false, %"class.std::__1::vector.88"* dereferenceable(24) %2, %"class.std::__1::vector.106"* nonnull %6)
  %32 = load %"class.url_matcher::URLMatcher"*, %"class.url_matcher::URLMatcher"** %13, align 8
  call void @_ZN11url_matcher10URLMatcher16AddConditionSetsERKNSt3__16vectorI13scoped_refptrINS_22URLMatcherConditionSetEENS1_9allocatorIS5_EEEE(%"class.url_matcher::URLMatcher"* %32, %"class.std::__1::vector.106"* nonnull dereferenceable(24) %6) #12
  %33 = bitcast %"class.std::__1::vector.88"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 24, i1 false) #12
  %34 = getelementptr inbounds %"class.std::__1::vector.88", %"class.std::__1::vector.88"* %3, i64 0, i32 0, i32 1
  %35 = bitcast %"class.std::__1::basic_string"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.std::__1::vector.88"* %3 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = sdiv exact i64 %39, 24
  %41 = icmp eq i64 %39, 0
  %42 = inttoptr i64 %38 to %"class.std::__1::basic_string"*
  %43 = inttoptr i64 %36 to %"class.std::__1::basic_string"*
  br i1 %41, label %82, label %44

44:                                               ; preds = %19
  %45 = icmp ugt i64 %40, 768614336404564650
  br i1 %45, label %46, label %48

46:                                               ; preds = %44
  %47 = bitcast %"class.std::__1::vector.88"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %47) #13
  unreachable

48:                                               ; preds = %44
  %49 = call i8* @_Znwm(i64 %39) #11
  %50 = bitcast i8* %49 to %"class.std::__1::basic_string"*
  %51 = getelementptr inbounds %"class.std::__1::vector.88", %"class.std::__1::vector.88"* %7, i64 0, i32 0, i32 1
  %52 = bitcast %"class.std::__1::basic_string"** %51 to i8**
  store i8* %49, i8** %52, align 8
  %53 = bitcast %"class.std::__1::vector.88"* %7 to i8**
  store i8* %49, i8** %53, align 8
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %50, i64 %40
  %55 = getelementptr inbounds %"class.std::__1::vector.88", %"class.std::__1::vector.88"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %54, %"class.std::__1::basic_string"** %55, align 8
  %56 = bitcast %"class.std::__1::basic_string"** %51 to i64*
  %57 = ptrtoint i8* %49 to i64
  %58 = icmp eq %"class.std::__1::basic_string"* %42, %43
  br i1 %58, label %80, label %59

59:                                               ; preds = %48, %74
  %60 = phi %"class.std::__1::basic_string"* [ %76, %74 ], [ %50, %48 ]
  %61 = phi %"class.std::__1::basic_string"* [ %75, %74 ], [ %42, %48 ]
  %62 = bitcast %"class.std::__1::basic_string"* %61 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %59
  %67 = bitcast %"class.std::__1::basic_string"* %60 to i8*
  %68 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 24, i1 false) #12
  br label %74

69:                                               ; preds = %59
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %73 = load i64, i64* %72, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %60, i8* %71, i64 %73) #12
  br label %74

74:                                               ; preds = %69, %66
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 1
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 1
  %77 = icmp eq %"class.std::__1::basic_string"* %75, %43
  br i1 %77, label %78, label %59

78:                                               ; preds = %74
  %79 = ptrtoint %"class.std::__1::basic_string"* %76 to i64
  br label %80

80:                                               ; preds = %78, %48
  %81 = phi i64 [ %57, %48 ], [ %79, %78 ]
  store i64 %81, i64* %56, align 8
  br label %82

82:                                               ; preds = %19, %80
  %83 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 4
  call void @_ZNK24certificate_transparency23ChromeRequireCTDelegate15ParseSpkiHashesENSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEPNS2_IN3net9HashValueENS6_ISC_EEEE(%"class.certificate_transparency::ChromeRequireCTDelegate"* undef, %"class.std::__1::vector.88"* nonnull %7, %"class.std::__1::vector.74"* %83)
  %84 = getelementptr inbounds %"class.std::__1::vector.88", %"class.std::__1::vector.88"* %7, i64 0, i32 0, i32 0
  %85 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %84, align 8
  %86 = icmp eq %"class.std::__1::basic_string"* %85, null
  br i1 %86, label %109, label %87

87:                                               ; preds = %82
  %88 = bitcast %"class.std::__1::basic_string"* %85 to i8*
  %89 = getelementptr inbounds %"class.std::__1::vector.88", %"class.std::__1::vector.88"* %7, i64 0, i32 0, i32 1
  %90 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %89, align 8
  %91 = icmp eq %"class.std::__1::basic_string"* %90, %85
  br i1 %91, label %107, label %92

92:                                               ; preds = %87, %102
  %93 = phi %"class.std::__1::basic_string"* [ %94, %102 ], [ %90, %87 ]
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %93, i64 -1
  %95 = bitcast %"class.std::__1::basic_string"* %94 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  %97 = load i8, i8* %96, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %92
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  call void @_ZdlPv(i8* %101) #11
  br label %102

102:                                              ; preds = %99, %92
  %103 = icmp eq %"class.std::__1::basic_string"* %94, %85
  br i1 %103, label %104, label %92

104:                                              ; preds = %102
  %105 = bitcast %"class.std::__1::vector.88"* %7 to i8**
  %106 = load i8*, i8** %105, align 8
  br label %107

107:                                              ; preds = %104, %87
  %108 = phi i8* [ %106, %104 ], [ %88, %87 ]
  store %"class.std::__1::basic_string"* %85, %"class.std::__1::basic_string"** %89, align 8
  call void @_ZdlPv(i8* %108) #11
  br label %109

109:                                              ; preds = %82, %107
  %110 = bitcast %"class.std::__1::vector.88"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %110, i8 0, i64 24, i1 false) #12
  %111 = getelementptr inbounds %"class.std::__1::vector.88", %"class.std::__1::vector.88"* %4, i64 0, i32 0, i32 1
  %112 = bitcast %"class.std::__1::basic_string"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.std::__1::vector.88"* %4 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = sub i64 %113, %115
  %117 = sdiv exact i64 %116, 24
  %118 = icmp eq i64 %116, 0
  %119 = inttoptr i64 %115 to %"class.std::__1::basic_string"*
  %120 = inttoptr i64 %113 to %"class.std::__1::basic_string"*
  br i1 %118, label %159, label %121

121:                                              ; preds = %109
  %122 = icmp ugt i64 %117, 768614336404564650
  br i1 %122, label %123, label %125

123:                                              ; preds = %121
  %124 = bitcast %"class.std::__1::vector.88"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %124) #13
  unreachable

125:                                              ; preds = %121
  %126 = call i8* @_Znwm(i64 %116) #11
  %127 = bitcast i8* %126 to %"class.std::__1::basic_string"*
  %128 = getelementptr inbounds %"class.std::__1::vector.88", %"class.std::__1::vector.88"* %8, i64 0, i32 0, i32 1
  %129 = bitcast %"class.std::__1::basic_string"** %128 to i8**
  store i8* %126, i8** %129, align 8
  %130 = bitcast %"class.std::__1::vector.88"* %8 to i8**
  store i8* %126, i8** %130, align 8
  %131 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %127, i64 %117
  %132 = getelementptr inbounds %"class.std::__1::vector.88", %"class.std::__1::vector.88"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %131, %"class.std::__1::basic_string"** %132, align 8
  %133 = bitcast %"class.std::__1::basic_string"** %128 to i64*
  %134 = ptrtoint i8* %126 to i64
  %135 = icmp eq %"class.std::__1::basic_string"* %119, %120
  br i1 %135, label %157, label %136

136:                                              ; preds = %125, %151
  %137 = phi %"class.std::__1::basic_string"* [ %153, %151 ], [ %127, %125 ]
  %138 = phi %"class.std::__1::basic_string"* [ %152, %151 ], [ %119, %125 ]
  %139 = bitcast %"class.std::__1::basic_string"* %138 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %140 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %139, i64 0, i32 1, i32 0
  %141 = load i8, i8* %140, align 1
  %142 = icmp slt i8 %141, 0
  br i1 %142, label %146, label %143

143:                                              ; preds = %136
  %144 = bitcast %"class.std::__1::basic_string"* %137 to i8*
  %145 = bitcast %"class.std::__1::basic_string"* %138 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %144, i8* align 8 %145, i64 24, i1 false) #12
  br label %151

146:                                              ; preds = %136
  %147 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %138, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = load i8*, i8** %147, align 8
  %149 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %138, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %150 = load i64, i64* %149, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %137, i8* %148, i64 %150) #12
  br label %151

151:                                              ; preds = %146, %143
  %152 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %138, i64 1
  %153 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %137, i64 1
  %154 = icmp eq %"class.std::__1::basic_string"* %152, %120
  br i1 %154, label %155, label %136

155:                                              ; preds = %151
  %156 = ptrtoint %"class.std::__1::basic_string"* %153 to i64
  br label %157

157:                                              ; preds = %155, %125
  %158 = phi i64 [ %134, %125 ], [ %156, %155 ]
  store i64 %158, i64* %133, align 8
  br label %159

159:                                              ; preds = %109, %157
  %160 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 5
  call void @_ZNK24certificate_transparency23ChromeRequireCTDelegate15ParseSpkiHashesENSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEPNS2_IN3net9HashValueENS6_ISC_EEEE(%"class.certificate_transparency::ChromeRequireCTDelegate"* undef, %"class.std::__1::vector.88"* nonnull %8, %"class.std::__1::vector.74"* %160)
  %161 = getelementptr inbounds %"class.std::__1::vector.88", %"class.std::__1::vector.88"* %8, i64 0, i32 0, i32 0
  %162 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %161, align 8
  %163 = icmp eq %"class.std::__1::basic_string"* %162, null
  br i1 %163, label %186, label %164

164:                                              ; preds = %159
  %165 = bitcast %"class.std::__1::basic_string"* %162 to i8*
  %166 = getelementptr inbounds %"class.std::__1::vector.88", %"class.std::__1::vector.88"* %8, i64 0, i32 0, i32 1
  %167 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %166, align 8
  %168 = icmp eq %"class.std::__1::basic_string"* %167, %162
  br i1 %168, label %184, label %169

169:                                              ; preds = %164, %179
  %170 = phi %"class.std::__1::basic_string"* [ %171, %179 ], [ %167, %164 ]
  %171 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %170, i64 -1
  %172 = bitcast %"class.std::__1::basic_string"* %171 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %173 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %172, i64 0, i32 1, i32 0
  %174 = load i8, i8* %173, align 1
  %175 = icmp slt i8 %174, 0
  br i1 %175, label %176, label %179

176:                                              ; preds = %169
  %177 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %171, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %178 = load i8*, i8** %177, align 8
  call void @_ZdlPv(i8* %178) #11
  br label %179

179:                                              ; preds = %176, %169
  %180 = icmp eq %"class.std::__1::basic_string"* %171, %162
  br i1 %180, label %181, label %169

181:                                              ; preds = %179
  %182 = bitcast %"class.std::__1::vector.88"* %8 to i8**
  %183 = load i8*, i8** %182, align 8
  br label %184

184:                                              ; preds = %181, %164
  %185 = phi i8* [ %183, %181 ], [ %165, %164 ]
  store %"class.std::__1::basic_string"* %162, %"class.std::__1::basic_string"** %166, align 8
  call void @_ZdlPv(i8* %185) #11
  br label %186

186:                                              ; preds = %159, %184
  %187 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %160, i64 0, i32 0, i32 0
  %188 = load %"class.net::HashValue"*, %"class.net::HashValue"** %187, align 8
  %189 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 5, i32 0, i32 1
  %190 = load %"class.net::HashValue"*, %"class.net::HashValue"** %189, align 8
  %191 = icmp eq %"class.net::HashValue"* %188, %190
  br i1 %191, label %198, label %192

192:                                              ; preds = %186, %195
  %193 = phi %"class.net::HashValue"* [ %196, %195 ], [ %188, %186 ]
  %194 = call fastcc zeroext i1 @"_ZZN24certificate_transparency23ChromeRequireCTDelegate16UpdateCTPoliciesERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEESC_SC_SC_ENK3$_0clERKN3net9HashValueE"(%"class.net::HashValue"* dereferenceable(36) %193) #12
  br i1 %194, label %198, label %195

195:                                              ; preds = %192
  %196 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %193, i64 1
  %197 = icmp eq %"class.net::HashValue"* %196, %190
  br i1 %197, label %222, label %192

198:                                              ; preds = %192, %186
  %199 = phi %"class.net::HashValue"* [ %188, %186 ], [ %193, %192 ]
  %200 = icmp eq %"class.net::HashValue"* %199, %190
  br i1 %200, label %222, label %201

201:                                              ; preds = %198
  %202 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %199, i64 1
  %203 = icmp eq %"class.net::HashValue"* %202, %190
  br i1 %203, label %222, label %204

204:                                              ; preds = %201
  %205 = ptrtoint %"class.net::HashValue"* %199 to i64
  br label %206

206:                                              ; preds = %216, %204
  %207 = phi %"class.net::HashValue"* [ %218, %216 ], [ %202, %204 ]
  %208 = phi i64 [ %217, %216 ], [ %205, %204 ]
  %209 = call fastcc zeroext i1 @"_ZZN24certificate_transparency23ChromeRequireCTDelegate16UpdateCTPoliciesERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEESC_SC_SC_ENK3$_0clERKN3net9HashValueE"(%"class.net::HashValue"* dereferenceable(36) %207) #12
  br i1 %209, label %216, label %210

210:                                              ; preds = %206
  %211 = inttoptr i64 %208 to %"class.net::HashValue"*
  %212 = inttoptr i64 %208 to i8*
  %213 = bitcast %"class.net::HashValue"* %207 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %212, i8* align 4 %213, i64 36, i1 false) #12
  %214 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %211, i64 1
  %215 = ptrtoint %"class.net::HashValue"* %214 to i64
  br label %216

216:                                              ; preds = %210, %206
  %217 = phi i64 [ %208, %206 ], [ %215, %210 ]
  %218 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %207, i64 1
  %219 = icmp eq %"class.net::HashValue"* %218, %190
  br i1 %219, label %220, label %206

220:                                              ; preds = %216
  %221 = inttoptr i64 %217 to %"class.net::HashValue"*
  br label %222

222:                                              ; preds = %195, %220, %201, %198
  %223 = phi %"class.net::HashValue"* [ %190, %198 ], [ %199, %201 ], [ %221, %220 ], [ %190, %195 ]
  %224 = load %"class.net::HashValue"*, %"class.net::HashValue"** %189, align 8
  %225 = icmp eq %"class.net::HashValue"* %223, %224
  br i1 %225, label %227, label %226

226:                                              ; preds = %222
  store %"class.net::HashValue"* %223, %"class.net::HashValue"** %189, align 8
  br label %227

227:                                              ; preds = %222, %226
  %228 = load %class.scoped_refptr*, %class.scoped_refptr** %30, align 8
  %229 = icmp eq %class.scoped_refptr* %228, null
  br i1 %229, label %254, label %230

230:                                              ; preds = %227
  %231 = bitcast %class.scoped_refptr* %228 to i8*
  %232 = load %class.scoped_refptr*, %class.scoped_refptr** %31, align 8
  %233 = icmp eq %class.scoped_refptr* %232, %228
  br i1 %233, label %252, label %234

234:                                              ; preds = %230, %247
  %235 = phi %class.scoped_refptr* [ %236, %247 ], [ %232, %230 ]
  %236 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %235, i64 -1
  %237 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %236, i64 0, i32 0
  %238 = load %"class.url_matcher::URLMatcherConditionSet"*, %"class.url_matcher::URLMatcherConditionSet"** %237, align 8
  %239 = icmp eq %"class.url_matcher::URLMatcherConditionSet"* %238, null
  br i1 %239, label %247, label %240

240:                                              ; preds = %234
  %241 = getelementptr inbounds %"class.url_matcher::URLMatcherConditionSet", %"class.url_matcher::URLMatcherConditionSet"* %238, i64 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %241) #12
  %242 = getelementptr inbounds %"class.url_matcher::URLMatcherConditionSet", %"class.url_matcher::URLMatcherConditionSet"* %238, i64 0, i32 0, i32 0, i32 0
  %243 = load i32, i32* %242, align 4
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %245, label %247

245:                                              ; preds = %240
  call void @_ZN11url_matcher22URLMatcherConditionSetD1Ev(%"class.url_matcher::URLMatcherConditionSet"* nonnull %238) #12
  %246 = bitcast %"class.url_matcher::URLMatcherConditionSet"* %238 to i8*
  call void @_ZdlPv(i8* %246) #11
  br label %247

247:                                              ; preds = %245, %240, %234
  %248 = icmp eq %class.scoped_refptr* %236, %228
  br i1 %248, label %249, label %234

249:                                              ; preds = %247
  %250 = bitcast %"class.std::__1::vector.106"* %6 to i8**
  %251 = load i8*, i8** %250, align 8
  br label %252

252:                                              ; preds = %249, %230
  %253 = phi i8* [ %251, %249 ], [ %231, %230 ]
  store %class.scoped_refptr* %228, %class.scoped_refptr** %31, align 8
  call void @_ZdlPv(i8* %253) #11
  br label %254

254:                                              ; preds = %227, %252
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24certificate_transparency23ChromeRequireCTDelegate10AddFiltersEbRKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEPNS2_I13scoped_refptrIN11url_matcher22URLMatcherConditionSetEENS6_ISG_EEEE(%"class.certificate_transparency::ChromeRequireCTDelegate"*, i1 zeroext, %"class.std::__1::vector.88"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.106"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.url::Parsed", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.base::BasicStringPiece", align 8
  %9 = alloca %"class.url::RawCanonOutputT", align 8
  %10 = alloca %"struct.url::CanonHostInfo", align 16
  %11 = alloca %"class.std::__1::set", align 8
  %12 = alloca %"class.url_matcher::URLMatcherCondition", align 8
  %13 = alloca %class.scoped_refptr, align 8
  %14 = zext i1 %1 to i8
  %15 = getelementptr inbounds %"class.std::__1::vector.88", %"class.std::__1::vector.88"* %2, i64 0, i32 0, i32 0
  %16 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector.88", %"class.std::__1::vector.88"* %2, i64 0, i32 0, i32 1
  %18 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %17, align 8
  %19 = icmp eq %"class.std::__1::basic_string"* %16, %18
  br i1 %19, label %76, label %20

20:                                               ; preds = %4
  %21 = bitcast %"struct.url::Parsed"* %5 to i8*
  %22 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 3
  %25 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 3, i32 1
  %26 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = bitcast %"class.base::BasicStringPiece"* %8 to i8*
  %30 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 0
  %31 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 1
  %32 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %24, i64 0, i32 0
  %33 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = bitcast %"class.url::RawCanonOutputT"* %9 to i8*
  %36 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %9, i64 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %9, i64 0, i32 0, i32 1
  %38 = bitcast i8** %37 to i8*
  %39 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %9, i64 0, i32 1, i64 0
  %40 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %9, i64 0, i32 0, i32 2
  %41 = bitcast %"struct.url::CanonHostInfo"* %10 to i8*
  %42 = getelementptr inbounds %"struct.url::CanonHostInfo", %"struct.url::CanonHostInfo"* %10, i64 0, i32 0
  %43 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %9, i64 0, i32 0
  %44 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %45 = bitcast %"class.std::__1::set"* %11 to i8*
  %46 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %11, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %11, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  %49 = bitcast %"class.std::__1::__tree_node_base"** %47 to i8*
  %50 = bitcast %"class.url_matcher::URLMatcherCondition"* %12 to i8*
  %51 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %11, i64 0, i32 0
  %52 = bitcast %class.scoped_refptr* %13 to i8*
  %53 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 2
  %54 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %13, i64 0, i32 0
  %55 = bitcast %class.scoped_refptr* %13 to i8**
  %56 = getelementptr inbounds %"class.std::__1::vector.106", %"class.std::__1::vector.106"* %3, i64 0, i32 0, i32 1
  %57 = getelementptr inbounds %"class.std::__1::vector.106", %"class.std::__1::vector.106"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %58 = bitcast %class.scoped_refptr* %13 to i64*
  %59 = bitcast %class.scoped_refptr** %56 to i64*
  %60 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 3
  %61 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %62 = bitcast %"class.std::__1::__tree_end_node"* %61 to %"class.std::__1::__tree_node"**
  %63 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %64 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %61, i64 0, i32 0
  %65 = getelementptr inbounds %"class.std::__1::map.65", %"class.std::__1::map.65"* %60, i64 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::map.65"* %60 to i64*
  %67 = getelementptr inbounds %"class.certificate_transparency::ChromeRequireCTDelegate", %"class.certificate_transparency::ChromeRequireCTDelegate"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %68 = bitcast %"class.std::__1::__tree_end_node"* %48 to %"class.std::__1::__tree_node.287"**
  %69 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %72 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %73 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %9, i64 0, i32 1, i64 0
  %74 = getelementptr inbounds %"struct.url::CanonHostInfo", %"struct.url::CanonHostInfo"* %10, i64 0, i32 3, i64 0
  %75 = bitcast %"struct.url::CanonHostInfo"* %10 to <4 x i32>*
  br label %77

76:                                               ; preds = %259, %4
  ret void

77:                                               ; preds = %20, %259
  %78 = phi %"class.std::__1::basic_string"* [ %16, %20 ], [ %260, %259 ]
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %21) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 80, i1 false)
  call void @_ZN3url6ParsedC1Ev(%"struct.url::Parsed"* nonnull %5) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 -86, i64 24, i1 false)
  call void @_ZN13url_formatter10SegmentURLERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPN3url6ParsedE(%"class.std::__1::basic_string"* nonnull sret %6, %"class.std::__1::basic_string"* dereferenceable(24) %78, %"struct.url::Parsed"* nonnull %5) #12
  %79 = load i32, i32* %25, align 4
  %80 = icmp sgt i32 %79, 0
  br i1 %80, label %81, label %254

81:                                               ; preds = %77
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #12
  %82 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %82, i64 0, i32 1, i32 0
  %84 = load i8, i8* %83, align 1
  %85 = icmp slt i8 %84, 0
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load i8*, i8** %86, align 8
  %88 = bitcast %"class.std::__1::basic_string"* %78 to i8*
  %89 = select i1 %85, i8* %87, i8* %88
  store i8* %89, i8** %30, align 8
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %91 = load i64, i64* %90, align 8
  %92 = zext i8 %84 to i64
  %93 = select i1 %85, i64 %91, i64 %92
  store i64 %93, i64* %31, align 8
  %94 = load i32, i32* %32, align 8
  %95 = sext i32 %94 to i64
  %96 = sext i32 %79 to i64
  %97 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %8, i64 %95, i64 %96)
  %98 = extractvalue { i8*, i64 } %97, 0
  %99 = extractvalue { i8*, i64 } %97, 1
  call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %7, i8* %98, i64 %99) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #12
  %100 = load i8, i8* %34, align 1
  %101 = icmp slt i8 %100, 0
  %102 = load i64, i64* %28, align 8
  %103 = zext i8 %100 to i64
  %104 = select i1 %101, i64 %102, i64 %103
  %105 = icmp eq i64 %104, 1
  br i1 %105, label %106, label %111

106:                                              ; preds = %81
  %107 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %7, i64 0, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i64 1) #12
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %248, label %109

109:                                              ; preds = %106
  %110 = load i8, i8* %34, align 1
  br label %111

111:                                              ; preds = %109, %81
  %112 = phi i8 [ %110, %109 ], [ %100, %81 ]
  %113 = icmp slt i8 %112, 0
  %114 = load i8*, i8** %27, align 8
  %115 = select i1 %113, i8* %114, i8* %26
  %116 = load i8, i8* %115, align 1
  %117 = icmp eq i8 %116, 46
  br i1 %117, label %118, label %119

118:                                              ; preds = %111
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE26__erase_external_with_moveEmm(%"class.std::__1::basic_string"* nonnull %7, i64 0, i64 1) #12
  br label %142

119:                                              ; preds = %111
  call void @llvm.lifetime.start.p0i8(i64 1048, i8* nonnull %35) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 1024, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 16, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3url15RawCanonOutputTIcLi1024EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  store i8* %39, i8** %37, align 8
  store i32 1024, i32* %40, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %41) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %74, i8 -86, i64 16, i1 false)
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, <4 x i32>* %75, align 16
  %120 = load i8, i8* %83, align 1
  %121 = icmp slt i8 %120, 0
  br i1 %121, label %122, label %124

122:                                              ; preds = %119
  %123 = load i8*, i8** %86, align 8
  br label %124

124:                                              ; preds = %119, %122
  %125 = phi i8* [ %123, %122 ], [ %88, %119 ]
  call void @_ZN3url23CanonicalizeHostVerboseEPKcRKNS_9ComponentEPNS_12CanonOutputTIcEEPNS_13CanonHostInfoE(i8* %125, %"struct.url::Component"* dereferenceable(8) %24, %"class.url::CanonOutputT"* nonnull %43, %"struct.url::CanonHostInfo"* nonnull %10) #12
  %126 = load i32, i32* %42, align 16
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %134

128:                                              ; preds = %124
  %129 = load i8, i8* %34, align 1
  %130 = icmp slt i8 %129, 0
  %131 = load i8*, i8** %27, align 8
  %132 = select i1 %130, i8* %131, i8* %26
  %133 = call i8* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertENS_11__wrap_iterIPKcEEc(%"class.std::__1::basic_string"* nonnull %7, i8* %132, i8 signext 46) #12
  br label %134

134:                                              ; preds = %124, %128
  %135 = phi i8 [ 1, %128 ], [ 0, %124 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %41) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3url15RawCanonOutputTIcLi1024EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %136 = load i8*, i8** %37, align 8
  %137 = icmp eq i8* %136, %39
  %138 = icmp eq i8* %136, null
  %139 = or i1 %137, %138
  br i1 %139, label %141, label %140

140:                                              ; preds = %134
  call void @_ZdaPv(i8* nonnull %136) #11
  br label %141

141:                                              ; preds = %134, %140
  call void @llvm.lifetime.end.p0i8(i64 1048, i8* nonnull %35) #12
  br label %142

142:                                              ; preds = %118, %141
  %143 = phi i8 [ 0, %118 ], [ %135, %141 ]
  %144 = load i8, i8* %34, align 1
  %145 = icmp slt i8 %144, 0
  %146 = load i64, i64* %28, align 8
  %147 = zext i8 %144 to i64
  %148 = select i1 %145, i64 %146, i64 %147
  %149 = load %"class.url_matcher::URLMatcher"*, %"class.url_matcher::URLMatcher"** %44, align 8
  %150 = getelementptr inbounds %"class.url_matcher::URLMatcher", %"class.url_matcher::URLMatcher"* %149, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %48, %"class.std::__1::__tree_end_node"** %46, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #12
  %151 = icmp eq i8 %143, 0
  br i1 %151, label %153, label %152

152:                                              ; preds = %142
  call void @_ZN11url_matcher26URLMatcherConditionFactory25CreateHostSuffixConditionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.url_matcher::URLMatcherCondition"* nonnull sret %12, %"class.url_matcher::URLMatcherConditionFactory"* %150, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #12
  br label %154

153:                                              ; preds = %142
  call void @_ZN11url_matcher26URLMatcherConditionFactory25CreateHostEqualsConditionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.url_matcher::URLMatcherCondition"* nonnull sret %12, %"class.url_matcher::URLMatcherConditionFactory"* %150, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #12
  br label %154

154:                                              ; preds = %153, %152
  %155 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN11url_matcher19URLMatcherConditionENS_4lessIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JS2_EEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.108"* nonnull %51, %"class.url_matcher::URLMatcherCondition"* nonnull dereferenceable(16) %12, %"class.url_matcher::URLMatcherCondition"* nonnull dereferenceable(16) %12) #12
  call void @_ZN11url_matcher19URLMatcherConditionD1Ev(%"class.url_matcher::URLMatcherCondition"* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #12
  %156 = call i8* @_Znwm(i64 72) #11
  %157 = bitcast i8* %156 to %"class.url_matcher::URLMatcherConditionSet"*
  %158 = load i32, i32* %53, align 8
  call void @_ZN11url_matcher22URLMatcherConditionSetC1EiRKNSt3__13setINS_19URLMatcherConditionENS1_4lessIS3_EENS1_9allocatorIS3_EEEE(%"class.url_matcher::URLMatcherConditionSet"* nonnull %157, i32 %158, %"class.std::__1::set"* nonnull dereferenceable(24) %11) #12
  store i8* %156, i8** %55, align 8
  %159 = bitcast i8* %156 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* nonnull %159) #12
  %160 = load %class.scoped_refptr*, %class.scoped_refptr** %56, align 8
  %161 = load %class.scoped_refptr*, %class.scoped_refptr** %57, align 8
  %162 = icmp ult %class.scoped_refptr* %160, %161
  br i1 %162, label %163, label %168

163:                                              ; preds = %154
  %164 = load i64, i64* %58, align 8
  %165 = bitcast %class.scoped_refptr* %160 to i64*
  store i64 %164, i64* %165, align 8
  store %"class.url_matcher::URLMatcherConditionSet"* null, %"class.url_matcher::URLMatcherConditionSet"** %54, align 8
  %166 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %160, i64 1
  %167 = ptrtoint %class.scoped_refptr* %166 to i64
  store i64 %167, i64* %59, align 8
  br label %178

168:                                              ; preds = %154
  call void @_ZNSt3__16vectorI13scoped_refptrIN11url_matcher22URLMatcherConditionSetEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.106"* %3, %class.scoped_refptr* nonnull dereferenceable(8) %13) #12
  %169 = load %"class.url_matcher::URLMatcherConditionSet"*, %"class.url_matcher::URLMatcherConditionSet"** %54, align 8
  %170 = icmp eq %"class.url_matcher::URLMatcherConditionSet"* %169, null
  br i1 %170, label %178, label %171

171:                                              ; preds = %168
  %172 = getelementptr inbounds %"class.url_matcher::URLMatcherConditionSet", %"class.url_matcher::URLMatcherConditionSet"* %169, i64 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %172) #12
  %173 = getelementptr inbounds %"class.url_matcher::URLMatcherConditionSet", %"class.url_matcher::URLMatcherConditionSet"* %169, i64 0, i32 0, i32 0, i32 0
  %174 = load i32, i32* %173, align 4
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %178

176:                                              ; preds = %171
  call void @_ZN11url_matcher22URLMatcherConditionSetD1Ev(%"class.url_matcher::URLMatcherConditionSet"* nonnull %169) #12
  %177 = bitcast %"class.url_matcher::URLMatcherConditionSet"* %169 to i8*
  call void @_ZdlPv(i8* %177) #11
  br label %178

178:                                              ; preds = %163, %168, %171, %176
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #12
  %179 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %62, align 8
  %180 = icmp eq %"class.std::__1::__tree_node"* %179, null
  br i1 %180, label %209, label %181

181:                                              ; preds = %178
  %182 = load i32, i32* %53, align 4
  br label %183

183:                                              ; preds = %205, %181
  %184 = phi %"class.std::__1::__tree_node"* [ %208, %205 ], [ %179, %181 ]
  %185 = phi %"class.std::__1::__tree_node_base"** [ %207, %205 ], [ %63, %181 ]
  %186 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %184, i64 0, i32 1, i32 0, i32 0
  %187 = load i32, i32* %186, align 4
  %188 = icmp slt i32 %182, %187
  br i1 %188, label %189, label %195

189:                                              ; preds = %183
  %190 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %184, i64 0, i32 0, i32 0, i32 0
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %193, label %205

193:                                              ; preds = %189
  %194 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %184, i64 0, i32 0, i32 0
  br label %209

195:                                              ; preds = %183
  %196 = icmp slt i32 %187, %182
  br i1 %196, label %197, label %203

197:                                              ; preds = %195
  %198 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %184, i64 0, i32 0, i32 1
  %199 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %198, align 8
  %200 = icmp eq %"class.std::__1::__tree_node_base"* %199, null
  br i1 %200, label %201, label %205

201:                                              ; preds = %197
  %202 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %184, i64 0, i32 0, i32 0
  br label %209

203:                                              ; preds = %195
  %204 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %184, i64 0, i32 0, i32 0
  br label %209

205:                                              ; preds = %197, %189
  %206 = phi %"class.std::__1::__tree_node_base"* [ %191, %189 ], [ %199, %197 ]
  %207 = phi %"class.std::__1::__tree_node_base"** [ %190, %189 ], [ %198, %197 ]
  %208 = bitcast %"class.std::__1::__tree_node_base"* %206 to %"class.std::__1::__tree_node"*
  br label %183

209:                                              ; preds = %178, %203, %201, %193
  %210 = phi %"class.std::__1::__tree_end_node"* [ %194, %193 ], [ %202, %201 ], [ %204, %203 ], [ %61, %178 ]
  %211 = phi %"class.std::__1::__tree_node_base"** [ %190, %193 ], [ %198, %201 ], [ %185, %203 ], [ %64, %178 ]
  %212 = bitcast %"class.std::__1::__tree_node_base"** %211 to %"class.std::__1::__tree_node"**
  %213 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %212, align 8
  %214 = icmp eq %"class.std::__1::__tree_node"* %213, null
  br i1 %214, label %215, label %238

215:                                              ; preds = %209
  %216 = call i8* @_Znwm(i64 56) #11, !noalias !7
  %217 = getelementptr inbounds i8, i8* %216, i64 32
  %218 = bitcast i8* %217 to i32*
  %219 = load i32, i32* %53, align 4, !noalias !7
  store i32 %219, i32* %218, align 8, !noalias !7
  %220 = getelementptr inbounds i8, i8* %216, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %220, i8 0, i64 16, i1 false) #12, !noalias !7
  %221 = bitcast i8* %216 to %"class.std::__1::__tree_node"*
  %222 = bitcast i8* %216 to %"class.std::__1::__tree_node_base"*
  %223 = getelementptr inbounds i8, i8* %216, i64 16
  %224 = bitcast i8* %223 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %216, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %210, %"class.std::__1::__tree_end_node"** %224, align 8
  %225 = bitcast %"class.std::__1::__tree_node_base"** %211 to i8**
  store i8* %216, i8** %225, align 8
  %226 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %65, align 8
  %227 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %226, i64 0, i32 0
  %228 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %227, align 8
  %229 = icmp eq %"class.std::__1::__tree_node_base"* %228, null
  br i1 %229, label %233, label %230

230:                                              ; preds = %215
  %231 = ptrtoint %"class.std::__1::__tree_node_base"* %228 to i64
  store i64 %231, i64* %66, align 8
  %232 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %211, align 8
  br label %233

233:                                              ; preds = %230, %215
  %234 = phi %"class.std::__1::__tree_node_base"* [ %222, %215 ], [ %232, %230 ]
  %235 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %63, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %235, %"class.std::__1::__tree_node_base"* %234) #12
  %236 = load i64, i64* %67, align 8
  %237 = add i64 %236, 1
  store i64 %237, i64* %67, align 8
  br label %238

238:                                              ; preds = %209, %233
  %239 = phi %"class.std::__1::__tree_node"* [ %221, %233 ], [ %213, %209 ]
  %240 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %239, i64 0, i32 1, i32 0, i32 1, i32 0
  store i8 %14, i8* %240, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %239, i64 0, i32 1, i32 0, i32 1, i32 1
  store i8 %143, i8* %241, align 1
  %242 = bitcast %"class.std::__1::__tree_node"* %239 to i8*
  %243 = getelementptr inbounds i8, i8* %242, i64 42
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %243, i8* nonnull align 2 getelementptr inbounds ({ i8, i8, [6 x i8], i64 }, { i8, i8, [6 x i8], i64 }* @__const._ZN24certificate_transparency23ChromeRequireCTDelegate10AddFiltersEbRKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEPNS2_I13scoped_refptrIN11url_matcher22URLMatcherConditionSetEENS6_ISG_EEEE.filter, i64 0, i32 2, i64 0), i64 6, i1 false)
  %244 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %239, i64 0, i32 1, i32 0, i32 1, i32 2
  store i64 %148, i64* %244, align 8
  %245 = load i32, i32* %53, align 8
  %246 = add nsw i32 %245, 1
  store i32 %246, i32* %53, align 8
  %247 = load %"class.std::__1::__tree_node.287"*, %"class.std::__1::__tree_node.287"** %68, align 8
  call void @_ZNSt3__16__treeIN11url_matcher19URLMatcherConditionENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.108"* nonnull %51, %"class.std::__1::__tree_node.287"* %247) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #12
  br label %248

248:                                              ; preds = %106, %238
  %249 = load i8, i8* %34, align 1
  %250 = icmp slt i8 %249, 0
  br i1 %250, label %251, label %253

251:                                              ; preds = %248
  %252 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %252) #11
  br label %253

253:                                              ; preds = %248, %251
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #12
  br label %254

254:                                              ; preds = %77, %253
  %255 = load i8, i8* %70, align 1
  %256 = icmp slt i8 %255, 0
  br i1 %256, label %257, label %259

257:                                              ; preds = %254
  %258 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %258) #11
  br label %259

259:                                              ; preds = %254, %257
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #12
  call void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %21) #12
  %260 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 1
  %261 = icmp eq %"class.std::__1::basic_string"* %260, %18
  br i1 %261, label %76, label %77
}

declare void @_ZN11url_matcher10URLMatcher16AddConditionSetsERKNSt3__16vectorI13scoped_refptrINS_22URLMatcherConditionSetEENS1_9allocatorIS5_EEEE(%"class.url_matcher::URLMatcher"*, %"class.std::__1::vector.106"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK24certificate_transparency23ChromeRequireCTDelegate15ParseSpkiHashesENSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEPNS2_IN3net9HashValueENS6_ISC_EEEE(%"class.certificate_transparency::ChromeRequireCTDelegate"* nocapture readnone, %"class.std::__1::vector.88"* nocapture readonly, %"class.std::__1::vector.74"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::__less.281", align 1
  %5 = alloca %"class.net::HashValue", align 4
  %6 = bitcast %"class.std::__1::vector.74"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %2, i64 0, i32 0, i32 1
  %9 = bitcast %"class.net::HashValue"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.88", %"class.std::__1::vector.88"* %1, i64 0, i32 0, i32 0
  %11 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector.88", %"class.std::__1::vector.88"* %1, i64 0, i32 0, i32 1
  %13 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %14 = icmp eq %"class.std::__1::basic_string"* %11, %13
  %15 = inttoptr i64 %7 to %"class.net::HashValue"*
  br i1 %14, label %26, label %16

16:                                               ; preds = %3
  %17 = bitcast %"class.net::HashValue"* %5 to i8*
  %18 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %5, i64 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"class.net::HashValue"** %19 to i64*
  %21 = getelementptr inbounds %"class.std::__1::vector.74", %"class.std::__1::vector.74"* %2, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %5, i64 0, i32 1, i32 0, i32 0, i64 0
  br label %30

23:                                               ; preds = %103
  %24 = load %"class.net::HashValue"*, %"class.net::HashValue"** %21, align 8
  %25 = load %"class.net::HashValue"*, %"class.net::HashValue"** %8, align 8
  br label %26

26:                                               ; preds = %23, %3
  %27 = phi %"class.net::HashValue"* [ %25, %23 ], [ %15, %3 ]
  %28 = phi %"class.net::HashValue"* [ %24, %23 ], [ %15, %3 ]
  %29 = getelementptr inbounds %"struct.std::__1::__less.281", %"struct.std::__1::__less.281"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %29) #12
  call void @_ZNSt3__16__sortIRNS_6__lessIN3net9HashValueES3_EEPS3_EEvT0_S7_T_(%"class.net::HashValue"* %28, %"class.net::HashValue"* %27, %"struct.std::__1::__less.281"* nonnull dereferenceable(1) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %29) #12
  ret void

30:                                               ; preds = %16, %103
  %31 = phi %"class.std::__1::basic_string"* [ %11, %16 ], [ %104, %103 ]
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %17) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %22, i8 -86, i64 32, i1 false)
  store i32 0, i32* %18, align 4
  %32 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  %39 = select i1 %35, i8* %37, i8* %38
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = zext i8 %34 to i64
  %43 = select i1 %35, i64 %41, i64 %42
  %44 = call zeroext i1 @_ZN3net9HashValue10FromStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::HashValue"* nonnull %5, i8* %39, i64 %43) #12
  br i1 %44, label %45, label %103

45:                                               ; preds = %30
  %46 = load %"class.net::HashValue"*, %"class.net::HashValue"** %8, align 8
  %47 = load %"class.net::HashValue"*, %"class.net::HashValue"** %19, align 8
  %48 = icmp ult %"class.net::HashValue"* %46, %47
  %49 = ptrtoint %"class.net::HashValue"* %47 to i64
  br i1 %48, label %50, label %54

50:                                               ; preds = %45
  %51 = bitcast %"class.net::HashValue"* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %51, i8* nonnull align 4 %17, i64 36, i1 false) #12
  %52 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %46, i64 1
  %53 = ptrtoint %"class.net::HashValue"* %52 to i64
  store i64 %53, i64* %9, align 8
  br label %103

54:                                               ; preds = %45
  %55 = ptrtoint %"class.net::HashValue"* %46 to i64
  %56 = load i64, i64* %6, align 8
  %57 = sub i64 %55, %56
  %58 = sdiv exact i64 %57, 36
  %59 = add nsw i64 %58, 1
  %60 = icmp ugt i64 %59, 512409557603043100
  br i1 %60, label %61, label %63

61:                                               ; preds = %54
  %62 = bitcast %"class.std::__1::vector.74"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %62) #13
  unreachable

63:                                               ; preds = %54
  %64 = sub i64 %49, %56
  %65 = sdiv exact i64 %64, 36
  %66 = icmp ult i64 %65, 256204778801521550
  br i1 %66, label %67, label %72

67:                                               ; preds = %63
  %68 = shl nsw i64 %65, 1
  %69 = icmp ult i64 %68, %59
  %70 = select i1 %69, i64 %59, i64 %68
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %77, label %72

72:                                               ; preds = %67, %63
  %73 = phi i64 [ %70, %67 ], [ 512409557603043100, %63 ]
  %74 = mul i64 %73, 36
  %75 = call i8* @_Znwm(i64 %74) #11
  %76 = bitcast i8* %75 to %"class.net::HashValue"*
  br label %77

77:                                               ; preds = %72, %67
  %78 = phi i64 [ %73, %72 ], [ 0, %67 ]
  %79 = phi %"class.net::HashValue"* [ %76, %72 ], [ null, %67 ]
  %80 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %79, i64 %58
  %81 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %79, i64 %78
  %82 = ptrtoint %"class.net::HashValue"* %81 to i64
  %83 = bitcast %"class.net::HashValue"* %80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %83, i8* nonnull align 4 %17, i64 36, i1 false) #12
  %84 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %80, i64 1
  %85 = ptrtoint %"class.net::HashValue"* %84 to i64
  %86 = load %"class.net::HashValue"*, %"class.net::HashValue"** %21, align 8
  %87 = load i64, i64* %9, align 8
  %88 = ptrtoint %"class.net::HashValue"* %86 to i64
  %89 = sub i64 %87, %88
  %90 = sdiv exact i64 %89, -36
  %91 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %80, i64 %90
  %92 = ptrtoint %"class.net::HashValue"* %91 to i64
  %93 = icmp sgt i64 %89, 0
  br i1 %93, label %94, label %98

94:                                               ; preds = %77
  %95 = bitcast %"class.net::HashValue"* %91 to i8*
  %96 = bitcast %"class.net::HashValue"* %86 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %95, i8* align 4 %96, i64 %89, i1 false) #12
  %97 = load %"class.net::HashValue"*, %"class.net::HashValue"** %21, align 8
  br label %98

98:                                               ; preds = %94, %77
  %99 = phi %"class.net::HashValue"* [ %86, %77 ], [ %97, %94 ]
  store i64 %92, i64* %6, align 8
  store i64 %85, i64* %9, align 8
  store i64 %82, i64* %20, align 8
  %100 = icmp eq %"class.net::HashValue"* %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %98
  %102 = bitcast %"class.net::HashValue"* %99 to i8*
  call void @_ZdlPv(i8* %102) #11
  br label %103

103:                                              ; preds = %30, %101, %98, %50
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %17) #12
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 1
  %105 = icmp eq %"class.std::__1::basic_string"* %104, %13
  br i1 %105, label %23, label %30
}

declare zeroext i1 @_ZNK11url_matcher10URLMatcher7IsEmptyEv(%"class.url_matcher::URLMatcher"*) local_unnamed_addr #3

declare void @_ZNK11url_matcher10URLMatcher8MatchURLERK4GURL(%"class.std::__1::set.152"* sret, %"class.url_matcher::URLMatcher"*, %class.GURL* dereferenceable(120)) local_unnamed_addr #3

declare void @_ZN3net12HostPortPairC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEt(%"class.net::HostPortPair"*, %"class.std::__1::basic_string"* dereferenceable(24), i16 zeroext) unnamed_addr #3

declare void @_ZNK3net12HostPortPair10HostForURLEv(%"class.std::__1::basic_string"* sret, %"class.net::HostPortPair"*) local_unnamed_addr #3

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK24certificate_transparency23ChromeRequireCTDelegate21FilterTakesPrecedenceERKNS0_6FilterES3_(%"class.certificate_transparency::ChromeRequireCTDelegate"* nocapture readnone, %"struct.certificate_transparency::ChromeRequireCTDelegate::Filter"* nocapture readonly dereferenceable(16), %"struct.certificate_transparency::ChromeRequireCTDelegate::Filter"* nocapture readonly dereferenceable(16)) local_unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"struct.certificate_transparency::ChromeRequireCTDelegate::Filter", %"struct.certificate_transparency::ChromeRequireCTDelegate::Filter"* %1, i64 0, i32 1
  %5 = load i8, i8* %4, align 1, !range !2
  %6 = getelementptr inbounds %"struct.certificate_transparency::ChromeRequireCTDelegate::Filter", %"struct.certificate_transparency::ChromeRequireCTDelegate::Filter"* %2, i64 0, i32 1
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = icmp eq i8 %5, %7
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = icmp eq i8 %5, 0
  br label %27

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"struct.certificate_transparency::ChromeRequireCTDelegate::Filter", %"struct.certificate_transparency::ChromeRequireCTDelegate::Filter"* %1, i64 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.certificate_transparency::ChromeRequireCTDelegate::Filter", %"struct.certificate_transparency::ChromeRequireCTDelegate::Filter"* %2, i64 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %13, %15
  br i1 %16, label %19, label %17

17:                                               ; preds = %11
  %18 = icmp ugt i64 %13, %15
  br label %27

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"struct.certificate_transparency::ChromeRequireCTDelegate::Filter", %"struct.certificate_transparency::ChromeRequireCTDelegate::Filter"* %1, i64 0, i32 0
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = getelementptr inbounds %"struct.certificate_transparency::ChromeRequireCTDelegate::Filter", %"struct.certificate_transparency::ChromeRequireCTDelegate::Filter"* %2, i64 0, i32 0
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp ne i8 %21, %23
  %25 = icmp ne i8 %21, 0
  %26 = and i1 %25, %24
  ret i1 %26

27:                                               ; preds = %17, %9
  %28 = phi i1 [ %10, %9 ], [ %18, %17 ]
  ret i1 %28
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare zeroext i1 @_ZN3net9x509_util23CalculateSha256SpkiHashEPK16crypto_buffer_stPNS_9HashValueE(%struct.crypto_buffer_st*, %"class.net::HashValue"*) local_unnamed_addr #3

declare %"class.net::ParsedCertificate"* @_ZN3net17ParsedCertificate6CreateENSt3__110unique_ptrI16crypto_buffer_stN4bssl8internal7DeleterIS3_EEEERKNS_23ParseCertificateOptionsEPNS_10CertErrorsE(%struct.crypto_buffer_st*, %"struct.net::ParseCertificateOptions"* dereferenceable(1), %"class.net::CertErrors"*) local_unnamed_addr #3

declare void @_ZN3url6ParsedC1Ev(%"struct.url::Parsed"*) unnamed_addr #3

declare void @_ZN13url_formatter10SegmentURLERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPN3url6ParsedE(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.url::Parsed"*) local_unnamed_addr #3

declare void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"*, i64, i64) local_unnamed_addr #0 align 2

declare void @_ZN3url23CanonicalizeHostVerboseEPKcRKNS_9ComponentEPNS_12CanonOutputTIcEEPNS_13CanonHostInfoE(i8*, %"struct.url::Component"* dereferenceable(8), %"class.url::CanonOutputT"*, %"struct.url::CanonHostInfo"*) local_unnamed_addr #3

declare i8* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertENS_11__wrap_iterIPKcEEc(%"class.std::__1::basic_string"*, i8*, i8 signext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3url15RawCanonOutputTIcLi1024EED2Ev(%"class.url::RawCanonOutputT"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3url15RawCanonOutputTIcLi1024EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 1, i64 0
  %6 = icmp eq i8* %4, %5
  %7 = icmp eq i8* %4, null
  %8 = or i1 %6, %7
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  tail call void @_ZdaPv(i8* nonnull %4) #11
  br label %10

10:                                               ; preds = %1, %9
  ret void
}

declare void @_ZN11url_matcher26URLMatcherConditionFactory25CreateHostSuffixConditionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.url_matcher::URLMatcherCondition"* sret, %"class.url_matcher::URLMatcherConditionFactory"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

declare void @_ZN11url_matcher26URLMatcherConditionFactory25CreateHostEqualsConditionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.url_matcher::URLMatcherCondition"* sret, %"class.url_matcher::URLMatcherConditionFactory"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN11url_matcher19URLMatcherConditionD1Ev(%"class.url_matcher::URLMatcherCondition"*) unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN11url_matcher22URLMatcherConditionSetC1EiRKNSt3__13setINS_19URLMatcherConditionENS1_4lessIS3_EENS1_9allocatorIS3_EEEE(%"class.url_matcher::URLMatcherConditionSet"*, i32, %"class.std::__1::set"* dereferenceable(24)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"*) unnamed_addr #4

declare zeroext i1 @_ZN3net9HashValue10FromStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::HashValue"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #7

declare zeroext i1 @_ZN3neteqERKNS_9HashValueES2_(%"class.net::HashValue"* dereferenceable(36), %"class.net::HashValue"* dereferenceable(36)) local_unnamed_addr #3

declare i32 @CRYPTO_BUFFER_up_ref(%struct.crypto_buffer_st*) local_unnamed_addr #3

declare zeroext i1 @_ZN3net14ParseNameValueERKNS_3der5InputEPNSt3__16vectorINS5_INS_17X509NameAttributeENS4_9allocatorIS6_EEEENS7_IS9_EEEE(%"class.net::der::Input"* dereferenceable(16), %"class.std::__1::vector.253"*) local_unnamed_addr #3

declare zeroext i1 @_ZN3net3dereqERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16), %"class.net::der::Input"* dereferenceable(16)) local_unnamed_addr #3

declare { i8*, i64 } @_ZN3net23TypeOrganizationNameOidEv() local_unnamed_addr #3

declare void @_ZN3net3der5InputC1EPKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.net::der::Input"*, %"class.std::__1::basic_string"*) unnamed_addr #3

declare zeroext i1 @_ZN3net3derneERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16), %"class.net::der::Input"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"*) unnamed_addr #4

declare void @_ZN11url_matcher10URLMatcherC1Ev(%"class.url_matcher::URLMatcher"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN11url_matcher10URLMatcherD1Ev(%"class.url_matcher::URLMatcher"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIiN24certificate_transparency23ChromeRequireCTDelegate6FilterEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.66"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiN24certificate_transparency23ChromeRequireCTDelegate6FilterEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.66"* %0, %"class.std::__1::__tree_node"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiN24certificate_transparency23ChromeRequireCTDelegate6FilterEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.66"* %0, %"class.std::__1::__tree_node"* %9) #12
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZZN24certificate_transparency23ChromeRequireCTDelegate16UpdateCTPoliciesERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEESC_SC_SC_ENK3$_0clERKN3net9HashValueE"(%"class.net::HashValue"* dereferenceable(36)) unnamed_addr #10 align 2 {
  %2 = alloca %"class.logging::LogMessage", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = tail call zeroext i1 @_ZN3net25IsLegacyPubliclyTrustedCAERKNS_9HashValueE(%"class.net::HashValue"* dereferenceable(36) %0) #12
  br i1 %4, label %30, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %6, label %7, label %30

7:                                                ; preds = %5
  %8 = bitcast %"class.logging::LogMessage"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %8) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %2, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1, i64 0, i64 0), i32 215, i32 2) #12
  %9 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %2, i64 0, i32 2
  %10 = bitcast %"class.std::__1::basic_ostringstream"* %9 to %"class.std::__1::basic_ostream"*
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %10, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.9, i64 0, i64 0), i64 27) #12
  %12 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #12
  call void @_ZNK3net9HashValue8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %3, %"class.net::HashValue"* %0) #12
  %13 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = zext i8 %15 to i64
  %22 = select i1 %16, i8* %18, i8* %12
  %23 = select i1 %16, i64 %20, i64 %21
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %11, i8* %22, i64 %23) #12
  %25 = load i8, i8* %14, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %7
  %28 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %28) #11
  br label %29

29:                                               ; preds = %7, %27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %8) #12
  br label %30

30:                                               ; preds = %29, %5, %1
  %31 = phi i1 [ false, %1 ], [ true, %5 ], [ true, %29 ]
  ret i1 %31
}

declare zeroext i1 @_ZN3net25IsLegacyPubliclyTrustedCAERKNS_9HashValueE(%"class.net::HashValue"* dereferenceable(36)) local_unnamed_addr #3

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #3

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #3

declare void @_ZNK3net9HashValue8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.net::HashValue"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"*, i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.153"*, %"class.std::__1::__tree_node.280"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.280"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.280"* %1 to %"class.std::__1::__tree_node.280"**
  %6 = load %"class.std::__1::__tree_node.280"*, %"class.std::__1::__tree_node.280"** %5, align 8
  tail call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.153"* %0, %"class.std::__1::__tree_node.280"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.280", %"class.std::__1::__tree_node.280"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.280"**
  %9 = load %"class.std::__1::__tree_node.280"*, %"class.std::__1::__tree_node.280"** %8, align 8
  tail call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.153"* %0, %"class.std::__1::__tree_node.280"* %9) #12
  %10 = bitcast %"class.std::__1::__tree_node.280"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void

11:                                               ; preds = %2
  ret void
}

declare zeroext i1 @_ZN3netltERKNS_9HashValueES2_(%"class.net::HashValue"* dereferenceable(36), %"class.net::HashValue"* dereferenceable(36)) local_unnamed_addr #3

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #3

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE26__erase_external_with_moveEmm(%"class.std::__1::basic_string"*, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3url15RawCanonOutputTIcLi1024EED0Ev(%"class.url::RawCanonOutputT"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3url15RawCanonOutputTIcLi1024EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 1, i64 0
  %6 = icmp eq i8* %4, %5
  %7 = icmp eq i8* %4, null
  %8 = or i1 %6, %7
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  tail call void @_ZdaPv(i8* nonnull %4) #11
  br label %10

10:                                               ; preds = %1, %9
  %11 = bitcast %"class.url::RawCanonOutputT"* %0 to i8*
  tail call void @_ZdlPv(i8* %11) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3url15RawCanonOutputTIcLi1024EE6ResizeEi(%"class.url::RawCanonOutputT"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = sext i32 %1 to i64
  %4 = tail call i8* @_Znam(i64 %3) #11
  %5 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, %1
  %10 = select i1 %9, i32 %8, i32 %1
  %11 = sext i32 %10 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %4, i8* align 1 %6, i64 %11, i1 false)
  %12 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 1, i64 0
  %13 = icmp eq i8* %6, %12
  %14 = icmp eq i8* %6, null
  %15 = or i1 %13, %14
  br i1 %15, label %17, label %16

16:                                               ; preds = %2
  tail call void @_ZdaPv(i8* nonnull %6) #11
  br label %17

17:                                               ; preds = %2, %16
  store i8* %4, i8** %5, align 8
  %18 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 2
  store i32 %1, i32* %18, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN11url_matcher19URLMatcherConditionENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.108"*, %"class.std::__1::__tree_node.287"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.287"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.287"* %1 to %"class.std::__1::__tree_node.287"**
  %6 = load %"class.std::__1::__tree_node.287"*, %"class.std::__1::__tree_node.287"** %5, align 8
  tail call void @_ZNSt3__16__treeIN11url_matcher19URLMatcherConditionENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.108"* %0, %"class.std::__1::__tree_node.287"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.287", %"class.std::__1::__tree_node.287"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.287"**
  %9 = load %"class.std::__1::__tree_node.287"*, %"class.std::__1::__tree_node.287"** %8, align 8
  tail call void @_ZNSt3__16__treeIN11url_matcher19URLMatcherConditionENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.108"* %0, %"class.std::__1::__tree_node.287"* %9) #12
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.287", %"class.std::__1::__tree_node.287"* %1, i64 0, i32 1
  tail call void @_ZN11url_matcher19URLMatcherConditionD1Ev(%"class.url_matcher::URLMatcherCondition"* %10) #12
  %11 = bitcast %"class.std::__1::__tree_node.287"* %1 to i8*
  tail call void @_ZdlPv(i8* %11) #11
  ret void

12:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN11url_matcher19URLMatcherConditionENS_4lessIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JS2_EEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.108"*, %"class.url_matcher::URLMatcherCondition"* dereferenceable(16), %"class.url_matcher::URLMatcherCondition"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.108", %"class.std::__1::__tree.108"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.287"**
  %6 = load %"class.std::__1::__tree_node.287"*, %"class.std::__1::__tree_node.287"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node.287"* %6, null
  br i1 %7, label %35, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.108", %"class.std::__1::__tree.108"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %10

10:                                               ; preds = %31, %8
  %11 = phi %"class.std::__1::__tree_node.287"* [ %34, %31 ], [ %6, %8 ]
  %12 = phi %"class.std::__1::__tree_node_base"** [ %33, %31 ], [ %9, %8 ]
  %13 = getelementptr inbounds %"class.std::__1::__tree_node.287", %"class.std::__1::__tree_node.287"* %11, i64 0, i32 1
  %14 = tail call zeroext i1 @_ZNK11url_matcher19URLMatcherConditionltERKS0_(%"class.url_matcher::URLMatcherCondition"* %1, %"class.url_matcher::URLMatcherCondition"* dereferenceable(16) %13) #12
  br i1 %14, label %15, label %21

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.std::__1::__tree_node.287", %"class.std::__1::__tree_node.287"* %11, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %31

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.std::__1::__tree_node.287", %"class.std::__1::__tree_node.287"* %11, i64 0, i32 0, i32 0
  br label %37

21:                                               ; preds = %10
  %22 = tail call zeroext i1 @_ZNK11url_matcher19URLMatcherConditionltERKS0_(%"class.url_matcher::URLMatcherCondition"* %13, %"class.url_matcher::URLMatcherCondition"* dereferenceable(16) %1) #12
  br i1 %22, label %23, label %29

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_node.287", %"class.std::__1::__tree_node.287"* %11, i64 0, i32 0, i32 1
  %25 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_node_base"* %25, null
  br i1 %26, label %27, label %31

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::__tree_node.287", %"class.std::__1::__tree_node.287"* %11, i64 0, i32 0, i32 0
  br label %37

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node.287", %"class.std::__1::__tree_node.287"* %11, i64 0, i32 0, i32 0
  br label %37

31:                                               ; preds = %23, %15
  %32 = phi %"class.std::__1::__tree_node_base"* [ %17, %15 ], [ %25, %23 ]
  %33 = phi %"class.std::__1::__tree_node_base"** [ %16, %15 ], [ %24, %23 ]
  %34 = bitcast %"class.std::__1::__tree_node_base"* %32 to %"class.std::__1::__tree_node.287"*
  br label %10

35:                                               ; preds = %3
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %37

37:                                               ; preds = %19, %27, %29, %35
  %38 = phi %"class.std::__1::__tree_end_node"* [ %4, %35 ], [ %20, %19 ], [ %28, %27 ], [ %30, %29 ]
  %39 = phi %"class.std::__1::__tree_node_base"** [ %36, %35 ], [ %16, %19 ], [ %24, %27 ], [ %12, %29 ]
  %40 = bitcast %"class.std::__1::__tree_node_base"** %39 to %"class.std::__1::__tree_node.287"**
  %41 = load %"class.std::__1::__tree_node.287"*, %"class.std::__1::__tree_node.287"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node.287"* %41, null
  br i1 %42, label %43, label %68

43:                                               ; preds = %37
  %44 = tail call i8* @_Znwm(i64 48) #11, !noalias !10
  %45 = getelementptr inbounds i8, i8* %44, i64 32
  %46 = bitcast i8* %45 to %"class.url_matcher::URLMatcherCondition"*
  tail call void @_ZN11url_matcher19URLMatcherConditionC1ERKS0_(%"class.url_matcher::URLMatcherCondition"* %46, %"class.url_matcher::URLMatcherCondition"* dereferenceable(16) %2) #12, !noalias !10
  %47 = bitcast i8* %44 to %"class.std::__1::__tree_node.287"*
  %48 = bitcast i8* %44 to %"class.std::__1::__tree_node_base"*
  %49 = getelementptr inbounds i8, i8* %44, i64 16
  %50 = bitcast i8* %49 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %38, %"class.std::__1::__tree_end_node"** %50, align 8
  %51 = bitcast %"class.std::__1::__tree_node_base"** %39 to i8**
  store i8* %44, i8** %51, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree.108", %"class.std::__1::__tree.108"* %0, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 0, i32 0
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node_base"* %55, null
  br i1 %56, label %61, label %57

57:                                               ; preds = %43
  %58 = ptrtoint %"class.std::__1::__tree_node_base"* %55 to i64
  %59 = bitcast %"class.std::__1::__tree.108"* %0 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  br label %61

61:                                               ; preds = %57, %43
  %62 = phi %"class.std::__1::__tree_node_base"* [ %48, %43 ], [ %60, %57 ]
  %63 = getelementptr inbounds %"class.std::__1::__tree.108", %"class.std::__1::__tree.108"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %63, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %64, %"class.std::__1::__tree_node_base"* %62) #12
  %65 = getelementptr inbounds %"class.std::__1::__tree.108", %"class.std::__1::__tree.108"* %0, i64 0, i32 2, i32 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, 1
  store i64 %67, i64* %65, align 8
  br label %68

68:                                               ; preds = %61, %37
  %69 = phi i8 [ 1, %61 ], [ 0, %37 ]
  %70 = phi %"class.std::__1::__tree_node.287"* [ %47, %61 ], [ %41, %37 ]
  %71 = getelementptr inbounds %"class.std::__1::__tree_node.287", %"class.std::__1::__tree_node.287"* %70, i64 0, i32 0, i32 0
  %72 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %71, 0
  %73 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %72, i8 %69, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %73
}

declare zeroext i1 @_ZNK11url_matcher19URLMatcherConditionltERKS0_(%"class.url_matcher::URLMatcherCondition"*, %"class.url_matcher::URLMatcherCondition"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN11url_matcher19URLMatcherConditionC1ERKS0_(%"class.url_matcher::URLMatcherCondition"*, %"class.url_matcher::URLMatcherCondition"* dereferenceable(16)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI13scoped_refptrIN11url_matcher22URLMatcherConditionSetEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.106"*, %class.scoped_refptr* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.106", %"class.std::__1::vector.106"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.scoped_refptr** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.106"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.106"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.106", %"class.std::__1::vector.106"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.scoped_refptr** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %class.scoped_refptr*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.scoped_refptr* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %36, i64 %9
  %38 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %36, i64 %35
  %39 = ptrtoint %class.scoped_refptr* %38 to i64
  %40 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %1, i64 0, i32 0
  %41 = bitcast %class.scoped_refptr* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %class.scoped_refptr* %37 to i64*
  store i64 %42, i64* %43, align 8
  store %"class.url_matcher::URLMatcherConditionSet"* null, %"class.url_matcher::URLMatcherConditionSet"** %40, align 8
  %44 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %37, i64 1
  %45 = ptrtoint %class.scoped_refptr* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.106", %"class.std::__1::vector.106"* %0, i64 0, i32 0, i32 0
  %47 = load %class.scoped_refptr*, %class.scoped_refptr** %46, align 8
  %48 = ptrtoint %class.scoped_refptr* %47 to i64
  %49 = load %class.scoped_refptr*, %class.scoped_refptr** %3, align 8
  %50 = icmp eq %class.scoped_refptr* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %class.scoped_refptr, %class.scoped_refptr* %49, i64 -1, i32 0
  %53 = ptrtoint %"class.url_matcher::URLMatcherConditionSet"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %class.scoped_refptr* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %class.scoped_refptr* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %60, i64 -1
  %64 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %61, i64 -1
  %65 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %64, i64 0, i32 0
  %66 = bitcast %class.scoped_refptr* %64 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %class.scoped_refptr* %63 to i64*
  store i64 %67, i64* %68, align 8
  store %"class.url_matcher::URLMatcherConditionSet"* null, %"class.url_matcher::URLMatcherConditionSet"** %65, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !13

71:                                               ; preds = %59, %51
  %72 = phi %class.scoped_refptr* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %class.scoped_refptr* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %class.scoped_refptr* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %class.scoped_refptr* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %class.scoped_refptr* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %77, i64 -1
  %80 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %78, i64 -1
  %81 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %80, i64 0, i32 0
  %82 = bitcast %class.scoped_refptr* %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %class.scoped_refptr* %79 to i64*
  store i64 %83, i64* %84, align 8
  store %"class.url_matcher::URLMatcherConditionSet"* null, %"class.url_matcher::URLMatcherConditionSet"** %81, align 8
  %85 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %77, i64 -2
  %86 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %78, i64 -2
  %87 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %86, i64 0, i32 0
  %88 = bitcast %class.scoped_refptr* %86 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %class.scoped_refptr* %85 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.url_matcher::URLMatcherConditionSet"* null, %"class.url_matcher::URLMatcherConditionSet"** %87, align 8
  %91 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %77, i64 -3
  %92 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %78, i64 -3
  %93 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %92, i64 0, i32 0
  %94 = bitcast %class.scoped_refptr* %92 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %class.scoped_refptr* %91 to i64*
  store i64 %95, i64* %96, align 8
  store %"class.url_matcher::URLMatcherConditionSet"* null, %"class.url_matcher::URLMatcherConditionSet"** %93, align 8
  %97 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %77, i64 -4
  %98 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %78, i64 -4
  %99 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %98, i64 0, i32 0
  %100 = bitcast %class.scoped_refptr* %98 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %class.scoped_refptr* %97 to i64*
  store i64 %101, i64* %102, align 8
  store %"class.url_matcher::URLMatcherConditionSet"* null, %"class.url_matcher::URLMatcherConditionSet"** %99, align 8
  %103 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %77, i64 -5
  %104 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %78, i64 -5
  %105 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %104, i64 0, i32 0
  %106 = bitcast %class.scoped_refptr* %104 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %class.scoped_refptr* %103 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.url_matcher::URLMatcherConditionSet"* null, %"class.url_matcher::URLMatcherConditionSet"** %105, align 8
  %109 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %77, i64 -6
  %110 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %78, i64 -6
  %111 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %110, i64 0, i32 0
  %112 = bitcast %class.scoped_refptr* %110 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %class.scoped_refptr* %109 to i64*
  store i64 %113, i64* %114, align 8
  store %"class.url_matcher::URLMatcherConditionSet"* null, %"class.url_matcher::URLMatcherConditionSet"** %111, align 8
  %115 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %77, i64 -7
  %116 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %78, i64 -7
  %117 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %116, i64 0, i32 0
  %118 = bitcast %class.scoped_refptr* %116 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %class.scoped_refptr* %115 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.url_matcher::URLMatcherConditionSet"* null, %"class.url_matcher::URLMatcherConditionSet"** %117, align 8
  %121 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %77, i64 -8
  %122 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %78, i64 -8
  %123 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %122, i64 0, i32 0
  %124 = bitcast %class.scoped_refptr* %122 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %class.scoped_refptr* %121 to i64*
  store i64 %125, i64* %126, align 8
  store %"class.url_matcher::URLMatcherConditionSet"* null, %"class.url_matcher::URLMatcherConditionSet"** %123, align 8
  %127 = icmp eq %class.scoped_refptr* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %class.scoped_refptr* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %class.scoped_refptr*, %class.scoped_refptr** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %class.scoped_refptr* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %class.scoped_refptr* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %class.scoped_refptr* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %class.scoped_refptr*
  %138 = icmp eq %class.scoped_refptr* %133, %137
  br i1 %138, label %154, label %139

139:                                              ; preds = %132, %152
  %140 = phi %class.scoped_refptr* [ %141, %152 ], [ %133, %132 ]
  %141 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %140, i64 -1
  %142 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %141, i64 0, i32 0
  %143 = load %"class.url_matcher::URLMatcherConditionSet"*, %"class.url_matcher::URLMatcherConditionSet"** %142, align 8
  %144 = icmp eq %"class.url_matcher::URLMatcherConditionSet"* %143, null
  br i1 %144, label %152, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.url_matcher::URLMatcherConditionSet", %"class.url_matcher::URLMatcherConditionSet"* %143, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %146) #12
  %147 = getelementptr inbounds %"class.url_matcher::URLMatcherConditionSet", %"class.url_matcher::URLMatcherConditionSet"* %143, i64 0, i32 0, i32 0, i32 0
  %148 = load i32, i32* %147, align 4
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %152

150:                                              ; preds = %145
  tail call void @_ZN11url_matcher22URLMatcherConditionSetD1Ev(%"class.url_matcher::URLMatcherConditionSet"* nonnull %143) #12
  %151 = bitcast %"class.url_matcher::URLMatcherConditionSet"* %143 to i8*
  tail call void @_ZdlPv(i8* %151) #11
  br label %152

152:                                              ; preds = %150, %145, %139
  %153 = icmp eq %class.scoped_refptr* %141, %137
  br i1 %153, label %154, label %139

154:                                              ; preds = %152, %132
  %155 = icmp eq i64 %135, 0
  br i1 %155, label %158, label %156

156:                                              ; preds = %154
  %157 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %157) #11
  br label %158

158:                                              ; preds = %154, %156
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN11url_matcher22URLMatcherConditionSetD1Ev(%"class.url_matcher::URLMatcherConditionSet"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRNS_6__lessIN3net9HashValueES3_EEPS3_EEvT0_S7_T_(%"class.net::HashValue"*, %"class.net::HashValue"*, %"struct.std::__1::__less.281"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.net::HashValue", align 4
  %5 = alloca %"class.net::HashValue", align 4
  %6 = alloca %"class.net::HashValue", align 4
  %7 = alloca %"class.net::HashValue", align 4
  %8 = alloca %"class.net::HashValue", align 4
  %9 = alloca %"class.net::HashValue", align 4
  %10 = alloca %"class.net::HashValue", align 4
  %11 = alloca %"class.net::HashValue", align 4
  %12 = alloca %"class.net::HashValue", align 4
  %13 = alloca %"class.net::HashValue", align 4
  %14 = bitcast %"class.net::HashValue"* %6 to i8*
  %15 = bitcast %"class.net::HashValue"* %8 to i8*
  %16 = bitcast %"class.net::HashValue"* %7 to i8*
  %17 = bitcast %"class.net::HashValue"* %5 to i8*
  %18 = bitcast %"class.net::HashValue"* %4 to i8*
  br label %19

19:                                               ; preds = %202, %3
  %20 = phi %"class.net::HashValue"* [ %1, %3 ], [ %186, %202 ]
  %21 = phi %"class.net::HashValue"* [ %0, %3 ], [ %29, %202 ]
  %22 = ptrtoint %"class.net::HashValue"* %20 to i64
  %23 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %20, i64 -1
  %24 = bitcast %"class.net::HashValue"* %23 to i8*
  %25 = ptrtoint %"class.net::HashValue"* %20 to i64
  br label %26

26:                                               ; preds = %213, %19
  %27 = phi %"class.net::HashValue"* [ %21, %19 ], [ %214, %213 ]
  br label %28

28:                                               ; preds = %145, %26
  %29 = phi %"class.net::HashValue"* [ %27, %26 ], [ %138, %145 ]
  %30 = ptrtoint %"class.net::HashValue"* %29 to i64
  %31 = sub i64 %22, %30
  %32 = sdiv exact i64 %31, 36
  switch i64 %32, label %68 [
    i64 0, label %217
    i64 1, label %217
    i64 2, label %33
    i64 3, label %40
    i64 4, label %44
    i64 5, label %62
  ]

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %20, i64 -1
  %35 = tail call zeroext i1 @_ZN3netltERKNS_9HashValueES2_(%"class.net::HashValue"* dereferenceable(36) %34, %"class.net::HashValue"* dereferenceable(36) %29) #12
  br i1 %35, label %36, label %217

36:                                               ; preds = %33
  %37 = bitcast %"class.net::HashValue"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %37)
  %38 = bitcast %"class.net::HashValue"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %37, i8* align 4 %38, i64 36, i1 false) #12
  %39 = bitcast %"class.net::HashValue"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %38, i8* align 4 %39, i64 36, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %39, i8* nonnull align 4 %37, i64 36, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %37)
  br label %217

40:                                               ; preds = %28
  %41 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %29, i64 1
  %42 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %20, i64 -1
  %43 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessIN3net9HashValueES3_EEPS3_EEjT0_S7_S7_T_(%"class.net::HashValue"* %29, %"class.net::HashValue"* %41, %"class.net::HashValue"* %42, %"struct.std::__1::__less.281"* dereferenceable(1) %2)
  br label %217

44:                                               ; preds = %28
  %45 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %29, i64 1
  %46 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %29, i64 2
  %47 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %20, i64 -1
  %48 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessIN3net9HashValueES3_EEPS3_EEjT0_S7_S7_T_(%"class.net::HashValue"* %29, %"class.net::HashValue"* %45, %"class.net::HashValue"* %46, %"struct.std::__1::__less.281"* dereferenceable(1) %2) #12
  %49 = tail call zeroext i1 @_ZN3netltERKNS_9HashValueES2_(%"class.net::HashValue"* dereferenceable(36) %47, %"class.net::HashValue"* dereferenceable(36) %46) #12
  br i1 %49, label %50, label %217

50:                                               ; preds = %44
  %51 = bitcast %"class.net::HashValue"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %51)
  %52 = bitcast %"class.net::HashValue"* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %51, i8* align 4 %52, i64 36, i1 false) #12
  %53 = bitcast %"class.net::HashValue"* %47 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %52, i8* align 4 %53, i64 36, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %53, i8* nonnull align 4 %51, i64 36, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %51)
  %54 = tail call zeroext i1 @_ZN3netltERKNS_9HashValueES2_(%"class.net::HashValue"* dereferenceable(36) %46, %"class.net::HashValue"* dereferenceable(36) %45) #12
  br i1 %54, label %55, label %217

55:                                               ; preds = %50
  %56 = bitcast %"class.net::HashValue"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %56)
  %57 = bitcast %"class.net::HashValue"* %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %56, i8* align 4 %57, i64 36, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %57, i8* align 4 %52, i64 36, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %52, i8* nonnull align 4 %56, i64 36, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %56)
  %58 = tail call zeroext i1 @_ZN3netltERKNS_9HashValueES2_(%"class.net::HashValue"* dereferenceable(36) %45, %"class.net::HashValue"* dereferenceable(36) %29) #12
  br i1 %58, label %59, label %217

59:                                               ; preds = %55
  %60 = bitcast %"class.net::HashValue"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %60)
  %61 = bitcast %"class.net::HashValue"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %60, i8* align 4 %61, i64 36, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %61, i8* align 4 %57, i64 36, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %57, i8* nonnull align 4 %60, i64 36, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %60)
  br label %217

62:                                               ; preds = %28
  %63 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %29, i64 1
  %64 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %29, i64 2
  %65 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %29, i64 3
  %66 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %20, i64 -1
  %67 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessIN3net9HashValueES3_EEPS3_EEjT0_S7_S7_S7_S7_T_(%"class.net::HashValue"* %29, %"class.net::HashValue"* %63, %"class.net::HashValue"* %64, %"class.net::HashValue"* %65, %"class.net::HashValue"* %66, %"struct.std::__1::__less.281"* dereferenceable(1) %2)
  br label %217

68:                                               ; preds = %28
  %69 = icmp slt i64 %31, 1116
  br i1 %69, label %70, label %99

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %29, i64 2
  %72 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %29, i64 1
  %73 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessIN3net9HashValueES3_EEPS3_EEjT0_S7_S7_T_(%"class.net::HashValue"* %29, %"class.net::HashValue"* %72, %"class.net::HashValue"* %71, %"struct.std::__1::__less.281"* dereferenceable(1) %2) #12
  %74 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %29, i64 3
  %75 = icmp eq %"class.net::HashValue"* %74, %20
  br i1 %75, label %217, label %76

76:                                               ; preds = %70
  %77 = bitcast %"class.net::HashValue"* %9 to i8*
  br label %78

78:                                               ; preds = %96, %76
  %79 = phi %"class.net::HashValue"* [ %74, %76 ], [ %97, %96 ]
  %80 = phi %"class.net::HashValue"* [ %71, %76 ], [ %79, %96 ]
  %81 = call zeroext i1 @_ZN3netltERKNS_9HashValueES2_(%"class.net::HashValue"* dereferenceable(36) %79, %"class.net::HashValue"* dereferenceable(36) %80) #12
  br i1 %81, label %82, label %96

82:                                               ; preds = %78
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %77) #12
  %83 = bitcast %"class.net::HashValue"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %77, i8* align 4 %83, i64 36, i1 false) #12
  br label %84

84:                                               ; preds = %90, %82
  %85 = phi %"class.net::HashValue"* [ %79, %82 ], [ %86, %90 ]
  %86 = phi %"class.net::HashValue"* [ %80, %82 ], [ %91, %90 ]
  %87 = bitcast %"class.net::HashValue"* %85 to i8*
  %88 = bitcast %"class.net::HashValue"* %86 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %87, i8* align 4 %88, i64 36, i1 false) #12
  %89 = icmp eq %"class.net::HashValue"* %86, %29
  br i1 %89, label %93, label %90

90:                                               ; preds = %84
  %91 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %86, i64 -1
  %92 = call zeroext i1 @_ZN3netltERKNS_9HashValueES2_(%"class.net::HashValue"* nonnull dereferenceable(36) %9, %"class.net::HashValue"* dereferenceable(36) %91) #12
  br i1 %92, label %84, label %93

93:                                               ; preds = %84, %90
  %94 = phi %"class.net::HashValue"* [ %86, %90 ], [ %29, %84 ]
  %95 = bitcast %"class.net::HashValue"* %94 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %95, i8* nonnull align 4 %77, i64 36, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %77) #12
  br label %96

96:                                               ; preds = %93, %78
  %97 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %79, i64 1
  %98 = icmp eq %"class.net::HashValue"* %97, %20
  br i1 %98, label %217, label %78

99:                                               ; preds = %68
  %100 = icmp sgt i64 %31, 35964
  %101 = udiv i64 %31, 72
  %102 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %29, i64 %101
  br i1 %100, label %103, label %108

103:                                              ; preds = %99
  %104 = udiv i64 %31, 144
  %105 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %29, i64 %104
  %106 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %102, i64 %104
  %107 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessIN3net9HashValueES3_EEPS3_EEjT0_S7_S7_S7_S7_T_(%"class.net::HashValue"* %29, %"class.net::HashValue"* %105, %"class.net::HashValue"* %102, %"class.net::HashValue"* %106, %"class.net::HashValue"* %23, %"struct.std::__1::__less.281"* dereferenceable(1) %2)
  br label %110

108:                                              ; preds = %99
  %109 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessIN3net9HashValueES3_EEPS3_EEjT0_S7_S7_T_(%"class.net::HashValue"* %29, %"class.net::HashValue"* %102, %"class.net::HashValue"* %23, %"struct.std::__1::__less.281"* dereferenceable(1) %2)
  br label %110

110:                                              ; preds = %108, %103
  %111 = phi i32 [ %107, %103 ], [ %109, %108 ]
  %112 = tail call zeroext i1 @_ZN3netltERKNS_9HashValueES2_(%"class.net::HashValue"* dereferenceable(36) %29, %"class.net::HashValue"* dereferenceable(36) %102) #12
  br i1 %112, label %156, label %113

113:                                              ; preds = %110, %150
  %114 = phi %"class.net::HashValue"* [ %115, %150 ], [ %23, %110 ]
  %115 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %114, i64 -1
  %116 = icmp eq %"class.net::HashValue"* %29, %115
  br i1 %116, label %117, label %150

117:                                              ; preds = %113
  %118 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %29, i64 1
  %119 = tail call zeroext i1 @_ZN3netltERKNS_9HashValueES2_(%"class.net::HashValue"* dereferenceable(36) %29, %"class.net::HashValue"* dereferenceable(36) %23) #12
  br i1 %119, label %131, label %120

120:                                              ; preds = %117
  %121 = icmp eq %"class.net::HashValue"* %118, %23
  br i1 %121, label %217, label %122

122:                                              ; preds = %120, %128
  %123 = phi %"class.net::HashValue"* [ %129, %128 ], [ %118, %120 ]
  %124 = tail call zeroext i1 @_ZN3netltERKNS_9HashValueES2_(%"class.net::HashValue"* dereferenceable(36) %29, %"class.net::HashValue"* dereferenceable(36) %123) #12
  br i1 %124, label %125, label %128

125:                                              ; preds = %122
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %15)
  %126 = bitcast %"class.net::HashValue"* %123 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %15, i8* align 4 %126, i64 36, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %126, i8* align 4 %24, i64 36, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* nonnull align 4 %15, i64 36, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %15)
  %127 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %123, i64 1
  br label %131

128:                                              ; preds = %122
  %129 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %123, i64 1
  %130 = icmp eq %"class.net::HashValue"* %129, %23
  br i1 %130, label %217, label %122

131:                                              ; preds = %125, %117
  %132 = phi %"class.net::HashValue"* [ %118, %117 ], [ %127, %125 ]
  %133 = icmp eq %"class.net::HashValue"* %132, %23
  br i1 %133, label %217, label %134

134:                                              ; preds = %131, %147
  %135 = phi %"class.net::HashValue"* [ %140, %147 ], [ %132, %131 ]
  %136 = phi %"class.net::HashValue"* [ %143, %147 ], [ %23, %131 ]
  br label %137

137:                                              ; preds = %137, %134
  %138 = phi %"class.net::HashValue"* [ %135, %134 ], [ %140, %137 ]
  %139 = tail call zeroext i1 @_ZN3netltERKNS_9HashValueES2_(%"class.net::HashValue"* dereferenceable(36) %29, %"class.net::HashValue"* dereferenceable(36) %138) #12
  %140 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %138, i64 1
  br i1 %139, label %141, label %137

141:                                              ; preds = %137, %141
  %142 = phi %"class.net::HashValue"* [ %143, %141 ], [ %136, %137 ]
  %143 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %142, i64 -1
  %144 = tail call zeroext i1 @_ZN3netltERKNS_9HashValueES2_(%"class.net::HashValue"* dereferenceable(36) %29, %"class.net::HashValue"* dereferenceable(36) %143) #12
  br i1 %144, label %141, label %145

145:                                              ; preds = %141
  %146 = icmp ult %"class.net::HashValue"* %138, %143
  br i1 %146, label %147, label %28

147:                                              ; preds = %145
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %16)
  %148 = bitcast %"class.net::HashValue"* %138 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %16, i8* align 4 %148, i64 36, i1 false) #12
  %149 = bitcast %"class.net::HashValue"* %143 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %148, i8* align 4 %149, i64 36, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %149, i8* nonnull align 4 %16, i64 36, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %16)
  br label %134

150:                                              ; preds = %113
  %151 = tail call zeroext i1 @_ZN3netltERKNS_9HashValueES2_(%"class.net::HashValue"* dereferenceable(36) %115, %"class.net::HashValue"* dereferenceable(36) %102) #12
  br i1 %151, label %152, label %113

152:                                              ; preds = %150
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %14)
  %153 = bitcast %"class.net::HashValue"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %14, i8* align 4 %153, i64 36, i1 false) #12
  %154 = bitcast %"class.net::HashValue"* %115 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %153, i8* align 4 %154, i64 36, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %154, i8* nonnull align 4 %14, i64 36, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %14)
  %155 = add i32 %111, 1
  br label %156

156:                                              ; preds = %110, %152
  %157 = phi i32 [ %155, %152 ], [ %111, %110 ]
  %158 = phi %"class.net::HashValue"* [ %115, %152 ], [ %23, %110 ]
  %159 = ptrtoint %"class.net::HashValue"* %29 to i64
  %160 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %29, i64 1
  %161 = icmp ult %"class.net::HashValue"* %160, %158
  br i1 %161, label %162, label %183

162:                                              ; preds = %156, %177
  %163 = phi %"class.net::HashValue"* [ %182, %177 ], [ %102, %156 ]
  %164 = phi i32 [ %180, %177 ], [ %157, %156 ]
  %165 = phi %"class.net::HashValue"* [ %170, %177 ], [ %160, %156 ]
  %166 = phi %"class.net::HashValue"* [ %173, %177 ], [ %158, %156 ]
  br label %167

167:                                              ; preds = %167, %162
  %168 = phi %"class.net::HashValue"* [ %165, %162 ], [ %170, %167 ]
  %169 = tail call zeroext i1 @_ZN3netltERKNS_9HashValueES2_(%"class.net::HashValue"* dereferenceable(36) %168, %"class.net::HashValue"* dereferenceable(36) %163) #12
  %170 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %168, i64 1
  br i1 %169, label %167, label %171

171:                                              ; preds = %167, %171
  %172 = phi %"class.net::HashValue"* [ %173, %171 ], [ %166, %167 ]
  %173 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %172, i64 -1
  %174 = tail call zeroext i1 @_ZN3netltERKNS_9HashValueES2_(%"class.net::HashValue"* dereferenceable(36) %173, %"class.net::HashValue"* dereferenceable(36) %163) #12
  br i1 %174, label %175, label %171

175:                                              ; preds = %171
  %176 = icmp ugt %"class.net::HashValue"* %168, %173
  br i1 %176, label %183, label %177

177:                                              ; preds = %175
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %17)
  %178 = bitcast %"class.net::HashValue"* %168 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %17, i8* align 4 %178, i64 36, i1 false) #12
  %179 = bitcast %"class.net::HashValue"* %173 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %178, i8* align 4 %179, i64 36, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %179, i8* nonnull align 4 %17, i64 36, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %17)
  %180 = add i32 %164, 1
  %181 = icmp eq %"class.net::HashValue"* %163, %168
  %182 = select i1 %181, %"class.net::HashValue"* %173, %"class.net::HashValue"* %163
  br label %162

183:                                              ; preds = %175, %156
  %184 = phi %"class.net::HashValue"* [ %102, %156 ], [ %163, %175 ]
  %185 = phi i32 [ %157, %156 ], [ %164, %175 ]
  %186 = phi %"class.net::HashValue"* [ %160, %156 ], [ %168, %175 ]
  %187 = icmp eq %"class.net::HashValue"* %186, %184
  br i1 %187, label %194, label %188

188:                                              ; preds = %183
  %189 = tail call zeroext i1 @_ZN3netltERKNS_9HashValueES2_(%"class.net::HashValue"* dereferenceable(36) %184, %"class.net::HashValue"* dereferenceable(36) %186) #12
  br i1 %189, label %190, label %194

190:                                              ; preds = %188
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %18)
  %191 = bitcast %"class.net::HashValue"* %186 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %18, i8* align 4 %191, i64 36, i1 false) #12
  %192 = bitcast %"class.net::HashValue"* %184 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %191, i8* align 4 %192, i64 36, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %192, i8* nonnull align 4 %18, i64 36, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %18)
  %193 = add i32 %185, 1
  br label %194

194:                                              ; preds = %183, %190, %188
  %195 = phi i32 [ %193, %190 ], [ %185, %188 ], [ %185, %183 ]
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %204

197:                                              ; preds = %194
  %198 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN3net9HashValueES3_EEPS3_EEbT0_S7_T_(%"class.net::HashValue"* %29, %"class.net::HashValue"* %186, %"struct.std::__1::__less.281"* dereferenceable(1) %2)
  %199 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %186, i64 1
  %200 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN3net9HashValueES3_EEPS3_EEbT0_S7_T_(%"class.net::HashValue"* %199, %"class.net::HashValue"* %20, %"struct.std::__1::__less.281"* dereferenceable(1) %2)
  br i1 %200, label %201, label %203

201:                                              ; preds = %197
  br i1 %198, label %217, label %202

202:                                              ; preds = %201, %215
  br label %19

203:                                              ; preds = %197
  br i1 %198, label %213, label %204

204:                                              ; preds = %203, %194
  %205 = ptrtoint %"class.net::HashValue"* %186 to i64
  %206 = sub i64 %205, %159
  %207 = sdiv exact i64 %206, 36
  %208 = sub i64 %25, %205
  %209 = sdiv exact i64 %208, 36
  %210 = icmp slt i64 %207, %209
  br i1 %210, label %211, label %215

211:                                              ; preds = %204
  tail call void @_ZNSt3__16__sortIRNS_6__lessIN3net9HashValueES3_EEPS3_EEvT0_S7_T_(%"class.net::HashValue"* %29, %"class.net::HashValue"* %186, %"struct.std::__1::__less.281"* dereferenceable(1) %2)
  %212 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %186, i64 1
  br label %213

213:                                              ; preds = %211, %203
  %214 = phi %"class.net::HashValue"* [ %199, %203 ], [ %212, %211 ]
  br label %26

215:                                              ; preds = %204
  %216 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %186, i64 1
  tail call void @_ZNSt3__16__sortIRNS_6__lessIN3net9HashValueES3_EEPS3_EEvT0_S7_T_(%"class.net::HashValue"* %216, %"class.net::HashValue"* %20, %"struct.std::__1::__less.281"* dereferenceable(1) %2)
  br label %202

217:                                              ; preds = %201, %131, %28, %28, %120, %128, %96, %70, %59, %55, %50, %44, %33, %36, %40, %62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort3IRNS_6__lessIN3net9HashValueES3_EEPS3_EEjT0_S7_S7_T_(%"class.net::HashValue"*, %"class.net::HashValue"*, %"class.net::HashValue"*, %"struct.std::__1::__less.281"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.net::HashValue", align 4
  %6 = alloca %"class.net::HashValue", align 4
  %7 = alloca %"class.net::HashValue", align 4
  %8 = alloca %"class.net::HashValue", align 4
  %9 = alloca %"class.net::HashValue", align 4
  %10 = tail call zeroext i1 @_ZN3netltERKNS_9HashValueES2_(%"class.net::HashValue"* dereferenceable(36) %1, %"class.net::HashValue"* dereferenceable(36) %0) #12
  %11 = tail call zeroext i1 @_ZN3netltERKNS_9HashValueES2_(%"class.net::HashValue"* dereferenceable(36) %2, %"class.net::HashValue"* dereferenceable(36) %1) #12
  br i1 %10, label %21, label %12

12:                                               ; preds = %4
  br i1 %11, label %13, label %34

13:                                               ; preds = %12
  %14 = bitcast %"class.net::HashValue"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %14)
  %15 = bitcast %"class.net::HashValue"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %14, i8* align 4 %15, i64 36, i1 false) #12
  %16 = bitcast %"class.net::HashValue"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 4 %16, i64 36, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* nonnull align 4 %14, i64 36, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %14)
  %17 = tail call zeroext i1 @_ZN3netltERKNS_9HashValueES2_(%"class.net::HashValue"* dereferenceable(36) %1, %"class.net::HashValue"* dereferenceable(36) %0) #12
  br i1 %17, label %18, label %34

18:                                               ; preds = %13
  %19 = bitcast %"class.net::HashValue"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %19)
  %20 = bitcast %"class.net::HashValue"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %19, i8* align 4 %20, i64 36, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %20, i8* align 4 %15, i64 36, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* nonnull align 4 %19, i64 36, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %19)
  br label %34

21:                                               ; preds = %4
  br i1 %11, label %22, label %26

22:                                               ; preds = %21
  %23 = bitcast %"class.net::HashValue"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %23)
  %24 = bitcast %"class.net::HashValue"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %23, i8* align 4 %24, i64 36, i1 false) #12
  %25 = bitcast %"class.net::HashValue"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* align 4 %25, i64 36, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %25, i8* nonnull align 4 %23, i64 36, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %23)
  br label %34

26:                                               ; preds = %21
  %27 = bitcast %"class.net::HashValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %27)
  %28 = bitcast %"class.net::HashValue"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %27, i8* align 4 %28, i64 36, i1 false) #12
  %29 = bitcast %"class.net::HashValue"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* align 4 %29, i64 36, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* nonnull align 4 %27, i64 36, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %27)
  %30 = tail call zeroext i1 @_ZN3netltERKNS_9HashValueES2_(%"class.net::HashValue"* dereferenceable(36) %2, %"class.net::HashValue"* dereferenceable(36) %1) #12
  br i1 %30, label %31, label %34

31:                                               ; preds = %26
  %32 = bitcast %"class.net::HashValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %32)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %32, i8* align 4 %29, i64 36, i1 false) #12
  %33 = bitcast %"class.net::HashValue"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %33, i64 36, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %33, i8* nonnull align 4 %32, i64 36, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %32)
  br label %34

34:                                               ; preds = %26, %31, %13, %18, %12, %22
  %35 = phi i32 [ 1, %22 ], [ 0, %12 ], [ 2, %18 ], [ 1, %13 ], [ 2, %31 ], [ 1, %26 ]
  ret i32 %35
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRNS_6__lessIN3net9HashValueES3_EEPS3_EEjT0_S7_S7_S7_S7_T_(%"class.net::HashValue"*, %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.net::HashValue"*, %"struct.std::__1::__less.281"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.net::HashValue", align 4
  %8 = alloca %"class.net::HashValue", align 4
  %9 = alloca %"class.net::HashValue", align 4
  %10 = alloca %"class.net::HashValue", align 4
  %11 = alloca %"class.net::HashValue", align 4
  %12 = alloca %"class.net::HashValue", align 4
  %13 = alloca %"class.net::HashValue", align 4
  %14 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessIN3net9HashValueES3_EEPS3_EEjT0_S7_S7_T_(%"class.net::HashValue"* %0, %"class.net::HashValue"* %1, %"class.net::HashValue"* %2, %"struct.std::__1::__less.281"* dereferenceable(1) %5) #12
  %15 = tail call zeroext i1 @_ZN3netltERKNS_9HashValueES2_(%"class.net::HashValue"* dereferenceable(36) %3, %"class.net::HashValue"* dereferenceable(36) %2) #12
  br i1 %15, label %16, label %31

16:                                               ; preds = %6
  %17 = bitcast %"class.net::HashValue"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %17)
  %18 = bitcast %"class.net::HashValue"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %17, i8* align 4 %18, i64 36, i1 false) #12
  %19 = bitcast %"class.net::HashValue"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 36, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* nonnull align 4 %17, i64 36, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %17)
  %20 = add i32 %14, 1
  %21 = tail call zeroext i1 @_ZN3netltERKNS_9HashValueES2_(%"class.net::HashValue"* dereferenceable(36) %2, %"class.net::HashValue"* dereferenceable(36) %1) #12
  br i1 %21, label %22, label %31

22:                                               ; preds = %16
  %23 = bitcast %"class.net::HashValue"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %23)
  %24 = bitcast %"class.net::HashValue"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %23, i8* align 4 %24, i64 36, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* align 4 %18, i64 36, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* nonnull align 4 %23, i64 36, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %23)
  %25 = add i32 %14, 2
  %26 = tail call zeroext i1 @_ZN3netltERKNS_9HashValueES2_(%"class.net::HashValue"* dereferenceable(36) %1, %"class.net::HashValue"* dereferenceable(36) %0) #12
  br i1 %26, label %27, label %31

27:                                               ; preds = %22
  %28 = bitcast %"class.net::HashValue"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %28)
  %29 = bitcast %"class.net::HashValue"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* align 4 %29, i64 36, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %24, i64 36, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* nonnull align 4 %28, i64 36, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %28)
  %30 = add i32 %14, 3
  br label %31

31:                                               ; preds = %6, %16, %22, %27
  %32 = phi i32 [ %30, %27 ], [ %25, %22 ], [ %20, %16 ], [ %14, %6 ]
  %33 = tail call zeroext i1 @_ZN3netltERKNS_9HashValueES2_(%"class.net::HashValue"* dereferenceable(36) %4, %"class.net::HashValue"* dereferenceable(36) %3) #12
  br i1 %33, label %34, label %54

34:                                               ; preds = %31
  %35 = bitcast %"class.net::HashValue"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %35)
  %36 = bitcast %"class.net::HashValue"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %35, i8* align 4 %36, i64 36, i1 false) #12
  %37 = bitcast %"class.net::HashValue"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 36, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %37, i8* nonnull align 4 %35, i64 36, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %35)
  %38 = add i32 %32, 1
  %39 = tail call zeroext i1 @_ZN3netltERKNS_9HashValueES2_(%"class.net::HashValue"* dereferenceable(36) %3, %"class.net::HashValue"* dereferenceable(36) %2) #12
  br i1 %39, label %40, label %54

40:                                               ; preds = %34
  %41 = bitcast %"class.net::HashValue"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %41)
  %42 = bitcast %"class.net::HashValue"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %41, i8* align 4 %42, i64 36, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %42, i8* align 4 %36, i64 36, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* nonnull align 4 %41, i64 36, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %41)
  %43 = add i32 %32, 2
  %44 = tail call zeroext i1 @_ZN3netltERKNS_9HashValueES2_(%"class.net::HashValue"* dereferenceable(36) %2, %"class.net::HashValue"* dereferenceable(36) %1) #12
  br i1 %44, label %45, label %54

45:                                               ; preds = %40
  %46 = bitcast %"class.net::HashValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %46)
  %47 = bitcast %"class.net::HashValue"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %46, i8* align 4 %47, i64 36, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %47, i8* align 4 %42, i64 36, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %42, i8* nonnull align 4 %46, i64 36, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %46)
  %48 = add i32 %32, 3
  %49 = tail call zeroext i1 @_ZN3netltERKNS_9HashValueES2_(%"class.net::HashValue"* dereferenceable(36) %1, %"class.net::HashValue"* dereferenceable(36) %0) #12
  br i1 %49, label %50, label %54

50:                                               ; preds = %45
  %51 = bitcast %"class.net::HashValue"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %51)
  %52 = bitcast %"class.net::HashValue"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %51, i8* align 4 %52, i64 36, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %52, i8* align 4 %47, i64 36, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %47, i8* nonnull align 4 %51, i64 36, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %51)
  %53 = add i32 %32, 4
  br label %54

54:                                               ; preds = %34, %45, %50, %40, %31
  %55 = phi i32 [ %53, %50 ], [ %48, %45 ], [ %43, %40 ], [ %38, %34 ], [ %32, %31 ]
  ret i32 %55
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN3net9HashValueES3_EEPS3_EEbT0_S7_T_(%"class.net::HashValue"*, %"class.net::HashValue"*, %"struct.std::__1::__less.281"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.net::HashValue", align 4
  %5 = alloca %"class.net::HashValue", align 4
  %6 = alloca %"class.net::HashValue", align 4
  %7 = alloca %"class.net::HashValue", align 4
  %8 = alloca %"class.net::HashValue", align 4
  %9 = ptrtoint %"class.net::HashValue"* %1 to i64
  %10 = ptrtoint %"class.net::HashValue"* %0 to i64
  %11 = sub i64 %9, %10
  %12 = sdiv exact i64 %11, 36
  switch i64 %12, label %48 [
    i64 0, label %84
    i64 1, label %84
    i64 2, label %13
    i64 3, label %20
    i64 4, label %24
    i64 5, label %42
  ]

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %1, i64 -1
  %15 = tail call zeroext i1 @_ZN3netltERKNS_9HashValueES2_(%"class.net::HashValue"* dereferenceable(36) %14, %"class.net::HashValue"* dereferenceable(36) %0) #12
  br i1 %15, label %16, label %84

16:                                               ; preds = %13
  %17 = bitcast %"class.net::HashValue"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %17)
  %18 = bitcast %"class.net::HashValue"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %17, i8* align 4 %18, i64 36, i1 false) #12
  %19 = bitcast %"class.net::HashValue"* %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 36, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* nonnull align 4 %17, i64 36, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %17)
  br label %84

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %0, i64 1
  %22 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %1, i64 -1
  %23 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessIN3net9HashValueES3_EEPS3_EEjT0_S7_S7_T_(%"class.net::HashValue"* %0, %"class.net::HashValue"* %21, %"class.net::HashValue"* %22, %"struct.std::__1::__less.281"* dereferenceable(1) %2)
  br label %84

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %0, i64 1
  %26 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %0, i64 2
  %27 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %1, i64 -1
  %28 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessIN3net9HashValueES3_EEPS3_EEjT0_S7_S7_T_(%"class.net::HashValue"* %0, %"class.net::HashValue"* %25, %"class.net::HashValue"* %26, %"struct.std::__1::__less.281"* dereferenceable(1) %2) #12
  %29 = tail call zeroext i1 @_ZN3netltERKNS_9HashValueES2_(%"class.net::HashValue"* dereferenceable(36) %27, %"class.net::HashValue"* dereferenceable(36) %26) #12
  br i1 %29, label %30, label %84

30:                                               ; preds = %24
  %31 = bitcast %"class.net::HashValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %31)
  %32 = bitcast %"class.net::HashValue"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %31, i8* align 4 %32, i64 36, i1 false) #12
  %33 = bitcast %"class.net::HashValue"* %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %32, i8* align 4 %33, i64 36, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %33, i8* nonnull align 4 %31, i64 36, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %31)
  %34 = tail call zeroext i1 @_ZN3netltERKNS_9HashValueES2_(%"class.net::HashValue"* dereferenceable(36) %26, %"class.net::HashValue"* dereferenceable(36) %25) #12
  br i1 %34, label %35, label %84

35:                                               ; preds = %30
  %36 = bitcast %"class.net::HashValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %36)
  %37 = bitcast %"class.net::HashValue"* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %36, i8* align 4 %37, i64 36, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %37, i8* align 4 %32, i64 36, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %32, i8* nonnull align 4 %36, i64 36, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %36)
  %38 = tail call zeroext i1 @_ZN3netltERKNS_9HashValueES2_(%"class.net::HashValue"* dereferenceable(36) %25, %"class.net::HashValue"* dereferenceable(36) %0) #12
  br i1 %38, label %39, label %84

39:                                               ; preds = %35
  %40 = bitcast %"class.net::HashValue"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %40)
  %41 = bitcast %"class.net::HashValue"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %40, i8* align 4 %41, i64 36, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %41, i8* align 4 %37, i64 36, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %37, i8* nonnull align 4 %40, i64 36, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %40)
  br label %84

42:                                               ; preds = %3
  %43 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %0, i64 1
  %44 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %0, i64 2
  %45 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %0, i64 3
  %46 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %1, i64 -1
  %47 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessIN3net9HashValueES3_EEPS3_EEjT0_S7_S7_S7_S7_T_(%"class.net::HashValue"* %0, %"class.net::HashValue"* %43, %"class.net::HashValue"* %44, %"class.net::HashValue"* %45, %"class.net::HashValue"* %46, %"struct.std::__1::__less.281"* dereferenceable(1) %2)
  br label %84

48:                                               ; preds = %3
  %49 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %0, i64 2
  %50 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %0, i64 1
  %51 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessIN3net9HashValueES3_EEPS3_EEjT0_S7_S7_T_(%"class.net::HashValue"* %0, %"class.net::HashValue"* %50, %"class.net::HashValue"* %49, %"struct.std::__1::__less.281"* dereferenceable(1) %2)
  %52 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %0, i64 3
  %53 = icmp eq %"class.net::HashValue"* %52, %1
  br i1 %53, label %84, label %54

54:                                               ; preds = %48
  %55 = bitcast %"class.net::HashValue"* %8 to i8*
  br label %56

56:                                               ; preds = %54, %77
  %57 = phi %"class.net::HashValue"* [ %52, %54 ], [ %79, %77 ]
  %58 = phi i32 [ 0, %54 ], [ %78, %77 ]
  %59 = phi %"class.net::HashValue"* [ %49, %54 ], [ %57, %77 ]
  %60 = call zeroext i1 @_ZN3netltERKNS_9HashValueES2_(%"class.net::HashValue"* dereferenceable(36) %57, %"class.net::HashValue"* dereferenceable(36) %59) #12
  br i1 %60, label %61, label %77

61:                                               ; preds = %56
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %55) #12
  %62 = bitcast %"class.net::HashValue"* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %55, i8* align 4 %62, i64 36, i1 false)
  br label %63

63:                                               ; preds = %69, %61
  %64 = phi %"class.net::HashValue"* [ %57, %61 ], [ %65, %69 ]
  %65 = phi %"class.net::HashValue"* [ %59, %61 ], [ %70, %69 ]
  %66 = bitcast %"class.net::HashValue"* %64 to i8*
  %67 = bitcast %"class.net::HashValue"* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %66, i8* align 4 %67, i64 36, i1 false)
  %68 = icmp eq %"class.net::HashValue"* %65, %0
  br i1 %68, label %72, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %65, i64 -1
  %71 = call zeroext i1 @_ZN3netltERKNS_9HashValueES2_(%"class.net::HashValue"* nonnull dereferenceable(36) %8, %"class.net::HashValue"* dereferenceable(36) %70) #12
  br i1 %71, label %63, label %72

72:                                               ; preds = %63, %69
  %73 = phi %"class.net::HashValue"* [ %65, %69 ], [ %0, %63 ]
  %74 = bitcast %"class.net::HashValue"* %73 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %74, i8* nonnull align 4 %55, i64 36, i1 false)
  %75 = add i32 %58, 1
  %76 = icmp eq i32 %75, 8
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %55) #12
  br i1 %76, label %81, label %77

77:                                               ; preds = %72, %56
  %78 = phi i32 [ %75, %72 ], [ %58, %56 ]
  %79 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %57, i64 1
  %80 = icmp eq %"class.net::HashValue"* %79, %1
  br i1 %80, label %84, label %56

81:                                               ; preds = %72
  %82 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %57, i64 1
  %83 = icmp eq %"class.net::HashValue"* %82, %1
  br label %84

84:                                               ; preds = %77, %81, %48, %39, %35, %30, %24, %13, %16, %3, %3, %42, %20
  %85 = phi i1 [ true, %42 ], [ true, %20 ], [ true, %3 ], [ true, %3 ], [ true, %16 ], [ true, %13 ], [ true, %24 ], [ true, %30 ], [ true, %35 ], [ true, %39 ], [ true, %48 ], [ %83, %81 ], [ true, %77 ]
  ret i1 %85
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNSt3__16__treeINS_12__value_typeIiN24certificate_transparency23ChromeRequireCTDelegate6FilterEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_: argument 0"}
!9 = distinct !{!9, !"_ZNSt3__16__treeINS_12__value_typeIiN24certificate_transparency23ChromeRequireCTDelegate6FilterEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNSt3__16__treeIN11url_matcher19URLMatcherConditionENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISC_EEEEEEDpOT_: argument 0"}
!12 = distinct !{!12, !"_ZNSt3__16__treeIN11url_matcher19URLMatcherConditionENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISC_EEEEEEDpOT_"}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.unroll.disable"}
