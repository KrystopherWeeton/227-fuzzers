; ModuleID = '../../third_party/pdfium/core/fpdfdoc/cpdf_dest.cpp'
source_filename = "../../third_party/pdfium/core/fpdfdoc/cpdf_dest.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDF_Dest = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CPDF_Array* }
%class.CPDF_Array = type <{ %class.CPDF_Object, %"class.std::__1::vector", %"class.fxcrt::WeakPtr", i32, [4 x i8] }>
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.fxcrt::RetainPtr.0"*, %"class.fxcrt::RetainPtr.0"*, %"class.std::__1::__compressed_pair.5" }
%"class.fxcrt::RetainPtr.0" = type { %"class.std::__1::unique_ptr.1" }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %class.CPDF_Object* }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.fxcrt::RetainPtr.0"* }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr.8" }
%"class.fxcrt::RetainPtr.8" = type { %"class.std::__1::unique_ptr.9" }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.151" }
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.154", %"class.std::__1::__compressed_pair.162", %"class.std::__1::__compressed_pair.167", %"class.std::__1::__compressed_pair.169", [4 x i8] }>
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156", %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { i64 }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { float }
%class.CPDF_Document = type { %"class.CPDF_Parser::ParsedObjectsHolder", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.33", %"class.fxcrt::RetainPtr.49", %"class.fxcrt::RetainPtr.49", %"class.std::__1::vector.105", i8, i8, i32, i32, %"class.std::__1::unique_ptr.112", %"class.std::__1::unique_ptr.119", %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.131", %"class.std::__1::vector.137", %"class.CPDF_Document::StockFontClearer", %"class.std::__1::unique_ptr.145" }
%"class.CPDF_Parser::ParsedObjectsHolder" = type { %class.CPDF_IndirectObjectHolder }
%class.CPDF_IndirectObjectHolder = type { i32 (...)**, i32, %"class.std::__1::map", %"class.fxcrt::WeakPtr" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.24" }
%"class.std::__1::__tree.24" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.25", %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.16", %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %class.CPDF_Parser* }
%class.CPDF_Parser = type <{ %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.40", %"class.fxcrt::UnownedPtr", i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.46", i64, %"class.fxcrt::RetainPtr.67", %"class.fxcrt::ByteString", %"class.std::__1::unique_ptr.79", %"class.std::__1::map.85", %"class.std::__1::set.94", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %class.CPDF_SyntaxParser* }
%class.CPDF_SyntaxParser = type opaque
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.CPDF_Parser::ParsedObjectsHolder"* }
%"class.fxcrt::UnownedPtr" = type { %"class.CPDF_Parser::ParsedObjectsHolder"* }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %class.CPDF_CrossRefTable* }
%class.CPDF_CrossRefTable = type { %"class.fxcrt::RetainPtr.49", %"class.std::__1::map.55" }
%"class.std::__1::map.55" = type { %"class.std::__1::__tree.56" }
%"class.std::__1::__tree.56" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.57", %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.fxcrt::RetainPtr.67" = type { %"class.std::__1::unique_ptr.68" }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %class.CPDF_SecurityHandler* }
%class.CPDF_SecurityHandler = type opaque
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.73" }
%"class.fxcrt::RetainPtr.73" = type { %"class.std::__1::unique_ptr.74" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %class.CPDF_LinearizedHeader* }
%class.CPDF_LinearizedHeader = type opaque
%"class.std::__1::map.85" = type { %"class.std::__1::__tree.86" }
%"class.std::__1::__tree.86" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.87", %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::set.94" = type { %"class.std::__1::__tree.95" }
%"class.std::__1::__tree.95" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.96", %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.fxcrt::RetainPtr.49" = type { %"class.std::__1::unique_ptr.50" }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %class.CPDF_Dictionary* }
%class.CPDF_Dictionary = type opaque
%"class.std::__1::vector.105" = type { %"class.std::__1::__vector_base.106" }
%"class.std::__1::__vector_base.106" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.107" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.CPDF_Document::RenderDataIface"* }
%"class.CPDF_Document::RenderDataIface" = type { i32 (...)**, %"class.fxcrt::UnownedPtr.115" }
%"class.fxcrt::UnownedPtr.115" = type { %class.CPDF_Document* }
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.CPDF_Document::PageDataIface"* }
%"class.CPDF_Document::PageDataIface" = type { i32 (...)**, %"class.fxcrt::UnownedPtr.115" }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %class.JBig2_DocumentContext* }
%class.JBig2_DocumentContext = type opaque
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.CPDF_Document::LinkListIface"* }
%"class.CPDF_Document::LinkListIface" = type { i32 (...)** }
%"class.std::__1::vector.137" = type { %"class.std::__1::__vector_base.138" }
%"class.std::__1::__vector_base.138" = type { i32*, i32*, %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { i32* }
%"class.CPDF_Document::StockFontClearer" = type { %"class.fxcrt::UnownedPtr.144" }
%"class.fxcrt::UnownedPtr.144" = type { %"class.CPDF_Document::PageDataIface"* }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.CPDF_Document::Extension"* }
%"class.CPDF_Document::Extension" = type { i32 (...)** }
%class.CPDF_Name = type { %class.CPDF_Object, %"class.fxcrt::ByteString" }
%class.CPDF_Number = type { %class.CPDF_Object, %class.FX_Number }
%class.FX_Number = type { i8, i8, %union.anon }
%union.anon = type { i32 }

@.str = private unnamed_addr constant [4 x i8] c"XYZ\00", align 1
@_ZN12_GLOBAL__N_124g_sZoomModeMaxParamCountE = internal unnamed_addr constant [10 x i8] c"\00\03\00\01\01\04\00\01\01\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"Fit\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"FitH\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"FitV\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"FitR\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"FitB\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"FitBH\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"FitBV\00", align 1

@_ZN9CPDF_DestC1EPK10CPDF_Array = hidden unnamed_addr alias void (%class.CPDF_Dest*, %class.CPDF_Array*), void (%class.CPDF_Dest*, %class.CPDF_Array*)* @_ZN9CPDF_DestC2EPK10CPDF_Array
@_ZN9CPDF_DestC1ERKS_ = hidden unnamed_addr alias void (%class.CPDF_Dest*, %class.CPDF_Dest*), void (%class.CPDF_Dest*, %class.CPDF_Dest*)* @_ZN9CPDF_DestC2ERKS_
@_ZN9CPDF_DestD1Ev = hidden unnamed_addr alias void (%class.CPDF_Dest*), void (%class.CPDF_Dest*)* @_ZN9CPDF_DestD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN9CPDF_DestC2EPK10CPDF_Array(%class.CPDF_Dest* nocapture, %class.CPDF_Array*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %class.CPDF_Array* %1 to i64
  %4 = bitcast %class.CPDF_Dest* %0 to i64*
  store i64 %3, i64* %4, align 8
  %5 = icmp eq %class.CPDF_Array* %1, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %1, i64 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = add nsw i64 %8, 1
  store i64 %9, i64* %7, align 8
  br label %10

10:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN9CPDF_DestC2ERKS_(%class.CPDF_Dest* nocapture, %class.CPDF_Dest* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_Dest, %class.CPDF_Dest* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_Array*, %class.CPDF_Array** %3, align 8
  %5 = ptrtoint %class.CPDF_Array* %4 to i64
  %6 = bitcast %class.CPDF_Dest* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = icmp eq %class.CPDF_Array* %4, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %4, i64 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add nsw i64 %10, 1
  store i64 %11, i64* %9, align 8
  br label %12

12:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPDF_DestD2Ev(%class.CPDF_Dest* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CPDF_Dest, %class.CPDF_Dest* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CPDF_Array*, %class.CPDF_Array** %2, align 8
  store %class.CPDF_Array* null, %class.CPDF_Array** %2, align 8
  %4 = icmp eq %class.CPDF_Array* %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %3, i64 0, i32 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = add nsw i64 %7, -1
  store i64 %8, i64* %6, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %3, i64 0, i32 0, i32 0
  %12 = bitcast %class.CPDF_Array* %3 to void (%"class.fxcrt::Retainable"*)***
  %13 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %13, i64 1
  %15 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %14, align 8
  tail call void %15(%"class.fxcrt::Retainable"* nonnull %11) #5
  br label %16

16:                                               ; preds = %1, %5, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPDF_Dest6CreateEP13CPDF_DocumentPK11CPDF_Object(%class.CPDF_Dest* noalias nocapture sret, %class.CPDF_Document*, %class.CPDF_Object*) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.fxcrt::ByteString", align 8
  %5 = icmp eq %class.CPDF_Object* %2, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %3
  %7 = bitcast %class.CPDF_Dest* %0 to i64*
  store i64 0, i64* %7, align 8
  br label %47

8:                                                ; preds = %3
  %9 = bitcast %class.CPDF_Object* %2 to i1 (%class.CPDF_Object*)***
  %10 = load i1 (%class.CPDF_Object*)**, i1 (%class.CPDF_Object*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%class.CPDF_Object*)*, i1 (%class.CPDF_Object*)** %10, i64 21
  %12 = load i1 (%class.CPDF_Object*)*, i1 (%class.CPDF_Object*)** %11, align 8
  %13 = tail call zeroext i1 %12(%class.CPDF_Object* nonnull %2) #5
  br i1 %13, label %19, label %14

14:                                               ; preds = %8
  %15 = load i1 (%class.CPDF_Object*)**, i1 (%class.CPDF_Object*)*** %9, align 8
  %16 = getelementptr inbounds i1 (%class.CPDF_Object*)*, i1 (%class.CPDF_Object*)** %15, i64 17
  %17 = load i1 (%class.CPDF_Object*)*, i1 (%class.CPDF_Object*)** %16, align 8
  %18 = tail call zeroext i1 %17(%class.CPDF_Object* nonnull %2) #5
  br i1 %18, label %19, label %34

19:                                               ; preds = %14, %8
  %20 = bitcast %"class.fxcrt::ByteString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #5
  %21 = bitcast %class.CPDF_Object* %2 to void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)***
  %22 = load void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)**, void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)*, void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)** %22, i64 7
  %24 = load void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)*, void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)** %23, align 8
  call void %24(%"class.fxcrt::ByteString"* nonnull sret %4, %class.CPDF_Object* nonnull %2) #5
  %25 = call %class.CPDF_Array* @_ZN13CPDF_NameTree15LookupNamedDestEP13CPDF_DocumentRKN5fxcrt10ByteStringE(%class.CPDF_Document* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %4) #5
  %26 = ptrtoint %class.CPDF_Array* %25 to i64
  %27 = bitcast %class.CPDF_Dest* %0 to i64*
  store i64 %26, i64* %27, align 8
  %28 = icmp eq %class.CPDF_Array* %25, null
  br i1 %28, label %33, label %29

29:                                               ; preds = %19
  %30 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %25, i64 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = add nsw i64 %31, 1
  store i64 %32, i64* %30, align 8
  br label %33

33:                                               ; preds = %19, %29
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #5
  br label %47

34:                                               ; preds = %14
  %35 = bitcast %class.CPDF_Object* %2 to %class.CPDF_Array* (%class.CPDF_Object*)***
  %36 = load %class.CPDF_Array* (%class.CPDF_Object*)**, %class.CPDF_Array* (%class.CPDF_Object*)*** %35, align 8
  %37 = getelementptr inbounds %class.CPDF_Array* (%class.CPDF_Object*)*, %class.CPDF_Array* (%class.CPDF_Object*)** %36, i64 24
  %38 = load %class.CPDF_Array* (%class.CPDF_Object*)*, %class.CPDF_Array* (%class.CPDF_Object*)** %37, align 8
  %39 = tail call %class.CPDF_Array* %38(%class.CPDF_Object* nonnull %2) #5
  %40 = ptrtoint %class.CPDF_Array* %39 to i64
  %41 = bitcast %class.CPDF_Dest* %0 to i64*
  store i64 %40, i64* %41, align 8
  %42 = icmp eq %class.CPDF_Array* %39, null
  br i1 %42, label %47, label %43

43:                                               ; preds = %34
  %44 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %39, i64 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = add nsw i64 %45, 1
  store i64 %46, i64* %44, align 8
  br label %47

47:                                               ; preds = %43, %34, %33, %6
  ret void
}

declare %class.CPDF_Array* @_ZN13CPDF_NameTree15LookupNamedDestEP13CPDF_DocumentRKN5fxcrt10ByteStringE(%class.CPDF_Document*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK9CPDF_Dest16GetDestPageIndexEP13CPDF_Document(%class.CPDF_Dest* nocapture readonly, %class.CPDF_Document*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.CPDF_Dest, %class.CPDF_Dest* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_Array*, %class.CPDF_Array** %3, align 8
  %5 = icmp eq %class.CPDF_Array* %4, null
  br i1 %5, label %30, label %6

6:                                                ; preds = %2
  %7 = tail call %class.CPDF_Object* @_ZNK10CPDF_Array17GetDirectObjectAtEm(%class.CPDF_Array* nonnull %4, i64 0) #5
  %8 = icmp eq %class.CPDF_Object* %7, null
  br i1 %8, label %30, label %9

9:                                                ; preds = %6
  %10 = bitcast %class.CPDF_Object* %7 to i1 (%class.CPDF_Object*)***
  %11 = load i1 (%class.CPDF_Object*)**, i1 (%class.CPDF_Object*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%class.CPDF_Object*)*, i1 (%class.CPDF_Object*)** %11, i64 18
  %13 = load i1 (%class.CPDF_Object*)*, i1 (%class.CPDF_Object*)** %12, align 8
  %14 = tail call zeroext i1 %13(%class.CPDF_Object* nonnull %7) #5
  br i1 %14, label %15, label %21

15:                                               ; preds = %9
  %16 = bitcast %class.CPDF_Object* %7 to i32 (%class.CPDF_Object*)***
  %17 = load i32 (%class.CPDF_Object*)**, i32 (%class.CPDF_Object*)*** %16, align 8
  %18 = getelementptr inbounds i32 (%class.CPDF_Object*)*, i32 (%class.CPDF_Object*)** %17, i64 10
  %19 = load i32 (%class.CPDF_Object*)*, i32 (%class.CPDF_Object*)** %18, align 8
  %20 = tail call i32 %19(%class.CPDF_Object* nonnull %7) #5
  br label %30

21:                                               ; preds = %9
  %22 = load i1 (%class.CPDF_Object*)**, i1 (%class.CPDF_Object*)*** %10, align 8
  %23 = getelementptr inbounds i1 (%class.CPDF_Object*)*, i1 (%class.CPDF_Object*)** %22, i64 16
  %24 = load i1 (%class.CPDF_Object*)*, i1 (%class.CPDF_Object*)** %23, align 8
  %25 = tail call zeroext i1 %24(%class.CPDF_Object* nonnull %7) #5
  br i1 %25, label %26, label %30

26:                                               ; preds = %21
  %27 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %7, i64 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = tail call i32 @_ZN13CPDF_Document12GetPageIndexEj(%class.CPDF_Document* %1, i32 %28) #5
  br label %30

30:                                               ; preds = %2, %15, %26, %6, %21
  %31 = phi i32 [ -1, %2 ], [ %20, %15 ], [ %29, %26 ], [ -1, %6 ], [ -1, %21 ]
  ret i32 %31
}

declare %class.CPDF_Object* @_ZNK10CPDF_Array17GetDirectObjectAtEm(%class.CPDF_Array*, i64) local_unnamed_addr #2

declare i32 @_ZN13CPDF_Document12GetPageIndexEj(%class.CPDF_Document*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK9CPDF_Dest11GetZoomModeEv(%class.CPDF_Dest* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.fxcrt::ByteString", align 8
  %3 = getelementptr inbounds %class.CPDF_Dest, %class.CPDF_Dest* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_Array*, %class.CPDF_Array** %3, align 8
  %5 = icmp eq %class.CPDF_Array* %4, null
  br i1 %5, label %21, label %6

6:                                                ; preds = %1
  %7 = tail call %class.CPDF_Object* @_ZNK10CPDF_Array17GetDirectObjectAtEm(%class.CPDF_Array* nonnull %4, i64 1) #5
  %8 = icmp eq %class.CPDF_Object* %7, null
  br i1 %8, label %21, label %9

9:                                                ; preds = %6
  %10 = bitcast %"class.fxcrt::ByteString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #5
  %11 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %11, align 8
  %12 = bitcast %class.CPDF_Object* %7 to void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)***
  %13 = load void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)**, void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)*, void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)** %13, i64 7
  %15 = load void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)*, void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)** %14, align 8
  call void %15(%"class.fxcrt::ByteString"* nonnull sret %2, %class.CPDF_Object* nonnull %7) #5
  %16 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0)) #5
  br i1 %16, label %19, label %17

17:                                               ; preds = %9
  %18 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0)) #5
  br i1 %18, label %19, label %23

19:                                               ; preds = %33, %31, %29, %27, %25, %23, %17, %9
  %20 = phi i32 [ 1, %9 ], [ 2, %17 ], [ 3, %23 ], [ 4, %25 ], [ 5, %27 ], [ 6, %29 ], [ 7, %31 ], [ %35, %33 ]
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %2) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #5
  br label %21

21:                                               ; preds = %1, %19, %6
  %22 = phi i32 [ 0, %1 ], [ %20, %19 ], [ 0, %6 ]
  ret i32 %22

23:                                               ; preds = %17
  %24 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #5
  br i1 %24, label %19, label %25

25:                                               ; preds = %23
  %26 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0)) #5
  br i1 %26, label %19, label %27

27:                                               ; preds = %25
  %28 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0)) #5
  br i1 %28, label %19, label %29

29:                                               ; preds = %27
  %30 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0)) #5
  br i1 %30, label %19, label %31

31:                                               ; preds = %29
  %32 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0)) #5
  br i1 %32, label %19, label %33

33:                                               ; preds = %31
  %34 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0)) #5
  %35 = select i1 %34, i32 8, i32 0
  br label %19
}

declare zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK9CPDF_Dest6GetXYZEPbS0_S0_PfS1_S1_(%class.CPDF_Dest* nocapture readonly, i8* nocapture, i8* nocapture, i8* nocapture, float* nocapture, float* nocapture, float* nocapture) local_unnamed_addr #1 align 2 {
  %8 = alloca %"class.fxcrt::ByteString", align 8
  store i8 0, i8* %1, align 1
  store i8 0, i8* %2, align 1
  store i8 0, i8* %3, align 1
  %9 = getelementptr inbounds %class.CPDF_Dest, %class.CPDF_Dest* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %class.CPDF_Array*, %class.CPDF_Array** %9, align 8
  %11 = icmp eq %class.CPDF_Array* %10, null
  br i1 %11, label %86, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %10, i64 0, i32 1
  %14 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %10, i64 0, i32 1, i32 0, i32 1
  %15 = bitcast %"class.fxcrt::RetainPtr.0"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = icmp ult i64 %20, 5
  br i1 %21, label %86, label %22

22:                                               ; preds = %12
  %23 = tail call %class.CPDF_Object* @_ZNK10CPDF_Array17GetDirectObjectAtEm(%class.CPDF_Array* nonnull %10, i64 1) #5
  %24 = icmp eq %class.CPDF_Object* %23, null
  br i1 %24, label %86, label %25

25:                                               ; preds = %22
  %26 = bitcast %class.CPDF_Object* %23 to %class.CPDF_Name* (%class.CPDF_Object*)***
  %27 = load %class.CPDF_Name* (%class.CPDF_Object*)**, %class.CPDF_Name* (%class.CPDF_Object*)*** %26, align 8
  %28 = getelementptr inbounds %class.CPDF_Name* (%class.CPDF_Object*)*, %class.CPDF_Name* (%class.CPDF_Object*)** %27, i64 30
  %29 = load %class.CPDF_Name* (%class.CPDF_Object*)*, %class.CPDF_Name* (%class.CPDF_Object*)** %28, align 8
  %30 = tail call %class.CPDF_Name* %29(%class.CPDF_Object* nonnull %23) #5
  %31 = icmp eq %class.CPDF_Name* %30, null
  br i1 %31, label %86, label %32

32:                                               ; preds = %25
  %33 = bitcast %"class.fxcrt::ByteString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #5
  call void @_ZNK9CPDF_Name9GetStringEv(%"class.fxcrt::ByteString"* nonnull sret %8, %class.CPDF_Name* nonnull %30) #5
  %34 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0)) #5
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #5
  br i1 %34, label %35, label %86

35:                                               ; preds = %32
  %36 = load %class.CPDF_Array*, %class.CPDF_Array** %9, align 8
  %37 = call %class.CPDF_Object* @_ZNK10CPDF_Array17GetDirectObjectAtEm(%class.CPDF_Array* %36, i64 2) #5
  %38 = icmp eq %class.CPDF_Object* %37, null
  br i1 %38, label %45, label %39

39:                                               ; preds = %35
  %40 = bitcast %class.CPDF_Object* %37 to %class.CPDF_Number* (%class.CPDF_Object*)***
  %41 = load %class.CPDF_Number* (%class.CPDF_Object*)**, %class.CPDF_Number* (%class.CPDF_Object*)*** %40, align 8
  %42 = getelementptr inbounds %class.CPDF_Number* (%class.CPDF_Object*)*, %class.CPDF_Number* (%class.CPDF_Object*)** %41, i64 32
  %43 = load %class.CPDF_Number* (%class.CPDF_Object*)*, %class.CPDF_Number* (%class.CPDF_Object*)** %42, align 8
  %44 = call %class.CPDF_Number* %43(%class.CPDF_Object* nonnull %37) #5
  br label %45

45:                                               ; preds = %35, %39
  %46 = phi %class.CPDF_Number* [ %44, %39 ], [ null, %35 ]
  %47 = load %class.CPDF_Array*, %class.CPDF_Array** %9, align 8
  %48 = call %class.CPDF_Object* @_ZNK10CPDF_Array17GetDirectObjectAtEm(%class.CPDF_Array* %47, i64 3) #5
  %49 = icmp eq %class.CPDF_Object* %48, null
  br i1 %49, label %56, label %50

50:                                               ; preds = %45
  %51 = bitcast %class.CPDF_Object* %48 to %class.CPDF_Number* (%class.CPDF_Object*)***
  %52 = load %class.CPDF_Number* (%class.CPDF_Object*)**, %class.CPDF_Number* (%class.CPDF_Object*)*** %51, align 8
  %53 = getelementptr inbounds %class.CPDF_Number* (%class.CPDF_Object*)*, %class.CPDF_Number* (%class.CPDF_Object*)** %52, i64 32
  %54 = load %class.CPDF_Number* (%class.CPDF_Object*)*, %class.CPDF_Number* (%class.CPDF_Object*)** %53, align 8
  %55 = call %class.CPDF_Number* %54(%class.CPDF_Object* nonnull %48) #5
  br label %56

56:                                               ; preds = %45, %50
  %57 = phi %class.CPDF_Number* [ %55, %50 ], [ null, %45 ]
  %58 = load %class.CPDF_Array*, %class.CPDF_Array** %9, align 8
  %59 = call %class.CPDF_Object* @_ZNK10CPDF_Array17GetDirectObjectAtEm(%class.CPDF_Array* %58, i64 4) #5
  %60 = icmp eq %class.CPDF_Object* %59, null
  br i1 %60, label %67, label %61

61:                                               ; preds = %56
  %62 = bitcast %class.CPDF_Object* %59 to %class.CPDF_Number* (%class.CPDF_Object*)***
  %63 = load %class.CPDF_Number* (%class.CPDF_Object*)**, %class.CPDF_Number* (%class.CPDF_Object*)*** %62, align 8
  %64 = getelementptr inbounds %class.CPDF_Number* (%class.CPDF_Object*)*, %class.CPDF_Number* (%class.CPDF_Object*)** %63, i64 32
  %65 = load %class.CPDF_Number* (%class.CPDF_Object*)*, %class.CPDF_Number* (%class.CPDF_Object*)** %64, align 8
  %66 = call %class.CPDF_Number* %65(%class.CPDF_Object* nonnull %59) #5
  br label %67

67:                                               ; preds = %56, %61
  %68 = phi %class.CPDF_Number* [ %66, %61 ], [ null, %56 ]
  %69 = icmp ne %class.CPDF_Number* %46, null
  %70 = zext i1 %69 to i8
  store i8 %70, i8* %1, align 1
  %71 = icmp ne %class.CPDF_Number* %57, null
  %72 = zext i1 %71 to i8
  store i8 %72, i8* %2, align 1
  %73 = icmp ne %class.CPDF_Number* %68, null
  %74 = zext i1 %73 to i8
  store i8 %74, i8* %3, align 1
  br i1 %69, label %75, label %77

75:                                               ; preds = %67
  %76 = call float @_ZNK11CPDF_Number9GetNumberEv(%class.CPDF_Number* nonnull %46) #5
  store float %76, float* %4, align 4
  br label %77

77:                                               ; preds = %75, %67
  br i1 %71, label %78, label %80

78:                                               ; preds = %77
  %79 = call float @_ZNK11CPDF_Number9GetNumberEv(%class.CPDF_Number* nonnull %57) #5
  store float %79, float* %5, align 4
  br label %80

80:                                               ; preds = %78, %77
  br i1 %73, label %81, label %86

81:                                               ; preds = %80
  %82 = call float @_ZNK11CPDF_Number9GetNumberEv(%class.CPDF_Number* nonnull %68) #5
  %83 = fcmp oeq float %82, 0.000000e+00
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  store i8 0, i8* %3, align 1
  br label %86

85:                                               ; preds = %81
  store float %82, float* %6, align 4
  br label %86

86:                                               ; preds = %32, %7, %25, %22, %84, %85, %80, %12
  %87 = phi i1 [ false, %7 ], [ false, %12 ], [ false, %32 ], [ true, %84 ], [ true, %85 ], [ true, %80 ], [ false, %22 ], [ false, %25 ]
  ret i1 %87
}

declare void @_ZNK9CPDF_Name9GetStringEv(%"class.fxcrt::ByteString"* sret, %class.CPDF_Name*) unnamed_addr #2

declare float @_ZNK11CPDF_Number9GetNumberEv(%class.CPDF_Number*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK9CPDF_Dest12GetNumParamsEv(%class.CPDF_Dest* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CPDF_Dest, %class.CPDF_Dest* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CPDF_Array*, %class.CPDF_Array** %2, align 8
  %4 = icmp eq %class.CPDF_Array* %3, null
  br i1 %4, label %33, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %3, i64 0, i32 1
  %7 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %3, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast %"class.fxcrt::RetainPtr.0"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = ashr exact i64 %12, 3
  %14 = icmp ult i64 %13, 2
  br i1 %14, label %33, label %15

15:                                               ; preds = %5
  %16 = tail call i32 @_ZNK9CPDF_Dest11GetZoomModeEv(%class.CPDF_Dest* %0)
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds [10 x i8], [10 x i8]* @_ZN12_GLOBAL__N_124g_sZoomModeMaxParamCountE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i64
  %21 = load %class.CPDF_Array*, %class.CPDF_Array** %2, align 8
  %22 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %21, i64 0, i32 1
  %23 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %21, i64 0, i32 1, i32 0, i32 1
  %24 = bitcast %"class.fxcrt::RetainPtr.0"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::vector"* %22 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %25, %27
  %29 = ashr exact i64 %28, 3
  %30 = add nsw i64 %29, -2
  %31 = icmp ult i64 %30, %20
  %32 = select i1 %31, i64 %30, i64 %20
  br label %33

33:                                               ; preds = %1, %5, %15
  %34 = phi i64 [ %32, %15 ], [ 0, %5 ], [ 0, %1 ]
  ret i64 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK9CPDF_Dest8GetParamEi(%class.CPDF_Dest* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.CPDF_Dest, %class.CPDF_Dest* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_Array*, %class.CPDF_Array** %3, align 8
  %5 = icmp eq %class.CPDF_Array* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = add nsw i32 %1, 2
  %8 = sext i32 %7 to i64
  %9 = tail call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %4, i64 %8) #5
  br label %10

10:                                               ; preds = %2, %6
  %11 = phi float [ %9, %6 ], [ 0.000000e+00, %2 ]
  ret float %11
}

declare float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array*, i64) local_unnamed_addr #2

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
