; ModuleID = '../../gpu/ipc/common/gpu_memory_buffer_impl.cc'
source_filename = "../../gpu/ipc/common/gpu_memory_buffer_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gpu::GpuMemoryBufferImpl" = type <{ %"class.gfx::GpuMemoryBuffer", %"class.gfx::GenericSharedMemoryId", %"class.gfx::Size", i32, %"class.base::OnceCallback", %"struct.gpu::SyncToken", %"class.base::Lock", i32, [4 x i8] }>
%"class.gfx::GpuMemoryBuffer" = type { i32 (...)** }
%"class.gfx::GenericSharedMemoryId" = type { i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType", i64 }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct._ClientBuffer = type opaque
%"class.base::trace_event::ProcessMemoryDump" = type { %"class.base::UnguessableToken", %"class.std::__1::map", %"class.std::__1::map.5", %"struct.base::trace_event::MemoryDumpArgs", %"class.std::__1::unique_ptr" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i64 }
%"class.std::__1::map.5" = type { %"class.std::__1::__tree.6" }
%"class.std::__1::__tree.6" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.base::trace_event::MemoryDumpArgs" = type { i32, i32, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.base::trace_event::MemoryAllocatorDump"* }
%"class.base::trace_event::MemoryAllocatorDump" = type { %"class.std::__1::basic_string", %"class.base::trace_event::MemoryAllocatorDumpGuid", i32, i32, %"class.absl::optional", %"class.std::__1::vector" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::trace_event::MemoryAllocatorDumpGuid" = type { i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.23 }
%union.anon.23 = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"class.std::__1::__compressed_pair.24" }
%"struct.base::trace_event::MemoryAllocatorDump::Entry" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i64, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"* }
%"class.gfx::ColorSpace" = type opaque
%"struct.gfx::HDRMetadata" = type { %"struct.gfx::MasteringMetadata", i32, i32 }
%"struct.gfx::MasteringMetadata" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", float, float }
%"class.gfx::PointF" = type { float, float }

@_ZTVN3gpu19GpuMemoryBufferImplE = hidden unnamed_addr constant { [17 x i8*] } { [17 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::GpuMemoryBufferImpl"*)* @_ZN3gpu19GpuMemoryBufferImplD2Ev to i8*), i8* bitcast (void (%"class.gpu::GpuMemoryBufferImpl"*)* @_ZN3gpu19GpuMemoryBufferImplD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i64 (%"class.gpu::GpuMemoryBufferImpl"*)* @_ZNK3gpu19GpuMemoryBufferImpl7GetSizeEv to i8*), i8* bitcast (i32 (%"class.gpu::GpuMemoryBufferImpl"*)* @_ZNK3gpu19GpuMemoryBufferImpl9GetFormatEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.gfx::GpuMemoryBuffer"*, %"class.gfx::ColorSpace"*)* @_ZN3gfx15GpuMemoryBuffer13SetColorSpaceERKNS_10ColorSpaceE to i8*), i8* bitcast (void (%"class.gfx::GpuMemoryBuffer"*, %"struct.gfx::HDRMetadata"*)* @_ZN3gfx15GpuMemoryBuffer14SetHDRMetadataERKNS_11HDRMetadataE to i8*), i8* bitcast (i32 (%"class.gpu::GpuMemoryBufferImpl"*)* @_ZNK3gpu19GpuMemoryBufferImpl5GetIdEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%struct._ClientBuffer* (%"class.gpu::GpuMemoryBufferImpl"*)* @_ZN3gpu19GpuMemoryBufferImpl14AsClientBufferEv to i8*), i8* bitcast (void (%"class.gpu::GpuMemoryBufferImpl"*, %"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::MemoryAllocatorDumpGuid"*, i64, i32)* @_ZNK3gpu19GpuMemoryBufferImpl12OnMemoryDumpEPN4base11trace_event17ProcessMemoryDumpERKNS2_23MemoryAllocatorDumpGuidEmi to i8*)] }, align 8

@_ZN3gpu19GpuMemoryBufferImplD1Ev = hidden unnamed_addr alias void (%"class.gpu::GpuMemoryBufferImpl"*), void (%"class.gpu::GpuMemoryBufferImpl"*)* @_ZN3gpu19GpuMemoryBufferImplD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu19GpuMemoryBufferImplC2EN3gfx21GenericSharedMemoryIdERKNS1_4SizeENS1_12BufferFormatEN4base12OnceCallbackIFvRKNS_9SyncTokenEEEE(%"class.gpu::GpuMemoryBufferImpl"*, i32, %"class.gfx::Size"* nocapture readonly dereferenceable(8), i32, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.gpu::GpuMemoryBufferImpl", %"class.gpu::GpuMemoryBufferImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTVN3gpu19GpuMemoryBufferImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.gpu::GpuMemoryBufferImpl", %"class.gpu::GpuMemoryBufferImpl"* %0, i64 0, i32 1, i32 0
  store i32 %1, i32* %7, align 8
  %8 = getelementptr inbounds %"class.gpu::GpuMemoryBufferImpl", %"class.gpu::GpuMemoryBufferImpl"* %0, i64 0, i32 2
  %9 = bitcast %"class.gfx::Size"* %2 to i64*
  %10 = bitcast %"class.gfx::Size"* %8 to i64*
  %11 = load i64, i64* %9, align 4
  store i64 %11, i64* %10, align 4
  %12 = getelementptr inbounds %"class.gpu::GpuMemoryBufferImpl", %"class.gpu::GpuMemoryBufferImpl"* %0, i64 0, i32 3
  store i32 %3, i32* %12, align 4
  %13 = getelementptr inbounds %"class.gpu::GpuMemoryBufferImpl", %"class.gpu::GpuMemoryBufferImpl"* %0, i64 0, i32 4
  %14 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.base::OnceCallback"* %4 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.base::OnceCallback"* %13 to i64*
  store i64 %16, i64* %17, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %14, align 8
  %18 = getelementptr inbounds %"class.gpu::GpuMemoryBufferImpl", %"class.gpu::GpuMemoryBufferImpl"* %0, i64 0, i32 5
  tail call void @_ZN3gpu9SyncTokenC1Ev(%"struct.gpu::SyncToken"* %18) #8
  %19 = getelementptr inbounds %"class.gpu::GpuMemoryBufferImpl", %"class.gpu::GpuMemoryBufferImpl"* %0, i64 0, i32 6, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %19) #8
  %20 = getelementptr inbounds %"class.gpu::GpuMemoryBufferImpl", %"class.gpu::GpuMemoryBufferImpl"* %0, i64 0, i32 7
  store i32 0, i32* %20, align 8
  ret void
}

declare void @_ZN3gpu9SyncTokenC1Ev(%"struct.gpu::SyncToken"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu19GpuMemoryBufferImplD2Ev(%"class.gpu::GpuMemoryBufferImpl"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.gpu::GpuMemoryBufferImpl", %"class.gpu::GpuMemoryBufferImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTVN3gpu19GpuMemoryBufferImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.gpu::GpuMemoryBufferImpl", %"class.gpu::GpuMemoryBufferImpl"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %6, align 8
  %8 = icmp eq %"class.base::internal::BindStateBase"* %7, null
  br i1 %8, label %18, label %9

9:                                                ; preds = %1
  %10 = ptrtoint %"class.base::internal::BindStateBase"* %7 to i64
  %11 = getelementptr inbounds %"class.gpu::GpuMemoryBufferImpl", %"class.gpu::GpuMemoryBufferImpl"* %0, i64 0, i32 5
  %12 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #8
  %13 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %10, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8
  %14 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %7, i64 0, i32 1
  %16 = bitcast void ()** %15 to void (%"class.base::internal::BindStateBase"*, %"struct.gpu::SyncToken"*)**
  %17 = load void (%"class.base::internal::BindStateBase"*, %"struct.gpu::SyncToken"*)*, void (%"class.base::internal::BindStateBase"*, %"struct.gpu::SyncToken"*)** %16, align 8
  tail call void %17(%"class.base::internal::BindStateBase"* nonnull %7, %"struct.gpu::SyncToken"* dereferenceable(24) %11) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %14) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #8
  br label %18

18:                                               ; preds = %9, %1
  %19 = getelementptr inbounds %"class.gpu::GpuMemoryBufferImpl", %"class.gpu::GpuMemoryBufferImpl"* %0, i64 0, i32 6, i32 0
  call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %19) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN3gpu19GpuMemoryBufferImplD0Ev(%"class.gpu::GpuMemoryBufferImpl"* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK3gpu19GpuMemoryBufferImpl7GetSizeEv(%"class.gpu::GpuMemoryBufferImpl"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.gpu::GpuMemoryBufferImpl", %"class.gpu::GpuMemoryBufferImpl"* %0, i64 0, i32 2
  %3 = bitcast %"class.gfx::Size"* %2 to i64*
  %4 = load i64, i64* %3, align 4
  ret i64 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3gpu19GpuMemoryBufferImpl9GetFormatEv(%"class.gpu::GpuMemoryBufferImpl"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.gpu::GpuMemoryBufferImpl", %"class.gpu::GpuMemoryBufferImpl"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3gpu19GpuMemoryBufferImpl5GetIdEv(%"class.gpu::GpuMemoryBufferImpl"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.gpu::GpuMemoryBufferImpl", %"class.gpu::GpuMemoryBufferImpl"* %0, i64 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct._ClientBuffer* @_ZN3gpu19GpuMemoryBufferImpl14AsClientBufferEv(%"class.gpu::GpuMemoryBufferImpl"* readnone) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.gpu::GpuMemoryBufferImpl"* %0 to %struct._ClientBuffer*
  ret %struct._ClientBuffer* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gpu19GpuMemoryBufferImpl12OnMemoryDumpEPN4base11trace_event17ProcessMemoryDumpERKNS2_23MemoryAllocatorDumpGuidEmi(%"class.gpu::GpuMemoryBufferImpl"*, %"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8), i64, i32) unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::trace_event::MemoryAllocatorDumpGuid", align 8
  %7 = bitcast %"class.base::trace_event::MemoryAllocatorDumpGuid"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.base::trace_event::MemoryAllocatorDumpGuid", %"class.base::trace_event::MemoryAllocatorDumpGuid"* %6, i64 0, i32 0
  %9 = bitcast %"class.gpu::GpuMemoryBufferImpl"* %0 to i32 (%"class.gpu::GpuMemoryBufferImpl"*)***
  %10 = load i32 (%"class.gpu::GpuMemoryBufferImpl"*)**, i32 (%"class.gpu::GpuMemoryBufferImpl"*)*** %9, align 8
  %11 = getelementptr inbounds i32 (%"class.gpu::GpuMemoryBufferImpl"*)*, i32 (%"class.gpu::GpuMemoryBufferImpl"*)** %10, i64 10
  %12 = load i32 (%"class.gpu::GpuMemoryBufferImpl"*)*, i32 (%"class.gpu::GpuMemoryBufferImpl"*)** %11, align 8
  %13 = tail call i32 %12(%"class.gpu::GpuMemoryBufferImpl"* %0) #8
  %14 = tail call i64 @_ZN3gfx39GetGenericSharedGpuMemoryGUIDForTracingEmNS_21GenericSharedMemoryIdE(i64 %3, i32 %13) #8
  store i64 %14, i64* %8, align 8
  %15 = call %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump31CreateSharedGlobalAllocatorDumpERKNS0_23MemoryAllocatorDumpGuidE(%"class.base::trace_event::ProcessMemoryDump"* %1, %"class.base::trace_event::MemoryAllocatorDumpGuid"* nonnull dereferenceable(8) %6) #8
  call void @_ZN4base11trace_event17ProcessMemoryDump16AddOwnershipEdgeERKNS0_23MemoryAllocatorDumpGuidES4_i(%"class.base::trace_event::ProcessMemoryDump"* %1, %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8) %2, %"class.base::trace_event::MemoryAllocatorDumpGuid"* nonnull dereferenceable(8) %6, i32 %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #7

declare i64 @_ZN3gfx39GetGenericSharedGpuMemoryGUIDForTracingEmNS_21GenericSharedMemoryIdE(i64, i32) local_unnamed_addr #1

declare %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump31CreateSharedGlobalAllocatorDumpERKNS0_23MemoryAllocatorDumpGuidE(%"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN4base11trace_event17ProcessMemoryDump16AddOwnershipEdgeERKNS0_23MemoryAllocatorDumpGuidES4_i(%"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8), %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8), i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3gpu19GpuMemoryBufferImpl12AssertMappedEv(%"class.gpu::GpuMemoryBufferImpl"* nocapture) local_unnamed_addr #6 align 2 {
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZN3gfx15GpuMemoryBuffer13SetColorSpaceERKNS_10ColorSpaceE(%"class.gfx::GpuMemoryBuffer"*, %"class.gfx::ColorSpace"*) unnamed_addr #1

declare void @_ZN3gfx15GpuMemoryBuffer14SetHDRMetadataERKNS_11HDRMetadataE(%"class.gfx::GpuMemoryBuffer"*, %"struct.gfx::HDRMetadata"* dereferenceable(48)) unnamed_addr #1

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
