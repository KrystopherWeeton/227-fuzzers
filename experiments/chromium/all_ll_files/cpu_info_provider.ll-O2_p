; ModuleID = '../../extensions/browser/api/system_cpu/cpu_info_provider.cc'
source_filename = "../../extensions/browser/api/system_cpu/cpu_info_provider.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::LazyInstance" = type { i64, [8 x i8] }
%"class.extensions::CpuInfoProvider" = type { %"class.extensions::SystemInfoProvider", %"struct.extensions::api::system_cpu::CpuInfo", %"class.base::CPU" }
%"class.extensions::SystemInfoProvider" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", %"class.std::__1::queue", i8, %class.scoped_refptr }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::queue" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.base::OnceCallback"*, i64 }
%"class.base::OnceCallback" = type opaque
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type opaque
%"struct.extensions::api::system_cpu::CpuInfo" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::vector.7", %"class.std::__1::vector.14" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { %"struct.extensions::api::system_cpu::ProcessorInfo"*, %"struct.extensions::api::system_cpu::ProcessorInfo"*, %"class.std::__1::__compressed_pair.9" }
%"struct.extensions::api::system_cpu::ProcessorInfo" = type { %"struct.extensions::api::system_cpu::CpuTime" }
%"struct.extensions::api::system_cpu::CpuTime" = type { double, double, double, double }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.extensions::api::system_cpu::ProcessorInfo"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { double*, double*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { double* }
%"class.base::CPU" = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.scoped_refptr.21 = type { %"class.extensions::CpuInfoProvider"* }
%"class.base::OnceCallback.22" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.23 }
%class.scoped_refptr.23 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.24", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.24" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN4base12LazyInstanceI13scoped_refptrIN10extensions15CpuInfoProviderEENS_8internal34DestructorAtExitLazyInstanceTraitsIS4_EEE6OnExitEPv = comdat any

$_ZNSt3__16vectorIN10extensions3api10system_cpu13ProcessorInfoENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

@_ZN10extensions15CpuInfoProvider9provider_E = hidden global %"class.base::LazyInstance" zeroinitializer, align 8
@_ZTVN10extensions15CpuInfoProviderE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::SystemInfoProvider"*)* @_ZN10extensions18SystemInfoProvider22PrepareQueryOnUIThreadEv to i8*), i8* bitcast (void (%"class.extensions::SystemInfoProvider"*, %"class.base::OnceCallback.22"*)* @_ZN10extensions18SystemInfoProvider18InitializeProviderEN4base12OnceCallbackIFvvEEE to i8*), i8* bitcast (void (%"class.extensions::CpuInfoProvider"*)* @_ZN10extensions15CpuInfoProviderD2Ev to i8*), i8* bitcast (void (%"class.extensions::CpuInfoProvider"*)* @_ZN10extensions15CpuInfoProviderD0Ev to i8*), i8* bitcast (i1 (%"class.extensions::CpuInfoProvider"*)* @_ZN10extensions15CpuInfoProvider9QueryInfoEv to i8*), i8* bitcast (i1 (%"class.extensions::CpuInfoProvider"*, %"class.std::__1::vector.7"*)* @_ZN10extensions15CpuInfoProvider24QueryCpuTimePerProcessorEPNSt3__16vectorINS_3api10system_cpu13ProcessorInfoENS1_9allocatorIS5_EEEE to i8*)] }, align 8
@.str = private unnamed_addr constant [4 x i8] c"mmx\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"sse\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"ssse3\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"sse4_1\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"sse4_2\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"avx\00", align 1

@_ZN10extensions15CpuInfoProviderC1Ev = hidden unnamed_addr alias void (%"class.extensions::CpuInfoProvider"*), void (%"class.extensions::CpuInfoProvider"*)* @_ZN10extensions15CpuInfoProviderC2Ev
@_ZN10extensions15CpuInfoProviderD1Ev = hidden unnamed_addr alias void (%"class.extensions::CpuInfoProvider"*), void (%"class.extensions::CpuInfoProvider"*)* @_ZN10extensions15CpuInfoProviderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions15CpuInfoProviderC2Ev(%"class.extensions::CpuInfoProvider"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::CpuInfoProvider", %"class.extensions::CpuInfoProvider"* %0, i64 0, i32 0
  tail call void @_ZN10extensions18SystemInfoProviderC2Ev(%"class.extensions::SystemInfoProvider"* %2) #9
  %3 = getelementptr inbounds %"class.extensions::CpuInfoProvider", %"class.extensions::CpuInfoProvider"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN10extensions15CpuInfoProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.extensions::CpuInfoProvider", %"class.extensions::CpuInfoProvider"* %0, i64 0, i32 1
  tail call void @_ZN10extensions3api10system_cpu7CpuInfoC1Ev(%"struct.extensions::api::system_cpu::CpuInfo"* %4) #9
  %5 = getelementptr inbounds %"class.extensions::CpuInfoProvider", %"class.extensions::CpuInfoProvider"* %0, i64 0, i32 2
  tail call void @_ZN4base3CPUC1Ev(%"class.base::CPU"* %5) #9
  ret void
}

declare void @_ZN10extensions18SystemInfoProviderC2Ev(%"class.extensions::SystemInfoProvider"*) unnamed_addr #1

declare void @_ZN10extensions3api10system_cpu7CpuInfoC1Ev(%"struct.extensions::api::system_cpu::CpuInfo"*) unnamed_addr #1

declare void @_ZN4base3CPUC1Ev(%"class.base::CPU"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions15CpuInfoProviderD2Ev(%"class.extensions::CpuInfoProvider"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::CpuInfoProvider", %"class.extensions::CpuInfoProvider"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN10extensions15CpuInfoProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.extensions::CpuInfoProvider", %"class.extensions::CpuInfoProvider"* %0, i64 0, i32 2, i32 25
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #10
  br label %11

11:                                               ; preds = %8, %1
  %12 = getelementptr inbounds %"class.extensions::CpuInfoProvider", %"class.extensions::CpuInfoProvider"* %0, i64 0, i32 2, i32 24
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #10
  br label %20

20:                                               ; preds = %11, %17
  %21 = getelementptr inbounds %"class.extensions::CpuInfoProvider", %"class.extensions::CpuInfoProvider"* %0, i64 0, i32 1
  tail call void @_ZN10extensions3api10system_cpu7CpuInfoD1Ev(%"struct.extensions::api::system_cpu::CpuInfo"* %21) #9
  %22 = getelementptr inbounds %"class.extensions::CpuInfoProvider", %"class.extensions::CpuInfoProvider"* %0, i64 0, i32 0
  tail call void @_ZN10extensions18SystemInfoProviderD2Ev(%"class.extensions::SystemInfoProvider"* %22) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN10extensions3api10system_cpu7CpuInfoD1Ev(%"struct.extensions::api::system_cpu::CpuInfo"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN10extensions18SystemInfoProviderD2Ev(%"class.extensions::SystemInfoProvider"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions15CpuInfoProviderD0Ev(%"class.extensions::CpuInfoProvider"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::CpuInfoProvider", %"class.extensions::CpuInfoProvider"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN10extensions15CpuInfoProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.extensions::CpuInfoProvider", %"class.extensions::CpuInfoProvider"* %0, i64 0, i32 2, i32 25
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #10
  br label %11

11:                                               ; preds = %8, %1
  %12 = getelementptr inbounds %"class.extensions::CpuInfoProvider", %"class.extensions::CpuInfoProvider"* %0, i64 0, i32 2, i32 24
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #10
  br label %20

20:                                               ; preds = %11, %17
  %21 = getelementptr inbounds %"class.extensions::CpuInfoProvider", %"class.extensions::CpuInfoProvider"* %0, i64 0, i32 1
  tail call void @_ZN10extensions3api10system_cpu7CpuInfoD1Ev(%"struct.extensions::api::system_cpu::CpuInfo"* %21) #9
  %22 = getelementptr inbounds %"class.extensions::CpuInfoProvider", %"class.extensions::CpuInfoProvider"* %0, i64 0, i32 0
  tail call void @_ZN10extensions18SystemInfoProviderD2Ev(%"class.extensions::SystemInfoProvider"* %22) #9
  %23 = bitcast %"class.extensions::CpuInfoProvider"* %0 to i8*
  tail call void @_ZdlPv(i8* %23) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions15CpuInfoProvider20InitializeForTestingE13scoped_refptrIS0_E(%"class.extensions::CpuInfoProvider"*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.extensions::CpuInfoProvider"* %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.extensions::CpuInfoProvider", %"class.extensions::CpuInfoProvider"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = atomicrmw add i32* %4, i32 1 monotonic
  br label %6

6:                                                ; preds = %1, %3
  %7 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions15CpuInfoProvider9provider_E, i64 0, i32 0) acquire, align 8
  %8 = icmp ugt i64 %7, 1
  br i1 %8, label %14, label %9

9:                                                ; preds = %6
  %10 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions15CpuInfoProvider9provider_E, i64 0, i32 0)) #9
  br i1 %10, label %11, label %12

11:                                               ; preds = %9
  store %"class.extensions::CpuInfoProvider"* null, %"class.extensions::CpuInfoProvider"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions15CpuInfoProvider9provider_E, i64 0, i32 1, i64 0) to %"class.extensions::CpuInfoProvider"**), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions15CpuInfoProvider9provider_E, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions15CpuInfoProvider9provider_E, i64 0, i32 1, i64 0) to i64), void (i8*)* nonnull @_ZN4base12LazyInstanceI13scoped_refptrIN10extensions15CpuInfoProviderEENS_8internal34DestructorAtExitLazyInstanceTraitsIS4_EEE6OnExitEPv, i8* bitcast (%"class.base::LazyInstance"* @_ZN10extensions15CpuInfoProvider9provider_E to i8*)) #9
  br label %14

12:                                               ; preds = %9
  %13 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions15CpuInfoProvider9provider_E, i64 0, i32 0) acquire, align 8
  br label %14

14:                                               ; preds = %6, %11, %12
  %15 = phi i64 [ %7, %6 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions15CpuInfoProvider9provider_E, i64 0, i32 1, i64 0) to i64), %11 ], [ %13, %12 ]
  %16 = inttoptr i64 %15 to %class.scoped_refptr.21*
  %17 = ptrtoint %"class.extensions::CpuInfoProvider"* %0 to i64
  %18 = inttoptr i64 %15 to i64*
  %19 = getelementptr inbounds %class.scoped_refptr.21, %class.scoped_refptr.21* %16, i64 0, i32 0
  %20 = load %"class.extensions::CpuInfoProvider"*, %"class.extensions::CpuInfoProvider"** %19, align 8
  store i64 %17, i64* %18, align 8
  %21 = icmp eq %"class.extensions::CpuInfoProvider"* %20, null
  br i1 %21, label %34, label %22

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"class.extensions::CpuInfoProvider", %"class.extensions::CpuInfoProvider"* %20, i64 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw sub i32* %24, i32 1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %34

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %23, i64 -2
  %29 = bitcast %"class.base::RefCountedThreadSafe"* %28 to %"class.extensions::SystemInfoProvider"*
  %30 = bitcast %"class.base::RefCountedThreadSafe"* %28 to void (%"class.extensions::SystemInfoProvider"*)***
  %31 = load void (%"class.extensions::SystemInfoProvider"*)**, void (%"class.extensions::SystemInfoProvider"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.extensions::SystemInfoProvider"*)*, void (%"class.extensions::SystemInfoProvider"*)** %31, i64 3
  %33 = load void (%"class.extensions::SystemInfoProvider"*)*, void (%"class.extensions::SystemInfoProvider"*)** %32, align 8
  tail call void %33(%"class.extensions::SystemInfoProvider"* nonnull %29) #9
  br label %34

34:                                               ; preds = %14, %22, %27
  br i1 %2, label %47, label %35

35:                                               ; preds = %34
  %36 = getelementptr inbounds %"class.extensions::CpuInfoProvider", %"class.extensions::CpuInfoProvider"* %0, i64 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw sub i32* %37, i32 1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %47

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %36, i64 -2
  %42 = bitcast %"class.base::RefCountedThreadSafe"* %41 to %"class.extensions::SystemInfoProvider"*
  %43 = bitcast %"class.base::RefCountedThreadSafe"* %41 to void (%"class.extensions::SystemInfoProvider"*)***
  %44 = load void (%"class.extensions::SystemInfoProvider"*)**, void (%"class.extensions::SystemInfoProvider"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.extensions::SystemInfoProvider"*)*, void (%"class.extensions::SystemInfoProvider"*)** %44, i64 3
  %46 = load void (%"class.extensions::SystemInfoProvider"*)*, void (%"class.extensions::SystemInfoProvider"*)** %45, align 8
  tail call void %46(%"class.extensions::SystemInfoProvider"* nonnull %42) #9
  br label %47

47:                                               ; preds = %34, %35, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions15CpuInfoProvider9QueryInfoEv(%"class.extensions::CpuInfoProvider"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::vector", align 16
  %5 = alloca %"struct.extensions::api::system_cpu::ProcessorInfo", align 8
  %6 = tail call i32 @_ZN4base7SysInfo18NumberOfProcessorsEv() #9
  %7 = getelementptr inbounds %"class.extensions::CpuInfoProvider", %"class.extensions::CpuInfoProvider"* %0, i64 0, i32 1, i32 0
  store i32 %6, i32* %7, align 8
  %8 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #9
  call void @_ZN4base7SysInfo27OperatingSystemArchitectureEv(%"class.std::__1::basic_string"* nonnull sret %2) #9
  %9 = getelementptr inbounds %"class.extensions::CpuInfoProvider", %"class.extensions::CpuInfoProvider"* %0, i64 0, i32 1, i32 1
  %10 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %14, %1
  %18 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* nonnull align 8 %8, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #9
  %19 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #9
  call void @_ZN4base7SysInfo12CPUModelNameEv(%"class.std::__1::basic_string"* nonnull sret %3) #9
  %20 = getelementptr inbounds %"class.extensions::CpuInfoProvider", %"class.extensions::CpuInfoProvider"* %0, i64 0, i32 1, i32 2
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %27) #10
  br label %28

28:                                               ; preds = %25, %17
  %29 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* nonnull align 8 %19, i64 24, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #9
  %30 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #9
  call void @_ZNK10extensions15CpuInfoProvider11GetFeaturesEv(%"class.std::__1::vector"* nonnull sret %4, %"class.extensions::CpuInfoProvider"* %0)
  %31 = getelementptr inbounds %"class.extensions::CpuInfoProvider", %"class.extensions::CpuInfoProvider"* %0, i64 0, i32 1, i32 3
  %32 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %31, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %32, align 8
  %34 = icmp eq %"class.std::__1::basic_string"* %33, null
  br i1 %34, label %58, label %35

35:                                               ; preds = %28
  %36 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  %37 = getelementptr inbounds %"class.extensions::CpuInfoProvider", %"class.extensions::CpuInfoProvider"* %0, i64 0, i32 1, i32 3, i32 0, i32 1
  %38 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %37, align 8
  %39 = icmp eq %"class.std::__1::basic_string"* %38, %33
  br i1 %39, label %55, label %40

40:                                               ; preds = %35, %50
  %41 = phi %"class.std::__1::basic_string"* [ %42, %50 ], [ %38, %35 ]
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %41, i64 -1
  %43 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @_ZdlPv(i8* %49) #10
  br label %50

50:                                               ; preds = %47, %40
  %51 = icmp eq %"class.std::__1::basic_string"* %42, %33
  br i1 %51, label %52, label %40

52:                                               ; preds = %50
  %53 = bitcast %"class.std::__1::vector"* %31 to i8**
  %54 = load i8*, i8** %53, align 8
  br label %55

55:                                               ; preds = %52, %35
  %56 = phi i8* [ %54, %52 ], [ %36, %35 ]
  store %"class.std::__1::basic_string"* %33, %"class.std::__1::basic_string"** %37, align 8
  call void @_ZdlPv(i8* %56) #10
  %57 = bitcast %"class.std::__1::vector"* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 24, i1 false) #9
  br label %58

58:                                               ; preds = %28, %55
  %59 = bitcast %"class.std::__1::vector"* %4 to <2 x i64>*
  %60 = load <2 x i64>, <2 x i64>* %59, align 16
  %61 = bitcast %"class.std::__1::vector"* %31 to <2 x i64>*
  store <2 x i64> %60, <2 x i64>* %61, align 8
  %62 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %63 = bitcast %"class.std::__1::basic_string"** %62 to i64*
  %64 = load i64, i64* %63, align 16
  %65 = getelementptr inbounds %"class.extensions::CpuInfoProvider", %"class.extensions::CpuInfoProvider"* %0, i64 0, i32 1, i32 3, i32 0, i32 2, i32 0, i32 0
  %66 = bitcast %"class.std::__1::basic_string"** %65 to i64*
  store i64 %64, i64* %66, align 8
  %67 = getelementptr inbounds %"class.extensions::CpuInfoProvider", %"class.extensions::CpuInfoProvider"* %0, i64 0, i32 1, i32 4, i32 0, i32 0
  %68 = load %"struct.extensions::api::system_cpu::ProcessorInfo"*, %"struct.extensions::api::system_cpu::ProcessorInfo"** %67, align 8
  %69 = getelementptr inbounds %"class.extensions::CpuInfoProvider", %"class.extensions::CpuInfoProvider"* %0, i64 0, i32 1, i32 4, i32 0, i32 1
  %70 = load %"struct.extensions::api::system_cpu::ProcessorInfo"*, %"struct.extensions::api::system_cpu::ProcessorInfo"** %69, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #9
  %71 = getelementptr inbounds %"class.extensions::CpuInfoProvider", %"class.extensions::CpuInfoProvider"* %0, i64 0, i32 1, i32 4
  %72 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %71, i64 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.extensions::CpuInfoProvider", %"class.extensions::CpuInfoProvider"* %0, i64 0, i32 1, i32 4, i32 0, i32 1
  %74 = icmp eq %"struct.extensions::api::system_cpu::ProcessorInfo"* %70, %68
  br i1 %74, label %79, label %75

75:                                               ; preds = %58, %75
  %76 = phi %"struct.extensions::api::system_cpu::ProcessorInfo"* [ %77, %75 ], [ %70, %58 ]
  %77 = getelementptr inbounds %"struct.extensions::api::system_cpu::ProcessorInfo", %"struct.extensions::api::system_cpu::ProcessorInfo"* %76, i64 -1
  call void @_ZN10extensions3api10system_cpu13ProcessorInfoD1Ev(%"struct.extensions::api::system_cpu::ProcessorInfo"* %77) #9
  %78 = icmp eq %"struct.extensions::api::system_cpu::ProcessorInfo"* %77, %68
  br i1 %78, label %79, label %75

79:                                               ; preds = %75, %58
  store %"struct.extensions::api::system_cpu::ProcessorInfo"* %68, %"struct.extensions::api::system_cpu::ProcessorInfo"** %73, align 8
  %80 = load i32, i32* %7, align 8
  %81 = icmp sgt i32 %80, 0
  br i1 %81, label %82, label %86

82:                                               ; preds = %79
  %83 = bitcast %"struct.extensions::api::system_cpu::ProcessorInfo"* %5 to i8*
  %84 = getelementptr inbounds %"class.extensions::CpuInfoProvider", %"class.extensions::CpuInfoProvider"* %0, i64 0, i32 1, i32 4, i32 0, i32 2, i32 0, i32 0
  %85 = bitcast %"struct.extensions::api::system_cpu::ProcessorInfo"** %73 to i64*
  br label %92

86:                                               ; preds = %101, %79
  %87 = bitcast %"class.extensions::CpuInfoProvider"* %0 to i1 (%"class.extensions::CpuInfoProvider"*, %"class.std::__1::vector.7"*)***
  %88 = load i1 (%"class.extensions::CpuInfoProvider"*, %"class.std::__1::vector.7"*)**, i1 (%"class.extensions::CpuInfoProvider"*, %"class.std::__1::vector.7"*)*** %87, align 8
  %89 = getelementptr inbounds i1 (%"class.extensions::CpuInfoProvider"*, %"class.std::__1::vector.7"*)*, i1 (%"class.extensions::CpuInfoProvider"*, %"class.std::__1::vector.7"*)** %88, i64 5
  %90 = load i1 (%"class.extensions::CpuInfoProvider"*, %"class.std::__1::vector.7"*)*, i1 (%"class.extensions::CpuInfoProvider"*, %"class.std::__1::vector.7"*)** %89, align 8
  %91 = call zeroext i1 %90(%"class.extensions::CpuInfoProvider"* %0, %"class.std::__1::vector.7"* %71) #9
  br i1 %91, label %114, label %105

92:                                               ; preds = %82, %101
  %93 = phi i32 [ 0, %82 ], [ %102, %101 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %83) #9
  call void @_ZN10extensions3api10system_cpu13ProcessorInfoC1Ev(%"struct.extensions::api::system_cpu::ProcessorInfo"* nonnull %5) #9
  %94 = load %"struct.extensions::api::system_cpu::ProcessorInfo"*, %"struct.extensions::api::system_cpu::ProcessorInfo"** %73, align 8
  %95 = load %"struct.extensions::api::system_cpu::ProcessorInfo"*, %"struct.extensions::api::system_cpu::ProcessorInfo"** %84, align 8
  %96 = icmp ult %"struct.extensions::api::system_cpu::ProcessorInfo"* %94, %95
  br i1 %96, label %97, label %100

97:                                               ; preds = %92
  call void @_ZN10extensions3api10system_cpu13ProcessorInfoC1EOS2_(%"struct.extensions::api::system_cpu::ProcessorInfo"* %94, %"struct.extensions::api::system_cpu::ProcessorInfo"* nonnull dereferenceable(32) %5) #9
  %98 = getelementptr inbounds %"struct.extensions::api::system_cpu::ProcessorInfo", %"struct.extensions::api::system_cpu::ProcessorInfo"* %94, i64 1
  %99 = ptrtoint %"struct.extensions::api::system_cpu::ProcessorInfo"* %98 to i64
  store i64 %99, i64* %85, align 8
  br label %101

100:                                              ; preds = %92
  call void @_ZNSt3__16vectorIN10extensions3api10system_cpu13ProcessorInfoENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.7"* %71, %"struct.extensions::api::system_cpu::ProcessorInfo"* nonnull dereferenceable(32) %5) #9
  br label %101

101:                                              ; preds = %97, %100
  call void @_ZN10extensions3api10system_cpu13ProcessorInfoD1Ev(%"struct.extensions::api::system_cpu::ProcessorInfo"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %83) #9
  %102 = add nuw nsw i32 %93, 1
  %103 = load i32, i32* %7, align 8
  %104 = icmp slt i32 %102, %103
  br i1 %104, label %92, label %86

105:                                              ; preds = %86
  %106 = load %"struct.extensions::api::system_cpu::ProcessorInfo"*, %"struct.extensions::api::system_cpu::ProcessorInfo"** %72, align 8
  %107 = load %"struct.extensions::api::system_cpu::ProcessorInfo"*, %"struct.extensions::api::system_cpu::ProcessorInfo"** %73, align 8
  %108 = icmp eq %"struct.extensions::api::system_cpu::ProcessorInfo"* %107, %106
  br i1 %108, label %113, label %109

109:                                              ; preds = %105, %109
  %110 = phi %"struct.extensions::api::system_cpu::ProcessorInfo"* [ %111, %109 ], [ %107, %105 ]
  %111 = getelementptr inbounds %"struct.extensions::api::system_cpu::ProcessorInfo", %"struct.extensions::api::system_cpu::ProcessorInfo"* %110, i64 -1
  call void @_ZN10extensions3api10system_cpu13ProcessorInfoD1Ev(%"struct.extensions::api::system_cpu::ProcessorInfo"* %111) #9
  %112 = icmp eq %"struct.extensions::api::system_cpu::ProcessorInfo"* %111, %106
  br i1 %112, label %113, label %109

113:                                              ; preds = %109, %105
  store %"struct.extensions::api::system_cpu::ProcessorInfo"* %106, %"struct.extensions::api::system_cpu::ProcessorInfo"** %73, align 8
  br label %114

114:                                              ; preds = %113, %86
  ret i1 true
}

declare i32 @_ZN4base7SysInfo18NumberOfProcessorsEv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base7SysInfo27OperatingSystemArchitectureEv(%"class.std::__1::basic_string"* sret) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base7SysInfo12CPUModelNameEv(%"class.std::__1::basic_string"* sret) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions15CpuInfoProvider11GetFeaturesEv(%"class.std::__1::vector"* noalias sret, %"class.extensions::CpuInfoProvider"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #9
  %14 = getelementptr inbounds %"class.extensions::CpuInfoProvider", %"class.extensions::CpuInfoProvider"* %1, i64 0, i32 2, i32 9
  %15 = load i8, i8* %14, align 1, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %28, label %17

17:                                               ; preds = %2
  %18 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #9
  %19 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  store i8 3, i8* %20, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #9
  %21 = getelementptr inbounds i8, i8* %18, i64 3
  store i8 0, i8* %21, align 1
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #9
  %22 = load i8, i8* %20, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %26) #10
  br label %27

27:                                               ; preds = %17, %24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #9
  br label %28

28:                                               ; preds = %2, %27
  %29 = getelementptr inbounds %"class.extensions::CpuInfoProvider", %"class.extensions::CpuInfoProvider"* %1, i64 0, i32 2, i32 10
  %30 = load i8, i8* %29, align 2, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %52, label %32

32:                                               ; preds = %28
  %33 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #9
  %34 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  store i8 3, i8* %35, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i64 3, i1 false) #9
  %36 = getelementptr inbounds i8, i8* %33, i64 3
  store i8 0, i8* %36, align 1
  %37 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %11, align 8
  %38 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %39 = icmp ult %"class.std::__1::basic_string"* %37, %38
  br i1 %39, label %40, label %45

40:                                               ; preds = %32
  %41 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* nonnull align 8 %33, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 24, i1 false) #9
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 1
  %43 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  %44 = bitcast %"class.std::__1::basic_string"** %11 to i64*
  store i64 %43, i64* %44, align 8
  br label %51

45:                                               ; preds = %32
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #9
  %46 = load i8, i8* %35, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %50) #10
  br label %51

51:                                               ; preds = %40, %45, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #9
  br label %52

52:                                               ; preds = %28, %51
  %53 = getelementptr inbounds %"class.extensions::CpuInfoProvider", %"class.extensions::CpuInfoProvider"* %1, i64 0, i32 2, i32 11
  %54 = load i8, i8* %53, align 1, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %77, label %56

56:                                               ; preds = %52
  %57 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #9
  %58 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  store i8 4, i8* %59, align 1
  %60 = bitcast %"class.std::__1::basic_string"* %5 to i32*
  store i32 845509491, i32* %60, align 8
  %61 = getelementptr inbounds i8, i8* %57, i64 4
  store i8 0, i8* %61, align 4
  %62 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %11, align 8
  %63 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %64 = icmp ult %"class.std::__1::basic_string"* %62, %63
  br i1 %64, label %65, label %70

65:                                               ; preds = %56
  %66 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* nonnull align 8 %57, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 0, i64 24, i1 false) #9
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %62, i64 1
  %68 = ptrtoint %"class.std::__1::basic_string"* %67 to i64
  %69 = bitcast %"class.std::__1::basic_string"** %11 to i64*
  store i64 %68, i64* %69, align 8
  br label %76

70:                                               ; preds = %56
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #9
  %71 = load i8, i8* %59, align 1
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %70
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  call void @_ZdlPv(i8* %75) #10
  br label %76

76:                                               ; preds = %65, %70, %73
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #9
  br label %77

77:                                               ; preds = %52, %76
  %78 = getelementptr inbounds %"class.extensions::CpuInfoProvider", %"class.extensions::CpuInfoProvider"* %1, i64 0, i32 2, i32 12
  %79 = load i8, i8* %78, align 4, !range !2
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %102, label %81

81:                                               ; preds = %77
  %82 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #9
  %83 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  store i8 4, i8* %84, align 1
  %85 = bitcast %"class.std::__1::basic_string"* %6 to i32*
  store i32 862286707, i32* %85, align 8
  %86 = getelementptr inbounds i8, i8* %82, i64 4
  store i8 0, i8* %86, align 4
  %87 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %11, align 8
  %88 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %89 = icmp ult %"class.std::__1::basic_string"* %87, %88
  br i1 %89, label %90, label %95

90:                                               ; preds = %81
  %91 = bitcast %"class.std::__1::basic_string"* %87 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* nonnull align 8 %82, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 0, i64 24, i1 false) #9
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %87, i64 1
  %93 = ptrtoint %"class.std::__1::basic_string"* %92 to i64
  %94 = bitcast %"class.std::__1::basic_string"** %11 to i64*
  store i64 %93, i64* %94, align 8
  br label %101

95:                                               ; preds = %81
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #9
  %96 = load i8, i8* %84, align 1
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %101

98:                                               ; preds = %95
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i8*, i8** %99, align 8
  call void @_ZdlPv(i8* %100) #10
  br label %101

101:                                              ; preds = %90, %95, %98
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #9
  br label %102

102:                                              ; preds = %77, %101
  %103 = getelementptr inbounds %"class.extensions::CpuInfoProvider", %"class.extensions::CpuInfoProvider"* %1, i64 0, i32 2, i32 13
  %104 = load i8, i8* %103, align 1, !range !2
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %126, label %106

106:                                              ; preds = %102
  %107 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %107) #9
  %108 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  store i8 5, i8* %109, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %107, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i64 5, i1 false) #9
  %110 = getelementptr inbounds i8, i8* %107, i64 5
  store i8 0, i8* %110, align 1
  %111 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %11, align 8
  %112 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %113 = icmp ult %"class.std::__1::basic_string"* %111, %112
  br i1 %113, label %114, label %119

114:                                              ; preds = %106
  %115 = bitcast %"class.std::__1::basic_string"* %111 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* nonnull align 8 %107, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %107, i8 0, i64 24, i1 false) #9
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %111, i64 1
  %117 = ptrtoint %"class.std::__1::basic_string"* %116 to i64
  %118 = bitcast %"class.std::__1::basic_string"** %11 to i64*
  store i64 %117, i64* %118, align 8
  br label %125

119:                                              ; preds = %106
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #9
  %120 = load i8, i8* %109, align 1
  %121 = icmp slt i8 %120, 0
  br i1 %121, label %122, label %125

122:                                              ; preds = %119
  %123 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load i8*, i8** %123, align 8
  call void @_ZdlPv(i8* %124) #10
  br label %125

125:                                              ; preds = %114, %119, %122
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %107) #9
  br label %126

126:                                              ; preds = %102, %125
  %127 = getelementptr inbounds %"class.extensions::CpuInfoProvider", %"class.extensions::CpuInfoProvider"* %1, i64 0, i32 2, i32 14
  %128 = load i8, i8* %127, align 2, !range !2
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %150, label %130

130:                                              ; preds = %126
  %131 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %131) #9
  %132 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %133 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %132, i64 0, i32 1, i32 0
  store i8 6, i8* %133, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %131, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i64 6, i1 false) #9
  %134 = getelementptr inbounds i8, i8* %131, i64 6
  store i8 0, i8* %134, align 2
  %135 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %11, align 8
  %136 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %137 = icmp ult %"class.std::__1::basic_string"* %135, %136
  br i1 %137, label %138, label %143

138:                                              ; preds = %130
  %139 = bitcast %"class.std::__1::basic_string"* %135 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %139, i8* nonnull align 8 %131, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %131, i8 0, i64 24, i1 false) #9
  %140 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %135, i64 1
  %141 = ptrtoint %"class.std::__1::basic_string"* %140 to i64
  %142 = bitcast %"class.std::__1::basic_string"** %11 to i64*
  store i64 %141, i64* %142, align 8
  br label %149

143:                                              ; preds = %130
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #9
  %144 = load i8, i8* %133, align 1
  %145 = icmp slt i8 %144, 0
  br i1 %145, label %146, label %149

146:                                              ; preds = %143
  %147 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = load i8*, i8** %147, align 8
  call void @_ZdlPv(i8* %148) #10
  br label %149

149:                                              ; preds = %138, %143, %146
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %131) #9
  br label %150

150:                                              ; preds = %126, %149
  %151 = getelementptr inbounds %"class.extensions::CpuInfoProvider", %"class.extensions::CpuInfoProvider"* %1, i64 0, i32 2, i32 15
  %152 = load i8, i8* %151, align 1, !range !2
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %174, label %154

154:                                              ; preds = %150
  %155 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %155) #9
  %156 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %157 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %156, i64 0, i32 1, i32 0
  store i8 6, i8* %157, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %155, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i64 6, i1 false) #9
  %158 = getelementptr inbounds i8, i8* %155, i64 6
  store i8 0, i8* %158, align 2
  %159 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %11, align 8
  %160 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %161 = icmp ult %"class.std::__1::basic_string"* %159, %160
  br i1 %161, label %162, label %167

162:                                              ; preds = %154
  %163 = bitcast %"class.std::__1::basic_string"* %159 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %163, i8* nonnull align 8 %155, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %155, i8 0, i64 24, i1 false) #9
  %164 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %159, i64 1
  %165 = ptrtoint %"class.std::__1::basic_string"* %164 to i64
  %166 = bitcast %"class.std::__1::basic_string"** %11 to i64*
  store i64 %165, i64* %166, align 8
  br label %173

167:                                              ; preds = %154
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9) #9
  %168 = load i8, i8* %157, align 1
  %169 = icmp slt i8 %168, 0
  br i1 %169, label %170, label %173

170:                                              ; preds = %167
  %171 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = load i8*, i8** %171, align 8
  call void @_ZdlPv(i8* %172) #10
  br label %173

173:                                              ; preds = %162, %167, %170
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %155) #9
  br label %174

174:                                              ; preds = %150, %173
  %175 = getelementptr inbounds %"class.extensions::CpuInfoProvider", %"class.extensions::CpuInfoProvider"* %1, i64 0, i32 2, i32 17
  %176 = load i8, i8* %175, align 1, !range !2
  %177 = icmp eq i8 %176, 0
  br i1 %177, label %198, label %178

178:                                              ; preds = %174
  %179 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %179) #9
  %180 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %181 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %180, i64 0, i32 1, i32 0
  store i8 3, i8* %181, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %179, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), i64 3, i1 false) #9
  %182 = getelementptr inbounds i8, i8* %179, i64 3
  store i8 0, i8* %182, align 1
  %183 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %11, align 8
  %184 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %185 = icmp ult %"class.std::__1::basic_string"* %183, %184
  br i1 %185, label %186, label %191

186:                                              ; preds = %178
  %187 = bitcast %"class.std::__1::basic_string"* %183 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %187, i8* nonnull align 8 %179, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %179, i8 0, i64 24, i1 false) #9
  %188 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %183, i64 1
  %189 = ptrtoint %"class.std::__1::basic_string"* %188 to i64
  %190 = bitcast %"class.std::__1::basic_string"** %11 to i64*
  store i64 %189, i64* %190, align 8
  br label %197

191:                                              ; preds = %178
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10) #9
  %192 = load i8, i8* %181, align 1
  %193 = icmp slt i8 %192, 0
  br i1 %193, label %194, label %197

194:                                              ; preds = %191
  %195 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load i8*, i8** %195, align 8
  call void @_ZdlPv(i8* %196) #10
  br label %197

197:                                              ; preds = %186, %191, %194
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %179) #9
  br label %198

198:                                              ; preds = %174, %197
  ret void
}

declare void @_ZN10extensions3api10system_cpu13ProcessorInfoC1Ev(%"struct.extensions::api::system_cpu::ProcessorInfo"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN10extensions3api10system_cpu13ProcessorInfoD1Ev(%"struct.extensions::api::system_cpu::ProcessorInfo"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.extensions::CpuInfoProvider"* @_ZN10extensions15CpuInfoProvider3GetEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions15CpuInfoProvider9provider_E, i64 0, i32 0) acquire, align 8
  %2 = icmp ugt i64 %1, 1
  br i1 %2, label %8, label %3

3:                                                ; preds = %0
  %4 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions15CpuInfoProvider9provider_E, i64 0, i32 0)) #9
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  store %"class.extensions::CpuInfoProvider"* null, %"class.extensions::CpuInfoProvider"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions15CpuInfoProvider9provider_E, i64 0, i32 1, i64 0) to %"class.extensions::CpuInfoProvider"**), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions15CpuInfoProvider9provider_E, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions15CpuInfoProvider9provider_E, i64 0, i32 1, i64 0) to i64), void (i8*)* nonnull @_ZN4base12LazyInstanceI13scoped_refptrIN10extensions15CpuInfoProviderEENS_8internal34DestructorAtExitLazyInstanceTraitsIS4_EEE6OnExitEPv, i8* bitcast (%"class.base::LazyInstance"* @_ZN10extensions15CpuInfoProvider9provider_E to i8*)) #9
  br label %8

6:                                                ; preds = %3
  %7 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions15CpuInfoProvider9provider_E, i64 0, i32 0) acquire, align 8
  br label %8

8:                                                ; preds = %0, %5, %6
  %9 = phi i64 [ %1, %0 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions15CpuInfoProvider9provider_E, i64 0, i32 1, i64 0) to i64), %5 ], [ %7, %6 ]
  %10 = inttoptr i64 %9 to %class.scoped_refptr.21*
  %11 = getelementptr inbounds %class.scoped_refptr.21, %class.scoped_refptr.21* %10, i64 0, i32 0
  %12 = load %"class.extensions::CpuInfoProvider"*, %"class.extensions::CpuInfoProvider"** %11, align 8
  %13 = icmp eq %"class.extensions::CpuInfoProvider"* %12, null
  br i1 %13, label %14, label %52

14:                                               ; preds = %8
  %15 = tail call i8* @_Znwm(i64 288) #10
  %16 = bitcast i8* %15 to %"class.extensions::SystemInfoProvider"*
  tail call void @_ZN10extensions18SystemInfoProviderC2Ev(%"class.extensions::SystemInfoProvider"* nonnull %16) #9
  %17 = bitcast i8* %15 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN10extensions15CpuInfoProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds i8, i8* %15, i64 64
  %19 = bitcast i8* %18 to %"struct.extensions::api::system_cpu::CpuInfo"*
  tail call void @_ZN10extensions3api10system_cpu7CpuInfoC1Ev(%"struct.extensions::api::system_cpu::CpuInfo"* %19) #9
  %20 = getelementptr inbounds i8, i8* %15, i64 192
  %21 = bitcast i8* %20 to %"class.base::CPU"*
  tail call void @_ZN4base3CPUC1Ev(%"class.base::CPU"* %21) #9
  %22 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions15CpuInfoProvider9provider_E, i64 0, i32 0) acquire, align 8
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %29, label %24

24:                                               ; preds = %14
  %25 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions15CpuInfoProvider9provider_E, i64 0, i32 0)) #9
  br i1 %25, label %26, label %27

26:                                               ; preds = %24
  store %"class.extensions::CpuInfoProvider"* null, %"class.extensions::CpuInfoProvider"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions15CpuInfoProvider9provider_E, i64 0, i32 1, i64 0) to %"class.extensions::CpuInfoProvider"**), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions15CpuInfoProvider9provider_E, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions15CpuInfoProvider9provider_E, i64 0, i32 1, i64 0) to i64), void (i8*)* nonnull @_ZN4base12LazyInstanceI13scoped_refptrIN10extensions15CpuInfoProviderEENS_8internal34DestructorAtExitLazyInstanceTraitsIS4_EEE6OnExitEPv, i8* bitcast (%"class.base::LazyInstance"* @_ZN10extensions15CpuInfoProvider9provider_E to i8*)) #9
  br label %29

27:                                               ; preds = %24
  %28 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions15CpuInfoProvider9provider_E, i64 0, i32 0) acquire, align 8
  br label %29

29:                                               ; preds = %14, %26, %27
  %30 = phi i64 [ %22, %14 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions15CpuInfoProvider9provider_E, i64 0, i32 1, i64 0) to i64), %26 ], [ %28, %27 ]
  %31 = inttoptr i64 %30 to %class.scoped_refptr.21*
  %32 = getelementptr inbounds i8, i8* %15, i64 8
  %33 = bitcast i8* %32 to i32*
  %34 = atomicrmw add i32* %33, i32 1 monotonic
  %35 = ptrtoint i8* %15 to i64
  %36 = inttoptr i64 %30 to i64*
  %37 = getelementptr inbounds %class.scoped_refptr.21, %class.scoped_refptr.21* %31, i64 0, i32 0
  %38 = load %"class.extensions::CpuInfoProvider"*, %"class.extensions::CpuInfoProvider"** %37, align 8
  store i64 %35, i64* %36, align 8
  %39 = icmp eq %"class.extensions::CpuInfoProvider"* %38, null
  br i1 %39, label %52, label %40

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.extensions::CpuInfoProvider", %"class.extensions::CpuInfoProvider"* %38, i64 0, i32 0, i32 1
  %42 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw sub i32* %42, i32 1 acq_rel
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %52

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %41, i64 -2
  %47 = bitcast %"class.base::RefCountedThreadSafe"* %46 to %"class.extensions::SystemInfoProvider"*
  %48 = bitcast %"class.base::RefCountedThreadSafe"* %46 to void (%"class.extensions::SystemInfoProvider"*)***
  %49 = load void (%"class.extensions::SystemInfoProvider"*)**, void (%"class.extensions::SystemInfoProvider"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.extensions::SystemInfoProvider"*)*, void (%"class.extensions::SystemInfoProvider"*)** %49, i64 3
  %51 = load void (%"class.extensions::SystemInfoProvider"*)*, void (%"class.extensions::SystemInfoProvider"*)** %50, align 8
  tail call void %51(%"class.extensions::SystemInfoProvider"* nonnull %47) #9
  br label %52

52:                                               ; preds = %45, %40, %29, %8
  %53 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions15CpuInfoProvider9provider_E, i64 0, i32 0) acquire, align 8
  %54 = icmp ugt i64 %53, 1
  br i1 %54, label %60, label %55

55:                                               ; preds = %52
  %56 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions15CpuInfoProvider9provider_E, i64 0, i32 0)) #9
  br i1 %56, label %57, label %58

57:                                               ; preds = %55
  store %"class.extensions::CpuInfoProvider"* null, %"class.extensions::CpuInfoProvider"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions15CpuInfoProvider9provider_E, i64 0, i32 1, i64 0) to %"class.extensions::CpuInfoProvider"**), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions15CpuInfoProvider9provider_E, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions15CpuInfoProvider9provider_E, i64 0, i32 1, i64 0) to i64), void (i8*)* nonnull @_ZN4base12LazyInstanceI13scoped_refptrIN10extensions15CpuInfoProviderEENS_8internal34DestructorAtExitLazyInstanceTraitsIS4_EEE6OnExitEPv, i8* bitcast (%"class.base::LazyInstance"* @_ZN10extensions15CpuInfoProvider9provider_E to i8*)) #9
  br label %60

58:                                               ; preds = %55
  %59 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions15CpuInfoProvider9provider_E, i64 0, i32 0) acquire, align 8
  br label %60

60:                                               ; preds = %52, %57, %58
  %61 = phi i64 [ %53, %52 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions15CpuInfoProvider9provider_E, i64 0, i32 1, i64 0) to i64), %57 ], [ %59, %58 ]
  %62 = inttoptr i64 %61 to %class.scoped_refptr.21*
  %63 = getelementptr inbounds %class.scoped_refptr.21, %class.scoped_refptr.21* %62, i64 0, i32 0
  %64 = load %"class.extensions::CpuInfoProvider"*, %"class.extensions::CpuInfoProvider"** %63, align 8
  ret %"class.extensions::CpuInfoProvider"* %64
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN10extensions18SystemInfoProvider22PrepareQueryOnUIThreadEv(%"class.extensions::SystemInfoProvider"*) unnamed_addr #1

declare void @_ZN10extensions18SystemInfoProvider18InitializeProviderEN4base12OnceCallbackIFvvEEE(%"class.extensions::SystemInfoProvider"*, %"class.base::OnceCallback.22"*) unnamed_addr #1

declare zeroext i1 @_ZN10extensions15CpuInfoProvider24QueryCpuTimePerProcessorEPNSt3__16vectorINS_3api10system_cpu13ProcessorInfoENS1_9allocatorIS5_EEEE(%"class.extensions::CpuInfoProvider"*, %"class.std::__1::vector.7"*) unnamed_addr #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12LazyInstanceI13scoped_refptrIN10extensions15CpuInfoProviderEENS_8internal34DestructorAtExitLazyInstanceTraitsIS4_EEE6OnExitEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to i64*
  %3 = load atomic i64, i64* %2 monotonic, align 8
  %4 = inttoptr i64 %3 to %class.scoped_refptr.21*
  %5 = getelementptr inbounds %class.scoped_refptr.21, %class.scoped_refptr.21* %4, i64 0, i32 0
  %6 = load %"class.extensions::CpuInfoProvider"*, %"class.extensions::CpuInfoProvider"** %5, align 8
  %7 = icmp eq %"class.extensions::CpuInfoProvider"* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.extensions::CpuInfoProvider", %"class.extensions::CpuInfoProvider"* %6, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %20

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %14 to %"class.extensions::SystemInfoProvider"*
  %16 = bitcast %"class.base::RefCountedThreadSafe"* %14 to void (%"class.extensions::SystemInfoProvider"*)***
  %17 = load void (%"class.extensions::SystemInfoProvider"*)**, void (%"class.extensions::SystemInfoProvider"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.extensions::SystemInfoProvider"*)*, void (%"class.extensions::SystemInfoProvider"*)** %17, i64 3
  %19 = load void (%"class.extensions::SystemInfoProvider"*)*, void (%"class.extensions::SystemInfoProvider"*)** %18, align 8
  tail call void %19(%"class.extensions::SystemInfoProvider"* nonnull %15) #9
  br label %20

20:                                               ; preds = %1, %8, %13
  store atomic volatile i64 0, i64* %2 monotonic, align 8
  ret void
}

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #1

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN10extensions3api10system_cpu13ProcessorInfoENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.7"*, %"struct.extensions::api::system_cpu::ProcessorInfo"* dereferenceable(32)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.extensions::api::system_cpu::ProcessorInfo"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.7"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.7"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.extensions::api::system_cpu::ProcessorInfo"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #10
  %33 = bitcast i8* %32 to %"struct.extensions::api::system_cpu::ProcessorInfo"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"struct.extensions::api::system_cpu::ProcessorInfo"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"struct.extensions::api::system_cpu::ProcessorInfo", %"struct.extensions::api::system_cpu::ProcessorInfo"* %36, i64 %9
  %38 = getelementptr inbounds %"struct.extensions::api::system_cpu::ProcessorInfo", %"struct.extensions::api::system_cpu::ProcessorInfo"* %36, i64 %35
  %39 = ptrtoint %"struct.extensions::api::system_cpu::ProcessorInfo"* %38 to i64
  tail call void @_ZN10extensions3api10system_cpu13ProcessorInfoC1EOS2_(%"struct.extensions::api::system_cpu::ProcessorInfo"* %37, %"struct.extensions::api::system_cpu::ProcessorInfo"* dereferenceable(32) %1) #9
  %40 = getelementptr inbounds %"struct.extensions::api::system_cpu::ProcessorInfo", %"struct.extensions::api::system_cpu::ProcessorInfo"* %37, i64 1
  %41 = ptrtoint %"struct.extensions::api::system_cpu::ProcessorInfo"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %0, i64 0, i32 0, i32 0
  %43 = load %"struct.extensions::api::system_cpu::ProcessorInfo"*, %"struct.extensions::api::system_cpu::ProcessorInfo"** %42, align 8
  %44 = load %"struct.extensions::api::system_cpu::ProcessorInfo"*, %"struct.extensions::api::system_cpu::ProcessorInfo"** %3, align 8
  %45 = icmp eq %"struct.extensions::api::system_cpu::ProcessorInfo"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %"struct.extensions::api::system_cpu::ProcessorInfo"* %43 to i64
  br label %57

48:                                               ; preds = %34, %48
  %49 = phi %"struct.extensions::api::system_cpu::ProcessorInfo"* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %"struct.extensions::api::system_cpu::ProcessorInfo"* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %"struct.extensions::api::system_cpu::ProcessorInfo", %"struct.extensions::api::system_cpu::ProcessorInfo"* %49, i64 -1
  %52 = getelementptr inbounds %"struct.extensions::api::system_cpu::ProcessorInfo", %"struct.extensions::api::system_cpu::ProcessorInfo"* %50, i64 -1
  tail call void @_ZN10extensions3api10system_cpu13ProcessorInfoC1EOS2_(%"struct.extensions::api::system_cpu::ProcessorInfo"* %51, %"struct.extensions::api::system_cpu::ProcessorInfo"* dereferenceable(32) %52) #9
  %53 = icmp eq %"struct.extensions::api::system_cpu::ProcessorInfo"* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load i64, i64* %6, align 8
  %56 = load %"struct.extensions::api::system_cpu::ProcessorInfo"*, %"struct.extensions::api::system_cpu::ProcessorInfo"** %3, align 8
  br label %57

57:                                               ; preds = %46, %54
  %58 = phi %"struct.extensions::api::system_cpu::ProcessorInfo"* [ %43, %46 ], [ %56, %54 ]
  %59 = phi %"struct.extensions::api::system_cpu::ProcessorInfo"* [ %37, %46 ], [ %51, %54 ]
  %60 = phi i64 [ %47, %46 ], [ %55, %54 ]
  %61 = ptrtoint %"struct.extensions::api::system_cpu::ProcessorInfo"* %59 to i64
  store i64 %61, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %62 = inttoptr i64 %60 to %"struct.extensions::api::system_cpu::ProcessorInfo"*
  %63 = icmp eq %"struct.extensions::api::system_cpu::ProcessorInfo"* %58, %62
  br i1 %63, label %68, label %64

64:                                               ; preds = %57, %64
  %65 = phi %"struct.extensions::api::system_cpu::ProcessorInfo"* [ %66, %64 ], [ %58, %57 ]
  %66 = getelementptr inbounds %"struct.extensions::api::system_cpu::ProcessorInfo", %"struct.extensions::api::system_cpu::ProcessorInfo"* %65, i64 -1
  tail call void @_ZN10extensions3api10system_cpu13ProcessorInfoD1Ev(%"struct.extensions::api::system_cpu::ProcessorInfo"* %66) #9
  %67 = icmp eq %"struct.extensions::api::system_cpu::ProcessorInfo"* %66, %62
  br i1 %67, label %68, label %64

68:                                               ; preds = %64, %57
  %69 = icmp eq i64 %60, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %60 to i8*
  tail call void @_ZdlPv(i8* %71) #10
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

declare void @_ZN10extensions3api10system_cpu13ProcessorInfoC1EOS2_(%"struct.extensions::api::system_cpu::ProcessorInfo"*, %"struct.extensions::api::system_cpu::ProcessorInfo"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #10
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #9
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::basic_string"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %41, align 8
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %42
  br i1 %44, label %45, label %47

45:                                               ; preds = %31
  %46 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  br label %58

47:                                               ; preds = %31, %47
  %48 = phi %"class.std::__1::basic_string"* [ %50, %47 ], [ %34, %31 ]
  %49 = phi %"class.std::__1::basic_string"* [ %51, %47 ], [ %43, %31 ]
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 -1
  %52 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #9
  %54 = icmp eq %"class.std::__1::basic_string"* %51, %42
  br i1 %54, label %55, label %47

55:                                               ; preds = %47
  %56 = load i64, i64* %6, align 8
  %57 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %58

58:                                               ; preds = %45, %55
  %59 = phi %"class.std::__1::basic_string"* [ %42, %45 ], [ %57, %55 ]
  %60 = phi %"class.std::__1::basic_string"* [ %34, %45 ], [ %50, %55 ]
  %61 = phi i64 [ %46, %45 ], [ %56, %55 ]
  %62 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  store i64 %62, i64* %6, align 8
  store i64 %40, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %63 = inttoptr i64 %61 to %"class.std::__1::basic_string"*
  %64 = icmp eq %"class.std::__1::basic_string"* %59, %63
  br i1 %64, label %77, label %65

65:                                               ; preds = %58, %75
  %66 = phi %"class.std::__1::basic_string"* [ %67, %75 ], [ %59, %58 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 -1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #10
  br label %75

75:                                               ; preds = %72, %65
  %76 = icmp eq %"class.std::__1::basic_string"* %67, %63
  br i1 %76, label %77, label %65

77:                                               ; preds = %75, %58
  %78 = icmp eq i64 %61, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %61 to i8*
  tail call void @_ZdlPv(i8* %80) #10
  br label %81

81:                                               ; preds = %77, %79
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
