; ModuleID = '../../components/omnibox/browser/titled_url_match_utils.cc'
source_filename = "../../components/omnibox/browser/titled_url_match_utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::FeatureParam" = type <{ %"struct.base::Feature"*, i8*, i8, [7 x i8] }>
%"struct.base::Feature" = type { i8*, i32 }
%struct.AutocompleteMatch = type { %class.AutocompleteProvider*, i32, i32, i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %struct.SplitAutocompletion, i8, %class.GURL, %class.GURL, %"class.std::__1::basic_string.21", %class.GURL, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.33", %"class.std::__1::basic_string", %"class.std::__1::vector.33", %"class.std::__1::basic_string", %"class.std::__1::vector.33", %"class.absl::optional", i8, [7 x i8], %"class.absl::optional.41", i32, i32, i8, %"class.base::internal::flat_tree", %"class.std::__1::unique_ptr.65", %"class.std::__1::basic_string", i8, %class.scoped_refptr, i8, %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.76", %"class.std::__1::map", %"class.std::__1::vector.2", %"class.std::__1::vector.91", %"class.std::__1::vector.120" }
%struct.SplitAutocompletion = type { %"class.std::__1::basic_string", %"class.std::__1::vector.14" }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.gfx::Range"*, %"class.gfx::Range"*, %"class.std::__1::__compressed_pair.16" }
%"class.gfx::Range" = type { i32, i32 }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.gfx::Range"* }
%"class.std::__1::basic_string.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.24 }
%union.anon.24 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.GURL = type { %"class.std::__1::basic_string.21", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %class.GURL* }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"struct.AutocompleteMatch::ACMatchClassification"*, %"struct.AutocompleteMatch::ACMatchClassification"*, %"class.std::__1::__compressed_pair.35" }
%"struct.AutocompleteMatch::ACMatchClassification" = type <{ i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.AutocompleteMatch::ACMatchClassification"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { i32 }
%"class.absl::optional.41" = type { %"class.absl::optional_internal::optional_data.42" }
%"class.absl::optional_internal::optional_data.42" = type { %"class.absl::optional_internal::optional_data_base.43" }
%"class.absl::optional_internal::optional_data_base.43" = type { %"class.absl::optional_internal::optional_data_dtor_base.44" }
%"class.absl::optional_internal::optional_data_dtor_base.44" = type { i8, [7 x i8], %union.anon.45 }
%union.anon.45 = type { %class.SuggestionAnswer }
%class.SuggestionAnswer = type <{ %class.GURL, %"class.SuggestionAnswer::ImageLine", %"class.SuggestionAnswer::ImageLine", i32, [4 x i8] }>
%"class.SuggestionAnswer::ImageLine" = type { %"class.std::__1::vector.46", i32, %"class.absl::optional.53", %"class.absl::optional.53", %class.GURL }
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { %"class.SuggestionAnswer::TextField"*, %"class.SuggestionAnswer::TextField"*, %"class.std::__1::__compressed_pair.48" }
%"class.SuggestionAnswer::TextField" = type { %"class.std::__1::basic_string", i32, i8, i32, i32 }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.SuggestionAnswer::TextField"* }
%"class.absl::optional.53" = type { %"class.absl::optional_internal::optional_data.54" }
%"class.absl::optional_internal::optional_data.54" = type { %"class.absl::optional_internal::optional_data_base.55" }
%"class.absl::optional_internal::optional_data_base.55" = type { %"class.absl::optional_internal::optional_data_dtor_base.56" }
%"class.absl::optional_internal::optional_data_dtor_base.56" = type { i8, %union.anon.57 }
%union.anon.57 = type { %"class.SuggestionAnswer::TextField" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.58" }
%"class.std::__1::vector.58" = type { %"class.std::__1::__vector_base.59" }
%"class.std::__1::__vector_base.59" = type { i32*, i32*, %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { i32* }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %struct.AutocompleteMatch* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%class.scoped_refptr = type { %class.OmniboxAction* }
%class.OmniboxAction = type opaque
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.TemplateURLRef::SearchTermsArgs"* }
%"struct.TemplateURLRef::SearchTermsArgs" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, %"class.std::__1::basic_string.21", i32, i64, %"class.std::__1::basic_string.21", i32, %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21", i8, %"class.std::__1::basic_string.21", %class.GURL, %"class.gfx::Size", i32, i8, %"struct.TemplateURLRef::SearchTermsArgs::ContextualSearchParams" }
%"class.gfx::Size" = type { i32, i32 }
%"struct.TemplateURLRef::SearchTermsArgs::ContextualSearchParams" = type { i32, i32, %"class.std::__1::basic_string.21", i64, i32, i8, %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21" }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"struct.std::__1::pair.79"* }
%"struct.std::__1::pair.79" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.83", %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { i64 }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %struct.AutocompleteMatch*, %struct.AutocompleteMatch*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::vector.91" = type { %"class.std::__1::__vector_base.92" }
%"class.std::__1::__vector_base.92" = type { %"struct.query_tiles::Tile"*, %"struct.query_tiles::Tile"*, %"class.std::__1::__compressed_pair.115" }
%"struct.query_tiles::Tile" = type { %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21", %"class.std::__1::vector.93", %"class.std::__1::vector.100", %"class.std::__1::vector.108" }
%"class.std::__1::vector.93" = type { %"class.std::__1::__vector_base.94" }
%"class.std::__1::__vector_base.94" = type { %"struct.query_tiles::ImageMetadata"*, %"struct.query_tiles::ImageMetadata"*, %"class.std::__1::__compressed_pair.95" }
%"struct.query_tiles::ImageMetadata" = type { %class.GURL }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"struct.query_tiles::ImageMetadata"* }
%"class.std::__1::vector.100" = type { %"class.std::__1::__vector_base.101" }
%"class.std::__1::__vector_base.101" = type { %"class.std::__1::unique_ptr.102"*, %"class.std::__1::unique_ptr.102"*, %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::unique_ptr.102" = type opaque
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.std::__1::unique_ptr.102"* }
%"class.std::__1::vector.108" = type { %"class.std::__1::__vector_base.109" }
%"class.std::__1::__vector_base.109" = type { %"class.std::__1::basic_string.21"*, %"class.std::__1::basic_string.21"*, %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.std::__1::basic_string.21"* }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.query_tiles::Tile"* }
%"class.std::__1::vector.120" = type { %"class.std::__1::__vector_base.121" }
%"class.std::__1::__vector_base.121" = type { %"struct.AutocompleteMatch::NavsuggestTile"*, %"struct.AutocompleteMatch::NavsuggestTile"*, %"class.std::__1::__compressed_pair.122" }
%"struct.AutocompleteMatch::NavsuggestTile" = type { %class.GURL, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"struct.AutocompleteMatch::NavsuggestTile"* }
%"struct.bookmarks::TitledUrlMatch" = type <{ %"class.bookmarks::TitledUrlNode"*, %"class.std::__1::vector", %"class.std::__1::vector", i8, [7 x i8] }>
%"class.bookmarks::TitledUrlNode" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type { i64, i64 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%class.AutocompleteProvider = type { i32 (...)**, %"class.base::RefCountedThreadSafe", i64, %"class.std::__1::vector.2", i8, i32 }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.AutocompleteSchemeClassifier = type opaque
%class.AutocompleteInput = type { %"class.std::__1::basic_string", i64, %class.GURL, %"class.std::__1::basic_string", i32, i32, %"struct.url::Parsed", %"class.std::__1::basic_string", %class.GURL, %"class.std::__1::basic_string.21", i8, i8, i8, i32, i8, i32, %"class.std::__1::vector.127", %"class.absl::optional.134", i8, i8, i32 }
%"class.std::__1::vector.127" = type { %"class.std::__1::__vector_base.128" }
%"class.std::__1::__vector_base.128" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.std::__1::basic_string"* }
%"class.absl::optional.134" = type { %"class.absl::optional_internal::optional_data.135" }
%"class.absl::optional_internal::optional_data.135" = type { %"class.absl::optional_internal::optional_data_base.136" }
%"class.absl::optional_internal::optional_data_base.136" = type { %"class.absl::optional_internal::optional_data_dtor_base.137" }
%"class.absl::optional_internal::optional_data_dtor_base.137" = type { i8, %union.anon.138 }
%union.anon.138 = type { %"class.std::__1::basic_string.21" }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.141" }
%"class.base::BasicStringPiece" = type { i16*, i64 }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.base::BasicStringPiece"* }
%"class.std::__1::vector.146" = type { %"class.std::__1::__vector_base.147" }
%"class.std::__1::__vector_base.147" = type { %struct.TermMatch*, %struct.TermMatch*, %"class.std::__1::__compressed_pair.148" }
%struct.TermMatch = type { i32, i64, i64 }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %struct.TermMatch* }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.25 }
%struct.anon.25 = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::allocator.12" = type { i8 }

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_ = comdat any

@.str = private unnamed_addr constant [6 x i8] c"Title\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"URL\00", align 1
@_ZN17OmniboxFieldTrial26kBookmarkPathsUiReplaceUrlE = external global %"struct.base::FeatureParam", align 8
@_ZN17OmniboxFieldTrial33kBookmarkPathsUiDynamicReplaceUrlE = external global %"struct.base::FeatureParam", align 8
@_ZN17OmniboxFieldTrial28kBookmarkPathsUiReplaceTitleE = external global %"struct.base::FeatureParam", align 8
@.str.3 = private unnamed_addr constant [2 x i16] [i16 47, i16 0], align 2
@_ZN17OmniboxFieldTrial32kBookmarkPathsUiAppendAfterTitleE = external global %"struct.base::FeatureParam", align 8
@.str.4 = private unnamed_addr constant [4 x i16] [i16 32, i16 58, i16 32, i16 0], align 2
@_ZN13url_formatter22kFormatUrlOmitDefaultsE = external local_unnamed_addr constant i32, align 4
@_ZN13url_formatter18kFormatUrlOmitHTTPE = external local_unnamed_addr constant i32, align 4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9bookmarks33TitledUrlMatchToAutocompleteMatchERKNS_14TitledUrlMatchEN21AutocompleteMatchType4TypeEiP20AutocompleteProviderRK28AutocompleteSchemeClassifierRK17AutocompleteInputRKNSt3__112basic_stringIDsNSD_11char_traitsIDsEENSD_9allocatorIDsEEEE(%struct.AutocompleteMatch* noalias sret, %"struct.bookmarks::TitledUrlMatch"* dereferenceable(64), i32, i32, %class.AutocompleteProvider*, %class.AutocompleteSchemeClassifier*, %class.AutocompleteInput* dereferenceable(512), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca [15 x i8], align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.std::__1::vector.139", align 8
  %16 = alloca %"class.std::__1::basic_string.21", align 8
  %17 = alloca %"class.std::__1::basic_string.21", align 8
  %18 = alloca %"class.std::__1::basic_string.21", align 8
  %19 = alloca i8, align 1
  %20 = alloca i8, align 1
  %21 = alloca %"class.std::__1::basic_string", align 8
  %22 = alloca %"class.std::__1::vector.146", align 8
  %23 = alloca %"class.std::__1::basic_string", align 8
  %24 = alloca %"class.std::__1::basic_string", align 8
  %25 = alloca %"class.std::__1::vector.33", align 16
  %26 = alloca %"class.std::__1::vector.146", align 8
  %27 = alloca [15 x i8], align 8
  %28 = alloca %"class.std::__1::basic_string", align 8
  %29 = alloca [15 x i8], align 8
  %30 = alloca %"class.std::__1::basic_string", align 8
  %31 = alloca %"class.std::__1::vector.146", align 8
  %32 = alloca %"class.std::__1::basic_string", align 8
  %33 = alloca %"class.std::__1::basic_string", align 8
  %34 = alloca %"class.std::__1::vector.33", align 16
  %35 = alloca %"class.std::__1::vector.146", align 8
  %36 = alloca i64, align 8
  %37 = alloca %"class.std::__1::basic_string", align 8
  %38 = alloca %"class.std::__1::basic_string", align 8
  %39 = alloca %"class.std::__1::basic_string", align 8
  %40 = alloca %"class.std::__1::basic_string", align 8
  %41 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #8
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %45 = getelementptr inbounds %"struct.bookmarks::TitledUrlMatch", %"struct.bookmarks::TitledUrlMatch"* %1, i64 0, i32 0
  %46 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 24, i1 false)
  %47 = load %"class.bookmarks::TitledUrlNode"*, %"class.bookmarks::TitledUrlNode"** %45, align 8
  %48 = bitcast %"class.bookmarks::TitledUrlNode"* %47 to %"class.std::__1::basic_string"* (%"class.bookmarks::TitledUrlNode"*)***
  %49 = load %"class.std::__1::basic_string"* (%"class.bookmarks::TitledUrlNode"*)**, %"class.std::__1::basic_string"* (%"class.bookmarks::TitledUrlNode"*)*** %48, align 8
  %50 = load %"class.std::__1::basic_string"* (%"class.bookmarks::TitledUrlNode"*)*, %"class.std::__1::basic_string"* (%"class.bookmarks::TitledUrlNode"*)** %49, align 8
  %51 = tail call dereferenceable(24) %"class.std::__1::basic_string"* %50(%"class.bookmarks::TitledUrlNode"* %47) #8
  %52 = bitcast %"class.std::__1::basic_string"* %51 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %52, i64 0, i32 1, i32 1
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %8
  %57 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %41, i8* align 8 %57, i64 24, i1 false) #8
  br label %231

58:                                               ; preds = %8
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i16*, i16** %59, align 8
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %62 = load i64, i64* %61, align 8
  %63 = icmp ult i64 %62, 11
  br i1 %63, label %64, label %69

64:                                               ; preds = %58
  %65 = bitcast %"class.std::__1::basic_string"* %13 to i16*
  %66 = trunc i64 %62 to i8
  %67 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %67, i64 0, i32 1, i32 1
  store i8 %66, i8* %68, align 1
  br label %84

69:                                               ; preds = %58
  %70 = icmp ugt i64 %62, 9223372036854775791
  br i1 %70, label %71, label %73

71:                                               ; preds = %69
  %72 = bitcast %"class.std::__1::basic_string"* %13 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %72) #9
  unreachable

73:                                               ; preds = %69
  %74 = add nuw nsw i64 %62, 8
  %75 = and i64 %74, -8
  %76 = icmp slt i64 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %73
  tail call void @abort() #9
  unreachable

78:                                               ; preds = %73
  %79 = shl i64 %75, 1
  %80 = tail call i8* @_Znwm(i64 %79) #10
  %81 = bitcast i8* %80 to i16*
  %82 = bitcast %"class.std::__1::basic_string"* %13 to i8**
  store i8* %80, i8** %82, align 8
  %83 = or i64 %75, -9223372036854775808
  store i64 %83, i64* %44, align 8
  store i64 %62, i64* %43, align 8
  br label %84

84:                                               ; preds = %78, %64
  %85 = phi i16* [ %65, %64 ], [ %81, %78 ]
  %86 = add nuw nsw i64 %62, 1
  %87 = add i64 %62, 1
  %88 = icmp ult i64 %87, 16
  br i1 %88, label %178, label %89

89:                                               ; preds = %84
  %90 = add i64 %62, 1
  %91 = getelementptr i16, i16* %85, i64 %90
  %92 = getelementptr i16, i16* %60, i64 %90
  %93 = icmp ult i16* %85, %92
  %94 = icmp ult i16* %60, %91
  %95 = and i1 %93, %94
  br i1 %95, label %178, label %96

96:                                               ; preds = %89
  %97 = and i64 %87, -16
  %98 = sub i64 %86, %97
  %99 = getelementptr i16, i16* %60, i64 %97
  %100 = getelementptr i16, i16* %85, i64 %97
  %101 = add i64 %97, -16
  %102 = lshr exact i64 %101, 4
  %103 = add nuw nsw i64 %102, 1
  %104 = and i64 %103, 3
  %105 = icmp ult i64 %101, 48
  br i1 %105, label %157, label %106

106:                                              ; preds = %96
  %107 = sub nsw i64 %103, %104
  br label %108

108:                                              ; preds = %108, %106
  %109 = phi i64 [ 0, %106 ], [ %154, %108 ]
  %110 = phi i64 [ %107, %106 ], [ %155, %108 ]
  %111 = getelementptr i16, i16* %60, i64 %109
  %112 = getelementptr i16, i16* %85, i64 %109
  %113 = bitcast i16* %111 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !2
  %115 = getelementptr i16, i16* %111, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  %117 = load <8 x i16>, <8 x i16>* %116, align 2, !alias.scope !2
  %118 = bitcast i16* %112 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %118, align 2, !alias.scope !5, !noalias !2
  %119 = getelementptr i16, i16* %112, i64 8
  %120 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %117, <8 x i16>* %120, align 2, !alias.scope !5, !noalias !2
  %121 = or i64 %109, 16
  %122 = getelementptr i16, i16* %60, i64 %121
  %123 = getelementptr i16, i16* %85, i64 %121
  %124 = bitcast i16* %122 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !2
  %126 = getelementptr i16, i16* %122, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  %128 = load <8 x i16>, <8 x i16>* %127, align 2, !alias.scope !2
  %129 = bitcast i16* %123 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %129, align 2, !alias.scope !5, !noalias !2
  %130 = getelementptr i16, i16* %123, i64 8
  %131 = bitcast i16* %130 to <8 x i16>*
  store <8 x i16> %128, <8 x i16>* %131, align 2, !alias.scope !5, !noalias !2
  %132 = or i64 %109, 32
  %133 = getelementptr i16, i16* %60, i64 %132
  %134 = getelementptr i16, i16* %85, i64 %132
  %135 = bitcast i16* %133 to <8 x i16>*
  %136 = load <8 x i16>, <8 x i16>* %135, align 2, !alias.scope !2
  %137 = getelementptr i16, i16* %133, i64 8
  %138 = bitcast i16* %137 to <8 x i16>*
  %139 = load <8 x i16>, <8 x i16>* %138, align 2, !alias.scope !2
  %140 = bitcast i16* %134 to <8 x i16>*
  store <8 x i16> %136, <8 x i16>* %140, align 2, !alias.scope !5, !noalias !2
  %141 = getelementptr i16, i16* %134, i64 8
  %142 = bitcast i16* %141 to <8 x i16>*
  store <8 x i16> %139, <8 x i16>* %142, align 2, !alias.scope !5, !noalias !2
  %143 = or i64 %109, 48
  %144 = getelementptr i16, i16* %60, i64 %143
  %145 = getelementptr i16, i16* %85, i64 %143
  %146 = bitcast i16* %144 to <8 x i16>*
  %147 = load <8 x i16>, <8 x i16>* %146, align 2, !alias.scope !2
  %148 = getelementptr i16, i16* %144, i64 8
  %149 = bitcast i16* %148 to <8 x i16>*
  %150 = load <8 x i16>, <8 x i16>* %149, align 2, !alias.scope !2
  %151 = bitcast i16* %145 to <8 x i16>*
  store <8 x i16> %147, <8 x i16>* %151, align 2, !alias.scope !5, !noalias !2
  %152 = getelementptr i16, i16* %145, i64 8
  %153 = bitcast i16* %152 to <8 x i16>*
  store <8 x i16> %150, <8 x i16>* %153, align 2, !alias.scope !5, !noalias !2
  %154 = add i64 %109, 64
  %155 = add i64 %110, -4
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %157, label %108, !llvm.loop !7

157:                                              ; preds = %108, %96
  %158 = phi i64 [ 0, %96 ], [ %154, %108 ]
  %159 = icmp eq i64 %104, 0
  br i1 %159, label %176, label %160

160:                                              ; preds = %157, %160
  %161 = phi i64 [ %173, %160 ], [ %158, %157 ]
  %162 = phi i64 [ %174, %160 ], [ %104, %157 ]
  %163 = getelementptr i16, i16* %60, i64 %161
  %164 = getelementptr i16, i16* %85, i64 %161
  %165 = bitcast i16* %163 to <8 x i16>*
  %166 = load <8 x i16>, <8 x i16>* %165, align 2, !alias.scope !2
  %167 = getelementptr i16, i16* %163, i64 8
  %168 = bitcast i16* %167 to <8 x i16>*
  %169 = load <8 x i16>, <8 x i16>* %168, align 2, !alias.scope !2
  %170 = bitcast i16* %164 to <8 x i16>*
  store <8 x i16> %166, <8 x i16>* %170, align 2, !alias.scope !5, !noalias !2
  %171 = getelementptr i16, i16* %164, i64 8
  %172 = bitcast i16* %171 to <8 x i16>*
  store <8 x i16> %169, <8 x i16>* %172, align 2, !alias.scope !5, !noalias !2
  %173 = add i64 %161, 16
  %174 = add i64 %162, -1
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %176, label %160, !llvm.loop !9

176:                                              ; preds = %160, %157
  %177 = icmp eq i64 %87, %97
  br i1 %177, label %231, label %178

178:                                              ; preds = %176, %89, %84
  %179 = phi i64 [ %86, %89 ], [ %86, %84 ], [ %98, %176 ]
  %180 = phi i16* [ %60, %89 ], [ %60, %84 ], [ %99, %176 ]
  %181 = phi i16* [ %85, %89 ], [ %85, %84 ], [ %100, %176 ]
  %182 = add i64 %179, -1
  %183 = and i64 %179, 7
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %196, label %185

185:                                              ; preds = %178, %185
  %186 = phi i64 [ %191, %185 ], [ %179, %178 ]
  %187 = phi i16* [ %193, %185 ], [ %180, %178 ]
  %188 = phi i16* [ %192, %185 ], [ %181, %178 ]
  %189 = phi i64 [ %194, %185 ], [ %183, %178 ]
  %190 = load i16, i16* %187, align 2
  store i16 %190, i16* %188, align 2
  %191 = add i64 %186, -1
  %192 = getelementptr inbounds i16, i16* %188, i64 1
  %193 = getelementptr inbounds i16, i16* %187, i64 1
  %194 = add i64 %189, -1
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %196, label %185, !llvm.loop !11

196:                                              ; preds = %185, %178
  %197 = phi i64 [ %179, %178 ], [ %191, %185 ]
  %198 = phi i16* [ %180, %178 ], [ %193, %185 ]
  %199 = phi i16* [ %181, %178 ], [ %192, %185 ]
  %200 = icmp ult i64 %182, 7
  br i1 %200, label %231, label %201

201:                                              ; preds = %196, %201
  %202 = phi i64 [ %227, %201 ], [ %197, %196 ]
  %203 = phi i16* [ %229, %201 ], [ %198, %196 ]
  %204 = phi i16* [ %228, %201 ], [ %199, %196 ]
  %205 = load i16, i16* %203, align 2
  store i16 %205, i16* %204, align 2
  %206 = getelementptr inbounds i16, i16* %204, i64 1
  %207 = getelementptr inbounds i16, i16* %203, i64 1
  %208 = load i16, i16* %207, align 2
  store i16 %208, i16* %206, align 2
  %209 = getelementptr inbounds i16, i16* %204, i64 2
  %210 = getelementptr inbounds i16, i16* %203, i64 2
  %211 = load i16, i16* %210, align 2
  store i16 %211, i16* %209, align 2
  %212 = getelementptr inbounds i16, i16* %204, i64 3
  %213 = getelementptr inbounds i16, i16* %203, i64 3
  %214 = load i16, i16* %213, align 2
  store i16 %214, i16* %212, align 2
  %215 = getelementptr inbounds i16, i16* %204, i64 4
  %216 = getelementptr inbounds i16, i16* %203, i64 4
  %217 = load i16, i16* %216, align 2
  store i16 %217, i16* %215, align 2
  %218 = getelementptr inbounds i16, i16* %204, i64 5
  %219 = getelementptr inbounds i16, i16* %203, i64 5
  %220 = load i16, i16* %219, align 2
  store i16 %220, i16* %218, align 2
  %221 = getelementptr inbounds i16, i16* %204, i64 6
  %222 = getelementptr inbounds i16, i16* %203, i64 6
  %223 = load i16, i16* %222, align 2
  store i16 %223, i16* %221, align 2
  %224 = getelementptr inbounds i16, i16* %204, i64 7
  %225 = getelementptr inbounds i16, i16* %203, i64 7
  %226 = load i16, i16* %225, align 2
  store i16 %226, i16* %224, align 2
  %227 = add i64 %202, -8
  %228 = getelementptr inbounds i16, i16* %204, i64 8
  %229 = getelementptr inbounds i16, i16* %203, i64 8
  %230 = icmp eq i64 %227, 0
  br i1 %230, label %231, label %201, !llvm.loop !12

231:                                              ; preds = %196, %201, %176, %56
  %232 = load %"class.bookmarks::TitledUrlNode"*, %"class.bookmarks::TitledUrlNode"** %45, align 8
  %233 = bitcast %"class.bookmarks::TitledUrlNode"* %232 to %class.GURL* (%"class.bookmarks::TitledUrlNode"*)***
  %234 = load %class.GURL* (%"class.bookmarks::TitledUrlNode"*)**, %class.GURL* (%"class.bookmarks::TitledUrlNode"*)*** %233, align 8
  %235 = getelementptr inbounds %class.GURL* (%"class.bookmarks::TitledUrlNode"*)*, %class.GURL* (%"class.bookmarks::TitledUrlNode"*)** %234, i64 1
  %236 = load %class.GURL* (%"class.bookmarks::TitledUrlNode"*)*, %class.GURL* (%"class.bookmarks::TitledUrlNode"*)** %235, align 8
  %237 = tail call dereferenceable(120) %class.GURL* %236(%"class.bookmarks::TitledUrlNode"* %232) #8
  %238 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %238) #8
  %239 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %240 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %241 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %241, i8 -86, i64 24, i1 false)
  %242 = load %"class.bookmarks::TitledUrlNode"*, %"class.bookmarks::TitledUrlNode"** %45, align 8
  %243 = bitcast %"class.bookmarks::TitledUrlNode"* %242 to void (%"class.std::__1::vector.139"*, %"class.bookmarks::TitledUrlNode"*)***
  %244 = load void (%"class.std::__1::vector.139"*, %"class.bookmarks::TitledUrlNode"*)**, void (%"class.std::__1::vector.139"*, %"class.bookmarks::TitledUrlNode"*)*** %243, align 8
  %245 = getelementptr inbounds void (%"class.std::__1::vector.139"*, %"class.bookmarks::TitledUrlNode"*)*, void (%"class.std::__1::vector.139"*, %"class.bookmarks::TitledUrlNode"*)** %244, i64 2
  %246 = load void (%"class.std::__1::vector.139"*, %"class.bookmarks::TitledUrlNode"*)*, void (%"class.std::__1::vector.139"*, %"class.bookmarks::TitledUrlNode"*)** %245, align 8
  call void %246(%"class.std::__1::vector.139"* nonnull sret %15, %"class.bookmarks::TitledUrlNode"* %242) #8
  %247 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %247)
  %248 = getelementptr inbounds %"class.std::__1::vector.139", %"class.std::__1::vector.139"* %15, i64 0, i32 0, i32 0
  %249 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %248, align 8, !noalias !13
  %250 = getelementptr inbounds %"class.std::__1::vector.139", %"class.std::__1::vector.139"* %15, i64 0, i32 0, i32 1
  %251 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %250, align 8, !noalias !13
  %252 = icmp eq %"class.base::BasicStringPiece"* %249, %251
  br i1 %252, label %833, label %253

253:                                              ; preds = %231
  %254 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %251, i64 -1
  %255 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %254, i64 0, i32 0
  %256 = load i16*, i16** %255, align 8, !noalias !16
  %257 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %251, i64 -1, i32 1
  %258 = load i64, i64* %257, align 8, !noalias !16
  %259 = icmp ugt i64 %258, 9223372036854775791
  br i1 %259, label %260, label %262

260:                                              ; preds = %253
  %261 = bitcast %"class.std::__1::basic_string"* %12 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %261) #9, !noalias !13
  unreachable

262:                                              ; preds = %253
  %263 = icmp ult i64 %258, 11
  br i1 %263, label %277, label %264

264:                                              ; preds = %262
  %265 = add nuw nsw i64 %258, 8
  %266 = and i64 %265, -8
  %267 = icmp slt i64 %266, 0
  br i1 %267, label %268, label %269

268:                                              ; preds = %264
  call void @abort() #9, !noalias !13
  unreachable

269:                                              ; preds = %264
  %270 = shl i64 %266, 1
  %271 = call i8* @_Znwm(i64 %270) #10, !noalias !13
  %272 = bitcast i8* %271 to i16*
  %273 = bitcast %"class.std::__1::basic_string"* %12 to i8**
  store i8* %271, i8** %273, align 8, !alias.scope !19, !noalias !13
  %274 = or i64 %266, -9223372036854775808
  %275 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %274, i64* %275, align 8, !alias.scope !19, !noalias !13
  %276 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %258, i64* %276, align 8, !alias.scope !19, !noalias !13
  br label %283

277:                                              ; preds = %262
  %278 = trunc i64 %258 to i8
  %279 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %280 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %279, i64 0, i32 1, i32 1
  store i8 %278, i8* %280, align 1, !alias.scope !19, !noalias !13
  %281 = bitcast %"class.std::__1::basic_string"* %12 to i16*
  %282 = icmp eq i64 %258, 0
  br i1 %282, label %427, label %283

283:                                              ; preds = %277, %269
  %284 = phi i16* [ %272, %269 ], [ %281, %277 ]
  %285 = icmp ult i64 %258, 16
  br i1 %285, label %374, label %286

286:                                              ; preds = %283
  %287 = getelementptr i16, i16* %284, i64 %258
  %288 = getelementptr i16, i16* %256, i64 %258
  %289 = icmp ult i16* %284, %288
  %290 = icmp ult i16* %256, %287
  %291 = and i1 %289, %290
  br i1 %291, label %374, label %292

292:                                              ; preds = %286
  %293 = and i64 %258, -16
  %294 = sub i64 %258, %293
  %295 = getelementptr i16, i16* %256, i64 %293
  %296 = getelementptr i16, i16* %284, i64 %293
  %297 = add i64 %293, -16
  %298 = lshr exact i64 %297, 4
  %299 = add nuw nsw i64 %298, 1
  %300 = and i64 %299, 3
  %301 = icmp ult i64 %297, 48
  br i1 %301, label %353, label %302

302:                                              ; preds = %292
  %303 = sub nsw i64 %299, %300
  br label %304

304:                                              ; preds = %304, %302
  %305 = phi i64 [ 0, %302 ], [ %350, %304 ]
  %306 = phi i64 [ %303, %302 ], [ %351, %304 ]
  %307 = getelementptr i16, i16* %256, i64 %305
  %308 = getelementptr i16, i16* %284, i64 %305
  %309 = bitcast i16* %307 to <8 x i16>*
  %310 = load <8 x i16>, <8 x i16>* %309, align 2, !alias.scope !20, !noalias !13
  %311 = getelementptr i16, i16* %307, i64 8
  %312 = bitcast i16* %311 to <8 x i16>*
  %313 = load <8 x i16>, <8 x i16>* %312, align 2, !alias.scope !20, !noalias !13
  %314 = bitcast i16* %308 to <8 x i16>*
  store <8 x i16> %310, <8 x i16>* %314, align 2, !alias.scope !23, !noalias !25
  %315 = getelementptr i16, i16* %308, i64 8
  %316 = bitcast i16* %315 to <8 x i16>*
  store <8 x i16> %313, <8 x i16>* %316, align 2, !alias.scope !23, !noalias !25
  %317 = or i64 %305, 16
  %318 = getelementptr i16, i16* %256, i64 %317
  %319 = getelementptr i16, i16* %284, i64 %317
  %320 = bitcast i16* %318 to <8 x i16>*
  %321 = load <8 x i16>, <8 x i16>* %320, align 2, !alias.scope !20, !noalias !13
  %322 = getelementptr i16, i16* %318, i64 8
  %323 = bitcast i16* %322 to <8 x i16>*
  %324 = load <8 x i16>, <8 x i16>* %323, align 2, !alias.scope !20, !noalias !13
  %325 = bitcast i16* %319 to <8 x i16>*
  store <8 x i16> %321, <8 x i16>* %325, align 2, !alias.scope !23, !noalias !25
  %326 = getelementptr i16, i16* %319, i64 8
  %327 = bitcast i16* %326 to <8 x i16>*
  store <8 x i16> %324, <8 x i16>* %327, align 2, !alias.scope !23, !noalias !25
  %328 = or i64 %305, 32
  %329 = getelementptr i16, i16* %256, i64 %328
  %330 = getelementptr i16, i16* %284, i64 %328
  %331 = bitcast i16* %329 to <8 x i16>*
  %332 = load <8 x i16>, <8 x i16>* %331, align 2, !alias.scope !20, !noalias !13
  %333 = getelementptr i16, i16* %329, i64 8
  %334 = bitcast i16* %333 to <8 x i16>*
  %335 = load <8 x i16>, <8 x i16>* %334, align 2, !alias.scope !20, !noalias !13
  %336 = bitcast i16* %330 to <8 x i16>*
  store <8 x i16> %332, <8 x i16>* %336, align 2, !alias.scope !23, !noalias !25
  %337 = getelementptr i16, i16* %330, i64 8
  %338 = bitcast i16* %337 to <8 x i16>*
  store <8 x i16> %335, <8 x i16>* %338, align 2, !alias.scope !23, !noalias !25
  %339 = or i64 %305, 48
  %340 = getelementptr i16, i16* %256, i64 %339
  %341 = getelementptr i16, i16* %284, i64 %339
  %342 = bitcast i16* %340 to <8 x i16>*
  %343 = load <8 x i16>, <8 x i16>* %342, align 2, !alias.scope !20, !noalias !13
  %344 = getelementptr i16, i16* %340, i64 8
  %345 = bitcast i16* %344 to <8 x i16>*
  %346 = load <8 x i16>, <8 x i16>* %345, align 2, !alias.scope !20, !noalias !13
  %347 = bitcast i16* %341 to <8 x i16>*
  store <8 x i16> %343, <8 x i16>* %347, align 2, !alias.scope !23, !noalias !25
  %348 = getelementptr i16, i16* %341, i64 8
  %349 = bitcast i16* %348 to <8 x i16>*
  store <8 x i16> %346, <8 x i16>* %349, align 2, !alias.scope !23, !noalias !25
  %350 = add i64 %305, 64
  %351 = add i64 %306, -4
  %352 = icmp eq i64 %351, 0
  br i1 %352, label %353, label %304, !llvm.loop !26

353:                                              ; preds = %304, %292
  %354 = phi i64 [ 0, %292 ], [ %350, %304 ]
  %355 = icmp eq i64 %300, 0
  br i1 %355, label %372, label %356

356:                                              ; preds = %353, %356
  %357 = phi i64 [ %369, %356 ], [ %354, %353 ]
  %358 = phi i64 [ %370, %356 ], [ %300, %353 ]
  %359 = getelementptr i16, i16* %256, i64 %357
  %360 = getelementptr i16, i16* %284, i64 %357
  %361 = bitcast i16* %359 to <8 x i16>*
  %362 = load <8 x i16>, <8 x i16>* %361, align 2, !alias.scope !20, !noalias !13
  %363 = getelementptr i16, i16* %359, i64 8
  %364 = bitcast i16* %363 to <8 x i16>*
  %365 = load <8 x i16>, <8 x i16>* %364, align 2, !alias.scope !20, !noalias !13
  %366 = bitcast i16* %360 to <8 x i16>*
  store <8 x i16> %362, <8 x i16>* %366, align 2, !alias.scope !23, !noalias !25
  %367 = getelementptr i16, i16* %360, i64 8
  %368 = bitcast i16* %367 to <8 x i16>*
  store <8 x i16> %365, <8 x i16>* %368, align 2, !alias.scope !23, !noalias !25
  %369 = add i64 %357, 16
  %370 = add i64 %358, -1
  %371 = icmp eq i64 %370, 0
  br i1 %371, label %372, label %356, !llvm.loop !27

372:                                              ; preds = %356, %353
  %373 = icmp eq i64 %258, %293
  br i1 %373, label %427, label %374

374:                                              ; preds = %372, %286, %283
  %375 = phi i64 [ %258, %286 ], [ %258, %283 ], [ %294, %372 ]
  %376 = phi i16* [ %256, %286 ], [ %256, %283 ], [ %295, %372 ]
  %377 = phi i16* [ %284, %286 ], [ %284, %283 ], [ %296, %372 ]
  %378 = add i64 %375, -1
  %379 = and i64 %375, 7
  %380 = icmp eq i64 %379, 0
  br i1 %380, label %392, label %381

381:                                              ; preds = %374, %381
  %382 = phi i64 [ %387, %381 ], [ %375, %374 ]
  %383 = phi i16* [ %389, %381 ], [ %376, %374 ]
  %384 = phi i16* [ %388, %381 ], [ %377, %374 ]
  %385 = phi i64 [ %390, %381 ], [ %379, %374 ]
  %386 = load i16, i16* %383, align 2, !noalias !13
  store i16 %386, i16* %384, align 2, !noalias !13
  %387 = add i64 %382, -1
  %388 = getelementptr inbounds i16, i16* %384, i64 1
  %389 = getelementptr inbounds i16, i16* %383, i64 1
  %390 = add i64 %385, -1
  %391 = icmp eq i64 %390, 0
  br i1 %391, label %392, label %381, !llvm.loop !28

392:                                              ; preds = %381, %374
  %393 = phi i64 [ %375, %374 ], [ %387, %381 ]
  %394 = phi i16* [ %376, %374 ], [ %389, %381 ]
  %395 = phi i16* [ %377, %374 ], [ %388, %381 ]
  %396 = icmp ult i64 %378, 7
  br i1 %396, label %427, label %397

397:                                              ; preds = %392, %397
  %398 = phi i64 [ %423, %397 ], [ %393, %392 ]
  %399 = phi i16* [ %425, %397 ], [ %394, %392 ]
  %400 = phi i16* [ %424, %397 ], [ %395, %392 ]
  %401 = load i16, i16* %399, align 2, !noalias !13
  store i16 %401, i16* %400, align 2, !noalias !13
  %402 = getelementptr inbounds i16, i16* %400, i64 1
  %403 = getelementptr inbounds i16, i16* %399, i64 1
  %404 = load i16, i16* %403, align 2, !noalias !13
  store i16 %404, i16* %402, align 2, !noalias !13
  %405 = getelementptr inbounds i16, i16* %400, i64 2
  %406 = getelementptr inbounds i16, i16* %399, i64 2
  %407 = load i16, i16* %406, align 2, !noalias !13
  store i16 %407, i16* %405, align 2, !noalias !13
  %408 = getelementptr inbounds i16, i16* %400, i64 3
  %409 = getelementptr inbounds i16, i16* %399, i64 3
  %410 = load i16, i16* %409, align 2, !noalias !13
  store i16 %410, i16* %408, align 2, !noalias !13
  %411 = getelementptr inbounds i16, i16* %400, i64 4
  %412 = getelementptr inbounds i16, i16* %399, i64 4
  %413 = load i16, i16* %412, align 2, !noalias !13
  store i16 %413, i16* %411, align 2, !noalias !13
  %414 = getelementptr inbounds i16, i16* %400, i64 5
  %415 = getelementptr inbounds i16, i16* %399, i64 5
  %416 = load i16, i16* %415, align 2, !noalias !13
  store i16 %416, i16* %414, align 2, !noalias !13
  %417 = getelementptr inbounds i16, i16* %400, i64 6
  %418 = getelementptr inbounds i16, i16* %399, i64 6
  %419 = load i16, i16* %418, align 2, !noalias !13
  store i16 %419, i16* %417, align 2, !noalias !13
  %420 = getelementptr inbounds i16, i16* %400, i64 7
  %421 = getelementptr inbounds i16, i16* %399, i64 7
  %422 = load i16, i16* %421, align 2, !noalias !13
  store i16 %422, i16* %420, align 2, !noalias !13
  %423 = add i64 %398, -8
  %424 = getelementptr inbounds i16, i16* %400, i64 8
  %425 = getelementptr inbounds i16, i16* %399, i64 8
  %426 = icmp eq i64 %423, 0
  br i1 %426, label %427, label %397, !llvm.loop !29

427:                                              ; preds = %392, %397, %372, %277
  %428 = phi i16* [ %281, %277 ], [ %284, %372 ], [ %284, %397 ], [ %284, %392 ]
  %429 = getelementptr inbounds i16, i16* %428, i64 %258
  store i16 0, i16* %429, align 2, !noalias !13
  %430 = icmp eq %"class.base::BasicStringPiece"* %254, %249
  br i1 %430, label %832, label %431

431:                                              ; preds = %427
  %432 = getelementptr inbounds [15 x i8], [15 x i8]* %11, i64 0, i64 0
  %433 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %434 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %435 = bitcast %"class.std::__1::basic_string"* %10 to i8**
  %436 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %437 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %438 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %439 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %438, i64 0, i32 1, i32 1
  %440 = bitcast %"class.std::__1::basic_string"* %10 to i16*
  %441 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %442 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %443 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %442, i64 0, i32 1, i32 1
  %444 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %445 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %446 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %447 = bitcast %"class.std::__1::basic_string"* %9 to i16*
  %448 = bitcast %"class.std::__1::basic_string"* %9 to i8**
  %449 = bitcast %"class.std::__1::basic_string"* %9 to i64*
  %450 = bitcast i64* %445 to i8*
  %451 = getelementptr inbounds i8, i8* %433, i64 23
  %452 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %453 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %452, i64 0, i32 1, i32 1
  %454 = bitcast %"class.std::__1::basic_string"* %12 to i8**
  %455 = bitcast %"class.std::__1::basic_string"* %12 to i64*
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %457 = bitcast i64* %456 to i8*
  %458 = getelementptr inbounds i8, i8* %247, i64 23
  br label %459

459:                                              ; preds = %830, %431
  %460 = phi %"class.base::BasicStringPiece"* [ %254, %431 ], [ %461, %830 ]
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %432)
  %461 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %460, i64 -1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %433) #8, !noalias !30
  call void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_(%"class.std::__1::basic_string"* nonnull sret %9, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %12, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @.str.3, i64 0, i64 0)) #8, !noalias !30
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %434) #8, !noalias !30
  %462 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %461, i64 0, i32 0
  %463 = load i16*, i16** %462, align 8, !noalias !35
  %464 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %460, i64 -1, i32 1
  %465 = load i64, i64* %464, align 8, !noalias !35
  %466 = icmp ugt i64 %465, 9223372036854775791
  br i1 %466, label %467, label %469

467:                                              ; preds = %459
  %468 = bitcast %"class.std::__1::basic_string"* %10 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %468) #9, !noalias !30
  unreachable

469:                                              ; preds = %459
  %470 = icmp ult i64 %465, 11
  br i1 %470, label %481, label %471

471:                                              ; preds = %469
  %472 = add nuw nsw i64 %465, 8
  %473 = and i64 %472, -8
  %474 = icmp slt i64 %473, 0
  br i1 %474, label %475, label %476

475:                                              ; preds = %471
  call void @abort() #9, !noalias !30
  unreachable

476:                                              ; preds = %471
  %477 = shl i64 %473, 1
  %478 = call i8* @_Znwm(i64 %477) #10, !noalias !30
  %479 = bitcast i8* %478 to i16*
  store i8* %478, i8** %435, align 8, !alias.scope !38, !noalias !30
  %480 = or i64 %473, -9223372036854775808
  store i64 %480, i64* %436, align 8, !alias.scope !38, !noalias !30
  store i64 %465, i64* %437, align 8, !alias.scope !38, !noalias !30
  br label %484

481:                                              ; preds = %469
  %482 = trunc i64 %465 to i8
  store i8 %482, i8* %439, align 1, !alias.scope !38, !noalias !30
  %483 = icmp eq i64 %465, 0
  br i1 %483, label %628, label %484

484:                                              ; preds = %481, %476
  %485 = phi i16* [ %479, %476 ], [ %440, %481 ]
  %486 = icmp ult i64 %465, 16
  br i1 %486, label %575, label %487

487:                                              ; preds = %484
  %488 = getelementptr i16, i16* %485, i64 %465
  %489 = getelementptr i16, i16* %463, i64 %465
  %490 = icmp ult i16* %485, %489
  %491 = icmp ult i16* %463, %488
  %492 = and i1 %490, %491
  br i1 %492, label %575, label %493

493:                                              ; preds = %487
  %494 = and i64 %465, -16
  %495 = sub i64 %465, %494
  %496 = getelementptr i16, i16* %463, i64 %494
  %497 = getelementptr i16, i16* %485, i64 %494
  %498 = add i64 %494, -16
  %499 = lshr exact i64 %498, 4
  %500 = add nuw nsw i64 %499, 1
  %501 = and i64 %500, 3
  %502 = icmp ult i64 %498, 48
  br i1 %502, label %554, label %503

503:                                              ; preds = %493
  %504 = sub nsw i64 %500, %501
  br label %505

505:                                              ; preds = %505, %503
  %506 = phi i64 [ 0, %503 ], [ %551, %505 ]
  %507 = phi i64 [ %504, %503 ], [ %552, %505 ]
  %508 = getelementptr i16, i16* %463, i64 %506
  %509 = getelementptr i16, i16* %485, i64 %506
  %510 = bitcast i16* %508 to <8 x i16>*
  %511 = load <8 x i16>, <8 x i16>* %510, align 2, !alias.scope !39, !noalias !30
  %512 = getelementptr i16, i16* %508, i64 8
  %513 = bitcast i16* %512 to <8 x i16>*
  %514 = load <8 x i16>, <8 x i16>* %513, align 2, !alias.scope !39, !noalias !30
  %515 = bitcast i16* %509 to <8 x i16>*
  store <8 x i16> %511, <8 x i16>* %515, align 2, !alias.scope !42, !noalias !44
  %516 = getelementptr i16, i16* %509, i64 8
  %517 = bitcast i16* %516 to <8 x i16>*
  store <8 x i16> %514, <8 x i16>* %517, align 2, !alias.scope !42, !noalias !44
  %518 = or i64 %506, 16
  %519 = getelementptr i16, i16* %463, i64 %518
  %520 = getelementptr i16, i16* %485, i64 %518
  %521 = bitcast i16* %519 to <8 x i16>*
  %522 = load <8 x i16>, <8 x i16>* %521, align 2, !alias.scope !39, !noalias !30
  %523 = getelementptr i16, i16* %519, i64 8
  %524 = bitcast i16* %523 to <8 x i16>*
  %525 = load <8 x i16>, <8 x i16>* %524, align 2, !alias.scope !39, !noalias !30
  %526 = bitcast i16* %520 to <8 x i16>*
  store <8 x i16> %522, <8 x i16>* %526, align 2, !alias.scope !42, !noalias !44
  %527 = getelementptr i16, i16* %520, i64 8
  %528 = bitcast i16* %527 to <8 x i16>*
  store <8 x i16> %525, <8 x i16>* %528, align 2, !alias.scope !42, !noalias !44
  %529 = or i64 %506, 32
  %530 = getelementptr i16, i16* %463, i64 %529
  %531 = getelementptr i16, i16* %485, i64 %529
  %532 = bitcast i16* %530 to <8 x i16>*
  %533 = load <8 x i16>, <8 x i16>* %532, align 2, !alias.scope !39, !noalias !30
  %534 = getelementptr i16, i16* %530, i64 8
  %535 = bitcast i16* %534 to <8 x i16>*
  %536 = load <8 x i16>, <8 x i16>* %535, align 2, !alias.scope !39, !noalias !30
  %537 = bitcast i16* %531 to <8 x i16>*
  store <8 x i16> %533, <8 x i16>* %537, align 2, !alias.scope !42, !noalias !44
  %538 = getelementptr i16, i16* %531, i64 8
  %539 = bitcast i16* %538 to <8 x i16>*
  store <8 x i16> %536, <8 x i16>* %539, align 2, !alias.scope !42, !noalias !44
  %540 = or i64 %506, 48
  %541 = getelementptr i16, i16* %463, i64 %540
  %542 = getelementptr i16, i16* %485, i64 %540
  %543 = bitcast i16* %541 to <8 x i16>*
  %544 = load <8 x i16>, <8 x i16>* %543, align 2, !alias.scope !39, !noalias !30
  %545 = getelementptr i16, i16* %541, i64 8
  %546 = bitcast i16* %545 to <8 x i16>*
  %547 = load <8 x i16>, <8 x i16>* %546, align 2, !alias.scope !39, !noalias !30
  %548 = bitcast i16* %542 to <8 x i16>*
  store <8 x i16> %544, <8 x i16>* %548, align 2, !alias.scope !42, !noalias !44
  %549 = getelementptr i16, i16* %542, i64 8
  %550 = bitcast i16* %549 to <8 x i16>*
  store <8 x i16> %547, <8 x i16>* %550, align 2, !alias.scope !42, !noalias !44
  %551 = add i64 %506, 64
  %552 = add i64 %507, -4
  %553 = icmp eq i64 %552, 0
  br i1 %553, label %554, label %505, !llvm.loop !45

554:                                              ; preds = %505, %493
  %555 = phi i64 [ 0, %493 ], [ %551, %505 ]
  %556 = icmp eq i64 %501, 0
  br i1 %556, label %573, label %557

557:                                              ; preds = %554, %557
  %558 = phi i64 [ %570, %557 ], [ %555, %554 ]
  %559 = phi i64 [ %571, %557 ], [ %501, %554 ]
  %560 = getelementptr i16, i16* %463, i64 %558
  %561 = getelementptr i16, i16* %485, i64 %558
  %562 = bitcast i16* %560 to <8 x i16>*
  %563 = load <8 x i16>, <8 x i16>* %562, align 2, !alias.scope !39, !noalias !30
  %564 = getelementptr i16, i16* %560, i64 8
  %565 = bitcast i16* %564 to <8 x i16>*
  %566 = load <8 x i16>, <8 x i16>* %565, align 2, !alias.scope !39, !noalias !30
  %567 = bitcast i16* %561 to <8 x i16>*
  store <8 x i16> %563, <8 x i16>* %567, align 2, !alias.scope !42, !noalias !44
  %568 = getelementptr i16, i16* %561, i64 8
  %569 = bitcast i16* %568 to <8 x i16>*
  store <8 x i16> %566, <8 x i16>* %569, align 2, !alias.scope !42, !noalias !44
  %570 = add i64 %558, 16
  %571 = add i64 %559, -1
  %572 = icmp eq i64 %571, 0
  br i1 %572, label %573, label %557, !llvm.loop !46

573:                                              ; preds = %557, %554
  %574 = icmp eq i64 %465, %494
  br i1 %574, label %628, label %575

575:                                              ; preds = %573, %487, %484
  %576 = phi i64 [ %465, %487 ], [ %465, %484 ], [ %495, %573 ]
  %577 = phi i16* [ %463, %487 ], [ %463, %484 ], [ %496, %573 ]
  %578 = phi i16* [ %485, %487 ], [ %485, %484 ], [ %497, %573 ]
  %579 = add i64 %576, -1
  %580 = and i64 %576, 7
  %581 = icmp eq i64 %580, 0
  br i1 %581, label %593, label %582

582:                                              ; preds = %575, %582
  %583 = phi i64 [ %588, %582 ], [ %576, %575 ]
  %584 = phi i16* [ %590, %582 ], [ %577, %575 ]
  %585 = phi i16* [ %589, %582 ], [ %578, %575 ]
  %586 = phi i64 [ %591, %582 ], [ %580, %575 ]
  %587 = load i16, i16* %584, align 2, !noalias !30
  store i16 %587, i16* %585, align 2, !noalias !30
  %588 = add i64 %583, -1
  %589 = getelementptr inbounds i16, i16* %585, i64 1
  %590 = getelementptr inbounds i16, i16* %584, i64 1
  %591 = add i64 %586, -1
  %592 = icmp eq i64 %591, 0
  br i1 %592, label %593, label %582, !llvm.loop !47

593:                                              ; preds = %582, %575
  %594 = phi i64 [ %576, %575 ], [ %588, %582 ]
  %595 = phi i16* [ %577, %575 ], [ %590, %582 ]
  %596 = phi i16* [ %578, %575 ], [ %589, %582 ]
  %597 = icmp ult i64 %579, 7
  br i1 %597, label %628, label %598

598:                                              ; preds = %593, %598
  %599 = phi i64 [ %624, %598 ], [ %594, %593 ]
  %600 = phi i16* [ %626, %598 ], [ %595, %593 ]
  %601 = phi i16* [ %625, %598 ], [ %596, %593 ]
  %602 = load i16, i16* %600, align 2, !noalias !30
  store i16 %602, i16* %601, align 2, !noalias !30
  %603 = getelementptr inbounds i16, i16* %601, i64 1
  %604 = getelementptr inbounds i16, i16* %600, i64 1
  %605 = load i16, i16* %604, align 2, !noalias !30
  store i16 %605, i16* %603, align 2, !noalias !30
  %606 = getelementptr inbounds i16, i16* %601, i64 2
  %607 = getelementptr inbounds i16, i16* %600, i64 2
  %608 = load i16, i16* %607, align 2, !noalias !30
  store i16 %608, i16* %606, align 2, !noalias !30
  %609 = getelementptr inbounds i16, i16* %601, i64 3
  %610 = getelementptr inbounds i16, i16* %600, i64 3
  %611 = load i16, i16* %610, align 2, !noalias !30
  store i16 %611, i16* %609, align 2, !noalias !30
  %612 = getelementptr inbounds i16, i16* %601, i64 4
  %613 = getelementptr inbounds i16, i16* %600, i64 4
  %614 = load i16, i16* %613, align 2, !noalias !30
  store i16 %614, i16* %612, align 2, !noalias !30
  %615 = getelementptr inbounds i16, i16* %601, i64 5
  %616 = getelementptr inbounds i16, i16* %600, i64 5
  %617 = load i16, i16* %616, align 2, !noalias !30
  store i16 %617, i16* %615, align 2, !noalias !30
  %618 = getelementptr inbounds i16, i16* %601, i64 6
  %619 = getelementptr inbounds i16, i16* %600, i64 6
  %620 = load i16, i16* %619, align 2, !noalias !30
  store i16 %620, i16* %618, align 2, !noalias !30
  %621 = getelementptr inbounds i16, i16* %601, i64 7
  %622 = getelementptr inbounds i16, i16* %600, i64 7
  %623 = load i16, i16* %622, align 2, !noalias !30
  store i16 %623, i16* %621, align 2, !noalias !30
  %624 = add i64 %599, -8
  %625 = getelementptr inbounds i16, i16* %601, i64 8
  %626 = getelementptr inbounds i16, i16* %600, i64 8
  %627 = icmp eq i64 %624, 0
  br i1 %627, label %628, label %598, !llvm.loop !48

628:                                              ; preds = %593, %598, %573, %481
  %629 = phi i16* [ %440, %481 ], [ %485, %573 ], [ %485, %598 ], [ %485, %593 ]
  %630 = getelementptr inbounds i16, i16* %629, i64 %465
  store i16 0, i16* %630, align 2, !noalias !30
  %631 = load i8, i8* %439, align 1, !noalias !49
  %632 = icmp slt i8 %631, 0
  %633 = load i16*, i16** %441, align 8, !noalias !49
  %634 = load i64, i64* %437, align 8, !noalias !49
  %635 = zext i8 %631 to i64
  %636 = select i1 %632, i16* %633, i16* %440
  %637 = select i1 %632, i64 %634, i64 %635
  %638 = load i8, i8* %443, align 1, !noalias !49
  %639 = icmp slt i8 %638, 0
  br i1 %639, label %640, label %645

640:                                              ; preds = %628
  %641 = load i64, i64* %444, align 8, !noalias !49
  %642 = and i64 %641, 9223372036854775807
  %643 = add nsw i64 %642, -1
  %644 = load i64, i64* %445, align 8, !noalias !49
  br label %647

645:                                              ; preds = %628
  %646 = zext i8 %638 to i64
  br label %647

647:                                              ; preds = %645, %640
  %648 = phi i64 [ %643, %640 ], [ 10, %645 ]
  %649 = phi i64 [ %644, %640 ], [ %646, %645 ]
  %650 = sub i64 %648, %649
  %651 = icmp ult i64 %650, %637
  br i1 %651, label %810, label %652

652:                                              ; preds = %647
  %653 = icmp eq i64 %637, 0
  br i1 %653, label %813, label %654

654:                                              ; preds = %652
  %655 = load i16*, i16** %446, align 8, !noalias !49
  %656 = select i1 %639, i16* %655, i16* %447
  %657 = getelementptr inbounds i16, i16* %656, i64 %649
  %658 = icmp ult i64 %637, 16
  br i1 %658, label %748, label %659

659:                                              ; preds = %654
  %660 = add i64 %637, %649
  %661 = getelementptr i16, i16* %656, i64 %660
  %662 = getelementptr i16, i16* %636, i64 %637
  %663 = icmp ult i16* %657, %662
  %664 = icmp ult i16* %636, %661
  %665 = and i1 %663, %664
  br i1 %665, label %748, label %666

666:                                              ; preds = %659
  %667 = and i64 %637, -16
  %668 = sub i64 %637, %667
  %669 = getelementptr i16, i16* %636, i64 %667
  %670 = getelementptr i16, i16* %657, i64 %667
  %671 = add i64 %667, -16
  %672 = lshr exact i64 %671, 4
  %673 = add nuw nsw i64 %672, 1
  %674 = and i64 %673, 3
  %675 = icmp ult i64 %671, 48
  br i1 %675, label %727, label %676

676:                                              ; preds = %666
  %677 = sub nsw i64 %673, %674
  br label %678

678:                                              ; preds = %678, %676
  %679 = phi i64 [ 0, %676 ], [ %724, %678 ]
  %680 = phi i64 [ %677, %676 ], [ %725, %678 ]
  %681 = getelementptr i16, i16* %636, i64 %679
  %682 = getelementptr i16, i16* %657, i64 %679
  %683 = bitcast i16* %681 to <8 x i16>*
  %684 = load <8 x i16>, <8 x i16>* %683, align 2, !alias.scope !52, !noalias !49
  %685 = getelementptr i16, i16* %681, i64 8
  %686 = bitcast i16* %685 to <8 x i16>*
  %687 = load <8 x i16>, <8 x i16>* %686, align 2, !alias.scope !52, !noalias !49
  %688 = bitcast i16* %682 to <8 x i16>*
  store <8 x i16> %684, <8 x i16>* %688, align 2, !alias.scope !55, !noalias !57
  %689 = getelementptr i16, i16* %682, i64 8
  %690 = bitcast i16* %689 to <8 x i16>*
  store <8 x i16> %687, <8 x i16>* %690, align 2, !alias.scope !55, !noalias !57
  %691 = or i64 %679, 16
  %692 = getelementptr i16, i16* %636, i64 %691
  %693 = getelementptr i16, i16* %657, i64 %691
  %694 = bitcast i16* %692 to <8 x i16>*
  %695 = load <8 x i16>, <8 x i16>* %694, align 2, !alias.scope !52, !noalias !49
  %696 = getelementptr i16, i16* %692, i64 8
  %697 = bitcast i16* %696 to <8 x i16>*
  %698 = load <8 x i16>, <8 x i16>* %697, align 2, !alias.scope !52, !noalias !49
  %699 = bitcast i16* %693 to <8 x i16>*
  store <8 x i16> %695, <8 x i16>* %699, align 2, !alias.scope !55, !noalias !57
  %700 = getelementptr i16, i16* %693, i64 8
  %701 = bitcast i16* %700 to <8 x i16>*
  store <8 x i16> %698, <8 x i16>* %701, align 2, !alias.scope !55, !noalias !57
  %702 = or i64 %679, 32
  %703 = getelementptr i16, i16* %636, i64 %702
  %704 = getelementptr i16, i16* %657, i64 %702
  %705 = bitcast i16* %703 to <8 x i16>*
  %706 = load <8 x i16>, <8 x i16>* %705, align 2, !alias.scope !52, !noalias !49
  %707 = getelementptr i16, i16* %703, i64 8
  %708 = bitcast i16* %707 to <8 x i16>*
  %709 = load <8 x i16>, <8 x i16>* %708, align 2, !alias.scope !52, !noalias !49
  %710 = bitcast i16* %704 to <8 x i16>*
  store <8 x i16> %706, <8 x i16>* %710, align 2, !alias.scope !55, !noalias !57
  %711 = getelementptr i16, i16* %704, i64 8
  %712 = bitcast i16* %711 to <8 x i16>*
  store <8 x i16> %709, <8 x i16>* %712, align 2, !alias.scope !55, !noalias !57
  %713 = or i64 %679, 48
  %714 = getelementptr i16, i16* %636, i64 %713
  %715 = getelementptr i16, i16* %657, i64 %713
  %716 = bitcast i16* %714 to <8 x i16>*
  %717 = load <8 x i16>, <8 x i16>* %716, align 2, !alias.scope !52, !noalias !49
  %718 = getelementptr i16, i16* %714, i64 8
  %719 = bitcast i16* %718 to <8 x i16>*
  %720 = load <8 x i16>, <8 x i16>* %719, align 2, !alias.scope !52, !noalias !49
  %721 = bitcast i16* %715 to <8 x i16>*
  store <8 x i16> %717, <8 x i16>* %721, align 2, !alias.scope !55, !noalias !57
  %722 = getelementptr i16, i16* %715, i64 8
  %723 = bitcast i16* %722 to <8 x i16>*
  store <8 x i16> %720, <8 x i16>* %723, align 2, !alias.scope !55, !noalias !57
  %724 = add i64 %679, 64
  %725 = add i64 %680, -4
  %726 = icmp eq i64 %725, 0
  br i1 %726, label %727, label %678, !llvm.loop !58

727:                                              ; preds = %678, %666
  %728 = phi i64 [ 0, %666 ], [ %724, %678 ]
  %729 = icmp eq i64 %674, 0
  br i1 %729, label %746, label %730

730:                                              ; preds = %727, %730
  %731 = phi i64 [ %743, %730 ], [ %728, %727 ]
  %732 = phi i64 [ %744, %730 ], [ %674, %727 ]
  %733 = getelementptr i16, i16* %636, i64 %731
  %734 = getelementptr i16, i16* %657, i64 %731
  %735 = bitcast i16* %733 to <8 x i16>*
  %736 = load <8 x i16>, <8 x i16>* %735, align 2, !alias.scope !52, !noalias !49
  %737 = getelementptr i16, i16* %733, i64 8
  %738 = bitcast i16* %737 to <8 x i16>*
  %739 = load <8 x i16>, <8 x i16>* %738, align 2, !alias.scope !52, !noalias !49
  %740 = bitcast i16* %734 to <8 x i16>*
  store <8 x i16> %736, <8 x i16>* %740, align 2, !alias.scope !55, !noalias !57
  %741 = getelementptr i16, i16* %734, i64 8
  %742 = bitcast i16* %741 to <8 x i16>*
  store <8 x i16> %739, <8 x i16>* %742, align 2, !alias.scope !55, !noalias !57
  %743 = add i64 %731, 16
  %744 = add i64 %732, -1
  %745 = icmp eq i64 %744, 0
  br i1 %745, label %746, label %730, !llvm.loop !59

746:                                              ; preds = %730, %727
  %747 = icmp eq i64 %637, %667
  br i1 %747, label %801, label %748

748:                                              ; preds = %746, %659, %654
  %749 = phi i64 [ %637, %659 ], [ %637, %654 ], [ %668, %746 ]
  %750 = phi i16* [ %636, %659 ], [ %636, %654 ], [ %669, %746 ]
  %751 = phi i16* [ %657, %659 ], [ %657, %654 ], [ %670, %746 ]
  %752 = add i64 %749, -1
  %753 = and i64 %749, 7
  %754 = icmp eq i64 %753, 0
  br i1 %754, label %766, label %755

755:                                              ; preds = %748, %755
  %756 = phi i64 [ %761, %755 ], [ %749, %748 ]
  %757 = phi i16* [ %763, %755 ], [ %750, %748 ]
  %758 = phi i16* [ %762, %755 ], [ %751, %748 ]
  %759 = phi i64 [ %764, %755 ], [ %753, %748 ]
  %760 = load i16, i16* %757, align 2, !noalias !49
  store i16 %760, i16* %758, align 2, !noalias !49
  %761 = add i64 %756, -1
  %762 = getelementptr inbounds i16, i16* %758, i64 1
  %763 = getelementptr inbounds i16, i16* %757, i64 1
  %764 = add i64 %759, -1
  %765 = icmp eq i64 %764, 0
  br i1 %765, label %766, label %755, !llvm.loop !60

766:                                              ; preds = %755, %748
  %767 = phi i64 [ %749, %748 ], [ %761, %755 ]
  %768 = phi i16* [ %750, %748 ], [ %763, %755 ]
  %769 = phi i16* [ %751, %748 ], [ %762, %755 ]
  %770 = icmp ult i64 %752, 7
  br i1 %770, label %801, label %771

771:                                              ; preds = %766, %771
  %772 = phi i64 [ %797, %771 ], [ %767, %766 ]
  %773 = phi i16* [ %799, %771 ], [ %768, %766 ]
  %774 = phi i16* [ %798, %771 ], [ %769, %766 ]
  %775 = load i16, i16* %773, align 2, !noalias !49
  store i16 %775, i16* %774, align 2, !noalias !49
  %776 = getelementptr inbounds i16, i16* %774, i64 1
  %777 = getelementptr inbounds i16, i16* %773, i64 1
  %778 = load i16, i16* %777, align 2, !noalias !49
  store i16 %778, i16* %776, align 2, !noalias !49
  %779 = getelementptr inbounds i16, i16* %774, i64 2
  %780 = getelementptr inbounds i16, i16* %773, i64 2
  %781 = load i16, i16* %780, align 2, !noalias !49
  store i16 %781, i16* %779, align 2, !noalias !49
  %782 = getelementptr inbounds i16, i16* %774, i64 3
  %783 = getelementptr inbounds i16, i16* %773, i64 3
  %784 = load i16, i16* %783, align 2, !noalias !49
  store i16 %784, i16* %782, align 2, !noalias !49
  %785 = getelementptr inbounds i16, i16* %774, i64 4
  %786 = getelementptr inbounds i16, i16* %773, i64 4
  %787 = load i16, i16* %786, align 2, !noalias !49
  store i16 %787, i16* %785, align 2, !noalias !49
  %788 = getelementptr inbounds i16, i16* %774, i64 5
  %789 = getelementptr inbounds i16, i16* %773, i64 5
  %790 = load i16, i16* %789, align 2, !noalias !49
  store i16 %790, i16* %788, align 2, !noalias !49
  %791 = getelementptr inbounds i16, i16* %774, i64 6
  %792 = getelementptr inbounds i16, i16* %773, i64 6
  %793 = load i16, i16* %792, align 2, !noalias !49
  store i16 %793, i16* %791, align 2, !noalias !49
  %794 = getelementptr inbounds i16, i16* %774, i64 7
  %795 = getelementptr inbounds i16, i16* %773, i64 7
  %796 = load i16, i16* %795, align 2, !noalias !49
  store i16 %796, i16* %794, align 2, !noalias !49
  %797 = add i64 %772, -8
  %798 = getelementptr inbounds i16, i16* %774, i64 8
  %799 = getelementptr inbounds i16, i16* %773, i64 8
  %800 = icmp eq i64 %797, 0
  br i1 %800, label %801, label %771, !llvm.loop !61

801:                                              ; preds = %766, %771, %746
  %802 = add i64 %649, %637
  %803 = load i8, i8* %443, align 1, !noalias !49
  %804 = icmp slt i8 %803, 0
  br i1 %804, label %805, label %806

805:                                              ; preds = %801
  store i64 %802, i64* %445, align 8, !noalias !49
  br label %808

806:                                              ; preds = %801
  %807 = trunc i64 %802 to i8
  store i8 %807, i8* %443, align 1, !noalias !49
  br label %808

808:                                              ; preds = %806, %805
  %809 = getelementptr inbounds i16, i16* %656, i64 %802
  store i16 0, i16* %809, align 2, !noalias !49
  br label %813

810:                                              ; preds = %647
  %811 = add i64 %649, %637
  %812 = sub i64 %811, %648
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* nonnull %9, i64 %648, i64 %812, i64 %649, i64 %649, i64 0, i64 %637, i16* %636) #8, !noalias !49
  br label %813

813:                                              ; preds = %810, %808, %652
  %814 = load i64, i64* %449, align 8, !noalias !62
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %432, i8* align 8 %450, i64 15, i1 false) #8, !noalias !62
  %815 = load i8, i8* %451, align 1, !noalias !62
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %433, i8 0, i64 24, i1 false) #8, !noalias !49
  %816 = load i8, i8* %439, align 1, !noalias !30
  %817 = icmp slt i8 %816, 0
  br i1 %817, label %819, label %818

818:                                              ; preds = %813
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %434) #8, !noalias !30
  br label %825

819:                                              ; preds = %813
  %820 = load i8*, i8** %435, align 8, !noalias !30
  call void @_ZdlPv(i8* %820) #10, !noalias !30
  %821 = load i8, i8* %443, align 1, !noalias !30
  %822 = icmp slt i8 %821, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %434) #8, !noalias !30
  br i1 %822, label %823, label %825

823:                                              ; preds = %819
  %824 = load i8*, i8** %448, align 8, !noalias !30
  call void @_ZdlPv(i8* %824) #10, !noalias !30
  br label %825

825:                                              ; preds = %823, %819, %818
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %433) #8, !noalias !30
  %826 = load i8, i8* %453, align 1, !noalias !62
  %827 = icmp slt i8 %826, 0
  br i1 %827, label %828, label %830

828:                                              ; preds = %825
  %829 = load i8*, i8** %454, align 8, !noalias !62
  call void @_ZdlPv(i8* %829) #10, !noalias !62
  br label %830

830:                                              ; preds = %828, %825
  store i64 %814, i64* %455, align 8, !noalias !62
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %457, i8* nonnull align 8 %432, i64 15, i1 false) #8, !noalias !62
  store i8 %815, i8* %458, align 1, !noalias !62
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %432)
  %831 = icmp eq %"class.base::BasicStringPiece"* %461, %249
  br i1 %831, label %832, label %459

832:                                              ; preds = %830, %427
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %238, i8* nonnull align 8 %247, i64 24, i1 false) #8
  br label %833

833:                                              ; preds = %231, %832
  %834 = phi i8* [ %247, %832 ], [ %238, %231 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %834, i8 0, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %247)
  %835 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %248, align 8
  %836 = icmp eq %"class.base::BasicStringPiece"* %835, null
  br i1 %836, label %841, label %837

837:                                              ; preds = %833
  %838 = ptrtoint %"class.base::BasicStringPiece"* %835 to i64
  %839 = bitcast %"class.base::BasicStringPiece"** %250 to i64*
  store i64 %838, i64* %839, align 8
  %840 = bitcast %"class.base::BasicStringPiece"* %835 to i8*
  call void @_ZdlPv(i8* %840) #10
  br label %841

841:                                              ; preds = %833, %837
  %842 = bitcast %struct.AutocompleteMatch* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %842, i8 -86, i64 1600, i1 false)
  call void @_ZN17AutocompleteMatchC1EP20AutocompleteProvideribN21AutocompleteMatchType4TypeE(%struct.AutocompleteMatch* %0, %class.AutocompleteProvider* %4, i32 %3, i1 zeroext false, i32 %2) #8
  %843 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 11
  %844 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %843, %class.GURL* dereferenceable(120) %237) #8
  %845 = bitcast %"class.std::__1::basic_string.21"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %845) #8
  %846 = bitcast %"class.std::__1::basic_string.21"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %847 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %846, i64 0, i32 1, i32 0
  store i8 5, i8* %847, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %845, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i64 5, i1 false) #8
  %848 = getelementptr inbounds i8, i8* %845, i64 5
  store i8 0, i8* %848, align 1
  call void @_ZN17AutocompleteMatch20RecordAdditionalInfoERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKNS1_IDsNS2_IDsEENS4_IDsEEEE(%struct.AutocompleteMatch* %0, %"class.std::__1::basic_string.21"* nonnull dereferenceable(24) %16, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %13) #8
  %849 = load i8, i8* %847, align 1
  %850 = icmp slt i8 %849, 0
  br i1 %850, label %851, label %854

851:                                              ; preds = %841
  %852 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %853 = load i8*, i8** %852, align 8
  call void @_ZdlPv(i8* %853) #10
  br label %854

854:                                              ; preds = %841, %851
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %845) #8
  %855 = bitcast %"class.std::__1::basic_string.21"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %855) #8
  %856 = bitcast %"class.std::__1::basic_string.21"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %857 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %856, i64 0, i32 1, i32 0
  store i8 3, i8* %857, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %855, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i64 3, i1 false) #8
  %858 = getelementptr inbounds i8, i8* %855, i64 3
  store i8 0, i8* %858, align 1
  %859 = call dereferenceable(24) %"class.std::__1::basic_string.21"* @_ZNK4GURL4specEv(%class.GURL* %237) #8
  call void @_ZN17AutocompleteMatch20RecordAdditionalInfoERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_(%struct.AutocompleteMatch* %0, %"class.std::__1::basic_string.21"* nonnull dereferenceable(24) %17, %"class.std::__1::basic_string.21"* dereferenceable(24) %859) #8
  %860 = load i8, i8* %857, align 1
  %861 = icmp slt i8 %860, 0
  br i1 %861, label %862, label %865

862:                                              ; preds = %854
  %863 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %864 = load i8*, i8** %863, align 8
  call void @_ZdlPv(i8* %864) #10
  br label %865

865:                                              ; preds = %854, %862
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %855) #8
  %866 = bitcast %"class.std::__1::basic_string.21"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %866) #8
  %867 = bitcast %"class.std::__1::basic_string.21"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %868 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %867, i64 0, i32 1, i32 0
  store i8 4, i8* %868, align 1
  %869 = bitcast %"class.std::__1::basic_string.21"* %18 to i32*
  store i32 1752457552, i32* %869, align 8
  %870 = getelementptr inbounds i8, i8* %866, i64 4
  store i8 0, i8* %870, align 4
  call void @_ZN17AutocompleteMatch20RecordAdditionalInfoERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKNS1_IDsNS2_IDsEENS4_IDsEEEE(%struct.AutocompleteMatch* %0, %"class.std::__1::basic_string.21"* nonnull dereferenceable(24) %18, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %14) #8
  %871 = load i8, i8* %868, align 1
  %872 = icmp slt i8 %871, 0
  br i1 %872, label %873, label %876

873:                                              ; preds = %865
  %874 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %875 = load i8*, i8** %874, align 8
  call void @_ZdlPv(i8* %875) #10
  br label %876

876:                                              ; preds = %865, %873
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %866) #8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %19) #8
  store i8 0, i8* %19, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %20) #8
  store i8 0, i8* %20, align 1
  %877 = getelementptr inbounds %"struct.bookmarks::TitledUrlMatch", %"struct.bookmarks::TitledUrlMatch"* %1, i64 0, i32 2
  call void @_ZN17AutocompleteMatch18GetMatchComponentsERK4GURLRKNSt3__16vectorINS3_4pairImmEENS3_9allocatorIS6_EEEEPbSC_(%class.GURL* dereferenceable(120) %237, %"class.std::__1::vector"* dereferenceable(24) %877, i8* nonnull %19, i8* nonnull %20) #8
  %878 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %6, i64 0, i32 6, i32 0, i32 1
  %879 = load i32, i32* %878, align 4
  %880 = icmp sgt i32 %879, 0
  %881 = load i8, i8* %19, align 1
  %882 = and i8 %881, 1
  %883 = icmp ne i8 %882, 0
  %884 = or i1 %880, %883
  %885 = load i8, i8* %20, align 1, !range !63
  %886 = icmp ne i8 %885, 0
  %887 = call i32 @_ZN17AutocompleteMatch14GetFormatTypesEbb(i1 zeroext %884, i1 zeroext %886) #8
  %888 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %888) #8
  %889 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %889, i8 -86, i64 24, i1 false)
  call void @_ZN13url_formatter9FormatUrlERK4GURLjjPN3url6ParsedEPmS6_(%"class.std::__1::basic_string"* nonnull sret %21, %class.GURL* dereferenceable(120) %237, i32 %887, i32 2, %"struct.url::Parsed"* null, i64* null, i64* null) #8
  %890 = call zeroext i1 @_ZNK4base12FeatureParamIbLb0EE3GetEv(%"struct.base::FeatureParam"* nonnull @_ZN17OmniboxFieldTrial26kBookmarkPathsUiReplaceUrlE) #8
  br i1 %890, label %891, label %894

891:                                              ; preds = %876
  %892 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 17
  %893 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %892, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %14)
  br label %914

894:                                              ; preds = %876
  %895 = call zeroext i1 @_ZNK4base12FeatureParamIbLb0EE3GetEv(%"struct.base::FeatureParam"* nonnull @_ZN17OmniboxFieldTrial33kBookmarkPathsUiDynamicReplaceUrlE) #8
  br i1 %895, label %896, label %911

896:                                              ; preds = %894
  %897 = getelementptr inbounds %"struct.bookmarks::TitledUrlMatch", %"struct.bookmarks::TitledUrlMatch"* %1, i64 0, i32 3
  %898 = load i8, i8* %897, align 8, !range !63
  %899 = icmp eq i8 %898, 0
  br i1 %899, label %900, label %906

900:                                              ; preds = %896
  %901 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %877, i64 0, i32 0, i32 0
  %902 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %901, align 8
  %903 = getelementptr inbounds %"struct.bookmarks::TitledUrlMatch", %"struct.bookmarks::TitledUrlMatch"* %1, i64 0, i32 2, i32 0, i32 1
  %904 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %903, align 8
  %905 = icmp eq %"struct.std::__1::pair"* %902, %904
  br i1 %905, label %906, label %907

906:                                              ; preds = %896, %900
  br label %907

907:                                              ; preds = %900, %906
  %908 = phi %"class.std::__1::basic_string"* [ %14, %906 ], [ %21, %900 ]
  %909 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 17
  %910 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %909, %"class.std::__1::basic_string"* dereferenceable(24) %908)
  br label %914

911:                                              ; preds = %894
  %912 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 17
  %913 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %912, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %21)
  br label %914

914:                                              ; preds = %907, %911, %891
  %915 = bitcast %"class.std::__1::vector.146"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %915) #8
  %916 = getelementptr inbounds %"class.std::__1::vector.146", %"class.std::__1::vector.146"* %22, i64 0, i32 0, i32 0
  %917 = getelementptr inbounds %"class.std::__1::vector.146", %"class.std::__1::vector.146"* %22, i64 0, i32 0, i32 1
  %918 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %6, i64 0, i32 0
  %919 = bitcast %class.AutocompleteInput* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %920 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %919, i64 0, i32 1, i32 1
  %921 = bitcast %"class.std::__1::vector.146"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %921, i8 -86, i64 24, i1 false)
  %922 = load i8, i8* %920, align 1
  %923 = icmp slt i8 %922, 0
  br i1 %923, label %927, label %924

924:                                              ; preds = %914
  %925 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  %926 = bitcast %class.AutocompleteInput* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %925, i8* align 8 %926, i64 24, i1 false) #8
  br label %1102

927:                                              ; preds = %914
  %928 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %929 = load i16*, i16** %928, align 8
  %930 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %931 = load i64, i64* %930, align 8
  %932 = icmp ult i64 %931, 11
  br i1 %932, label %933, label %938

933:                                              ; preds = %927
  %934 = bitcast %"class.std::__1::basic_string"* %23 to i16*
  %935 = trunc i64 %931 to i8
  %936 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %937 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %936, i64 0, i32 1, i32 1
  store i8 %935, i8* %937, align 1
  br label %955

938:                                              ; preds = %927
  %939 = icmp ugt i64 %931, 9223372036854775791
  br i1 %939, label %940, label %942

940:                                              ; preds = %938
  %941 = bitcast %"class.std::__1::basic_string"* %23 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %941) #9
  unreachable

942:                                              ; preds = %938
  %943 = add nuw nsw i64 %931, 8
  %944 = and i64 %943, -8
  %945 = icmp slt i64 %944, 0
  br i1 %945, label %946, label %947

946:                                              ; preds = %942
  call void @abort() #9
  unreachable

947:                                              ; preds = %942
  %948 = shl i64 %944, 1
  %949 = call i8* @_Znwm(i64 %948) #10
  %950 = bitcast i8* %949 to i16*
  %951 = bitcast %"class.std::__1::basic_string"* %23 to i8**
  store i8* %949, i8** %951, align 8
  %952 = or i64 %944, -9223372036854775808
  %953 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %952, i64* %953, align 8
  %954 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %931, i64* %954, align 8
  br label %955

955:                                              ; preds = %947, %933
  %956 = phi i16* [ %934, %933 ], [ %950, %947 ]
  %957 = add nuw nsw i64 %931, 1
  %958 = add i64 %931, 1
  %959 = icmp ult i64 %958, 16
  br i1 %959, label %1049, label %960

960:                                              ; preds = %955
  %961 = add i64 %931, 1
  %962 = getelementptr i16, i16* %956, i64 %961
  %963 = getelementptr i16, i16* %929, i64 %961
  %964 = icmp ult i16* %956, %963
  %965 = icmp ult i16* %929, %962
  %966 = and i1 %964, %965
  br i1 %966, label %1049, label %967

967:                                              ; preds = %960
  %968 = and i64 %958, -16
  %969 = sub i64 %957, %968
  %970 = getelementptr i16, i16* %929, i64 %968
  %971 = getelementptr i16, i16* %956, i64 %968
  %972 = add i64 %968, -16
  %973 = lshr exact i64 %972, 4
  %974 = add nuw nsw i64 %973, 1
  %975 = and i64 %974, 3
  %976 = icmp ult i64 %972, 48
  br i1 %976, label %1028, label %977

977:                                              ; preds = %967
  %978 = sub nsw i64 %974, %975
  br label %979

979:                                              ; preds = %979, %977
  %980 = phi i64 [ 0, %977 ], [ %1025, %979 ]
  %981 = phi i64 [ %978, %977 ], [ %1026, %979 ]
  %982 = getelementptr i16, i16* %929, i64 %980
  %983 = getelementptr i16, i16* %956, i64 %980
  %984 = bitcast i16* %982 to <8 x i16>*
  %985 = load <8 x i16>, <8 x i16>* %984, align 2, !alias.scope !64
  %986 = getelementptr i16, i16* %982, i64 8
  %987 = bitcast i16* %986 to <8 x i16>*
  %988 = load <8 x i16>, <8 x i16>* %987, align 2, !alias.scope !64
  %989 = bitcast i16* %983 to <8 x i16>*
  store <8 x i16> %985, <8 x i16>* %989, align 2, !alias.scope !67, !noalias !64
  %990 = getelementptr i16, i16* %983, i64 8
  %991 = bitcast i16* %990 to <8 x i16>*
  store <8 x i16> %988, <8 x i16>* %991, align 2, !alias.scope !67, !noalias !64
  %992 = or i64 %980, 16
  %993 = getelementptr i16, i16* %929, i64 %992
  %994 = getelementptr i16, i16* %956, i64 %992
  %995 = bitcast i16* %993 to <8 x i16>*
  %996 = load <8 x i16>, <8 x i16>* %995, align 2, !alias.scope !64
  %997 = getelementptr i16, i16* %993, i64 8
  %998 = bitcast i16* %997 to <8 x i16>*
  %999 = load <8 x i16>, <8 x i16>* %998, align 2, !alias.scope !64
  %1000 = bitcast i16* %994 to <8 x i16>*
  store <8 x i16> %996, <8 x i16>* %1000, align 2, !alias.scope !67, !noalias !64
  %1001 = getelementptr i16, i16* %994, i64 8
  %1002 = bitcast i16* %1001 to <8 x i16>*
  store <8 x i16> %999, <8 x i16>* %1002, align 2, !alias.scope !67, !noalias !64
  %1003 = or i64 %980, 32
  %1004 = getelementptr i16, i16* %929, i64 %1003
  %1005 = getelementptr i16, i16* %956, i64 %1003
  %1006 = bitcast i16* %1004 to <8 x i16>*
  %1007 = load <8 x i16>, <8 x i16>* %1006, align 2, !alias.scope !64
  %1008 = getelementptr i16, i16* %1004, i64 8
  %1009 = bitcast i16* %1008 to <8 x i16>*
  %1010 = load <8 x i16>, <8 x i16>* %1009, align 2, !alias.scope !64
  %1011 = bitcast i16* %1005 to <8 x i16>*
  store <8 x i16> %1007, <8 x i16>* %1011, align 2, !alias.scope !67, !noalias !64
  %1012 = getelementptr i16, i16* %1005, i64 8
  %1013 = bitcast i16* %1012 to <8 x i16>*
  store <8 x i16> %1010, <8 x i16>* %1013, align 2, !alias.scope !67, !noalias !64
  %1014 = or i64 %980, 48
  %1015 = getelementptr i16, i16* %929, i64 %1014
  %1016 = getelementptr i16, i16* %956, i64 %1014
  %1017 = bitcast i16* %1015 to <8 x i16>*
  %1018 = load <8 x i16>, <8 x i16>* %1017, align 2, !alias.scope !64
  %1019 = getelementptr i16, i16* %1015, i64 8
  %1020 = bitcast i16* %1019 to <8 x i16>*
  %1021 = load <8 x i16>, <8 x i16>* %1020, align 2, !alias.scope !64
  %1022 = bitcast i16* %1016 to <8 x i16>*
  store <8 x i16> %1018, <8 x i16>* %1022, align 2, !alias.scope !67, !noalias !64
  %1023 = getelementptr i16, i16* %1016, i64 8
  %1024 = bitcast i16* %1023 to <8 x i16>*
  store <8 x i16> %1021, <8 x i16>* %1024, align 2, !alias.scope !67, !noalias !64
  %1025 = add i64 %980, 64
  %1026 = add i64 %981, -4
  %1027 = icmp eq i64 %1026, 0
  br i1 %1027, label %1028, label %979, !llvm.loop !69

1028:                                             ; preds = %979, %967
  %1029 = phi i64 [ 0, %967 ], [ %1025, %979 ]
  %1030 = icmp eq i64 %975, 0
  br i1 %1030, label %1047, label %1031

1031:                                             ; preds = %1028, %1031
  %1032 = phi i64 [ %1044, %1031 ], [ %1029, %1028 ]
  %1033 = phi i64 [ %1045, %1031 ], [ %975, %1028 ]
  %1034 = getelementptr i16, i16* %929, i64 %1032
  %1035 = getelementptr i16, i16* %956, i64 %1032
  %1036 = bitcast i16* %1034 to <8 x i16>*
  %1037 = load <8 x i16>, <8 x i16>* %1036, align 2, !alias.scope !64
  %1038 = getelementptr i16, i16* %1034, i64 8
  %1039 = bitcast i16* %1038 to <8 x i16>*
  %1040 = load <8 x i16>, <8 x i16>* %1039, align 2, !alias.scope !64
  %1041 = bitcast i16* %1035 to <8 x i16>*
  store <8 x i16> %1037, <8 x i16>* %1041, align 2, !alias.scope !67, !noalias !64
  %1042 = getelementptr i16, i16* %1035, i64 8
  %1043 = bitcast i16* %1042 to <8 x i16>*
  store <8 x i16> %1040, <8 x i16>* %1043, align 2, !alias.scope !67, !noalias !64
  %1044 = add i64 %1032, 16
  %1045 = add i64 %1033, -1
  %1046 = icmp eq i64 %1045, 0
  br i1 %1046, label %1047, label %1031, !llvm.loop !70

1047:                                             ; preds = %1031, %1028
  %1048 = icmp eq i64 %958, %968
  br i1 %1048, label %1102, label %1049

1049:                                             ; preds = %1047, %960, %955
  %1050 = phi i64 [ %957, %960 ], [ %957, %955 ], [ %969, %1047 ]
  %1051 = phi i16* [ %929, %960 ], [ %929, %955 ], [ %970, %1047 ]
  %1052 = phi i16* [ %956, %960 ], [ %956, %955 ], [ %971, %1047 ]
  %1053 = add i64 %1050, -1
  %1054 = and i64 %1050, 7
  %1055 = icmp eq i64 %1054, 0
  br i1 %1055, label %1067, label %1056

1056:                                             ; preds = %1049, %1056
  %1057 = phi i64 [ %1062, %1056 ], [ %1050, %1049 ]
  %1058 = phi i16* [ %1064, %1056 ], [ %1051, %1049 ]
  %1059 = phi i16* [ %1063, %1056 ], [ %1052, %1049 ]
  %1060 = phi i64 [ %1065, %1056 ], [ %1054, %1049 ]
  %1061 = load i16, i16* %1058, align 2
  store i16 %1061, i16* %1059, align 2
  %1062 = add i64 %1057, -1
  %1063 = getelementptr inbounds i16, i16* %1059, i64 1
  %1064 = getelementptr inbounds i16, i16* %1058, i64 1
  %1065 = add i64 %1060, -1
  %1066 = icmp eq i64 %1065, 0
  br i1 %1066, label %1067, label %1056, !llvm.loop !71

1067:                                             ; preds = %1056, %1049
  %1068 = phi i64 [ %1050, %1049 ], [ %1062, %1056 ]
  %1069 = phi i16* [ %1051, %1049 ], [ %1064, %1056 ]
  %1070 = phi i16* [ %1052, %1049 ], [ %1063, %1056 ]
  %1071 = icmp ult i64 %1053, 7
  br i1 %1071, label %1102, label %1072

1072:                                             ; preds = %1067, %1072
  %1073 = phi i64 [ %1098, %1072 ], [ %1068, %1067 ]
  %1074 = phi i16* [ %1100, %1072 ], [ %1069, %1067 ]
  %1075 = phi i16* [ %1099, %1072 ], [ %1070, %1067 ]
  %1076 = load i16, i16* %1074, align 2
  store i16 %1076, i16* %1075, align 2
  %1077 = getelementptr inbounds i16, i16* %1075, i64 1
  %1078 = getelementptr inbounds i16, i16* %1074, i64 1
  %1079 = load i16, i16* %1078, align 2
  store i16 %1079, i16* %1077, align 2
  %1080 = getelementptr inbounds i16, i16* %1075, i64 2
  %1081 = getelementptr inbounds i16, i16* %1074, i64 2
  %1082 = load i16, i16* %1081, align 2
  store i16 %1082, i16* %1080, align 2
  %1083 = getelementptr inbounds i16, i16* %1075, i64 3
  %1084 = getelementptr inbounds i16, i16* %1074, i64 3
  %1085 = load i16, i16* %1084, align 2
  store i16 %1085, i16* %1083, align 2
  %1086 = getelementptr inbounds i16, i16* %1075, i64 4
  %1087 = getelementptr inbounds i16, i16* %1074, i64 4
  %1088 = load i16, i16* %1087, align 2
  store i16 %1088, i16* %1086, align 2
  %1089 = getelementptr inbounds i16, i16* %1075, i64 5
  %1090 = getelementptr inbounds i16, i16* %1074, i64 5
  %1091 = load i16, i16* %1090, align 2
  store i16 %1091, i16* %1089, align 2
  %1092 = getelementptr inbounds i16, i16* %1075, i64 6
  %1093 = getelementptr inbounds i16, i16* %1074, i64 6
  %1094 = load i16, i16* %1093, align 2
  store i16 %1094, i16* %1092, align 2
  %1095 = getelementptr inbounds i16, i16* %1075, i64 7
  %1096 = getelementptr inbounds i16, i16* %1074, i64 7
  %1097 = load i16, i16* %1096, align 2
  store i16 %1097, i16* %1095, align 2
  %1098 = add i64 %1073, -8
  %1099 = getelementptr inbounds i16, i16* %1075, i64 8
  %1100 = getelementptr inbounds i16, i16* %1074, i64 8
  %1101 = icmp eq i64 %1098, 0
  br i1 %1101, label %1102, label %1072, !llvm.loop !72

1102:                                             ; preds = %1067, %1072, %1047, %924
  %1103 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 17
  %1104 = bitcast %"class.std::__1::basic_string"* %1103 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1105 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1104, i64 0, i32 1, i32 1
  %1106 = load i8, i8* %1105, align 1
  %1107 = icmp slt i8 %1106, 0
  br i1 %1107, label %1111, label %1108

1108:                                             ; preds = %1102
  %1109 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  %1110 = bitcast %"class.std::__1::basic_string"* %1103 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1109, i8* align 8 %1110, i64 24, i1 false) #8
  br label %1286

1111:                                             ; preds = %1102
  %1112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1103, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1113 = load i16*, i16** %1112, align 8
  %1114 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1115 = load i64, i64* %1114, align 8
  %1116 = icmp ult i64 %1115, 11
  br i1 %1116, label %1117, label %1122

1117:                                             ; preds = %1111
  %1118 = bitcast %"class.std::__1::basic_string"* %24 to i16*
  %1119 = trunc i64 %1115 to i8
  %1120 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1121 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1120, i64 0, i32 1, i32 1
  store i8 %1119, i8* %1121, align 1
  br label %1139

1122:                                             ; preds = %1111
  %1123 = icmp ugt i64 %1115, 9223372036854775791
  br i1 %1123, label %1124, label %1126

1124:                                             ; preds = %1122
  %1125 = bitcast %"class.std::__1::basic_string"* %24 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %1125) #9
  unreachable

1126:                                             ; preds = %1122
  %1127 = add nuw nsw i64 %1115, 8
  %1128 = and i64 %1127, -8
  %1129 = icmp slt i64 %1128, 0
  br i1 %1129, label %1130, label %1131

1130:                                             ; preds = %1126
  call void @abort() #9
  unreachable

1131:                                             ; preds = %1126
  %1132 = shl i64 %1128, 1
  %1133 = call i8* @_Znwm(i64 %1132) #10
  %1134 = bitcast i8* %1133 to i16*
  %1135 = bitcast %"class.std::__1::basic_string"* %24 to i8**
  store i8* %1133, i8** %1135, align 8
  %1136 = or i64 %1128, -9223372036854775808
  %1137 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %1136, i64* %1137, align 8
  %1138 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1115, i64* %1138, align 8
  br label %1139

1139:                                             ; preds = %1131, %1117
  %1140 = phi i16* [ %1118, %1117 ], [ %1134, %1131 ]
  %1141 = add nuw nsw i64 %1115, 1
  %1142 = add i64 %1115, 1
  %1143 = icmp ult i64 %1142, 16
  br i1 %1143, label %1233, label %1144

1144:                                             ; preds = %1139
  %1145 = add i64 %1115, 1
  %1146 = getelementptr i16, i16* %1140, i64 %1145
  %1147 = getelementptr i16, i16* %1113, i64 %1145
  %1148 = icmp ult i16* %1140, %1147
  %1149 = icmp ult i16* %1113, %1146
  %1150 = and i1 %1148, %1149
  br i1 %1150, label %1233, label %1151

1151:                                             ; preds = %1144
  %1152 = and i64 %1142, -16
  %1153 = sub i64 %1141, %1152
  %1154 = getelementptr i16, i16* %1113, i64 %1152
  %1155 = getelementptr i16, i16* %1140, i64 %1152
  %1156 = add i64 %1152, -16
  %1157 = lshr exact i64 %1156, 4
  %1158 = add nuw nsw i64 %1157, 1
  %1159 = and i64 %1158, 3
  %1160 = icmp ult i64 %1156, 48
  br i1 %1160, label %1212, label %1161

1161:                                             ; preds = %1151
  %1162 = sub nsw i64 %1158, %1159
  br label %1163

1163:                                             ; preds = %1163, %1161
  %1164 = phi i64 [ 0, %1161 ], [ %1209, %1163 ]
  %1165 = phi i64 [ %1162, %1161 ], [ %1210, %1163 ]
  %1166 = getelementptr i16, i16* %1113, i64 %1164
  %1167 = getelementptr i16, i16* %1140, i64 %1164
  %1168 = bitcast i16* %1166 to <8 x i16>*
  %1169 = load <8 x i16>, <8 x i16>* %1168, align 2, !alias.scope !73
  %1170 = getelementptr i16, i16* %1166, i64 8
  %1171 = bitcast i16* %1170 to <8 x i16>*
  %1172 = load <8 x i16>, <8 x i16>* %1171, align 2, !alias.scope !73
  %1173 = bitcast i16* %1167 to <8 x i16>*
  store <8 x i16> %1169, <8 x i16>* %1173, align 2, !alias.scope !76, !noalias !73
  %1174 = getelementptr i16, i16* %1167, i64 8
  %1175 = bitcast i16* %1174 to <8 x i16>*
  store <8 x i16> %1172, <8 x i16>* %1175, align 2, !alias.scope !76, !noalias !73
  %1176 = or i64 %1164, 16
  %1177 = getelementptr i16, i16* %1113, i64 %1176
  %1178 = getelementptr i16, i16* %1140, i64 %1176
  %1179 = bitcast i16* %1177 to <8 x i16>*
  %1180 = load <8 x i16>, <8 x i16>* %1179, align 2, !alias.scope !73
  %1181 = getelementptr i16, i16* %1177, i64 8
  %1182 = bitcast i16* %1181 to <8 x i16>*
  %1183 = load <8 x i16>, <8 x i16>* %1182, align 2, !alias.scope !73
  %1184 = bitcast i16* %1178 to <8 x i16>*
  store <8 x i16> %1180, <8 x i16>* %1184, align 2, !alias.scope !76, !noalias !73
  %1185 = getelementptr i16, i16* %1178, i64 8
  %1186 = bitcast i16* %1185 to <8 x i16>*
  store <8 x i16> %1183, <8 x i16>* %1186, align 2, !alias.scope !76, !noalias !73
  %1187 = or i64 %1164, 32
  %1188 = getelementptr i16, i16* %1113, i64 %1187
  %1189 = getelementptr i16, i16* %1140, i64 %1187
  %1190 = bitcast i16* %1188 to <8 x i16>*
  %1191 = load <8 x i16>, <8 x i16>* %1190, align 2, !alias.scope !73
  %1192 = getelementptr i16, i16* %1188, i64 8
  %1193 = bitcast i16* %1192 to <8 x i16>*
  %1194 = load <8 x i16>, <8 x i16>* %1193, align 2, !alias.scope !73
  %1195 = bitcast i16* %1189 to <8 x i16>*
  store <8 x i16> %1191, <8 x i16>* %1195, align 2, !alias.scope !76, !noalias !73
  %1196 = getelementptr i16, i16* %1189, i64 8
  %1197 = bitcast i16* %1196 to <8 x i16>*
  store <8 x i16> %1194, <8 x i16>* %1197, align 2, !alias.scope !76, !noalias !73
  %1198 = or i64 %1164, 48
  %1199 = getelementptr i16, i16* %1113, i64 %1198
  %1200 = getelementptr i16, i16* %1140, i64 %1198
  %1201 = bitcast i16* %1199 to <8 x i16>*
  %1202 = load <8 x i16>, <8 x i16>* %1201, align 2, !alias.scope !73
  %1203 = getelementptr i16, i16* %1199, i64 8
  %1204 = bitcast i16* %1203 to <8 x i16>*
  %1205 = load <8 x i16>, <8 x i16>* %1204, align 2, !alias.scope !73
  %1206 = bitcast i16* %1200 to <8 x i16>*
  store <8 x i16> %1202, <8 x i16>* %1206, align 2, !alias.scope !76, !noalias !73
  %1207 = getelementptr i16, i16* %1200, i64 8
  %1208 = bitcast i16* %1207 to <8 x i16>*
  store <8 x i16> %1205, <8 x i16>* %1208, align 2, !alias.scope !76, !noalias !73
  %1209 = add i64 %1164, 64
  %1210 = add i64 %1165, -4
  %1211 = icmp eq i64 %1210, 0
  br i1 %1211, label %1212, label %1163, !llvm.loop !78

1212:                                             ; preds = %1163, %1151
  %1213 = phi i64 [ 0, %1151 ], [ %1209, %1163 ]
  %1214 = icmp eq i64 %1159, 0
  br i1 %1214, label %1231, label %1215

1215:                                             ; preds = %1212, %1215
  %1216 = phi i64 [ %1228, %1215 ], [ %1213, %1212 ]
  %1217 = phi i64 [ %1229, %1215 ], [ %1159, %1212 ]
  %1218 = getelementptr i16, i16* %1113, i64 %1216
  %1219 = getelementptr i16, i16* %1140, i64 %1216
  %1220 = bitcast i16* %1218 to <8 x i16>*
  %1221 = load <8 x i16>, <8 x i16>* %1220, align 2, !alias.scope !73
  %1222 = getelementptr i16, i16* %1218, i64 8
  %1223 = bitcast i16* %1222 to <8 x i16>*
  %1224 = load <8 x i16>, <8 x i16>* %1223, align 2, !alias.scope !73
  %1225 = bitcast i16* %1219 to <8 x i16>*
  store <8 x i16> %1221, <8 x i16>* %1225, align 2, !alias.scope !76, !noalias !73
  %1226 = getelementptr i16, i16* %1219, i64 8
  %1227 = bitcast i16* %1226 to <8 x i16>*
  store <8 x i16> %1224, <8 x i16>* %1227, align 2, !alias.scope !76, !noalias !73
  %1228 = add i64 %1216, 16
  %1229 = add i64 %1217, -1
  %1230 = icmp eq i64 %1229, 0
  br i1 %1230, label %1231, label %1215, !llvm.loop !79

1231:                                             ; preds = %1215, %1212
  %1232 = icmp eq i64 %1142, %1152
  br i1 %1232, label %1286, label %1233

1233:                                             ; preds = %1231, %1144, %1139
  %1234 = phi i64 [ %1141, %1144 ], [ %1141, %1139 ], [ %1153, %1231 ]
  %1235 = phi i16* [ %1113, %1144 ], [ %1113, %1139 ], [ %1154, %1231 ]
  %1236 = phi i16* [ %1140, %1144 ], [ %1140, %1139 ], [ %1155, %1231 ]
  %1237 = add i64 %1234, -1
  %1238 = and i64 %1234, 7
  %1239 = icmp eq i64 %1238, 0
  br i1 %1239, label %1251, label %1240

1240:                                             ; preds = %1233, %1240
  %1241 = phi i64 [ %1246, %1240 ], [ %1234, %1233 ]
  %1242 = phi i16* [ %1248, %1240 ], [ %1235, %1233 ]
  %1243 = phi i16* [ %1247, %1240 ], [ %1236, %1233 ]
  %1244 = phi i64 [ %1249, %1240 ], [ %1238, %1233 ]
  %1245 = load i16, i16* %1242, align 2
  store i16 %1245, i16* %1243, align 2
  %1246 = add i64 %1241, -1
  %1247 = getelementptr inbounds i16, i16* %1243, i64 1
  %1248 = getelementptr inbounds i16, i16* %1242, i64 1
  %1249 = add i64 %1244, -1
  %1250 = icmp eq i64 %1249, 0
  br i1 %1250, label %1251, label %1240, !llvm.loop !80

1251:                                             ; preds = %1240, %1233
  %1252 = phi i64 [ %1234, %1233 ], [ %1246, %1240 ]
  %1253 = phi i16* [ %1235, %1233 ], [ %1248, %1240 ]
  %1254 = phi i16* [ %1236, %1233 ], [ %1247, %1240 ]
  %1255 = icmp ult i64 %1237, 7
  br i1 %1255, label %1286, label %1256

1256:                                             ; preds = %1251, %1256
  %1257 = phi i64 [ %1282, %1256 ], [ %1252, %1251 ]
  %1258 = phi i16* [ %1284, %1256 ], [ %1253, %1251 ]
  %1259 = phi i16* [ %1283, %1256 ], [ %1254, %1251 ]
  %1260 = load i16, i16* %1258, align 2
  store i16 %1260, i16* %1259, align 2
  %1261 = getelementptr inbounds i16, i16* %1259, i64 1
  %1262 = getelementptr inbounds i16, i16* %1258, i64 1
  %1263 = load i16, i16* %1262, align 2
  store i16 %1263, i16* %1261, align 2
  %1264 = getelementptr inbounds i16, i16* %1259, i64 2
  %1265 = getelementptr inbounds i16, i16* %1258, i64 2
  %1266 = load i16, i16* %1265, align 2
  store i16 %1266, i16* %1264, align 2
  %1267 = getelementptr inbounds i16, i16* %1259, i64 3
  %1268 = getelementptr inbounds i16, i16* %1258, i64 3
  %1269 = load i16, i16* %1268, align 2
  store i16 %1269, i16* %1267, align 2
  %1270 = getelementptr inbounds i16, i16* %1259, i64 4
  %1271 = getelementptr inbounds i16, i16* %1258, i64 4
  %1272 = load i16, i16* %1271, align 2
  store i16 %1272, i16* %1270, align 2
  %1273 = getelementptr inbounds i16, i16* %1259, i64 5
  %1274 = getelementptr inbounds i16, i16* %1258, i64 5
  %1275 = load i16, i16* %1274, align 2
  store i16 %1275, i16* %1273, align 2
  %1276 = getelementptr inbounds i16, i16* %1259, i64 6
  %1277 = getelementptr inbounds i16, i16* %1258, i64 6
  %1278 = load i16, i16* %1277, align 2
  store i16 %1278, i16* %1276, align 2
  %1279 = getelementptr inbounds i16, i16* %1259, i64 7
  %1280 = getelementptr inbounds i16, i16* %1258, i64 7
  %1281 = load i16, i16* %1280, align 2
  store i16 %1281, i16* %1279, align 2
  %1282 = add i64 %1257, -8
  %1283 = getelementptr inbounds i16, i16* %1259, i64 8
  %1284 = getelementptr inbounds i16, i16* %1258, i64 8
  %1285 = icmp eq i64 %1282, 0
  br i1 %1285, label %1286, label %1256, !llvm.loop !81

1286:                                             ; preds = %1251, %1256, %1231, %1108
  call void @_Z15FindTermMatchesNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES5_bb(%"class.std::__1::vector.146"* nonnull sret %22, %"class.std::__1::basic_string"* nonnull %23, %"class.std::__1::basic_string"* nonnull %24, i1 zeroext true, i1 zeroext false) #8
  %1287 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1288 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1287, i64 0, i32 1, i32 1
  %1289 = load i8, i8* %1288, align 1
  %1290 = icmp slt i8 %1289, 0
  br i1 %1290, label %1291, label %1294

1291:                                             ; preds = %1286
  %1292 = bitcast %"class.std::__1::basic_string"* %24 to i8**
  %1293 = load i8*, i8** %1292, align 8
  call void @_ZdlPv(i8* %1293) #10
  br label %1294

1294:                                             ; preds = %1286, %1291
  %1295 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1296 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1295, i64 0, i32 1, i32 1
  %1297 = load i8, i8* %1296, align 1
  %1298 = icmp slt i8 %1297, 0
  br i1 %1298, label %1299, label %1302

1299:                                             ; preds = %1294
  %1300 = bitcast %"class.std::__1::basic_string"* %23 to i8**
  %1301 = load i8*, i8** %1300, align 8
  call void @_ZdlPv(i8* %1301) #10
  br label %1302

1302:                                             ; preds = %1294, %1299
  %1303 = bitcast %"class.std::__1::vector.33"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1303) #8
  %1304 = bitcast %"class.std::__1::vector.146"* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1304, i8 0, i64 24, i1 false) #8
  %1305 = bitcast %struct.TermMatch** %917 to i64*
  %1306 = load i64, i64* %1305, align 8
  %1307 = bitcast %"class.std::__1::vector.146"* %22 to i64*
  %1308 = load i64, i64* %1307, align 8
  %1309 = sub i64 %1306, %1308
  %1310 = sdiv exact i64 %1309, 24
  %1311 = icmp eq i64 %1309, 0
  br i1 %1311, label %1334, label %1312

1312:                                             ; preds = %1302
  %1313 = icmp ugt i64 %1310, 768614336404564650
  br i1 %1313, label %1314, label %1316

1314:                                             ; preds = %1312
  %1315 = bitcast %"class.std::__1::vector.146"* %26 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1315) #9
  unreachable

1316:                                             ; preds = %1312
  %1317 = call i8* @_Znwm(i64 %1309) #10
  %1318 = bitcast i8* %1317 to %struct.TermMatch*
  %1319 = getelementptr inbounds %"class.std::__1::vector.146", %"class.std::__1::vector.146"* %26, i64 0, i32 0, i32 1
  %1320 = bitcast %struct.TermMatch** %1319 to i8**
  store i8* %1317, i8** %1320, align 8
  %1321 = bitcast %"class.std::__1::vector.146"* %26 to i8**
  store i8* %1317, i8** %1321, align 8
  %1322 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %1318, i64 %1310
  %1323 = getelementptr inbounds %"class.std::__1::vector.146", %"class.std::__1::vector.146"* %26, i64 0, i32 0, i32 2, i32 0, i32 0
  store %struct.TermMatch* %1322, %struct.TermMatch** %1323, align 8
  %1324 = bitcast %struct.TermMatch** %1319 to i64*
  %1325 = ptrtoint i8* %1317 to i64
  %1326 = icmp sgt i64 %1309, 0
  br i1 %1326, label %1327, label %1332

1327:                                             ; preds = %1316
  %1328 = udiv exact i64 %1309, 24
  %1329 = inttoptr i64 %1308 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1317, i8* align 8 %1329, i64 %1309, i1 false) #8
  %1330 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %1318, i64 %1328
  %1331 = ptrtoint %struct.TermMatch* %1330 to i64
  br label %1332

1332:                                             ; preds = %1327, %1316
  %1333 = phi i64 [ %1331, %1327 ], [ %1325, %1316 ]
  store i64 %1333, i64* %1324, align 8
  br label %1334

1334:                                             ; preds = %1302, %1332
  %1335 = load i8, i8* %1105, align 1
  %1336 = icmp slt i8 %1335, 0
  %1337 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1338 = load i64, i64* %1337, align 8
  %1339 = zext i8 %1335 to i64
  %1340 = select i1 %1336, i64 %1338, i64 %1339
  call void @_Z19ClassifyTermMatchesNSt3__16vectorI9TermMatchNS_9allocatorIS1_EEEEmii(%"class.std::__1::vector.33"* nonnull sret %25, %"class.std::__1::vector.146"* nonnull %26, i64 %1340, i32 3, i32 1) #8
  %1341 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 18
  %1342 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %1341, i64 0, i32 0, i32 0
  %1343 = load %"struct.AutocompleteMatch::ACMatchClassification"*, %"struct.AutocompleteMatch::ACMatchClassification"** %1342, align 8
  %1344 = icmp eq %"struct.AutocompleteMatch::ACMatchClassification"* %1343, null
  br i1 %1344, label %1351, label %1345

1345:                                             ; preds = %1334
  %1346 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %1343 to i64
  %1347 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 18, i32 0, i32 1
  %1348 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"** %1347 to i64*
  store i64 %1346, i64* %1348, align 8
  %1349 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"* %1343 to i8*
  call void @_ZdlPv(i8* %1349) #10
  %1350 = bitcast %"class.std::__1::vector.33"* %1341 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1350, i8 0, i64 24, i1 false) #8
  br label %1351

1351:                                             ; preds = %1334, %1345
  %1352 = bitcast %"class.std::__1::vector.33"* %25 to <2 x i64>*
  %1353 = load <2 x i64>, <2 x i64>* %1352, align 16
  %1354 = bitcast %"class.std::__1::vector.33"* %1341 to <2 x i64>*
  store <2 x i64> %1353, <2 x i64>* %1354, align 8
  %1355 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %25, i64 0, i32 0, i32 2, i32 0, i32 0
  %1356 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"** %1355 to i64*
  %1357 = load i64, i64* %1356, align 16
  %1358 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 18, i32 0, i32 2, i32 0, i32 0
  %1359 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"** %1358 to i64*
  store i64 %1357, i64* %1359, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1303, i8 0, i64 24, i1 false) #8
  %1360 = getelementptr inbounds %"class.std::__1::vector.146", %"class.std::__1::vector.146"* %26, i64 0, i32 0, i32 0
  %1361 = load %struct.TermMatch*, %struct.TermMatch** %1360, align 8
  %1362 = icmp eq %struct.TermMatch* %1361, null
  br i1 %1362, label %1368, label %1363

1363:                                             ; preds = %1351
  %1364 = bitcast %struct.TermMatch* %1361 to i8*
  %1365 = ptrtoint %struct.TermMatch* %1361 to i64
  %1366 = getelementptr inbounds %"class.std::__1::vector.146", %"class.std::__1::vector.146"* %26, i64 0, i32 0, i32 1
  %1367 = bitcast %struct.TermMatch** %1366 to i64*
  store i64 %1365, i64* %1367, align 8
  call void @_ZdlPv(i8* %1364) #10
  br label %1368

1368:                                             ; preds = %1351, %1363
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1303) #8
  %1369 = call zeroext i1 @_ZNK4base12FeatureParamIbLb0EE3GetEv(%"struct.base::FeatureParam"* nonnull @_ZN17OmniboxFieldTrial28kBookmarkPathsUiReplaceTitleE) #8
  br i1 %1369, label %1370, label %1592

1370:                                             ; preds = %1368
  %1371 = getelementptr inbounds [15 x i8], [15 x i8]* %27, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %1371)
  %1372 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1372) #8
  call void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_(%"class.std::__1::basic_string"* nonnull sret %28, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %14, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @.str.3, i64 0, i64 0))
  %1373 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1374 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1373, i64 0, i32 1, i32 1
  %1375 = load i8, i8* %1374, align 1, !noalias !82
  %1376 = icmp slt i8 %1375, 0
  %1377 = load i16*, i16** %42, align 8, !noalias !82
  %1378 = load i64, i64* %43, align 8, !noalias !82
  %1379 = bitcast %"class.std::__1::basic_string"* %13 to i16*
  %1380 = zext i8 %1375 to i64
  %1381 = select i1 %1376, i16* %1377, i16* %1379
  %1382 = select i1 %1376, i64 %1378, i64 %1380
  %1383 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1384 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1383, i64 0, i32 1, i32 1
  %1385 = load i8, i8* %1384, align 1, !noalias !82
  %1386 = icmp slt i8 %1385, 0
  br i1 %1386, label %1387, label %1394

1387:                                             ; preds = %1370
  %1388 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %1389 = load i64, i64* %1388, align 8, !noalias !82
  %1390 = and i64 %1389, 9223372036854775807
  %1391 = add nsw i64 %1390, -1
  %1392 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1393 = load i64, i64* %1392, align 8, !noalias !82
  br label %1396

1394:                                             ; preds = %1370
  %1395 = zext i8 %1385 to i64
  br label %1396

1396:                                             ; preds = %1394, %1387
  %1397 = phi i64 [ %1391, %1387 ], [ 10, %1394 ]
  %1398 = phi i64 [ %1393, %1387 ], [ %1395, %1394 ]
  %1399 = sub i64 %1397, %1398
  %1400 = icmp ult i64 %1399, %1382
  br i1 %1400, label %1562, label %1401

1401:                                             ; preds = %1396
  %1402 = icmp eq i64 %1382, 0
  br i1 %1402, label %1565, label %1403

1403:                                             ; preds = %1401
  %1404 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1405 = load i16*, i16** %1404, align 8, !noalias !82
  %1406 = bitcast %"class.std::__1::basic_string"* %28 to i16*
  %1407 = select i1 %1386, i16* %1405, i16* %1406
  %1408 = getelementptr inbounds i16, i16* %1407, i64 %1398
  %1409 = icmp ult i64 %1382, 16
  br i1 %1409, label %1499, label %1410

1410:                                             ; preds = %1403
  %1411 = add i64 %1382, %1398
  %1412 = getelementptr i16, i16* %1407, i64 %1411
  %1413 = getelementptr i16, i16* %1381, i64 %1382
  %1414 = icmp ult i16* %1408, %1413
  %1415 = icmp ult i16* %1381, %1412
  %1416 = and i1 %1414, %1415
  br i1 %1416, label %1499, label %1417

1417:                                             ; preds = %1410
  %1418 = and i64 %1382, -16
  %1419 = sub i64 %1382, %1418
  %1420 = getelementptr i16, i16* %1381, i64 %1418
  %1421 = getelementptr i16, i16* %1408, i64 %1418
  %1422 = add i64 %1418, -16
  %1423 = lshr exact i64 %1422, 4
  %1424 = add nuw nsw i64 %1423, 1
  %1425 = and i64 %1424, 3
  %1426 = icmp ult i64 %1422, 48
  br i1 %1426, label %1478, label %1427

1427:                                             ; preds = %1417
  %1428 = sub nsw i64 %1424, %1425
  br label %1429

1429:                                             ; preds = %1429, %1427
  %1430 = phi i64 [ 0, %1427 ], [ %1475, %1429 ]
  %1431 = phi i64 [ %1428, %1427 ], [ %1476, %1429 ]
  %1432 = getelementptr i16, i16* %1381, i64 %1430
  %1433 = getelementptr i16, i16* %1408, i64 %1430
  %1434 = bitcast i16* %1432 to <8 x i16>*
  %1435 = load <8 x i16>, <8 x i16>* %1434, align 2, !alias.scope !85, !noalias !82
  %1436 = getelementptr i16, i16* %1432, i64 8
  %1437 = bitcast i16* %1436 to <8 x i16>*
  %1438 = load <8 x i16>, <8 x i16>* %1437, align 2, !alias.scope !85, !noalias !82
  %1439 = bitcast i16* %1433 to <8 x i16>*
  store <8 x i16> %1435, <8 x i16>* %1439, align 2, !alias.scope !88, !noalias !90
  %1440 = getelementptr i16, i16* %1433, i64 8
  %1441 = bitcast i16* %1440 to <8 x i16>*
  store <8 x i16> %1438, <8 x i16>* %1441, align 2, !alias.scope !88, !noalias !90
  %1442 = or i64 %1430, 16
  %1443 = getelementptr i16, i16* %1381, i64 %1442
  %1444 = getelementptr i16, i16* %1408, i64 %1442
  %1445 = bitcast i16* %1443 to <8 x i16>*
  %1446 = load <8 x i16>, <8 x i16>* %1445, align 2, !alias.scope !85, !noalias !82
  %1447 = getelementptr i16, i16* %1443, i64 8
  %1448 = bitcast i16* %1447 to <8 x i16>*
  %1449 = load <8 x i16>, <8 x i16>* %1448, align 2, !alias.scope !85, !noalias !82
  %1450 = bitcast i16* %1444 to <8 x i16>*
  store <8 x i16> %1446, <8 x i16>* %1450, align 2, !alias.scope !88, !noalias !90
  %1451 = getelementptr i16, i16* %1444, i64 8
  %1452 = bitcast i16* %1451 to <8 x i16>*
  store <8 x i16> %1449, <8 x i16>* %1452, align 2, !alias.scope !88, !noalias !90
  %1453 = or i64 %1430, 32
  %1454 = getelementptr i16, i16* %1381, i64 %1453
  %1455 = getelementptr i16, i16* %1408, i64 %1453
  %1456 = bitcast i16* %1454 to <8 x i16>*
  %1457 = load <8 x i16>, <8 x i16>* %1456, align 2, !alias.scope !85, !noalias !82
  %1458 = getelementptr i16, i16* %1454, i64 8
  %1459 = bitcast i16* %1458 to <8 x i16>*
  %1460 = load <8 x i16>, <8 x i16>* %1459, align 2, !alias.scope !85, !noalias !82
  %1461 = bitcast i16* %1455 to <8 x i16>*
  store <8 x i16> %1457, <8 x i16>* %1461, align 2, !alias.scope !88, !noalias !90
  %1462 = getelementptr i16, i16* %1455, i64 8
  %1463 = bitcast i16* %1462 to <8 x i16>*
  store <8 x i16> %1460, <8 x i16>* %1463, align 2, !alias.scope !88, !noalias !90
  %1464 = or i64 %1430, 48
  %1465 = getelementptr i16, i16* %1381, i64 %1464
  %1466 = getelementptr i16, i16* %1408, i64 %1464
  %1467 = bitcast i16* %1465 to <8 x i16>*
  %1468 = load <8 x i16>, <8 x i16>* %1467, align 2, !alias.scope !85, !noalias !82
  %1469 = getelementptr i16, i16* %1465, i64 8
  %1470 = bitcast i16* %1469 to <8 x i16>*
  %1471 = load <8 x i16>, <8 x i16>* %1470, align 2, !alias.scope !85, !noalias !82
  %1472 = bitcast i16* %1466 to <8 x i16>*
  store <8 x i16> %1468, <8 x i16>* %1472, align 2, !alias.scope !88, !noalias !90
  %1473 = getelementptr i16, i16* %1466, i64 8
  %1474 = bitcast i16* %1473 to <8 x i16>*
  store <8 x i16> %1471, <8 x i16>* %1474, align 2, !alias.scope !88, !noalias !90
  %1475 = add i64 %1430, 64
  %1476 = add i64 %1431, -4
  %1477 = icmp eq i64 %1476, 0
  br i1 %1477, label %1478, label %1429, !llvm.loop !91

1478:                                             ; preds = %1429, %1417
  %1479 = phi i64 [ 0, %1417 ], [ %1475, %1429 ]
  %1480 = icmp eq i64 %1425, 0
  br i1 %1480, label %1497, label %1481

1481:                                             ; preds = %1478, %1481
  %1482 = phi i64 [ %1494, %1481 ], [ %1479, %1478 ]
  %1483 = phi i64 [ %1495, %1481 ], [ %1425, %1478 ]
  %1484 = getelementptr i16, i16* %1381, i64 %1482
  %1485 = getelementptr i16, i16* %1408, i64 %1482
  %1486 = bitcast i16* %1484 to <8 x i16>*
  %1487 = load <8 x i16>, <8 x i16>* %1486, align 2, !alias.scope !85, !noalias !82
  %1488 = getelementptr i16, i16* %1484, i64 8
  %1489 = bitcast i16* %1488 to <8 x i16>*
  %1490 = load <8 x i16>, <8 x i16>* %1489, align 2, !alias.scope !85, !noalias !82
  %1491 = bitcast i16* %1485 to <8 x i16>*
  store <8 x i16> %1487, <8 x i16>* %1491, align 2, !alias.scope !88, !noalias !90
  %1492 = getelementptr i16, i16* %1485, i64 8
  %1493 = bitcast i16* %1492 to <8 x i16>*
  store <8 x i16> %1490, <8 x i16>* %1493, align 2, !alias.scope !88, !noalias !90
  %1494 = add i64 %1482, 16
  %1495 = add i64 %1483, -1
  %1496 = icmp eq i64 %1495, 0
  br i1 %1496, label %1497, label %1481, !llvm.loop !92

1497:                                             ; preds = %1481, %1478
  %1498 = icmp eq i64 %1382, %1418
  br i1 %1498, label %1552, label %1499

1499:                                             ; preds = %1497, %1410, %1403
  %1500 = phi i64 [ %1382, %1410 ], [ %1382, %1403 ], [ %1419, %1497 ]
  %1501 = phi i16* [ %1381, %1410 ], [ %1381, %1403 ], [ %1420, %1497 ]
  %1502 = phi i16* [ %1408, %1410 ], [ %1408, %1403 ], [ %1421, %1497 ]
  %1503 = add i64 %1500, -1
  %1504 = and i64 %1500, 7
  %1505 = icmp eq i64 %1504, 0
  br i1 %1505, label %1517, label %1506

1506:                                             ; preds = %1499, %1506
  %1507 = phi i64 [ %1512, %1506 ], [ %1500, %1499 ]
  %1508 = phi i16* [ %1514, %1506 ], [ %1501, %1499 ]
  %1509 = phi i16* [ %1513, %1506 ], [ %1502, %1499 ]
  %1510 = phi i64 [ %1515, %1506 ], [ %1504, %1499 ]
  %1511 = load i16, i16* %1508, align 2, !noalias !82
  store i16 %1511, i16* %1509, align 2, !noalias !82
  %1512 = add i64 %1507, -1
  %1513 = getelementptr inbounds i16, i16* %1509, i64 1
  %1514 = getelementptr inbounds i16, i16* %1508, i64 1
  %1515 = add i64 %1510, -1
  %1516 = icmp eq i64 %1515, 0
  br i1 %1516, label %1517, label %1506, !llvm.loop !93

1517:                                             ; preds = %1506, %1499
  %1518 = phi i64 [ %1500, %1499 ], [ %1512, %1506 ]
  %1519 = phi i16* [ %1501, %1499 ], [ %1514, %1506 ]
  %1520 = phi i16* [ %1502, %1499 ], [ %1513, %1506 ]
  %1521 = icmp ult i64 %1503, 7
  br i1 %1521, label %1552, label %1522

1522:                                             ; preds = %1517, %1522
  %1523 = phi i64 [ %1548, %1522 ], [ %1518, %1517 ]
  %1524 = phi i16* [ %1550, %1522 ], [ %1519, %1517 ]
  %1525 = phi i16* [ %1549, %1522 ], [ %1520, %1517 ]
  %1526 = load i16, i16* %1524, align 2, !noalias !82
  store i16 %1526, i16* %1525, align 2, !noalias !82
  %1527 = getelementptr inbounds i16, i16* %1525, i64 1
  %1528 = getelementptr inbounds i16, i16* %1524, i64 1
  %1529 = load i16, i16* %1528, align 2, !noalias !82
  store i16 %1529, i16* %1527, align 2, !noalias !82
  %1530 = getelementptr inbounds i16, i16* %1525, i64 2
  %1531 = getelementptr inbounds i16, i16* %1524, i64 2
  %1532 = load i16, i16* %1531, align 2, !noalias !82
  store i16 %1532, i16* %1530, align 2, !noalias !82
  %1533 = getelementptr inbounds i16, i16* %1525, i64 3
  %1534 = getelementptr inbounds i16, i16* %1524, i64 3
  %1535 = load i16, i16* %1534, align 2, !noalias !82
  store i16 %1535, i16* %1533, align 2, !noalias !82
  %1536 = getelementptr inbounds i16, i16* %1525, i64 4
  %1537 = getelementptr inbounds i16, i16* %1524, i64 4
  %1538 = load i16, i16* %1537, align 2, !noalias !82
  store i16 %1538, i16* %1536, align 2, !noalias !82
  %1539 = getelementptr inbounds i16, i16* %1525, i64 5
  %1540 = getelementptr inbounds i16, i16* %1524, i64 5
  %1541 = load i16, i16* %1540, align 2, !noalias !82
  store i16 %1541, i16* %1539, align 2, !noalias !82
  %1542 = getelementptr inbounds i16, i16* %1525, i64 6
  %1543 = getelementptr inbounds i16, i16* %1524, i64 6
  %1544 = load i16, i16* %1543, align 2, !noalias !82
  store i16 %1544, i16* %1542, align 2, !noalias !82
  %1545 = getelementptr inbounds i16, i16* %1525, i64 7
  %1546 = getelementptr inbounds i16, i16* %1524, i64 7
  %1547 = load i16, i16* %1546, align 2, !noalias !82
  store i16 %1547, i16* %1545, align 2, !noalias !82
  %1548 = add i64 %1523, -8
  %1549 = getelementptr inbounds i16, i16* %1525, i64 8
  %1550 = getelementptr inbounds i16, i16* %1524, i64 8
  %1551 = icmp eq i64 %1548, 0
  br i1 %1551, label %1552, label %1522, !llvm.loop !94

1552:                                             ; preds = %1517, %1522, %1497
  %1553 = add i64 %1398, %1382
  %1554 = load i8, i8* %1384, align 1, !noalias !82
  %1555 = icmp slt i8 %1554, 0
  br i1 %1555, label %1556, label %1558

1556:                                             ; preds = %1552
  %1557 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1553, i64* %1557, align 8, !noalias !82
  br label %1560

1558:                                             ; preds = %1552
  %1559 = trunc i64 %1553 to i8
  store i8 %1559, i8* %1384, align 1, !noalias !82
  br label %1560

1560:                                             ; preds = %1558, %1556
  %1561 = getelementptr inbounds i16, i16* %1407, i64 %1553
  store i16 0, i16* %1561, align 2, !noalias !82
  br label %1565

1562:                                             ; preds = %1396
  %1563 = add i64 %1398, %1382
  %1564 = sub i64 %1563, %1397
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* nonnull %28, i64 %1397, i64 %1564, i64 %1398, i64 %1398, i64 0, i64 %1382, i16* %1381) #8, !noalias !82
  br label %1565

1565:                                             ; preds = %1401, %1560, %1562
  %1566 = bitcast %"class.std::__1::basic_string"* %28 to i8**
  %1567 = bitcast %"class.std::__1::basic_string"* %28 to i64*
  %1568 = load i64, i64* %1567, align 8
  %1569 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1570 = bitcast i64* %1569 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1371, i8* align 8 %1570, i64 15, i1 false)
  %1571 = getelementptr inbounds i8, i8* %1372, i64 23
  %1572 = load i8, i8* %1571, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1372, i8 0, i64 24, i1 false) #8, !noalias !82
  %1573 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 19
  %1574 = bitcast %"class.std::__1::basic_string"* %1573 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1575 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1574, i64 0, i32 1, i32 1
  %1576 = load i8, i8* %1575, align 1
  %1577 = icmp slt i8 %1576, 0
  br i1 %1577, label %1578, label %1582

1578:                                             ; preds = %1565
  %1579 = bitcast %"class.std::__1::basic_string"* %1573 to i8**
  %1580 = load i8*, i8** %1579, align 8
  call void @_ZdlPv(i8* %1580) #10
  %1581 = load i8, i8* %1384, align 1
  br label %1582

1582:                                             ; preds = %1578, %1565
  %1583 = phi i8 [ %1581, %1578 ], [ 0, %1565 ]
  %1584 = bitcast %"class.std::__1::basic_string"* %1573 to i64*
  store i64 %1568, i64* %1584, align 8
  %1585 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1586 = bitcast i64* %1585 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1586, i8* nonnull align 8 %1371, i64 15, i1 false)
  %1587 = getelementptr inbounds i8, i8* %842, i64 671
  store i8 %1572, i8* %1587, align 1
  %1588 = icmp slt i8 %1583, 0
  br i1 %1588, label %1589, label %1591

1589:                                             ; preds = %1582
  %1590 = load i8*, i8** %1566, align 8
  call void @_ZdlPv(i8* %1590) #10
  br label %1591

1591:                                             ; preds = %1582, %1589
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1372) #8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %1371)
  br label %1820

1592:                                             ; preds = %1368
  %1593 = call zeroext i1 @_ZNK4base12FeatureParamIbLb0EE3GetEv(%"struct.base::FeatureParam"* nonnull @_ZN17OmniboxFieldTrial32kBookmarkPathsUiAppendAfterTitleE) #8
  br i1 %1593, label %1594, label %1816

1594:                                             ; preds = %1592
  %1595 = getelementptr inbounds [15 x i8], [15 x i8]* %29, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %1595)
  %1596 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1596) #8
  call void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_(%"class.std::__1::basic_string"* nonnull sret %30, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %13, i16* getelementptr inbounds ([4 x i16], [4 x i16]* @.str.4, i64 0, i64 0))
  %1597 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1598 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1597, i64 0, i32 1, i32 1
  %1599 = load i8, i8* %1598, align 1, !noalias !95
  %1600 = icmp slt i8 %1599, 0
  %1601 = load i16*, i16** %239, align 8, !noalias !95
  %1602 = load i64, i64* %240, align 8, !noalias !95
  %1603 = bitcast %"class.std::__1::basic_string"* %14 to i16*
  %1604 = zext i8 %1599 to i64
  %1605 = select i1 %1600, i16* %1601, i16* %1603
  %1606 = select i1 %1600, i64 %1602, i64 %1604
  %1607 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1608 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1607, i64 0, i32 1, i32 1
  %1609 = load i8, i8* %1608, align 1, !noalias !95
  %1610 = icmp slt i8 %1609, 0
  br i1 %1610, label %1611, label %1618

1611:                                             ; preds = %1594
  %1612 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %1613 = load i64, i64* %1612, align 8, !noalias !95
  %1614 = and i64 %1613, 9223372036854775807
  %1615 = add nsw i64 %1614, -1
  %1616 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1617 = load i64, i64* %1616, align 8, !noalias !95
  br label %1620

1618:                                             ; preds = %1594
  %1619 = zext i8 %1609 to i64
  br label %1620

1620:                                             ; preds = %1618, %1611
  %1621 = phi i64 [ %1615, %1611 ], [ 10, %1618 ]
  %1622 = phi i64 [ %1617, %1611 ], [ %1619, %1618 ]
  %1623 = sub i64 %1621, %1622
  %1624 = icmp ult i64 %1623, %1606
  br i1 %1624, label %1786, label %1625

1625:                                             ; preds = %1620
  %1626 = icmp eq i64 %1606, 0
  br i1 %1626, label %1789, label %1627

1627:                                             ; preds = %1625
  %1628 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1629 = load i16*, i16** %1628, align 8, !noalias !95
  %1630 = bitcast %"class.std::__1::basic_string"* %30 to i16*
  %1631 = select i1 %1610, i16* %1629, i16* %1630
  %1632 = getelementptr inbounds i16, i16* %1631, i64 %1622
  %1633 = icmp ult i64 %1606, 16
  br i1 %1633, label %1723, label %1634

1634:                                             ; preds = %1627
  %1635 = add i64 %1606, %1622
  %1636 = getelementptr i16, i16* %1631, i64 %1635
  %1637 = getelementptr i16, i16* %1605, i64 %1606
  %1638 = icmp ult i16* %1632, %1637
  %1639 = icmp ult i16* %1605, %1636
  %1640 = and i1 %1638, %1639
  br i1 %1640, label %1723, label %1641

1641:                                             ; preds = %1634
  %1642 = and i64 %1606, -16
  %1643 = sub i64 %1606, %1642
  %1644 = getelementptr i16, i16* %1605, i64 %1642
  %1645 = getelementptr i16, i16* %1632, i64 %1642
  %1646 = add i64 %1642, -16
  %1647 = lshr exact i64 %1646, 4
  %1648 = add nuw nsw i64 %1647, 1
  %1649 = and i64 %1648, 3
  %1650 = icmp ult i64 %1646, 48
  br i1 %1650, label %1702, label %1651

1651:                                             ; preds = %1641
  %1652 = sub nsw i64 %1648, %1649
  br label %1653

1653:                                             ; preds = %1653, %1651
  %1654 = phi i64 [ 0, %1651 ], [ %1699, %1653 ]
  %1655 = phi i64 [ %1652, %1651 ], [ %1700, %1653 ]
  %1656 = getelementptr i16, i16* %1605, i64 %1654
  %1657 = getelementptr i16, i16* %1632, i64 %1654
  %1658 = bitcast i16* %1656 to <8 x i16>*
  %1659 = load <8 x i16>, <8 x i16>* %1658, align 2, !alias.scope !98, !noalias !95
  %1660 = getelementptr i16, i16* %1656, i64 8
  %1661 = bitcast i16* %1660 to <8 x i16>*
  %1662 = load <8 x i16>, <8 x i16>* %1661, align 2, !alias.scope !98, !noalias !95
  %1663 = bitcast i16* %1657 to <8 x i16>*
  store <8 x i16> %1659, <8 x i16>* %1663, align 2, !alias.scope !101, !noalias !103
  %1664 = getelementptr i16, i16* %1657, i64 8
  %1665 = bitcast i16* %1664 to <8 x i16>*
  store <8 x i16> %1662, <8 x i16>* %1665, align 2, !alias.scope !101, !noalias !103
  %1666 = or i64 %1654, 16
  %1667 = getelementptr i16, i16* %1605, i64 %1666
  %1668 = getelementptr i16, i16* %1632, i64 %1666
  %1669 = bitcast i16* %1667 to <8 x i16>*
  %1670 = load <8 x i16>, <8 x i16>* %1669, align 2, !alias.scope !98, !noalias !95
  %1671 = getelementptr i16, i16* %1667, i64 8
  %1672 = bitcast i16* %1671 to <8 x i16>*
  %1673 = load <8 x i16>, <8 x i16>* %1672, align 2, !alias.scope !98, !noalias !95
  %1674 = bitcast i16* %1668 to <8 x i16>*
  store <8 x i16> %1670, <8 x i16>* %1674, align 2, !alias.scope !101, !noalias !103
  %1675 = getelementptr i16, i16* %1668, i64 8
  %1676 = bitcast i16* %1675 to <8 x i16>*
  store <8 x i16> %1673, <8 x i16>* %1676, align 2, !alias.scope !101, !noalias !103
  %1677 = or i64 %1654, 32
  %1678 = getelementptr i16, i16* %1605, i64 %1677
  %1679 = getelementptr i16, i16* %1632, i64 %1677
  %1680 = bitcast i16* %1678 to <8 x i16>*
  %1681 = load <8 x i16>, <8 x i16>* %1680, align 2, !alias.scope !98, !noalias !95
  %1682 = getelementptr i16, i16* %1678, i64 8
  %1683 = bitcast i16* %1682 to <8 x i16>*
  %1684 = load <8 x i16>, <8 x i16>* %1683, align 2, !alias.scope !98, !noalias !95
  %1685 = bitcast i16* %1679 to <8 x i16>*
  store <8 x i16> %1681, <8 x i16>* %1685, align 2, !alias.scope !101, !noalias !103
  %1686 = getelementptr i16, i16* %1679, i64 8
  %1687 = bitcast i16* %1686 to <8 x i16>*
  store <8 x i16> %1684, <8 x i16>* %1687, align 2, !alias.scope !101, !noalias !103
  %1688 = or i64 %1654, 48
  %1689 = getelementptr i16, i16* %1605, i64 %1688
  %1690 = getelementptr i16, i16* %1632, i64 %1688
  %1691 = bitcast i16* %1689 to <8 x i16>*
  %1692 = load <8 x i16>, <8 x i16>* %1691, align 2, !alias.scope !98, !noalias !95
  %1693 = getelementptr i16, i16* %1689, i64 8
  %1694 = bitcast i16* %1693 to <8 x i16>*
  %1695 = load <8 x i16>, <8 x i16>* %1694, align 2, !alias.scope !98, !noalias !95
  %1696 = bitcast i16* %1690 to <8 x i16>*
  store <8 x i16> %1692, <8 x i16>* %1696, align 2, !alias.scope !101, !noalias !103
  %1697 = getelementptr i16, i16* %1690, i64 8
  %1698 = bitcast i16* %1697 to <8 x i16>*
  store <8 x i16> %1695, <8 x i16>* %1698, align 2, !alias.scope !101, !noalias !103
  %1699 = add i64 %1654, 64
  %1700 = add i64 %1655, -4
  %1701 = icmp eq i64 %1700, 0
  br i1 %1701, label %1702, label %1653, !llvm.loop !104

1702:                                             ; preds = %1653, %1641
  %1703 = phi i64 [ 0, %1641 ], [ %1699, %1653 ]
  %1704 = icmp eq i64 %1649, 0
  br i1 %1704, label %1721, label %1705

1705:                                             ; preds = %1702, %1705
  %1706 = phi i64 [ %1718, %1705 ], [ %1703, %1702 ]
  %1707 = phi i64 [ %1719, %1705 ], [ %1649, %1702 ]
  %1708 = getelementptr i16, i16* %1605, i64 %1706
  %1709 = getelementptr i16, i16* %1632, i64 %1706
  %1710 = bitcast i16* %1708 to <8 x i16>*
  %1711 = load <8 x i16>, <8 x i16>* %1710, align 2, !alias.scope !98, !noalias !95
  %1712 = getelementptr i16, i16* %1708, i64 8
  %1713 = bitcast i16* %1712 to <8 x i16>*
  %1714 = load <8 x i16>, <8 x i16>* %1713, align 2, !alias.scope !98, !noalias !95
  %1715 = bitcast i16* %1709 to <8 x i16>*
  store <8 x i16> %1711, <8 x i16>* %1715, align 2, !alias.scope !101, !noalias !103
  %1716 = getelementptr i16, i16* %1709, i64 8
  %1717 = bitcast i16* %1716 to <8 x i16>*
  store <8 x i16> %1714, <8 x i16>* %1717, align 2, !alias.scope !101, !noalias !103
  %1718 = add i64 %1706, 16
  %1719 = add i64 %1707, -1
  %1720 = icmp eq i64 %1719, 0
  br i1 %1720, label %1721, label %1705, !llvm.loop !105

1721:                                             ; preds = %1705, %1702
  %1722 = icmp eq i64 %1606, %1642
  br i1 %1722, label %1776, label %1723

1723:                                             ; preds = %1721, %1634, %1627
  %1724 = phi i64 [ %1606, %1634 ], [ %1606, %1627 ], [ %1643, %1721 ]
  %1725 = phi i16* [ %1605, %1634 ], [ %1605, %1627 ], [ %1644, %1721 ]
  %1726 = phi i16* [ %1632, %1634 ], [ %1632, %1627 ], [ %1645, %1721 ]
  %1727 = add i64 %1724, -1
  %1728 = and i64 %1724, 7
  %1729 = icmp eq i64 %1728, 0
  br i1 %1729, label %1741, label %1730

1730:                                             ; preds = %1723, %1730
  %1731 = phi i64 [ %1736, %1730 ], [ %1724, %1723 ]
  %1732 = phi i16* [ %1738, %1730 ], [ %1725, %1723 ]
  %1733 = phi i16* [ %1737, %1730 ], [ %1726, %1723 ]
  %1734 = phi i64 [ %1739, %1730 ], [ %1728, %1723 ]
  %1735 = load i16, i16* %1732, align 2, !noalias !95
  store i16 %1735, i16* %1733, align 2, !noalias !95
  %1736 = add i64 %1731, -1
  %1737 = getelementptr inbounds i16, i16* %1733, i64 1
  %1738 = getelementptr inbounds i16, i16* %1732, i64 1
  %1739 = add i64 %1734, -1
  %1740 = icmp eq i64 %1739, 0
  br i1 %1740, label %1741, label %1730, !llvm.loop !106

1741:                                             ; preds = %1730, %1723
  %1742 = phi i64 [ %1724, %1723 ], [ %1736, %1730 ]
  %1743 = phi i16* [ %1725, %1723 ], [ %1738, %1730 ]
  %1744 = phi i16* [ %1726, %1723 ], [ %1737, %1730 ]
  %1745 = icmp ult i64 %1727, 7
  br i1 %1745, label %1776, label %1746

1746:                                             ; preds = %1741, %1746
  %1747 = phi i64 [ %1772, %1746 ], [ %1742, %1741 ]
  %1748 = phi i16* [ %1774, %1746 ], [ %1743, %1741 ]
  %1749 = phi i16* [ %1773, %1746 ], [ %1744, %1741 ]
  %1750 = load i16, i16* %1748, align 2, !noalias !95
  store i16 %1750, i16* %1749, align 2, !noalias !95
  %1751 = getelementptr inbounds i16, i16* %1749, i64 1
  %1752 = getelementptr inbounds i16, i16* %1748, i64 1
  %1753 = load i16, i16* %1752, align 2, !noalias !95
  store i16 %1753, i16* %1751, align 2, !noalias !95
  %1754 = getelementptr inbounds i16, i16* %1749, i64 2
  %1755 = getelementptr inbounds i16, i16* %1748, i64 2
  %1756 = load i16, i16* %1755, align 2, !noalias !95
  store i16 %1756, i16* %1754, align 2, !noalias !95
  %1757 = getelementptr inbounds i16, i16* %1749, i64 3
  %1758 = getelementptr inbounds i16, i16* %1748, i64 3
  %1759 = load i16, i16* %1758, align 2, !noalias !95
  store i16 %1759, i16* %1757, align 2, !noalias !95
  %1760 = getelementptr inbounds i16, i16* %1749, i64 4
  %1761 = getelementptr inbounds i16, i16* %1748, i64 4
  %1762 = load i16, i16* %1761, align 2, !noalias !95
  store i16 %1762, i16* %1760, align 2, !noalias !95
  %1763 = getelementptr inbounds i16, i16* %1749, i64 5
  %1764 = getelementptr inbounds i16, i16* %1748, i64 5
  %1765 = load i16, i16* %1764, align 2, !noalias !95
  store i16 %1765, i16* %1763, align 2, !noalias !95
  %1766 = getelementptr inbounds i16, i16* %1749, i64 6
  %1767 = getelementptr inbounds i16, i16* %1748, i64 6
  %1768 = load i16, i16* %1767, align 2, !noalias !95
  store i16 %1768, i16* %1766, align 2, !noalias !95
  %1769 = getelementptr inbounds i16, i16* %1749, i64 7
  %1770 = getelementptr inbounds i16, i16* %1748, i64 7
  %1771 = load i16, i16* %1770, align 2, !noalias !95
  store i16 %1771, i16* %1769, align 2, !noalias !95
  %1772 = add i64 %1747, -8
  %1773 = getelementptr inbounds i16, i16* %1749, i64 8
  %1774 = getelementptr inbounds i16, i16* %1748, i64 8
  %1775 = icmp eq i64 %1772, 0
  br i1 %1775, label %1776, label %1746, !llvm.loop !107

1776:                                             ; preds = %1741, %1746, %1721
  %1777 = add i64 %1622, %1606
  %1778 = load i8, i8* %1608, align 1, !noalias !95
  %1779 = icmp slt i8 %1778, 0
  br i1 %1779, label %1780, label %1782

1780:                                             ; preds = %1776
  %1781 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1777, i64* %1781, align 8, !noalias !95
  br label %1784

1782:                                             ; preds = %1776
  %1783 = trunc i64 %1777 to i8
  store i8 %1783, i8* %1608, align 1, !noalias !95
  br label %1784

1784:                                             ; preds = %1782, %1780
  %1785 = getelementptr inbounds i16, i16* %1631, i64 %1777
  store i16 0, i16* %1785, align 2, !noalias !95
  br label %1789

1786:                                             ; preds = %1620
  %1787 = add i64 %1622, %1606
  %1788 = sub i64 %1787, %1621
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* nonnull %30, i64 %1621, i64 %1788, i64 %1622, i64 %1622, i64 0, i64 %1606, i16* %1605) #8, !noalias !95
  br label %1789

1789:                                             ; preds = %1625, %1784, %1786
  %1790 = bitcast %"class.std::__1::basic_string"* %30 to i8**
  %1791 = bitcast %"class.std::__1::basic_string"* %30 to i64*
  %1792 = load i64, i64* %1791, align 8
  %1793 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1794 = bitcast i64* %1793 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1595, i8* align 8 %1794, i64 15, i1 false)
  %1795 = getelementptr inbounds i8, i8* %1596, i64 23
  %1796 = load i8, i8* %1795, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1596, i8 0, i64 24, i1 false) #8, !noalias !95
  %1797 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 19
  %1798 = bitcast %"class.std::__1::basic_string"* %1797 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1799 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1798, i64 0, i32 1, i32 1
  %1800 = load i8, i8* %1799, align 1
  %1801 = icmp slt i8 %1800, 0
  br i1 %1801, label %1802, label %1806

1802:                                             ; preds = %1789
  %1803 = bitcast %"class.std::__1::basic_string"* %1797 to i8**
  %1804 = load i8*, i8** %1803, align 8
  call void @_ZdlPv(i8* %1804) #10
  %1805 = load i8, i8* %1608, align 1
  br label %1806

1806:                                             ; preds = %1802, %1789
  %1807 = phi i8 [ %1805, %1802 ], [ 0, %1789 ]
  %1808 = bitcast %"class.std::__1::basic_string"* %1797 to i64*
  store i64 %1792, i64* %1808, align 8
  %1809 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1810 = bitcast i64* %1809 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1810, i8* nonnull align 8 %1595, i64 15, i1 false)
  %1811 = getelementptr inbounds i8, i8* %842, i64 671
  store i8 %1796, i8* %1811, align 1
  %1812 = icmp slt i8 %1807, 0
  br i1 %1812, label %1813, label %1815

1813:                                             ; preds = %1806
  %1814 = load i8*, i8** %1790, align 8
  call void @_ZdlPv(i8* %1814) #10
  br label %1815

1815:                                             ; preds = %1806, %1813
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1596) #8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %1595)
  br label %1820

1816:                                             ; preds = %1592
  %1817 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 19
  %1818 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %1817, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %13)
  %1819 = bitcast %"class.std::__1::basic_string"* %1817 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %1820

1820:                                             ; preds = %1815, %1816, %1591
  %1821 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %1798, %1815 ], [ %1819, %1816 ], [ %1574, %1591 ]
  %1822 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 19
  %1823 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1821, i64 0, i32 1, i32 1
  %1824 = load i8, i8* %1823, align 1
  %1825 = icmp slt i8 %1824, 0
  %1826 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1822, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1827 = load i16*, i16** %1826, align 8
  %1828 = bitcast %"class.std::__1::basic_string"* %1822 to i16*
  %1829 = select i1 %1825, i16* %1827, i16* %1828
  %1830 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1831 = load i64, i64* %1830, align 8
  %1832 = zext i8 %1824 to i64
  %1833 = select i1 %1825, i64 %1831, i64 %1832
  %1834 = call i32 @_ZN4base14TrimWhitespaceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS_13TrimPositionsEPNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEE(i16* %1829, i64 %1833, i32 1, %"class.std::__1::basic_string"* %1822) #8
  %1835 = bitcast %"class.std::__1::vector.146"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1835) #8
  %1836 = getelementptr inbounds %"class.std::__1::vector.146", %"class.std::__1::vector.146"* %31, i64 0, i32 0, i32 0
  %1837 = getelementptr inbounds %"class.std::__1::vector.146", %"class.std::__1::vector.146"* %31, i64 0, i32 0, i32 1
  %1838 = bitcast %"class.std::__1::vector.146"* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1838, i8 -86, i64 24, i1 false)
  %1839 = load i8, i8* %920, align 1
  %1840 = icmp slt i8 %1839, 0
  br i1 %1840, label %1844, label %1841

1841:                                             ; preds = %1820
  %1842 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  %1843 = bitcast %class.AutocompleteInput* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1842, i8* align 8 %1843, i64 24, i1 false) #8
  br label %2019

1844:                                             ; preds = %1820
  %1845 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1846 = load i16*, i16** %1845, align 8
  %1847 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1848 = load i64, i64* %1847, align 8
  %1849 = icmp ult i64 %1848, 11
  br i1 %1849, label %1850, label %1855

1850:                                             ; preds = %1844
  %1851 = bitcast %"class.std::__1::basic_string"* %32 to i16*
  %1852 = trunc i64 %1848 to i8
  %1853 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1854 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1853, i64 0, i32 1, i32 1
  store i8 %1852, i8* %1854, align 1
  br label %1872

1855:                                             ; preds = %1844
  %1856 = icmp ugt i64 %1848, 9223372036854775791
  br i1 %1856, label %1857, label %1859

1857:                                             ; preds = %1855
  %1858 = bitcast %"class.std::__1::basic_string"* %32 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %1858) #9
  unreachable

1859:                                             ; preds = %1855
  %1860 = add nuw nsw i64 %1848, 8
  %1861 = and i64 %1860, -8
  %1862 = icmp slt i64 %1861, 0
  br i1 %1862, label %1863, label %1864

1863:                                             ; preds = %1859
  call void @abort() #9
  unreachable

1864:                                             ; preds = %1859
  %1865 = shl i64 %1861, 1
  %1866 = call i8* @_Znwm(i64 %1865) #10
  %1867 = bitcast i8* %1866 to i16*
  %1868 = bitcast %"class.std::__1::basic_string"* %32 to i8**
  store i8* %1866, i8** %1868, align 8
  %1869 = or i64 %1861, -9223372036854775808
  %1870 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %1869, i64* %1870, align 8
  %1871 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1848, i64* %1871, align 8
  br label %1872

1872:                                             ; preds = %1864, %1850
  %1873 = phi i16* [ %1851, %1850 ], [ %1867, %1864 ]
  %1874 = add nuw nsw i64 %1848, 1
  %1875 = add i64 %1848, 1
  %1876 = icmp ult i64 %1875, 16
  br i1 %1876, label %1966, label %1877

1877:                                             ; preds = %1872
  %1878 = add i64 %1848, 1
  %1879 = getelementptr i16, i16* %1873, i64 %1878
  %1880 = getelementptr i16, i16* %1846, i64 %1878
  %1881 = icmp ult i16* %1873, %1880
  %1882 = icmp ult i16* %1846, %1879
  %1883 = and i1 %1881, %1882
  br i1 %1883, label %1966, label %1884

1884:                                             ; preds = %1877
  %1885 = and i64 %1875, -16
  %1886 = sub i64 %1874, %1885
  %1887 = getelementptr i16, i16* %1846, i64 %1885
  %1888 = getelementptr i16, i16* %1873, i64 %1885
  %1889 = add i64 %1885, -16
  %1890 = lshr exact i64 %1889, 4
  %1891 = add nuw nsw i64 %1890, 1
  %1892 = and i64 %1891, 3
  %1893 = icmp ult i64 %1889, 48
  br i1 %1893, label %1945, label %1894

1894:                                             ; preds = %1884
  %1895 = sub nsw i64 %1891, %1892
  br label %1896

1896:                                             ; preds = %1896, %1894
  %1897 = phi i64 [ 0, %1894 ], [ %1942, %1896 ]
  %1898 = phi i64 [ %1895, %1894 ], [ %1943, %1896 ]
  %1899 = getelementptr i16, i16* %1846, i64 %1897
  %1900 = getelementptr i16, i16* %1873, i64 %1897
  %1901 = bitcast i16* %1899 to <8 x i16>*
  %1902 = load <8 x i16>, <8 x i16>* %1901, align 2, !alias.scope !108
  %1903 = getelementptr i16, i16* %1899, i64 8
  %1904 = bitcast i16* %1903 to <8 x i16>*
  %1905 = load <8 x i16>, <8 x i16>* %1904, align 2, !alias.scope !108
  %1906 = bitcast i16* %1900 to <8 x i16>*
  store <8 x i16> %1902, <8 x i16>* %1906, align 2, !alias.scope !111, !noalias !108
  %1907 = getelementptr i16, i16* %1900, i64 8
  %1908 = bitcast i16* %1907 to <8 x i16>*
  store <8 x i16> %1905, <8 x i16>* %1908, align 2, !alias.scope !111, !noalias !108
  %1909 = or i64 %1897, 16
  %1910 = getelementptr i16, i16* %1846, i64 %1909
  %1911 = getelementptr i16, i16* %1873, i64 %1909
  %1912 = bitcast i16* %1910 to <8 x i16>*
  %1913 = load <8 x i16>, <8 x i16>* %1912, align 2, !alias.scope !108
  %1914 = getelementptr i16, i16* %1910, i64 8
  %1915 = bitcast i16* %1914 to <8 x i16>*
  %1916 = load <8 x i16>, <8 x i16>* %1915, align 2, !alias.scope !108
  %1917 = bitcast i16* %1911 to <8 x i16>*
  store <8 x i16> %1913, <8 x i16>* %1917, align 2, !alias.scope !111, !noalias !108
  %1918 = getelementptr i16, i16* %1911, i64 8
  %1919 = bitcast i16* %1918 to <8 x i16>*
  store <8 x i16> %1916, <8 x i16>* %1919, align 2, !alias.scope !111, !noalias !108
  %1920 = or i64 %1897, 32
  %1921 = getelementptr i16, i16* %1846, i64 %1920
  %1922 = getelementptr i16, i16* %1873, i64 %1920
  %1923 = bitcast i16* %1921 to <8 x i16>*
  %1924 = load <8 x i16>, <8 x i16>* %1923, align 2, !alias.scope !108
  %1925 = getelementptr i16, i16* %1921, i64 8
  %1926 = bitcast i16* %1925 to <8 x i16>*
  %1927 = load <8 x i16>, <8 x i16>* %1926, align 2, !alias.scope !108
  %1928 = bitcast i16* %1922 to <8 x i16>*
  store <8 x i16> %1924, <8 x i16>* %1928, align 2, !alias.scope !111, !noalias !108
  %1929 = getelementptr i16, i16* %1922, i64 8
  %1930 = bitcast i16* %1929 to <8 x i16>*
  store <8 x i16> %1927, <8 x i16>* %1930, align 2, !alias.scope !111, !noalias !108
  %1931 = or i64 %1897, 48
  %1932 = getelementptr i16, i16* %1846, i64 %1931
  %1933 = getelementptr i16, i16* %1873, i64 %1931
  %1934 = bitcast i16* %1932 to <8 x i16>*
  %1935 = load <8 x i16>, <8 x i16>* %1934, align 2, !alias.scope !108
  %1936 = getelementptr i16, i16* %1932, i64 8
  %1937 = bitcast i16* %1936 to <8 x i16>*
  %1938 = load <8 x i16>, <8 x i16>* %1937, align 2, !alias.scope !108
  %1939 = bitcast i16* %1933 to <8 x i16>*
  store <8 x i16> %1935, <8 x i16>* %1939, align 2, !alias.scope !111, !noalias !108
  %1940 = getelementptr i16, i16* %1933, i64 8
  %1941 = bitcast i16* %1940 to <8 x i16>*
  store <8 x i16> %1938, <8 x i16>* %1941, align 2, !alias.scope !111, !noalias !108
  %1942 = add i64 %1897, 64
  %1943 = add i64 %1898, -4
  %1944 = icmp eq i64 %1943, 0
  br i1 %1944, label %1945, label %1896, !llvm.loop !113

1945:                                             ; preds = %1896, %1884
  %1946 = phi i64 [ 0, %1884 ], [ %1942, %1896 ]
  %1947 = icmp eq i64 %1892, 0
  br i1 %1947, label %1964, label %1948

1948:                                             ; preds = %1945, %1948
  %1949 = phi i64 [ %1961, %1948 ], [ %1946, %1945 ]
  %1950 = phi i64 [ %1962, %1948 ], [ %1892, %1945 ]
  %1951 = getelementptr i16, i16* %1846, i64 %1949
  %1952 = getelementptr i16, i16* %1873, i64 %1949
  %1953 = bitcast i16* %1951 to <8 x i16>*
  %1954 = load <8 x i16>, <8 x i16>* %1953, align 2, !alias.scope !108
  %1955 = getelementptr i16, i16* %1951, i64 8
  %1956 = bitcast i16* %1955 to <8 x i16>*
  %1957 = load <8 x i16>, <8 x i16>* %1956, align 2, !alias.scope !108
  %1958 = bitcast i16* %1952 to <8 x i16>*
  store <8 x i16> %1954, <8 x i16>* %1958, align 2, !alias.scope !111, !noalias !108
  %1959 = getelementptr i16, i16* %1952, i64 8
  %1960 = bitcast i16* %1959 to <8 x i16>*
  store <8 x i16> %1957, <8 x i16>* %1960, align 2, !alias.scope !111, !noalias !108
  %1961 = add i64 %1949, 16
  %1962 = add i64 %1950, -1
  %1963 = icmp eq i64 %1962, 0
  br i1 %1963, label %1964, label %1948, !llvm.loop !114

1964:                                             ; preds = %1948, %1945
  %1965 = icmp eq i64 %1875, %1885
  br i1 %1965, label %2019, label %1966

1966:                                             ; preds = %1964, %1877, %1872
  %1967 = phi i64 [ %1874, %1877 ], [ %1874, %1872 ], [ %1886, %1964 ]
  %1968 = phi i16* [ %1846, %1877 ], [ %1846, %1872 ], [ %1887, %1964 ]
  %1969 = phi i16* [ %1873, %1877 ], [ %1873, %1872 ], [ %1888, %1964 ]
  %1970 = add i64 %1967, -1
  %1971 = and i64 %1967, 7
  %1972 = icmp eq i64 %1971, 0
  br i1 %1972, label %1984, label %1973

1973:                                             ; preds = %1966, %1973
  %1974 = phi i64 [ %1979, %1973 ], [ %1967, %1966 ]
  %1975 = phi i16* [ %1981, %1973 ], [ %1968, %1966 ]
  %1976 = phi i16* [ %1980, %1973 ], [ %1969, %1966 ]
  %1977 = phi i64 [ %1982, %1973 ], [ %1971, %1966 ]
  %1978 = load i16, i16* %1975, align 2
  store i16 %1978, i16* %1976, align 2
  %1979 = add i64 %1974, -1
  %1980 = getelementptr inbounds i16, i16* %1976, i64 1
  %1981 = getelementptr inbounds i16, i16* %1975, i64 1
  %1982 = add i64 %1977, -1
  %1983 = icmp eq i64 %1982, 0
  br i1 %1983, label %1984, label %1973, !llvm.loop !115

1984:                                             ; preds = %1973, %1966
  %1985 = phi i64 [ %1967, %1966 ], [ %1979, %1973 ]
  %1986 = phi i16* [ %1968, %1966 ], [ %1981, %1973 ]
  %1987 = phi i16* [ %1969, %1966 ], [ %1980, %1973 ]
  %1988 = icmp ult i64 %1970, 7
  br i1 %1988, label %2019, label %1989

1989:                                             ; preds = %1984, %1989
  %1990 = phi i64 [ %2015, %1989 ], [ %1985, %1984 ]
  %1991 = phi i16* [ %2017, %1989 ], [ %1986, %1984 ]
  %1992 = phi i16* [ %2016, %1989 ], [ %1987, %1984 ]
  %1993 = load i16, i16* %1991, align 2
  store i16 %1993, i16* %1992, align 2
  %1994 = getelementptr inbounds i16, i16* %1992, i64 1
  %1995 = getelementptr inbounds i16, i16* %1991, i64 1
  %1996 = load i16, i16* %1995, align 2
  store i16 %1996, i16* %1994, align 2
  %1997 = getelementptr inbounds i16, i16* %1992, i64 2
  %1998 = getelementptr inbounds i16, i16* %1991, i64 2
  %1999 = load i16, i16* %1998, align 2
  store i16 %1999, i16* %1997, align 2
  %2000 = getelementptr inbounds i16, i16* %1992, i64 3
  %2001 = getelementptr inbounds i16, i16* %1991, i64 3
  %2002 = load i16, i16* %2001, align 2
  store i16 %2002, i16* %2000, align 2
  %2003 = getelementptr inbounds i16, i16* %1992, i64 4
  %2004 = getelementptr inbounds i16, i16* %1991, i64 4
  %2005 = load i16, i16* %2004, align 2
  store i16 %2005, i16* %2003, align 2
  %2006 = getelementptr inbounds i16, i16* %1992, i64 5
  %2007 = getelementptr inbounds i16, i16* %1991, i64 5
  %2008 = load i16, i16* %2007, align 2
  store i16 %2008, i16* %2006, align 2
  %2009 = getelementptr inbounds i16, i16* %1992, i64 6
  %2010 = getelementptr inbounds i16, i16* %1991, i64 6
  %2011 = load i16, i16* %2010, align 2
  store i16 %2011, i16* %2009, align 2
  %2012 = getelementptr inbounds i16, i16* %1992, i64 7
  %2013 = getelementptr inbounds i16, i16* %1991, i64 7
  %2014 = load i16, i16* %2013, align 2
  store i16 %2014, i16* %2012, align 2
  %2015 = add i64 %1990, -8
  %2016 = getelementptr inbounds i16, i16* %1992, i64 8
  %2017 = getelementptr inbounds i16, i16* %1991, i64 8
  %2018 = icmp eq i64 %2015, 0
  br i1 %2018, label %2019, label %1989, !llvm.loop !116

2019:                                             ; preds = %1984, %1989, %1964, %1841
  %2020 = load i8, i8* %1823, align 1
  %2021 = icmp slt i8 %2020, 0
  br i1 %2021, label %2025, label %2022

2022:                                             ; preds = %2019
  %2023 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  %2024 = bitcast %"class.std::__1::basic_string"* %1822 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2023, i8* align 8 %2024, i64 24, i1 false) #8
  br label %2198

2025:                                             ; preds = %2019
  %2026 = load i16*, i16** %1826, align 8
  %2027 = load i64, i64* %1830, align 8
  %2028 = icmp ult i64 %2027, 11
  br i1 %2028, label %2029, label %2034

2029:                                             ; preds = %2025
  %2030 = bitcast %"class.std::__1::basic_string"* %33 to i16*
  %2031 = trunc i64 %2027 to i8
  %2032 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2033 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2032, i64 0, i32 1, i32 1
  store i8 %2031, i8* %2033, align 1
  br label %2051

2034:                                             ; preds = %2025
  %2035 = icmp ugt i64 %2027, 9223372036854775791
  br i1 %2035, label %2036, label %2038

2036:                                             ; preds = %2034
  %2037 = bitcast %"class.std::__1::basic_string"* %33 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %2037) #9
  unreachable

2038:                                             ; preds = %2034
  %2039 = add nuw nsw i64 %2027, 8
  %2040 = and i64 %2039, -8
  %2041 = icmp slt i64 %2040, 0
  br i1 %2041, label %2042, label %2043

2042:                                             ; preds = %2038
  call void @abort() #9
  unreachable

2043:                                             ; preds = %2038
  %2044 = shl i64 %2040, 1
  %2045 = call i8* @_Znwm(i64 %2044) #10
  %2046 = bitcast i8* %2045 to i16*
  %2047 = bitcast %"class.std::__1::basic_string"* %33 to i8**
  store i8* %2045, i8** %2047, align 8
  %2048 = or i64 %2040, -9223372036854775808
  %2049 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %2048, i64* %2049, align 8
  %2050 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %2027, i64* %2050, align 8
  br label %2051

2051:                                             ; preds = %2043, %2029
  %2052 = phi i16* [ %2030, %2029 ], [ %2046, %2043 ]
  %2053 = add nuw nsw i64 %2027, 1
  %2054 = add i64 %2027, 1
  %2055 = icmp ult i64 %2054, 16
  br i1 %2055, label %2145, label %2056

2056:                                             ; preds = %2051
  %2057 = add i64 %2027, 1
  %2058 = getelementptr i16, i16* %2052, i64 %2057
  %2059 = getelementptr i16, i16* %2026, i64 %2057
  %2060 = icmp ult i16* %2052, %2059
  %2061 = icmp ult i16* %2026, %2058
  %2062 = and i1 %2060, %2061
  br i1 %2062, label %2145, label %2063

2063:                                             ; preds = %2056
  %2064 = and i64 %2054, -16
  %2065 = sub i64 %2053, %2064
  %2066 = getelementptr i16, i16* %2026, i64 %2064
  %2067 = getelementptr i16, i16* %2052, i64 %2064
  %2068 = add i64 %2064, -16
  %2069 = lshr exact i64 %2068, 4
  %2070 = add nuw nsw i64 %2069, 1
  %2071 = and i64 %2070, 3
  %2072 = icmp ult i64 %2068, 48
  br i1 %2072, label %2124, label %2073

2073:                                             ; preds = %2063
  %2074 = sub nsw i64 %2070, %2071
  br label %2075

2075:                                             ; preds = %2075, %2073
  %2076 = phi i64 [ 0, %2073 ], [ %2121, %2075 ]
  %2077 = phi i64 [ %2074, %2073 ], [ %2122, %2075 ]
  %2078 = getelementptr i16, i16* %2026, i64 %2076
  %2079 = getelementptr i16, i16* %2052, i64 %2076
  %2080 = bitcast i16* %2078 to <8 x i16>*
  %2081 = load <8 x i16>, <8 x i16>* %2080, align 2, !alias.scope !117
  %2082 = getelementptr i16, i16* %2078, i64 8
  %2083 = bitcast i16* %2082 to <8 x i16>*
  %2084 = load <8 x i16>, <8 x i16>* %2083, align 2, !alias.scope !117
  %2085 = bitcast i16* %2079 to <8 x i16>*
  store <8 x i16> %2081, <8 x i16>* %2085, align 2, !alias.scope !120, !noalias !117
  %2086 = getelementptr i16, i16* %2079, i64 8
  %2087 = bitcast i16* %2086 to <8 x i16>*
  store <8 x i16> %2084, <8 x i16>* %2087, align 2, !alias.scope !120, !noalias !117
  %2088 = or i64 %2076, 16
  %2089 = getelementptr i16, i16* %2026, i64 %2088
  %2090 = getelementptr i16, i16* %2052, i64 %2088
  %2091 = bitcast i16* %2089 to <8 x i16>*
  %2092 = load <8 x i16>, <8 x i16>* %2091, align 2, !alias.scope !117
  %2093 = getelementptr i16, i16* %2089, i64 8
  %2094 = bitcast i16* %2093 to <8 x i16>*
  %2095 = load <8 x i16>, <8 x i16>* %2094, align 2, !alias.scope !117
  %2096 = bitcast i16* %2090 to <8 x i16>*
  store <8 x i16> %2092, <8 x i16>* %2096, align 2, !alias.scope !120, !noalias !117
  %2097 = getelementptr i16, i16* %2090, i64 8
  %2098 = bitcast i16* %2097 to <8 x i16>*
  store <8 x i16> %2095, <8 x i16>* %2098, align 2, !alias.scope !120, !noalias !117
  %2099 = or i64 %2076, 32
  %2100 = getelementptr i16, i16* %2026, i64 %2099
  %2101 = getelementptr i16, i16* %2052, i64 %2099
  %2102 = bitcast i16* %2100 to <8 x i16>*
  %2103 = load <8 x i16>, <8 x i16>* %2102, align 2, !alias.scope !117
  %2104 = getelementptr i16, i16* %2100, i64 8
  %2105 = bitcast i16* %2104 to <8 x i16>*
  %2106 = load <8 x i16>, <8 x i16>* %2105, align 2, !alias.scope !117
  %2107 = bitcast i16* %2101 to <8 x i16>*
  store <8 x i16> %2103, <8 x i16>* %2107, align 2, !alias.scope !120, !noalias !117
  %2108 = getelementptr i16, i16* %2101, i64 8
  %2109 = bitcast i16* %2108 to <8 x i16>*
  store <8 x i16> %2106, <8 x i16>* %2109, align 2, !alias.scope !120, !noalias !117
  %2110 = or i64 %2076, 48
  %2111 = getelementptr i16, i16* %2026, i64 %2110
  %2112 = getelementptr i16, i16* %2052, i64 %2110
  %2113 = bitcast i16* %2111 to <8 x i16>*
  %2114 = load <8 x i16>, <8 x i16>* %2113, align 2, !alias.scope !117
  %2115 = getelementptr i16, i16* %2111, i64 8
  %2116 = bitcast i16* %2115 to <8 x i16>*
  %2117 = load <8 x i16>, <8 x i16>* %2116, align 2, !alias.scope !117
  %2118 = bitcast i16* %2112 to <8 x i16>*
  store <8 x i16> %2114, <8 x i16>* %2118, align 2, !alias.scope !120, !noalias !117
  %2119 = getelementptr i16, i16* %2112, i64 8
  %2120 = bitcast i16* %2119 to <8 x i16>*
  store <8 x i16> %2117, <8 x i16>* %2120, align 2, !alias.scope !120, !noalias !117
  %2121 = add i64 %2076, 64
  %2122 = add i64 %2077, -4
  %2123 = icmp eq i64 %2122, 0
  br i1 %2123, label %2124, label %2075, !llvm.loop !122

2124:                                             ; preds = %2075, %2063
  %2125 = phi i64 [ 0, %2063 ], [ %2121, %2075 ]
  %2126 = icmp eq i64 %2071, 0
  br i1 %2126, label %2143, label %2127

2127:                                             ; preds = %2124, %2127
  %2128 = phi i64 [ %2140, %2127 ], [ %2125, %2124 ]
  %2129 = phi i64 [ %2141, %2127 ], [ %2071, %2124 ]
  %2130 = getelementptr i16, i16* %2026, i64 %2128
  %2131 = getelementptr i16, i16* %2052, i64 %2128
  %2132 = bitcast i16* %2130 to <8 x i16>*
  %2133 = load <8 x i16>, <8 x i16>* %2132, align 2, !alias.scope !117
  %2134 = getelementptr i16, i16* %2130, i64 8
  %2135 = bitcast i16* %2134 to <8 x i16>*
  %2136 = load <8 x i16>, <8 x i16>* %2135, align 2, !alias.scope !117
  %2137 = bitcast i16* %2131 to <8 x i16>*
  store <8 x i16> %2133, <8 x i16>* %2137, align 2, !alias.scope !120, !noalias !117
  %2138 = getelementptr i16, i16* %2131, i64 8
  %2139 = bitcast i16* %2138 to <8 x i16>*
  store <8 x i16> %2136, <8 x i16>* %2139, align 2, !alias.scope !120, !noalias !117
  %2140 = add i64 %2128, 16
  %2141 = add i64 %2129, -1
  %2142 = icmp eq i64 %2141, 0
  br i1 %2142, label %2143, label %2127, !llvm.loop !123

2143:                                             ; preds = %2127, %2124
  %2144 = icmp eq i64 %2054, %2064
  br i1 %2144, label %2198, label %2145

2145:                                             ; preds = %2143, %2056, %2051
  %2146 = phi i64 [ %2053, %2056 ], [ %2053, %2051 ], [ %2065, %2143 ]
  %2147 = phi i16* [ %2026, %2056 ], [ %2026, %2051 ], [ %2066, %2143 ]
  %2148 = phi i16* [ %2052, %2056 ], [ %2052, %2051 ], [ %2067, %2143 ]
  %2149 = add i64 %2146, -1
  %2150 = and i64 %2146, 7
  %2151 = icmp eq i64 %2150, 0
  br i1 %2151, label %2163, label %2152

2152:                                             ; preds = %2145, %2152
  %2153 = phi i64 [ %2158, %2152 ], [ %2146, %2145 ]
  %2154 = phi i16* [ %2160, %2152 ], [ %2147, %2145 ]
  %2155 = phi i16* [ %2159, %2152 ], [ %2148, %2145 ]
  %2156 = phi i64 [ %2161, %2152 ], [ %2150, %2145 ]
  %2157 = load i16, i16* %2154, align 2
  store i16 %2157, i16* %2155, align 2
  %2158 = add i64 %2153, -1
  %2159 = getelementptr inbounds i16, i16* %2155, i64 1
  %2160 = getelementptr inbounds i16, i16* %2154, i64 1
  %2161 = add i64 %2156, -1
  %2162 = icmp eq i64 %2161, 0
  br i1 %2162, label %2163, label %2152, !llvm.loop !124

2163:                                             ; preds = %2152, %2145
  %2164 = phi i64 [ %2146, %2145 ], [ %2158, %2152 ]
  %2165 = phi i16* [ %2147, %2145 ], [ %2160, %2152 ]
  %2166 = phi i16* [ %2148, %2145 ], [ %2159, %2152 ]
  %2167 = icmp ult i64 %2149, 7
  br i1 %2167, label %2198, label %2168

2168:                                             ; preds = %2163, %2168
  %2169 = phi i64 [ %2194, %2168 ], [ %2164, %2163 ]
  %2170 = phi i16* [ %2196, %2168 ], [ %2165, %2163 ]
  %2171 = phi i16* [ %2195, %2168 ], [ %2166, %2163 ]
  %2172 = load i16, i16* %2170, align 2
  store i16 %2172, i16* %2171, align 2
  %2173 = getelementptr inbounds i16, i16* %2171, i64 1
  %2174 = getelementptr inbounds i16, i16* %2170, i64 1
  %2175 = load i16, i16* %2174, align 2
  store i16 %2175, i16* %2173, align 2
  %2176 = getelementptr inbounds i16, i16* %2171, i64 2
  %2177 = getelementptr inbounds i16, i16* %2170, i64 2
  %2178 = load i16, i16* %2177, align 2
  store i16 %2178, i16* %2176, align 2
  %2179 = getelementptr inbounds i16, i16* %2171, i64 3
  %2180 = getelementptr inbounds i16, i16* %2170, i64 3
  %2181 = load i16, i16* %2180, align 2
  store i16 %2181, i16* %2179, align 2
  %2182 = getelementptr inbounds i16, i16* %2171, i64 4
  %2183 = getelementptr inbounds i16, i16* %2170, i64 4
  %2184 = load i16, i16* %2183, align 2
  store i16 %2184, i16* %2182, align 2
  %2185 = getelementptr inbounds i16, i16* %2171, i64 5
  %2186 = getelementptr inbounds i16, i16* %2170, i64 5
  %2187 = load i16, i16* %2186, align 2
  store i16 %2187, i16* %2185, align 2
  %2188 = getelementptr inbounds i16, i16* %2171, i64 6
  %2189 = getelementptr inbounds i16, i16* %2170, i64 6
  %2190 = load i16, i16* %2189, align 2
  store i16 %2190, i16* %2188, align 2
  %2191 = getelementptr inbounds i16, i16* %2171, i64 7
  %2192 = getelementptr inbounds i16, i16* %2170, i64 7
  %2193 = load i16, i16* %2192, align 2
  store i16 %2193, i16* %2191, align 2
  %2194 = add i64 %2169, -8
  %2195 = getelementptr inbounds i16, i16* %2171, i64 8
  %2196 = getelementptr inbounds i16, i16* %2170, i64 8
  %2197 = icmp eq i64 %2194, 0
  br i1 %2197, label %2198, label %2168, !llvm.loop !125

2198:                                             ; preds = %2163, %2168, %2143, %2022
  call void @_Z15FindTermMatchesNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES5_bb(%"class.std::__1::vector.146"* nonnull sret %31, %"class.std::__1::basic_string"* nonnull %32, %"class.std::__1::basic_string"* nonnull %33, i1 zeroext true, i1 zeroext false) #8
  %2199 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2200 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2199, i64 0, i32 1, i32 1
  %2201 = load i8, i8* %2200, align 1
  %2202 = icmp slt i8 %2201, 0
  br i1 %2202, label %2203, label %2206

2203:                                             ; preds = %2198
  %2204 = bitcast %"class.std::__1::basic_string"* %33 to i8**
  %2205 = load i8*, i8** %2204, align 8
  call void @_ZdlPv(i8* %2205) #10
  br label %2206

2206:                                             ; preds = %2198, %2203
  %2207 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2208 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2207, i64 0, i32 1, i32 1
  %2209 = load i8, i8* %2208, align 1
  %2210 = icmp slt i8 %2209, 0
  br i1 %2210, label %2211, label %2214

2211:                                             ; preds = %2206
  %2212 = bitcast %"class.std::__1::basic_string"* %32 to i8**
  %2213 = load i8*, i8** %2212, align 8
  call void @_ZdlPv(i8* %2213) #10
  br label %2214

2214:                                             ; preds = %2206, %2211
  %2215 = bitcast %"class.std::__1::vector.33"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2215) #8
  %2216 = bitcast %"class.std::__1::vector.146"* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2216, i8 0, i64 24, i1 false) #8
  %2217 = bitcast %struct.TermMatch** %1837 to i64*
  %2218 = load i64, i64* %2217, align 8
  %2219 = bitcast %"class.std::__1::vector.146"* %31 to i64*
  %2220 = load i64, i64* %2219, align 8
  %2221 = sub i64 %2218, %2220
  %2222 = sdiv exact i64 %2221, 24
  %2223 = icmp eq i64 %2221, 0
  br i1 %2223, label %2246, label %2224

2224:                                             ; preds = %2214
  %2225 = icmp ugt i64 %2222, 768614336404564650
  br i1 %2225, label %2226, label %2228

2226:                                             ; preds = %2224
  %2227 = bitcast %"class.std::__1::vector.146"* %35 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %2227) #9
  unreachable

2228:                                             ; preds = %2224
  %2229 = call i8* @_Znwm(i64 %2221) #10
  %2230 = bitcast i8* %2229 to %struct.TermMatch*
  %2231 = getelementptr inbounds %"class.std::__1::vector.146", %"class.std::__1::vector.146"* %35, i64 0, i32 0, i32 1
  %2232 = bitcast %struct.TermMatch** %2231 to i8**
  store i8* %2229, i8** %2232, align 8
  %2233 = bitcast %"class.std::__1::vector.146"* %35 to i8**
  store i8* %2229, i8** %2233, align 8
  %2234 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %2230, i64 %2222
  %2235 = getelementptr inbounds %"class.std::__1::vector.146", %"class.std::__1::vector.146"* %35, i64 0, i32 0, i32 2, i32 0, i32 0
  store %struct.TermMatch* %2234, %struct.TermMatch** %2235, align 8
  %2236 = bitcast %struct.TermMatch** %2231 to i64*
  %2237 = ptrtoint i8* %2229 to i64
  %2238 = icmp sgt i64 %2221, 0
  br i1 %2238, label %2239, label %2244

2239:                                             ; preds = %2228
  %2240 = udiv exact i64 %2221, 24
  %2241 = inttoptr i64 %2220 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2229, i8* align 8 %2241, i64 %2221, i1 false) #8
  %2242 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %2230, i64 %2240
  %2243 = ptrtoint %struct.TermMatch* %2242 to i64
  br label %2244

2244:                                             ; preds = %2239, %2228
  %2245 = phi i64 [ %2243, %2239 ], [ %2237, %2228 ]
  store i64 %2245, i64* %2236, align 8
  br label %2246

2246:                                             ; preds = %2214, %2244
  %2247 = load i8, i8* %1823, align 1
  %2248 = icmp slt i8 %2247, 0
  %2249 = load i64, i64* %1830, align 8
  %2250 = zext i8 %2247 to i64
  %2251 = select i1 %2248, i64 %2249, i64 %2250
  call void @_Z19ClassifyTermMatchesNSt3__16vectorI9TermMatchNS_9allocatorIS1_EEEEmii(%"class.std::__1::vector.33"* nonnull sret %34, %"class.std::__1::vector.146"* nonnull %35, i64 %2251, i32 2, i32 0) #8
  %2252 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 20
  %2253 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %2252, i64 0, i32 0, i32 0
  %2254 = load %"struct.AutocompleteMatch::ACMatchClassification"*, %"struct.AutocompleteMatch::ACMatchClassification"** %2253, align 8
  %2255 = icmp eq %"struct.AutocompleteMatch::ACMatchClassification"* %2254, null
  br i1 %2255, label %2262, label %2256

2256:                                             ; preds = %2246
  %2257 = ptrtoint %"struct.AutocompleteMatch::ACMatchClassification"* %2254 to i64
  %2258 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 20, i32 0, i32 1
  %2259 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"** %2258 to i64*
  store i64 %2257, i64* %2259, align 8
  %2260 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"* %2254 to i8*
  call void @_ZdlPv(i8* %2260) #10
  %2261 = bitcast %"class.std::__1::vector.33"* %2252 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2261, i8 0, i64 24, i1 false) #8
  br label %2262

2262:                                             ; preds = %2246, %2256
  %2263 = bitcast %"class.std::__1::vector.33"* %34 to <2 x i64>*
  %2264 = load <2 x i64>, <2 x i64>* %2263, align 16
  %2265 = bitcast %"class.std::__1::vector.33"* %2252 to <2 x i64>*
  store <2 x i64> %2264, <2 x i64>* %2265, align 8
  %2266 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %34, i64 0, i32 0, i32 2, i32 0, i32 0
  %2267 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"** %2266 to i64*
  %2268 = load i64, i64* %2267, align 16
  %2269 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 20, i32 0, i32 2, i32 0, i32 0
  %2270 = bitcast %"struct.AutocompleteMatch::ACMatchClassification"** %2269 to i64*
  store i64 %2268, i64* %2270, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %2215, i8 0, i64 24, i1 false) #8
  %2271 = getelementptr inbounds %"class.std::__1::vector.146", %"class.std::__1::vector.146"* %35, i64 0, i32 0, i32 0
  %2272 = load %struct.TermMatch*, %struct.TermMatch** %2271, align 8
  %2273 = icmp eq %struct.TermMatch* %2272, null
  br i1 %2273, label %2279, label %2274

2274:                                             ; preds = %2262
  %2275 = bitcast %struct.TermMatch* %2272 to i8*
  %2276 = ptrtoint %struct.TermMatch* %2272 to i64
  %2277 = getelementptr inbounds %"class.std::__1::vector.146", %"class.std::__1::vector.146"* %35, i64 0, i32 0, i32 1
  %2278 = bitcast %struct.TermMatch** %2277 to i64*
  store i64 %2276, i64* %2278, align 8
  call void @_ZdlPv(i8* %2275) #10
  br label %2279

2279:                                             ; preds = %2262, %2274
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2215) #8
  %2280 = bitcast i64* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2280) #8
  store i64 -6148914691236517206, i64* %36, align 8
  %2281 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2281) #8
  %2282 = call dereferenceable(24) %"class.std::__1::basic_string.21"* @_ZNK4GURL4specEv(%class.GURL* %237) #8
  %2283 = bitcast %"class.std::__1::basic_string.21"* %2282 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %2284 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2283, i64 0, i32 1, i32 0
  %2285 = load i8, i8* %2284, align 1
  %2286 = icmp slt i8 %2285, 0
  %2287 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %2282, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2288 = load i8*, i8** %2287, align 8
  %2289 = bitcast %"class.std::__1::basic_string.21"* %2282 to i8*
  %2290 = select i1 %2286, i8* %2288, i8* %2289
  %2291 = getelementptr inbounds %"class.std::__1::basic_string.21", %"class.std::__1::basic_string.21"* %2282, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %2292 = load i64, i64* %2291, align 8
  %2293 = zext i8 %2285 to i64
  %2294 = select i1 %2286, i64 %2292, i64 %2293
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %37, i8* %2290, i64 %2294) #8
  %2295 = call i64 @_ZN9URLPrefix27GetInlineAutocompleteOffsetERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_bS8_(%"class.std::__1::basic_string"* dereferenceable(24) %918, %"class.std::__1::basic_string"* dereferenceable(24) %7, i1 zeroext false, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %37) #8
  %2296 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2297 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2296, i64 0, i32 1, i32 1
  %2298 = load i8, i8* %2297, align 1
  %2299 = icmp slt i8 %2298, 0
  br i1 %2299, label %2300, label %2303

2300:                                             ; preds = %2279
  %2301 = bitcast %"class.std::__1::basic_string"* %37 to i8**
  %2302 = load i8*, i8** %2301, align 8
  call void @_ZdlPv(i8* %2302) #10
  br label %2303

2303:                                             ; preds = %2279, %2300
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2281) #8
  store i64 %2295, i64* %36, align 8
  %2304 = load i32, i32* @_ZN13url_formatter22kFormatUrlOmitDefaultsE, align 4
  %2305 = load i8, i8* %19, align 1, !range !63
  %2306 = icmp eq i8 %2305, 0
  br i1 %2306, label %2311, label %2307

2307:                                             ; preds = %2303
  %2308 = load i32, i32* @_ZN13url_formatter18kFormatUrlOmitHTTPE, align 4
  %2309 = xor i32 %2308, -1
  %2310 = and i32 %2304, %2309
  br label %2311

2311:                                             ; preds = %2303, %2307
  %2312 = phi i32 [ %2310, %2307 ], [ %2304, %2303 ]
  %2313 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2313) #8
  %2314 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2314) #8
  call void @_ZN13url_formatter9FormatUrlERK4GURLjjPN3url6ParsedEPmS6_(%"class.std::__1::basic_string"* nonnull sret %39, %class.GURL* dereferenceable(120) %237, i32 %2312, i32 2, %"struct.url::Parsed"* null, i64* null, i64* nonnull %36) #8
  call void @_ZN17AutocompleteInput36FormattedStringWithEquivalentMeaningERK4GURLRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEERK28AutocompleteSchemeClassifierPm(%"class.std::__1::basic_string"* nonnull sret %38, %class.GURL* dereferenceable(120) %237, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %39, %class.AutocompleteSchemeClassifier* %5, i64* nonnull %36) #8
  %2315 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 4
  %2316 = bitcast %"class.std::__1::basic_string"* %2315 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2317 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2316, i64 0, i32 1, i32 1
  %2318 = load i8, i8* %2317, align 1
  %2319 = icmp slt i8 %2318, 0
  br i1 %2319, label %2320, label %2323

2320:                                             ; preds = %2311
  %2321 = bitcast %"class.std::__1::basic_string"* %2315 to i8**
  %2322 = load i8*, i8** %2321, align 8
  call void @_ZdlPv(i8* %2322) #10
  br label %2323

2323:                                             ; preds = %2320, %2311
  %2324 = bitcast %"class.std::__1::basic_string"* %2315 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2324, i8* nonnull align 8 %2313, i64 24, i1 false) #8
  %2325 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2326 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2325, i64 0, i32 1, i32 1
  store i8 0, i8* %2326, align 1
  %2327 = bitcast %"class.std::__1::basic_string"* %38 to i16*
  store i16 0, i16* %2327, align 8
  %2328 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2329 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2328, i64 0, i32 1, i32 1
  %2330 = load i8, i8* %2329, align 1
  %2331 = icmp slt i8 %2330, 0
  br i1 %2331, label %2332, label %2335

2332:                                             ; preds = %2323
  %2333 = bitcast %"class.std::__1::basic_string"* %39 to i8**
  %2334 = load i8*, i8** %2333, align 8
  call void @_ZdlPv(i8* %2334) #10
  br label %2335

2335:                                             ; preds = %2323, %2332
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2314) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2313) #8
  %2336 = call zeroext i1 @_ZN17AutocompleteMatch21TryRichAutocompletionERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_RK17AutocompleteInputb(%struct.AutocompleteMatch* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1103, %"class.std::__1::basic_string"* dereferenceable(24) %1822, %class.AutocompleteInput* dereferenceable(512) %6, i1 zeroext false) #8
  %2337 = xor i1 %2336, true
  %2338 = load i64, i64* %36, align 8
  %2339 = icmp ne i64 %2338, -1
  %2340 = and i1 %2339, %2337
  br i1 %2340, label %2341, label %2354

2341:                                             ; preds = %2335
  %2342 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2342) #8
  %2343 = bitcast %"class.std::__1::basic_string"* %2315 to %"class.std::__1::allocator.12"*
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %40, %"class.std::__1::basic_string"* dereferenceable(24) %2315, i64 %2338, i64 -1, %"class.std::__1::allocator.12"* dereferenceable(1) %2343) #8
  %2344 = getelementptr inbounds %struct.AutocompleteMatch, %struct.AutocompleteMatch* %0, i64 0, i32 6
  %2345 = bitcast %"class.std::__1::basic_string"* %2344 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2346 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2345, i64 0, i32 1, i32 1
  %2347 = load i8, i8* %2346, align 1
  %2348 = icmp slt i8 %2347, 0
  br i1 %2348, label %2349, label %2352

2349:                                             ; preds = %2341
  %2350 = bitcast %"class.std::__1::basic_string"* %2344 to i8**
  %2351 = load i8*, i8** %2350, align 8
  call void @_ZdlPv(i8* %2351) #10
  br label %2352

2352:                                             ; preds = %2349, %2341
  %2353 = bitcast %"class.std::__1::basic_string"* %2344 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2353, i8* nonnull align 8 %2342, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2342) #8
  call void @_ZN17AutocompleteMatch21SetAllowedToBeDefaultERK17AutocompleteInput(%struct.AutocompleteMatch* %0, %class.AutocompleteInput* dereferenceable(512) %6) #8
  br label %2354

2354:                                             ; preds = %2335, %2352
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2280) #8
  %2355 = load %struct.TermMatch*, %struct.TermMatch** %1836, align 8
  %2356 = icmp eq %struct.TermMatch* %2355, null
  br i1 %2356, label %2360, label %2357

2357:                                             ; preds = %2354
  %2358 = ptrtoint %struct.TermMatch* %2355 to i64
  store i64 %2358, i64* %2217, align 8
  %2359 = bitcast %struct.TermMatch* %2355 to i8*
  call void @_ZdlPv(i8* %2359) #10
  br label %2360

2360:                                             ; preds = %2354, %2357
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1835) #8
  %2361 = load %struct.TermMatch*, %struct.TermMatch** %916, align 8
  %2362 = icmp eq %struct.TermMatch* %2361, null
  br i1 %2362, label %2366, label %2363

2363:                                             ; preds = %2360
  %2364 = ptrtoint %struct.TermMatch* %2361 to i64
  store i64 %2364, i64* %1305, align 8
  %2365 = bitcast %struct.TermMatch* %2361 to i8*
  call void @_ZdlPv(i8* %2365) #10
  br label %2366

2366:                                             ; preds = %2360, %2363
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %915) #8
  %2367 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2368 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2367, i64 0, i32 1, i32 1
  %2369 = load i8, i8* %2368, align 1
  %2370 = icmp slt i8 %2369, 0
  br i1 %2370, label %2371, label %2374

2371:                                             ; preds = %2366
  %2372 = bitcast %"class.std::__1::basic_string"* %21 to i8**
  %2373 = load i8*, i8** %2372, align 8
  call void @_ZdlPv(i8* %2373) #10
  br label %2374

2374:                                             ; preds = %2366, %2371
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %888) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %20) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %19) #8
  %2375 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2376 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2375, i64 0, i32 1, i32 1
  %2377 = load i8, i8* %2376, align 1
  %2378 = icmp slt i8 %2377, 0
  br i1 %2378, label %2379, label %2382

2379:                                             ; preds = %2374
  %2380 = bitcast %"class.std::__1::basic_string"* %14 to i8**
  %2381 = load i8*, i8** %2380, align 8
  call void @_ZdlPv(i8* %2381) #10
  br label %2382

2382:                                             ; preds = %2374, %2379
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %238) #8
  %2383 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %2384 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %2383, i64 0, i32 1, i32 1
  %2385 = load i8, i8* %2384, align 1
  %2386 = icmp slt i8 %2385, 0
  br i1 %2386, label %2387, label %2390

2387:                                             ; preds = %2382
  %2388 = bitcast %"class.std::__1::basic_string"* %13 to i8**
  %2389 = load i8*, i8** %2388, align 8
  call void @_ZdlPv(i8* %2389) #10
  br label %2390

2390:                                             ; preds = %2382, %2387
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN17AutocompleteMatchC1EP20AutocompleteProvideribN21AutocompleteMatchType4TypeE(%struct.AutocompleteMatch*, %class.AutocompleteProvider*, i32, i1 zeroext, i32) unnamed_addr #2

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #2

declare void @_ZN17AutocompleteMatch20RecordAdditionalInfoERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKNS1_IDsNS2_IDsEENS4_IDsEEEE(%struct.AutocompleteMatch*, %"class.std::__1::basic_string.21"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN17AutocompleteMatch20RecordAdditionalInfoERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_(%struct.AutocompleteMatch*, %"class.std::__1::basic_string.21"* dereferenceable(24), %"class.std::__1::basic_string.21"* dereferenceable(24)) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string.21"* @_ZNK4GURL4specEv(%class.GURL*) local_unnamed_addr #2

declare void @_ZN17AutocompleteMatch18GetMatchComponentsERK4GURLRKNSt3__16vectorINS3_4pairImmEENS3_9allocatorIS6_EEEEPbSC_(%class.GURL* dereferenceable(120), %"class.std::__1::vector"* dereferenceable(24), i8*, i8*) local_unnamed_addr #2

declare i32 @_ZN17AutocompleteMatch14GetFormatTypesEbb(i1 zeroext, i1 zeroext) local_unnamed_addr #2

declare void @_ZN13url_formatter9FormatUrlERK4GURLjjPN3url6ParsedEPmS6_(%"class.std::__1::basic_string"* sret, %class.GURL* dereferenceable(120), i32, i32, %"struct.url::Parsed"*, i64*, i64*) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base12FeatureParamIbLb0EE3GetEv(%"struct.base::FeatureParam"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string"*
  %35 = icmp ugt %"class.std::__1::basic_string"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !126
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !126
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !129, !noalias !126
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !129, !noalias !126
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !126
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !126
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !129, !noalias !126
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !129, !noalias !126
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !126
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !126
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !129, !noalias !126
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !129, !noalias !126
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !126
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !126
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !129, !noalias !126
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !129, !noalias !126
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !131

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !126
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !126
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !129, !noalias !126
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !129, !noalias !126
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !132

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !133

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !134

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #9
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #9
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #10
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !135
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !135
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !138, !noalias !135
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !138, !noalias !135
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !135
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !135
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !138, !noalias !135
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !138, !noalias !135
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !135
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !135
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !138, !noalias !135
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !138, !noalias !135
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !135
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !135
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !138, !noalias !135
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !138, !noalias !135
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !140

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !135
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !135
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !138, !noalias !135
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !138, !noalias !135
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !141

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !142

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !143

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !144
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !144
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !147, !noalias !144
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !147, !noalias !144
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !144
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !144
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !147, !noalias !144
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !147, !noalias !144
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !144
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !144
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !147, !noalias !144
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !147, !noalias !144
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !144
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !144
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !147, !noalias !144
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !147, !noalias !144
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !149

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !144
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !144
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !147, !noalias !144
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !147, !noalias !144
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !150

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !151

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !152

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #8
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string"* %0
}

declare void @_Z15FindTermMatchesNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES5_bb(%"class.std::__1::vector.146"* sret, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i1 zeroext, i1 zeroext) local_unnamed_addr #2

declare void @_Z19ClassifyTermMatchesNSt3__16vectorI9TermMatchNS_9allocatorIS1_EEEEmii(%"class.std::__1::vector.33"* sret, %"class.std::__1::vector.146"*, i64, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24), i16*) local_unnamed_addr #3 comdat {
  %4 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #8
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = load i16, i16* %2, align 2
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %3, %18
  %19 = phi i64 [ %21, %18 ], [ 0, %3 ]
  %20 = phi i16* [ %22, %18 ], [ %2, %3 ]
  %21 = add i64 %19, 1
  %22 = getelementptr inbounds i16, i16* %20, i64 1
  %23 = load i16, i16* %22, align 2
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %18

25:                                               ; preds = %18, %3
  %26 = phi i64 [ 0, %3 ], [ %21, %18 ]
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i16*, i16** %27, align 8
  %29 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %30 = select i1 %11, i16* %28, i16* %29
  %31 = add i64 %26, %15
  %32 = icmp ugt i64 %31, 9223372036854775791
  br i1 %32, label %33, label %35

33:                                               ; preds = %25
  %34 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %34) #9
  unreachable

35:                                               ; preds = %25
  %36 = icmp ult i64 %31, 11
  br i1 %36, label %37, label %42

37:                                               ; preds = %35
  %38 = trunc i64 %15 to i8
  %39 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %39, i64 0, i32 1, i32 1
  store i8 %38, i8* %40, align 1
  %41 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %53

42:                                               ; preds = %35
  %43 = add nuw nsw i64 %31, 8
  %44 = and i64 %43, -8
  %45 = icmp slt i64 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %42
  tail call void @abort() #9
  unreachable

47:                                               ; preds = %42
  %48 = shl i64 %44, 1
  %49 = tail call i8* @_Znwm(i64 %48) #10
  %50 = bitcast i8* %49 to i16*
  %51 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %49, i8** %51, align 8
  %52 = or i64 %44, -9223372036854775808
  store i64 %52, i64* %6, align 8
  store i64 %15, i64* %5, align 8
  br label %53

53:                                               ; preds = %47, %37
  %54 = phi i16* [ %41, %37 ], [ %50, %47 ]
  %55 = icmp eq i64 %15, 0
  br i1 %55, label %199, label %56

56:                                               ; preds = %53
  %57 = icmp ult i64 %15, 16
  br i1 %57, label %146, label %58

58:                                               ; preds = %56
  %59 = getelementptr i16, i16* %54, i64 %15
  %60 = getelementptr i16, i16* %30, i64 %15
  %61 = icmp ult i16* %54, %60
  %62 = icmp ult i16* %30, %59
  %63 = and i1 %61, %62
  br i1 %63, label %146, label %64

64:                                               ; preds = %58
  %65 = and i64 %15, -16
  %66 = sub i64 %15, %65
  %67 = getelementptr i16, i16* %30, i64 %65
  %68 = getelementptr i16, i16* %54, i64 %65
  %69 = add i64 %65, -16
  %70 = lshr exact i64 %69, 4
  %71 = add nuw nsw i64 %70, 1
  %72 = and i64 %71, 3
  %73 = icmp ult i64 %69, 48
  br i1 %73, label %125, label %74

74:                                               ; preds = %64
  %75 = sub nsw i64 %71, %72
  br label %76

76:                                               ; preds = %76, %74
  %77 = phi i64 [ 0, %74 ], [ %122, %76 ]
  %78 = phi i64 [ %75, %74 ], [ %123, %76 ]
  %79 = getelementptr i16, i16* %30, i64 %77
  %80 = getelementptr i16, i16* %54, i64 %77
  %81 = bitcast i16* %79 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !153
  %83 = getelementptr i16, i16* %79, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !153
  %86 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %86, align 2, !alias.scope !156, !noalias !153
  %87 = getelementptr i16, i16* %80, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !156, !noalias !153
  %89 = or i64 %77, 16
  %90 = getelementptr i16, i16* %30, i64 %89
  %91 = getelementptr i16, i16* %54, i64 %89
  %92 = bitcast i16* %90 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !153
  %94 = getelementptr i16, i16* %90, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !153
  %97 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !156, !noalias !153
  %98 = getelementptr i16, i16* %91, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !156, !noalias !153
  %100 = or i64 %77, 32
  %101 = getelementptr i16, i16* %30, i64 %100
  %102 = getelementptr i16, i16* %54, i64 %100
  %103 = bitcast i16* %101 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !153
  %105 = getelementptr i16, i16* %101, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !153
  %108 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !156, !noalias !153
  %109 = getelementptr i16, i16* %102, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !156, !noalias !153
  %111 = or i64 %77, 48
  %112 = getelementptr i16, i16* %30, i64 %111
  %113 = getelementptr i16, i16* %54, i64 %111
  %114 = bitcast i16* %112 to <8 x i16>*
  %115 = load <8 x i16>, <8 x i16>* %114, align 2, !alias.scope !153
  %116 = getelementptr i16, i16* %112, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  %118 = load <8 x i16>, <8 x i16>* %117, align 2, !alias.scope !153
  %119 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %119, align 2, !alias.scope !156, !noalias !153
  %120 = getelementptr i16, i16* %113, i64 8
  %121 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> %118, <8 x i16>* %121, align 2, !alias.scope !156, !noalias !153
  %122 = add i64 %77, 64
  %123 = add i64 %78, -4
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %125, label %76, !llvm.loop !158

125:                                              ; preds = %76, %64
  %126 = phi i64 [ 0, %64 ], [ %122, %76 ]
  %127 = icmp eq i64 %72, 0
  br i1 %127, label %144, label %128

128:                                              ; preds = %125, %128
  %129 = phi i64 [ %141, %128 ], [ %126, %125 ]
  %130 = phi i64 [ %142, %128 ], [ %72, %125 ]
  %131 = getelementptr i16, i16* %30, i64 %129
  %132 = getelementptr i16, i16* %54, i64 %129
  %133 = bitcast i16* %131 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !153
  %135 = getelementptr i16, i16* %131, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  %137 = load <8 x i16>, <8 x i16>* %136, align 2, !alias.scope !153
  %138 = bitcast i16* %132 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %138, align 2, !alias.scope !156, !noalias !153
  %139 = getelementptr i16, i16* %132, i64 8
  %140 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %137, <8 x i16>* %140, align 2, !alias.scope !156, !noalias !153
  %141 = add i64 %129, 16
  %142 = add i64 %130, -1
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %128, !llvm.loop !159

144:                                              ; preds = %128, %125
  %145 = icmp eq i64 %15, %65
  br i1 %145, label %199, label %146

146:                                              ; preds = %144, %58, %56
  %147 = phi i64 [ %15, %58 ], [ %15, %56 ], [ %66, %144 ]
  %148 = phi i16* [ %30, %58 ], [ %30, %56 ], [ %67, %144 ]
  %149 = phi i16* [ %54, %58 ], [ %54, %56 ], [ %68, %144 ]
  %150 = add i64 %147, -1
  %151 = and i64 %147, 7
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %164, label %153

153:                                              ; preds = %146, %153
  %154 = phi i64 [ %159, %153 ], [ %147, %146 ]
  %155 = phi i16* [ %161, %153 ], [ %148, %146 ]
  %156 = phi i16* [ %160, %153 ], [ %149, %146 ]
  %157 = phi i64 [ %162, %153 ], [ %151, %146 ]
  %158 = load i16, i16* %155, align 2
  store i16 %158, i16* %156, align 2
  %159 = add i64 %154, -1
  %160 = getelementptr inbounds i16, i16* %156, i64 1
  %161 = getelementptr inbounds i16, i16* %155, i64 1
  %162 = add i64 %157, -1
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %164, label %153, !llvm.loop !160

164:                                              ; preds = %153, %146
  %165 = phi i64 [ %147, %146 ], [ %159, %153 ]
  %166 = phi i16* [ %148, %146 ], [ %161, %153 ]
  %167 = phi i16* [ %149, %146 ], [ %160, %153 ]
  %168 = icmp ult i64 %150, 7
  br i1 %168, label %199, label %169

169:                                              ; preds = %164, %169
  %170 = phi i64 [ %195, %169 ], [ %165, %164 ]
  %171 = phi i16* [ %197, %169 ], [ %166, %164 ]
  %172 = phi i16* [ %196, %169 ], [ %167, %164 ]
  %173 = load i16, i16* %171, align 2
  store i16 %173, i16* %172, align 2
  %174 = getelementptr inbounds i16, i16* %172, i64 1
  %175 = getelementptr inbounds i16, i16* %171, i64 1
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %172, i64 2
  %178 = getelementptr inbounds i16, i16* %171, i64 2
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %172, i64 3
  %181 = getelementptr inbounds i16, i16* %171, i64 3
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %172, i64 4
  %184 = getelementptr inbounds i16, i16* %171, i64 4
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %172, i64 5
  %187 = getelementptr inbounds i16, i16* %171, i64 5
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = getelementptr inbounds i16, i16* %172, i64 6
  %190 = getelementptr inbounds i16, i16* %171, i64 6
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = getelementptr inbounds i16, i16* %172, i64 7
  %193 = getelementptr inbounds i16, i16* %171, i64 7
  %194 = load i16, i16* %193, align 2
  store i16 %194, i16* %192, align 2
  %195 = add i64 %170, -8
  %196 = getelementptr inbounds i16, i16* %172, i64 8
  %197 = getelementptr inbounds i16, i16* %171, i64 8
  %198 = icmp eq i64 %195, 0
  br i1 %198, label %199, label %169, !llvm.loop !161

199:                                              ; preds = %164, %169, %144, %53
  %200 = getelementptr inbounds i16, i16* %54, i64 %15
  store i16 0, i16* %200, align 2
  %201 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %202 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %201, i64 0, i32 1, i32 1
  %203 = load i8, i8* %202, align 1
  %204 = icmp slt i8 %203, 0
  br i1 %204, label %205, label %210

205:                                              ; preds = %199
  %206 = load i64, i64* %6, align 8
  %207 = and i64 %206, 9223372036854775807
  %208 = add nsw i64 %207, -1
  %209 = load i64, i64* %5, align 8
  br label %212

210:                                              ; preds = %199
  %211 = zext i8 %203 to i64
  br label %212

212:                                              ; preds = %210, %205
  %213 = phi i64 [ %208, %205 ], [ 10, %210 ]
  %214 = phi i64 [ %209, %205 ], [ %211, %210 ]
  %215 = sub i64 %213, %214
  %216 = icmp ult i64 %215, %26
  br i1 %216, label %376, label %217

217:                                              ; preds = %212
  %218 = icmp eq i64 %26, 0
  br i1 %218, label %379, label %219

219:                                              ; preds = %217
  %220 = load i16*, i16** %4, align 8
  %221 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %222 = select i1 %204, i16* %220, i16* %221
  %223 = getelementptr inbounds i16, i16* %222, i64 %214
  %224 = icmp ult i64 %26, 16
  br i1 %224, label %314, label %225

225:                                              ; preds = %219
  %226 = add i64 %214, %26
  %227 = getelementptr i16, i16* %222, i64 %226
  %228 = getelementptr i16, i16* %2, i64 %26
  %229 = icmp ult i16* %223, %228
  %230 = icmp ugt i16* %227, %2
  %231 = and i1 %229, %230
  br i1 %231, label %314, label %232

232:                                              ; preds = %225
  %233 = and i64 %26, -16
  %234 = sub i64 %26, %233
  %235 = getelementptr i16, i16* %2, i64 %233
  %236 = getelementptr i16, i16* %223, i64 %233
  %237 = add i64 %233, -16
  %238 = lshr exact i64 %237, 4
  %239 = add nuw nsw i64 %238, 1
  %240 = and i64 %239, 3
  %241 = icmp ult i64 %237, 48
  br i1 %241, label %293, label %242

242:                                              ; preds = %232
  %243 = sub nsw i64 %239, %240
  br label %244

244:                                              ; preds = %244, %242
  %245 = phi i64 [ 0, %242 ], [ %290, %244 ]
  %246 = phi i64 [ %243, %242 ], [ %291, %244 ]
  %247 = getelementptr i16, i16* %2, i64 %245
  %248 = getelementptr i16, i16* %223, i64 %245
  %249 = bitcast i16* %247 to <8 x i16>*
  %250 = load <8 x i16>, <8 x i16>* %249, align 2, !alias.scope !162
  %251 = getelementptr i16, i16* %247, i64 8
  %252 = bitcast i16* %251 to <8 x i16>*
  %253 = load <8 x i16>, <8 x i16>* %252, align 2, !alias.scope !162
  %254 = bitcast i16* %248 to <8 x i16>*
  store <8 x i16> %250, <8 x i16>* %254, align 2, !alias.scope !165, !noalias !162
  %255 = getelementptr i16, i16* %248, i64 8
  %256 = bitcast i16* %255 to <8 x i16>*
  store <8 x i16> %253, <8 x i16>* %256, align 2, !alias.scope !165, !noalias !162
  %257 = or i64 %245, 16
  %258 = getelementptr i16, i16* %2, i64 %257
  %259 = getelementptr i16, i16* %223, i64 %257
  %260 = bitcast i16* %258 to <8 x i16>*
  %261 = load <8 x i16>, <8 x i16>* %260, align 2, !alias.scope !162
  %262 = getelementptr i16, i16* %258, i64 8
  %263 = bitcast i16* %262 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2, !alias.scope !162
  %265 = bitcast i16* %259 to <8 x i16>*
  store <8 x i16> %261, <8 x i16>* %265, align 2, !alias.scope !165, !noalias !162
  %266 = getelementptr i16, i16* %259, i64 8
  %267 = bitcast i16* %266 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %267, align 2, !alias.scope !165, !noalias !162
  %268 = or i64 %245, 32
  %269 = getelementptr i16, i16* %2, i64 %268
  %270 = getelementptr i16, i16* %223, i64 %268
  %271 = bitcast i16* %269 to <8 x i16>*
  %272 = load <8 x i16>, <8 x i16>* %271, align 2, !alias.scope !162
  %273 = getelementptr i16, i16* %269, i64 8
  %274 = bitcast i16* %273 to <8 x i16>*
  %275 = load <8 x i16>, <8 x i16>* %274, align 2, !alias.scope !162
  %276 = bitcast i16* %270 to <8 x i16>*
  store <8 x i16> %272, <8 x i16>* %276, align 2, !alias.scope !165, !noalias !162
  %277 = getelementptr i16, i16* %270, i64 8
  %278 = bitcast i16* %277 to <8 x i16>*
  store <8 x i16> %275, <8 x i16>* %278, align 2, !alias.scope !165, !noalias !162
  %279 = or i64 %245, 48
  %280 = getelementptr i16, i16* %2, i64 %279
  %281 = getelementptr i16, i16* %223, i64 %279
  %282 = bitcast i16* %280 to <8 x i16>*
  %283 = load <8 x i16>, <8 x i16>* %282, align 2, !alias.scope !162
  %284 = getelementptr i16, i16* %280, i64 8
  %285 = bitcast i16* %284 to <8 x i16>*
  %286 = load <8 x i16>, <8 x i16>* %285, align 2, !alias.scope !162
  %287 = bitcast i16* %281 to <8 x i16>*
  store <8 x i16> %283, <8 x i16>* %287, align 2, !alias.scope !165, !noalias !162
  %288 = getelementptr i16, i16* %281, i64 8
  %289 = bitcast i16* %288 to <8 x i16>*
  store <8 x i16> %286, <8 x i16>* %289, align 2, !alias.scope !165, !noalias !162
  %290 = add i64 %245, 64
  %291 = add i64 %246, -4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %293, label %244, !llvm.loop !167

293:                                              ; preds = %244, %232
  %294 = phi i64 [ 0, %232 ], [ %290, %244 ]
  %295 = icmp eq i64 %240, 0
  br i1 %295, label %312, label %296

296:                                              ; preds = %293, %296
  %297 = phi i64 [ %309, %296 ], [ %294, %293 ]
  %298 = phi i64 [ %310, %296 ], [ %240, %293 ]
  %299 = getelementptr i16, i16* %2, i64 %297
  %300 = getelementptr i16, i16* %223, i64 %297
  %301 = bitcast i16* %299 to <8 x i16>*
  %302 = load <8 x i16>, <8 x i16>* %301, align 2, !alias.scope !162
  %303 = getelementptr i16, i16* %299, i64 8
  %304 = bitcast i16* %303 to <8 x i16>*
  %305 = load <8 x i16>, <8 x i16>* %304, align 2, !alias.scope !162
  %306 = bitcast i16* %300 to <8 x i16>*
  store <8 x i16> %302, <8 x i16>* %306, align 2, !alias.scope !165, !noalias !162
  %307 = getelementptr i16, i16* %300, i64 8
  %308 = bitcast i16* %307 to <8 x i16>*
  store <8 x i16> %305, <8 x i16>* %308, align 2, !alias.scope !165, !noalias !162
  %309 = add i64 %297, 16
  %310 = add i64 %298, -1
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %296, !llvm.loop !168

312:                                              ; preds = %296, %293
  %313 = icmp eq i64 %26, %233
  br i1 %313, label %367, label %314

314:                                              ; preds = %312, %225, %219
  %315 = phi i64 [ %26, %225 ], [ %26, %219 ], [ %234, %312 ]
  %316 = phi i16* [ %2, %225 ], [ %2, %219 ], [ %235, %312 ]
  %317 = phi i16* [ %223, %225 ], [ %223, %219 ], [ %236, %312 ]
  %318 = add i64 %315, -1
  %319 = and i64 %315, 7
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %332, label %321

321:                                              ; preds = %314, %321
  %322 = phi i64 [ %327, %321 ], [ %315, %314 ]
  %323 = phi i16* [ %329, %321 ], [ %316, %314 ]
  %324 = phi i16* [ %328, %321 ], [ %317, %314 ]
  %325 = phi i64 [ %330, %321 ], [ %319, %314 ]
  %326 = load i16, i16* %323, align 2
  store i16 %326, i16* %324, align 2
  %327 = add i64 %322, -1
  %328 = getelementptr inbounds i16, i16* %324, i64 1
  %329 = getelementptr inbounds i16, i16* %323, i64 1
  %330 = add i64 %325, -1
  %331 = icmp eq i64 %330, 0
  br i1 %331, label %332, label %321, !llvm.loop !169

332:                                              ; preds = %321, %314
  %333 = phi i64 [ %315, %314 ], [ %327, %321 ]
  %334 = phi i16* [ %316, %314 ], [ %329, %321 ]
  %335 = phi i16* [ %317, %314 ], [ %328, %321 ]
  %336 = icmp ult i64 %318, 7
  br i1 %336, label %367, label %337

337:                                              ; preds = %332, %337
  %338 = phi i64 [ %363, %337 ], [ %333, %332 ]
  %339 = phi i16* [ %365, %337 ], [ %334, %332 ]
  %340 = phi i16* [ %364, %337 ], [ %335, %332 ]
  %341 = load i16, i16* %339, align 2
  store i16 %341, i16* %340, align 2
  %342 = getelementptr inbounds i16, i16* %340, i64 1
  %343 = getelementptr inbounds i16, i16* %339, i64 1
  %344 = load i16, i16* %343, align 2
  store i16 %344, i16* %342, align 2
  %345 = getelementptr inbounds i16, i16* %340, i64 2
  %346 = getelementptr inbounds i16, i16* %339, i64 2
  %347 = load i16, i16* %346, align 2
  store i16 %347, i16* %345, align 2
  %348 = getelementptr inbounds i16, i16* %340, i64 3
  %349 = getelementptr inbounds i16, i16* %339, i64 3
  %350 = load i16, i16* %349, align 2
  store i16 %350, i16* %348, align 2
  %351 = getelementptr inbounds i16, i16* %340, i64 4
  %352 = getelementptr inbounds i16, i16* %339, i64 4
  %353 = load i16, i16* %352, align 2
  store i16 %353, i16* %351, align 2
  %354 = getelementptr inbounds i16, i16* %340, i64 5
  %355 = getelementptr inbounds i16, i16* %339, i64 5
  %356 = load i16, i16* %355, align 2
  store i16 %356, i16* %354, align 2
  %357 = getelementptr inbounds i16, i16* %340, i64 6
  %358 = getelementptr inbounds i16, i16* %339, i64 6
  %359 = load i16, i16* %358, align 2
  store i16 %359, i16* %357, align 2
  %360 = getelementptr inbounds i16, i16* %340, i64 7
  %361 = getelementptr inbounds i16, i16* %339, i64 7
  %362 = load i16, i16* %361, align 2
  store i16 %362, i16* %360, align 2
  %363 = add i64 %338, -8
  %364 = getelementptr inbounds i16, i16* %340, i64 8
  %365 = getelementptr inbounds i16, i16* %339, i64 8
  %366 = icmp eq i64 %363, 0
  br i1 %366, label %367, label %337, !llvm.loop !170

367:                                              ; preds = %332, %337, %312
  %368 = add i64 %214, %26
  %369 = load i8, i8* %202, align 1
  %370 = icmp slt i8 %369, 0
  br i1 %370, label %371, label %372

371:                                              ; preds = %367
  store i64 %368, i64* %5, align 8
  br label %374

372:                                              ; preds = %367
  %373 = trunc i64 %368 to i8
  store i8 %373, i8* %202, align 1
  br label %374

374:                                              ; preds = %372, %371
  %375 = getelementptr inbounds i16, i16* %222, i64 %368
  store i16 0, i16* %375, align 2
  br label %379

376:                                              ; preds = %212
  %377 = add i64 %214, %26
  %378 = sub i64 %377, %213
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %213, i64 %378, i64 %214, i64 %214, i64 0, i64 %26, i16* %2) #8
  br label %379

379:                                              ; preds = %217, %374, %376
  ret void
}

declare i32 @_ZN4base14TrimWhitespaceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS_13TrimPositionsEPNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEE(i16*, i64, i32, %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare i64 @_ZN9URLPrefix27GetInlineAutocompleteOffsetERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_bS8_(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #2

declare void @_ZN17AutocompleteInput36FormattedStringWithEquivalentMeaningERK4GURLRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEERK28AutocompleteSchemeClassifierPm(%"class.std::__1::basic_string"* sret, %class.GURL* dereferenceable(120), %"class.std::__1::basic_string"* dereferenceable(24), %class.AutocompleteSchemeClassifier*, i64*) local_unnamed_addr #2

declare zeroext i1 @_ZN17AutocompleteMatch21TryRichAutocompletionERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_RK17AutocompleteInputb(%struct.AutocompleteMatch*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %class.AutocompleteInput* dereferenceable(512), i1 zeroext) local_unnamed_addr #2

declare void @_ZN17AutocompleteMatch21SetAllowedToBeDefaultERK17AutocompleteInput(%struct.AutocompleteMatch*, %class.AutocompleteInput* dereferenceable(512)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #9
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #9
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #10
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !171
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !171
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !174, !noalias !171
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !174, !noalias !171
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !171
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !171
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !174, !noalias !171
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !174, !noalias !171
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !171
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !171
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !174, !noalias !171
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !174, !noalias !171
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !171
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !171
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !174, !noalias !171
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !174, !noalias !171
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !176

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !171
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !171
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !174, !noalias !171
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !174, !noalias !171
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !177

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !178

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !179

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !180

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !181

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !182

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !184
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !184
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !187, !noalias !184
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !187, !noalias !184
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !184
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !184
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !187, !noalias !184
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !187, !noalias !184
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !184
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !184
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !187, !noalias !184
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !187, !noalias !184
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !184
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !184
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !187, !noalias !184
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !187, !noalias !184
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !189

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !184
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !184
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !187, !noalias !184
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !187, !noalias !184
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !190

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !191

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !192

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #10
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator.12"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = zext i8 %8 to i64
  %13 = select i1 %9, i64 %11, i64 %12
  %14 = icmp ult i64 %13, %2
  br i1 %14, label %15, label %17

15:                                               ; preds = %5
  %16 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %16) #9
  unreachable

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %21 = select i1 %9, i16* %19, i16* %20
  %22 = getelementptr inbounds i16, i16* %21, i64 %2
  %23 = sub i64 %13, %2
  %24 = icmp ult i64 %23, %3
  %25 = select i1 %24, i64 %23, i64 %3
  %26 = icmp ugt i64 %25, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %17
  %28 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #9
  unreachable

29:                                               ; preds = %17
  %30 = icmp ult i64 %25, 11
  br i1 %30, label %44, label %31

31:                                               ; preds = %29
  %32 = add nuw nsw i64 %25, 8
  %33 = and i64 %32, -8
  %34 = icmp slt i64 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  tail call void @abort() #9
  unreachable

36:                                               ; preds = %31
  %37 = shl i64 %33, 1
  %38 = tail call i8* @_Znwm(i64 %37) #10
  %39 = bitcast i8* %38 to i16*
  %40 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %38, i8** %40, align 8
  %41 = or i64 %33, -9223372036854775808
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %25, i64* %43, align 8
  br label %50

44:                                               ; preds = %29
  %45 = trunc i64 %25 to i8
  %46 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %46, i64 0, i32 1, i32 1
  store i8 %45, i8* %47, align 1
  %48 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %49 = icmp eq i64 %25, 0
  br i1 %49, label %195, label %50

50:                                               ; preds = %44, %36
  %51 = phi i16* [ %39, %36 ], [ %48, %44 ]
  %52 = icmp ult i64 %25, 16
  br i1 %52, label %142, label %53

53:                                               ; preds = %50
  %54 = getelementptr i16, i16* %51, i64 %25
  %55 = add i64 %25, %2
  %56 = getelementptr i16, i16* %21, i64 %55
  %57 = icmp ult i16* %51, %56
  %58 = icmp ult i16* %22, %54
  %59 = and i1 %57, %58
  br i1 %59, label %142, label %60

60:                                               ; preds = %53
  %61 = and i64 %25, -16
  %62 = sub i64 %25, %61
  %63 = getelementptr i16, i16* %22, i64 %61
  %64 = getelementptr i16, i16* %51, i64 %61
  %65 = add i64 %61, -16
  %66 = lshr exact i64 %65, 4
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp ult i64 %65, 48
  br i1 %69, label %121, label %70

70:                                               ; preds = %60
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %118, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %119, %72 ]
  %75 = getelementptr i16, i16* %22, i64 %73
  %76 = getelementptr i16, i16* %51, i64 %73
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !193
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !193
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !196, !noalias !193
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !196, !noalias !193
  %85 = or i64 %73, 16
  %86 = getelementptr i16, i16* %22, i64 %85
  %87 = getelementptr i16, i16* %51, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !193
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !193
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !196, !noalias !193
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !196, !noalias !193
  %96 = or i64 %73, 32
  %97 = getelementptr i16, i16* %22, i64 %96
  %98 = getelementptr i16, i16* %51, i64 %96
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !193
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !193
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !196, !noalias !193
  %105 = getelementptr i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !196, !noalias !193
  %107 = or i64 %73, 48
  %108 = getelementptr i16, i16* %22, i64 %107
  %109 = getelementptr i16, i16* %51, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !193
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !193
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !196, !noalias !193
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !196, !noalias !193
  %118 = add i64 %73, 64
  %119 = add i64 %74, -4
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %72, !llvm.loop !198

121:                                              ; preds = %72, %60
  %122 = phi i64 [ 0, %60 ], [ %118, %72 ]
  %123 = icmp eq i64 %68, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %137, %124 ], [ %122, %121 ]
  %126 = phi i64 [ %138, %124 ], [ %68, %121 ]
  %127 = getelementptr i16, i16* %22, i64 %125
  %128 = getelementptr i16, i16* %51, i64 %125
  %129 = bitcast i16* %127 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !193
  %131 = getelementptr i16, i16* %127, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !193
  %134 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !196, !noalias !193
  %135 = getelementptr i16, i16* %128, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !196, !noalias !193
  %137 = add i64 %125, 16
  %138 = add i64 %126, -1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %124, !llvm.loop !199

140:                                              ; preds = %124, %121
  %141 = icmp eq i64 %25, %61
  br i1 %141, label %195, label %142

142:                                              ; preds = %140, %53, %50
  %143 = phi i64 [ %25, %53 ], [ %25, %50 ], [ %62, %140 ]
  %144 = phi i16* [ %22, %53 ], [ %22, %50 ], [ %63, %140 ]
  %145 = phi i16* [ %51, %53 ], [ %51, %50 ], [ %64, %140 ]
  %146 = add i64 %143, -1
  %147 = and i64 %143, 7
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %160, label %149

149:                                              ; preds = %142, %149
  %150 = phi i64 [ %155, %149 ], [ %143, %142 ]
  %151 = phi i16* [ %157, %149 ], [ %144, %142 ]
  %152 = phi i16* [ %156, %149 ], [ %145, %142 ]
  %153 = phi i64 [ %158, %149 ], [ %147, %142 ]
  %154 = load i16, i16* %151, align 2
  store i16 %154, i16* %152, align 2
  %155 = add i64 %150, -1
  %156 = getelementptr inbounds i16, i16* %152, i64 1
  %157 = getelementptr inbounds i16, i16* %151, i64 1
  %158 = add i64 %153, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %149, !llvm.loop !200

160:                                              ; preds = %149, %142
  %161 = phi i64 [ %143, %142 ], [ %155, %149 ]
  %162 = phi i16* [ %144, %142 ], [ %157, %149 ]
  %163 = phi i16* [ %145, %142 ], [ %156, %149 ]
  %164 = icmp ult i64 %146, 7
  br i1 %164, label %195, label %165

165:                                              ; preds = %160, %165
  %166 = phi i64 [ %191, %165 ], [ %161, %160 ]
  %167 = phi i16* [ %193, %165 ], [ %162, %160 ]
  %168 = phi i16* [ %192, %165 ], [ %163, %160 ]
  %169 = load i16, i16* %167, align 2
  store i16 %169, i16* %168, align 2
  %170 = getelementptr inbounds i16, i16* %168, i64 1
  %171 = getelementptr inbounds i16, i16* %167, i64 1
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %168, i64 2
  %174 = getelementptr inbounds i16, i16* %167, i64 2
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %168, i64 3
  %177 = getelementptr inbounds i16, i16* %167, i64 3
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %168, i64 4
  %180 = getelementptr inbounds i16, i16* %167, i64 4
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %168, i64 5
  %183 = getelementptr inbounds i16, i16* %167, i64 5
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %168, i64 6
  %186 = getelementptr inbounds i16, i16* %167, i64 6
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %168, i64 7
  %189 = getelementptr inbounds i16, i16* %167, i64 7
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = add i64 %166, -8
  %192 = getelementptr inbounds i16, i16* %168, i64 8
  %193 = getelementptr inbounds i16, i16* %167, i64 8
  %194 = icmp eq i64 %191, 0
  br i1 %194, label %195, label %165, !llvm.loop !201

195:                                              ; preds = %160, %165, %140, %44
  %196 = phi i16* [ %48, %44 ], [ %51, %140 ], [ %51, %165 ], [ %51, %160 ]
  %197 = getelementptr inbounds i16, i16* %196, i64 %25
  store i16 0, i16* %197, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN12_GLOBAL__N_121ConcatAncestorsTitlesENSt3__16vectorIN4base16BasicStringPieceIDsNS0_11char_traitsIDsEEEENS0_9allocatorIS6_EEEE: argument 0"}
!15 = distinct !{!15, !"_ZN12_GLOBAL__N_121ConcatAncestorsTitlesENSt3__16vectorIN4base16BasicStringPieceIDsNS0_11char_traitsIDsEEEENS0_9allocatorIS6_EEEE"}
!16 = !{!17, !14}
!17 = distinct !{!17, !18, !"_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEcvNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEEEv: argument 0"}
!18 = distinct !{!18, !"_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEcvNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEEEv"}
!19 = !{!17}
!20 = !{!21}
!21 = distinct !{!21, !22}
!22 = distinct !{!22, !"LVerDomain"}
!23 = !{!24}
!24 = distinct !{!24, !22}
!25 = !{!14, !21}
!26 = distinct !{!26, !8}
!27 = distinct !{!27, !10}
!28 = distinct !{!28, !10}
!29 = distinct !{!29, !8}
!30 = !{!31, !33, !14}
!31 = distinct !{!31, !32, !"_ZZN12_GLOBAL__N_121ConcatAncestorsTitlesENSt3__16vectorIN4base16BasicStringPieceIDsNS0_11char_traitsIDsEEEENS0_9allocatorIS6_EEEEENK3$_0clERNS0_12basic_stringIDsS5_NS7_IDsEEEERS6_: argument 0"}
!32 = distinct !{!32, !"_ZZN12_GLOBAL__N_121ConcatAncestorsTitlesENSt3__16vectorIN4base16BasicStringPieceIDsNS0_11char_traitsIDsEEEENS0_9allocatorIS6_EEEEENK3$_0clERNS0_12basic_stringIDsS5_NS7_IDsEEEERS6_"}
!33 = distinct !{!33, !34, !"_ZNSt3__110accumulateINS_16reverse_iteratorINS_11__wrap_iterIPN4base16BasicStringPieceIDsNS_11char_traitsIDsEEEEEEEENS_12basic_stringIDsS6_NS_9allocatorIDsEEEEZN12_GLOBAL__N_121ConcatAncestorsTitlesENS_6vectorIS7_NSC_IS7_EEEEE3$_0EET0_T_SL_SK_T1_: argument 0"}
!34 = distinct !{!34, !"_ZNSt3__110accumulateINS_16reverse_iteratorINS_11__wrap_iterIPN4base16BasicStringPieceIDsNS_11char_traitsIDsEEEEEEEENS_12basic_stringIDsS6_NS_9allocatorIDsEEEEZN12_GLOBAL__N_121ConcatAncestorsTitlesENS_6vectorIS7_NSC_IS7_EEEEE3$_0EET0_T_SL_SK_T1_"}
!35 = !{!36, !31, !33, !14}
!36 = distinct !{!36, !37, !"_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEcvNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEEEv: argument 0"}
!37 = distinct !{!37, !"_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEcvNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEEEv"}
!38 = !{!36}
!39 = !{!40}
!40 = distinct !{!40, !41}
!41 = distinct !{!41, !"LVerDomain"}
!42 = !{!43}
!43 = distinct !{!43, !41}
!44 = !{!31, !33, !14, !40}
!45 = distinct !{!45, !8}
!46 = distinct !{!46, !10}
!47 = distinct !{!47, !10}
!48 = distinct !{!48, !8}
!49 = !{!50, !31, !33, !14}
!50 = distinct !{!50, !51, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!51 = distinct !{!51, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!52 = !{!53}
!53 = distinct !{!53, !54}
!54 = distinct !{!54, !"LVerDomain"}
!55 = !{!56}
!56 = distinct !{!56, !54}
!57 = !{!50, !31, !33, !14, !53}
!58 = distinct !{!58, !8}
!59 = distinct !{!59, !10}
!60 = distinct !{!60, !10}
!61 = distinct !{!61, !8}
!62 = !{!33, !14}
!63 = !{i8 0, i8 2}
!64 = !{!65}
!65 = distinct !{!65, !66}
!66 = distinct !{!66, !"LVerDomain"}
!67 = !{!68}
!68 = distinct !{!68, !66}
!69 = distinct !{!69, !8}
!70 = distinct !{!70, !10}
!71 = distinct !{!71, !10}
!72 = distinct !{!72, !8}
!73 = !{!74}
!74 = distinct !{!74, !75}
!75 = distinct !{!75, !"LVerDomain"}
!76 = !{!77}
!77 = distinct !{!77, !75}
!78 = distinct !{!78, !8}
!79 = distinct !{!79, !10}
!80 = distinct !{!80, !10}
!81 = distinct !{!81, !8}
!82 = !{!83}
!83 = distinct !{!83, !84, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!84 = distinct !{!84, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!85 = !{!86}
!86 = distinct !{!86, !87}
!87 = distinct !{!87, !"LVerDomain"}
!88 = !{!89}
!89 = distinct !{!89, !87}
!90 = !{!83, !86}
!91 = distinct !{!91, !8}
!92 = distinct !{!92, !10}
!93 = distinct !{!93, !10}
!94 = distinct !{!94, !8}
!95 = !{!96}
!96 = distinct !{!96, !97, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!97 = distinct !{!97, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!98 = !{!99}
!99 = distinct !{!99, !100}
!100 = distinct !{!100, !"LVerDomain"}
!101 = !{!102}
!102 = distinct !{!102, !100}
!103 = !{!96, !99}
!104 = distinct !{!104, !8}
!105 = distinct !{!105, !10}
!106 = distinct !{!106, !10}
!107 = distinct !{!107, !8}
!108 = !{!109}
!109 = distinct !{!109, !110}
!110 = distinct !{!110, !"LVerDomain"}
!111 = !{!112}
!112 = distinct !{!112, !110}
!113 = distinct !{!113, !8}
!114 = distinct !{!114, !10}
!115 = distinct !{!115, !10}
!116 = distinct !{!116, !8}
!117 = !{!118}
!118 = distinct !{!118, !119}
!119 = distinct !{!119, !"LVerDomain"}
!120 = !{!121}
!121 = distinct !{!121, !119}
!122 = distinct !{!122, !8}
!123 = distinct !{!123, !10}
!124 = distinct !{!124, !10}
!125 = distinct !{!125, !8}
!126 = !{!127}
!127 = distinct !{!127, !128}
!128 = distinct !{!128, !"LVerDomain"}
!129 = !{!130}
!130 = distinct !{!130, !128}
!131 = distinct !{!131, !8}
!132 = distinct !{!132, !10}
!133 = distinct !{!133, !10}
!134 = distinct !{!134, !8}
!135 = !{!136}
!136 = distinct !{!136, !137}
!137 = distinct !{!137, !"LVerDomain"}
!138 = !{!139}
!139 = distinct !{!139, !137}
!140 = distinct !{!140, !8}
!141 = distinct !{!141, !10}
!142 = distinct !{!142, !10}
!143 = distinct !{!143, !8}
!144 = !{!145}
!145 = distinct !{!145, !146}
!146 = distinct !{!146, !"LVerDomain"}
!147 = !{!148}
!148 = distinct !{!148, !146}
!149 = distinct !{!149, !8}
!150 = distinct !{!150, !10}
!151 = distinct !{!151, !10}
!152 = distinct !{!152, !8}
!153 = !{!154}
!154 = distinct !{!154, !155}
!155 = distinct !{!155, !"LVerDomain"}
!156 = !{!157}
!157 = distinct !{!157, !155}
!158 = distinct !{!158, !8}
!159 = distinct !{!159, !10}
!160 = distinct !{!160, !10}
!161 = distinct !{!161, !8}
!162 = !{!163}
!163 = distinct !{!163, !164}
!164 = distinct !{!164, !"LVerDomain"}
!165 = !{!166}
!166 = distinct !{!166, !164}
!167 = distinct !{!167, !8}
!168 = distinct !{!168, !10}
!169 = distinct !{!169, !10}
!170 = distinct !{!170, !8}
!171 = !{!172}
!172 = distinct !{!172, !173}
!173 = distinct !{!173, !"LVerDomain"}
!174 = !{!175}
!175 = distinct !{!175, !173}
!176 = distinct !{!176, !8}
!177 = distinct !{!177, !10}
!178 = distinct !{!178, !10}
!179 = distinct !{!179, !8}
!180 = distinct !{!180, !8}
!181 = distinct !{!181, !10}
!182 = distinct !{!182, !183, !8}
!183 = !{!"llvm.loop.unroll.runtime.disable"}
!184 = !{!185}
!185 = distinct !{!185, !186}
!186 = distinct !{!186, !"LVerDomain"}
!187 = !{!188}
!188 = distinct !{!188, !186}
!189 = distinct !{!189, !8}
!190 = distinct !{!190, !10}
!191 = distinct !{!191, !10}
!192 = distinct !{!192, !8}
!193 = !{!194}
!194 = distinct !{!194, !195}
!195 = distinct !{!195, !"LVerDomain"}
!196 = !{!197}
!197 = distinct !{!197, !195}
!198 = distinct !{!198, !8}
!199 = distinct !{!199, !10}
!200 = distinct !{!200, !10}
!201 = distinct !{!201, !8}
