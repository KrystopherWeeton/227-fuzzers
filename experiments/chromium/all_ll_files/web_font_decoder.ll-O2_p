; ModuleID = '../../third_party/blink/renderer/platform/fonts/web_font_decoder.cc'
source_filename = "../../third_party/blink/renderer/platform/fonts/web_font_decoder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.6" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.6" }>
%"struct.std::__1::atomic.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl.9" }
%"struct.std::__1::__cxx_atomic_impl.9" = type { %"struct.std::__1::__cxx_atomic_base_impl.10" }
%"struct.std::__1::__cxx_atomic_base_impl.10" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.11" }
%"struct.std::__1::atomic.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl.14" }
%"struct.std::__1::__cxx_atomic_impl.14" = type { %"struct.std::__1::__cxx_atomic_base_impl.15" }
%"struct.std::__1::__cxx_atomic_base_impl.15" = type { i8 }
%"class.blink::WebFontDecoder" = type { %"class.WTF::String", i64 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted", i64, %"class.WTF::Vector", %"class.WTF::Vector.1" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.WTF::Vector.1" = type { %"class.WTF::VectorBuffer.2" }
%"class.WTF::VectorBuffer.2" = type { %"class.WTF::VectorBufferBase.3" }
%"class.WTF::VectorBufferBase.3" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type opaque
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.ots::ExpandingMemoryStream" = type { %"class.ots::OTSStream.base", i8*, i64, i64, i64 }
%"class.ots::OTSStream.base" = type <{ i32 (...)**, i32 }>
%"class.blink::(anonymous namespace)::BlinkOTSContext" = type { %"class.ots::OTSContext", %"class.WTF::String" }
%"class.ots::OTSContext" = type { i32 (...)** }
%"class.WTF::SharedBuffer::DeprecatedFlatData" = type { %class.scoped_refptr.16, %"class.WTF::Vector", i8* }
%class.scoped_refptr.16 = type { %"class.WTF::SharedBuffer"* }
%class.sk_sp.17 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.6" }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.ots::OTSStream" = type <{ i32 (...)**, i32, [4 x i8] }>
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic.6", [4 x i8] }>
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%"class.WTF::Vector.18" = type { %"class.WTF::VectorBuffer.19" }
%"class.WTF::VectorBuffer.19" = type { %"class.WTF::VectorBufferBase", [256 x i8] }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZNK3ots21ExpandingMemoryStream4TellEv = comdat any

$_ZN3ots21ExpandingMemoryStreamD2Ev = comdat any

$_ZN3ots21ExpandingMemoryStreamD0Ev = comdat any

$_ZN3ots21ExpandingMemoryStream8WriteRawEPKvm = comdat any

$_ZN3ots21ExpandingMemoryStream4SeekEl = comdat any

$_ZN3ots9OTSStream3PadEm = comdat any

$_ZN3WTF6VectorIcLj256ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIcLj256ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm = comdat any

$_ZN3WTF12VectorBufferIcLj256ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPc = comdat any

$_ZTVN3ots21ExpandingMemoryStreamE = comdat any

$_ZZN3ots9OTSStream3PadEmE5kZero = comdat any

$_ZZN3ots9OTSStream3PadEmE6kZerob = comdat any

@.str = private unnamed_addr constant [13 x i8] c"Empty Buffer\00", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"Web font size more than 30MB\00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.2 = private unnamed_addr constant [11 x i8] c"DecodeFont\00", align 1
@.str.3 = private unnamed_addr constant [48 x i8] c"Unable to instantiate font face from font data.\00", align 1
@_ZTVN3ots21ExpandingMemoryStreamE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ots::ExpandingMemoryStream"*)* @_ZN3ots21ExpandingMemoryStreamD2Ev to i8*), i8* bitcast (void (%"class.ots::ExpandingMemoryStream"*)* @_ZN3ots21ExpandingMemoryStreamD0Ev to i8*), i8* bitcast (i1 (%"class.ots::ExpandingMemoryStream"*, i8*, i64)* @_ZN3ots21ExpandingMemoryStream8WriteRawEPKvm to i8*), i8* bitcast (i1 (%"class.ots::ExpandingMemoryStream"*, i64)* @_ZN3ots21ExpandingMemoryStream4SeekEl to i8*), i8* bitcast (i64 (%"class.ots::ExpandingMemoryStream"*)* @_ZNK3ots21ExpandingMemoryStream4TellEv to i8*), i8* bitcast (i1 (%"class.ots::OTSStream"*, i64)* @_ZN3ots9OTSStream3PadEm to i8*)] }, comdat, align 8
@_ZZN3ots9OTSStream3PadEmE5kZero = linkonce_odr hidden constant i32 0, comdat, align 4
@_ZZN3ots9OTSStream3PadEmE6kZerob = linkonce_odr hidden constant i8 0, comdat, align 1
@_ZTVN5blink12_GLOBAL__N_115BlinkOTSContextE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::BlinkOTSContext"*)* @_ZN5blink12_GLOBAL__N_115BlinkOTSContextD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::BlinkOTSContext"*)* @_ZN5blink12_GLOBAL__N_115BlinkOTSContextD0Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::BlinkOTSContext"*, i32, i8*, ...)* @_ZN5blink12_GLOBAL__N_115BlinkOTSContext7MessageEiPKcz to i8*), i8* bitcast (i32 (%"class.blink::(anonymous namespace)::BlinkOTSContext"*, i32)* @_ZN5blink12_GLOBAL__N_115BlinkOTSContext14GetTableActionEj to i8*)] }, align 8
@.str.4 = private unnamed_addr constant [10 x i8] c"OTS Error\00", align 1
@.str.5 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.6 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.8 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.9 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14WebFontDecoder6DecodeEPN3WTF12SharedBufferE(%class.sk_sp* noalias nocapture sret, %"class.blink::WebFontDecoder"* nocapture, %"class.WTF::SharedBuffer"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.ots::ExpandingMemoryStream", align 8
  %9 = alloca %"class.blink::(anonymous namespace)::BlinkOTSContext", align 8
  %10 = alloca %"class.WTF::SharedBuffer::DeprecatedFlatData", align 8
  %11 = alloca %class.sk_sp.17, align 8
  %12 = alloca %class.sk_sp, align 8
  %13 = alloca %class.sk_sp.17, align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = icmp eq %"class.WTF::SharedBuffer"* %2, null
  br i1 %15, label %16, label %75

16:                                               ; preds = %3
  %17 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 12) #9
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %38, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i33
  %30 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %29, i33 1) #9
  %31 = extractvalue { i33, i1 } %30, 1
  %32 = extractvalue { i33, i1 } %30, 0
  %33 = icmp slt i33 %32, 0
  %34 = or i1 %31, %33
  br i1 %34, label %35, label %36, !prof !2

35:                                               ; preds = %26
  call void @llvm.trap() #9
  unreachable

36:                                               ; preds = %26
  %37 = trunc i33 %32 to i32
  store i32 %37, i32* %27, align 4
  br label %38

38:                                               ; preds = %36, %21, %16
  %39 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %40 = bitcast %"class.blink::WebFontDecoder"* %1 to i64*
  %41 = getelementptr inbounds %"class.blink::WebFontDecoder", %"class.blink::WebFontDecoder"* %1, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  store i64 %39, i64* %40, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #9
  br label %57

57:                                               ; preds = %38, %53, %56
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %73, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #9
  br label %73

73:                                               ; preds = %57, %69, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  %74 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkTypeface* null, %class.SkTypeface** %74, align 8
  br label %376

75:                                               ; preds = %3
  %76 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %2, i64 0, i32 1
  %77 = load i64, i64* %76, align 8
  %78 = icmp ugt i64 %77, 31457280
  br i1 %78, label %79, label %138

79:                                               ; preds = %75
  %80 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0), i64 28) #9
  %81 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %101, label %84

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %101

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = zext i32 %91 to i33
  %93 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %92, i33 1) #9
  %94 = extractvalue { i33, i1 } %93, 1
  %95 = extractvalue { i33, i1 } %93, 0
  %96 = icmp slt i33 %95, 0
  %97 = or i1 %94, %96
  br i1 %97, label %98, label %99, !prof !2

98:                                               ; preds = %89
  call void @llvm.trap() #9
  unreachable

99:                                               ; preds = %89
  %100 = trunc i33 %95 to i32
  store i32 %100, i32* %90, align 4
  br label %101

101:                                              ; preds = %99, %84, %79
  %102 = ptrtoint %"class.WTF::StringImpl"* %82 to i64
  %103 = bitcast %"class.blink::WebFontDecoder"* %1 to i64*
  %104 = getelementptr inbounds %"class.blink::WebFontDecoder", %"class.blink::WebFontDecoder"* %1, i64 0, i32 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  store i64 %102, i64* %103, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %101
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #9
  br label %120

120:                                              ; preds = %101, %116, %119
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %122, label %136, label %123

123:                                              ; preds = %120
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  br i1 %127, label %130, label %132

130:                                              ; preds = %123
  %131 = add i32 %129, -1
  store i32 %131, i32* %128, align 4
  br label %132

132:                                              ; preds = %130, %123
  %133 = phi i32 [ %131, %130 ], [ %129, %123 ]
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %132
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %121) #9
  br label %136

136:                                              ; preds = %120, %132, %135
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #9
  %137 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkTypeface* null, %class.SkTypeface** %137, align 8
  br label %376

138:                                              ; preds = %75
  %139 = bitcast %"class.ots::ExpandingMemoryStream"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %139) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %139, i8 -86, i64 16, i1 false)
  %140 = getelementptr inbounds %"class.ots::ExpandingMemoryStream", %"class.ots::ExpandingMemoryStream"* %8, i64 0, i32 0, i32 0
  %141 = getelementptr inbounds %"class.ots::ExpandingMemoryStream", %"class.ots::ExpandingMemoryStream"* %8, i64 0, i32 0, i32 1
  store i32 0, i32* %141, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3ots21ExpandingMemoryStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %140, align 8
  %142 = getelementptr inbounds %"class.ots::ExpandingMemoryStream", %"class.ots::ExpandingMemoryStream"* %8, i64 0, i32 2
  store i64 %77, i64* %142, align 8
  %143 = getelementptr inbounds %"class.ots::ExpandingMemoryStream", %"class.ots::ExpandingMemoryStream"* %8, i64 0, i32 3
  %144 = getelementptr inbounds %"class.ots::ExpandingMemoryStream", %"class.ots::ExpandingMemoryStream"* %8, i64 0, i32 4
  %145 = bitcast i64* %143 to <2 x i64>*
  store <2 x i64> <i64 31457280, i64 0>, <2 x i64>* %145, align 8
  %146 = tail call i8* @_Znam(i64 %77) #13
  %147 = getelementptr inbounds %"class.ots::ExpandingMemoryStream", %"class.ots::ExpandingMemoryStream"* %8, i64 0, i32 1
  store i8* %146, i8** %147, align 8
  %148 = bitcast %"class.blink::(anonymous namespace)::BlinkOTSContext"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %148) #9
  %149 = getelementptr inbounds %"class.blink::(anonymous namespace)::BlinkOTSContext", %"class.blink::(anonymous namespace)::BlinkOTSContext"* %9, i64 0, i32 0, i32 0
  %150 = getelementptr inbounds %"class.blink::(anonymous namespace)::BlinkOTSContext", %"class.blink::(anonymous namespace)::BlinkOTSContext"* %9, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_115BlinkOTSContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %149, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %150, align 8
  %151 = bitcast %"class.WTF::SharedBuffer::DeprecatedFlatData"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %151) #9
  %152 = getelementptr inbounds %"class.WTF::SharedBuffer::DeprecatedFlatData", %"class.WTF::SharedBuffer::DeprecatedFlatData"* %10, i64 0, i32 0, i32 0
  %153 = getelementptr inbounds %"class.WTF::SharedBuffer::DeprecatedFlatData", %"class.WTF::SharedBuffer::DeprecatedFlatData"* %10, i64 0, i32 1, i32 0, i32 0, i32 0
  %154 = getelementptr inbounds %"class.WTF::SharedBuffer::DeprecatedFlatData", %"class.WTF::SharedBuffer::DeprecatedFlatData"* %10, i64 0, i32 1, i32 0, i32 0, i32 2
  %155 = getelementptr inbounds %"class.WTF::SharedBuffer::DeprecatedFlatData", %"class.WTF::SharedBuffer::DeprecatedFlatData"* %10, i64 0, i32 2
  %156 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %2, i64 0, i32 0, i32 0, i32 0
  %157 = bitcast %"class.WTF::SharedBuffer::DeprecatedFlatData"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %157, i8 -86, i64 32, i1 false)
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %156) #9
  call void @_ZN3WTF12SharedBuffer18DeprecatedFlatDataC1E13scoped_refptrIKS0_E(%"class.WTF::SharedBuffer::DeprecatedFlatData"* nonnull %10, %"class.WTF::SharedBuffer"* nonnull %2) #9
  %158 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %159 = and i8 %158, 25
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %167, label %161, !prof !3

161:                                              ; preds = %138
  %162 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #9
  %163 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %163) #9
  %164 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %165 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #9
  store i64 %165, i64* %164, align 8
  %166 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 66, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %162, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, %"class.base::trace_event::TraceArguments"* null, i32 0) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %163) #9
  br label %167

167:                                              ; preds = %138, %161
  %168 = getelementptr inbounds %"class.blink::(anonymous namespace)::BlinkOTSContext", %"class.blink::(anonymous namespace)::BlinkOTSContext"* %9, i64 0, i32 0
  %169 = bitcast %"class.ots::ExpandingMemoryStream"* %8 to %"class.ots::OTSStream"*
  %170 = load i8*, i8** %155, align 8
  %171 = load i64, i64* %76, align 8
  %172 = call zeroext i1 @_ZN3ots10OTSContext7ProcessEPNS_9OTSStreamEPKhmj(%"class.ots::OTSContext"* nonnull %168, %"class.ots::OTSStream"* nonnull %169, i8* %170, i64 %171, i32 -1) #9
  %173 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %174 = and i8 %173, 25
  %175 = icmp eq i8 %174, 0
  br i1 %175, label %182, label %176, !prof !3

176:                                              ; preds = %167
  %177 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #9
  %178 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %178) #9
  %179 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  %180 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #9
  store i64 %180, i64* %179, align 8
  %181 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 69, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %177, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, %"class.base::trace_event::TraceArguments"* null, i32 0) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %178) #9
  br label %182

182:                                              ; preds = %167, %176
  br i1 %172, label %224, label %183

183:                                              ; preds = %182
  %184 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  %185 = icmp eq %"class.WTF::StringImpl"* %184, null
  br i1 %185, label %203, label %186

186:                                              ; preds = %183
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = load atomic i32, i32* %187 monotonic, align 4
  %189 = and i32 %188, 2
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %203

191:                                              ; preds = %186
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 0
  %193 = load i32, i32* %192, align 4
  %194 = zext i32 %193 to i33
  %195 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %194, i33 1) #9
  %196 = extractvalue { i33, i1 } %195, 1
  %197 = extractvalue { i33, i1 } %195, 0
  %198 = icmp slt i33 %197, 0
  %199 = or i1 %196, %198
  br i1 %199, label %200, label %201, !prof !2

200:                                              ; preds = %191
  call void @llvm.trap() #9
  unreachable

201:                                              ; preds = %191
  %202 = trunc i33 %197 to i32
  store i32 %202, i32* %192, align 4
  br label %203

203:                                              ; preds = %201, %186, %183
  %204 = ptrtoint %"class.WTF::StringImpl"* %184 to i64
  %205 = bitcast %"class.blink::WebFontDecoder"* %1 to i64*
  %206 = getelementptr inbounds %"class.blink::WebFontDecoder", %"class.blink::WebFontDecoder"* %1, i64 0, i32 0, i32 0, i32 0
  %207 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %206, align 8
  store i64 %204, i64* %205, align 8
  %208 = icmp eq %"class.WTF::StringImpl"* %207, null
  br i1 %208, label %222, label %209

209:                                              ; preds = %203
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = load atomic i32, i32* %210 monotonic, align 4
  %212 = and i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 0
  %215 = load i32, i32* %214, align 4
  br i1 %213, label %216, label %218

216:                                              ; preds = %209
  %217 = add i32 %215, -1
  store i32 %217, i32* %214, align 4
  br label %218

218:                                              ; preds = %216, %209
  %219 = phi i32 [ %217, %216 ], [ %215, %209 ]
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %222

221:                                              ; preds = %218
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %207) #9
  br label %222

222:                                              ; preds = %203, %218, %221
  %223 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkTypeface* null, %class.SkTypeface** %223, align 8
  br label %337

224:                                              ; preds = %182
  %225 = load i64, i64* %144, align 8
  %226 = icmp sgt i64 %225, -1
  br i1 %226, label %228, label %227, !prof !3

227:                                              ; preds = %224
  call void @llvm.trap() #9
  unreachable

228:                                              ; preds = %224
  %229 = bitcast %class.sk_sp.17* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %229) #9
  %230 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %11, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %230, align 8
  %231 = load i8*, i8** %147, align 8
  call void @_ZN6SkData12MakeWithCopyEPKvm(%class.sk_sp.17* nonnull sret %11, i8* %231, i64 %225) #9
  %232 = bitcast %class.sk_sp* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %232) #9
  %233 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %12, i64 0, i32 0
  store %class.SkTypeface* null, %class.SkTypeface** %233, align 8
  %234 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %13, i64 0, i32 0
  %235 = load %class.SkData*, %class.SkData** %230, align 8
  %236 = icmp eq %class.SkData* %235, null
  br i1 %236, label %240, label %237

237:                                              ; preds = %228
  %238 = getelementptr inbounds %class.SkData, %class.SkData* %235, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %239 = atomicrmw add i32* %238, i32 1 monotonic
  br label %240

240:                                              ; preds = %228, %237
  store %class.SkData* %235, %class.SkData** %234, align 8
  %241 = call zeroext i1 @_ZN5blink22WebFontTypefaceFactory14CreateTypefaceE5sk_spI6SkDataERS1_I10SkTypefaceE(%class.sk_sp.17* nonnull %13, %class.sk_sp* nonnull dereferenceable(8) %12) #9
  %242 = load %class.SkData*, %class.SkData** %234, align 8
  %243 = icmp eq %class.SkData* %242, null
  br i1 %243, label %250, label %244

244:                                              ; preds = %240
  %245 = getelementptr inbounds %class.SkData, %class.SkData* %242, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = atomicrmw add i32* %245, i32 -1 acq_rel
  %247 = icmp eq i32 %246, 1
  br i1 %247, label %248, label %250

248:                                              ; preds = %244
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %242) #9
  %249 = bitcast %class.SkData* %242 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %249) #9
  br label %250

250:                                              ; preds = %240, %244, %248
  br i1 %241, label %308, label %251

251:                                              ; preds = %250
  %252 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %252) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %14, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.3, i64 0, i64 0), i64 47) #9
  %253 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %254 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %253, align 8
  %255 = icmp eq %"class.WTF::StringImpl"* %254, null
  br i1 %255, label %273, label %256

256:                                              ; preds = %251
  %257 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %254, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %258 = load atomic i32, i32* %257 monotonic, align 4
  %259 = and i32 %258, 2
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %261, label %273

261:                                              ; preds = %256
  %262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %254, i64 0, i32 0
  %263 = load i32, i32* %262, align 4
  %264 = zext i32 %263 to i33
  %265 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %264, i33 1) #9
  %266 = extractvalue { i33, i1 } %265, 1
  %267 = extractvalue { i33, i1 } %265, 0
  %268 = icmp slt i33 %267, 0
  %269 = or i1 %266, %268
  br i1 %269, label %270, label %271, !prof !2

270:                                              ; preds = %261
  call void @llvm.trap() #9
  unreachable

271:                                              ; preds = %261
  %272 = trunc i33 %267 to i32
  store i32 %272, i32* %262, align 4
  br label %273

273:                                              ; preds = %271, %256, %251
  %274 = ptrtoint %"class.WTF::StringImpl"* %254 to i64
  %275 = bitcast %"class.blink::WebFontDecoder"* %1 to i64*
  %276 = getelementptr inbounds %"class.blink::WebFontDecoder", %"class.blink::WebFontDecoder"* %1, i64 0, i32 0, i32 0, i32 0
  %277 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %276, align 8
  store i64 %274, i64* %275, align 8
  %278 = icmp eq %"class.WTF::StringImpl"* %277, null
  br i1 %278, label %292, label %279

279:                                              ; preds = %273
  %280 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %277, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %281 = load atomic i32, i32* %280 monotonic, align 4
  %282 = and i32 %281, 2
  %283 = icmp eq i32 %282, 0
  %284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %277, i64 0, i32 0
  %285 = load i32, i32* %284, align 4
  br i1 %283, label %286, label %288

286:                                              ; preds = %279
  %287 = add i32 %285, -1
  store i32 %287, i32* %284, align 4
  br label %288

288:                                              ; preds = %286, %279
  %289 = phi i32 [ %287, %286 ], [ %285, %279 ]
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %291, label %292

291:                                              ; preds = %288
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %277) #9
  br label %292

292:                                              ; preds = %273, %288, %291
  %293 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %253, align 8
  %294 = icmp eq %"class.WTF::StringImpl"* %293, null
  br i1 %294, label %313, label %295

295:                                              ; preds = %292
  %296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %293, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %297 = load atomic i32, i32* %296 monotonic, align 4
  %298 = and i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %293, i64 0, i32 0
  %301 = load i32, i32* %300, align 4
  br i1 %299, label %302, label %304

302:                                              ; preds = %295
  %303 = add i32 %301, -1
  store i32 %303, i32* %300, align 4
  br label %304

304:                                              ; preds = %302, %295
  %305 = phi i32 [ %303, %302 ], [ %301, %295 ]
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %307, label %313

307:                                              ; preds = %304
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %293) #9
  br label %313

308:                                              ; preds = %250
  %309 = getelementptr inbounds %"class.blink::WebFontDecoder", %"class.blink::WebFontDecoder"* %1, i64 0, i32 1
  store i64 %225, i64* %309, align 8
  %310 = bitcast %class.sk_sp* %12 to i64*
  %311 = load i64, i64* %310, align 8
  store %class.SkTypeface* null, %class.SkTypeface** %233, align 8
  %312 = bitcast %class.sk_sp* %0 to i64*
  store i64 %311, i64* %312, align 8
  br label %327

313:                                              ; preds = %307, %304, %292
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %252) #9
  %314 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkTypeface* null, %class.SkTypeface** %314, align 8
  %315 = load %class.SkTypeface*, %class.SkTypeface** %233, align 8
  %316 = icmp eq %class.SkTypeface* %315, null
  br i1 %316, label %327, label %317

317:                                              ; preds = %313
  %318 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %315, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %319 = atomicrmw add i32* %318, i32 -1 acq_rel
  %320 = icmp eq i32 %319, 1
  br i1 %320, label %321, label %327

321:                                              ; preds = %317
  %322 = bitcast %class.SkTypeface* %315 to %class.SkRefCntBase*
  %323 = bitcast %class.SkTypeface* %315 to void (%class.SkRefCntBase*)***
  %324 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %323, align 8
  %325 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %324, i64 2
  %326 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %325, align 8
  call void %326(%class.SkRefCntBase* nonnull %322) #9
  br label %327

327:                                              ; preds = %308, %313, %317, %321
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %232) #9
  %328 = load %class.SkData*, %class.SkData** %230, align 8
  %329 = icmp eq %class.SkData* %328, null
  br i1 %329, label %336, label %330

330:                                              ; preds = %327
  %331 = getelementptr inbounds %class.SkData, %class.SkData* %328, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %332 = atomicrmw add i32* %331, i32 -1 acq_rel
  %333 = icmp eq i32 %332, 1
  br i1 %333, label %334, label %336

334:                                              ; preds = %330
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %328) #9
  %335 = bitcast %class.SkData* %328 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %335) #9
  br label %336

336:                                              ; preds = %327, %330, %334
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %229) #9
  br label %337

337:                                              ; preds = %336, %222
  %338 = load i8*, i8** %153, align 8
  %339 = icmp eq i8* %338, null
  br i1 %339, label %345, label %340, !prof !3

340:                                              ; preds = %337
  %341 = load i32, i32* %154, align 4
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %344, label %343, !prof !2

343:                                              ; preds = %340
  store i32 0, i32* %154, align 4
  br label %344

344:                                              ; preds = %343, %340
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %338) #9
  store i8* null, i8** %153, align 8
  br label %345

345:                                              ; preds = %344, %337
  %346 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %152, align 8
  %347 = icmp eq %"class.WTF::SharedBuffer"* %346, null
  br i1 %347, label %355, label %348

348:                                              ; preds = %345
  %349 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %346, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %349) #9
  %350 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %346, i64 0, i32 0, i32 0, i32 0, i32 0
  %351 = load i32, i32* %350, align 4
  %352 = icmp eq i32 %351, 0
  br i1 %352, label %353, label %355

353:                                              ; preds = %348
  call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %346) #9
  %354 = bitcast %"class.WTF::SharedBuffer"* %346 to i8*
  call void @free(i8* %354) #9
  br label %355

355:                                              ; preds = %345, %348, %353
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %151) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_115BlinkOTSContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %149, align 8
  %356 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  %357 = icmp eq %"class.WTF::StringImpl"* %356, null
  br i1 %357, label %371, label %358

358:                                              ; preds = %355
  %359 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %356, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %360 = load atomic i32, i32* %359 monotonic, align 4
  %361 = and i32 %360, 2
  %362 = icmp eq i32 %361, 0
  %363 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %356, i64 0, i32 0
  %364 = load i32, i32* %363, align 4
  br i1 %362, label %365, label %367

365:                                              ; preds = %358
  %366 = add i32 %364, -1
  store i32 %366, i32* %363, align 4
  br label %367

367:                                              ; preds = %365, %358
  %368 = phi i32 [ %366, %365 ], [ %364, %358 ]
  %369 = icmp eq i32 %368, 0
  br i1 %369, label %370, label %371

370:                                              ; preds = %367
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %356) #9
  br label %371

371:                                              ; preds = %355, %367, %370
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %148) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3ots21ExpandingMemoryStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %140, align 8
  %372 = load i8*, i8** %147, align 8
  %373 = icmp eq i8* %372, null
  br i1 %373, label %375, label %374

374:                                              ; preds = %371
  call void @_ZdaPv(i8* nonnull %372) #13
  br label %375

375:                                              ; preds = %371, %374
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %139) #9
  br label %376

376:                                              ; preds = %375, %136, %73
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN3WTF12SharedBuffer18DeprecatedFlatDataC1E13scoped_refptrIKS0_E(%"class.WTF::SharedBuffer::DeprecatedFlatData"*, %"class.WTF::SharedBuffer"*) unnamed_addr #2

declare zeroext i1 @_ZN3ots10OTSContext7ProcessEPNS_9OTSStreamEPKhmj(%"class.ots::OTSContext"*, %"class.ots::OTSStream"*, i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK3ots21ExpandingMemoryStream4TellEv(%"class.ots::ExpandingMemoryStream"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.ots::ExpandingMemoryStream", %"class.ots::ExpandingMemoryStream"* %0, i64 0, i32 4
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

declare void @_ZN6SkData12MakeWithCopyEPKvm(%class.sk_sp.17* sret, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink22WebFontTypefaceFactory14CreateTypefaceE5sk_spI6SkDataERS1_I10SkTypefaceE(%class.sk_sp.17*, %class.sk_sp* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_115BlinkOTSContextD2Ev(%"class.blink::(anonymous namespace)::BlinkOTSContext"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::BlinkOTSContext", %"class.blink::(anonymous namespace)::BlinkOTSContext"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_115BlinkOTSContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::BlinkOTSContext", %"class.blink::(anonymous namespace)::BlinkOTSContext"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #9
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ots21ExpandingMemoryStreamD2Ev(%"class.ots::ExpandingMemoryStream"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.ots::ExpandingMemoryStream", %"class.ots::ExpandingMemoryStream"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3ots21ExpandingMemoryStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ots::ExpandingMemoryStream", %"class.ots::ExpandingMemoryStream"* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZdaPv(i8* nonnull %4) #13
  br label %7

7:                                                ; preds = %6, %1
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ots21ExpandingMemoryStreamD0Ev(%"class.ots::ExpandingMemoryStream"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.ots::ExpandingMemoryStream", %"class.ots::ExpandingMemoryStream"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3ots21ExpandingMemoryStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ots::ExpandingMemoryStream", %"class.ots::ExpandingMemoryStream"* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZdaPv(i8* nonnull %4) #13
  br label %7

7:                                                ; preds = %1, %6
  %8 = bitcast %"class.ots::ExpandingMemoryStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3ots21ExpandingMemoryStream8WriteRawEPKvm(%"class.ots::ExpandingMemoryStream"*, i8*, i64) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.ots::ExpandingMemoryStream", %"class.ots::ExpandingMemoryStream"* %0, i64 0, i32 4
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, %2
  %7 = getelementptr inbounds %"class.ots::ExpandingMemoryStream", %"class.ots::ExpandingMemoryStream"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %6, %8
  %10 = xor i64 %5, -1
  %11 = icmp ult i64 %10, %2
  %12 = or i1 %11, %9
  br i1 %12, label %13, label %35

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.ots::ExpandingMemoryStream", %"class.ots::ExpandingMemoryStream"* %0, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %8, %15
  br i1 %16, label %41, label %17

17:                                               ; preds = %13
  %18 = shl i64 %8, 1
  %19 = add i64 %18, 2
  %20 = icmp ult i64 %19, %8
  br i1 %20, label %41, label %21

21:                                               ; preds = %17
  %22 = icmp ugt i64 %19, %15
  %23 = select i1 %22, i64 %15, i64 %19
  %24 = tail call i8* @_Znam(i64 %23) #13
  %25 = getelementptr inbounds %"class.ots::ExpandingMemoryStream", %"class.ots::ExpandingMemoryStream"* %0, i64 0, i32 1
  %26 = load i8*, i8** %25, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %24, i8* align 1 %26, i64 %8, i1 false)
  store i64 %23, i64* %7, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %21
  tail call void @_ZdaPv(i8* nonnull %26) #13
  br label %29

29:                                               ; preds = %28, %21
  store i8* %24, i8** %25, align 8
  %30 = bitcast %"class.ots::ExpandingMemoryStream"* %0 to i1 (%"class.ots::ExpandingMemoryStream"*, i8*, i64)***
  %31 = load i1 (%"class.ots::ExpandingMemoryStream"*, i8*, i64)**, i1 (%"class.ots::ExpandingMemoryStream"*, i8*, i64)*** %30, align 8
  %32 = getelementptr inbounds i1 (%"class.ots::ExpandingMemoryStream"*, i8*, i64)*, i1 (%"class.ots::ExpandingMemoryStream"*, i8*, i64)** %31, i64 2
  %33 = load i1 (%"class.ots::ExpandingMemoryStream"*, i8*, i64)*, i1 (%"class.ots::ExpandingMemoryStream"*, i8*, i64)** %32, align 8
  %34 = tail call zeroext i1 %33(%"class.ots::ExpandingMemoryStream"* %0, i8* %1, i64 %2) #9
  br label %41

35:                                               ; preds = %3
  %36 = getelementptr inbounds %"class.ots::ExpandingMemoryStream", %"class.ots::ExpandingMemoryStream"* %0, i64 0, i32 1
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %38, i8* align 1 %1, i64 %2, i1 false)
  %39 = load i64, i64* %4, align 8
  %40 = add i64 %39, %2
  store i64 %40, i64* %4, align 8
  br label %41

41:                                               ; preds = %29, %17, %13, %35
  %42 = phi i1 [ true, %35 ], [ false, %13 ], [ %34, %29 ], [ false, %17 ]
  ret i1 %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3ots21ExpandingMemoryStream4SeekEl(%"class.ots::ExpandingMemoryStream"*, i64) unnamed_addr #0 comdat align 2 {
  %3 = icmp slt i64 %1, 0
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.ots::ExpandingMemoryStream", %"class.ots::ExpandingMemoryStream"* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, %1
  br i1 %7, label %10, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.ots::ExpandingMemoryStream", %"class.ots::ExpandingMemoryStream"* %0, i64 0, i32 4
  store i64 %1, i64* %9, align 8
  br label %10

10:                                               ; preds = %4, %2, %8
  %11 = phi i1 [ true, %8 ], [ false, %2 ], [ false, %4 ]
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3ots9OTSStream3PadEm(%"class.ots::OTSStream"*, i64) unnamed_addr #0 comdat align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = icmp ugt i64 %1, 3
  br i1 %6, label %7, label %13

7:                                                ; preds = %2
  %8 = bitcast %"class.ots::OTSStream"* %0 to i64 (%"class.ots::OTSStream"*)***
  %9 = bitcast i32* %4 to i8*
  %10 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %0, i64 0, i32 1
  %11 = bitcast i32* %5 to i8*
  %12 = bitcast %"class.ots::OTSStream"* %0 to i1 (%"class.ots::OTSStream"*, i8*, i64)***
  br label %21

13:                                               ; preds = %60, %2
  %14 = phi i64 [ %1, %2 ], [ %61, %60 ]
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %85, label %16

16:                                               ; preds = %13
  %17 = bitcast %"class.ots::OTSStream"* %0 to i64 (%"class.ots::OTSStream"*)***
  %18 = bitcast i32* %3 to i8*
  %19 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %0, i64 0, i32 1
  %20 = bitcast %"class.ots::OTSStream"* %0 to i1 (%"class.ots::OTSStream"*, i8*, i64)***
  br label %65

21:                                               ; preds = %7, %60
  %22 = phi i64 [ %1, %7 ], [ %61, %60 ]
  %23 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %8, align 8
  %24 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %23, i64 4
  %25 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %24, align 8
  %26 = tail call i64 %25(%"class.ots::OTSStream"* %0) #9
  %27 = and i64 %26, 3
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %21
  %30 = load i32, i32* %10, align 8
  br label %41

31:                                               ; preds = %21
  %32 = sub nuw nsw i64 4, %27
  %33 = icmp ult i64 %32, 4
  %34 = select i1 %33, i64 %32, i64 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #9
  store i32 0, i32* %4, align 4
  %35 = getelementptr inbounds i8, i8* %9, i64 %27
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false)
  %36 = load i32, i32* %4, align 4
  %37 = tail call i32 @llvm.bswap.i32(i32 %36) #9
  %38 = load i32, i32* %10, align 8
  %39 = add i32 %38, %37
  store i32 %39, i32* %10, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #9
  %40 = icmp eq i64 %34, 0
  br i1 %40, label %41, label %49

41:                                               ; preds = %31, %29
  %42 = phi i32 [ %30, %29 ], [ %39, %31 ]
  %43 = phi i64 [ 0, %29 ], [ %32, %31 ]
  %44 = getelementptr inbounds i8, i8* bitcast (i32* @_ZZN3ots9OTSStream3PadEmE5kZero to i8*), i64 %43
  %45 = bitcast i8* %44 to i32*
  %46 = load i32, i32* %45, align 1
  %47 = tail call i32 @llvm.bswap.i32(i32 %46) #9
  %48 = add i32 %47, %42
  store i32 %48, i32* %10, align 8
  br label %55

49:                                               ; preds = %31
  %50 = sub nuw nsw i64 4, %34
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11)
  store i32 0, i32* %5, align 4
  %51 = getelementptr inbounds i8, i8* bitcast (i32* @_ZZN3ots9OTSStream3PadEmE5kZero to i8*), i64 %32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %11, i8* align 1 %51, i64 %50, i1 false) #9
  %52 = load i32, i32* %5, align 4
  %53 = tail call i32 @llvm.bswap.i32(i32 %52) #9
  %54 = add i32 %39, %53
  store i32 %54, i32* %10, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11)
  br label %55

55:                                               ; preds = %41, %49
  %56 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %12, align 8
  %57 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %56, i64 2
  %58 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %57, align 8
  %59 = tail call zeroext i1 %58(%"class.ots::OTSStream"* %0, i8* bitcast (i32* @_ZZN3ots9OTSStream3PadEmE5kZero to i8*), i64 4) #9
  br i1 %59, label %60, label %85

60:                                               ; preds = %55
  %61 = add i64 %22, -4
  %62 = icmp ugt i64 %61, 3
  br i1 %62, label %21, label %13

63:                                               ; preds = %79
  %64 = icmp eq i64 %84, 0
  br i1 %64, label %85, label %65

65:                                               ; preds = %16, %63
  %66 = phi i64 [ %14, %16 ], [ %84, %63 ]
  %67 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %17, align 8
  %68 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %67, i64 4
  %69 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %68, align 8
  %70 = tail call i64 %69(%"class.ots::OTSStream"* %0) #9
  %71 = and i64 %70, 3
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %79, label %73

73:                                               ; preds = %65
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #9
  store i32 0, i32* %3, align 4
  %74 = getelementptr inbounds i8, i8* %18, i64 %71
  store i8 0, i8* %74, align 1
  %75 = load i32, i32* %3, align 4
  %76 = tail call i32 @llvm.bswap.i32(i32 %75) #9
  %77 = load i32, i32* %19, align 8
  %78 = add i32 %77, %76
  store i32 %78, i32* %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #9
  br label %79

79:                                               ; preds = %65, %73
  %80 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %20, align 8
  %81 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %80, i64 2
  %82 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %81, align 8
  %83 = tail call zeroext i1 %82(%"class.ots::OTSStream"* %0, i8* nonnull @_ZZN3ots9OTSStream3PadEmE6kZerob, i64 1) #9
  %84 = add i64 %66, -1
  br i1 %83, label %63, label %85

85:                                               ; preds = %55, %79, %63, %13
  %86 = phi i1 [ true, %13 ], [ false, %79 ], [ true, %63 ], [ false, %55 ]
  ret i1 %86
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_115BlinkOTSContextD0Ev(%"class.blink::(anonymous namespace)::BlinkOTSContext"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::BlinkOTSContext", %"class.blink::(anonymous namespace)::BlinkOTSContext"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_115BlinkOTSContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::BlinkOTSContext", %"class.blink::(anonymous namespace)::BlinkOTSContext"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #9
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::(anonymous namespace)::BlinkOTSContext"* %0 to i8*
  tail call void @_ZdlPv(i8* %20) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_115BlinkOTSContext7MessageEiPKcz(%"class.blink::(anonymous namespace)::BlinkOTSContext"* nocapture, i32, i8*, ...) unnamed_addr #0 align 2 {
  %4 = alloca [1 x %struct.__va_list_tag], align 16
  %5 = alloca i8, align 1
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::Vector.18", align 8
  %8 = bitcast [1 x %struct.__va_list_tag]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #9
  %9 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %4, i64 0, i64 0
  %10 = bitcast [1 x %struct.__va_list_tag]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %8)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #9
  store i8 -86, i8* %5, align 1
  %11 = call i32 @__vsnprintf_chk(i8* nonnull %5, i64 1, i32 1, i64 1, i8* %2, %struct.__va_list_tag* nonnull %9) #9
  call void @llvm.va_end(i8* nonnull %8)
  %12 = icmp slt i32 %11, 1
  br i1 %12, label %13, label %53

13:                                               ; preds = %3
  %14 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i64 9) #9
  %15 = getelementptr inbounds %"class.blink::(anonymous namespace)::BlinkOTSContext", %"class.blink::(anonymous namespace)::BlinkOTSContext"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %17 = bitcast %"class.WTF::String"* %6 to i64*
  %18 = load i64, i64* %17, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  %19 = bitcast %"class.WTF::String"* %15 to i64*
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  store i64 %18, i64* %19, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #9
  br label %36

36:                                               ; preds = %13, %32, %35
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #9
  br label %52

52:                                               ; preds = %36, %48, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  br label %111

53:                                               ; preds = %3
  %54 = bitcast %"class.WTF::Vector.18"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %54) #9
  %55 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %7, i64 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 256, i1 false)
  %56 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %7, i64 0, i32 0, i32 1, i64 0
  %57 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %7, i64 0, i32 0, i32 0, i32 0
  store i8* %56, i8** %57, align 8
  %58 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %7, i64 0, i32 0, i32 0, i32 1
  store i32 256, i32* %58, align 8
  %59 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %7, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %59, align 4
  %60 = add nuw i32 %11, 1
  %61 = icmp ugt i32 %11, 255
  br i1 %61, label %62, label %66

62:                                               ; preds = %53
  call void @_ZN3WTF6VectorIcLj256ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.18"* nonnull %7, i32 %60) #9
  %63 = load i8*, i8** %57, align 8
  %64 = load i32, i32* %59, align 4
  %65 = zext i32 %64 to i64
  br label %66

66:                                               ; preds = %53, %62
  %67 = phi i64 [ 0, %53 ], [ %65, %62 ]
  %68 = phi i8* [ %56, %53 ], [ %63, %62 ]
  %69 = getelementptr inbounds i8, i8* %68, i64 %67
  %70 = zext i32 %60 to i64
  %71 = getelementptr inbounds i8, i8* %68, i64 %70
  %72 = ptrtoint i8* %71 to i64
  %73 = ptrtoint i8* %69 to i64
  %74 = sub i64 %72, %73
  call void @llvm.memset.p0i8.i64(i8* align 1 %69, i8 0, i64 %74, i1 false) #9
  store i32 %60, i32* %59, align 4
  call void @llvm.va_start(i8* nonnull %8)
  %75 = load i8*, i8** %57, align 8
  %76 = load i32, i32* %59, align 4
  %77 = zext i32 %76 to i64
  %78 = call i64 @llvm.objectsize.i64.p0i8(i8* %75, i1 false, i1 true, i1 false) #9
  %79 = call i32 @__vsnprintf_chk(i8* %75, i64 %77, i32 1, i64 %78, i8* %2, %struct.__va_list_tag* nonnull %9) #9
  call void @llvm.va_end(i8* nonnull %8)
  %80 = load i8*, i8** %57, align 8
  %81 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %80, i32 %11) #9
  %82 = ptrtoint %"class.WTF::StringImpl"* %81 to i64
  %83 = getelementptr inbounds %"class.blink::(anonymous namespace)::BlinkOTSContext", %"class.blink::(anonymous namespace)::BlinkOTSContext"* %0, i64 0, i32 1
  %84 = bitcast %"class.WTF::String"* %83 to i64*
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %83, i64 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  store i64 %82, i64* %84, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %66
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #9
  br label %101

101:                                              ; preds = %100, %97, %66
  %102 = load i32, i32* %59, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %105, label %104, !prof !2

104:                                              ; preds = %101
  store i32 0, i32* %59, align 4
  br label %105

105:                                              ; preds = %104, %101
  %106 = load i8*, i8** %57, align 8
  %107 = icmp eq i8* %56, %106
  br i1 %107, label %110, label %108, !prof !3

108:                                              ; preds = %105
  %109 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %7, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIcLj256ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPc(%"class.WTF::VectorBuffer.19"* nonnull %109, i8* %106) #9
  br label %110

110:                                              ; preds = %105, %108
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %54) #9
  br label %111

111:                                              ; preds = %110, %52
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #9
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @_ZN5blink12_GLOBAL__N_115BlinkOTSContext14GetTableActionEj(%"class.blink::(anonymous namespace)::BlinkOTSContext"* nocapture readnone, i32) unnamed_addr #8 align 2 {
  switch i32 %1, label %3 [
    i32 1128416340, label %4
    i32 1128418371, label %4
    i32 1129270354, label %4
    i32 1129333068, label %4
    i32 1128678962, label %4
    i32 1935829368, label %4
    i32 1635148146, label %4
    i32 1668702578, label %4
    i32 1719034226, label %4
    i32 1735811442, label %4
    i32 1213612370, label %4
    i32 1297498450, label %4
    i32 1448493394, label %4
    i32 1195656518, label %4
    i32 1196445523, label %4
    i32 1196643650, label %4
  ]

3:                                                ; preds = %2
  br label %4

4:                                                ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %3
  %5 = phi i32 [ 0, %3 ], [ 2, %2 ], [ 2, %2 ], [ 2, %2 ], [ 2, %2 ], [ 2, %2 ], [ 2, %2 ], [ 2, %2 ], [ 2, %2 ], [ 2, %2 ], [ 2, %2 ], [ 2, %2 ], [ 2, %2 ], [ 2, %2 ], [ 2, %2 ], [ 2, %2 ], [ 2, %2 ]
  ret i32 %5
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #9

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #9

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8*, i32) local_unnamed_addr #2

; Function Attrs: nofree
declare i32 @__vsnprintf_chk(i8*, i64, i32, i64, i8*, %struct.__va_list_tag*) local_unnamed_addr #10

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.objectsize.i64.p0i8(i8*, i1 immarg, i1 immarg, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIcLj256ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.18"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #9
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i64 0, i64 0), i8* %15, i8* %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #9
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !3

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 256
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %37) #9
  %39 = call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %38) #9
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.18"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.18"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 256, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIcLj256ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.18"* %0, i32 %27) #9
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #11

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIcLj256ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.18"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 257
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.18"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 256, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.18"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 256, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !2

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #9
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIcLj256ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPc(%"class.WTF::VectorBuffer.19"* %18, i8* nonnull %6) #9
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %27) #9
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %28) #9
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !3

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #9
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !3

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIcLj256ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPc(%"class.WTF::VectorBuffer.19"* %46, i8* %42) #9
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.18"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.18", %"class.WTF::Vector.18"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

declare i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.9, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #9
  ret i64 %20
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIcLj256ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPc(%"class.WTF::VectorBuffer.19"*, i8*) local_unnamed_addr #12 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #9
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"*) unnamed_addr #11

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #11

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #11

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #11

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.bswap.i32(i32) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
