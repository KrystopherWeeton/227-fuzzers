; ModuleID = '../../net/url_request/redirect_util.cc'
source_filename = "../../net/url_request/redirect_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::BasicStringPiece" = type { i8*, i64 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"struct.net::RedirectInfo" = type { i32, %"class.std::__1::basic_string", %class.GURL, %"class.net::SiteForCookies", %"class.std::__1::basic_string", i8, i8, i32 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.4 }
%union.anon.4 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.5" = type { %"class.absl::optional_internal::optional_data.6" }
%"class.absl::optional_internal::optional_data.6" = type { %"class.absl::optional_internal::optional_data_base.7" }
%"class.absl::optional_internal::optional_data_base.7" = type { %"class.absl::optional_internal::optional_data_dtor_base.8" }
%"class.absl::optional_internal::optional_data_dtor_base.8" = type { i8, %union.anon.9 }
%union.anon.9 = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.std::__1::basic_string"* }
%"class.absl::optional.15" = type { %"class.absl::optional_internal::optional_data.16" }
%"class.absl::optional_internal::optional_data.16" = type { %"class.absl::optional_internal::optional_data_base.17" }
%"class.absl::optional_internal::optional_data_base.17" = type { %"class.absl::optional_internal::optional_data_dtor_base.18" }
%"class.absl::optional_internal::optional_data_dtor_base.18" = type { i8, %union.anon.19 }
%union.anon.19 = type { %"class.net::HttpRequestHeaders" }
%"class.net::HttpRequestHeaders" = type { %"class.std::__1::vector.20" }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"class.std::__1::__compressed_pair.22" }
%"struct.net::HttpRequestHeaders::HeaderKeyValuePair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.absl::optional.35" = type { %"class.absl::optional_internal::optional_data.36" }
%"class.absl::optional_internal::optional_data.36" = type { %"class.absl::optional_internal::optional_data_base.37" }
%"class.absl::optional_internal::optional_data_base.37" = type { %"class.absl::optional_internal::optional_data_dtor_base.38" }
%"class.absl::optional_internal::optional_data_dtor_base.38" = type { i8, %union.anon.39 }
%union.anon.39 = type { %"class.std::__1::basic_string" }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe", %"class.std::__1::vector.28", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.30" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }

@_ZN3net18HttpRequestHeaders7kOriginE = external constant [0 x i8], align 1
@_ZN3net18HttpRequestHeaders14kContentLengthE = external constant [0 x i8], align 1
@_ZN3net18HttpRequestHeaders12kContentTypeE = external constant [0 x i8], align 1
@.str = private unnamed_addr constant [17 x i8] c"Content-Encoding\00", align 1
@.ref.tmp = private constant %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i32 0, i32 0), i64 16 }, align 8
@.str.1 = private unnamed_addr constant [17 x i8] c"Content-Language\00", align 1
@.ref.tmp.2 = private constant %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i32 0, i32 0), i64 16 }, align 8
@.str.3 = private unnamed_addr constant [17 x i8] c"Content-Location\00", align 1
@.ref.tmp.4 = private constant %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i32 0, i32 0), i64 16 }, align 8
@.str.5 = private unnamed_addr constant [16 x i8] c"Referrer-Policy\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12RedirectUtil17UpdateHttpRequestERK4GURLRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEERKNS_12RedirectInfoERKN4absl8optionalINS4_6vectorISA_NS8_ISA_EEEEEERKNSH_INS_18HttpRequestHeadersEEEPSO_Pb(%class.GURL* dereferenceable(120), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"struct.net::RedirectInfo"* dereferenceable(272), %"class.absl::optional.5"* nocapture readonly dereferenceable(32), %"class.absl::optional.15"* dereferenceable(32), %"class.net::HttpRequestHeaders"*, i8* nocapture) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.base::BasicStringPiece", align 8
  %9 = alloca %"class.base::BasicStringPiece", align 8
  %10 = alloca %"class.base::BasicStringPiece", align 8
  %11 = alloca %"class.base::BasicStringPiece", align 8
  %12 = alloca %"class.url::Origin", align 8
  %13 = alloca %"class.url::Origin", align 8
  %14 = alloca %"class.base::BasicStringPiece", align 8
  %15 = alloca %"class.base::BasicStringPiece", align 8
  %16 = alloca %"class.base::BasicStringPiece", align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca %"class.url::Origin", align 8
  store i8 0, i8* %6, align 1
  %19 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %48, label %22

22:                                               ; preds = %7
  %23 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %23, align 8
  %25 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %26 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %25, align 8
  %27 = icmp eq %"class.std::__1::basic_string"* %24, %26
  br i1 %27, label %48, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.base::BasicStringPiece"* %8 to i8*
  %30 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 0
  %31 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 1
  br label %32

32:                                               ; preds = %28, %32
  %33 = phi %"class.std::__1::basic_string"* [ %24, %28 ], [ %46, %32 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #7
  %34 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  %41 = select i1 %37, i8* %39, i8* %40
  store i8* %41, i8** %30, align 8
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = zext i8 %36 to i64
  %45 = select i1 %37, i64 %43, i64 %44
  store i64 %45, i64* %31, align 8
  call void @_ZN3net18HttpRequestHeaders12RemoveHeaderERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::HttpRequestHeaders"* %5, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %8) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #7
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 1
  %47 = icmp eq %"class.std::__1::basic_string"* %46, %26
  br i1 %47, label %48, label %32

48:                                               ; preds = %32, %22, %7
  %49 = getelementptr inbounds %"struct.net::RedirectInfo", %"struct.net::RedirectInfo"* %2, i64 0, i32 1
  %50 = bitcast %"class.std::__1::basic_string"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = getelementptr inbounds %"struct.net::RedirectInfo", %"struct.net::RedirectInfo"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = zext i8 %52 to i64
  %57 = select i1 %53, i64 %55, i64 %56
  %58 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = load i64, i64* %62, align 8
  %64 = zext i8 %60 to i64
  %65 = select i1 %61, i64 %63, i64 %64
  %66 = icmp eq i64 %57, %65
  br i1 %66, label %67, label %99

67:                                               ; preds = %48
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = bitcast %"class.std::__1::basic_string"* %49 to i8*
  %71 = select i1 %53, i8* %69, i8* %70
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %75 = select i1 %61, i8* %73, i8* %74
  %76 = icmp eq i64 %57, 0
  br i1 %53, label %83, label %77

77:                                               ; preds = %67
  br i1 %76, label %112, label %78

78:                                               ; preds = %77
  %79 = ptrtoint i8* %69 to i64
  %80 = trunc i64 %79 to i8
  %81 = load i8, i8* %75, align 1
  %82 = icmp eq i8 %81, %80
  br i1 %82, label %84, label %99

83:                                               ; preds = %67
  br i1 %76, label %112, label %96

84:                                               ; preds = %78, %91
  %85 = phi i64 [ %88, %91 ], [ %56, %78 ]
  %86 = phi i8* [ %89, %91 ], [ %70, %78 ]
  %87 = phi i8* [ %92, %91 ], [ %75, %78 ]
  %88 = add i64 %85, -1
  %89 = getelementptr inbounds i8, i8* %86, i64 1
  %90 = icmp eq i64 %88, 0
  br i1 %90, label %112, label %91

91:                                               ; preds = %84
  %92 = getelementptr inbounds i8, i8* %87, i64 1
  %93 = load i8, i8* %89, align 1
  %94 = load i8, i8* %92, align 1
  %95 = icmp eq i8 %93, %94
  br i1 %95, label %84, label %99

96:                                               ; preds = %83
  %97 = call i32 @bcmp(i8* %71, i8* %75, i64 %57) #7
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %112, label %99

99:                                               ; preds = %91, %78, %96, %48
  %100 = bitcast %"class.base::BasicStringPiece"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %100) #7
  %101 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders7kOriginE, i64 0, i64 0), i8** %101, align 8
  %102 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 1
  %103 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders7kOriginE, i64 0, i64 0)) #7
  store i64 %103, i64* %102, align 8
  call void @_ZN3net18HttpRequestHeaders12RemoveHeaderERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::HttpRequestHeaders"* %5, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %9) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %100) #7
  %104 = bitcast %"class.base::BasicStringPiece"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #7
  %105 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %10, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders14kContentLengthE, i64 0, i64 0), i8** %105, align 8
  %106 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %10, i64 0, i32 1
  %107 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders14kContentLengthE, i64 0, i64 0)) #7
  store i64 %107, i64* %106, align 8
  call void @_ZN3net18HttpRequestHeaders12RemoveHeaderERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::HttpRequestHeaders"* %5, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %10) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #7
  %108 = bitcast %"class.base::BasicStringPiece"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %108) #7
  %109 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %11, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders12kContentTypeE, i64 0, i64 0), i8** %109, align 8
  %110 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %11, i64 0, i32 1
  %111 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders12kContentTypeE, i64 0, i64 0)) #7
  store i64 %111, i64* %110, align 8
  call void @_ZN3net18HttpRequestHeaders12RemoveHeaderERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::HttpRequestHeaders"* %5, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %11) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %108) #7
  call void @_ZN3net18HttpRequestHeaders12RemoveHeaderERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::HttpRequestHeaders"* %5, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) @.ref.tmp) #7
  call void @_ZN3net18HttpRequestHeaders12RemoveHeaderERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::HttpRequestHeaders"* %5, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) @.ref.tmp.2) #7
  call void @_ZN3net18HttpRequestHeaders12RemoveHeaderERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::HttpRequestHeaders"* %5, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) @.ref.tmp.4) #7
  store i8 1, i8* %6, align 1
  br label %112

112:                                              ; preds = %84, %96, %77, %83, %99
  %113 = bitcast %"class.url::Origin"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %113) #7
  %114 = getelementptr inbounds %"struct.net::RedirectInfo", %"struct.net::RedirectInfo"* %2, i64 0, i32 2
  call void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* nonnull sret %12, %class.GURL* dereferenceable(120) %114) #7
  %115 = bitcast %"class.url::Origin"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %115) #7
  call void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* nonnull sret %13, %class.GURL* dereferenceable(120) %0) #7
  %116 = call zeroext i1 @_ZNK3url6Origin16IsSameOriginWithERKS0_(%"class.url::Origin"* nonnull %12, %"class.url::Origin"* nonnull dereferenceable(80) %13) #7
  %117 = bitcast %"class.base::BasicStringPiece"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %117) #7
  br i1 %116, label %152, label %118

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %14, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders7kOriginE, i64 0, i64 0), i8** %119, align 8
  %120 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %14, i64 0, i32 1
  %121 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders7kOriginE, i64 0, i64 0)) #7
  store i64 %121, i64* %120, align 8
  %122 = call %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* @_ZNK3net18HttpRequestHeaders10FindHeaderERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::HttpRequestHeaders"* %5, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %14) #7
  %123 = getelementptr inbounds %"class.net::HttpRequestHeaders", %"class.net::HttpRequestHeaders"* %5, i64 0, i32 0, i32 0, i32 1
  %124 = load %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"** %123, align 8
  %125 = icmp eq %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* %122, %124
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %117) #7
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %13) #7
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %115) #7
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %12) #7
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %113) #7
  br i1 %125, label %153, label %126

126:                                              ; preds = %118
  %127 = bitcast %"class.base::BasicStringPiece"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %127) #7
  %128 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %15, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders7kOriginE, i64 0, i64 0), i8** %128, align 8
  %129 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %15, i64 0, i32 1
  %130 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders7kOriginE, i64 0, i64 0)) #7
  store i64 %130, i64* %129, align 8
  %131 = bitcast %"class.base::BasicStringPiece"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %131) #7
  %132 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %132) #7
  %133 = bitcast %"class.url::Origin"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %133) #7
  call void @_ZN3url6OriginC1Ev(%"class.url::Origin"* nonnull %18) #7
  call void @_ZNK3url6Origin9SerializeEv(%"class.std::__1::basic_string"* nonnull sret %17, %"class.url::Origin"* nonnull %18) #7
  %134 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %16, i64 0, i32 0
  %135 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %136 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %135, i64 0, i32 1, i32 0
  %137 = load i8, i8* %136, align 1
  %138 = icmp slt i8 %137, 0
  %139 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load i8*, i8** %139, align 8
  %141 = select i1 %138, i8* %140, i8* %132
  store i8* %141, i8** %134, align 8
  %142 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %16, i64 0, i32 1
  %143 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %144 = load i64, i64* %143, align 8
  %145 = zext i8 %137 to i64
  %146 = select i1 %138, i64 %144, i64 %145
  store i64 %146, i64* %142, align 8
  call void @_ZN3net18HttpRequestHeaders9SetHeaderERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES8_(%"class.net::HttpRequestHeaders"* %5, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %15, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %16) #7
  %147 = load i8, i8* %136, align 1
  %148 = icmp slt i8 %147, 0
  br i1 %148, label %149, label %151

149:                                              ; preds = %126
  %150 = load i8*, i8** %139, align 8
  call void @_ZdlPv(i8* %150) #8
  br label %151

151:                                              ; preds = %126, %149
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %18) #7
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %133) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %132) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %131) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %127) #7
  br label %153

152:                                              ; preds = %112
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %117) #7
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %13) #7
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %115) #7
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %12) #7
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %113) #7
  br label %153

153:                                              ; preds = %118, %152, %151
  %154 = getelementptr inbounds %"class.absl::optional.15", %"class.absl::optional.15"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %155 = load i8, i8* %154, align 8, !range !2
  %156 = icmp eq i8 %155, 0
  br i1 %156, label %159, label %157

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"class.absl::optional.15", %"class.absl::optional.15"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3net18HttpRequestHeaders9MergeFromERKS0_(%"class.net::HttpRequestHeaders"* %5, %"class.net::HttpRequestHeaders"* dereferenceable(24) %158) #7
  br label %159

159:                                              ; preds = %153, %157
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN3net18HttpRequestHeaders12RemoveHeaderERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::HttpRequestHeaders"*, %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #2

declare zeroext i1 @_ZNK3url6Origin16IsSameOriginWithERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #3

declare void @_ZN3net18HttpRequestHeaders9SetHeaderERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES8_(%"class.net::HttpRequestHeaders"*, %"class.base::BasicStringPiece"* dereferenceable(16), %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN3url6OriginC1Ev(%"class.url::Origin"*) unnamed_addr #2

declare void @_ZNK3url6Origin9SerializeEv(%"class.std::__1::basic_string"* sret, %"class.url::Origin"*) local_unnamed_addr #2

declare void @_ZN3net18HttpRequestHeaders9MergeFromERKS0_(%"class.net::HttpRequestHeaders"*, %"class.net::HttpRequestHeaders"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net12RedirectUtil23GetReferrerPolicyHeaderEPKNS_19HttpResponseHeadersE(%"class.absl::optional.35"* noalias nocapture sret, %"class.net::HttpResponseHeaders"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = icmp eq %"class.net::HttpResponseHeaders"* %1, null
  br i1 %4, label %5, label %9

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.absl::optional.35", %"class.absl::optional.35"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.absl::optional.35", %"class.absl::optional.35"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %union.anon.39* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #7
  br label %27

9:                                                ; preds = %2
  %10 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #7
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #7
  %12 = call zeroext i1 @_ZNK3net19HttpResponseHeaders19GetNormalizedHeaderEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"* nonnull %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i64 15, %"class.std::__1::basic_string"* nonnull %3) #7
  %13 = getelementptr inbounds %"class.absl::optional.35", %"class.absl::optional.35"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %12, label %14, label %17

14:                                               ; preds = %9
  store i8 1, i8* %13, align 8
  %15 = getelementptr inbounds %"class.absl::optional.35", %"class.absl::optional.35"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %16 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* nonnull align 8 %10, i64 24, i1 false) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #7
  br label %26

17:                                               ; preds = %9
  store i8 0, i8* %13, align 8
  %18 = getelementptr inbounds %"class.absl::optional.35", %"class.absl::optional.35"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %19 = bitcast %union.anon.39* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #7
  %20 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %17
  %25 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %25) #8
  br label %26

26:                                               ; preds = %14, %17, %24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #7
  br label %27

27:                                               ; preds = %26, %5
  ret void
}

declare zeroext i1 @_ZNK3net19HttpResponseHeaders19GetNormalizedHeaderEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"*, i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

declare %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* @_ZNK3net18HttpRequestHeaders10FindHeaderERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::HttpRequestHeaders"*, %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
