; ModuleID = 'gen/third_party/blink/public/mojom/permissions/permission.mojom-blink-test-utils.cc'
source_filename = "gen/third_party/blink/public/mojom/permissions/permission.mojom-blink-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::blink::PermissionObserverAsyncWaiter" = type { %"class.blink::mojom::blink::PermissionObserver"* }
%"class.blink::mojom::blink::PermissionObserver" = type { i32 (...)** }
%"class.blink::mojom::blink::PermissionServiceAsyncWaiter" = type { %"class.blink::mojom::blink::PermissionService"* }
%"class.blink::mojom::blink::PermissionService" = type { i32 (...)** }
%"class.blink::mojom::blink::PermissionObserverInterceptorForTesting" = type { %"class.blink::mojom::blink::PermissionObserver" }
%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting" = type { %"class.blink::mojom::blink::PermissionService" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::mojom::blink::PermissionDescriptor"* }
%"class.blink::mojom::blink::PermissionDescriptor" = type { i32, %"class.mojo::StructPtr.0" }
%"class.mojo::StructPtr.0" = type { %"class.std::__1::unique_ptr.1" }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.blink::mojom::blink::PermissionDescriptorExtension"* }
%"class.blink::mojom::blink::PermissionDescriptorExtension" = type { i32, %"union.blink::mojom::blink::PermissionDescriptorExtension::Union_" }
%"union.blink::mojom::blink::PermissionDescriptorExtension::Union_" = type { %"class.mojo::InlinedStructPtr"* }
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::blink::MidiPermissionDescriptor", i32 }
%"class.blink::mojom::blink::MidiPermissionDescriptor" = type { i8 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.base::OnceCallback.11" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr.22, %"class.base::WeakPtrFactory" }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.15", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.17" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr.22 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.23" }>
%"class.base::RefCountedThreadSafe.23" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.24 }
%class.scoped_refptr.24 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.25", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.25" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.26" }
%"struct.std::__1::atomic.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__atomic_base.28" }
%"struct.std::__1::__atomic_base.28" = type { %"struct.std::__1::__cxx_atomic_impl.29" }
%"struct.std::__1::__cxx_atomic_impl.29" = type { %"struct.std::__1::__cxx_atomic_base_impl.30" }
%"struct.std::__1::__cxx_atomic_base_impl.30" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.WTF::Vector.33" = type { %"class.WTF::VectorBuffer.34" }
%"class.WTF::VectorBuffer.34" = type { %"class.WTF::VectorBufferBase.35" }
%"class.WTF::VectorBufferBase.35" = type { i32*, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink5mojom5blink18PermissionObserverD2Ev = comdat any

$_ZN5blink5mojom5blink39PermissionObserverInterceptorForTestingD0Ev = comdat any

$_ZN5blink5mojom5blink17PermissionServiceD2Ev = comdat any

$_ZN5blink5mojom5blink38PermissionServiceInterceptorForTestingD0Ev = comdat any

$_ZN3WTF6VectorIN5blink5mojom16PermissionStatusELj0ENS_18PartitionAllocatorEEaSERKS5_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink5mojom16PermissionStatusEEEmm = comdat any

@.str = private unnamed_addr constant [14 x i8] c"HasPermission\00", align 1
@.str.1 = private unnamed_addr constant [84 x i8] c"gen/third_party/blink/public/mojom/permissions/permission.mojom-blink-test-utils.cc\00", align 1
@.str.2 = private unnamed_addr constant [18 x i8] c"RequestPermission\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"RequestPermissions\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"RevokePermission\00", align 1
@_ZTVN5blink5mojom5blink39PermissionObserverInterceptorForTestingE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::PermissionObserver"*)* @_ZN5blink5mojom5blink18PermissionObserverD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::PermissionObserverInterceptorForTesting"*)* @_ZN5blink5mojom5blink39PermissionObserverInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::PermissionObserverInterceptorForTesting"*, i32)* @_ZN5blink5mojom5blink39PermissionObserverInterceptorForTesting24OnPermissionStatusChangeENS0_16PermissionStatusE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN5blink5mojom5blink38PermissionServiceInterceptorForTestingE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::PermissionService"*)* @_ZN5blink5mojom5blink17PermissionServiceD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*)* @_ZN5blink5mojom5blink38PermissionServiceInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)* @_ZN5blink5mojom5blink38PermissionServiceInterceptorForTesting13HasPermissionEN4mojo9StructPtrINS1_20PermissionDescriptorEEEN4base12OnceCallbackIFvNS0_16PermissionStatusEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*, %"class.mojo::StructPtr"*, i1, %"class.base::OnceCallback"*)* @_ZN5blink5mojom5blink38PermissionServiceInterceptorForTesting17RequestPermissionEN4mojo9StructPtrINS1_20PermissionDescriptorEEEbN4base12OnceCallbackIFvNS0_16PermissionStatusEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*, %"class.WTF::Vector"*, i1, %"class.base::OnceCallback.11"*)* @_ZN5blink5mojom5blink38PermissionServiceInterceptorForTesting18RequestPermissionsEN3WTF6VectorIN4mojo9StructPtrINS1_20PermissionDescriptorEEELj0ENS3_18PartitionAllocatorEEEbN4base12OnceCallbackIFvRKNS4_INS0_16PermissionStatusELj0ES9_EEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)* @_ZN5blink5mojom5blink38PermissionServiceInterceptorForTesting16RevokePermissionEN4mojo9StructPtrINS1_20PermissionDescriptorEEEN4base12OnceCallbackIFvNS0_16PermissionStatusEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*, %"class.mojo::StructPtr"*, i32, %"class.mojo::PendingRemote"*)* @_ZN5blink5mojom5blink38PermissionServiceInterceptorForTesting21AddPermissionObserverEN4mojo9StructPtrINS1_20PermissionDescriptorEEENS0_16PermissionStatusENS3_13PendingRemoteINS1_18PermissionObserverEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str.5 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.6 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5mojom16PermissionStatusEEEPKcv = private unnamed_addr constant [78 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::mojom::PermissionStatus]\00", align 1

@_ZN5blink5mojom5blink29PermissionObserverAsyncWaiterC1EPNS1_18PermissionObserverE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::PermissionObserverAsyncWaiter"*, %"class.blink::mojom::blink::PermissionObserver"*), void (%"class.blink::mojom::blink::PermissionObserverAsyncWaiter"*, %"class.blink::mojom::blink::PermissionObserver"*)* @_ZN5blink5mojom5blink29PermissionObserverAsyncWaiterC2EPNS1_18PermissionObserverE
@_ZN5blink5mojom5blink29PermissionObserverAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::PermissionObserverAsyncWaiter"*), void (%"class.blink::mojom::blink::PermissionObserverAsyncWaiter"*)* @_ZN5blink5mojom5blink29PermissionObserverAsyncWaiterD2Ev
@_ZN5blink5mojom5blink28PermissionServiceAsyncWaiterC1EPNS1_17PermissionServiceE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::PermissionServiceAsyncWaiter"*, %"class.blink::mojom::blink::PermissionService"*), void (%"class.blink::mojom::blink::PermissionServiceAsyncWaiter"*, %"class.blink::mojom::blink::PermissionService"*)* @_ZN5blink5mojom5blink28PermissionServiceAsyncWaiterC2EPNS1_17PermissionServiceE
@_ZN5blink5mojom5blink28PermissionServiceAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::PermissionServiceAsyncWaiter"*), void (%"class.blink::mojom::blink::PermissionServiceAsyncWaiter"*)* @_ZN5blink5mojom5blink28PermissionServiceAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink39PermissionObserverInterceptorForTesting24OnPermissionStatusChangeENS0_16PermissionStatusE(%"class.blink::mojom::blink::PermissionObserverInterceptorForTesting"*, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::mojom::blink::PermissionObserverInterceptorForTesting"* %0 to %"class.blink::mojom::blink::PermissionObserver"* (%"class.blink::mojom::blink::PermissionObserverInterceptorForTesting"*)***
  %4 = load %"class.blink::mojom::blink::PermissionObserver"* (%"class.blink::mojom::blink::PermissionObserverInterceptorForTesting"*)**, %"class.blink::mojom::blink::PermissionObserver"* (%"class.blink::mojom::blink::PermissionObserverInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::mojom::blink::PermissionObserver"* (%"class.blink::mojom::blink::PermissionObserverInterceptorForTesting"*)*, %"class.blink::mojom::blink::PermissionObserver"* (%"class.blink::mojom::blink::PermissionObserverInterceptorForTesting"*)** %4, i64 3
  %6 = load %"class.blink::mojom::blink::PermissionObserver"* (%"class.blink::mojom::blink::PermissionObserverInterceptorForTesting"*)*, %"class.blink::mojom::blink::PermissionObserver"* (%"class.blink::mojom::blink::PermissionObserverInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.blink::mojom::blink::PermissionObserver"* %6(%"class.blink::mojom::blink::PermissionObserverInterceptorForTesting"* %0) #10
  %8 = bitcast %"class.blink::mojom::blink::PermissionObserver"* %7 to void (%"class.blink::mojom::blink::PermissionObserver"*, i32)***
  %9 = load void (%"class.blink::mojom::blink::PermissionObserver"*, i32)**, void (%"class.blink::mojom::blink::PermissionObserver"*, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::mojom::blink::PermissionObserver"*, i32)*, void (%"class.blink::mojom::blink::PermissionObserver"*, i32)** %9, i64 2
  %11 = load void (%"class.blink::mojom::blink::PermissionObserver"*, i32)*, void (%"class.blink::mojom::blink::PermissionObserver"*, i32)** %10, align 8
  tail call void %11(%"class.blink::mojom::blink::PermissionObserver"* %7, i32 %1) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink29PermissionObserverAsyncWaiterC2EPNS1_18PermissionObserverE(%"class.blink::mojom::blink::PermissionObserverAsyncWaiter"* nocapture, %"class.blink::mojom::blink::PermissionObserver"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::PermissionObserverAsyncWaiter", %"class.blink::mojom::blink::PermissionObserverAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::PermissionObserver"* %1, %"class.blink::mojom::blink::PermissionObserver"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink29PermissionObserverAsyncWaiterD2Ev(%"class.blink::mojom::blink::PermissionObserverAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink38PermissionServiceInterceptorForTesting13HasPermissionEN4mojo9StructPtrINS1_20PermissionDescriptorEEEN4base12OnceCallbackIFvNS0_16PermissionStatusEEEE(%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*, %"class.mojo::StructPtr"* nocapture, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.mojo::StructPtr", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = bitcast %"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"* %0 to %"class.blink::mojom::blink::PermissionService"* (%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*)***
  %7 = load %"class.blink::mojom::blink::PermissionService"* (%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*)**, %"class.blink::mojom::blink::PermissionService"* (%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::mojom::blink::PermissionService"* (%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::PermissionService"* (%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*)** %7, i64 7
  %9 = load %"class.blink::mojom::blink::PermissionService"* (%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::PermissionService"* (%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*)** %8, align 8
  %10 = tail call %"class.blink::mojom::blink::PermissionService"* %9(%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"* %0) #10
  %11 = bitcast %"class.mojo::StructPtr"* %4 to i64*
  %12 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %11, align 8
  store i64 0, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %17, i64* %18, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %15, align 8
  %19 = bitcast %"class.blink::mojom::blink::PermissionService"* %10 to void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)***
  %20 = load void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)** %20, i64 2
  %22 = load void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)** %21, align 8
  call void %22(%"class.blink::mojom::blink::PermissionService"* %10, %"class.mojo::StructPtr"* nonnull %4, %"class.base::OnceCallback"* nonnull %5) #10
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #10
  %24 = load %"class.blink::mojom::blink::PermissionDescriptor"*, %"class.blink::mojom::blink::PermissionDescriptor"** %12, align 8
  store %"class.blink::mojom::blink::PermissionDescriptor"* null, %"class.blink::mojom::blink::PermissionDescriptor"** %12, align 8
  %25 = icmp eq %"class.blink::mojom::blink::PermissionDescriptor"* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %3
  call void @_ZN5blink5mojom5blink20PermissionDescriptorD1Ev(%"class.blink::mojom::blink::PermissionDescriptor"* nonnull %24) #10
  %27 = bitcast %"class.blink::mojom::blink::PermissionDescriptor"* %24 to i8*
  call void @_ZdlPv(i8* %27) #11
  br label %28

28:                                               ; preds = %3, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink38PermissionServiceInterceptorForTesting17RequestPermissionEN4mojo9StructPtrINS1_20PermissionDescriptorEEEbN4base12OnceCallbackIFvNS0_16PermissionStatusEEEE(%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*, %"class.mojo::StructPtr"* nocapture, i1 zeroext, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.mojo::StructPtr", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = bitcast %"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"* %0 to %"class.blink::mojom::blink::PermissionService"* (%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*)***
  %8 = load %"class.blink::mojom::blink::PermissionService"* (%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*)**, %"class.blink::mojom::blink::PermissionService"* (%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::mojom::blink::PermissionService"* (%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::PermissionService"* (%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*)** %8, i64 7
  %10 = load %"class.blink::mojom::blink::PermissionService"* (%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::PermissionService"* (%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*)** %9, align 8
  %11 = tail call %"class.blink::mojom::blink::PermissionService"* %10(%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"* %0) #10
  %12 = bitcast %"class.mojo::StructPtr"* %5 to i64*
  %13 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %12, align 8
  store i64 0, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %18, i64* %19, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %16, align 8
  %20 = bitcast %"class.blink::mojom::blink::PermissionService"* %11 to void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, i1, %"class.base::OnceCallback"*)***
  %21 = load void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, i1, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, i1, %"class.base::OnceCallback"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, i1, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, i1, %"class.base::OnceCallback"*)** %21, i64 3
  %23 = load void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, i1, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, i1, %"class.base::OnceCallback"*)** %22, align 8
  call void %23(%"class.blink::mojom::blink::PermissionService"* %11, %"class.mojo::StructPtr"* nonnull %5, i1 zeroext %2, %"class.base::OnceCallback"* nonnull %6) #10
  %24 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #10
  %25 = load %"class.blink::mojom::blink::PermissionDescriptor"*, %"class.blink::mojom::blink::PermissionDescriptor"** %13, align 8
  store %"class.blink::mojom::blink::PermissionDescriptor"* null, %"class.blink::mojom::blink::PermissionDescriptor"** %13, align 8
  %26 = icmp eq %"class.blink::mojom::blink::PermissionDescriptor"* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %4
  call void @_ZN5blink5mojom5blink20PermissionDescriptorD1Ev(%"class.blink::mojom::blink::PermissionDescriptor"* nonnull %25) #10
  %28 = bitcast %"class.blink::mojom::blink::PermissionDescriptor"* %25 to i8*
  call void @_ZdlPv(i8* %28) #11
  br label %29

29:                                               ; preds = %4, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink38PermissionServiceInterceptorForTesting18RequestPermissionsEN3WTF6VectorIN4mojo9StructPtrINS1_20PermissionDescriptorEEELj0ENS3_18PartitionAllocatorEEEbN4base12OnceCallbackIFvRKNS4_INS0_16PermissionStatusELj0ES9_EEEEE(%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*, %"class.WTF::Vector"* nocapture, i1 zeroext, %"class.base::OnceCallback.11"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::Vector", align 8
  %6 = alloca %"class.base::OnceCallback.11", align 8
  %7 = bitcast %"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"* %0 to %"class.blink::mojom::blink::PermissionService"* (%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*)***
  %8 = load %"class.blink::mojom::blink::PermissionService"* (%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*)**, %"class.blink::mojom::blink::PermissionService"* (%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::mojom::blink::PermissionService"* (%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::PermissionService"* (%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*)** %8, i64 7
  %10 = load %"class.blink::mojom::blink::PermissionService"* (%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::PermissionService"* (%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*)** %9, align 8
  %11 = tail call %"class.blink::mojom::blink::PermissionService"* %10(%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"* %0) #10
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  %14 = bitcast %"class.WTF::Vector"* %1 to i64*
  %15 = bitcast %"class.WTF::Vector"* %5 to i64*
  store i64 0, i64* %15, align 8
  %16 = load i64, i64* %14, align 8
  %17 = bitcast %"class.WTF::Vector"* %5 to i64*
  store atomic i64 0, i64* %14 monotonic, align 8
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %12, align 8
  store i32 0, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %13, align 4
  store i32 0, i32* %20, align 4
  %22 = getelementptr inbounds %"class.base::OnceCallback.11", %"class.base::OnceCallback.11"* %3, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.base::OnceCallback.11"* %3 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.base::OnceCallback.11"* %6 to i64*
  store i64 %24, i64* %25, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %22, align 8
  %26 = bitcast %"class.blink::mojom::blink::PermissionService"* %11 to void (%"class.blink::mojom::blink::PermissionService"*, %"class.WTF::Vector"*, i1, %"class.base::OnceCallback.11"*)***
  %27 = load void (%"class.blink::mojom::blink::PermissionService"*, %"class.WTF::Vector"*, i1, %"class.base::OnceCallback.11"*)**, void (%"class.blink::mojom::blink::PermissionService"*, %"class.WTF::Vector"*, i1, %"class.base::OnceCallback.11"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::mojom::blink::PermissionService"*, %"class.WTF::Vector"*, i1, %"class.base::OnceCallback.11"*)*, void (%"class.blink::mojom::blink::PermissionService"*, %"class.WTF::Vector"*, i1, %"class.base::OnceCallback.11"*)** %27, i64 4
  %29 = load void (%"class.blink::mojom::blink::PermissionService"*, %"class.WTF::Vector"*, i1, %"class.base::OnceCallback.11"*)*, void (%"class.blink::mojom::blink::PermissionService"*, %"class.WTF::Vector"*, i1, %"class.base::OnceCallback.11"*)** %28, align 8
  call void %29(%"class.blink::mojom::blink::PermissionService"* %11, %"class.WTF::Vector"* nonnull %5, i1 zeroext %2, %"class.base::OnceCallback.11"* nonnull %6) #10
  %30 = getelementptr inbounds %"class.base::OnceCallback.11", %"class.base::OnceCallback.11"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %30) #10
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %31, align 8
  %33 = icmp eq %"class.mojo::StructPtr"* %32, null
  br i1 %33, label %56, label %34, !prof !2

34:                                               ; preds = %4
  %35 = bitcast %"class.mojo::StructPtr"* %32 to i8*
  %36 = load i32, i32* %13, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %54, label %38, !prof !3

38:                                               ; preds = %34
  %39 = zext i32 %36 to i64
  %40 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %32, i64 %39
  br label %41

41:                                               ; preds = %48, %38
  %42 = phi %"class.mojo::StructPtr"* [ %49, %48 ], [ %32, %38 ]
  %43 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::mojom::blink::PermissionDescriptor"*, %"class.blink::mojom::blink::PermissionDescriptor"** %43, align 8
  store %"class.blink::mojom::blink::PermissionDescriptor"* null, %"class.blink::mojom::blink::PermissionDescriptor"** %43, align 8
  %45 = icmp eq %"class.blink::mojom::blink::PermissionDescriptor"* %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %41
  call void @_ZN5blink5mojom5blink20PermissionDescriptorD1Ev(%"class.blink::mojom::blink::PermissionDescriptor"* nonnull %44) #10
  %47 = bitcast %"class.blink::mojom::blink::PermissionDescriptor"* %44 to i8*
  call void @_ZdlPv(i8* %47) #11
  br label %48

48:                                               ; preds = %46, %41
  %49 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %42, i64 1
  %50 = icmp eq %"class.mojo::StructPtr"* %49, %40
  br i1 %50, label %51, label %41

51:                                               ; preds = %48
  store i32 0, i32* %13, align 4
  %52 = bitcast %"class.WTF::Vector"* %5 to i8**
  %53 = load i8*, i8** %52, align 8
  br label %54

54:                                               ; preds = %51, %34
  %55 = phi i8* [ %53, %51 ], [ %35, %34 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %55) #10
  store %"class.mojo::StructPtr"* null, %"class.mojo::StructPtr"** %31, align 8
  br label %56

56:                                               ; preds = %4, %54
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink38PermissionServiceInterceptorForTesting16RevokePermissionEN4mojo9StructPtrINS1_20PermissionDescriptorEEEN4base12OnceCallbackIFvNS0_16PermissionStatusEEEE(%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*, %"class.mojo::StructPtr"* nocapture, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.mojo::StructPtr", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = bitcast %"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"* %0 to %"class.blink::mojom::blink::PermissionService"* (%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*)***
  %7 = load %"class.blink::mojom::blink::PermissionService"* (%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*)**, %"class.blink::mojom::blink::PermissionService"* (%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::mojom::blink::PermissionService"* (%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::PermissionService"* (%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*)** %7, i64 7
  %9 = load %"class.blink::mojom::blink::PermissionService"* (%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::PermissionService"* (%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*)** %8, align 8
  %10 = tail call %"class.blink::mojom::blink::PermissionService"* %9(%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"* %0) #10
  %11 = bitcast %"class.mojo::StructPtr"* %4 to i64*
  %12 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %11, align 8
  store i64 0, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %17, i64* %18, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %15, align 8
  %19 = bitcast %"class.blink::mojom::blink::PermissionService"* %10 to void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)***
  %20 = load void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)** %20, i64 5
  %22 = load void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)** %21, align 8
  call void %22(%"class.blink::mojom::blink::PermissionService"* %10, %"class.mojo::StructPtr"* nonnull %4, %"class.base::OnceCallback"* nonnull %5) #10
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #10
  %24 = load %"class.blink::mojom::blink::PermissionDescriptor"*, %"class.blink::mojom::blink::PermissionDescriptor"** %12, align 8
  store %"class.blink::mojom::blink::PermissionDescriptor"* null, %"class.blink::mojom::blink::PermissionDescriptor"** %12, align 8
  %25 = icmp eq %"class.blink::mojom::blink::PermissionDescriptor"* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %3
  call void @_ZN5blink5mojom5blink20PermissionDescriptorD1Ev(%"class.blink::mojom::blink::PermissionDescriptor"* nonnull %24) #10
  %27 = bitcast %"class.blink::mojom::blink::PermissionDescriptor"* %24 to i8*
  call void @_ZdlPv(i8* %27) #11
  br label %28

28:                                               ; preds = %3, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink38PermissionServiceInterceptorForTesting21AddPermissionObserverEN4mojo9StructPtrINS1_20PermissionDescriptorEEENS0_16PermissionStatusENS3_13PendingRemoteINS1_18PermissionObserverEEE(%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*, %"class.mojo::StructPtr"* nocapture, i32, %"class.mojo::PendingRemote"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.mojo::StructPtr", align 8
  %6 = alloca %"class.mojo::PendingRemote", align 4
  %7 = bitcast %"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"* %0 to %"class.blink::mojom::blink::PermissionService"* (%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*)***
  %8 = load %"class.blink::mojom::blink::PermissionService"* (%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*)**, %"class.blink::mojom::blink::PermissionService"* (%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::mojom::blink::PermissionService"* (%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::PermissionService"* (%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*)** %8, i64 7
  %10 = load %"class.blink::mojom::blink::PermissionService"* (%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::PermissionService"* (%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*)** %9, align 8
  %11 = tail call %"class.blink::mojom::blink::PermissionService"* %10(%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"* %0) #10
  %12 = bitcast %"class.mojo::StructPtr"* %5 to i64*
  %13 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %12, align 8
  store i64 0, i64* %14, align 8
  %16 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %6, i64 0, i32 0
  %17 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %3, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %16, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %17) #10
  %18 = bitcast %"class.blink::mojom::blink::PermissionService"* %11 to void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, i32, %"class.mojo::PendingRemote"*)***
  %19 = load void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, i32, %"class.mojo::PendingRemote"*)**, void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, i32, %"class.mojo::PendingRemote"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, i32, %"class.mojo::PendingRemote"*)*, void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, i32, %"class.mojo::PendingRemote"*)** %19, i64 6
  %21 = load void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, i32, %"class.mojo::PendingRemote"*)*, void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, i32, %"class.mojo::PendingRemote"*)** %20, align 8
  call void %21(%"class.blink::mojom::blink::PermissionService"* %11, %"class.mojo::StructPtr"* nonnull %5, i32 %2, %"class.mojo::PendingRemote"* nonnull %6) #10
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %16) #10
  %22 = load %"class.blink::mojom::blink::PermissionDescriptor"*, %"class.blink::mojom::blink::PermissionDescriptor"** %13, align 8
  store %"class.blink::mojom::blink::PermissionDescriptor"* null, %"class.blink::mojom::blink::PermissionDescriptor"** %13, align 8
  %23 = icmp eq %"class.blink::mojom::blink::PermissionDescriptor"* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %4
  call void @_ZN5blink5mojom5blink20PermissionDescriptorD1Ev(%"class.blink::mojom::blink::PermissionDescriptor"* nonnull %22) #10
  %25 = bitcast %"class.blink::mojom::blink::PermissionDescriptor"* %22 to i8*
  call void @_ZdlPv(i8* %25) #11
  br label %26

26:                                               ; preds = %4, %24
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink28PermissionServiceAsyncWaiterC2EPNS1_17PermissionServiceE(%"class.blink::mojom::blink::PermissionServiceAsyncWaiter"* nocapture, %"class.blink::mojom::blink::PermissionService"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::PermissionServiceAsyncWaiter", %"class.blink::mojom::blink::PermissionServiceAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::PermissionService"* %1, %"class.blink::mojom::blink::PermissionService"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink28PermissionServiceAsyncWaiterD2Ev(%"class.blink::mojom::blink::PermissionServiceAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink28PermissionServiceAsyncWaiter13HasPermissionEN4mojo9StructPtrINS1_20PermissionDescriptorEEEPNS0_16PermissionStatusE(%"class.blink::mojom::blink::PermissionServiceAsyncWaiter"* nocapture readonly, %"class.mojo::StructPtr"* nocapture, i32*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RunLoop", align 8
  %5 = alloca %"class.mojo::StructPtr", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = ptrtoint i32* %2 to i64
  %9 = bitcast %"class.base::RunLoop"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %4, i32 0) #10
  %10 = getelementptr inbounds %"class.blink::mojom::blink::PermissionServiceAsyncWaiter", %"class.blink::mojom::blink::PermissionServiceAsyncWaiter"* %0, i64 0, i32 0
  %11 = load %"class.blink::mojom::blink::PermissionService"*, %"class.blink::mojom::blink::PermissionService"** %10, align 8
  %12 = bitcast %"class.mojo::StructPtr"* %5 to i64*
  %13 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %12, align 8
  store i64 0, i64* %14, align 8
  %16 = ptrtoint %"class.base::RunLoop"* %4 to i64
  %17 = call i8* @_Znwm(i64 56) #11, !noalias !4
  %18 = bitcast i8* %17 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %18, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink28PermissionServiceAsyncWaiter13HasPermissionEN4mojo9StructPtrINS5_20PermissionDescriptorEEEPNS4_16PermissionStatusEE3$_0JPNS_7RunLoopESC_EEEFvSB_EE7RunOnceEPNS0_13BindStateBaseESB_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink28PermissionServiceAsyncWaiter13HasPermissionEN4mojo9StructPtrINS4_20PermissionDescriptorEEEPNS3_16PermissionStatusEE3$_0JPNS_7RunLoopESB_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !4
  %19 = getelementptr inbounds i8, i8* %17, i64 40
  %20 = bitcast i8* %19 to i64*
  store i64 %16, i64* %20, align 8, !noalias !4
  %21 = getelementptr inbounds i8, i8* %17, i64 48
  %22 = bitcast i8* %21 to i64*
  store i64 %8, i64* %22, align 8, !noalias !4
  %23 = bitcast %"class.base::OnceCallback"* %6 to i8**
  store i8* %17, i8** %23, align 8, !alias.scope !4
  %24 = bitcast %"class.blink::mojom::blink::PermissionService"* %11 to void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)***
  %25 = load void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)** %25, i64 2
  %27 = load void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)** %26, align 8
  call void %27(%"class.blink::mojom::blink::PermissionService"* %11, %"class.mojo::StructPtr"* nonnull %5, %"class.base::OnceCallback"* nonnull %6) #10
  %28 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %28) #10
  %29 = load %"class.blink::mojom::blink::PermissionDescriptor"*, %"class.blink::mojom::blink::PermissionDescriptor"** %13, align 8
  store %"class.blink::mojom::blink::PermissionDescriptor"* null, %"class.blink::mojom::blink::PermissionDescriptor"** %13, align 8
  %30 = icmp eq %"class.blink::mojom::blink::PermissionDescriptor"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %3
  call void @_ZN5blink5mojom5blink20PermissionDescriptorD1Ev(%"class.blink::mojom::blink::PermissionDescriptor"* nonnull %29) #10
  %32 = bitcast %"class.blink::mojom::blink::PermissionDescriptor"* %29 to i8*
  call void @_ZdlPv(i8* %32) #11
  br label %33

33:                                               ; preds = %3, %31
  %34 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %34) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.1, i64 0, i64 0), i32 77) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %7) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %34) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"*, i32) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"*, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #5

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink28PermissionServiceAsyncWaiter17RequestPermissionEN4mojo9StructPtrINS1_20PermissionDescriptorEEEbPNS0_16PermissionStatusE(%"class.blink::mojom::blink::PermissionServiceAsyncWaiter"* nocapture readonly, %"class.mojo::StructPtr"* nocapture, i1 zeroext, i32*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RunLoop", align 8
  %6 = alloca %"class.mojo::StructPtr", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = ptrtoint i32* %3 to i64
  %10 = bitcast %"class.base::RunLoop"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %5, i32 0) #10
  %11 = getelementptr inbounds %"class.blink::mojom::blink::PermissionServiceAsyncWaiter", %"class.blink::mojom::blink::PermissionServiceAsyncWaiter"* %0, i64 0, i32 0
  %12 = load %"class.blink::mojom::blink::PermissionService"*, %"class.blink::mojom::blink::PermissionService"** %11, align 8
  %13 = bitcast %"class.mojo::StructPtr"* %6 to i64*
  %14 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %13, align 8
  store i64 0, i64* %15, align 8
  %17 = ptrtoint %"class.base::RunLoop"* %5 to i64
  %18 = call i8* @_Znwm(i64 56) #11, !noalias !9
  %19 = bitcast i8* %18 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %19, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink28PermissionServiceAsyncWaiter17RequestPermissionEN4mojo9StructPtrINS5_20PermissionDescriptorEEEbPNS4_16PermissionStatusEE3$_1JPNS_7RunLoopESC_EEEFvSB_EE7RunOnceEPNS0_13BindStateBaseESB_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink28PermissionServiceAsyncWaiter17RequestPermissionEN4mojo9StructPtrINS4_20PermissionDescriptorEEEbPNS3_16PermissionStatusEE3$_1JPNS_7RunLoopESB_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !9
  %20 = getelementptr inbounds i8, i8* %18, i64 40
  %21 = bitcast i8* %20 to i64*
  store i64 %17, i64* %21, align 8, !noalias !9
  %22 = getelementptr inbounds i8, i8* %18, i64 48
  %23 = bitcast i8* %22 to i64*
  store i64 %9, i64* %23, align 8, !noalias !9
  %24 = bitcast %"class.base::OnceCallback"* %7 to i8**
  store i8* %18, i8** %24, align 8, !alias.scope !9
  %25 = bitcast %"class.blink::mojom::blink::PermissionService"* %12 to void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, i1, %"class.base::OnceCallback"*)***
  %26 = load void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, i1, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, i1, %"class.base::OnceCallback"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, i1, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, i1, %"class.base::OnceCallback"*)** %26, i64 3
  %28 = load void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, i1, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, i1, %"class.base::OnceCallback"*)** %27, align 8
  call void %28(%"class.blink::mojom::blink::PermissionService"* %12, %"class.mojo::StructPtr"* nonnull %6, i1 zeroext %2, %"class.base::OnceCallback"* nonnull %7) #10
  %29 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %29) #10
  %30 = load %"class.blink::mojom::blink::PermissionDescriptor"*, %"class.blink::mojom::blink::PermissionDescriptor"** %14, align 8
  store %"class.blink::mojom::blink::PermissionDescriptor"* null, %"class.blink::mojom::blink::PermissionDescriptor"** %14, align 8
  %31 = icmp eq %"class.blink::mojom::blink::PermissionDescriptor"* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %4
  call void @_ZN5blink5mojom5blink20PermissionDescriptorD1Ev(%"class.blink::mojom::blink::PermissionDescriptor"* nonnull %30) #10
  %33 = bitcast %"class.blink::mojom::blink::PermissionDescriptor"* %30 to i8*
  call void @_ZdlPv(i8* %33) #11
  br label %34

34:                                               ; preds = %4, %32
  %35 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.1, i64 0, i64 0), i32 92) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %5, %"class.base::Location"* nonnull dereferenceable(32) %8) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink28PermissionServiceAsyncWaiter18RequestPermissionsEN3WTF6VectorIN4mojo9StructPtrINS1_20PermissionDescriptorEEELj0ENS3_18PartitionAllocatorEEEbPNS4_INS0_16PermissionStatusELj0ES9_EE(%"class.blink::mojom::blink::PermissionServiceAsyncWaiter"* nocapture readonly, %"class.WTF::Vector"* nocapture, i1 zeroext, %"class.WTF::Vector.33"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RunLoop", align 8
  %6 = alloca %"class.WTF::Vector", align 8
  %7 = alloca %"class.base::OnceCallback.11", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = ptrtoint %"class.WTF::Vector.33"* %3 to i64
  %10 = bitcast %"class.base::RunLoop"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %5, i32 0) #10
  %11 = getelementptr inbounds %"class.blink::mojom::blink::PermissionServiceAsyncWaiter", %"class.blink::mojom::blink::PermissionServiceAsyncWaiter"* %0, i64 0, i32 0
  %12 = load %"class.blink::mojom::blink::PermissionService"*, %"class.blink::mojom::blink::PermissionService"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 2
  %15 = bitcast %"class.WTF::Vector"* %1 to i64*
  %16 = bitcast %"class.WTF::Vector"* %6 to i64*
  store i64 0, i64* %16, align 8
  %17 = load i64, i64* %15, align 8
  %18 = bitcast %"class.WTF::Vector"* %6 to i64*
  store atomic i64 0, i64* %15 monotonic, align 8
  store atomic i64 %17, i64* %18 monotonic, align 8
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  store i32 %20, i32* %13, align 8
  store i32 0, i32* %19, align 4
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  store i32 %22, i32* %14, align 4
  store i32 0, i32* %21, align 4
  %23 = ptrtoint %"class.base::RunLoop"* %5 to i64
  %24 = call i8* @_Znwm(i64 56) #11, !noalias !14
  %25 = bitcast i8* %24 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %25, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.WTF::Vector.33"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink28PermissionServiceAsyncWaiter18RequestPermissionsEN3WTF6VectorIN4mojo9StructPtrINS5_20PermissionDescriptorEEELj0ENS7_18PartitionAllocatorEEEbPNS8_INS4_16PermissionStatusELj0ESD_EEE3$_2JPNS_7RunLoopESH_EEEFvRKSG_EE7RunOnceEPNS0_13BindStateBaseESN_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink28PermissionServiceAsyncWaiter18RequestPermissionsEN3WTF6VectorIN4mojo9StructPtrINS4_20PermissionDescriptorEEELj0ENS6_18PartitionAllocatorEEEbPNS7_INS3_16PermissionStatusELj0ESC_EEE3$_2JPNS_7RunLoopESG_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !14
  %26 = getelementptr inbounds i8, i8* %24, i64 40
  %27 = bitcast i8* %26 to i64*
  store i64 %23, i64* %27, align 8, !noalias !14
  %28 = getelementptr inbounds i8, i8* %24, i64 48
  %29 = bitcast i8* %28 to i64*
  store i64 %9, i64* %29, align 8, !noalias !14
  %30 = bitcast %"class.base::OnceCallback.11"* %7 to i8**
  store i8* %24, i8** %30, align 8, !alias.scope !14
  %31 = bitcast %"class.blink::mojom::blink::PermissionService"* %12 to void (%"class.blink::mojom::blink::PermissionService"*, %"class.WTF::Vector"*, i1, %"class.base::OnceCallback.11"*)***
  %32 = load void (%"class.blink::mojom::blink::PermissionService"*, %"class.WTF::Vector"*, i1, %"class.base::OnceCallback.11"*)**, void (%"class.blink::mojom::blink::PermissionService"*, %"class.WTF::Vector"*, i1, %"class.base::OnceCallback.11"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::mojom::blink::PermissionService"*, %"class.WTF::Vector"*, i1, %"class.base::OnceCallback.11"*)*, void (%"class.blink::mojom::blink::PermissionService"*, %"class.WTF::Vector"*, i1, %"class.base::OnceCallback.11"*)** %32, i64 4
  %34 = load void (%"class.blink::mojom::blink::PermissionService"*, %"class.WTF::Vector"*, i1, %"class.base::OnceCallback.11"*)*, void (%"class.blink::mojom::blink::PermissionService"*, %"class.WTF::Vector"*, i1, %"class.base::OnceCallback.11"*)** %33, align 8
  call void %34(%"class.blink::mojom::blink::PermissionService"* %12, %"class.WTF::Vector"* nonnull %6, i1 zeroext %2, %"class.base::OnceCallback.11"* nonnull %7) #10
  %35 = getelementptr inbounds %"class.base::OnceCallback.11", %"class.base::OnceCallback.11"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %35) #10
  %36 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %36, align 8
  %38 = icmp eq %"class.mojo::StructPtr"* %37, null
  br i1 %38, label %61, label %39, !prof !2

39:                                               ; preds = %4
  %40 = bitcast %"class.mojo::StructPtr"* %37 to i8*
  %41 = load i32, i32* %14, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %59, label %43, !prof !3

43:                                               ; preds = %39
  %44 = zext i32 %41 to i64
  %45 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %37, i64 %44
  br label %46

46:                                               ; preds = %53, %43
  %47 = phi %"class.mojo::StructPtr"* [ %54, %53 ], [ %37, %43 ]
  %48 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.blink::mojom::blink::PermissionDescriptor"*, %"class.blink::mojom::blink::PermissionDescriptor"** %48, align 8
  store %"class.blink::mojom::blink::PermissionDescriptor"* null, %"class.blink::mojom::blink::PermissionDescriptor"** %48, align 8
  %50 = icmp eq %"class.blink::mojom::blink::PermissionDescriptor"* %49, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %46
  call void @_ZN5blink5mojom5blink20PermissionDescriptorD1Ev(%"class.blink::mojom::blink::PermissionDescriptor"* nonnull %49) #10
  %52 = bitcast %"class.blink::mojom::blink::PermissionDescriptor"* %49 to i8*
  call void @_ZdlPv(i8* %52) #11
  br label %53

53:                                               ; preds = %51, %46
  %54 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %47, i64 1
  %55 = icmp eq %"class.mojo::StructPtr"* %54, %45
  br i1 %55, label %56, label %46

56:                                               ; preds = %53
  store i32 0, i32* %14, align 4
  %57 = bitcast %"class.WTF::Vector"* %6 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %39
  %60 = phi i8* [ %58, %56 ], [ %40, %39 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %60) #10
  store %"class.mojo::StructPtr"* null, %"class.mojo::StructPtr"** %36, align 8
  br label %61

61:                                               ; preds = %4, %59
  %62 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %62) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.1, i64 0, i64 0), i32 107) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %5, %"class.base::Location"* nonnull dereferenceable(32) %8) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %62) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink28PermissionServiceAsyncWaiter16RevokePermissionEN4mojo9StructPtrINS1_20PermissionDescriptorEEEPNS0_16PermissionStatusE(%"class.blink::mojom::blink::PermissionServiceAsyncWaiter"* nocapture readonly, %"class.mojo::StructPtr"* nocapture, i32*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RunLoop", align 8
  %5 = alloca %"class.mojo::StructPtr", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = ptrtoint i32* %2 to i64
  %9 = bitcast %"class.base::RunLoop"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %4, i32 0) #10
  %10 = getelementptr inbounds %"class.blink::mojom::blink::PermissionServiceAsyncWaiter", %"class.blink::mojom::blink::PermissionServiceAsyncWaiter"* %0, i64 0, i32 0
  %11 = load %"class.blink::mojom::blink::PermissionService"*, %"class.blink::mojom::blink::PermissionService"** %10, align 8
  %12 = bitcast %"class.mojo::StructPtr"* %5 to i64*
  %13 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %12, align 8
  store i64 0, i64* %14, align 8
  %16 = ptrtoint %"class.base::RunLoop"* %4 to i64
  %17 = call i8* @_Znwm(i64 56) #11, !noalias !19
  %18 = bitcast i8* %17 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %18, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink28PermissionServiceAsyncWaiter16RevokePermissionEN4mojo9StructPtrINS5_20PermissionDescriptorEEEPNS4_16PermissionStatusEE3$_3JPNS_7RunLoopESC_EEEFvSB_EE7RunOnceEPNS0_13BindStateBaseESB_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink28PermissionServiceAsyncWaiter16RevokePermissionEN4mojo9StructPtrINS4_20PermissionDescriptorEEEPNS3_16PermissionStatusEE3$_3JPNS_7RunLoopESB_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !19
  %19 = getelementptr inbounds i8, i8* %17, i64 40
  %20 = bitcast i8* %19 to i64*
  store i64 %16, i64* %20, align 8, !noalias !19
  %21 = getelementptr inbounds i8, i8* %17, i64 48
  %22 = bitcast i8* %21 to i64*
  store i64 %8, i64* %22, align 8, !noalias !19
  %23 = bitcast %"class.base::OnceCallback"* %6 to i8**
  store i8* %17, i8** %23, align 8, !alias.scope !19
  %24 = bitcast %"class.blink::mojom::blink::PermissionService"* %11 to void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)***
  %25 = load void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)** %25, i64 5
  %27 = load void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::PermissionService"*, %"class.mojo::StructPtr"*, %"class.base::OnceCallback"*)** %26, align 8
  call void %27(%"class.blink::mojom::blink::PermissionService"* %11, %"class.mojo::StructPtr"* nonnull %5, %"class.base::OnceCallback"* nonnull %6) #10
  %28 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %28) #10
  %29 = load %"class.blink::mojom::blink::PermissionDescriptor"*, %"class.blink::mojom::blink::PermissionDescriptor"** %13, align 8
  store %"class.blink::mojom::blink::PermissionDescriptor"* null, %"class.blink::mojom::blink::PermissionDescriptor"** %13, align 8
  %30 = icmp eq %"class.blink::mojom::blink::PermissionDescriptor"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %3
  call void @_ZN5blink5mojom5blink20PermissionDescriptorD1Ev(%"class.blink::mojom::blink::PermissionDescriptor"* nonnull %29) #10
  %32 = bitcast %"class.blink::mojom::blink::PermissionDescriptor"* %29 to i8*
  call void @_ZdlPv(i8* %32) #11
  br label %33

33:                                               ; preds = %3, %31
  %34 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %34) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.1, i64 0, i64 0), i32 122) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %7) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %34) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink18PermissionObserverD2Ev(%"class.blink::mojom::blink::PermissionObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink39PermissionObserverInterceptorForTestingD0Ev(%"class.blink::mojom::blink::PermissionObserverInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink17PermissionServiceD2Ev(%"class.blink::mojom::blink::PermissionService"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink38PermissionServiceInterceptorForTestingD0Ev(%"class.blink::mojom::blink::PermissionServiceInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink20PermissionDescriptorD1Ev(%"class.blink::mojom::blink::PermissionDescriptor"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"*, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink28PermissionServiceAsyncWaiter13HasPermissionEN4mojo9StructPtrINS5_20PermissionDescriptorEEEPNS4_16PermissionStatusEE3$_0JPNS_7RunLoopESC_EEEFvSB_EE7RunOnceEPNS0_13BindStateBaseESB_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to i32**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load i32*, i32** %6, align 8
  store i32 %1, i32* %8, align 4
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #10
  ret void
}

declare void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink28PermissionServiceAsyncWaiter13HasPermissionEN4mojo9StructPtrINS4_20PermissionDescriptorEEEPNS3_16PermissionStatusEE3$_0JPNS_7RunLoopESB_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink28PermissionServiceAsyncWaiter17RequestPermissionEN4mojo9StructPtrINS5_20PermissionDescriptorEEEbPNS4_16PermissionStatusEE3$_1JPNS_7RunLoopESC_EEEFvSB_EE7RunOnceEPNS0_13BindStateBaseESB_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to i32**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load i32*, i32** %6, align 8
  store i32 %1, i32* %8, align 4
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink28PermissionServiceAsyncWaiter17RequestPermissionEN4mojo9StructPtrINS4_20PermissionDescriptorEEEbPNS3_16PermissionStatusEE3$_1JPNS_7RunLoopESB_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink28PermissionServiceAsyncWaiter18RequestPermissionsEN3WTF6VectorIN4mojo9StructPtrINS5_20PermissionDescriptorEEELj0ENS7_18PartitionAllocatorEEEbPNS8_INS4_16PermissionStatusELj0ESD_EEE3$_2JPNS_7RunLoopESH_EEEFvRKSG_EE7RunOnceEPNS0_13BindStateBaseESN_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.WTF::Vector.33"* dereferenceable(16)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to %"class.WTF::Vector.33"**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load %"class.WTF::Vector.33"*, %"class.WTF::Vector.33"** %6, align 8
  %9 = tail call dereferenceable(16) %"class.WTF::Vector.33"* @_ZN3WTF6VectorIN5blink5mojom16PermissionStatusELj0ENS_18PartitionAllocatorEEaSERKS5_(%"class.WTF::Vector.33"* %8, %"class.WTF::Vector.33"* dereferenceable(16) %1) #10
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.33"* @_ZN3WTF6VectorIN5blink5mojom16PermissionStatusELj0ENS_18PartitionAllocatorEEaSERKS5_(%"class.WTF::Vector.33"*, %"class.WTF::Vector.33"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector.33"* %1, %0
  br i1 %3, label %90, label %4, !prof !3

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.33", %"class.WTF::Vector.33"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector.33", %"class.WTF::Vector.33"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %11

10:                                               ; preds = %4
  store i32 %8, i32* %5, align 4
  br label %60

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.WTF::Vector.33", %"class.WTF::Vector.33"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp ugt i32 %8, %13
  br i1 %14, label %15, label %60

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %15
  %18 = icmp eq i32 %6, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %17
  store i32 0, i32* %5, align 4
  br label %20

20:                                               ; preds = %19, %17
  %21 = bitcast %"class.WTF::Vector.33"* %0 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"class.WTF::Vector.33"* %0 to i64*
  store atomic i64 0, i64* %23 monotonic, align 8
  store i32 0, i32* %12, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %22) #10
  %24 = load i32, i32* %7, align 4
  %25 = load i32, i32* %12, align 8
  br label %26

26:                                               ; preds = %15, %20
  %27 = phi i32 [ 0, %15 ], [ %25, %20 ]
  %28 = phi i32 [ %8, %15 ], [ %24, %20 ]
  %29 = icmp ult i32 %27, %28
  br i1 %29, label %30, label %60, !prof !2

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.WTF::Vector.33", %"class.WTF::Vector.33"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = icmp eq i32* %32, null
  %34 = zext i32 %28 to i64
  %35 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink5mojom16PermissionStatusEEEmm(i64 %34) #10
  %36 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %35, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5mojom16PermissionStatusEEEPKcv, i64 0, i64 0)) #10
  br i1 %33, label %37, label %42

37:                                               ; preds = %30
  %38 = ptrtoint i8* %36 to i64
  %39 = bitcast %"class.WTF::Vector.33"* %0 to i64*
  store atomic i64 %38, i64* %39 monotonic, align 8
  %40 = lshr i64 %35, 2
  %41 = trunc i64 %40 to i32
  store i32 %41, i32* %12, align 8
  br label %60

42:                                               ; preds = %30
  %43 = lshr i64 %35, 2
  %44 = ptrtoint i8* %36 to i64
  %45 = load i32*, i32** %31, align 8
  %46 = icmp ne i8* %36, null
  %47 = icmp ne i32* %45, null
  %48 = and i1 %46, %47
  %49 = bitcast i32* %45 to i8*
  br i1 %48, label %50, label %56, !prof !2

50:                                               ; preds = %42
  %51 = load i32, i32* %5, align 4
  %52 = zext i32 %51 to i64
  %53 = shl nuw nsw i64 %52, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %36, i8* nonnull align 4 %49, i64 %53, i1 false) #10
  %54 = bitcast %"class.WTF::Vector.33"* %0 to i8**
  %55 = load i8*, i8** %54, align 8
  br label %56

56:                                               ; preds = %50, %42
  %57 = phi i8* [ %55, %50 ], [ %49, %42 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %57) #10
  %58 = bitcast %"class.WTF::Vector.33"* %0 to i64*
  store atomic i64 %44, i64* %58 monotonic, align 8
  %59 = trunc i64 %43 to i32
  store i32 %59, i32* %12, align 8
  br label %60

60:                                               ; preds = %56, %37, %26, %11, %10
  %61 = getelementptr inbounds %"class.WTF::Vector.33", %"class.WTF::Vector.33"* %1, i64 0, i32 0, i32 0, i32 0
  %62 = bitcast %"class.WTF::Vector.33"* %1 to i8**
  %63 = load i8*, i8** %62, align 8
  %64 = load i32, i32* %5, align 4
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds %"class.WTF::Vector.33", %"class.WTF::Vector.33"* %0, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"class.WTF::Vector.33"* %0 to i8**
  %68 = load i8*, i8** %67, align 8
  %69 = shl nuw nsw i64 %65, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %68, i8* align 4 %63, i64 %69, i1 false) #10
  %70 = load i32*, i32** %61, align 8
  %71 = load i32, i32* %5, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds i32, i32* %70, i64 %72
  %74 = load i32*, i32** %66, align 8
  %75 = getelementptr inbounds i32, i32* %74, i64 %72
  %76 = icmp ne i32* %75, null
  %77 = icmp ne i32* %73, null
  %78 = and i1 %77, %76
  br i1 %78, label %79, label %88, !prof !2

79:                                               ; preds = %60
  %80 = load i32, i32* %7, align 4
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds i32, i32* %70, i64 %81
  %83 = bitcast i32* %75 to i8*
  %84 = bitcast i32* %73 to i8*
  %85 = ptrtoint i32* %82 to i64
  %86 = ptrtoint i32* %73 to i64
  %87 = sub i64 %85, %86
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %83, i8* nonnull align 4 %84, i64 %87, i1 false) #10
  br label %88

88:                                               ; preds = %60, %79
  %89 = load i32, i32* %7, align 4
  store i32 %89, i32* %5, align 4
  br label %90

90:                                               ; preds = %2, %88
  ret %"class.WTF::Vector.33"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink5mojom16PermissionStatusEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.6, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #5

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink28PermissionServiceAsyncWaiter18RequestPermissionsEN3WTF6VectorIN4mojo9StructPtrINS4_20PermissionDescriptorEEELj0ENS6_18PartitionAllocatorEEEbPNS7_INS3_16PermissionStatusELj0ESC_EEE3$_2JPNS_7RunLoopESG_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink28PermissionServiceAsyncWaiter16RevokePermissionEN4mojo9StructPtrINS5_20PermissionDescriptorEEEPNS4_16PermissionStatusEE3$_3JPNS_7RunLoopESC_EEEFvSB_EE7RunOnceEPNS0_13BindStateBaseESB_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to i32**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load i32*, i32** %6, align 8
  store i32 %1, i32* %8, align 4
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink28PermissionServiceAsyncWaiter16RevokePermissionEN4mojo9StructPtrINS4_20PermissionDescriptorEEEPNS3_16PermissionStatusEE3$_3JPNS_7RunLoopESB_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5, !7}
!5 = distinct !{!5, !6, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink28PermissionServiceAsyncWaiter13HasPermissionEN4mojo9StructPtrINS5_20PermissionDescriptorEEEPNS4_16PermissionStatusEE3$_0JPNS_7RunLoopERSC_EEEDcOT0_DpOT1_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink28PermissionServiceAsyncWaiter13HasPermissionEN4mojo9StructPtrINS5_20PermissionDescriptorEEEPNS4_16PermissionStatusEE3$_0JPNS_7RunLoopERSC_EEEDcOT0_DpOT1_"}
!7 = distinct !{!7, !8, !"_ZN4base8BindOnceIZN5blink5mojom5blink28PermissionServiceAsyncWaiter13HasPermissionEN4mojo9StructPtrINS3_20PermissionDescriptorEEEPNS2_16PermissionStatusEE3$_0JPNS_7RunLoopERSA_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_: argument 0"}
!8 = distinct !{!8, !"_ZN4base8BindOnceIZN5blink5mojom5blink28PermissionServiceAsyncWaiter13HasPermissionEN4mojo9StructPtrINS3_20PermissionDescriptorEEEPNS2_16PermissionStatusEE3$_0JPNS_7RunLoopERSA_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_"}
!9 = !{!10, !12}
!10 = distinct !{!10, !11, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink28PermissionServiceAsyncWaiter17RequestPermissionEN4mojo9StructPtrINS5_20PermissionDescriptorEEEbPNS4_16PermissionStatusEE3$_1JPNS_7RunLoopERSC_EEEDcOT0_DpOT1_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink28PermissionServiceAsyncWaiter17RequestPermissionEN4mojo9StructPtrINS5_20PermissionDescriptorEEEbPNS4_16PermissionStatusEE3$_1JPNS_7RunLoopERSC_EEEDcOT0_DpOT1_"}
!12 = distinct !{!12, !13, !"_ZN4base8BindOnceIZN5blink5mojom5blink28PermissionServiceAsyncWaiter17RequestPermissionEN4mojo9StructPtrINS3_20PermissionDescriptorEEEbPNS2_16PermissionStatusEE3$_1JPNS_7RunLoopERSA_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_: argument 0"}
!13 = distinct !{!13, !"_ZN4base8BindOnceIZN5blink5mojom5blink28PermissionServiceAsyncWaiter17RequestPermissionEN4mojo9StructPtrINS3_20PermissionDescriptorEEEbPNS2_16PermissionStatusEE3$_1JPNS_7RunLoopERSA_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_"}
!14 = !{!15, !17}
!15 = distinct !{!15, !16, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink28PermissionServiceAsyncWaiter18RequestPermissionsEN3WTF6VectorIN4mojo9StructPtrINS5_20PermissionDescriptorEEELj0ENS7_18PartitionAllocatorEEEbPNS8_INS4_16PermissionStatusELj0ESD_EEE3$_2JPNS_7RunLoopERSH_EEEDcOT0_DpOT1_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink28PermissionServiceAsyncWaiter18RequestPermissionsEN3WTF6VectorIN4mojo9StructPtrINS5_20PermissionDescriptorEEELj0ENS7_18PartitionAllocatorEEEbPNS8_INS4_16PermissionStatusELj0ESD_EEE3$_2JPNS_7RunLoopERSH_EEEDcOT0_DpOT1_"}
!17 = distinct !{!17, !18, !"_ZN4base8BindOnceIZN5blink5mojom5blink28PermissionServiceAsyncWaiter18RequestPermissionsEN3WTF6VectorIN4mojo9StructPtrINS3_20PermissionDescriptorEEELj0ENS5_18PartitionAllocatorEEEbPNS6_INS2_16PermissionStatusELj0ESB_EEE3$_2JPNS_7RunLoopERSF_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSN_DpOSO_: argument 0"}
!18 = distinct !{!18, !"_ZN4base8BindOnceIZN5blink5mojom5blink28PermissionServiceAsyncWaiter18RequestPermissionsEN3WTF6VectorIN4mojo9StructPtrINS3_20PermissionDescriptorEEELj0ENS5_18PartitionAllocatorEEEbPNS6_INS2_16PermissionStatusELj0ESB_EEE3$_2JPNS_7RunLoopERSF_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSN_DpOSO_"}
!19 = !{!20, !22}
!20 = distinct !{!20, !21, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink28PermissionServiceAsyncWaiter16RevokePermissionEN4mojo9StructPtrINS5_20PermissionDescriptorEEEPNS4_16PermissionStatusEE3$_3JPNS_7RunLoopERSC_EEEDcOT0_DpOT1_: argument 0"}
!21 = distinct !{!21, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink28PermissionServiceAsyncWaiter16RevokePermissionEN4mojo9StructPtrINS5_20PermissionDescriptorEEEPNS4_16PermissionStatusEE3$_3JPNS_7RunLoopERSC_EEEDcOT0_DpOT1_"}
!22 = distinct !{!22, !23, !"_ZN4base8BindOnceIZN5blink5mojom5blink28PermissionServiceAsyncWaiter16RevokePermissionEN4mojo9StructPtrINS3_20PermissionDescriptorEEEPNS2_16PermissionStatusEE3$_3JPNS_7RunLoopERSA_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_: argument 0"}
!23 = distinct !{!23, !"_ZN4base8BindOnceIZN5blink5mojom5blink28PermissionServiceAsyncWaiter16RevokePermissionEN4mojo9StructPtrINS3_20PermissionDescriptorEEEPNS2_16PermissionStatusEE3$_3JPNS_7RunLoopERSA_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_"}
