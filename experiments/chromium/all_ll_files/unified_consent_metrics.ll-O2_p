; ModuleID = '../../components/unified_consent/unified_consent_metrics.cc'
source_filename = "../../components/unified_consent/unified_consent_metrics.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.PrefService = type { i32 (...)**, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.1", %class.scoped_refptr.21, %"class.base::RepeatingCallback.22", %class.scoped_refptr.23, %"class.std::__1::unordered_map" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.PrefNotifierImpl* }
%class.PrefNotifierImpl = type opaque
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %class.PrefValueStore* }
%class.PrefValueStore = type { i32 (...)**, [7 x %"class.PrefValueStore::PrefStoreKeeper"], %"class.base::RepeatingCallback", %class.PrefNotifier*, %"class.std::__1::map", i8, %"class.std::__1::unique_ptr.12" }
%"class.PrefValueStore::PrefStoreKeeper" = type <{ %"class.PrefStore::Observer", %class.PrefValueStore*, %class.scoped_refptr, i32, [4 x i8] }>
%"class.PrefStore::Observer" = type { i32 (...)** }
%class.scoped_refptr = type { %class.PrefStore* }
%class.PrefStore = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.4 }
%class.scoped_refptr.4 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.PrefNotifier = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i64 }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.PrefValueStore::Delegate"* }
%"class.PrefValueStore::Delegate" = type { i32 (...)** }
%class.scoped_refptr.21 = type { %class.PersistentPrefStore* }
%class.PersistentPrefStore = type { %class.WriteablePrefStore.base, [4 x i8] }
%class.WriteablePrefStore.base = type { %class.PrefStore.base }
%class.PrefStore.base = type <{ i32 (...)**, %"class.base::RefCounted" }>
%"class.base::RepeatingCallback.22" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.23 = type { %class.PrefRegistry* }
%class.PrefRegistry = type opaque
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.24", %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.39", [4 x i8] }>
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26", %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { float }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.52", [4 x i8] }>
%"struct.std::__1::atomic.52" = type { %"struct.std::__1::__atomic_base.53" }
%"struct.std::__1::__atomic_base.53" = type { %"struct.std::__1::__atomic_base.54" }
%"struct.std::__1::__atomic_base.54" = type { %"struct.std::__1::__cxx_atomic_impl.55" }
%"struct.std::__1::__cxx_atomic_impl.55" = type { %"struct.std::__1::__cxx_atomic_base_impl.56" }
%"struct.std::__1::__cxx_atomic_base_impl.56" = type { i32 }
%"class.syncer::SyncUserSettings" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.57" }
%"struct.std::__1::pair" = type { i32, i32 }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.std::__1::pair"* }
%"class.std::__1::__vector_base_common" = type { i8 }

@_ZN15unified_consent5prefs40kUrlKeyedAnonymizedDataCollectionEnabledE = external constant [0 x i8], align 1
@.str = private unnamed_addr constant [55 x i8] c"UnifiedConsent.MakeSearchesAndBrowsingBetter.OnStartup\00", align 1
@.str.2 = private unnamed_addr constant [81 x i8] c"UnifiedConsent.SyncAndGoogleServicesSettings.AfterAdvancedOptIn.SyncDataTypesOff\00", align 1
@_ZZN15unified_consent7metrics23RecordSettingsHistogramEP11PrefServiceE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN15unified_consent7metrics12_GLOBAL__N_124RecordSyncDataTypeSampleENS1_12SyncDataTypeEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15unified_consent7metrics23RecordSettingsHistogramEP11PrefService(%class.PrefService*) local_unnamed_addr #0 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #8
  %4 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN15unified_consent5prefs40kUrlKeyedAnonymizedDataCollectionEnabledE, i64 0, i64 0)) #8
  %5 = icmp ugt i64 %4, -17
  br i1 %5, label %6, label %8

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %7) #9
  unreachable

8:                                                ; preds = %1
  %9 = icmp ult i64 %4, 23
  br i1 %9, label %19, label %10

10:                                               ; preds = %8
  %11 = add nuw i64 %4, 16
  %12 = and i64 %11, -16
  %13 = tail call i8* @_Znwm(i64 %12) #10
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %13, i8** %14, align 8
  %15 = or i64 %12, -9223372036854775808
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %4, i64* %17, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %24

19:                                               ; preds = %8
  %20 = trunc i64 %4 to i8
  %21 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  store i8 %20, i8* %22, align 1
  %23 = icmp eq i64 %4, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %19, %10
  %25 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %21, %19 ], [ %18, %10 ]
  %26 = phi i8* [ %3, %19 ], [ %13, %10 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN15unified_consent5prefs40kUrlKeyedAnonymizedDataCollectionEnabledE, i64 0, i64 0), i64 %4, i1 false) #8
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %21, %19 ], [ %25, %24 ]
  %29 = phi i8* [ %3, %19 ], [ %26, %24 ]
  %30 = getelementptr inbounds i8, i8* %29, i64 %4
  store i8 0, i8* %30, align 1
  %31 = call zeroext i1 @_ZNK11PrefService10GetBooleanERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #8
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %37) #10
  br label %38

38:                                               ; preds = %27, %35
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #8
  %39 = load atomic i64, i64* @_ZZN15unified_consent7metrics23RecordSettingsHistogramEP11PrefServiceE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %40 = inttoptr i64 %39 to %"class.base::HistogramBase"*
  %41 = icmp eq i64 %39, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %38
  %43 = call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1) #8
  %44 = ptrtoint %"class.base::HistogramBase"* %43 to i64
  store atomic i64 %44, i64* @_ZZN15unified_consent7metrics23RecordSettingsHistogramEP11PrefServiceE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %45

45:                                               ; preds = %38, %42
  %46 = phi %"class.base::HistogramBase"* [ %40, %38 ], [ %43, %42 ]
  call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %46, i1 zeroext %31) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK11PrefService10GetBooleanERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8*, i32) local_unnamed_addr #2

declare void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15unified_consent7metrics33RecordSyncSetupDataTypesHistrogamEPN6syncer16SyncUserSettingsEP11PrefService(%"class.syncer::SyncUserSettings"*, %class.PrefService*) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast %"struct.std::__1::pair"** %6 to i64*
  %9 = bitcast %"class.std::__1::vector"* %3 to i64*
  %10 = bitcast %"struct.std::__1::pair"** %7 to i64*
  %11 = tail call i8* @_Znwm(i64 8) #10
  %12 = bitcast i8* %11 to i32*
  store i32 2, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %11, i64 4
  %14 = bitcast i8* %13 to i32*
  store i32 0, i32* %14, align 4
  %15 = tail call i8* @_Znwm(i64 16) #10
  %16 = getelementptr inbounds i8, i8* %15, i64 8
  %17 = bitcast i8* %16 to i32*
  store i32 4, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %15, i64 12
  %19 = bitcast i8* %18 to i32*
  store i32 5, i32* %19, align 4
  %20 = bitcast i8* %11 to i64*
  %21 = bitcast i8* %15 to i64*
  %22 = load i64, i64* %20, align 4
  store i64 %22, i64* %21, align 4
  tail call void @_ZdlPv(i8* nonnull %11) #10
  %23 = tail call i8* @_Znwm(i64 32) #10
  %24 = getelementptr inbounds i8, i8* %23, i64 16
  %25 = bitcast i8* %24 to i32*
  store i32 5, i32* %25, align 4
  %26 = getelementptr inbounds i8, i8* %23, i64 20
  %27 = bitcast i8* %26 to i32*
  store i32 1, i32* %27, align 4
  %28 = getelementptr inbounds i8, i8* %23, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %23, i8* nonnull align 4 %15, i64 16, i1 false) #8
  tail call void @_ZdlPv(i8* nonnull %15) #10
  %29 = bitcast i8* %28 to i32*
  store i32 7, i32* %29, align 4
  %30 = getelementptr inbounds i8, i8* %23, i64 28
  %31 = bitcast i8* %30 to i32*
  store i32 9, i32* %31, align 4
  %32 = tail call i8* @_Znwm(i64 64) #10
  %33 = getelementptr inbounds i8, i8* %32, i64 64
  %34 = ptrtoint i8* %33 to i64
  %35 = getelementptr inbounds i8, i8* %32, i64 32
  %36 = bitcast i8* %35 to i32*
  store i32 8, i32* %36, align 4
  %37 = getelementptr inbounds i8, i8* %32, i64 36
  %38 = bitcast i8* %37 to i32*
  store i32 2, i32* %38, align 4
  %39 = getelementptr inbounds i8, i8* %32, i64 40
  %40 = ptrtoint i8* %39 to i64
  %41 = ptrtoint i8* %32 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %32, i8* nonnull align 4 %23, i64 32, i1 false) #8
  store i64 %41, i64* %9, align 8
  store i64 %40, i64* %8, align 8
  store i64 %34, i64* %10, align 8
  tail call void @_ZdlPv(i8* nonnull %23) #10
  %42 = bitcast i8* %39 to i32*
  store i32 9, i32* %42, align 4
  %43 = getelementptr inbounds i8, i8* %32, i64 44
  %44 = bitcast i8* %43 to i32*
  store i32 3, i32* %44, align 4
  %45 = getelementptr inbounds i8, i8* %32, i64 48
  %46 = ptrtoint i8* %45 to i64
  store i64 %46, i64* %8, align 8
  %47 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %7, align 8
  %48 = ptrtoint %"struct.std::__1::pair"* %47 to i64
  %49 = bitcast i8* %45 to %"struct.std::__1::pair"*
  %50 = icmp ugt %"struct.std::__1::pair"* %47, %49
  br i1 %50, label %51, label %60

51:                                               ; preds = %2
  %52 = bitcast i8* %45 to i32*
  store i32 1, i32* %52, align 4
  %53 = getelementptr inbounds i8, i8* %32, i64 52
  %54 = bitcast i8* %53 to i32*
  store i32 7, i32* %54, align 4
  %55 = getelementptr inbounds i8, i8* %32, i64 56
  %56 = bitcast i8* %55 to %"struct.std::__1::pair"*
  %57 = ptrtoint i8* %55 to i64
  store i64 %57, i64* %8, align 8
  %58 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %7, align 8
  %59 = ptrtoint %"struct.std::__1::pair"* %58 to i64
  br label %109

60:                                               ; preds = %2
  %61 = ptrtoint i8* %45 to i64
  %62 = load i64, i64* %9, align 8
  %63 = sub i64 %61, %62
  %64 = ashr exact i64 %63, 3
  %65 = add nsw i64 %64, 1
  %66 = icmp ugt i64 %65, 2305843009213693951
  br i1 %66, label %67, label %69

67:                                               ; preds = %60
  %68 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %68) #9
  unreachable

69:                                               ; preds = %60
  %70 = sub i64 %48, %62
  %71 = ashr exact i64 %70, 3
  %72 = icmp ult i64 %71, 1152921504606846975
  br i1 %72, label %73, label %81

73:                                               ; preds = %69
  %74 = ashr exact i64 %70, 2
  %75 = icmp ult i64 %74, %65
  %76 = select i1 %75, i64 %65, i64 %74
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %86, label %78

78:                                               ; preds = %73
  %79 = icmp ugt i64 %76, 2305843009213693951
  br i1 %79, label %80, label %81

80:                                               ; preds = %78
  tail call void @abort() #9
  unreachable

81:                                               ; preds = %78, %69
  %82 = phi i64 [ %76, %78 ], [ 2305843009213693951, %69 ]
  %83 = shl i64 %82, 3
  %84 = tail call i8* @_Znwm(i64 %83) #10
  %85 = bitcast i8* %84 to %"struct.std::__1::pair"*
  br label %86

86:                                               ; preds = %81, %73
  %87 = phi i64 [ %82, %81 ], [ 0, %73 ]
  %88 = phi %"struct.std::__1::pair"* [ %85, %81 ], [ null, %73 ]
  %89 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %88, i64 %64
  %90 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %88, i64 %87
  %91 = ptrtoint %"struct.std::__1::pair"* %90 to i64
  %92 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %89, i64 0, i32 0
  store i32 1, i32* %92, align 4
  %93 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %88, i64 %64, i32 1
  store i32 7, i32* %93, align 4
  %94 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %89, i64 1
  %95 = ptrtoint %"struct.std::__1::pair"* %94 to i64
  %96 = sub i64 %46, %62
  %97 = ashr exact i64 %96, 3
  %98 = sub nsw i64 0, %97
  %99 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %89, i64 %98
  %100 = ptrtoint %"struct.std::__1::pair"* %99 to i64
  %101 = icmp sgt i64 %96, 0
  br i1 %101, label %102, label %105

102:                                              ; preds = %86
  %103 = bitcast %"struct.std::__1::pair"* %99 to i8*
  %104 = inttoptr i64 %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %103, i8* align 4 %104, i64 %96, i1 false) #8
  br label %105

105:                                              ; preds = %102, %86
  store i64 %100, i64* %9, align 8
  store i64 %95, i64* %8, align 8
  store i64 %91, i64* %10, align 8
  %106 = icmp eq i64 %62, 0
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = inttoptr i64 %62 to i8*
  tail call void @_ZdlPv(i8* %108) #10
  br label %109

109:                                              ; preds = %107, %105, %51
  %110 = phi i64 [ %59, %51 ], [ %91, %105 ], [ %91, %107 ]
  %111 = phi i64 [ %57, %51 ], [ %95, %105 ], [ %95, %107 ]
  %112 = phi %"struct.std::__1::pair"* [ %58, %51 ], [ %90, %105 ], [ %90, %107 ]
  %113 = phi %"struct.std::__1::pair"* [ %56, %51 ], [ %94, %105 ], [ %94, %107 ]
  %114 = icmp ult %"struct.std::__1::pair"* %113, %112
  br i1 %114, label %115, label %122

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %113, i64 0, i32 0
  store i32 3, i32* %116, align 4
  %117 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %113, i64 0, i32 1
  store i32 6, i32* %117, align 4
  %118 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %113, i64 1
  %119 = ptrtoint %"struct.std::__1::pair"* %118 to i64
  store i64 %119, i64* %8, align 8
  %120 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %7, align 8
  %121 = ptrtoint %"struct.std::__1::pair"* %120 to i64
  br label %171

122:                                              ; preds = %109
  %123 = ptrtoint %"struct.std::__1::pair"* %113 to i64
  %124 = load i64, i64* %9, align 8
  %125 = sub i64 %123, %124
  %126 = ashr exact i64 %125, 3
  %127 = add nsw i64 %126, 1
  %128 = icmp ugt i64 %127, 2305843009213693951
  br i1 %128, label %129, label %131

129:                                              ; preds = %122
  %130 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %130) #9
  unreachable

131:                                              ; preds = %122
  %132 = sub i64 %110, %124
  %133 = ashr exact i64 %132, 3
  %134 = icmp ult i64 %133, 1152921504606846975
  br i1 %134, label %135, label %143

135:                                              ; preds = %131
  %136 = ashr exact i64 %132, 2
  %137 = icmp ult i64 %136, %127
  %138 = select i1 %137, i64 %127, i64 %136
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %148, label %140

140:                                              ; preds = %135
  %141 = icmp ugt i64 %138, 2305843009213693951
  br i1 %141, label %142, label %143

142:                                              ; preds = %140
  tail call void @abort() #9
  unreachable

143:                                              ; preds = %140, %131
  %144 = phi i64 [ %138, %140 ], [ 2305843009213693951, %131 ]
  %145 = shl i64 %144, 3
  %146 = tail call i8* @_Znwm(i64 %145) #10
  %147 = bitcast i8* %146 to %"struct.std::__1::pair"*
  br label %148

148:                                              ; preds = %143, %135
  %149 = phi i64 [ %144, %143 ], [ 0, %135 ]
  %150 = phi %"struct.std::__1::pair"* [ %147, %143 ], [ null, %135 ]
  %151 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %150, i64 %126
  %152 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %150, i64 %149
  %153 = ptrtoint %"struct.std::__1::pair"* %152 to i64
  %154 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %151, i64 0, i32 0
  store i32 3, i32* %154, align 4
  %155 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %150, i64 %126, i32 1
  store i32 6, i32* %155, align 4
  %156 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %151, i64 1
  %157 = ptrtoint %"struct.std::__1::pair"* %156 to i64
  %158 = sub i64 %111, %124
  %159 = ashr exact i64 %158, 3
  %160 = sub nsw i64 0, %159
  %161 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %151, i64 %160
  %162 = ptrtoint %"struct.std::__1::pair"* %161 to i64
  %163 = icmp sgt i64 %158, 0
  br i1 %163, label %164, label %167

164:                                              ; preds = %148
  %165 = bitcast %"struct.std::__1::pair"* %161 to i8*
  %166 = inttoptr i64 %124 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %165, i8* align 4 %166, i64 %158, i1 false) #8
  br label %167

167:                                              ; preds = %164, %148
  store i64 %162, i64* %9, align 8
  store i64 %157, i64* %8, align 8
  store i64 %153, i64* %10, align 8
  %168 = icmp eq i64 %124, 0
  br i1 %168, label %171, label %169

169:                                              ; preds = %167
  %170 = inttoptr i64 %124 to i8*
  tail call void @_ZdlPv(i8* %170) #10
  br label %171

171:                                              ; preds = %169, %167, %115
  %172 = phi i64 [ %121, %115 ], [ %153, %167 ], [ %153, %169 ]
  %173 = phi i64 [ %119, %115 ], [ %157, %167 ], [ %157, %169 ]
  %174 = phi %"struct.std::__1::pair"* [ %120, %115 ], [ %152, %167 ], [ %152, %169 ]
  %175 = phi %"struct.std::__1::pair"* [ %118, %115 ], [ %156, %167 ], [ %156, %169 ]
  %176 = icmp ult %"struct.std::__1::pair"* %175, %174
  br i1 %176, label %177, label %183

177:                                              ; preds = %171
  %178 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %175, i64 0, i32 0
  store i32 6, i32* %178, align 4
  %179 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %175, i64 0, i32 1
  store i32 4, i32* %179, align 4
  %180 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %175, i64 1
  %181 = ptrtoint %"struct.std::__1::pair"* %180 to i64
  store i64 %181, i64* %8, align 8
  %182 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %5, align 8
  br label %232

183:                                              ; preds = %171
  %184 = ptrtoint %"struct.std::__1::pair"* %175 to i64
  %185 = load i64, i64* %9, align 8
  %186 = sub i64 %184, %185
  %187 = ashr exact i64 %186, 3
  %188 = add nsw i64 %187, 1
  %189 = icmp ugt i64 %188, 2305843009213693951
  br i1 %189, label %190, label %192

190:                                              ; preds = %183
  %191 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %191) #9
  unreachable

192:                                              ; preds = %183
  %193 = sub i64 %172, %185
  %194 = ashr exact i64 %193, 3
  %195 = icmp ult i64 %194, 1152921504606846975
  br i1 %195, label %196, label %204

196:                                              ; preds = %192
  %197 = ashr exact i64 %193, 2
  %198 = icmp ult i64 %197, %188
  %199 = select i1 %198, i64 %188, i64 %197
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %209, label %201

201:                                              ; preds = %196
  %202 = icmp ugt i64 %199, 2305843009213693951
  br i1 %202, label %203, label %204

203:                                              ; preds = %201
  tail call void @abort() #9
  unreachable

204:                                              ; preds = %201, %192
  %205 = phi i64 [ %199, %201 ], [ 2305843009213693951, %192 ]
  %206 = shl i64 %205, 3
  %207 = tail call i8* @_Znwm(i64 %206) #10
  %208 = bitcast i8* %207 to %"struct.std::__1::pair"*
  br label %209

209:                                              ; preds = %204, %196
  %210 = phi i64 [ %205, %204 ], [ 0, %196 ]
  %211 = phi %"struct.std::__1::pair"* [ %208, %204 ], [ null, %196 ]
  %212 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %211, i64 %187
  %213 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %211, i64 %210
  %214 = ptrtoint %"struct.std::__1::pair"* %213 to i64
  %215 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %212, i64 0, i32 0
  store i32 6, i32* %215, align 4
  %216 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %211, i64 %187, i32 1
  store i32 4, i32* %216, align 4
  %217 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %212, i64 1
  %218 = ptrtoint %"struct.std::__1::pair"* %217 to i64
  %219 = sub i64 %173, %185
  %220 = ashr exact i64 %219, 3
  %221 = sub nsw i64 0, %220
  %222 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %212, i64 %221
  %223 = ptrtoint %"struct.std::__1::pair"* %222 to i64
  %224 = icmp sgt i64 %219, 0
  br i1 %224, label %225, label %228

225:                                              ; preds = %209
  %226 = bitcast %"struct.std::__1::pair"* %222 to i8*
  %227 = inttoptr i64 %185 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %226, i8* align 4 %227, i64 %219, i1 false) #8
  br label %228

228:                                              ; preds = %225, %209
  store i64 %223, i64* %9, align 8
  store i64 %218, i64* %8, align 8
  store i64 %214, i64* %10, align 8
  %229 = icmp eq i64 %185, 0
  br i1 %229, label %232, label %230

230:                                              ; preds = %228
  %231 = inttoptr i64 %185 to i8*
  tail call void @_ZdlPv(i8* %231) #10
  br label %232

232:                                              ; preds = %230, %228, %177
  %233 = phi %"struct.std::__1::pair"* [ %180, %177 ], [ %217, %228 ], [ %217, %230 ]
  %234 = phi %"struct.std::__1::pair"* [ %182, %177 ], [ %222, %228 ], [ %222, %230 ]
  %235 = icmp eq %"struct.std::__1::pair"* %234, %233
  br i1 %235, label %238, label %236

236:                                              ; preds = %232
  %237 = bitcast %"class.syncer::SyncUserSettings"* %0 to i64 (%"class.syncer::SyncUserSettings"*)***
  br label %241

238:                                              ; preds = %271, %232
  %239 = phi i8 [ 0, %232 ], [ %272, %271 ]
  %240 = tail call zeroext i1 @_ZN8autofill5prefs28IsPaymentsIntegrationEnabledEPK11PrefService(%class.PrefService* %1) #8
  br i1 %240, label %288, label %275

241:                                              ; preds = %271, %236
  %242 = phi i8 [ 0, %236 ], [ %272, %271 ]
  %243 = phi %"struct.std::__1::pair"* [ %234, %236 ], [ %273, %271 ]
  %244 = load i64 (%"class.syncer::SyncUserSettings"*)**, i64 (%"class.syncer::SyncUserSettings"*)*** %237, align 8
  %245 = getelementptr inbounds i64 (%"class.syncer::SyncUserSettings"*)*, i64 (%"class.syncer::SyncUserSettings"*)** %244, i64 7
  %246 = load i64 (%"class.syncer::SyncUserSettings"*)*, i64 (%"class.syncer::SyncUserSettings"*)** %245, align 8
  %247 = tail call i64 %246(%"class.syncer::SyncUserSettings"* %0) #8
  %248 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %243, i64 0, i32 1
  %249 = load i32, i32* %248, align 4
  %250 = icmp ult i32 %249, 11
  br i1 %250, label %251, label %256

251:                                              ; preds = %241
  %252 = sext i32 %249 to i64
  %253 = shl i64 1, %252
  %254 = and i64 %253, %247
  %255 = icmp eq i64 %254, 0
  br i1 %255, label %256, label %271

256:                                              ; preds = %251, %241
  %257 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %243, i64 0, i32 0
  %258 = load i32, i32* %257, align 4
  %259 = load atomic i64, i64* @_ZZN15unified_consent7metrics12_GLOBAL__N_124RecordSyncDataTypeSampleENS1_12SyncDataTypeEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %260 = inttoptr i64 %259 to %"class.base::HistogramBase"*
  %261 = icmp eq i64 %259, 0
  br i1 %261, label %262, label %265

262:                                              ; preds = %256
  %263 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.2, i64 0, i64 0), i32 1, i32 12, i32 13, i32 1) #8
  %264 = ptrtoint %"class.base::HistogramBase"* %263 to i64
  store atomic i64 %264, i64* @_ZZN15unified_consent7metrics12_GLOBAL__N_124RecordSyncDataTypeSampleENS1_12SyncDataTypeEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %265

265:                                              ; preds = %262, %256
  %266 = phi %"class.base::HistogramBase"* [ %260, %256 ], [ %263, %262 ]
  %267 = bitcast %"class.base::HistogramBase"* %266 to void (%"class.base::HistogramBase"*, i32)***
  %268 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %267, align 8
  %269 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %268, i64 6
  %270 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %269, align 8
  tail call void %270(%"class.base::HistogramBase"* %266, i32 %258) #8
  br label %271

271:                                              ; preds = %265, %251
  %272 = phi i8 [ 1, %265 ], [ %242, %251 ]
  %273 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %243, i64 1
  %274 = icmp eq %"struct.std::__1::pair"* %273, %233
  br i1 %274, label %238, label %241

275:                                              ; preds = %238
  %276 = load atomic i64, i64* @_ZZN15unified_consent7metrics12_GLOBAL__N_124RecordSyncDataTypeSampleENS1_12SyncDataTypeEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %277 = inttoptr i64 %276 to %"class.base::HistogramBase"*
  %278 = icmp eq i64 %276, 0
  br i1 %278, label %279, label %282

279:                                              ; preds = %275
  %280 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.2, i64 0, i64 0), i32 1, i32 12, i32 13, i32 1) #8
  %281 = ptrtoint %"class.base::HistogramBase"* %280 to i64
  store atomic i64 %281, i64* @_ZZN15unified_consent7metrics12_GLOBAL__N_124RecordSyncDataTypeSampleENS1_12SyncDataTypeEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %282

282:                                              ; preds = %279, %275
  %283 = phi %"class.base::HistogramBase"* [ %277, %275 ], [ %280, %279 ]
  %284 = bitcast %"class.base::HistogramBase"* %283 to void (%"class.base::HistogramBase"*, i32)***
  %285 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %284, align 8
  %286 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %285, i64 6
  %287 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %286, align 8
  tail call void %287(%"class.base::HistogramBase"* %283, i32 10) #8
  br label %288

288:                                              ; preds = %282, %238
  %289 = phi i8 [ %239, %238 ], [ 1, %282 ]
  %290 = and i8 %289, 1
  %291 = icmp eq i8 %290, 0
  %292 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %5, align 8
  %293 = icmp eq %"struct.std::__1::pair"* %292, null
  br i1 %293, label %297, label %294

294:                                              ; preds = %288
  %295 = ptrtoint %"struct.std::__1::pair"* %292 to i64
  store i64 %295, i64* %8, align 8
  %296 = bitcast %"struct.std::__1::pair"* %292 to i8*
  tail call void @_ZdlPv(i8* %296) #10
  br label %297

297:                                              ; preds = %288, %294
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8
  br i1 %291, label %298, label %311

298:                                              ; preds = %297
  %299 = load atomic i64, i64* @_ZZN15unified_consent7metrics12_GLOBAL__N_124RecordSyncDataTypeSampleENS1_12SyncDataTypeEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %300 = inttoptr i64 %299 to %"class.base::HistogramBase"*
  %301 = icmp eq i64 %299, 0
  br i1 %301, label %302, label %305

302:                                              ; preds = %298
  %303 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.2, i64 0, i64 0), i32 1, i32 12, i32 13, i32 1) #8
  %304 = ptrtoint %"class.base::HistogramBase"* %303 to i64
  store atomic i64 %304, i64* @_ZZN15unified_consent7metrics12_GLOBAL__N_124RecordSyncDataTypeSampleENS1_12SyncDataTypeEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %305

305:                                              ; preds = %298, %302
  %306 = phi %"class.base::HistogramBase"* [ %300, %298 ], [ %303, %302 ]
  %307 = bitcast %"class.base::HistogramBase"* %306 to void (%"class.base::HistogramBase"*, i32)***
  %308 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %307, align 8
  %309 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %308, i64 6
  %310 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %309, align 8
  tail call void %310(%"class.base::HistogramBase"* %306, i32 0) #8
  br label %311

311:                                              ; preds = %297, %305
  ret void
}

declare zeroext i1 @_ZN8autofill5prefs28IsPaymentsIntegrationEnabledEPK11PrefService(%class.PrefService*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
