; ModuleID = '../../third_party/libzip/src/lib/zip_source_layered.c'
source_filename = "../../third_party/libzip/src/lib/zip_source_layered.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.zip = type { %struct.zip_source*, i32, %struct.zip_error, i32, i32, i8*, %struct.zip_string*, %struct.zip_string*, i8, i64, i64, %struct.zip_entry*, i32, i32, %struct.zip_source**, %struct.zip_hash*, %struct.zip_progress* }
%struct.zip_error = type { i32, i32, i8* }
%struct.zip_string = type { i8*, i16, i32, i8*, i32 }
%struct.zip_entry = type { %struct.zip_dirent*, %struct.zip_dirent*, %struct.zip_source*, i8 }
%struct.zip_dirent = type { i32, i8, i8, i8, i16, i16, i16, i32, i64, i32, i64, i64, %struct.zip_string*, %struct.zip_extra_field*, %struct.zip_string*, i32, i16, i32, i64, i16, i16, i8* }
%struct.zip_extra_field = type { %struct.zip_extra_field*, i32, i16, i16, i8* }
%struct.zip_hash = type opaque
%struct.zip_progress = type opaque
%struct.zip_source = type { %struct.zip_source*, %union.anon, i8*, %struct.zip_error, i64, i32, i32, i8, %struct.zip*, i32, i8, i8 }
%union.anon = type { i64 (i8*, i8*, i64, i32)* }

; Function Attrs: nounwind ssp uwtable
define hidden %struct.zip_source* @zip_source_layered(%struct.zip*, %struct.zip_source*, i64 (%struct.zip_source*, i8*, i8*, i64, i32)*, i8*) local_unnamed_addr #0 {
  %5 = icmp eq %struct.zip* %0, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  %8 = tail call %struct.zip_source* @_zip_source_new(%struct.zip_error* %7) #2
  %9 = icmp eq %struct.zip_source* %8, null
  br i1 %9, label %19, label %10

10:                                               ; preds = %6
  tail call void @zip_source_keep(%struct.zip_source* %1) #2
  %11 = getelementptr inbounds %struct.zip_source, %struct.zip_source* %8, i64 0, i32 0
  store %struct.zip_source* %1, %struct.zip_source** %11, align 8
  %12 = getelementptr inbounds %struct.zip_source, %struct.zip_source* %8, i64 0, i32 1
  %13 = bitcast %union.anon* %12 to i64 (%struct.zip_source*, i8*, i8*, i64, i32)**
  store i64 (%struct.zip_source*, i8*, i8*, i64, i32)* %2, i64 (%struct.zip_source*, i8*, i8*, i64, i32)** %13, align 8
  %14 = getelementptr inbounds %struct.zip_source, %struct.zip_source* %8, i64 0, i32 2
  store i8* %3, i8** %14, align 8
  %15 = tail call i64 %2(%struct.zip_source* %1, i8* %3, i8* null, i64 0, i32 14) #2
  %16 = getelementptr inbounds %struct.zip_source, %struct.zip_source* %8, i64 0, i32 4
  %17 = icmp slt i64 %15, 0
  %18 = select i1 %17, i64 63, i64 %15
  store i64 %18, i64* %16, align 8
  br label %19

19:                                               ; preds = %10, %6, %4
  %20 = phi %struct.zip_source* [ null, %4 ], [ null, %6 ], [ %8, %10 ]
  ret %struct.zip_source* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.zip_source* @zip_source_layered_create(%struct.zip_source*, i64 (%struct.zip_source*, i8*, i8*, i64, i32)*, i8*, %struct.zip_error*) local_unnamed_addr #0 {
  %5 = tail call %struct.zip_source* @_zip_source_new(%struct.zip_error* %3) #2
  %6 = icmp eq %struct.zip_source* %5, null
  br i1 %6, label %16, label %7

7:                                                ; preds = %4
  tail call void @zip_source_keep(%struct.zip_source* %0) #2
  %8 = getelementptr inbounds %struct.zip_source, %struct.zip_source* %5, i64 0, i32 0
  store %struct.zip_source* %0, %struct.zip_source** %8, align 8
  %9 = getelementptr inbounds %struct.zip_source, %struct.zip_source* %5, i64 0, i32 1
  %10 = bitcast %union.anon* %9 to i64 (%struct.zip_source*, i8*, i8*, i64, i32)**
  store i64 (%struct.zip_source*, i8*, i8*, i64, i32)* %1, i64 (%struct.zip_source*, i8*, i8*, i64, i32)** %10, align 8
  %11 = getelementptr inbounds %struct.zip_source, %struct.zip_source* %5, i64 0, i32 2
  store i8* %2, i8** %11, align 8
  %12 = tail call i64 %1(%struct.zip_source* %0, i8* %2, i8* null, i64 0, i32 14) #2
  %13 = getelementptr inbounds %struct.zip_source, %struct.zip_source* %5, i64 0, i32 4
  %14 = icmp slt i64 %12, 0
  %15 = select i1 %14, i64 63, i64 %12
  store i64 %15, i64* %13, align 8
  br label %16

16:                                               ; preds = %4, %7
  ret %struct.zip_source* %5
}

declare %struct.zip_source* @_zip_source_new(%struct.zip_error*) local_unnamed_addr #1

declare void @zip_source_keep(%struct.zip_source*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
