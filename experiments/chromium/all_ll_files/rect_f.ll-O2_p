; ModuleID = '../../ui/gfx/geometry/rect_f.cc'
source_filename = "../../ui/gfx/geometry/rect_f.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::InsetsF" = type { float, float, float, float }
%"class.gfx::Vector2dF" = type { float, float }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@.str = private unnamed_addr constant [6 x i8] c"%s %s\00", align 1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gfx5RectF5InsetERKNS_7InsetsFE(%"class.gfx::RectF"* nocapture, %"class.gfx::InsetsF"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::InsetsF", %"class.gfx::InsetsF"* %1, i64 0, i32 1
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::InsetsF", %"class.gfx::InsetsF"* %1, i64 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = getelementptr inbounds %"class.gfx::InsetsF", %"class.gfx::InsetsF"* %1, i64 0, i32 3
  %8 = load float, float* %7, align 4
  %9 = getelementptr inbounds %"class.gfx::InsetsF", %"class.gfx::InsetsF"* %1, i64 0, i32 2
  %10 = load float, float* %9, align 4
  %11 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 0
  %12 = load float, float* %11, align 4
  %13 = fadd float %4, %12
  store float %13, float* %11, align 4
  %14 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 1
  %15 = load float, float* %14, align 4
  %16 = fadd float %6, %15
  store float %16, float* %14, align 4
  %17 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 0
  %18 = load float, float* %17, align 4
  %19 = fsub float %18, %4
  %20 = fsub float %19, %8
  %21 = fcmp olt float %20, 0.000000e+00
  %22 = select i1 %21, float 0.000000e+00, float %20
  %23 = fcmp ogt float %22, 0x3EB0000000000000
  %24 = select i1 %23, float %22, float 0.000000e+00
  store float %24, float* %17, align 4
  %25 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 1
  %26 = load float, float* %25, align 4
  %27 = fsub float %26, %6
  %28 = fsub float %27, %10
  %29 = fcmp olt float %28, 0.000000e+00
  %30 = select i1 %29, float 0.000000e+00, float %28
  %31 = fcmp ogt float %30, 0x3EB0000000000000
  %32 = select i1 %31, float %30, float 0.000000e+00
  store float %32, float* %25, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx5RectF5InsetEffff(%"class.gfx::RectF"* nocapture, float, float, float, float) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 0
  %7 = load float, float* %6, align 4
  %8 = fadd float %7, %1
  store float %8, float* %6, align 4
  %9 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 1
  %10 = load float, float* %9, align 4
  %11 = fadd float %10, %2
  store float %11, float* %9, align 4
  %12 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 0
  %13 = load float, float* %12, align 4
  %14 = fsub float %13, %1
  %15 = fsub float %14, %3
  %16 = fcmp olt float %15, 0.000000e+00
  %17 = select i1 %16, float 0.000000e+00, float %15
  %18 = fcmp ogt float %17, 0x3EB0000000000000
  %19 = select i1 %18, float %17, float 0.000000e+00
  store float %19, float* %12, align 4
  %20 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 1
  %21 = load float, float* %20, align 4
  %22 = fsub float %21, %2
  %23 = fsub float %22, %4
  %24 = fcmp olt float %23, 0.000000e+00
  %25 = select i1 %24, float 0.000000e+00, float %23
  %26 = fcmp ogt float %25, 0x3EB0000000000000
  %27 = select i1 %26, float %25, float 0.000000e+00
  store float %27, float* %20, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx5RectF6OffsetEff(%"class.gfx::RectF"* nocapture, float, float) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = fadd float %5, %1
  store float %6, float* %4, align 4
  %7 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 1
  %8 = load float, float* %7, align 4
  %9 = fadd float %8, %2
  store float %9, float* %7, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gfx5RectFpLERKNS_9Vector2dFE(%"class.gfx::RectF"* nocapture, %"class.gfx::Vector2dF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %1, i64 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = fadd float %4, %6
  store float %7, float* %5, align 4
  %8 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %1, i64 0, i32 1
  %9 = load float, float* %8, align 4
  %10 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 1
  %11 = load float, float* %10, align 4
  %12 = fadd float %9, %11
  store float %12, float* %10, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gfx5RectFmIERKNS_9Vector2dFE(%"class.gfx::RectF"* nocapture, %"class.gfx::Vector2dF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %1, i64 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = fsub float %6, %4
  store float %7, float* %5, align 4
  %8 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %1, i64 0, i32 1
  %9 = load float, float* %8, align 4
  %10 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 1
  %11 = load float, float* %10, align 4
  %12 = fsub float %11, %9
  store float %12, float* %10, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK3gfx5RectF10InsetsFromERKS0_(%"class.gfx::RectF"* nocapture readonly, %"class.gfx::RectF"* nocapture readonly dereferenceable(16)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 1
  %5 = bitcast float* %4 to <2 x float>*
  %6 = load <2 x float>, <2 x float>* %5, align 4
  %7 = bitcast float* %3 to <2 x float>*
  %8 = load <2 x float>, <2 x float>* %7, align 4
  %9 = extractelement <2 x float> %6, i32 0
  %10 = extractelement <2 x float> %8, i32 0
  %11 = fsub float %10, %9
  %12 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 0, i32 0
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 0
  %15 = load float, float* %14, align 4
  %16 = fsub float %13, %15
  %17 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 1
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 1, i32 1
  %20 = load float, float* %19, align 4
  %21 = insertelement <2 x float> undef, float %18, i32 0
  %22 = insertelement <2 x float> %21, float %15, i32 1
  %23 = fadd <2 x float> %6, %22
  %24 = insertelement <2 x float> undef, float %20, i32 0
  %25 = insertelement <2 x float> %24, float %13, i32 1
  %26 = fadd <2 x float> %8, %25
  %27 = fsub <2 x float> %23, %26
  %28 = insertelement <2 x float> undef, float %11, i32 0
  %29 = insertelement <2 x float> %28, float %16, i32 1
  %30 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %29, 0
  %31 = insertvalue { <2 x float>, <2 x float> } %30, <2 x float> %27, 1
  ret { <2 x float>, <2 x float> } %31
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gfx5RectFltERKS0_(%"class.gfx::RectF"* nocapture readonly, %"class.gfx::RectF"* nocapture readonly dereferenceable(16)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = fcmp une float %4, %6
  %8 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 1
  %9 = load float, float* %8, align 4
  %10 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 0, i32 1
  %11 = load float, float* %10, align 4
  %12 = fcmp une float %9, %11
  %13 = or i1 %7, %12
  br i1 %13, label %14, label %20

14:                                               ; preds = %2
  %15 = fcmp olt float %9, %11
  br i1 %15, label %34, label %16

16:                                               ; preds = %14
  %17 = fcmp olt float %11, %9
  br i1 %17, label %34, label %18

18:                                               ; preds = %16
  %19 = fcmp olt float %4, %6
  br label %34

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 0
  %22 = load float, float* %21, align 4
  %23 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 1, i32 0
  %24 = load float, float* %23, align 4
  %25 = fcmp oeq float %22, %24
  br i1 %25, label %26, label %32

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 1
  %28 = load float, float* %27, align 4
  %29 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 1, i32 1
  %30 = load float, float* %29, align 4
  %31 = fcmp olt float %28, %30
  br label %34

32:                                               ; preds = %20
  %33 = fcmp olt float %22, %24
  br label %34

34:                                               ; preds = %18, %16, %14, %32, %26
  %35 = phi i1 [ %31, %26 ], [ %33, %32 ], [ %19, %18 ], [ true, %14 ], [ false, %16 ]
  ret i1 %35
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gfx5RectF8ContainsEff(%"class.gfx::RectF"* nocapture readonly, float, float) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = fcmp ugt float %5, %1
  br i1 %6, label %21, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 0
  %9 = load float, float* %8, align 4
  %10 = fadd float %5, %9
  %11 = fcmp ogt float %10, %1
  br i1 %11, label %12, label %21

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 1
  %14 = load float, float* %13, align 4
  %15 = fcmp ugt float %14, %2
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 1
  %18 = load float, float* %17, align 4
  %19 = fadd float %14, %18
  %20 = fcmp ogt float %19, %2
  br label %21

21:                                               ; preds = %12, %3, %16, %7
  %22 = phi i1 [ false, %12 ], [ false, %7 ], [ false, %3 ], [ %20, %16 ]
  ret i1 %22
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gfx5RectF8ContainsERKS0_(%"class.gfx::RectF"* nocapture readonly, %"class.gfx::RectF"* nocapture readonly dereferenceable(16)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = fcmp ult float %4, %6
  br i1 %7, label %30, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 1, i32 0
  %10 = load float, float* %9, align 4
  %11 = fadd float %4, %10
  %12 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 0
  %13 = load float, float* %12, align 4
  %14 = fadd float %6, %13
  %15 = fcmp ugt float %11, %14
  br i1 %15, label %30, label %16

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 0, i32 1
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 1
  %20 = load float, float* %19, align 4
  %21 = fcmp ult float %18, %20
  br i1 %21, label %30, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 1, i32 1
  %24 = load float, float* %23, align 4
  %25 = fadd float %18, %24
  %26 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 1
  %27 = load float, float* %26, align 4
  %28 = fadd float %20, %27
  %29 = fcmp ole float %25, %28
  br label %30

30:                                               ; preds = %16, %8, %2, %22
  %31 = phi i1 [ false, %16 ], [ false, %8 ], [ false, %2 ], [ %29, %22 ]
  ret i1 %31
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gfx5RectF10IntersectsERKS0_(%"class.gfx::RectF"* nocapture readonly, %"class.gfx::RectF"* nocapture readonly dereferenceable(16)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 0
  %4 = load float, float* %3, align 4
  %5 = fcmp une float %4, 0.000000e+00
  br i1 %5, label %6, label %38

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 1
  %8 = load float, float* %7, align 4
  %9 = fcmp oeq float %8, 0.000000e+00
  br i1 %9, label %38, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 1, i32 0
  %12 = load float, float* %11, align 4
  %13 = fcmp une float %12, 0.000000e+00
  br i1 %13, label %14, label %38

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 1, i32 1
  %16 = load float, float* %15, align 4
  %17 = fcmp oeq float %16, 0.000000e+00
  br i1 %17, label %38, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 0, i32 0
  %20 = load float, float* %19, align 4
  %21 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 0
  %22 = load float, float* %21, align 4
  %23 = fadd float %4, %22
  %24 = fcmp olt float %20, %23
  %25 = fadd float %12, %20
  %26 = fcmp ogt float %25, %22
  %27 = and i1 %26, %24
  br i1 %27, label %28, label %38

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 0, i32 1
  %30 = load float, float* %29, align 4
  %31 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 1
  %32 = load float, float* %31, align 4
  %33 = fadd float %32, %8
  %34 = fcmp olt float %30, %33
  br i1 %34, label %35, label %38

35:                                               ; preds = %28
  %36 = fadd float %30, %16
  %37 = fcmp ogt float %36, %32
  br label %38

38:                                               ; preds = %10, %2, %35, %28, %18, %14, %6
  %39 = phi i1 [ false, %28 ], [ false, %18 ], [ false, %14 ], [ false, %6 ], [ %37, %35 ], [ false, %2 ], [ false, %10 ]
  ret i1 %39
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx5RectF9IntersectERKS0_(%"class.gfx::RectF"* nocapture, %"class.gfx::RectF"* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 0
  %4 = load float, float* %3, align 4
  %5 = fcmp une float %4, 0.000000e+00
  br i1 %5, label %6, label %18

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 1
  %8 = load float, float* %7, align 4
  %9 = fcmp oeq float %8, 0.000000e+00
  br i1 %9, label %18, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 1, i32 0
  %12 = load float, float* %11, align 4
  %13 = fcmp une float %12, 0.000000e+00
  br i1 %13, label %14, label %18

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 1, i32 1
  %16 = load float, float* %15, align 4
  %17 = fcmp oeq float %16, 0.000000e+00
  br i1 %17, label %18, label %20

18:                                               ; preds = %10, %2, %14, %6
  %19 = bitcast %"class.gfx::RectF"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 0, i64 16, i1 false)
  br label %53

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 0
  %22 = load float, float* %21, align 4
  %23 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 0, i32 0
  %24 = load float, float* %23, align 4
  %25 = fcmp olt float %22, %24
  %26 = select i1 %25, float %24, float %22
  %27 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 1
  %28 = load float, float* %27, align 4
  %29 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 0, i32 1
  %30 = load float, float* %29, align 4
  %31 = fcmp olt float %28, %30
  %32 = select i1 %31, float %30, float %28
  %33 = fadd float %4, %22
  %34 = fadd float %12, %24
  %35 = fcmp olt float %34, %33
  %36 = select i1 %35, float %34, float %33
  %37 = fadd float %28, %8
  %38 = fadd float %30, %16
  %39 = fcmp olt float %38, %37
  %40 = select i1 %39, float %38, float %37
  %41 = fcmp ult float %26, %36
  %42 = fcmp ult float %32, %40
  %43 = and i1 %41, %42
  br i1 %43, label %46, label %44

44:                                               ; preds = %20
  %45 = bitcast %"class.gfx::RectF"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %45, i8 0, i64 16, i1 false)
  br label %53

46:                                               ; preds = %20
  %47 = fsub float %36, %26
  %48 = fsub float %40, %32
  store float %26, float* %21, align 4
  store float %32, float* %27, align 4
  %49 = fcmp ogt float %47, 0x3EB0000000000000
  %50 = select i1 %49, float %47, float 0.000000e+00
  store float %50, float* %3, align 4
  %51 = fcmp ogt float %48, 0x3EB0000000000000
  %52 = select i1 %51, float %48, float 0.000000e+00
  store float %52, float* %7, align 4
  br label %53

53:                                               ; preds = %44, %46, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx5RectF5UnionERKS0_(%"class.gfx::RectF"* nocapture, %"class.gfx::RectF"* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 0
  %4 = load float, float* %3, align 4
  %5 = fcmp une float %4, 0.000000e+00
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 1
  %8 = load float, float* %7, align 4
  %9 = fcmp oeq float %8, 0.000000e+00
  br i1 %9, label %10, label %13

10:                                               ; preds = %2, %6
  %11 = bitcast %"class.gfx::RectF"* %0 to i8*
  %12 = bitcast %"class.gfx::RectF"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64 16, i1 false)
  br label %48

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 1, i32 0
  %15 = load float, float* %14, align 4
  %16 = fcmp une float %15, 0.000000e+00
  br i1 %16, label %17, label %48

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 1, i32 1
  %19 = load float, float* %18, align 4
  %20 = fcmp oeq float %19, 0.000000e+00
  br i1 %20, label %48, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 0
  %23 = load float, float* %22, align 4
  %24 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 0, i32 0
  %25 = load float, float* %24, align 4
  %26 = fcmp olt float %25, %23
  %27 = select i1 %26, float %25, float %23
  %28 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 1
  %29 = load float, float* %28, align 4
  %30 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 0, i32 1
  %31 = load float, float* %30, align 4
  %32 = fcmp olt float %31, %29
  %33 = select i1 %32, float %31, float %29
  %34 = fadd float %4, %23
  %35 = fadd float %15, %25
  %36 = fcmp olt float %34, %35
  %37 = select i1 %36, float %35, float %34
  %38 = fadd float %29, %8
  %39 = fadd float %31, %19
  %40 = fcmp olt float %38, %39
  %41 = select i1 %40, float %39, float %38
  %42 = fsub float %37, %27
  %43 = fsub float %41, %33
  store float %27, float* %22, align 4
  store float %33, float* %28, align 4
  %44 = fcmp ogt float %42, 0x3EB0000000000000
  %45 = select i1 %44, float %42, float 0.000000e+00
  store float %45, float* %3, align 4
  %46 = fcmp ogt float %43, 0x3EB0000000000000
  %47 = select i1 %46, float %43, float 0.000000e+00
  store float %47, float* %7, align 4
  br label %48

48:                                               ; preds = %13, %17, %21, %10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gfx5RectF8SubtractERKS0_(%"class.gfx::RectF"*, %"class.gfx::RectF"* readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 0
  %4 = load float, float* %3, align 4
  %5 = fcmp une float %4, 0.000000e+00
  br i1 %5, label %6, label %74

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 1
  %8 = load float, float* %7, align 4
  %9 = fcmp oeq float %8, 0.000000e+00
  br i1 %9, label %74, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 1, i32 0
  %12 = load float, float* %11, align 4
  %13 = fcmp une float %12, 0.000000e+00
  br i1 %13, label %14, label %74

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 1, i32 1
  %16 = load float, float* %15, align 4
  %17 = fcmp oeq float %16, 0.000000e+00
  br i1 %17, label %74, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 0, i32 0
  %20 = load float, float* %19, align 4
  %21 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 0
  %22 = load float, float* %21, align 4
  %23 = fadd float %4, %22
  %24 = fcmp olt float %20, %23
  %25 = fadd float %12, %20
  %26 = fcmp ogt float %25, %22
  %27 = and i1 %26, %24
  br i1 %27, label %28, label %74

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 0, i32 1
  %30 = load float, float* %29, align 4
  %31 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 1
  %32 = load float, float* %31, align 4
  %33 = fadd float %8, %32
  %34 = fcmp olt float %30, %33
  %35 = fadd float %16, %30
  %36 = fcmp ogt float %35, %32
  %37 = and i1 %36, %34
  br i1 %37, label %38, label %74

38:                                               ; preds = %28
  %39 = fcmp ult float %22, %20
  %40 = fcmp ugt float %23, %25
  %41 = or i1 %39, %40
  %42 = fcmp ult float %32, %30
  %43 = or i1 %41, %42
  %44 = fcmp ugt float %33, %35
  %45 = or i1 %43, %44
  br i1 %45, label %48, label %46

46:                                               ; preds = %38
  %47 = bitcast %"class.gfx::RectF"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %47, i8 0, i64 16, i1 false)
  br label %74

48:                                               ; preds = %38
  %49 = fcmp ugt float %30, %32
  %50 = fcmp ult float %35, %33
  %51 = or i1 %49, %50
  br i1 %51, label %56, label %52

52:                                               ; preds = %48
  br i1 %39, label %53, label %63

53:                                               ; preds = %52
  %54 = fcmp ult float %25, %23
  br i1 %54, label %63, label %55

55:                                               ; preds = %53
  br label %63

56:                                               ; preds = %48
  %57 = fcmp ult float %25, %23
  %58 = or i1 %39, %57
  br i1 %58, label %63, label %59

59:                                               ; preds = %56
  br i1 %49, label %60, label %63

60:                                               ; preds = %59
  %61 = fcmp ult float %35, %33
  br i1 %61, label %63, label %62

62:                                               ; preds = %60
  br label %63

63:                                               ; preds = %59, %52, %53, %60, %56, %62, %55
  %64 = phi float [ %22, %55 ], [ %22, %53 ], [ %22, %62 ], [ %22, %60 ], [ %22, %56 ], [ %25, %52 ], [ %22, %59 ]
  %65 = phi float [ %32, %55 ], [ %32, %53 ], [ %32, %62 ], [ %32, %60 ], [ %32, %56 ], [ %32, %52 ], [ %35, %59 ]
  %66 = phi float [ %20, %55 ], [ %23, %53 ], [ %23, %62 ], [ %23, %60 ], [ %23, %56 ], [ %23, %52 ], [ %23, %59 ]
  %67 = phi float [ %33, %55 ], [ %33, %53 ], [ %30, %62 ], [ %33, %60 ], [ %33, %56 ], [ %33, %52 ], [ %33, %59 ]
  %68 = fsub float %66, %64
  %69 = fsub float %67, %65
  store float %64, float* %21, align 4
  store float %65, float* %31, align 4
  %70 = fcmp ogt float %68, 0x3EB0000000000000
  %71 = select i1 %70, float %68, float 0.000000e+00
  store float %71, float* %3, align 4
  %72 = fcmp ogt float %69, 0x3EB0000000000000
  %73 = select i1 %72, float %69, float 0.000000e+00
  store float %73, float* %7, align 4
  br label %74

74:                                               ; preds = %10, %2, %6, %14, %18, %28, %63, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx5RectF11AdjustToFitERKS0_(%"class.gfx::RectF"* nocapture, %"class.gfx::RectF"* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 1
  %6 = load float, float* %5, align 4
  %7 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 0
  %8 = load float, float* %7, align 4
  %9 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 1
  %10 = load float, float* %9, align 4
  %11 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 0, i32 0
  %12 = load float, float* %11, align 4
  %13 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 1, i32 0
  %14 = load float, float* %13, align 4
  %15 = fcmp olt float %8, %14
  %16 = select i1 %15, float %8, float %14
  %17 = fcmp olt float %4, %12
  br i1 %17, label %24, label %18

18:                                               ; preds = %2
  %19 = fadd float %12, %14
  %20 = fadd float %4, %16
  %21 = fcmp olt float %20, %19
  %22 = select i1 %21, float %20, float %19
  %23 = fsub float %22, %16
  br label %24

24:                                               ; preds = %2, %18
  %25 = phi float [ %23, %18 ], [ %12, %2 ]
  %26 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 0, i32 1
  %27 = load float, float* %26, align 4
  %28 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 1, i32 1
  %29 = load float, float* %28, align 4
  %30 = fcmp olt float %10, %29
  %31 = select i1 %30, float %10, float %29
  %32 = fcmp olt float %6, %27
  br i1 %32, label %39, label %33

33:                                               ; preds = %24
  %34 = fadd float %27, %29
  %35 = fadd float %6, %31
  %36 = fcmp olt float %35, %34
  %37 = select i1 %36, float %35, float %34
  %38 = fsub float %37, %31
  br label %39

39:                                               ; preds = %24, %33
  %40 = phi float [ %38, %33 ], [ %27, %24 ]
  store float %25, float* %3, align 4
  store float %40, float* %5, align 4
  %41 = fcmp ogt float %16, 0x3EB0000000000000
  %42 = select i1 %41, float %16, float 0.000000e+00
  store float %42, float* %7, align 4
  %43 = fcmp ogt float %31, 0x3EB0000000000000
  %44 = select i1 %43, float %31, float 0.000000e+00
  store float %44, float* %9, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden <2 x float> @_ZNK3gfx5RectF11CenterPointEv(%"class.gfx::RectF"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 0
  %3 = bitcast %"class.gfx::RectF"* %0 to <2 x float>*
  %4 = load <2 x float>, <2 x float>* %3, align 4
  %5 = bitcast float* %2 to <2 x float>*
  %6 = load <2 x float>, <2 x float>* %5, align 4
  %7 = fmul <2 x float> %6, <float 5.000000e-01, float 5.000000e-01>
  %8 = fadd <2 x float> %4, %7
  ret <2 x float> %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx5RectF19ClampToCenteredSizeERKNS_5SizeFE(%"class.gfx::RectF"* nocapture, %"class.gfx::SizeF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %1, i64 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = fcmp olt float %6, %4
  %8 = select i1 %7, float %6, float %4
  %9 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 1
  %10 = load float, float* %9, align 4
  %11 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %1, i64 0, i32 1
  %12 = load float, float* %11, align 4
  %13 = fcmp olt float %12, %10
  %14 = select i1 %13, float %12, float %10
  %15 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 0
  %16 = load float, float* %15, align 4
  %17 = fsub float %4, %8
  %18 = fmul float %17, 5.000000e-01
  %19 = fadd float %16, %18
  %20 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 1
  %21 = load float, float* %20, align 4
  %22 = fsub float %10, %14
  %23 = fmul float %22, 5.000000e-01
  %24 = fadd float %21, %23
  store float %19, float* %15, align 4
  store float %24, float* %20, align 4
  %25 = fcmp ogt float %8, 0x3EB0000000000000
  %26 = select i1 %25, float %8, float 0.000000e+00
  store float %26, float* %3, align 4
  %27 = fcmp ogt float %14, 0x3EB0000000000000
  %28 = select i1 %27, float %14, float 0.000000e+00
  store float %28, float* %9, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gfx5RectF9TransposeEv(%"class.gfx::RectF"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 1
  %3 = bitcast float* %2 to i32*
  %4 = load i32, i32* %3, align 4
  %5 = bitcast %"class.gfx::RectF"* %0 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 1
  %8 = load float, float* %7, align 4
  %9 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 0
  %10 = load float, float* %9, align 4
  store i32 %4, i32* %5, align 4
  store i32 %6, i32* %3, align 4
  %11 = fcmp ogt float %8, 0x3EB0000000000000
  %12 = select i1 %11, float %8, float 0.000000e+00
  store float %12, float* %9, align 4
  %13 = fcmp ogt float %10, 0x3EB0000000000000
  %14 = select i1 %13, float %10, float 0.000000e+00
  store float %14, float* %7, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK3gfx5RectF15SplitVerticallyEPS0_S1_(%"class.gfx::RectF"* nocapture readonly, %"class.gfx::RectF"* nocapture, %"class.gfx::RectF"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 1
  %7 = bitcast float* %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 0
  %10 = load float, float* %9, align 4
  %11 = fmul float %10, 5.000000e-01
  %12 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 1
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 0, i32 0
  store float %5, float* %14, align 4
  %15 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 0, i32 1
  %16 = bitcast float* %15 to i32*
  store i32 %8, i32* %16, align 4
  %17 = fcmp ogt float %11, 0x3EB0000000000000
  %18 = select i1 %17, float %11, float 0.000000e+00
  %19 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 1, i32 0
  store float %18, float* %19, align 4
  %20 = fcmp ogt float %13, 0x3EB0000000000000
  %21 = select i1 %20, float %13, float 0.000000e+00
  %22 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 1, i32 1
  store float %21, float* %22, align 4
  %23 = fadd float %5, %18
  %24 = load i32, i32* %7, align 4
  %25 = load float, float* %9, align 4
  %26 = fsub float %25, %18
  %27 = load float, float* %12, align 4
  %28 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %2, i64 0, i32 0, i32 0
  store float %23, float* %28, align 4
  %29 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %2, i64 0, i32 0, i32 1
  %30 = bitcast float* %29 to i32*
  store i32 %24, i32* %30, align 4
  %31 = fcmp ogt float %26, 0x3EB0000000000000
  %32 = select i1 %31, float %26, float 0.000000e+00
  %33 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %2, i64 0, i32 1, i32 0
  store float %32, float* %33, align 4
  %34 = fcmp ogt float %27, 0x3EB0000000000000
  %35 = select i1 %34, float %27, float 0.000000e+00
  %36 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %2, i64 0, i32 1, i32 1
  store float %35, float* %36, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gfx5RectF14SharesEdgeWithERKS0_(%"class.gfx::RectF"* nocapture readonly, %"class.gfx::RectF"* nocapture readonly dereferenceable(16)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 1
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 0, i32 1
  %6 = load float, float* %5, align 4
  %7 = fcmp oeq float %4, %6
  br i1 %7, label %8, label %28

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 1
  %10 = load float, float* %9, align 4
  %11 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 1, i32 1
  %12 = load float, float* %11, align 4
  %13 = fcmp oeq float %10, %12
  br i1 %13, label %14, label %28

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 0
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 0, i32 0
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 1, i32 0
  %20 = load float, float* %19, align 4
  %21 = fadd float %18, %20
  %22 = fcmp oeq float %16, %21
  br i1 %22, label %50, label %23

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 0
  %25 = load float, float* %24, align 4
  %26 = fadd float %16, %25
  %27 = fcmp oeq float %26, %18
  br i1 %27, label %50, label %28

28:                                               ; preds = %23, %8, %2
  %29 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 0
  %30 = load float, float* %29, align 4
  %31 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 0, i32 0
  %32 = load float, float* %31, align 4
  %33 = fcmp oeq float %30, %32
  br i1 %33, label %34, label %50

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 0
  %36 = load float, float* %35, align 4
  %37 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 1, i32 0
  %38 = load float, float* %37, align 4
  %39 = fcmp oeq float %36, %38
  br i1 %39, label %40, label %50

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 1, i32 1
  %42 = load float, float* %41, align 4
  %43 = fadd float %6, %42
  %44 = fcmp oeq float %4, %43
  br i1 %44, label %50, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 1
  %47 = load float, float* %46, align 4
  %48 = fadd float %4, %47
  %49 = fcmp oeq float %48, %6
  br label %50

50:                                               ; preds = %28, %34, %45, %40, %23, %14
  %51 = phi i1 [ true, %23 ], [ true, %14 ], [ false, %34 ], [ false, %28 ], [ true, %40 ], [ %49, %45 ]
  ret i1 %51
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden float @_ZNK3gfx5RectF24ManhattanDistanceToPointERKNS_6PointFE(%"class.gfx::RectF"* nocapture readonly, %"class.gfx::PointF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 0
  %4 = bitcast %"class.gfx::RectF"* %0 to <2 x float>*
  %5 = load <2 x float>, <2 x float>* %4, align 4
  %6 = bitcast %"class.gfx::PointF"* %1 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 4
  %8 = fsub <2 x float> %5, %7
  %9 = bitcast float* %3 to <2 x float>*
  %10 = load <2 x float>, <2 x float>* %9, align 4
  %11 = fadd <2 x float> %5, %10
  %12 = fsub <2 x float> %7, %11
  %13 = fcmp olt <2 x float> %8, %12
  %14 = select <2 x i1> %13, <2 x float> %12, <2 x float> %8
  %15 = fcmp ogt <2 x float> %14, zeroinitializer
  %16 = select <2 x i1> %15, <2 x float> %14, <2 x float> zeroinitializer
  %17 = extractelement <2 x float> %16, i32 0
  %18 = extractelement <2 x float> %16, i32 1
  %19 = fadd float %17, %18
  ret float %19
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK3gfx5RectF25ManhattanInternalDistanceERKS0_(%"class.gfx::RectF"* nocapture readonly, %"class.gfx::RectF"* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 1
  %6 = load float, float* %5, align 4
  %7 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 0
  %8 = load float, float* %7, align 4
  %9 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 1
  %10 = load float, float* %9, align 4
  %11 = fcmp oeq float %8, 0.000000e+00
  %12 = fcmp oeq float %10, 0.000000e+00
  %13 = or i1 %11, %12
  %14 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 1, i32 0
  %15 = load float, float* %14, align 4
  br i1 %13, label %16, label %19

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 1, i32 1
  %18 = load float, float* %17, align 4
  br label %48

19:                                               ; preds = %2
  %20 = fcmp oeq float %15, 0.000000e+00
  %21 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 1, i32 1
  %22 = load float, float* %21, align 4
  %23 = fcmp oeq float %22, 0.000000e+00
  %24 = or i1 %20, %23
  br i1 %24, label %48, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 0, i32 0
  %27 = load float, float* %26, align 4
  %28 = fcmp olt float %27, %4
  %29 = select i1 %28, float %27, float %4
  %30 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 0, i32 1
  %31 = load float, float* %30, align 4
  %32 = fcmp olt float %31, %6
  %33 = select i1 %32, float %31, float %6
  %34 = fadd float %4, %8
  %35 = fadd float %15, %27
  %36 = fcmp olt float %34, %35
  %37 = select i1 %36, float %35, float %34
  %38 = fadd float %6, %10
  %39 = fadd float %22, %31
  %40 = fcmp olt float %38, %39
  %41 = select i1 %40, float %39, float %38
  %42 = fsub float %37, %29
  %43 = fsub float %41, %33
  %44 = fcmp ogt float %42, 0x3EB0000000000000
  %45 = select i1 %44, float %42, float 0.000000e+00
  %46 = fcmp ogt float %43, 0x3EB0000000000000
  %47 = select i1 %46, float %43, float 0.000000e+00
  br label %48

48:                                               ; preds = %19, %16, %25
  %49 = phi float [ %18, %16 ], [ %22, %25 ], [ %22, %19 ]
  %50 = phi float [ %15, %16 ], [ %45, %25 ], [ %8, %19 ]
  %51 = phi float [ %18, %16 ], [ %47, %25 ], [ %10, %19 ]
  %52 = fsub float %50, %8
  %53 = fsub float %52, %15
  %54 = fadd float %53, 0x3E80000000000000
  %55 = fcmp ogt float %54, 0.000000e+00
  %56 = select i1 %55, float %54, float 0.000000e+00
  %57 = fsub float %51, %10
  %58 = fsub float %57, %49
  %59 = fadd float %58, 0x3E80000000000000
  %60 = fcmp ogt float %59, 0.000000e+00
  %61 = select i1 %60, float %59, float 0.000000e+00
  %62 = fadd float %56, %61
  ret float %62
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gfx5RectF19IsExpressibleAsRectEv(%"class.gfx::RectF"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 0
  %3 = load float, float* %2, align 4
  %4 = fcmp oge float %3, 0xC1E0000000000000
  %5 = fcmp ole float %3, 0x41DFFFFFE0000000
  %6 = and i1 %5, %4
  br i1 %6, label %7, label %35

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 1
  %9 = load float, float* %8, align 4
  %10 = fcmp oge float %9, 0xC1E0000000000000
  %11 = fcmp ole float %9, 0x41DFFFFFE0000000
  %12 = and i1 %11, %10
  br i1 %12, label %13, label %35

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 0
  %15 = load float, float* %14, align 4
  %16 = fcmp oge float %15, 0xC1E0000000000000
  %17 = fcmp ole float %15, 0x41DFFFFFE0000000
  %18 = and i1 %17, %16
  br i1 %18, label %19, label %35

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 1
  %21 = load float, float* %20, align 4
  %22 = fcmp oge float %21, 0xC1E0000000000000
  %23 = fcmp ole float %21, 0x41DFFFFFE0000000
  %24 = and i1 %23, %22
  br i1 %24, label %25, label %35

25:                                               ; preds = %19
  %26 = fadd float %3, %15
  %27 = fcmp oge float %26, 0xC1E0000000000000
  %28 = fcmp ole float %26, 0x41DFFFFFE0000000
  %29 = and i1 %28, %27
  br i1 %29, label %30, label %35

30:                                               ; preds = %25
  %31 = fadd float %9, %21
  %32 = fcmp oge float %31, 0xC1E0000000000000
  %33 = fcmp ole float %31, 0x41DFFFFFE0000000
  %34 = and i1 %33, %32
  br label %35

35:                                               ; preds = %30, %25, %19, %13, %7, %1
  %36 = phi i1 [ false, %25 ], [ false, %19 ], [ false, %13 ], [ false, %7 ], [ false, %1 ], [ %34, %30 ]
  ret i1 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx5RectF8ToStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.gfx::RectF"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 0
  call void @_ZNK3gfx6PointF8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %3, %"class.gfx::PointF"* %6) #8
  %7 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = select i1 %10, i8* %12, i8* %5
  %14 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 1
  call void @_ZNK3gfx5SizeF8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.gfx::SizeF"* %15) #8
  %16 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = select i1 %19, i8* %21, i8* %14
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i8* %13, i8* %22) #8
  %23 = load i8, i8* %17, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %2
  %26 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %26) #9
  br label %27

27:                                               ; preds = %2, %25
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #8
  %28 = load i8, i8* %8, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %27
  %31 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %31) #9
  br label %32

32:                                               ; preds = %27, %30
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #8
  ret void
}

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #6

declare void @_ZNK3gfx6PointF8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.gfx::PointF"*) local_unnamed_addr #6

declare void @_ZNK3gfx5SizeF8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.gfx::SizeF"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN3gfx14IntersectRectsERKNS_5RectFES2_(%"class.gfx::RectF"* nocapture readonly dereferenceable(16), %"class.gfx::RectF"* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 {
  %3 = bitcast %"class.gfx::RectF"* %0 to <2 x float>*
  %4 = load <2 x float>, <2 x float>* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1
  %6 = bitcast %"class.gfx::SizeF"* %5 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 4
  %8 = extractelement <2 x float> %7, i32 0
  %9 = fcmp oeq float %8, 0.000000e+00
  %10 = extractelement <2 x float> %7, i32 1
  %11 = fcmp oeq float %10, 0.000000e+00
  %12 = or i1 %9, %11
  br i1 %12, label %43, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 1, i32 0
  %15 = load float, float* %14, align 4
  %16 = fcmp une float %15, 0.000000e+00
  br i1 %16, label %17, label %43

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 1, i32 1
  %19 = load float, float* %18, align 4
  %20 = fcmp oeq float %19, 0.000000e+00
  br i1 %20, label %43, label %21

21:                                               ; preds = %17
  %22 = bitcast %"class.gfx::RectF"* %1 to <2 x float>*
  %23 = load <2 x float>, <2 x float>* %22, align 4
  %24 = fcmp olt <2 x float> %4, %23
  %25 = select <2 x i1> %24, <2 x float> %23, <2 x float> %4
  %26 = fadd <2 x float> %4, %7
  %27 = insertelement <2 x float> undef, float %15, i32 0
  %28 = insertelement <2 x float> %27, float %19, i32 1
  %29 = fadd <2 x float> %28, %23
  %30 = fcmp olt <2 x float> %29, %26
  %31 = select <2 x i1> %30, <2 x float> %29, <2 x float> %26
  %32 = extractelement <2 x float> %31, i32 0
  %33 = extractelement <2 x float> %25, i32 0
  %34 = fcmp ult float %33, %32
  %35 = extractelement <2 x float> %31, i32 1
  %36 = extractelement <2 x float> %25, i32 1
  %37 = fcmp ult float %36, %35
  %38 = and i1 %34, %37
  br i1 %38, label %39, label %43

39:                                               ; preds = %21
  %40 = fsub <2 x float> %31, %25
  %41 = fcmp ogt <2 x float> %40, <float 0x3EB0000000000000, float 0x3EB0000000000000>
  %42 = select <2 x i1> %41, <2 x float> %40, <2 x float> zeroinitializer
  br label %43

43:                                               ; preds = %2, %21, %13, %17, %39
  %44 = phi <2 x float> [ %42, %39 ], [ zeroinitializer, %17 ], [ zeroinitializer, %13 ], [ zeroinitializer, %2 ], [ zeroinitializer, %21 ]
  %45 = phi <2 x float> [ %25, %39 ], [ zeroinitializer, %17 ], [ zeroinitializer, %13 ], [ zeroinitializer, %2 ], [ zeroinitializer, %21 ]
  %46 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %45, 0
  %47 = insertvalue { <2 x float>, <2 x float> } %46, <2 x float> %44, 1
  ret { <2 x float>, <2 x float> } %47
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN3gfx10UnionRectsERKNS_5RectFES2_(%"class.gfx::RectF"* nocapture readonly dereferenceable(16), %"class.gfx::RectF"* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 {
  %3 = bitcast %"class.gfx::RectF"* %0 to <2 x float>*
  %4 = load <2 x float>, <2 x float>* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1
  %6 = bitcast %"class.gfx::SizeF"* %5 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 4
  %8 = extractelement <2 x float> %7, i32 0
  %9 = fcmp oeq float %8, 0.000000e+00
  %10 = extractelement <2 x float> %7, i32 1
  %11 = fcmp oeq float %10, 0.000000e+00
  %12 = or i1 %9, %11
  br i1 %12, label %13, label %19

13:                                               ; preds = %2
  %14 = bitcast %"class.gfx::RectF"* %1 to <2 x float>*
  %15 = load <2 x float>, <2 x float>* %14, align 4
  %16 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 1
  %17 = bitcast %"class.gfx::SizeF"* %16 to <2 x float>*
  %18 = load <2 x float>, <2 x float>* %17, align 4
  br label %41

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 1, i32 0
  %21 = load float, float* %20, align 4
  %22 = fcmp une float %21, 0.000000e+00
  br i1 %22, label %23, label %41

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 1, i32 1
  %25 = load float, float* %24, align 4
  %26 = fcmp oeq float %25, 0.000000e+00
  br i1 %26, label %41, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.gfx::RectF"* %1 to <2 x float>*
  %29 = load <2 x float>, <2 x float>* %28, align 4
  %30 = fcmp olt <2 x float> %29, %4
  %31 = select <2 x i1> %30, <2 x float> %29, <2 x float> %4
  %32 = fadd <2 x float> %4, %7
  %33 = insertelement <2 x float> undef, float %21, i32 0
  %34 = insertelement <2 x float> %33, float %25, i32 1
  %35 = fadd <2 x float> %34, %29
  %36 = fcmp olt <2 x float> %32, %35
  %37 = select <2 x i1> %36, <2 x float> %35, <2 x float> %32
  %38 = fsub <2 x float> %37, %31
  %39 = fcmp ogt <2 x float> %38, <float 0x3EB0000000000000, float 0x3EB0000000000000>
  %40 = select <2 x i1> %39, <2 x float> %38, <2 x float> zeroinitializer
  br label %41

41:                                               ; preds = %13, %19, %23, %27
  %42 = phi <2 x float> [ %18, %13 ], [ %7, %23 ], [ %40, %27 ], [ %7, %19 ]
  %43 = phi <2 x float> [ %15, %13 ], [ %4, %23 ], [ %31, %27 ], [ %4, %19 ]
  %44 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %43, 0
  %45 = insertvalue { <2 x float>, <2 x float> } %44, <2 x float> %42, 1
  ret { <2 x float>, <2 x float> } %45
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN3gfx13SubtractRectsERKNS_5RectFES2_(%"class.gfx::RectF"* nocapture readonly dereferenceable(16), %"class.gfx::RectF"* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 {
  %3 = bitcast %"class.gfx::RectF"* %0 to <2 x float>*
  %4 = load <2 x float>, <2 x float>* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1
  %6 = bitcast %"class.gfx::SizeF"* %5 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 4
  %8 = extractelement <2 x float> %7, i32 0
  %9 = fcmp une float %8, 0.000000e+00
  br i1 %9, label %10, label %71

10:                                               ; preds = %2
  %11 = extractelement <2 x float> %7, i32 1
  %12 = fcmp oeq float %11, 0.000000e+00
  br i1 %12, label %71, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 1, i32 0
  %15 = load float, float* %14, align 4
  %16 = fcmp une float %15, 0.000000e+00
  br i1 %16, label %17, label %71

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 1, i32 1
  %19 = load float, float* %18, align 4
  %20 = fcmp oeq float %19, 0.000000e+00
  br i1 %20, label %71, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 0, i32 0
  %23 = load float, float* %22, align 4
  %24 = extractelement <2 x float> %4, i32 0
  %25 = fadd float %24, %8
  %26 = fcmp olt float %23, %25
  %27 = fadd float %15, %23
  %28 = fcmp ogt float %27, %24
  %29 = and i1 %26, %28
  br i1 %29, label %30, label %71

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 0, i32 1
  %32 = load float, float* %31, align 4
  %33 = extractelement <2 x float> %4, i32 1
  %34 = fadd float %33, %11
  %35 = fcmp olt float %32, %34
  %36 = fadd float %19, %32
  %37 = fcmp ogt float %36, %33
  %38 = and i1 %35, %37
  br i1 %38, label %39, label %71

39:                                               ; preds = %30
  %40 = fcmp ult float %24, %23
  %41 = fcmp ugt float %25, %27
  %42 = or i1 %40, %41
  %43 = fcmp ult float %33, %32
  %44 = or i1 %42, %43
  %45 = fcmp ugt float %34, %36
  %46 = or i1 %44, %45
  br i1 %46, label %47, label %71

47:                                               ; preds = %39
  %48 = or i1 %43, %45
  br i1 %48, label %52, label %49

49:                                               ; preds = %47
  br i1 %40, label %50, label %56

50:                                               ; preds = %49
  br i1 %41, label %56, label %51

51:                                               ; preds = %50
  br label %56

52:                                               ; preds = %47
  br i1 %42, label %56, label %53

53:                                               ; preds = %52
  br i1 %43, label %54, label %56

54:                                               ; preds = %53
  br i1 %45, label %56, label %55

55:                                               ; preds = %54
  br label %56

56:                                               ; preds = %55, %54, %53, %52, %51, %50, %49
  %57 = phi float [ %24, %51 ], [ %24, %50 ], [ %24, %55 ], [ %24, %54 ], [ %24, %52 ], [ %27, %49 ], [ %24, %53 ]
  %58 = phi float [ %33, %51 ], [ %33, %50 ], [ %33, %55 ], [ %33, %54 ], [ %33, %52 ], [ %33, %49 ], [ %36, %53 ]
  %59 = phi float [ %23, %51 ], [ %25, %50 ], [ %25, %55 ], [ %25, %54 ], [ %25, %52 ], [ %25, %49 ], [ %25, %53 ]
  %60 = phi float [ %34, %51 ], [ %34, %50 ], [ %32, %55 ], [ %34, %54 ], [ %34, %52 ], [ %34, %49 ], [ %34, %53 ]
  %61 = fsub float %59, %57
  %62 = fsub float %60, %58
  %63 = insertelement <2 x float> undef, float %57, i32 0
  %64 = insertelement <2 x float> %63, float %58, i32 1
  %65 = fcmp ogt float %61, 0x3EB0000000000000
  %66 = select i1 %65, float %61, float 0.000000e+00
  %67 = insertelement <2 x float> undef, float %66, i32 0
  %68 = fcmp ogt float %62, 0x3EB0000000000000
  %69 = select i1 %68, float %62, float 0.000000e+00
  %70 = insertelement <2 x float> %67, float %69, i32 1
  br label %71

71:                                               ; preds = %39, %2, %10, %13, %17, %21, %30, %56
  %72 = phi <2 x float> [ %7, %10 ], [ %7, %17 ], [ %70, %56 ], [ %7, %30 ], [ %7, %21 ], [ %7, %13 ], [ %7, %2 ], [ zeroinitializer, %39 ]
  %73 = phi <2 x float> [ %4, %10 ], [ %4, %17 ], [ %64, %56 ], [ %4, %30 ], [ %4, %21 ], [ %4, %13 ], [ %4, %2 ], [ zeroinitializer, %39 ]
  %74 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %73, 0
  %75 = insertvalue { <2 x float>, <2 x float> } %74, <2 x float> %72, 1
  ret { <2 x float>, <2 x float> } %75
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN3gfx12BoundingRectERKNS_6PointFES2_(%"class.gfx::PointF"* nocapture readonly dereferenceable(8), %"class.gfx::PointF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #5 {
  %3 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %0, i64 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %1, i64 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = fcmp olt float %6, %4
  %8 = select i1 %7, float %6, float %4
  %9 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %0, i64 0, i32 1
  %10 = load float, float* %9, align 4
  %11 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %1, i64 0, i32 1
  %12 = load float, float* %11, align 4
  %13 = fcmp olt float %12, %10
  %14 = select i1 %13, float %12, float %10
  %15 = fcmp olt float %4, %6
  %16 = select i1 %15, float %6, float %4
  %17 = fcmp olt float %10, %12
  %18 = select i1 %17, float %12, float %10
  %19 = fsub float %16, %8
  %20 = fsub float %18, %14
  %21 = insertelement <2 x float> undef, float %8, i32 0
  %22 = insertelement <2 x float> %21, float %14, i32 1
  %23 = fcmp ogt float %19, 0x3EB0000000000000
  %24 = select i1 %23, float %19, float 0.000000e+00
  %25 = insertelement <2 x float> undef, float %24, i32 0
  %26 = fcmp ogt float %20, 0x3EB0000000000000
  %27 = select i1 %26, float %20, float 0.000000e+00
  %28 = insertelement <2 x float> %25, float %27, i32 1
  %29 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %22, 0
  %30 = insertvalue { <2 x float>, <2 x float> } %29, <2 x float> %28, 1
  ret { <2 x float>, <2 x float> } %30
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
