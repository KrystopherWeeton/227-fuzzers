; ModuleID = '../../third_party/webrtc/api/video_codecs/video_codec.cc'
source_filename = "../../third_party/webrtc/api/video_codecs/video_codec.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::VideoCodec" = type { i32, i16, i16, i32, i32, i32, i32, i8, i32, i8, [3 x %"struct.webrtc::SpatialLayer"], [5 x %"struct.webrtc::SpatialLayer"], i32, i8, %"class.absl::optional", %"struct.webrtc::VideoCodec::TimingFrameTriggerThresholds", i8, %"union.webrtc::VideoCodecUnion", %"class.std::__1::basic_string" }
%"struct.webrtc::SpatialLayer" = type { i16, i16, float, i8, i32, i32, i32, i32, i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"struct.webrtc::VideoCodec::TimingFrameTriggerThresholds" = type { i64, i16 }
%"union.webrtc::VideoCodecUnion" = type { %"struct.webrtc::VideoCodecVP9" }
%"struct.webrtc::VideoCodecVP9" = type { i32, i8, i8, i8, i32, i8, i8, i8, i8, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.0 }
%union.anon.0 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.webrtc::VideoCodecVP8" = type { i32, i8, i8, i8, i8, i32 }
%"struct.webrtc::VideoCodecH264" = type { i8, i32, i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN6webrtc12_GLOBAL__N_115kPayloadNameVp8E = internal constant [4 x i8] c"VP8\00", align 1
@_ZN6webrtc12_GLOBAL__N_115kPayloadNameVp9E = internal constant [4 x i8] c"VP9\00", align 1
@_ZN6webrtc12_GLOBAL__N_115kPayloadNameAv1E = internal constant [5 x i8] c"AV1X\00", align 1
@_ZN6webrtc12_GLOBAL__N_116kPayloadNameH264E = internal constant [5 x i8] c"H264\00", align 1
@_ZN6webrtc12_GLOBAL__N_121kPayloadNameMultiplexE = internal constant [10 x i8] c"Multiplex\00", align 1
@_ZN6webrtc12_GLOBAL__N_119kPayloadNameGenericE = internal constant [8 x i8] c"Generic\00", align 1
@switch.table._ZN6webrtc24CodecTypeToPayloadStringENS_14VideoCodecTypeE = private unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN6webrtc12_GLOBAL__N_119kPayloadNameGenericE, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZN6webrtc12_GLOBAL__N_115kPayloadNameVp8E, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZN6webrtc12_GLOBAL__N_115kPayloadNameVp9E, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN6webrtc12_GLOBAL__N_115kPayloadNameAv1E, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN6webrtc12_GLOBAL__N_116kPayloadNameH264E, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZN6webrtc12_GLOBAL__N_121kPayloadNameMultiplexE, i64 0, i64 0)], align 8

@_ZN6webrtc10VideoCodecC1Ev = hidden unnamed_addr alias void (%"class.webrtc::VideoCodec"*), void (%"class.webrtc::VideoCodec"*)* @_ZN6webrtc10VideoCodecC2Ev

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6webrtc13VideoCodecVP8eqERKS0_(%"struct.webrtc::VideoCodecVP8"* nocapture readonly, %"struct.webrtc::VideoCodecVP8"* nocapture readonly dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.webrtc::VideoCodecVP8", %"struct.webrtc::VideoCodecVP8"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.webrtc::VideoCodecVP8", %"struct.webrtc::VideoCodecVP8"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %38

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.webrtc::VideoCodecVP8", %"struct.webrtc::VideoCodecVP8"* %0, i64 0, i32 1
  %10 = load i8, i8* %9, align 4
  %11 = getelementptr inbounds %"struct.webrtc::VideoCodecVP8", %"struct.webrtc::VideoCodecVP8"* %1, i64 0, i32 1
  %12 = load i8, i8* %11, align 4
  %13 = icmp eq i8 %10, %12
  br i1 %13, label %14, label %38

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.webrtc::VideoCodecVP8", %"struct.webrtc::VideoCodecVP8"* %0, i64 0, i32 2
  %16 = load i8, i8* %15, align 1, !range !2
  %17 = getelementptr inbounds %"struct.webrtc::VideoCodecVP8", %"struct.webrtc::VideoCodecVP8"* %1, i64 0, i32 2
  %18 = load i8, i8* %17, align 1, !range !2
  %19 = icmp eq i8 %16, %18
  br i1 %19, label %20, label %38

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.webrtc::VideoCodecVP8", %"struct.webrtc::VideoCodecVP8"* %0, i64 0, i32 3
  %22 = load i8, i8* %21, align 2, !range !2
  %23 = getelementptr inbounds %"struct.webrtc::VideoCodecVP8", %"struct.webrtc::VideoCodecVP8"* %1, i64 0, i32 3
  %24 = load i8, i8* %23, align 2, !range !2
  %25 = icmp eq i8 %22, %24
  br i1 %25, label %26, label %38

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"struct.webrtc::VideoCodecVP8", %"struct.webrtc::VideoCodecVP8"* %0, i64 0, i32 4
  %28 = load i8, i8* %27, align 1, !range !2
  %29 = getelementptr inbounds %"struct.webrtc::VideoCodecVP8", %"struct.webrtc::VideoCodecVP8"* %1, i64 0, i32 4
  %30 = load i8, i8* %29, align 1, !range !2
  %31 = icmp eq i8 %28, %30
  br i1 %31, label %32, label %38

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"struct.webrtc::VideoCodecVP8", %"struct.webrtc::VideoCodecVP8"* %0, i64 0, i32 5
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"struct.webrtc::VideoCodecVP8", %"struct.webrtc::VideoCodecVP8"* %1, i64 0, i32 5
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %34, %36
  br label %38

38:                                               ; preds = %32, %26, %20, %14, %8, %2
  %39 = phi i1 [ false, %26 ], [ false, %20 ], [ false, %14 ], [ false, %8 ], [ false, %2 ], [ %37, %32 ]
  ret i1 %39
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6webrtc13VideoCodecVP9eqERKS0_(%"struct.webrtc::VideoCodecVP9"* nocapture readonly, %"struct.webrtc::VideoCodecVP9"* nocapture readonly dereferenceable(20)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.webrtc::VideoCodecVP9", %"struct.webrtc::VideoCodecVP9"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.webrtc::VideoCodecVP9", %"struct.webrtc::VideoCodecVP9"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %56

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.webrtc::VideoCodecVP9", %"struct.webrtc::VideoCodecVP9"* %0, i64 0, i32 1
  %10 = load i8, i8* %9, align 4
  %11 = getelementptr inbounds %"struct.webrtc::VideoCodecVP9", %"struct.webrtc::VideoCodecVP9"* %1, i64 0, i32 1
  %12 = load i8, i8* %11, align 4
  %13 = icmp eq i8 %10, %12
  br i1 %13, label %14, label %56

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.webrtc::VideoCodecVP9", %"struct.webrtc::VideoCodecVP9"* %0, i64 0, i32 2
  %16 = load i8, i8* %15, align 1, !range !2
  %17 = getelementptr inbounds %"struct.webrtc::VideoCodecVP9", %"struct.webrtc::VideoCodecVP9"* %1, i64 0, i32 2
  %18 = load i8, i8* %17, align 1, !range !2
  %19 = icmp eq i8 %16, %18
  br i1 %19, label %20, label %56

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.webrtc::VideoCodecVP9", %"struct.webrtc::VideoCodecVP9"* %0, i64 0, i32 3
  %22 = load i8, i8* %21, align 2, !range !2
  %23 = getelementptr inbounds %"struct.webrtc::VideoCodecVP9", %"struct.webrtc::VideoCodecVP9"* %1, i64 0, i32 3
  %24 = load i8, i8* %23, align 2, !range !2
  %25 = icmp eq i8 %22, %24
  br i1 %25, label %26, label %56

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"struct.webrtc::VideoCodecVP9", %"struct.webrtc::VideoCodecVP9"* %0, i64 0, i32 4
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"struct.webrtc::VideoCodecVP9", %"struct.webrtc::VideoCodecVP9"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %28, %30
  br i1 %31, label %32, label %56

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"struct.webrtc::VideoCodecVP9", %"struct.webrtc::VideoCodecVP9"* %0, i64 0, i32 5
  %34 = load i8, i8* %33, align 4, !range !2
  %35 = getelementptr inbounds %"struct.webrtc::VideoCodecVP9", %"struct.webrtc::VideoCodecVP9"* %1, i64 0, i32 5
  %36 = load i8, i8* %35, align 4, !range !2
  %37 = icmp eq i8 %34, %36
  br i1 %37, label %38, label %56

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"struct.webrtc::VideoCodecVP9", %"struct.webrtc::VideoCodecVP9"* %0, i64 0, i32 6
  %40 = load i8, i8* %39, align 1, !range !2
  %41 = getelementptr inbounds %"struct.webrtc::VideoCodecVP9", %"struct.webrtc::VideoCodecVP9"* %1, i64 0, i32 6
  %42 = load i8, i8* %41, align 1, !range !2
  %43 = icmp eq i8 %40, %42
  br i1 %43, label %44, label %56

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"struct.webrtc::VideoCodecVP9", %"struct.webrtc::VideoCodecVP9"* %0, i64 0, i32 7
  %46 = load i8, i8* %45, align 2
  %47 = getelementptr inbounds %"struct.webrtc::VideoCodecVP9", %"struct.webrtc::VideoCodecVP9"* %1, i64 0, i32 7
  %48 = load i8, i8* %47, align 2
  %49 = icmp eq i8 %46, %48
  br i1 %49, label %50, label %56

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"struct.webrtc::VideoCodecVP9", %"struct.webrtc::VideoCodecVP9"* %0, i64 0, i32 8
  %52 = load i8, i8* %51, align 1, !range !2
  %53 = getelementptr inbounds %"struct.webrtc::VideoCodecVP9", %"struct.webrtc::VideoCodecVP9"* %1, i64 0, i32 8
  %54 = load i8, i8* %53, align 1, !range !2
  %55 = icmp eq i8 %52, %54
  br label %56

56:                                               ; preds = %50, %44, %38, %32, %26, %20, %14, %8, %2
  %57 = phi i1 [ false, %44 ], [ false, %38 ], [ false, %32 ], [ false, %26 ], [ false, %20 ], [ false, %14 ], [ false, %8 ], [ false, %2 ], [ %55, %50 ]
  ret i1 %57
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6webrtc14VideoCodecH264eqERKS0_(%"struct.webrtc::VideoCodecH264"* nocapture readonly, %"struct.webrtc::VideoCodecH264"* nocapture readonly dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.webrtc::VideoCodecH264", %"struct.webrtc::VideoCodecH264"* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = getelementptr inbounds %"struct.webrtc::VideoCodecH264", %"struct.webrtc::VideoCodecH264"* %1, i64 0, i32 0
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %4, %6
  br i1 %7, label %8, label %20

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.webrtc::VideoCodecH264", %"struct.webrtc::VideoCodecH264"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.webrtc::VideoCodecH264", %"struct.webrtc::VideoCodecH264"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %20

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.webrtc::VideoCodecH264", %"struct.webrtc::VideoCodecH264"* %0, i64 0, i32 2
  %16 = load i8, i8* %15, align 4
  %17 = getelementptr inbounds %"struct.webrtc::VideoCodecH264", %"struct.webrtc::VideoCodecH264"* %1, i64 0, i32 2
  %18 = load i8, i8* %17, align 4
  %19 = icmp eq i8 %16, %18
  br label %20

20:                                               ; preds = %14, %8, %2
  %21 = phi i1 [ false, %8 ], [ false, %2 ], [ %19, %14 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc10VideoCodecC2Ev(%"class.webrtc::VideoCodec"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 7
  %3 = bitcast %"class.webrtc::VideoCodec"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false)
  store i8 1, i8* %2, align 8
  %4 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 8
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 9
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 10
  %7 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %7, align 4
  %8 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 15, i32 0
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 15, i32 1
  store i16 0, i16* %9, align 8
  %10 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 16
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 17
  %12 = bitcast [3 x %"struct.webrtc::SpatialLayer"]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 261, i1 false)
  %13 = bitcast %"union.webrtc::VideoCodecUnion"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 44, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"struct.webrtc::VideoCodecVP8"* @_ZN6webrtc10VideoCodec3VP8Ev(%"class.webrtc::VideoCodec"* readnone) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 17
  %3 = bitcast %"union.webrtc::VideoCodecUnion"* %2 to %"struct.webrtc::VideoCodecVP8"*
  ret %"struct.webrtc::VideoCodecVP8"* %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(12) %"struct.webrtc::VideoCodecVP8"* @_ZNK6webrtc10VideoCodec3VP8Ev(%"class.webrtc::VideoCodec"* readnone) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 17
  %3 = bitcast %"union.webrtc::VideoCodecUnion"* %2 to %"struct.webrtc::VideoCodecVP8"*
  ret %"struct.webrtc::VideoCodecVP8"* %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"struct.webrtc::VideoCodecVP9"* @_ZN6webrtc10VideoCodec3VP9Ev(%"class.webrtc::VideoCodec"* readnone) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 17, i32 0
  ret %"struct.webrtc::VideoCodecVP9"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(20) %"struct.webrtc::VideoCodecVP9"* @_ZNK6webrtc10VideoCodec3VP9Ev(%"class.webrtc::VideoCodec"* readnone) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 17, i32 0
  ret %"struct.webrtc::VideoCodecVP9"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"struct.webrtc::VideoCodecH264"* @_ZN6webrtc10VideoCodec4H264Ev(%"class.webrtc::VideoCodec"* readnone) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 17
  %3 = bitcast %"union.webrtc::VideoCodecUnion"* %2 to %"struct.webrtc::VideoCodecH264"*
  ret %"struct.webrtc::VideoCodecH264"* %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(12) %"struct.webrtc::VideoCodecH264"* @_ZNK6webrtc10VideoCodec4H264Ev(%"class.webrtc::VideoCodec"* readnone) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 17
  %3 = bitcast %"union.webrtc::VideoCodecUnion"* %2 to %"struct.webrtc::VideoCodecH264"*
  ret %"struct.webrtc::VideoCodecH264"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN6webrtc24CodecTypeToPayloadStringENS_14VideoCodecTypeE(i32) local_unnamed_addr #1 {
  %2 = icmp ult i32 %0, 6
  br i1 %2, label %4, label %3

3:                                                ; preds = %1
  tail call void @_ZN3rtc18webrtc_checks_impl22UnreachableCodeReachedEv() #7
  unreachable

4:                                                ; preds = %1
  %5 = sext i32 %0 to i64
  %6 = getelementptr inbounds [6 x i8*], [6 x i8*]* @switch.table._ZN6webrtc24CodecTypeToPayloadStringENS_14VideoCodecTypeE, i64 0, i64 %5
  %7 = load i8*, i8** %6, align 8
  ret i8* %7
}

; Function Attrs: noreturn
declare void @_ZN3rtc18webrtc_checks_impl22UnreachableCodeReachedEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc24PayloadStringToCodecTypeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1 {
  %2 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = zext i8 %4 to i64
  %8 = ptrtoint %"class.std::__1::basic_string"* %0 to i64
  br label %16

9:                                                ; preds = %1
  %10 = bitcast %"class.std::__1::basic_string"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = icmp sgt i64 %13, -1
  br i1 %14, label %16, label %15, !prof !3

15:                                               ; preds = %9
  tail call void @llvm.trap() #8
  unreachable

16:                                               ; preds = %9, %6
  %17 = phi i64 [ %11, %9 ], [ %8, %6 ]
  %18 = phi i64 [ %13, %9 ], [ %7, %6 ]
  %19 = inttoptr i64 %17 to i8*
  %20 = tail call zeroext i1 @_ZN4absl16EqualsIgnoreCaseENS_11string_viewES0_(i8* %19, i64 %18, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZN6webrtc12_GLOBAL__N_115kPayloadNameVp8E, i64 0, i64 0), i64 3) #8
  br i1 %20, label %94, label %21

21:                                               ; preds = %16
  %22 = load i8, i8* %3, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = zext i8 %22 to i64
  %26 = ptrtoint %"class.std::__1::basic_string"* %0 to i64
  br label %34

27:                                               ; preds = %21
  %28 = bitcast %"class.std::__1::basic_string"* %0 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = icmp sgt i64 %31, -1
  br i1 %32, label %34, label %33, !prof !3

33:                                               ; preds = %27
  tail call void @llvm.trap() #8
  unreachable

34:                                               ; preds = %27, %24
  %35 = phi i64 [ %29, %27 ], [ %26, %24 ]
  %36 = phi i64 [ %31, %27 ], [ %25, %24 ]
  %37 = inttoptr i64 %35 to i8*
  %38 = tail call zeroext i1 @_ZN4absl16EqualsIgnoreCaseENS_11string_viewES0_(i8* %37, i64 %36, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZN6webrtc12_GLOBAL__N_115kPayloadNameVp9E, i64 0, i64 0), i64 3) #8
  br i1 %38, label %94, label %39

39:                                               ; preds = %34
  %40 = load i8, i8* %3, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %39
  %43 = zext i8 %40 to i64
  %44 = ptrtoint %"class.std::__1::basic_string"* %0 to i64
  br label %52

45:                                               ; preds = %39
  %46 = bitcast %"class.std::__1::basic_string"* %0 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = icmp sgt i64 %49, -1
  br i1 %50, label %52, label %51, !prof !3

51:                                               ; preds = %45
  tail call void @llvm.trap() #8
  unreachable

52:                                               ; preds = %45, %42
  %53 = phi i64 [ %47, %45 ], [ %44, %42 ]
  %54 = phi i64 [ %49, %45 ], [ %43, %42 ]
  %55 = inttoptr i64 %53 to i8*
  %56 = tail call zeroext i1 @_ZN4absl16EqualsIgnoreCaseENS_11string_viewES0_(i8* %55, i64 %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN6webrtc12_GLOBAL__N_115kPayloadNameAv1E, i64 0, i64 0), i64 4) #8
  br i1 %56, label %94, label %57

57:                                               ; preds = %52
  %58 = load i8, i8* %3, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %57
  %61 = zext i8 %58 to i64
  %62 = ptrtoint %"class.std::__1::basic_string"* %0 to i64
  br label %70

63:                                               ; preds = %57
  %64 = bitcast %"class.std::__1::basic_string"* %0 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = icmp sgt i64 %67, -1
  br i1 %68, label %70, label %69, !prof !3

69:                                               ; preds = %63
  tail call void @llvm.trap() #8
  unreachable

70:                                               ; preds = %63, %60
  %71 = phi i64 [ %65, %63 ], [ %62, %60 ]
  %72 = phi i64 [ %67, %63 ], [ %61, %60 ]
  %73 = inttoptr i64 %71 to i8*
  %74 = tail call zeroext i1 @_ZN4absl16EqualsIgnoreCaseENS_11string_viewES0_(i8* %73, i64 %72, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN6webrtc12_GLOBAL__N_116kPayloadNameH264E, i64 0, i64 0), i64 4) #8
  br i1 %74, label %94, label %75

75:                                               ; preds = %70
  %76 = load i8, i8* %3, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %75
  %79 = zext i8 %76 to i64
  %80 = ptrtoint %"class.std::__1::basic_string"* %0 to i64
  br label %88

81:                                               ; preds = %75
  %82 = bitcast %"class.std::__1::basic_string"* %0 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = icmp sgt i64 %85, -1
  br i1 %86, label %88, label %87, !prof !3

87:                                               ; preds = %81
  tail call void @llvm.trap() #8
  unreachable

88:                                               ; preds = %81, %78
  %89 = phi i64 [ %83, %81 ], [ %80, %78 ]
  %90 = phi i64 [ %85, %81 ], [ %79, %78 ]
  %91 = inttoptr i64 %89 to i8*
  %92 = tail call zeroext i1 @_ZN4absl16EqualsIgnoreCaseENS_11string_viewES0_(i8* %91, i64 %90, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZN6webrtc12_GLOBAL__N_121kPayloadNameMultiplexE, i64 0, i64 0), i64 9) #8
  %93 = select i1 %92, i32 5, i32 0
  br label %94

94:                                               ; preds = %88, %70, %52, %34, %16
  %95 = phi i32 [ 1, %16 ], [ 2, %34 ], [ 3, %52 ], [ 4, %70 ], [ %93, %88 ]
  ret i32 %95
}

; Function Attrs: nounwind
declare zeroext i1 @_ZN4absl16EqualsIgnoreCaseENS_11string_viewES0_(i8*, i64, i8*, i64) local_unnamed_addr #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { noreturn nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
