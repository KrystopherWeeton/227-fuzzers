; ModuleID = '../../content/browser/loader/shared_cors_origin_access_list_impl.cc'
source_filename = "../../content/browser/loader/shared_cors_origin_access_list_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.content::SharedCorsOriginAccessListImpl" = type { %"class.content::SharedCorsOriginAccessList.base", %"class.network::cors::OriginAccessList" }
%"class.content::SharedCorsOriginAccessList.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.network::cors::OriginAccessList" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { i64 }
%"class.content::SharedCorsOriginAccessList" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.11 }
%union.anon.11 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"*, %"class.std::__1::__compressed_pair.15" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.network::mojom::CorsOriginPattern"* }
%"class.network::mojom::CorsOriginPattern" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, i32, i32, i32 }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.mojo::StructPtr"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.20 }
%class.scoped_refptr.20 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.21", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.21" = type { %"class.base::subtle::RefCountedThreadSafeBase" }

@_ZTVN7content30SharedCorsOriginAccessListImplE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::SharedCorsOriginAccessListImpl"*, %"class.url::Origin"*, %"class.std::__1::vector"*, %"class.std::__1::vector"*, %"class.base::OnceCallback"*)* @_ZN7content30SharedCorsOriginAccessListImpl12SetForOriginERKN3url6OriginENSt3__16vectorIN4mojo9StructPtrIN7network5mojom17CorsOriginPatternEEENS5_9allocatorISC_EEEESF_N4base12OnceCallbackIFvvEEE to i8*), i8* bitcast (%"class.network::cors::OriginAccessList"* (%"class.content::SharedCorsOriginAccessListImpl"*)* @_ZN7content30SharedCorsOriginAccessListImpl19GetOriginAccessListEv to i8*), i8* bitcast (void (%"class.content::SharedCorsOriginAccessListImpl"*)* @_ZN7content30SharedCorsOriginAccessListImplD2Ev to i8*), i8* bitcast (void (%"class.content::SharedCorsOriginAccessListImpl"*)* @_ZN7content30SharedCorsOriginAccessListImplD0Ev to i8*)] }, align 8

@_ZN7content30SharedCorsOriginAccessListImplC1Ev = hidden unnamed_addr alias void (%"class.content::SharedCorsOriginAccessListImpl"*), void (%"class.content::SharedCorsOriginAccessListImpl"*)* @_ZN7content30SharedCorsOriginAccessListImplC2Ev
@_ZN7content30SharedCorsOriginAccessListImplD1Ev = hidden unnamed_addr alias void (%"class.content::SharedCorsOriginAccessListImpl"*), void (%"class.content::SharedCorsOriginAccessListImpl"*)* @_ZN7content30SharedCorsOriginAccessListImplD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.content::SharedCorsOriginAccessList"* @_ZN7content26SharedCorsOriginAccessList6CreateEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i8* @_Znwm(i64 40) #7
  %2 = bitcast i8* %1 to i32 (...)***
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = bitcast i8* %3 to i32*
  store i32 0, i32* %4, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7content30SharedCorsOriginAccessListImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %5 = getelementptr inbounds i8, i8* %1, i64 16
  %6 = bitcast i8* %5 to %"class.network::cors::OriginAccessList"*
  tail call void @_ZN7network4cors16OriginAccessListC1Ev(%"class.network::cors::OriginAccessList"* %6) #8
  %7 = atomicrmw add i32* %4, i32 1 monotonic
  %8 = bitcast i8* %1 to %"class.content::SharedCorsOriginAccessList"*
  ret %"class.content::SharedCorsOriginAccessList"* %8
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content30SharedCorsOriginAccessListImplC2Ev(%"class.content::SharedCorsOriginAccessListImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::SharedCorsOriginAccessListImpl", %"class.content::SharedCorsOriginAccessListImpl"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.content::SharedCorsOriginAccessListImpl", %"class.content::SharedCorsOriginAccessListImpl"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %3, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7content30SharedCorsOriginAccessListImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %4 = getelementptr inbounds %"class.content::SharedCorsOriginAccessListImpl", %"class.content::SharedCorsOriginAccessListImpl"* %0, i64 0, i32 1
  tail call void @_ZN7network4cors16OriginAccessListC1Ev(%"class.network::cors::OriginAccessList"* %4) #8
  ret void
}

declare void @_ZN7network4cors16OriginAccessListC1Ev(%"class.network::cors::OriginAccessList"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content30SharedCorsOriginAccessListImpl12SetForOriginERKN3url6OriginENSt3__16vectorIN4mojo9StructPtrIN7network5mojom17CorsOriginPatternEEENS5_9allocatorISC_EEEESF_N4base12OnceCallbackIFvvEEE(%"class.content::SharedCorsOriginAccessListImpl"*, %"class.url::Origin"* dereferenceable(80), %"class.std::__1::vector"*, %"class.std::__1::vector"*, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = getelementptr inbounds %"class.content::SharedCorsOriginAccessListImpl", %"class.content::SharedCorsOriginAccessListImpl"* %0, i64 0, i32 1
  tail call void @_ZN7network4cors16OriginAccessList21SetAllowListForOriginERKN3url6OriginERKNSt3__16vectorIN4mojo9StructPtrINS_5mojom17CorsOriginPatternEEENS6_9allocatorISC_EEEE(%"class.network::cors::OriginAccessList"* %7, %"class.url::Origin"* dereferenceable(80) %1, %"class.std::__1::vector"* dereferenceable(24) %2) #8
  tail call void @_ZN7network4cors16OriginAccessList21SetBlockListForOriginERKN3url6OriginERKNSt3__16vectorIN4mojo9StructPtrINS_5mojom17CorsOriginPatternEEENS6_9allocatorISC_EEEE(%"class.network::cors::OriginAccessList"* %7, %"class.url::Origin"* dereferenceable(80) %1, %"class.std::__1::vector"* dereferenceable(24) %3) #8
  %8 = bitcast %"class.base::OnceCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback"* %4 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  %14 = inttoptr i64 %11 to %"class.base::internal::BindStateBase"*
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %14, i64 0, i32 1
  %16 = bitcast void ()** %15 to void (%"class.base::internal::BindStateBase"*)**
  %17 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %16, align 8
  tail call void %17(%"class.base::internal::BindStateBase"* %14) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8
  ret void
}

declare void @_ZN7network4cors16OriginAccessList21SetAllowListForOriginERKN3url6OriginERKNSt3__16vectorIN4mojo9StructPtrINS_5mojom17CorsOriginPatternEEENS6_9allocatorISC_EEEE(%"class.network::cors::OriginAccessList"*, %"class.url::Origin"* dereferenceable(80), %"class.std::__1::vector"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN7network4cors16OriginAccessList21SetBlockListForOriginERKN3url6OriginERKNSt3__16vectorIN4mojo9StructPtrINS_5mojom17CorsOriginPatternEEENS6_9allocatorISC_EEEE(%"class.network::cors::OriginAccessList"*, %"class.url::Origin"* dereferenceable(80), %"class.std::__1::vector"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.network::cors::OriginAccessList"* @_ZN7content30SharedCorsOriginAccessListImpl19GetOriginAccessListEv(%"class.content::SharedCorsOriginAccessListImpl"* readnone) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.content::SharedCorsOriginAccessListImpl", %"class.content::SharedCorsOriginAccessListImpl"* %0, i64 0, i32 1
  ret %"class.network::cors::OriginAccessList"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content30SharedCorsOriginAccessListImplD2Ev(%"class.content::SharedCorsOriginAccessListImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::SharedCorsOriginAccessListImpl", %"class.content::SharedCorsOriginAccessListImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7content30SharedCorsOriginAccessListImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::SharedCorsOriginAccessListImpl", %"class.content::SharedCorsOriginAccessListImpl"* %0, i64 0, i32 1
  tail call void @_ZN7network4cors16OriginAccessListD1Ev(%"class.network::cors::OriginAccessList"* %3) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7network4cors16OriginAccessListD1Ev(%"class.network::cors::OriginAccessList"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content30SharedCorsOriginAccessListImplD0Ev(%"class.content::SharedCorsOriginAccessListImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::SharedCorsOriginAccessListImpl", %"class.content::SharedCorsOriginAccessListImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7content30SharedCorsOriginAccessListImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::SharedCorsOriginAccessListImpl", %"class.content::SharedCorsOriginAccessListImpl"* %0, i64 0, i32 1
  tail call void @_ZN7network4cors16OriginAccessListD1Ev(%"class.network::cors::OriginAccessList"* %3) #8
  %4 = bitcast %"class.content::SharedCorsOriginAccessListImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
