; ModuleID = '../../third_party/blink/renderer/core/dom/document_encoding_data.cc'
source_filename = "../../third_party/blink/renderer/core/dom/document_encoding_data.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::TextResourceDecoder" = type { %"class.blink::TextResourceDecoderOptions", %"class.WTF::TextEncoding", %"class.std::__1::unique_ptr.2", i32, %"class.WTF::Vector", i8, i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.8" }
%"class.blink::TextResourceDecoderOptions" = type <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, %"class.blink::KURL", [3 x i8], [5 x i8] }>
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.WTF::TextCodec"* }
%"class.WTF::TextCodec" = type { i32 (...)** }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::HTMLMetaCharsetParser"* }
%"class.blink::HTMLMetaCharsetParser" = type opaque

@_ZN5blink20DocumentEncodingDataC1Ev = hidden unnamed_addr alias void (%"class.blink::DocumentEncodingData"*), void (%"class.blink::DocumentEncodingData"*)* @_ZN5blink20DocumentEncodingDataC2Ev
@_ZN5blink20DocumentEncodingDataC1ERKNS_19TextResourceDecoderE = hidden unnamed_addr alias void (%"class.blink::DocumentEncodingData"*, %"class.blink::TextResourceDecoder"*), void (%"class.blink::DocumentEncodingData"*, %"class.blink::TextResourceDecoder"*)* @_ZN5blink20DocumentEncodingDataC2ERKNS_19TextResourceDecoderE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20DocumentEncodingDataC2Ev(%"class.blink::DocumentEncodingData"* nocapture) unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(8) %"class.WTF::TextEncoding"* @_ZN3WTF12UTF8EncodingEv() #3
  %3 = bitcast %"class.WTF::TextEncoding"* %2 to i64*
  %4 = bitcast %"class.blink::DocumentEncodingData"* %0 to i64*
  %5 = load i64, i64* %3, align 8
  store i64 %5, i64* %4, align 8
  %6 = getelementptr inbounds %"class.blink::DocumentEncodingData", %"class.blink::DocumentEncodingData"* %0, i64 0, i32 1
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.blink::DocumentEncodingData", %"class.blink::DocumentEncodingData"* %0, i64 0, i32 2
  store i8 0, i8* %7, align 1
  ret void
}

declare dereferenceable(8) %"class.WTF::TextEncoding"* @_ZN3WTF12UTF8EncodingEv() local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink20DocumentEncodingDataC2ERKNS_19TextResourceDecoderE(%"class.blink::DocumentEncodingData"* nocapture, %"class.blink::TextResourceDecoder"* nocapture readonly dereferenceable(208)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::DocumentEncodingData", %"class.blink::DocumentEncodingData"* %0, i64 0, i32 0, i32 0
  store i8* null, i8** %3, align 8
  %4 = getelementptr inbounds %"class.blink::TextResourceDecoder", %"class.blink::TextResourceDecoder"* %1, i64 0, i32 1
  %5 = bitcast %"class.WTF::TextEncoding"* %4 to i64*
  %6 = bitcast %"class.blink::DocumentEncodingData"* %0 to i64*
  %7 = load i64, i64* %5, align 8
  store i64 %7, i64* %6, align 8
  %8 = getelementptr inbounds %"class.blink::TextResourceDecoder", %"class.blink::TextResourceDecoder"* %1, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, -1
  %11 = icmp ult i32 %10, 2
  %12 = getelementptr inbounds %"class.blink::DocumentEncodingData", %"class.blink::DocumentEncodingData"* %0, i64 0, i32 1
  %13 = zext i1 %11 to i8
  store i8 %13, i8* %12, align 8
  %14 = getelementptr inbounds %"class.blink::TextResourceDecoder", %"class.blink::TextResourceDecoder"* %1, i64 0, i32 9
  %15 = load i8, i8* %14, align 4, !range !2
  %16 = getelementptr inbounds %"class.blink::DocumentEncodingData", %"class.blink::DocumentEncodingData"* %0, i64 0, i32 2
  store i8 %15, i8* %16, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink20DocumentEncodingData11SetEncodingERKN3WTF12TextEncodingE(%"class.blink::DocumentEncodingData"* nocapture, %"class.WTF::TextEncoding"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"class.WTF::TextEncoding"* %1 to i64*
  %4 = bitcast %"class.blink::DocumentEncodingData"* %0 to i64*
  %5 = load i64, i64* %3, align 8
  store i64 %5, i64* %4, align 8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
