; ModuleID = '../../third_party/skia/src/core/SkTime.cpp'
source_filename = "../../third_party/skia/src/core/SkTime.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.SkTime::DateTime" = type { i16, i16, i8, i8, i8, i8, i8, i8 }
%class.SkString = type { %class.sk_sp }
%class.sk_sp = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }

@.str = private unnamed_addr constant [41 x i8] c"%04u-%02u-%02uT%02u:%02u:%02u%c%02d:%02d\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6SkTime8DateTime9toISO8601EP8SkString(%"struct.SkTime::DateTime"* nocapture readonly, %class.SkString*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %class.SkString* %1, null
  br i1 %3, label %37, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.SkTime::DateTime", %"struct.SkTime::DateTime"* %0, i64 0, i32 0
  %6 = load i16, i16* %5, align 2
  %7 = sext i16 %6 to i32
  %8 = icmp sgt i16 %6, -1
  %9 = icmp slt i32 %7, 0
  %10 = sub nsw i32 0, %7
  %11 = select i1 %9, i32 %10, i32 %7
  %12 = trunc i32 %11 to i16
  %13 = udiv i16 %12, 60
  %14 = zext i16 %13 to i32
  %15 = trunc i32 %11 to i16
  %16 = urem i16 %15, 60
  %17 = zext i16 %16 to i32
  %18 = getelementptr inbounds %"struct.SkTime::DateTime", %"struct.SkTime::DateTime"* %0, i64 0, i32 1
  %19 = load i16, i16* %18, align 2
  %20 = zext i16 %19 to i32
  %21 = getelementptr inbounds %"struct.SkTime::DateTime", %"struct.SkTime::DateTime"* %0, i64 0, i32 2
  %22 = load i8, i8* %21, align 2
  %23 = zext i8 %22 to i32
  %24 = getelementptr inbounds %"struct.SkTime::DateTime", %"struct.SkTime::DateTime"* %0, i64 0, i32 4
  %25 = load i8, i8* %24, align 2
  %26 = zext i8 %25 to i32
  %27 = getelementptr inbounds %"struct.SkTime::DateTime", %"struct.SkTime::DateTime"* %0, i64 0, i32 5
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = getelementptr inbounds %"struct.SkTime::DateTime", %"struct.SkTime::DateTime"* %0, i64 0, i32 6
  %31 = load i8, i8* %30, align 2
  %32 = zext i8 %31 to i32
  %33 = getelementptr inbounds %"struct.SkTime::DateTime", %"struct.SkTime::DateTime"* %0, i64 0, i32 7
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = select i1 %8, i32 43, i32 45
  tail call void (%class.SkString*, i8*, ...) @_ZN8SkString6printfEPKcz(%class.SkString* nonnull %1, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0), i32 %20, i32 %23, i32 %26, i32 %29, i32 %32, i32 %35, i32 %36, i32 %14, i32 %17) #4
  br label %37

37:                                               ; preds = %2, %4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN8SkString6printfEPKcz(%class.SkString*, i8*, ...) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkTime11GetDateTimeEPNS_8DateTimeE(%"struct.SkTime::DateTime"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = alloca %struct.tm, align 8
  %4 = icmp eq %"struct.SkTime::DateTime"* %0, null
  br i1 %4, label %41, label %5

5:                                                ; preds = %1
  %6 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #4
  store i64 -6148914691236517206, i64* %2, align 8
  %7 = call i64 @time(i64* nonnull %2) #4
  %8 = bitcast %struct.tm* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %8) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 56, i1 false)
  %9 = call %struct.tm* @gmtime_r(i64* nonnull %2, %struct.tm* nonnull %3) #4
  %10 = getelementptr inbounds %"struct.SkTime::DateTime", %"struct.SkTime::DateTime"* %0, i64 0, i32 0
  store i16 0, i16* %10, align 2
  %11 = getelementptr inbounds %struct.tm, %struct.tm* %3, i64 0, i32 5
  %12 = load i32, i32* %11, align 4
  %13 = trunc i32 %12 to i16
  %14 = add i16 %13, 1900
  %15 = getelementptr inbounds %"struct.SkTime::DateTime", %"struct.SkTime::DateTime"* %0, i64 0, i32 1
  store i16 %14, i16* %15, align 2
  %16 = getelementptr inbounds %struct.tm, %struct.tm* %3, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = trunc i32 %17 to i8
  %19 = add i8 %18, 1
  %20 = getelementptr inbounds %"struct.SkTime::DateTime", %"struct.SkTime::DateTime"* %0, i64 0, i32 2
  store i8 %19, i8* %20, align 2
  %21 = getelementptr inbounds %struct.tm, %struct.tm* %3, i64 0, i32 6
  %22 = load i32, i32* %21, align 8
  %23 = trunc i32 %22 to i8
  %24 = getelementptr inbounds %"struct.SkTime::DateTime", %"struct.SkTime::DateTime"* %0, i64 0, i32 3
  store i8 %23, i8* %24, align 1
  %25 = getelementptr inbounds %struct.tm, %struct.tm* %3, i64 0, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %"struct.SkTime::DateTime", %"struct.SkTime::DateTime"* %0, i64 0, i32 4
  store i8 %27, i8* %28, align 2
  %29 = getelementptr inbounds %struct.tm, %struct.tm* %3, i64 0, i32 2
  %30 = load i32, i32* %29, align 8
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %"struct.SkTime::DateTime", %"struct.SkTime::DateTime"* %0, i64 0, i32 5
  store i8 %31, i8* %32, align 1
  %33 = getelementptr inbounds %struct.tm, %struct.tm* %3, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %"struct.SkTime::DateTime", %"struct.SkTime::DateTime"* %0, i64 0, i32 6
  store i8 %35, i8* %36, align 2
  %37 = getelementptr inbounds %struct.tm, %struct.tm* %3, i64 0, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %"struct.SkTime::DateTime", %"struct.SkTime::DateTime"* %0, i64 0, i32 7
  store i8 %39, i8* %40, align 1
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %8) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #4
  br label %41

41:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind
declare i64 @time(i64*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind
declare %struct.tm* @gmtime_r(i64*, %struct.tm*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZN6SkTime8GetNSecsEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i64 @_ZNSt3__16chrono12steady_clock3nowEv() #4
  %2 = sitofp i64 %1 to double
  ret double %2
}

; Function Attrs: nounwind
declare i64 @_ZNSt3__16chrono12steady_clock3nowEv() local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
