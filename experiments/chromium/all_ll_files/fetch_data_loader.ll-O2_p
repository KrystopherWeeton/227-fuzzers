; ModuleID = '../../third_party/blink/renderer/core/fetch/fetch_data_loader.cc'
source_filename = "../../third_party/blink/renderer/core/fetch/fetch_data_loader.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.147", i32, [4 x i8], %"class.std::__1::unique_ptr.285", %"class.std::__1::unique_ptr.285", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.295", %"class.std::__1::unique_ptr.301", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.318", %"class.std::__1::unique_ptr.324", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.331", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.174", %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.198", %"class.std::__1::unique_ptr.198", %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.212", %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.226", %"class.std::__1::unique_ptr.233", %"class.std::__1::unique_ptr.240", %"class.std::__1::unique_ptr.265", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.183" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.183" = type { %"struct.std::__1::__atomic_base.184" }
%"struct.std::__1::__atomic_base.184" = type { %"struct.std::__1::__atomic_base.185" }
%"struct.std::__1::__atomic_base.185" = type { %"struct.std::__1::__cxx_atomic_impl.186" }
%"struct.std::__1::__cxx_atomic_impl.186" = type { %"struct.std::__1::__cxx_atomic_base_impl.187" }
%"struct.std::__1::__cxx_atomic_base_impl.187" = type { i64 }
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.blink::Worklist.194"* }
%"class.blink::Worklist.194" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.183" }
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.blink::Worklist.201"* }
%"class.blink::Worklist.201" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.183" }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.blink::Worklist.208"* }
%"class.blink::Worklist.208" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.183" }
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.blink::Worklist.215"* }
%"class.blink::Worklist.215" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.183" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::Worklist.222"* }
%"class.blink::Worklist.222" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.183" }
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.blink::Worklist.229"* }
%"class.blink::Worklist.229" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.183" }
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.blink::Worklist.236"* }
%"class.blink::Worklist.236" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.183" }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.243", %"class.std::__1::__compressed_pair.252", %"class.std::__1::__compressed_pair.257", %"class.std::__1::__compressed_pair.259", [4 x i8] }>
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245", %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { i64 }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { float }
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.268", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.277" }
%"class.WTF::Vector.277" = type { %"class.WTF::VectorBuffer.278" }
%"class.WTF::VectorBuffer.278" = type { %"class.WTF::VectorBufferBase.279" }
%"class.WTF::VectorBufferBase.279" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.301" = type { %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.307" }
%"class.std::__1::unique_ptr.307" = type { %"class.std::__1::__compressed_pair.308" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.194"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.201"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.208"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.215"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.222"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.310" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.318" = type { %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.330 }
%class.scoped_refptr.330 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.331" = type { %"struct.std::__1::__atomic_base.332" }
%"struct.std::__1::__atomic_base.332" = type { %"struct.std::__1::__cxx_atomic_impl.333" }
%"struct.std::__1::__cxx_atomic_impl.333" = type { %"struct.std::__1::__cxx_atomic_base_impl.334" }
%"struct.std::__1::__cxx_atomic_base_impl.334" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.335" }
%"class.base::time_internal::TimeBase.335" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i32 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::FetchDataLoader" = type { i32 (...)** }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.2" }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.14" }
%"class.base::RefCountedThreadSafe.14" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.blink::TextResourceDecoderOptions" = type <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, %"class.blink::KURL", [3 x i8], [5 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.76" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.blink::KURL"* }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.135, i8, %"class.mojo::ScopedHandleBase.136", %class.scoped_refptr.137, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.135 = type { %"class.base::SequencedTaskRunner"* }
%"class.mojo::ScopedHandleBase.136" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.137 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.138 }
%class.scoped_refptr.138 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.139", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.139" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.140 }
%class.scoped_refptr.140 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.141", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.141" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.142" }
%"struct.std::__1::atomic.142" = type { %"struct.std::__1::__atomic_base.143" }
%"struct.std::__1::__atomic_base.143" = type { %"struct.std::__1::__atomic_base.144" }
%"struct.std::__1::__atomic_base.144" = type { %"struct.std::__1::__cxx_atomic_impl.145" }
%"struct.std::__1::__cxx_atomic_impl.145" = type { %"struct.std::__1::__cxx_atomic_base_impl.146" }
%"struct.std::__1::__cxx_atomic_base_impl.146" = type { i8 }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.62 }
%union.anon.62 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle" = type <{ %"class.blink::FetchDataLoader", %"class.blink::FetchDataLoader::Client", %"class.blink::Member", %"class.blink::Member.9", %"class.blink::Member.11", %"class.WTF::String", %class.scoped_refptr.1, %class.scoped_refptr.13, i8, [7 x i8] }>
%"class.blink::FetchDataLoader::Client" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::BytesConsumer"* }
%"class.blink::BytesConsumer" = type { i32 (...)** }
%"class.blink::Member.9" = type { %"class.blink::MemberBase.10" }
%"class.blink::MemberBase.10" = type { %"class.blink::FetchDataLoader::Client"* }
%"class.blink::Member.11" = type { %"class.blink::MemberBase.12" }
%"class.blink::MemberBase.12" = type { %"class.blink::FetchDataLoader"* }
%class.scoped_refptr.1 = type { %"class.base::SingleThreadTaskRunner"* }
%class.scoped_refptr.13 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobData" = type { %"class.WTF::String", i32, %"class.WTF::Vector.39", i64, %"class.blink::BlobBytesProvider"* }
%"class.WTF::Vector.39" = type { %"class.WTF::VectorBuffer.40" }
%"class.WTF::VectorBuffer.40" = type { %"class.WTF::VectorBufferBase.41" }
%"class.WTF::VectorBufferBase.41" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.42" }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.blink::mojom::blink::DataElement"* }
%"class.blink::mojom::blink::DataElement" = type { i32, %"union.blink::mojom::blink::DataElement::Union_" }
%"union.blink::mojom::blink::DataElement::Union_" = type { %"class.mojo::StructPtr.45"* }
%"class.mojo::StructPtr.45" = type { %"class.std::__1::unique_ptr.46" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::mojom::blink::DataElementBytes"* }
%"class.blink::mojom::blink::DataElementBytes" = type { i64, %"class.absl::optional", %"class.mojo::PendingRemote.54" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.WTF::Vector.49" }
%"class.WTF::Vector.49" = type { %"class.WTF::VectorBuffer.50" }
%"class.WTF::VectorBuffer.50" = type { %"class.WTF::VectorBufferBase.51" }
%"class.WTF::VectorBufferBase.51" = type { i8*, i32, i32 }
%"class.mojo::PendingRemote.54" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.blink::BlobBytesProvider" = type opaque
%"class.mojo::ScopedHandleBase.351" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.mojo::PendingAssociatedRemote" = type <{ %"class.mojo::ScopedInterfaceEndpointHandle", i32, [4 x i8] }>
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.364 }
%class.scoped_refptr.364 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::mojom::blink::BlobRegistry" = type { i32 (...)** }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.336", %"class.blink::FreeList", %"class.WTF::Vector.341" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [256 x i8] }
%"class.WTF::Vector.336" = type { %"class.WTF::VectorBuffer.337" }
%"class.WTF::VectorBuffer.337" = type { %"class.WTF::VectorBufferBase.338" }
%"class.WTF::VectorBufferBase.338" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.WTF::Vector.341" = type { %"class.WTF::VectorBuffer.342" }
%"class.WTF::VectorBuffer.342" = type { %"class.WTF::VectorBufferBase.343" }
%"class.WTF::VectorBufferBase.343" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.blink::DOMArrayBuffer" = type { %"class.blink::DOMArrayBufferBase.base", [7 x i8] }
%"class.blink::DOMArrayBufferBase.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8 }>
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.blink::FormData" = type <{ %"class.blink::ScriptWrappable", %"class.blink::PairIterable", %"class.WTF::TextEncoding", %"class.blink::HeapVector", i8, [7 x i8] }>
%"class.blink::PairIterable" = type { %"class.blink::Iterable" }
%"class.blink::Iterable" = type { i32 (...)** }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.27" }
%"class.WTF::Vector.27" = type { %"class.WTF::VectorBuffer.28" }
%"class.WTF::VectorBuffer.28" = type { %"class.WTF::VectorBufferBase.29" }
%"class.WTF::VectorBufferBase.29" = type { %"class.blink::Member.30"*, i32, i32 }
%"class.blink::Member.30" = type opaque
%"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer" = type { %"class.blink::FetchDataLoader", %"class.blink::BytesConsumer::Client", %"class.blink::Member", %"class.blink::Member.9", %class.scoped_refptr.15 }
%"class.blink::BytesConsumer::Client" = type { %"class.blink::GarbageCollectedMixin" }
%class.scoped_refptr.15 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted", i64, %"class.WTF::Vector", %"class.WTF::Vector.16" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.WTF::Vector.16" = type { %"class.WTF::VectorBuffer.17" }
%"class.WTF::VectorBuffer.17" = type { %"class.WTF::VectorBufferBase.18" }
%"class.WTF::VectorBufferBase.18" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type opaque
%"class.WTF::SharedBuffer::Iterator" = type { i32, %"class.base::span", %"class.WTF::SharedBuffer"* }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", i8* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.base::CheckedContiguousIterator" = type { i8*, i8*, i8* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure" = type { %"class.blink::FetchDataLoader", %"class.blink::BytesConsumer::Client", %"class.blink::Member", %"class.blink::Member.9" }
%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData" = type { %"class.blink::FetchDataLoader", %"class.blink::BytesConsumer::Client", %"class.blink::MultipartParser::Client", %"class.blink::Member", %"class.blink::Member.9", %"class.blink::Member.21", %"class.blink::Member.32", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData::Entry", %"class.WTF::String" }
%"class.blink::MultipartParser::Client" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::FormData"* }
%"class.blink::Member.32" = type { %"class.blink::MemberBase.33" }
%"class.blink::MemberBase.33" = type { %"class.blink::MultipartParser"* }
%"class.blink::MultipartParser" = type <{ %"class.blink::MultipartParser::Matcher", %"class.WTF::Vector", %"class.blink::Member.36", %"class.WTF::Vector", i32, [4 x i8] }>
%"class.blink::MultipartParser::Matcher" = type { i8*, i64, i64 }
%"class.blink::Member.36" = type { %"class.blink::MemberBase.37" }
%"class.blink::MemberBase.37" = type { %"class.blink::MultipartParser::Client"* }
%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData::Entry" = type { %"class.std::__1::unique_ptr.38", %"class.WTF::String", %"class.WTF::String", %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.116" }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::BlobData"* }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.WTF::StringBuilder"* }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.103, i32, i8, i8, [2 x i8] }>
%union.anon.103 = type { %"class.WTF::Vector.104" }
%"class.WTF::Vector.104" = type { %"class.WTF::VectorBuffer.105" }
%"class.WTF::VectorBuffer.105" = type { %"class.WTF::VectorBufferBase.51", [16 x i8] }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.blink::TextResourceDecoder"* }
%"class.blink::TextResourceDecoder" = type { %"class.blink::TextResourceDecoderOptions", %"class.WTF::TextEncoding", %"class.std::__1::unique_ptr.119", i32, %"class.WTF::Vector", i8, i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.125" }
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.WTF::TextCodec"* }
%"class.WTF::TextCodec" = type { i32 (...)** }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.blink::HTMLMetaCharsetParser"* }
%"class.blink::HTMLMetaCharsetParser" = type opaque
%"class.WTF::StringUTF8Adaptor" = type <{ %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::ParsedContentDisposition" = type { %"class.WTF::String", %"class.absl::optional.381" }
%"class.absl::optional.381" = type { %"class.absl::optional_internal::optional_data.382" }
%"class.absl::optional_internal::optional_data.382" = type { %"class.absl::optional_internal::optional_data_base.383" }
%"class.absl::optional_internal::optional_data_base.383" = type { %"class.absl::optional_internal::optional_data_dtor_base.384" }
%"class.absl::optional_internal::optional_data_dtor_base.384" = type { i8, %union.anon.385 }
%union.anon.385 = type { %"class.blink::ParsedContentHeaderFieldParameters" }
%"class.blink::ParsedContentHeaderFieldParameters" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"*, i32, i32 }
%"struct.blink::ParsedContentHeaderFieldParameters::NameValue" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.absl::optional.64" = type { %"class.absl::optional_internal::optional_data.65" }
%"class.absl::optional_internal::optional_data.65" = type { %"class.absl::optional_internal::optional_data_base.66" }
%"class.absl::optional_internal::optional_data_base.66" = type { %"class.absl::optional_internal::optional_data_dtor_base.67" }
%"class.absl::optional_internal::optional_data_dtor_base.67" = type { i8, %union.anon.68 }
%union.anon.68 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::File" = type { %"class.blink::Blob", i8, i32, %"class.WTF::String", %"class.WTF::String", %"class.blink::KURL", %"class.absl::optional.393", %"class.absl::optional.64", %"class.WTF::String" }
%"class.blink::Blob" = type { %"class.blink::ScriptWrappable", %"class.blink::URLRegistrable", %"class.blink::ImageBitmapSource", %class.scoped_refptr.13 }
%"class.blink::URLRegistrable" = type { i32 (...)** }
%"class.blink::ImageBitmapSource" = type { i32 (...)** }
%"class.absl::optional.393" = type { %"class.absl::optional_internal::optional_data.394" }
%"class.absl::optional_internal::optional_data.394" = type { %"class.absl::optional_internal::optional_data_base.395" }
%"class.absl::optional_internal::optional_data_base.395" = type { %"class.absl::optional_internal::optional_data_dtor_base.396" }
%"class.absl::optional_internal::optional_data_dtor_base.396" = type { i8, %union.anon.397 }
%union.anon.397 = type { i64 }
%"class.WTF::StringHasher" = type { i32, i8, i16 }
%"class.blink::(anonymous namespace)::FetchDataLoaderAsString" = type { %"class.blink::FetchDataLoader", %"class.blink::BytesConsumer::Client", %"class.blink::Member", %"class.blink::Member.9", %"class.std::__1::unique_ptr.116", %"class.blink::TextResourceDecoderOptions", %"class.WTF::StringBuilder" }
%"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe" = type { %"class.blink::FetchDataLoader", %"class.blink::BytesConsumer::Client", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member", %"class.blink::Member.9", %"class.mojo::ScopedHandleBase.134", %"class.mojo::SimpleWatcher" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.mojo::ScopedHandleBase.134" = type { %"class.mojo::DataPipeProducerHandle" }
%"class.mojo::DataPipeProducerHandle" = type { %"class.mojo::Handle" }
%struct.MojoCreateDataPipeOptions = type { i32, i32, i32, i32 }
%"class.base::RepeatingCallback.402" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.blink::WeakPersistent.403" = type { %"class.blink::PersistentBase.404" }
%"class.blink::PersistentBase.404" = type { %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"*, %"class.blink::PersistentNodePtr" }
%struct.MojoWriteDataOptions = type { i32, i32 }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }

$_ZN5blink10ThreadHeap8AllocateINS_15FetchDataLoaderEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15FetchDataLoaderEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15FetchDataLoaderEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15FetchDataLoaderEE7GetNameEPKv = comdat any

$_ZN5blink15FetchDataLoader6Client28DidFetchDataLoadedBlobHandleE13scoped_refptrINS_14BlobDataHandleEE = comdat any

$_ZN5blink15FetchDataLoader6Client29DidFetchDataLoadedArrayBufferEPNS_14DOMArrayBufferE = comdat any

$_ZN5blink15FetchDataLoader6Client26DidFetchDataLoadedFormDataEPNS_8FormDataE = comdat any

$_ZN5blink15FetchDataLoader6Client24DidFetchDataLoadedStringERKN3WTF6StringE = comdat any

$_ZN5blink15FetchDataLoader6Client30DidFetchDataLoadedCustomFormatEv = comdat any

$_ZN5blink7Visitor5TraceINS_15FetchDataLoader6ClientEEEvRKNS_6MemberIT_EE = comdat any

$_ZN5blink10TraceTraitINS_13BytesConsumerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNK3WTF12SharedBuffer8IteratoreqERKS1_ = comdat any

$_ZNSt3__15equalIN4base25CheckedContiguousIteratorIKcEES4_EEbT_S5_T0_S6_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIKcE15CheckComparableERKS2_ = comdat any

$_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIKcEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKcEppEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKcEC2EPS1_S3_S3_ = comdat any

$_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE6AppendIcEEvPKT_j = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15MultipartParserEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15MultipartParserEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15MultipartParserEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15MultipartParserEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_8FormDataEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink24ParsedContentDispositionD2Ev = comdat any

$_ZNK3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6LookupERKS1_ = comdat any

$_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE = comdat any

$_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN3WTF5DequeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm = comdat any

$_ZN4mojo13SimpleWatcher17DiscardReadyStateERKN4base17RepeatingCallbackIFvjEEEjRKNS_18HandleSignalsStateE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvRKNS_17RepeatingCallbackIFvjEEEjRKN4mojo18HandleSignalsStateEEJS5_EEEFvjSB_EE3RunEPNS0_13BindStateBaseEjSB_ = comdat any

$_ZN4base8internal9BindStateIPFvRKNS_17RepeatingCallbackIFvjEEEjRKN4mojo18HandleSignalsStateEEJS4_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZZN5blink11GCInfoTraitINS_15FetchDataLoaderEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15FetchDataLoaderEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15MultipartParserEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15MultipartParserEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15FetchDataLoaderEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::FetchDataLoader]\00", align 1
@.str = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15FetchDataLoaderEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15FetchDataLoaderEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15FetchDataLoaderEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15FetchDataLoaderEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15FetchDataLoaderEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.2 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandleE = internal unnamed_addr constant { [11 x i8*], [14 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"*)* @_ZN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandleD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"*)* @_ZN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandleD0Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"*, %"class.blink::BytesConsumer"*, %"class.blink::FetchDataLoader::Client"*)* @_ZN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandle5StartEPNS_13BytesConsumerEPNS_15FetchDataLoader6ClientE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"*)* @_ZN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandle6CancelEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"*, %"class.blink::Visitor"*)* @_ZNK5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandle5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"*, %"class.mojo::ScopedHandleBase.351"*)* @_ZN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandle27DidFetchDataStartedDataPipeEN4mojo16ScopedHandleBaseINS2_22DataPipeConsumerHandleEEE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"*)* @_ZN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandle26DidFetchDataLoadedDataPipeEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"*)* @_ZN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandle22DidFetchDataLoadFailedEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"*)* @_ZN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandle5AbortEv to i8*)], [14 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"*, %"class.blink::Visitor"*)* @_ZThn8_NK5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandle5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"*)* @_ZThn8_N5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandleD1Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"*)* @_ZThn8_N5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandleD0Ev to i8*), i8* bitcast (void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::BlobDataHandle"*)* @_ZN5blink15FetchDataLoader6Client28DidFetchDataLoadedBlobHandleE13scoped_refptrINS_14BlobDataHandleEE to i8*), i8* bitcast (void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::DOMArrayBuffer"*)* @_ZN5blink15FetchDataLoader6Client29DidFetchDataLoadedArrayBufferEPNS_14DOMArrayBufferE to i8*), i8* bitcast (void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::FormData"*)* @_ZN5blink15FetchDataLoader6Client26DidFetchDataLoadedFormDataEPNS_8FormDataE to i8*), i8* bitcast (void (%"class.blink::FetchDataLoader::Client"*, %"class.WTF::String"*)* @_ZN5blink15FetchDataLoader6Client24DidFetchDataLoadedStringERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"*, %"class.mojo::ScopedHandleBase.351"*)* @_ZThn8_N5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandle27DidFetchDataStartedDataPipeEN4mojo16ScopedHandleBaseINS2_22DataPipeConsumerHandleEEE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"*)* @_ZThn8_N5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandle26DidFetchDataLoadedDataPipeEv to i8*), i8* bitcast (void (%"class.blink::FetchDataLoader::Client"*)* @_ZN5blink15FetchDataLoader6Client30DidFetchDataLoadedCustomFormatEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"*)* @_ZThn8_N5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandle22DidFetchDataLoadFailedEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"*)* @_ZThn8_N5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandle5AbortEv to i8*)] }, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.3 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.4 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.5 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@_ZTVN5blink12_GLOBAL__N_128FetchDataLoaderAsArrayBufferE = internal unnamed_addr constant { [9 x i8*], [7 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"*)* @_ZN5blink12_GLOBAL__N_128FetchDataLoaderAsArrayBufferD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"*)* @_ZN5blink12_GLOBAL__N_128FetchDataLoaderAsArrayBufferD0Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"*, %"class.blink::BytesConsumer"*, %"class.blink::FetchDataLoader::Client"*)* @_ZN5blink12_GLOBAL__N_128FetchDataLoaderAsArrayBuffer5StartEPNS_13BytesConsumerEPNS_15FetchDataLoader6ClientE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"*)* @_ZN5blink12_GLOBAL__N_128FetchDataLoaderAsArrayBuffer6CancelEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"*, %"class.blink::Visitor"*)* @_ZNK5blink12_GLOBAL__N_128FetchDataLoaderAsArrayBuffer5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"*)* @_ZN5blink12_GLOBAL__N_128FetchDataLoaderAsArrayBuffer13OnStateChangeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"*)* @_ZNK5blink12_GLOBAL__N_128FetchDataLoaderAsArrayBuffer9DebugNameEv to i8*)], [7 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"*, %"class.blink::Visitor"*)* @_ZThn8_NK5blink12_GLOBAL__N_128FetchDataLoaderAsArrayBuffer5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"*)* @_ZThn8_N5blink12_GLOBAL__N_128FetchDataLoaderAsArrayBufferD1Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"*)* @_ZThn8_N5blink12_GLOBAL__N_128FetchDataLoaderAsArrayBufferD0Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"*)* @_ZThn8_N5blink12_GLOBAL__N_128FetchDataLoaderAsArrayBuffer13OnStateChangeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"*)* @_ZThn8_NK5blink12_GLOBAL__N_128FetchDataLoaderAsArrayBuffer9DebugNameEv to i8*)] }, align 8
@.str.6 = private unnamed_addr constant [23 x i8] c"start_ == other.start_\00", align 1
@.str.7 = private unnamed_addr constant [42 x i8] c"../../base/containers/checked_iterators.h\00", align 1
@.str.8 = private unnamed_addr constant [19 x i8] c"end_ == other.end_\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.10 = private unnamed_addr constant [17 x i8] c"current_ != end_\00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"start <= current\00", align 1
@.str.12 = private unnamed_addr constant [15 x i8] c"current <= end\00", align 1
@.str.13 = private unnamed_addr constant [29 x i8] c"FetchDataLoaderAsArrayBuffer\00", align 1
@_ZTVN5blink12_GLOBAL__N_124FetchDataLoaderAsFailureE = internal unnamed_addr constant { [9 x i8*], [7 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure"*)* @_ZN5blink12_GLOBAL__N_124FetchDataLoaderAsFailureD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure"*)* @_ZN5blink12_GLOBAL__N_124FetchDataLoaderAsFailureD0Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure"*, %"class.blink::BytesConsumer"*, %"class.blink::FetchDataLoader::Client"*)* @_ZN5blink12_GLOBAL__N_124FetchDataLoaderAsFailure5StartEPNS_13BytesConsumerEPNS_15FetchDataLoader6ClientE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure"*)* @_ZN5blink12_GLOBAL__N_124FetchDataLoaderAsFailure6CancelEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure"*, %"class.blink::Visitor"*)* @_ZNK5blink12_GLOBAL__N_124FetchDataLoaderAsFailure5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure"*)* @_ZN5blink12_GLOBAL__N_124FetchDataLoaderAsFailure13OnStateChangeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure"*)* @_ZNK5blink12_GLOBAL__N_124FetchDataLoaderAsFailure9DebugNameEv to i8*)], [7 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure"*, %"class.blink::Visitor"*)* @_ZThn8_NK5blink12_GLOBAL__N_124FetchDataLoaderAsFailure5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure"*)* @_ZThn8_N5blink12_GLOBAL__N_124FetchDataLoaderAsFailureD1Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure"*)* @_ZThn8_N5blink12_GLOBAL__N_124FetchDataLoaderAsFailureD0Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure"*)* @_ZThn8_N5blink12_GLOBAL__N_124FetchDataLoaderAsFailure13OnStateChangeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure"*)* @_ZThn8_NK5blink12_GLOBAL__N_124FetchDataLoaderAsFailure9DebugNameEv to i8*)] }, align 8
@.str.14 = private unnamed_addr constant [25 x i8] c"FetchDataLoaderAsFailure\00", align 1
@_ZTVN5blink12_GLOBAL__N_125FetchDataLoaderAsFormDataE = internal unnamed_addr constant { [12 x i8*], [7 x i8*], [8 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"*)* @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsFormDataD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"*)* @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsFormDataD0Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"*, %"class.blink::BytesConsumer"*, %"class.blink::FetchDataLoader::Client"*)* @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsFormData5StartEPNS_13BytesConsumerEPNS_15FetchDataLoader6ClientE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"*)* @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsFormData6CancelEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"*, %"class.blink::Visitor"*)* @_ZNK5blink12_GLOBAL__N_125FetchDataLoaderAsFormData5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"*)* @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsFormData13OnStateChangeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"*)* @_ZNK5blink12_GLOBAL__N_125FetchDataLoaderAsFormData9DebugNameEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"*, %"class.blink::HTTPHeaderMap"*)* @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsFormData35PartHeaderFieldsInMultipartReceivedERKNS_13HTTPHeaderMapE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"*, i8*, i64)* @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsFormData27PartDataInMultipartReceivedEPKcm to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"*)* @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsFormData32PartDataInMultipartFullyReceivedEv to i8*)], [7 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"*, %"class.blink::Visitor"*)* @_ZThn8_NK5blink12_GLOBAL__N_125FetchDataLoaderAsFormData5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"*)* @_ZThn8_N5blink12_GLOBAL__N_125FetchDataLoaderAsFormDataD1Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"*)* @_ZThn8_N5blink12_GLOBAL__N_125FetchDataLoaderAsFormDataD0Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"*)* @_ZThn8_N5blink12_GLOBAL__N_125FetchDataLoaderAsFormData13OnStateChangeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"*)* @_ZThn8_NK5blink12_GLOBAL__N_125FetchDataLoaderAsFormData9DebugNameEv to i8*)], [8 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"*, %"class.blink::Visitor"*)* @_ZThn16_NK5blink12_GLOBAL__N_125FetchDataLoaderAsFormData5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"*)* @_ZThn16_N5blink12_GLOBAL__N_125FetchDataLoaderAsFormDataD1Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"*)* @_ZThn16_N5blink12_GLOBAL__N_125FetchDataLoaderAsFormDataD0Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"*, %"class.blink::HTTPHeaderMap"*)* @_ZThn16_N5blink12_GLOBAL__N_125FetchDataLoaderAsFormData35PartHeaderFieldsInMultipartReceivedERKNS_13HTTPHeaderMapE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"*, i8*, i64)* @_ZThn16_N5blink12_GLOBAL__N_125FetchDataLoaderAsFormData27PartDataInMultipartReceivedEPKcm to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"*)* @_ZThn16_N5blink12_GLOBAL__N_125FetchDataLoaderAsFormData32PartDataInMultipartFullyReceivedEv to i8*)] }, align 8
@.str.15 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@.str.16 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.18 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.19 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15MultipartParserEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::MultipartParser]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15MultipartParserEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15MultipartParserEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15MultipartParserEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15MultipartParserEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15MultipartParserEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.20 = private unnamed_addr constant [26 x i8] c"FetchDataLoaderAsFormData\00", align 1
@_ZN5blink10http_names19kContentDispositionE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.21 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.22 = private unnamed_addr constant [10 x i8] c"form-data\00", align 1
@_ZN5blink10http_names12kContentTypeE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.23 = private unnamed_addr constant [11 x i8] c"text/plain\00", align 1
@_ZN3WTF10StringImpl20kLatin1CaseFoldTableE = external local_unnamed_addr constant [256 x i16], align 16
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZTVN5blink12_GLOBAL__N_123FetchDataLoaderAsStringE = internal unnamed_addr constant { [9 x i8*], [7 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsString"*)* @_ZN5blink12_GLOBAL__N_123FetchDataLoaderAsStringD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsString"*)* @_ZN5blink12_GLOBAL__N_123FetchDataLoaderAsStringD0Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsString"*, %"class.blink::BytesConsumer"*, %"class.blink::FetchDataLoader::Client"*)* @_ZN5blink12_GLOBAL__N_123FetchDataLoaderAsString5StartEPNS_13BytesConsumerEPNS_15FetchDataLoader6ClientE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsString"*)* @_ZN5blink12_GLOBAL__N_123FetchDataLoaderAsString6CancelEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsString"*, %"class.blink::Visitor"*)* @_ZNK5blink12_GLOBAL__N_123FetchDataLoaderAsString5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsString"*)* @_ZN5blink12_GLOBAL__N_123FetchDataLoaderAsString13OnStateChangeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::(anonymous namespace)::FetchDataLoaderAsString"*)* @_ZNK5blink12_GLOBAL__N_123FetchDataLoaderAsString9DebugNameEv to i8*)], [7 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsString"*, %"class.blink::Visitor"*)* @_ZThn8_NK5blink12_GLOBAL__N_123FetchDataLoaderAsString5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsString"*)* @_ZThn8_N5blink12_GLOBAL__N_123FetchDataLoaderAsStringD1Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsString"*)* @_ZThn8_N5blink12_GLOBAL__N_123FetchDataLoaderAsStringD0Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsString"*)* @_ZThn8_N5blink12_GLOBAL__N_123FetchDataLoaderAsString13OnStateChangeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::(anonymous namespace)::FetchDataLoaderAsString"*)* @_ZThn8_NK5blink12_GLOBAL__N_123FetchDataLoaderAsString9DebugNameEv to i8*)] }, align 8
@.str.24 = private unnamed_addr constant [24 x i8] c"FetchDataLoaderAsString\00", align 1
@_ZTVN5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipeE = internal unnamed_addr constant { [9 x i8*], [7 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"*)* @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipeD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"*)* @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipeD0Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"*, %"class.blink::BytesConsumer"*, %"class.blink::FetchDataLoader::Client"*)* @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipe5StartEPNS_13BytesConsumerEPNS_15FetchDataLoader6ClientE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"*)* @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipe6CancelEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"*, %"class.blink::Visitor"*)* @_ZNK5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipe5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"*)* @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipe13OnStateChangeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"*)* @_ZNK5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipe9DebugNameEv to i8*)], [7 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"*, %"class.blink::Visitor"*)* @_ZThn8_NK5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipe5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"*)* @_ZThn8_N5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipeD1Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"*)* @_ZThn8_N5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipeD0Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"*)* @_ZThn8_N5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipe13OnStateChangeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"*)* @_ZThn8_NK5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipe9DebugNameEv to i8*)] }, align 8
@.str.25 = private unnamed_addr constant [26 x i8] c"FetchDataLoaderAsDataPipe\00", align 1
@.str.26 = private unnamed_addr constant [65 x i8] c"../../third_party/blink/renderer/core/fetch/fetch_data_loader.cc\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEEEEPKcv = private unnamed_addr constant [119 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FetchDataLoader"* @_ZN5blink15FetchDataLoader24CreateLoaderAsBlobHandleERKN3WTF6StringE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.base::SingleThreadTaskRunner"* %1 to i64
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15FetchDataLoaderEEEPhm(i64 72) #13
  %5 = bitcast i8* %4 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [14 x i8*] }, { [11 x i8*], [14 x i8*] }* @_ZTVN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [14 x i8*] }, { [11 x i8*], [14 x i8*] }* @_ZTVN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandleE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds i8, i8* %4, i64 16
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #13
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds i8, i8* %4, i64 40
  %10 = bitcast i8* %9 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #13
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  tail call void @llvm.trap() #13
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %27, %12, %2
  %30 = getelementptr inbounds i8, i8* %4, i64 48
  %31 = bitcast i8* %30 to i64*
  store i64 %3, i64* %31, align 8
  %32 = getelementptr inbounds i8, i8* %4, i64 56
  %33 = bitcast i8* %32 to %"class.blink::BlobDataHandle"**
  store %"class.blink::BlobDataHandle"* null, %"class.blink::BlobDataHandle"** %33, align 8
  %34 = getelementptr inbounds i8, i8* %4, i64 64
  store i8 0, i8* %34, align 8
  %35 = getelementptr inbounds i8, i8* %4, i64 -4
  %36 = bitcast i8* %35 to i16*
  %37 = load atomic i16, i16* %36 monotonic, align 2
  %38 = or i16 %37, 1
  store atomic i16 %38, i16* %36 release, align 2
  %39 = bitcast i8* %4 to %"class.blink::FetchDataLoader"*
  ret %"class.blink::FetchDataLoader"* %39
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FetchDataLoader"* @_ZN5blink15FetchDataLoader25CreateLoaderAsArrayBufferEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15FetchDataLoaderEEEPhm(i64 40) #13
  %2 = bitcast i8* %1 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_128FetchDataLoaderAsArrayBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_128FetchDataLoaderAsArrayBufferE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds i8, i8* %1, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #13
  %4 = getelementptr inbounds i8, i8* %1, i64 -4
  %5 = bitcast i8* %4 to i16*
  %6 = load atomic i16, i16* %5 monotonic, align 2
  %7 = or i16 %6, 1
  store atomic i16 %7, i16* %5 release, align 2
  %8 = bitcast i8* %1 to %"class.blink::FetchDataLoader"*
  ret %"class.blink::FetchDataLoader"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FetchDataLoader"* @_ZN5blink15FetchDataLoader21CreateLoaderAsFailureEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15FetchDataLoaderEEEPhm(i64 32) #13
  %2 = bitcast i8* %1 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_124FetchDataLoaderAsFailureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_124FetchDataLoaderAsFailureE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds i8, i8* %1, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false) #13
  %4 = getelementptr inbounds i8, i8* %1, i64 -4
  %5 = bitcast i8* %4 to i16*
  %6 = load atomic i16, i16* %5 monotonic, align 2
  %7 = or i16 %6, 1
  store atomic i16 %7, i16* %5 release, align 2
  %8 = bitcast i8* %1 to %"class.blink::FetchDataLoader"*
  ret %"class.blink::FetchDataLoader"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FetchDataLoader"* @_ZN5blink15FetchDataLoader22CreateLoaderAsFormDataERKN3WTF6StringE(%"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15FetchDataLoaderEEEPhm(i64 104) #13
  %3 = getelementptr inbounds i8, i8* %2, i64 16
  %4 = bitcast i8* %3 to i32 (...)***
  %5 = bitcast i8* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [7 x i8*], [8 x i8*] }, { [12 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink12_GLOBAL__N_125FetchDataLoaderAsFormDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [7 x i8*], [8 x i8*] }, { [12 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink12_GLOBAL__N_125FetchDataLoaderAsFormDataE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [7 x i8*], [8 x i8*] }, { [12 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink12_GLOBAL__N_125FetchDataLoaderAsFormDataE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 24
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 72, i1 false) #13
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds i8, i8* %2, i64 96
  %10 = bitcast i8* %9 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #13
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  tail call void @llvm.trap() #13
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %1, %12, %27
  %30 = getelementptr inbounds i8, i8* %2, i64 -4
  %31 = bitcast i8* %30 to i16*
  %32 = load atomic i16, i16* %31 monotonic, align 2
  %33 = or i16 %32, 1
  store atomic i16 %33, i16* %31 release, align 2
  %34 = bitcast i8* %2 to %"class.blink::FetchDataLoader"*
  ret %"class.blink::FetchDataLoader"* %34
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FetchDataLoader"* @_ZN5blink15FetchDataLoader20CreateLoaderAsStringERKNS_26TextResourceDecoderOptionsE(%"class.blink::TextResourceDecoderOptions"* dereferenceable(152)) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15FetchDataLoaderEEEPhm(i64 240) #13
  %3 = bitcast i8* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_123FetchDataLoaderAsStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_123FetchDataLoaderAsStringE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds i8, i8* %2, i64 16
  %5 = getelementptr inbounds i8, i8* %2, i64 40
  %6 = bitcast %"class.blink::TextResourceDecoderOptions"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #13
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 32, i1 false) #13
  %7 = getelementptr inbounds i8, i8* %2, i64 72
  %8 = bitcast i8* %7 to %"class.blink::KURL"*
  %9 = getelementptr inbounds %"class.blink::TextResourceDecoderOptions", %"class.blink::TextResourceDecoderOptions"* %0, i64 0, i32 7
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %8, %"class.blink::KURL"* dereferenceable(112) %9) #13
  %10 = getelementptr inbounds i8, i8* %2, i64 184
  %11 = getelementptr inbounds %"class.blink::TextResourceDecoderOptions", %"class.blink::TextResourceDecoderOptions"* %0, i64 0, i32 8, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 3, i1 false) #13
  %12 = getelementptr inbounds i8, i8* %2, i64 192
  %13 = bitcast i8* %12 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %13, align 8
  %14 = getelementptr inbounds i8, i8* %2, i64 200
  store i8 0, i8* %14, align 8
  %15 = getelementptr inbounds i8, i8* %2, i64 232
  %16 = bitcast i8* %15 to i32*
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds i8, i8* %2, i64 236
  store i8 1, i8* %17, align 4
  %18 = getelementptr inbounds i8, i8* %2, i64 237
  store i8 0, i8* %18, align 1
  %19 = getelementptr inbounds i8, i8* %2, i64 -4
  %20 = bitcast i8* %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = or i16 %21, 1
  store atomic i16 %22, i16* %20 release, align 2
  %23 = bitcast i8* %2 to %"class.blink::FetchDataLoader"*
  ret %"class.blink::FetchDataLoader"* %23
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FetchDataLoader"* @_ZN5blink15FetchDataLoader22CreateLoaderAsDataPipeE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::Location", align 8
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15FetchDataLoaderEEEPhm(i64 120) #13
  %4 = bitcast %"class.base::SingleThreadTaskRunner"* %0 to %"class.base::SequencedTaskRunner"*
  %5 = bitcast i8* %3 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipeE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = ptrtoint i8* %3 to i64
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #13
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %1
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #13
  br label %13

13:                                               ; preds = %11, %1
  %14 = phi i8* [ %12, %11 ], [ %9, %1 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 19
  %18 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 19, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 19, i32 2
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %26, label %23

23:                                               ; preds = %13
  %24 = add i32 %22, 1
  %25 = icmp eq i32 %24, %19
  br i1 %25, label %35, label %37

26:                                               ; preds = %13
  %27 = icmp eq i32 %22, 0
  %28 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  br i1 %27, label %33, label %30

30:                                               ; preds = %26
  %31 = add i32 %29, -1
  %32 = icmp eq i32 %22, %31
  br i1 %32, label %35, label %37

33:                                               ; preds = %26
  %34 = icmp eq i32 %29, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %33, %30, %23
  tail call void @_ZN3WTF5DequeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque"* %17) #13
  %36 = load i32, i32* %21, align 4
  br label %37

37:                                               ; preds = %35, %33, %30, %23
  %38 = phi i32 [ %22, %23 ], [ %22, %30 ], [ 0, %33 ], [ %36, %35 ]
  %39 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %40 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %39, align 8
  %41 = zext i32 %38 to i64
  %42 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %40, i64 %41
  %43 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = add i32 %44, -1
  %46 = icmp eq i32 %38, %45
  %47 = add i32 %38, 1
  %48 = select i1 %46, i32 0, i32 %47
  store i32 %48, i32* %21, align 4
  %49 = bitcast %"struct.std::__1::pair"* %42 to i64*
  store i64 %6, i64* %49, align 8
  %50 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %40, i64 %41, i32 1
  store i1 (%"class.blink::LivenessBroker"*, i8*)* @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipe18InvokePreFinalizerERKNS_14LivenessBrokerEPv, i1 (%"class.blink::LivenessBroker"*, i8*)** %50, align 8
  %51 = getelementptr inbounds i8, i8* %3, i64 24
  %52 = getelementptr inbounds i8, i8* %3, i64 48
  %53 = bitcast i8* %52 to %"class.mojo::SimpleWatcher"*
  %54 = bitcast %"class.base::Location"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 20, i1 false) #13
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %54) #13
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %2, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.26, i64 0, i64 0), i32 531) #13
  call void @_ZN4mojo13SimpleWatcherC1ERKN4base8LocationENS0_12ArmingPolicyE13scoped_refptrINS1_19SequencedTaskRunnerEEPKc(%"class.mojo::SimpleWatcher"* %53, %"class.base::Location"* nonnull dereferenceable(32) %2, i32 1, %"class.base::SequencedTaskRunner"* %4, i8* null) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %54) #13
  %55 = getelementptr inbounds i8, i8* %3, i64 -4
  %56 = bitcast i8* %55 to i16*
  %57 = load atomic i16, i16* %56 monotonic, align 2
  %58 = or i16 %57, 1
  store atomic i16 %58, i16* %56 release, align 2
  %59 = bitcast i8* %3 to %"class.blink::FetchDataLoader"*
  ret %"class.blink::FetchDataLoader"* %59
}

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15FetchDataLoaderEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15FetchDataLoaderEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15FetchDataLoaderEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15FetchDataLoaderEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15FetchDataLoaderEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #3 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #13
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %21, i8* %22) #13
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #13
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #13
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #13
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15FetchDataLoaderEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::FetchDataLoader"*
  %4 = bitcast i8* %1 to void (%"class.blink::FetchDataLoader"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::FetchDataLoader"*, %"class.blink::Visitor"*)**, void (%"class.blink::FetchDataLoader"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::FetchDataLoader"*, %"class.blink::Visitor"*)*, void (%"class.blink::FetchDataLoader"*, %"class.blink::Visitor"*)** %5, i64 4
  %7 = load void (%"class.blink::FetchDataLoader"*, %"class.blink::Visitor"*)*, void (%"class.blink::FetchDataLoader"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::FetchDataLoader"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15FetchDataLoaderEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::FetchDataLoader"*
  %3 = bitcast i8* %0 to void (%"class.blink::FetchDataLoader"*)***
  %4 = load void (%"class.blink::FetchDataLoader"*)**, void (%"class.blink::FetchDataLoader"*)*** %3, align 8
  %5 = load void (%"class.blink::FetchDataLoader"*)*, void (%"class.blink::FetchDataLoader"*)** %4, align 8
  tail call void %5(%"class.blink::FetchDataLoader"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15FetchDataLoaderEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandleD2Ev(%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* nocapture) unnamed_addr #3 align 2 {
  %2 = bitcast %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [14 x i8*] }, { [11 x i8*], [14 x i8*] }* @_ZTVN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [14 x i8*] }, { [11 x i8*], [14 x i8*] }* @_ZTVN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandleE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle", %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %0, i64 0, i32 7, i32 0
  %4 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %3, align 8
  %5 = icmp eq %"class.blink::BlobDataHandle"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %4) #13
  %11 = bitcast %"class.blink::BlobDataHandle"* %4 to i8*
  tail call void @free(i8* %11) #13
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle", %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %0, i64 0, i32 6, i32 0
  %14 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %13, align 8
  %15 = icmp eq %"class.base::SingleThreadTaskRunner"* %14, null
  br i1 %15, label %24, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %14, i64 0, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw sub i32* %18, i32 1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %24

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %17, i64 -2
  %23 = bitcast %"class.base::RefCountedThreadSafe"* %22 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %23) #13
  br label %24

24:                                               ; preds = %12, %16, %21
  %25 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle", %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %0, i64 0, i32 5, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #13
  br label %41

41:                                               ; preds = %24, %37, %40
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandleD0Ev(%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* nocapture) unnamed_addr #3 align 2 {
  %2 = bitcast %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [14 x i8*] }, { [11 x i8*], [14 x i8*] }* @_ZTVN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [14 x i8*] }, { [11 x i8*], [14 x i8*] }* @_ZTVN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandleE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle", %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %0, i64 0, i32 7, i32 0
  %4 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %3, align 8
  %5 = icmp eq %"class.blink::BlobDataHandle"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %4) #13
  %11 = bitcast %"class.blink::BlobDataHandle"* %4 to i8*
  tail call void @free(i8* %11) #13
  br label %12

12:                                               ; preds = %10, %6, %1
  %13 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle", %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %0, i64 0, i32 6, i32 0
  %14 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %13, align 8
  %15 = icmp eq %"class.base::SingleThreadTaskRunner"* %14, null
  br i1 %15, label %24, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %14, i64 0, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw sub i32* %18, i32 1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %24

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %17, i64 -2
  %23 = bitcast %"class.base::RefCountedThreadSafe"* %22 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %23) #13
  br label %24

24:                                               ; preds = %21, %16, %12
  %25 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle", %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %0, i64 0, i32 5, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #13
  br label %41

41:                                               ; preds = %24, %37, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandle5StartEPNS_13BytesConsumerEPNS_15FetchDataLoader6ClientE(%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"*, %"class.blink::BytesConsumer"*, %"class.blink::FetchDataLoader::Client"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle", %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %0, i64 0, i32 3
  %5 = ptrtoint %"class.blink::FetchDataLoader::Client"* %2 to i64
  %6 = bitcast %"class.blink::Member.9"* %4 to i64*
  store atomic i64 %5, i64* %6 monotonic, align 8
  %7 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.blink::FetchDataLoader::Client"* %2 to i8*
  %11 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %10) #13
  br label %12

12:                                               ; preds = %3, %9
  %13 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle", %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %0, i64 0, i32 2
  %14 = ptrtoint %"class.blink::BytesConsumer"* %1 to i64
  %15 = bitcast %"class.blink::Member"* %13 to i64*
  store atomic i64 %14, i64* %15 monotonic, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.blink::BytesConsumer"* %1 to i8*
  %20 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %19) #13
  %21 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %13, i64 0, i32 0, i32 0
  %22 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %21, align 8
  br label %23

23:                                               ; preds = %12, %18
  %24 = phi %"class.blink::BytesConsumer"* [ %1, %12 ], [ %22, %18 ]
  %25 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %13, i64 0, i32 0, i32 0
  %26 = bitcast %"class.blink::BytesConsumer"* %24 to %"class.blink::BlobDataHandle"* (%"class.blink::BytesConsumer"*, i32)***
  %27 = load %"class.blink::BlobDataHandle"* (%"class.blink::BytesConsumer"*, i32)**, %"class.blink::BlobDataHandle"* (%"class.blink::BytesConsumer"*, i32)*** %26, align 8
  %28 = getelementptr inbounds %"class.blink::BlobDataHandle"* (%"class.blink::BytesConsumer"*, i32)*, %"class.blink::BlobDataHandle"* (%"class.blink::BytesConsumer"*, i32)** %27, i64 4
  %29 = load %"class.blink::BlobDataHandle"* (%"class.blink::BytesConsumer"*, i32)*, %"class.blink::BlobDataHandle"* (%"class.blink::BytesConsumer"*, i32)** %28, align 8
  %30 = tail call %"class.blink::BlobDataHandle"* %29(%"class.blink::BytesConsumer"* %24, i32 0) #13
  %31 = icmp eq %"class.blink::BlobDataHandle"* %30, null
  br i1 %31, label %74, label %32

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %30, i64 0, i32 2
  %34 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* %33) #13
  %35 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle", %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %0, i64 0, i32 5
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"* %37) #13
  %39 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #13
  br label %53

53:                                               ; preds = %32, %49, %52
  br i1 %38, label %67, label %54

54:                                               ; preds = %53
  %55 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %30, i64 0, i32 3
  %56 = load i64, i64* %55, align 8
  %57 = tail call noalias i8* @malloc(i64 48) #13
  %58 = bitcast i8* %57 to %"class.blink::BlobData"*
  tail call void @_ZN5blink8BlobDataC1ENS0_21FileCompositionStatusE(%"class.blink::BlobData"* %58, i32 1) #13
  tail call void @_ZN5blink8BlobData14SetContentTypeERKN3WTF6StringE(%"class.blink::BlobData"* %58, %"class.WTF::String"* dereferenceable(8) %35) #13
  tail call void @_ZN5blink8BlobData10AppendBlobE13scoped_refptrINS_14BlobDataHandleEEll(%"class.blink::BlobData"* %58, %"class.blink::BlobDataHandle"* nonnull %30, i64 0, i64 %56) #13
  %59 = getelementptr inbounds %"class.blink::Member.9", %"class.blink::Member.9"* %4, i64 0, i32 0, i32 0
  %60 = load %"class.blink::FetchDataLoader::Client"*, %"class.blink::FetchDataLoader::Client"** %59, align 8
  %61 = tail call noalias i8* @malloc(i64 88) #13
  %62 = bitcast i8* %61 to %"class.blink::BlobDataHandle"*
  tail call void @_ZN5blink14BlobDataHandleC1ENSt3__110unique_ptrINS_8BlobDataENS1_14default_deleteIS3_EEEEm(%"class.blink::BlobDataHandle"* %62, %"class.blink::BlobData"* %58, i64 %56) #13
  %63 = bitcast %"class.blink::FetchDataLoader::Client"* %60 to void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::BlobDataHandle"*)***
  %64 = load void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::BlobDataHandle"*)**, void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::BlobDataHandle"*)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::BlobDataHandle"*)*, void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::BlobDataHandle"*)** %64, i64 3
  %66 = load void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::BlobDataHandle"*)*, void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::BlobDataHandle"*)** %65, align 8
  tail call void %66(%"class.blink::FetchDataLoader::Client"* %60, %"class.blink::BlobDataHandle"* %62) #13
  br label %101

67:                                               ; preds = %53
  %68 = getelementptr inbounds %"class.blink::Member.9", %"class.blink::Member.9"* %4, i64 0, i32 0, i32 0
  %69 = load %"class.blink::FetchDataLoader::Client"*, %"class.blink::FetchDataLoader::Client"** %68, align 8
  %70 = bitcast %"class.blink::FetchDataLoader::Client"* %69 to void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::BlobDataHandle"*)***
  %71 = load void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::BlobDataHandle"*)**, void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::BlobDataHandle"*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::BlobDataHandle"*)*, void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::BlobDataHandle"*)** %71, i64 3
  %73 = load void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::BlobDataHandle"*)*, void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::BlobDataHandle"*)** %72, align 8
  tail call void %73(%"class.blink::FetchDataLoader::Client"* %69, %"class.blink::BlobDataHandle"* nonnull %30) #13
  br label %101

74:                                               ; preds = %23
  %75 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle", %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %0, i64 0, i32 6, i32 0
  %76 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %75, align 8
  %77 = icmp eq %"class.base::SingleThreadTaskRunner"* %76, null
  br i1 %77, label %81, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %76, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = atomicrmw add i32* %79, i32 1 monotonic
  br label %81

81:                                               ; preds = %74, %78
  %82 = tail call %"class.blink::FetchDataLoader"* @_ZN5blink15FetchDataLoader22CreateLoaderAsDataPipeE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.base::SingleThreadTaskRunner"* %76)
  %83 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle", %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %0, i64 0, i32 4
  %84 = ptrtoint %"class.blink::FetchDataLoader"* %82 to i64
  %85 = bitcast %"class.blink::Member.11"* %83 to i64*
  store atomic i64 %84, i64* %85 monotonic, align 8
  %86 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %93, label %88

88:                                               ; preds = %81
  %89 = bitcast %"class.blink::FetchDataLoader"* %82 to i8*
  %90 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %89) #13
  %91 = getelementptr inbounds %"class.blink::Member.11", %"class.blink::Member.11"* %83, i64 0, i32 0, i32 0
  %92 = load %"class.blink::FetchDataLoader"*, %"class.blink::FetchDataLoader"** %91, align 8
  br label %93

93:                                               ; preds = %88, %81
  %94 = phi %"class.blink::FetchDataLoader"* [ %92, %88 ], [ %82, %81 ]
  %95 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %25, align 8
  %96 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle", %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %0, i64 0, i32 1
  %97 = bitcast %"class.blink::FetchDataLoader"* %94 to void (%"class.blink::FetchDataLoader"*, %"class.blink::BytesConsumer"*, %"class.blink::FetchDataLoader::Client"*)***
  %98 = load void (%"class.blink::FetchDataLoader"*, %"class.blink::BytesConsumer"*, %"class.blink::FetchDataLoader::Client"*)**, void (%"class.blink::FetchDataLoader"*, %"class.blink::BytesConsumer"*, %"class.blink::FetchDataLoader::Client"*)*** %97, align 8
  %99 = getelementptr inbounds void (%"class.blink::FetchDataLoader"*, %"class.blink::BytesConsumer"*, %"class.blink::FetchDataLoader::Client"*)*, void (%"class.blink::FetchDataLoader"*, %"class.blink::BytesConsumer"*, %"class.blink::FetchDataLoader::Client"*)** %98, i64 2
  %100 = load void (%"class.blink::FetchDataLoader"*, %"class.blink::BytesConsumer"*, %"class.blink::FetchDataLoader::Client"*)*, void (%"class.blink::FetchDataLoader"*, %"class.blink::BytesConsumer"*, %"class.blink::FetchDataLoader::Client"*)** %99, align 8
  tail call void %100(%"class.blink::FetchDataLoader"* %94, %"class.blink::BytesConsumer"* %95, %"class.blink::FetchDataLoader::Client"* %96) #13
  br label %101

101:                                              ; preds = %93, %67, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandle6CancelEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle", %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %2, align 8
  %4 = bitcast %"class.blink::BytesConsumer"* %3 to void (%"class.blink::BytesConsumer"*)***
  %5 = load void (%"class.blink::BytesConsumer"*)**, void (%"class.blink::BytesConsumer"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %5, i64 9
  %7 = load void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %6, align 8
  tail call void %7(%"class.blink::BytesConsumer"* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandle5TraceEPNS_7VisitorE(%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle", %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13BytesConsumerEE5TraceEPNS_7VisitorEPKv) #13
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle", %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %0, i64 0, i32 3
  tail call void @_ZN5blink7Visitor5TraceINS_15FetchDataLoader6ClientEEEvRKNS_6MemberIT_EE(%"class.blink::Visitor"* %1, %"class.blink::Member.9"* dereferenceable(8) %14)
  %15 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle", %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %0, i64 0, i32 4
  %16 = bitcast %"class.blink::Member.11"* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %13
  %20 = inttoptr i64 %17 to i8*
  %21 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, i64 5
  %24 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %1, i8* nonnull %20, i8* nonnull %20, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15FetchDataLoaderEE5TraceEPNS_7VisitorEPKv) #13
  br label %25

25:                                               ; preds = %13, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandle27DidFetchDataStartedDataPipeEN4mojo16ScopedHandleBaseINS2_22DataPipeConsumerHandleEEE(%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"*, %"class.mojo::ScopedHandleBase.351"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.mojo::ScopedHandleBase.351", align 4
  %6 = alloca %"class.mojo::PendingAssociatedRemote", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.blink::WeakPersistent", align 8
  %9 = tail call %"class.blink::mojom::blink::BlobRegistry"* @_ZN5blink14BlobDataHandle15GetBlobRegistryEv() #13
  %10 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #13
  %11 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle", %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %0, i64 0, i32 5, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %32, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %15, align 8
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %33

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #13
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !2

29:                                               ; preds = %20
  tail call void @llvm.trap() #13
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %33

32:                                               ; preds = %2
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i64 0) #13
  br label %33

33:                                               ; preds = %30, %14, %32
  %34 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i64 0) #13
  %35 = getelementptr inbounds %"class.mojo::ScopedHandleBase.351", %"class.mojo::ScopedHandleBase.351"* %5, i64 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.mojo::ScopedHandleBase.351", %"class.mojo::ScopedHandleBase.351"* %1, i64 0, i32 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4, !noalias !3
  store i32 %37, i32* %35, align 4, !alias.scope !3
  store i32 0, i32* %36, align 4, !noalias !3
  %38 = bitcast %"class.mojo::PendingAssociatedRemote"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 16, i1 false)
  %39 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %6, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %39) #13
  %40 = getelementptr inbounds %"class.mojo::PendingAssociatedRemote", %"class.mojo::PendingAssociatedRemote"* %6, i64 0, i32 1
  store i32 0, i32* %40, align 8
  %41 = bitcast %"class.blink::WeakPersistent"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #13
  %42 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %8, i64 0, i32 0
  %43 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %8, i64 0, i32 0, i32 0
  store %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %0, %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"** %43, align 8, !alias.scope !6
  %44 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %8, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %44, align 8, !alias.scope !6
  %45 = ptrtoint %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %0 to i64
  switch i64 %45, label %46 [
    i64 0, label %72
    i64 -1, label %72
  ]

46:                                               ; preds = %33
  %47 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !6
  %48 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %47, i64 0, i32 1
  %49 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %48) #13, !noalias !6
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %53, !prof !2

51:                                               ; preds = %46
  %52 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %48, i8* %52) #13
  br label %53

53:                                               ; preds = %51, %46
  %54 = phi i8* [ %52, %51 ], [ %49, %46 ]
  %55 = bitcast i8* %54 to %"class.blink::ThreadState"**
  %56 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %55, align 8, !noalias !6
  %57 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %56, i64 0, i32 4, i32 0, i32 0, i32 0
  %58 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %57, align 8, !noalias !6
  %59 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %58, i64 0, i32 0, i32 0
  %60 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %59, align 8, !noalias !6
  %61 = icmp eq %"class.blink::PersistentNode"* %60, null
  br i1 %61, label %62, label %65, !prof !2

62:                                               ; preds = %53
  %63 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %58, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %63) #13
  %64 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %59, align 8
  br label %65

65:                                               ; preds = %62, %53
  %66 = phi %"class.blink::PersistentNode"* [ %64, %62 ], [ %60, %53 ]
  %67 = bitcast %"class.blink::PersistentNode"* %66 to i64*
  %68 = load i64, i64* %67, align 8, !noalias !6
  %69 = bitcast %"class.blink::PersistentRegion"* %58 to i64*
  store i64 %68, i64* %69, align 8, !noalias !6
  %70 = bitcast %"class.blink::PersistentNode"* %66 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %42, %"class.blink::PersistentBase"** %70, align 8, !noalias !6
  %71 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %66, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12_GLOBAL__N_127FetchDataLoaderAsBlobHandleELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %71, align 8
  store %"class.blink::PersistentNode"* %66, %"class.blink::PersistentNode"** %44, align 8, !alias.scope !6
  br label %72

72:                                               ; preds = %33, %33, %65
  %73 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %73, align 8, !alias.scope !9
  %74 = call i8* @_Znwm(i64 64) #14, !noalias !12
  %75 = bitcast i8* %74 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %75, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %class.scoped_refptr.13*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandleEFvRK13scoped_refptrINS3_14BlobDataHandleEEEJNS3_14WeakPersistentIS5_EEEEEFvSA_EE7RunOnceEPNS0_13BindStateBaseESA_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandleEFvRK13scoped_refptrINS2_14BlobDataHandleEEEJNS2_14WeakPersistentIS4_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandleEFvRK13scoped_refptrINS3_14BlobDataHandleEEEJNS3_14WeakPersistentIS5_EEEEEEEbPKNS0_13BindStateBaseENSG_21CancellationQueryModeE) #13, !noalias !12
  %76 = getelementptr inbounds i8, i8* %74, i64 32
  %77 = bitcast i8* %76 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"*, %class.scoped_refptr.13*)* @_ZN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandle28FinishedCreatingFromDataPipeERK13scoped_refptrINS_14BlobDataHandleEE to i64), i64 0>, <2 x i64>* %77, align 8, !noalias !12
  %78 = getelementptr inbounds i8, i8* %74, i64 48
  %79 = bitcast %"class.blink::WeakPersistent"* %8 to i64*
  %80 = load i64, i64* %79, align 8, !noalias !12
  %81 = bitcast i8* %78 to i64*
  store i64 %80, i64* %81, align 8, !noalias !12
  %82 = getelementptr inbounds i8, i8* %74, i64 56
  %83 = bitcast i8* %82 to %"class.blink::PersistentNode"**
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %83, align 8, !noalias !12
  switch i64 %80, label %84 [
    i64 0, label %110
    i64 -1, label %110
  ]

84:                                               ; preds = %72
  %85 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !12
  %86 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %85, i64 0, i32 1
  %87 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %86) #13, !noalias !12
  %88 = icmp eq i8* %87, null
  br i1 %88, label %89, label %91, !prof !2

89:                                               ; preds = %84
  %90 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13, !noalias !12
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %86, i8* %90) #13, !noalias !12
  br label %91

91:                                               ; preds = %89, %84
  %92 = phi i8* [ %90, %89 ], [ %87, %84 ]
  %93 = bitcast i8* %92 to %"class.blink::ThreadState"**
  %94 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %93, align 8, !noalias !12
  %95 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %94, i64 0, i32 4, i32 0, i32 0, i32 0
  %96 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %95, align 8, !noalias !12
  %97 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %96, i64 0, i32 0, i32 0
  %98 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %97, align 8, !noalias !12
  %99 = icmp eq %"class.blink::PersistentNode"* %98, null
  br i1 %99, label %100, label %103, !prof !2

100:                                              ; preds = %91
  %101 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %96, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %101) #13, !noalias !12
  %102 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %97, align 8, !noalias !12
  br label %103

103:                                              ; preds = %100, %91
  %104 = phi %"class.blink::PersistentNode"* [ %102, %100 ], [ %98, %91 ]
  %105 = bitcast %"class.blink::PersistentNode"* %104 to i64*
  %106 = load i64, i64* %105, align 8, !noalias !12
  %107 = bitcast %"class.blink::PersistentRegion"* %96 to i64*
  store i64 %106, i64* %107, align 8, !noalias !12
  %108 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %104, i64 0, i32 0
  store i8* %78, i8** %108, align 8, !noalias !12
  %109 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %104, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12_GLOBAL__N_127FetchDataLoaderAsBlobHandleELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %109, align 8, !noalias !12
  store %"class.blink::PersistentNode"* %104, %"class.blink::PersistentNode"** %83, align 8, !noalias !12
  br label %110

110:                                              ; preds = %72, %72, %103
  %111 = bitcast %"class.base::OnceCallback"* %7 to i8**
  store i8* %74, i8** %111, align 8, !alias.scope !12
  %112 = bitcast %"class.blink::mojom::blink::BlobRegistry"* %9 to void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.WTF::String"*, %"class.WTF::String"*, i64, %"class.mojo::ScopedHandleBase.351"*, %"class.mojo::PendingAssociatedRemote"*, %"class.base::OnceCallback"*)***
  %113 = load void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.WTF::String"*, %"class.WTF::String"*, i64, %"class.mojo::ScopedHandleBase.351"*, %"class.mojo::PendingAssociatedRemote"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.WTF::String"*, %"class.WTF::String"*, i64, %"class.mojo::ScopedHandleBase.351"*, %"class.mojo::PendingAssociatedRemote"*, %"class.base::OnceCallback"*)*** %112, align 8
  %114 = getelementptr inbounds void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.WTF::String"*, %"class.WTF::String"*, i64, %"class.mojo::ScopedHandleBase.351"*, %"class.mojo::PendingAssociatedRemote"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.WTF::String"*, %"class.WTF::String"*, i64, %"class.mojo::ScopedHandleBase.351"*, %"class.mojo::PendingAssociatedRemote"*, %"class.base::OnceCallback"*)** %113, i64 4
  %115 = load void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.WTF::String"*, %"class.WTF::String"*, i64, %"class.mojo::ScopedHandleBase.351"*, %"class.mojo::PendingAssociatedRemote"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::BlobRegistry"*, %"class.WTF::String"*, %"class.WTF::String"*, i64, %"class.mojo::ScopedHandleBase.351"*, %"class.mojo::PendingAssociatedRemote"*, %"class.base::OnceCallback"*)** %114, align 8
  call void %115(%"class.blink::mojom::blink::BlobRegistry"* %9, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4, i64 0, %"class.mojo::ScopedHandleBase.351"* nonnull %5, %"class.mojo::PendingAssociatedRemote"* nonnull %6, %"class.base::OnceCallback"* nonnull %7) #13
  %116 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %116) #13
  %117 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %44, align 8
  %118 = icmp eq %"class.blink::PersistentNode"* %117, null
  br i1 %118, label %138, label %119

119:                                              ; preds = %110
  %120 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %121 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %120, i64 0, i32 1
  %122 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %121) #13
  %123 = icmp eq i8* %122, null
  br i1 %123, label %124, label %126, !prof !2

124:                                              ; preds = %119
  %125 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %121, i8* %125) #13
  br label %126

126:                                              ; preds = %124, %119
  %127 = phi i8* [ %125, %124 ], [ %122, %119 ]
  %128 = bitcast i8* %127 to %"class.blink::ThreadState"**
  %129 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %128, align 8
  %130 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %129, i64 0, i32 4, i32 0, i32 0, i32 0
  %131 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %130, align 8
  %132 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %44, align 8
  %133 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %131, i64 0, i32 0, i32 0
  %134 = bitcast %"class.blink::PersistentRegion"* %131 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %"class.blink::PersistentNode"* %132 to i64*
  store i64 %135, i64* %136, align 8
  %137 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %132, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %137, align 8
  store %"class.blink::PersistentNode"* %132, %"class.blink::PersistentNode"** %133, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %44, align 8
  br label %138

138:                                              ; preds = %110, %126
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #13
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %39) #13
  %139 = load i32, i32* %35, align 4
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %143, label %141

141:                                              ; preds = %138
  %142 = call i32 @MojoClose(i32 %139) #13
  br label %143

143:                                              ; preds = %138, %141
  %144 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %145, null
  br i1 %146, label %160, label %147

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %153 = load i32, i32* %152, align 4
  br i1 %151, label %154, label %156

154:                                              ; preds = %147
  %155 = add i32 %153, -1
  store i32 %155, i32* %152, align 4
  br label %156

156:                                              ; preds = %154, %147
  %157 = phi i32 [ %155, %154 ], [ %153, %147 ]
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %156
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %145) #13
  br label %160

160:                                              ; preds = %143, %156, %159
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #13
  %161 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %161, align 8
  %163 = icmp eq %"class.WTF::StringImpl"* %162, null
  br i1 %163, label %177, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = and i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 0
  %170 = load i32, i32* %169, align 4
  br i1 %168, label %171, label %173

171:                                              ; preds = %164
  %172 = add i32 %170, -1
  store i32 %172, i32* %169, align 4
  br label %173

173:                                              ; preds = %171, %164
  %174 = phi i32 [ %172, %171 ], [ %170, %164 ]
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %177

176:                                              ; preds = %173
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %162) #13
  br label %177

177:                                              ; preds = %160, %173, %176
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandle26DidFetchDataLoadedDataPipeEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle", %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %0, i64 0, i32 8
  store i8 1, i8* %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle", %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %0, i64 0, i32 7, i32 0
  %4 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %3, align 8
  %5 = icmp eq %"class.blink::BlobDataHandle"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle", %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::FetchDataLoader::Client"*, %"class.blink::FetchDataLoader::Client"** %7, align 8
  store %"class.blink::BlobDataHandle"* null, %"class.blink::BlobDataHandle"** %3, align 8
  %9 = bitcast %"class.blink::FetchDataLoader::Client"* %8 to void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::BlobDataHandle"*)***
  %10 = load void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::BlobDataHandle"*)**, void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::BlobDataHandle"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::BlobDataHandle"*)*, void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::BlobDataHandle"*)** %10, i64 3
  %12 = load void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::BlobDataHandle"*)*, void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::BlobDataHandle"*)** %11, align 8
  tail call void %12(%"class.blink::FetchDataLoader::Client"* %8, %"class.blink::BlobDataHandle"* nonnull %4) #13
  br label %13

13:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandle22DidFetchDataLoadFailedEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle", %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::FetchDataLoader::Client"*, %"class.blink::FetchDataLoader::Client"** %2, align 8
  %4 = bitcast %"class.blink::FetchDataLoader::Client"* %3 to void (%"class.blink::FetchDataLoader::Client"*)***
  %5 = load void (%"class.blink::FetchDataLoader::Client"*)**, void (%"class.blink::FetchDataLoader::Client"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::FetchDataLoader::Client"*)*, void (%"class.blink::FetchDataLoader::Client"*)** %5, i64 10
  %7 = load void (%"class.blink::FetchDataLoader::Client"*)*, void (%"class.blink::FetchDataLoader::Client"*)** %6, align 8
  tail call void %7(%"class.blink::FetchDataLoader::Client"* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandle5AbortEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle", %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::FetchDataLoader::Client"*, %"class.blink::FetchDataLoader::Client"** %2, align 8
  %4 = bitcast %"class.blink::FetchDataLoader::Client"* %3 to void (%"class.blink::FetchDataLoader::Client"*)***
  %5 = load void (%"class.blink::FetchDataLoader::Client"*)**, void (%"class.blink::FetchDataLoader::Client"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::FetchDataLoader::Client"*)*, void (%"class.blink::FetchDataLoader::Client"*)** %5, i64 11
  %7 = load void (%"class.blink::FetchDataLoader::Client"*)*, void (%"class.blink::FetchDataLoader::Client"*)** %6, align 8
  tail call void %7(%"class.blink::FetchDataLoader::Client"* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn8_NK5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandle5TraceEPNS_7VisitorE(%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle", %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %0, i64 -1, i32 8
  %4 = getelementptr inbounds i8, i8* %3, i64 16
  %5 = bitcast i8* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13BytesConsumerEE5TraceEPNS_7VisitorEPKv) #13
  br label %14

14:                                               ; preds = %8, %2
  %15 = getelementptr inbounds i8, i8* %3, i64 24
  %16 = bitcast i8* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %85, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to i8*
  %21 = and i64 %17, -131072
  %22 = inttoptr i64 %21 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 4138
  %24 = load i8, i8* %23, align 2
  %25 = icmp eq i8 %24, 1
  br i1 %25, label %26, label %28

26:                                               ; preds = %19
  %27 = getelementptr inbounds i8, i8* %22, i64 4160
  br label %66

28:                                               ; preds = %19
  %29 = getelementptr inbounds i8, i8* %22, i64 4096
  %30 = bitcast i8* %29 to %"class.blink::NormalPage"*
  %31 = getelementptr inbounds i8, i8* %22, i64 4400
  %32 = bitcast i8* %31 to i8**
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %17, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %30, i64 0, i32 2, i32 0, i32 1, i64 %37
  %39 = load atomic i8, i8* %38 acquire, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 2, %41
  %43 = trunc i32 %42 to i8
  %44 = add i8 %43, -1
  %45 = and i8 %44, %39
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %53

47:                                               ; preds = %28, %47
  %48 = phi i64 [ %49, %47 ], [ %37, %28 ]
  %49 = add i64 %48, -1
  %50 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %30, i64 0, i32 2, i32 0, i32 1, i64 %49
  %51 = load atomic i8, i8* %50 acquire, align 1
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %47, label %53

53:                                               ; preds = %47, %28
  %54 = phi i64 [ %37, %28 ], [ %49, %47 ]
  %55 = phi i8 [ %45, %28 ], [ %51, %47 ]
  %56 = zext i8 %55 to i32
  %57 = tail call i32 @llvm.ctlz.i32(i32 %56, i1 true) #13, !range !17
  %58 = add nsw i32 %57, -24
  %59 = shl i64 %54, 3
  %60 = or i64 %59, 7
  %61 = sext i32 %58 to i64
  %62 = sub i64 %60, %61
  %63 = shl i64 %62, 3
  %64 = load i8*, i8** %32, align 16
  %65 = getelementptr inbounds i8, i8* %64, i64 %63
  br label %66

66:                                               ; preds = %53, %26
  %67 = phi i8* [ %27, %26 ], [ %65, %53 ]
  %68 = getelementptr inbounds i8, i8* %67, i64 8
  %69 = getelementptr inbounds i8, i8* %67, i64 4
  %70 = bitcast i8* %69 to i16*
  %71 = load atomic i16, i16* %70 acquire, align 2
  %72 = lshr i16 %71, 2
  %73 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %74 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %73, i64 0, i32 0
  %75 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %74, align 8
  %76 = zext i16 %72 to i64
  %77 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %75, i64 %76
  %78 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %77, align 8
  %79 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %78, i64 0, i32 0
  %80 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %79, align 8
  %81 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %82 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %82, i64 5
  %84 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %83, align 8
  tail call void %84(%"class.blink::Visitor"* %1, i8* nonnull %20, i8* %68, void (%"class.blink::Visitor"*, i8*)* %80) #13
  br label %85

85:                                               ; preds = %14, %66
  %86 = getelementptr inbounds i8, i8* %3, i64 32
  %87 = bitcast i8* %86 to i64*
  %88 = load atomic i64, i64* %87 monotonic, align 8
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %96, label %90

90:                                               ; preds = %85
  %91 = inttoptr i64 %88 to i8*
  %92 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %93 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %93, i64 5
  %95 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %94, align 8
  tail call void %95(%"class.blink::Visitor"* %1, i8* nonnull %91, i8* nonnull %91, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15FetchDataLoaderEE5TraceEPNS_7VisitorEPKv) #13
  br label %96

96:                                               ; preds = %85, %90
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZThn8_N5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandleD1Ev(%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle", %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %0, i64 -1, i32 8
  %3 = bitcast i8* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [14 x i8*] }, { [11 x i8*], [14 x i8*] }* @_ZTVN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [14 x i8*] }, { [11 x i8*], [14 x i8*] }* @_ZTVN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandleE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds i8, i8* %2, i64 56
  %5 = bitcast i8* %4 to %"class.blink::BlobDataHandle"**
  %6 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %5, align 8
  %7 = icmp eq %"class.blink::BlobDataHandle"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %14

12:                                               ; preds = %8
  tail call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %6) #13
  %13 = bitcast %"class.blink::BlobDataHandle"* %6 to i8*
  tail call void @free(i8* %13) #13
  br label %14

14:                                               ; preds = %12, %8, %1
  %15 = getelementptr inbounds i8, i8* %2, i64 48
  %16 = bitcast i8* %15 to %"class.base::SingleThreadTaskRunner"**
  %17 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %16, align 8
  %18 = icmp eq %"class.base::SingleThreadTaskRunner"* %17, null
  br i1 %18, label %27, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %17, i64 0, i32 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %20, i64 -2
  %26 = bitcast %"class.base::RefCountedThreadSafe"* %25 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %26) #13
  br label %27

27:                                               ; preds = %24, %19, %14
  %28 = getelementptr inbounds i8, i8* %2, i64 40
  %29 = bitcast i8* %28 to %"class.WTF::StringImpl"**
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #13
  br label %45

45:                                               ; preds = %27, %41, %44
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZThn8_N5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandleD0Ev(%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle", %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %0, i64 -1, i32 8
  %3 = bitcast i8* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [14 x i8*] }, { [11 x i8*], [14 x i8*] }* @_ZTVN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [14 x i8*] }, { [11 x i8*], [14 x i8*] }* @_ZTVN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandleE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds i8, i8* %2, i64 56
  %5 = bitcast i8* %4 to %"class.blink::BlobDataHandle"**
  %6 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %5, align 8
  %7 = icmp eq %"class.blink::BlobDataHandle"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %14

12:                                               ; preds = %8
  tail call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %6) #13
  %13 = bitcast %"class.blink::BlobDataHandle"* %6 to i8*
  tail call void @free(i8* %13) #13
  br label %14

14:                                               ; preds = %12, %8, %1
  %15 = getelementptr inbounds i8, i8* %2, i64 48
  %16 = bitcast i8* %15 to %"class.base::SingleThreadTaskRunner"**
  %17 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %16, align 8
  %18 = icmp eq %"class.base::SingleThreadTaskRunner"* %17, null
  br i1 %18, label %27, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %17, i64 0, i32 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %20, i64 -2
  %26 = bitcast %"class.base::RefCountedThreadSafe"* %25 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %26) #13
  br label %27

27:                                               ; preds = %24, %19, %14
  %28 = getelementptr inbounds i8, i8* %2, i64 40
  %29 = bitcast i8* %28 to %"class.WTF::StringImpl"**
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #13
  br label %45

45:                                               ; preds = %27, %41, %44
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15FetchDataLoader6Client28DidFetchDataLoadedBlobHandleE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::FetchDataLoader::Client"*, %"class.blink::BlobDataHandle"*) unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.blink::BlobDataHandle"* %1, null
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = atomicrmw sub i32* %5, i32 1 acq_rel
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %10

8:                                                ; preds = %4
  tail call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %1) #13
  %9 = bitcast %"class.blink::BlobDataHandle"* %1 to i8*
  tail call void @free(i8* %9) #13
  br label %10

10:                                               ; preds = %2, %4, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15FetchDataLoader6Client29DidFetchDataLoadedArrayBufferEPNS_14DOMArrayBufferE(%"class.blink::FetchDataLoader::Client"*, %"class.blink::DOMArrayBuffer"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15FetchDataLoader6Client26DidFetchDataLoadedFormDataEPNS_8FormDataE(%"class.blink::FetchDataLoader::Client"*, %"class.blink::FormData"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15FetchDataLoader6Client24DidFetchDataLoadedStringERKN3WTF6StringE(%"class.blink::FetchDataLoader::Client"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn8_N5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandle27DidFetchDataStartedDataPipeEN4mojo16ScopedHandleBaseINS2_22DataPipeConsumerHandleEEE(%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"*, %"class.mojo::ScopedHandleBase.351"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle", %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %0, i64 -1, i32 8
  %4 = bitcast i8* %3 to %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"*
  tail call void @_ZN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandle27DidFetchDataStartedDataPipeEN4mojo16ScopedHandleBaseINS2_22DataPipeConsumerHandleEEE(%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %4, %"class.mojo::ScopedHandleBase.351"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn8_N5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandle26DidFetchDataLoadedDataPipeEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle", %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %0, i64 -1, i32 8
  %3 = getelementptr inbounds i8, i8* %2, i64 64
  store i8 1, i8* %3, align 8
  %4 = getelementptr inbounds i8, i8* %2, i64 56
  %5 = bitcast i8* %4 to %"class.blink::BlobDataHandle"**
  %6 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %5, align 8
  %7 = icmp eq %"class.blink::BlobDataHandle"* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds i8, i8* %2, i64 24
  %10 = bitcast i8* %9 to %"class.blink::FetchDataLoader::Client"**
  %11 = load %"class.blink::FetchDataLoader::Client"*, %"class.blink::FetchDataLoader::Client"** %10, align 8
  store %"class.blink::BlobDataHandle"* null, %"class.blink::BlobDataHandle"** %5, align 8
  %12 = bitcast %"class.blink::FetchDataLoader::Client"* %11 to void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::BlobDataHandle"*)***
  %13 = load void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::BlobDataHandle"*)**, void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::BlobDataHandle"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::BlobDataHandle"*)*, void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::BlobDataHandle"*)** %13, i64 3
  %15 = load void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::BlobDataHandle"*)*, void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::BlobDataHandle"*)** %14, align 8
  tail call void %15(%"class.blink::FetchDataLoader::Client"* %11, %"class.blink::BlobDataHandle"* nonnull %6) #13
  br label %16

16:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15FetchDataLoader6Client30DidFetchDataLoadedCustomFormatEv(%"class.blink::FetchDataLoader::Client"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn8_N5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandle22DidFetchDataLoadFailedEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle", %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %0, i64 -1, i32 8
  %3 = getelementptr inbounds i8, i8* %2, i64 24
  %4 = bitcast i8* %3 to %"class.blink::FetchDataLoader::Client"**
  %5 = load %"class.blink::FetchDataLoader::Client"*, %"class.blink::FetchDataLoader::Client"** %4, align 8
  %6 = bitcast %"class.blink::FetchDataLoader::Client"* %5 to void (%"class.blink::FetchDataLoader::Client"*)***
  %7 = load void (%"class.blink::FetchDataLoader::Client"*)**, void (%"class.blink::FetchDataLoader::Client"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::FetchDataLoader::Client"*)*, void (%"class.blink::FetchDataLoader::Client"*)** %7, i64 10
  %9 = load void (%"class.blink::FetchDataLoader::Client"*)*, void (%"class.blink::FetchDataLoader::Client"*)** %8, align 8
  tail call void %9(%"class.blink::FetchDataLoader::Client"* %5) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn8_N5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandle5AbortEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle", %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %0, i64 -1, i32 8
  %3 = getelementptr inbounds i8, i8* %2, i64 24
  %4 = bitcast i8* %3 to %"class.blink::FetchDataLoader::Client"**
  %5 = load %"class.blink::FetchDataLoader::Client"*, %"class.blink::FetchDataLoader::Client"** %4, align 8
  %6 = bitcast %"class.blink::FetchDataLoader::Client"* %5 to void (%"class.blink::FetchDataLoader::Client"*)***
  %7 = load void (%"class.blink::FetchDataLoader::Client"*)**, void (%"class.blink::FetchDataLoader::Client"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::FetchDataLoader::Client"*)*, void (%"class.blink::FetchDataLoader::Client"*)** %7, i64 11
  %9 = load void (%"class.blink::FetchDataLoader::Client"*)*, void (%"class.blink::FetchDataLoader::Client"*)** %8, align 8
  tail call void %9(%"class.blink::FetchDataLoader::Client"* %5) #13
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: nounwind
declare void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN5blink8BlobData14SetContentTypeERKN3WTF6StringE(%"class.blink::BlobData"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink8BlobData10AppendBlobE13scoped_refptrINS_14BlobDataHandleEEll(%"class.blink::BlobData"*, %"class.blink::BlobDataHandle"*, i64, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"*) local_unnamed_addr #1

declare void @_ZN5blink8BlobDataC1ENS0_21FileCompositionStatusE(%"class.blink::BlobData"*, i32) unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

declare void @_ZN5blink14BlobDataHandleC1ENSt3__110unique_ptrINS_8BlobDataENS1_14default_deleteIS3_EEEEm(%"class.blink::BlobDataHandle"*, %"class.blink::BlobData"*, i64) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink8BlobDataD1Ev(%"class.blink::BlobData"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Visitor5TraceINS_15FetchDataLoader6ClientEEEvRKNS_6MemberIT_EE(%"class.blink::Visitor"*, %"class.blink::Member.9"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::Member.9"* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %72, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = and i64 %4, -131072
  %9 = inttoptr i64 %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 4138
  %11 = load i8, i8* %10, align 2
  %12 = icmp eq i8 %11, 1
  br i1 %12, label %13, label %15

13:                                               ; preds = %6
  %14 = getelementptr inbounds i8, i8* %9, i64 4160
  br label %53

15:                                               ; preds = %6
  %16 = getelementptr inbounds i8, i8* %9, i64 4096
  %17 = bitcast i8* %16 to %"class.blink::NormalPage"*
  %18 = getelementptr inbounds i8, i8* %9, i64 4400
  %19 = bitcast i8* %18 to i8**
  %20 = bitcast i8* %18 to i64*
  %21 = load i64, i64* %20, align 16
  %22 = sub i64 %4, %21
  %23 = lshr i64 %22, 3
  %24 = lshr i64 %22, 6
  %25 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %17, i64 0, i32 2, i32 0, i32 1, i64 %24
  %26 = load atomic i8, i8* %25 acquire, align 1
  %27 = trunc i64 %23 to i32
  %28 = and i32 %27, 7
  %29 = shl i32 2, %28
  %30 = trunc i32 %29 to i8
  %31 = add i8 %30, -1
  %32 = and i8 %31, %26
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %40

34:                                               ; preds = %15, %34
  %35 = phi i64 [ %36, %34 ], [ %24, %15 ]
  %36 = add i64 %35, -1
  %37 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %17, i64 0, i32 2, i32 0, i32 1, i64 %36
  %38 = load atomic i8, i8* %37 acquire, align 1
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %34, label %40

40:                                               ; preds = %34, %15
  %41 = phi i64 [ %24, %15 ], [ %36, %34 ]
  %42 = phi i8 [ %32, %15 ], [ %38, %34 ]
  %43 = zext i8 %42 to i32
  %44 = tail call i32 @llvm.ctlz.i32(i32 %43, i1 true) #13, !range !17
  %45 = add nsw i32 %44, -24
  %46 = shl i64 %41, 3
  %47 = or i64 %46, 7
  %48 = sext i32 %45 to i64
  %49 = sub i64 %47, %48
  %50 = shl i64 %49, 3
  %51 = load i8*, i8** %19, align 16
  %52 = getelementptr inbounds i8, i8* %51, i64 %50
  br label %53

53:                                               ; preds = %40, %13
  %54 = phi i8* [ %14, %13 ], [ %52, %40 ]
  %55 = getelementptr inbounds i8, i8* %54, i64 8
  %56 = getelementptr inbounds i8, i8* %54, i64 4
  %57 = bitcast i8* %56 to i16*
  %58 = load atomic i16, i16* %57 acquire, align 2
  %59 = lshr i16 %58, 2
  %60 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %61 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %60, i64 0, i32 0
  %62 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %61, align 8
  %63 = zext i16 %59 to i64
  %64 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %62, i64 %63
  %65 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %64, align 8
  %66 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %65, i64 0, i32 0
  %67 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %66, align 8
  %68 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %69 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %69, i64 5
  %71 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %70, align 8
  tail call void %71(%"class.blink::Visitor"* %0, i8* nonnull %7, i8* %55, void (%"class.blink::Visitor"*, i8*)* %67) #13
  br label %72

72:                                               ; preds = %2, %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13BytesConsumerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::BytesConsumer"*
  %4 = bitcast i8* %1 to void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)**, void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)** %5, i64 13
  %7 = load void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::BytesConsumer"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #6

declare %"class.blink::mojom::blink::BlobRegistry"* @_ZN5blink14BlobDataHandle15GetBlobRegistryEv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandle28FinishedCreatingFromDataPipeERK13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* nocapture, %class.scoped_refptr.13* nocapture readonly dereferenceable(8)) #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %class.scoped_refptr.13, %class.scoped_refptr.13* %1, i64 0, i32 0
  %6 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %5, align 8
  %7 = icmp eq %"class.blink::BlobDataHandle"* %6, null
  br i1 %7, label %8, label %15

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle", %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %0, i64 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::FetchDataLoader::Client"*, %"class.blink::FetchDataLoader::Client"** %9, align 8
  %11 = bitcast %"class.blink::FetchDataLoader::Client"* %10 to void (%"class.blink::FetchDataLoader::Client"*)***
  %12 = load void (%"class.blink::FetchDataLoader::Client"*)**, void (%"class.blink::FetchDataLoader::Client"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::FetchDataLoader::Client"*)*, void (%"class.blink::FetchDataLoader::Client"*)** %12, i64 10
  %14 = load void (%"class.blink::FetchDataLoader::Client"*)*, void (%"class.blink::FetchDataLoader::Client"*)** %13, align 8
  tail call void %14(%"class.blink::FetchDataLoader::Client"* %10) #13
  br label %53

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle", %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %0, i64 0, i32 8
  %17 = load i8, i8* %16, align 8, !range !18
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %39

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 1 monotonic
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0)) #13
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #13
  br label %26

26:                                               ; preds = %19, %23
  %27 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle", %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %0, i64 0, i32 7
  %28 = ptrtoint %"class.blink::BlobDataHandle"* %6 to i64
  %29 = bitcast %class.scoped_refptr.13* %27 to i64*
  %30 = getelementptr inbounds %class.scoped_refptr.13, %class.scoped_refptr.13* %27, i64 0, i32 0
  %31 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %30, align 8
  store i64 %28, i64* %29, align 8
  %32 = icmp eq %"class.blink::BlobDataHandle"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw sub i32* %34, i32 1 acq_rel
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %53

37:                                               ; preds = %33
  call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %31) #13
  %38 = bitcast %"class.blink::BlobDataHandle"* %31 to i8*
  call void @free(i8* %38) #13
  br label %53

39:                                               ; preds = %15
  %40 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle", %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %0, i64 0, i32 3, i32 0, i32 0
  %41 = load %"class.blink::FetchDataLoader::Client"*, %"class.blink::FetchDataLoader::Client"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw add i32* %42, i32 1 monotonic
  %44 = icmp sgt i32 %43, 0
  br i1 %44, label %48, label %45

45:                                               ; preds = %39
  %46 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0)) #13
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #13
  br label %48

48:                                               ; preds = %39, %45
  %49 = bitcast %"class.blink::FetchDataLoader::Client"* %41 to void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::BlobDataHandle"*)***
  %50 = load void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::BlobDataHandle"*)**, void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::BlobDataHandle"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::BlobDataHandle"*)*, void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::BlobDataHandle"*)** %50, i64 3
  %52 = load void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::BlobDataHandle"*)*, void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::BlobDataHandle"*)** %51, align 8
  call void %52(%"class.blink::FetchDataLoader::Client"* %41, %"class.blink::BlobDataHandle"* nonnull %6) #13
  br label %53

53:                                               ; preds = %37, %33, %26, %48, %8
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare void @_ZN4mojo29ScopedInterfaceEndpointHandleC1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandleEFvRK13scoped_refptrINS3_14BlobDataHandleEEEJNS3_14WeakPersistentIS5_EEEEEFvSA_EE7RunOnceEPNS0_13BindStateBaseESA_(%"class.base::internal::BindStateBase"* nocapture readonly, %class.scoped_refptr.13* dereferenceable(8)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"**
  %5 = load %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"*, %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"** %4, align 8
  %6 = icmp eq %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %9 = bitcast %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %5 to i8*
  %10 = bitcast %"class.base::internal::BindStateBase"* %8 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %13 = bitcast void ()** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds i8, i8* %9, i64 %14
  %16 = bitcast i8* %15 to %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"*
  %17 = and i64 %11, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %7
  %20 = bitcast i8* %15 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = add i64 %11, -1
  %23 = getelementptr i8, i8* %21, i64 %22
  %24 = bitcast i8* %23 to void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"*, %class.scoped_refptr.13*)**
  %25 = load void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"*, %class.scoped_refptr.13*)*, void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"*, %class.scoped_refptr.13*)** %24, align 8
  br label %28

26:                                               ; preds = %7
  %27 = inttoptr i64 %11 to void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"*, %class.scoped_refptr.13*)*
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"*, %class.scoped_refptr.13*)* [ %25, %19 ], [ %27, %26 ]
  tail call void %29(%"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %16, %class.scoped_refptr.13* dereferenceable(8) %1) #13
  br label %30

30:                                               ; preds = %2, %28
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandleEFvRK13scoped_refptrINS2_14BlobDataHandleEEEJNS2_14WeakPersistentIS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #13
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !2

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #13
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::PersistentNode"* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %21, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %21, %"class.blink::PersistentNode"** %22, align 8
  br label %27

27:                                               ; preds = %3, %15
  %28 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #14
  br label %29

29:                                               ; preds = %27, %1
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandleEFvRK13scoped_refptrINS3_14BlobDataHandleEEEJNS3_14WeakPersistentIS5_EEEEEEEbPKNS0_13BindStateBaseENSG_21CancellationQueryModeE(%"class.base::internal::BindStateBase"* nocapture readonly, i32) #10 {
  switch i32 %1, label %9 [
    i32 0, label %3
    i32 1, label %8
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"**
  %6 = load %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"*, %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"** %5, align 8
  %7 = icmp eq %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %6, null
  br label %9

8:                                                ; preds = %2
  br label %9

9:                                                ; preds = %2, %3, %8
  %10 = phi i1 [ true, %8 ], [ %7, %3 ], [ false, %2 ]
  ret i1 %10
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12_GLOBAL__N_127FetchDataLoaderAsBlobHandleELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv(%"class.blink::Visitor"*, i8*) #0 align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseINS_12_GLOBAL__N_127FetchDataLoaderAsBlobHandleELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink14PersistentBaseINS_12_GLOBAL__N_127FetchDataLoaderAsBlobHandleELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* nocapture readnone dereferenceable(1), i8* nocapture) #0 align 2 {
  %3 = bitcast i8* %1 to %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"**
  %4 = load %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"*, %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"** %3, align 8
  %5 = icmp eq %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %4, null
  br i1 %5, label %49, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #13
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #13
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle", %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* %4, i64 -1, i32 8
  %20 = getelementptr inbounds i8, i8* %19, i64 6
  %21 = bitcast i8* %20 to i16*
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %18
  store %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"* null, %"class.blink::(anonymous namespace)::FetchDataLoaderAsBlobHandle"** %3, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 8
  %27 = bitcast i8* %26 to %"class.blink::PersistentNode"**
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %25
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #13
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !2

35:                                               ; preds = %30
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #13
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i8* [ %36, %35 ], [ %33, %30 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %41, align 8
  %43 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0, i32 0
  %45 = bitcast %"class.blink::PersistentRegion"* %42 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::PersistentNode"* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %48, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %44, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %27, align 8
  br label %49

49:                                               ; preds = %18, %13, %37, %25, %2
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"*) unnamed_addr #4

declare i32 @MojoClose(i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_128FetchDataLoaderAsArrayBufferD2Ev(%"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"* nocapture) unnamed_addr #3 align 2 {
  %2 = bitcast %"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_128FetchDataLoaderAsArrayBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_128FetchDataLoaderAsArrayBufferE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer", %"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"* %0, i64 0, i32 4, i32 0
  %4 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %3, align 8
  %5 = icmp eq %"class.WTF::SharedBuffer"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #13
  %8 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  tail call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %4) #13
  %12 = bitcast %"class.WTF::SharedBuffer"* %4 to i8*
  tail call void @free(i8* %12) #13
  br label %13

13:                                               ; preds = %1, %6, %11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_128FetchDataLoaderAsArrayBufferD0Ev(%"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"* nocapture) unnamed_addr #3 align 2 {
  %2 = bitcast %"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_128FetchDataLoaderAsArrayBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_128FetchDataLoaderAsArrayBufferE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer", %"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"* %0, i64 0, i32 4, i32 0
  %4 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %3, align 8
  %5 = icmp eq %"class.WTF::SharedBuffer"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #13
  %8 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  tail call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %4) #13
  %12 = bitcast %"class.WTF::SharedBuffer"* %4 to i8*
  tail call void @free(i8* %12) #13
  br label %13

13:                                               ; preds = %1, %6, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_128FetchDataLoaderAsArrayBuffer5StartEPNS_13BytesConsumerEPNS_15FetchDataLoader6ClientE(%"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"*, %"class.blink::BytesConsumer"*, %"class.blink::FetchDataLoader::Client"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer", %"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"* %0, i64 0, i32 3
  %5 = ptrtoint %"class.blink::FetchDataLoader::Client"* %2 to i64
  %6 = bitcast %"class.blink::Member.9"* %4 to i64*
  store atomic i64 %5, i64* %6 monotonic, align 8
  %7 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.blink::FetchDataLoader::Client"* %2 to i8*
  %11 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %10) #13
  br label %12

12:                                               ; preds = %3, %9
  %13 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer", %"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"* %0, i64 0, i32 2
  %14 = ptrtoint %"class.blink::BytesConsumer"* %1 to i64
  %15 = bitcast %"class.blink::Member"* %13 to i64*
  store atomic i64 %14, i64* %15 monotonic, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.blink::BytesConsumer"* %1 to i8*
  %20 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %19) #13
  br label %21

21:                                               ; preds = %12, %18
  %22 = tail call noalias i8* @malloc(i64 48) #13
  %23 = bitcast i8* %22 to %"class.WTF::SharedBuffer"*
  tail call void @_ZN3WTF12SharedBufferC1Ev(%"class.WTF::SharedBuffer"* %23) #13
  %24 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer", %"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"* %0, i64 0, i32 4
  %25 = ptrtoint i8* %22 to i64
  %26 = bitcast %class.scoped_refptr.15* %24 to i64*
  %27 = getelementptr inbounds %class.scoped_refptr.15, %class.scoped_refptr.15* %24, i64 0, i32 0
  %28 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::SharedBuffer"* %28, null
  br i1 %29, label %37, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %28, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %31) #13
  %32 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %30
  tail call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %28) #13
  %36 = bitcast %"class.WTF::SharedBuffer"* %28 to i8*
  tail call void @free(i8* %36) #13
  br label %37

37:                                               ; preds = %21, %30, %35
  %38 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %13, i64 0, i32 0, i32 0
  %39 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer", %"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"* %0, i64 0, i32 1
  %41 = bitcast %"class.blink::BytesConsumer"* %39 to void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)***
  %42 = load void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)**, void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)** %42, i64 7
  %44 = load void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)** %43, align 8
  tail call void %44(%"class.blink::BytesConsumer"* %39, %"class.blink::BytesConsumer::Client"* %40) #13
  tail call void @_ZN5blink12_GLOBAL__N_128FetchDataLoaderAsArrayBuffer13OnStateChangeEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_128FetchDataLoaderAsArrayBuffer6CancelEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer", %"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %2, align 8
  %4 = bitcast %"class.blink::BytesConsumer"* %3 to void (%"class.blink::BytesConsumer"*)***
  %5 = load void (%"class.blink::BytesConsumer"*)**, void (%"class.blink::BytesConsumer"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %5, i64 9
  %7 = load void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %6, align 8
  tail call void %7(%"class.blink::BytesConsumer"* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK5blink12_GLOBAL__N_128FetchDataLoaderAsArrayBuffer5TraceEPNS_7VisitorE(%"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer", %"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13BytesConsumerEE5TraceEPNS_7VisitorEPKv) #13
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer", %"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"* %0, i64 0, i32 3
  tail call void @_ZN5blink7Visitor5TraceINS_15FetchDataLoader6ClientEEEvRKNS_6MemberIT_EE(%"class.blink::Visitor"* %1, %"class.blink::Member.9"* dereferenceable(8) %14)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_128FetchDataLoaderAsArrayBuffer13OnStateChangeEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::SharedBuffer::Iterator", align 8
  %3 = alloca %"class.WTF::SharedBuffer::Iterator", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = bitcast i8** %4 to i8*
  %7 = bitcast i64* %5 to i8*
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer", %"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"* %0, i64 0, i32 2, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer", %"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"* %0, i64 0, i32 4, i32 0
  br label %10

10:                                               ; preds = %116, %1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  store i64 -6148914691236517206, i64* %5, align 8
  %11 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %8, align 8
  %12 = bitcast %"class.blink::BytesConsumer"* %11 to i32 (%"class.blink::BytesConsumer"*, i8**, i64*)***
  %13 = load i32 (%"class.blink::BytesConsumer"*, i8**, i64*)**, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)** %13, i64 2
  %15 = load i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)** %14, align 8
  %16 = call i32 %15(%"class.blink::BytesConsumer"* %11, i8** nonnull %4, i64* nonnull %5) #13
  switch i32 %16, label %59 [
    i32 1, label %117
    i32 0, label %17
  ]

17:                                               ; preds = %10
  %18 = load i64, i64* %5, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %51, label %20

20:                                               ; preds = %17
  %21 = icmp ult i64 %18, 4294967296
  br i1 %21, label %23, label %22, !prof !19

22:                                               ; preds = %20
  call void @llvm.trap() #13
  unreachable

23:                                               ; preds = %20
  %24 = load i8*, i8** %4, align 8
  %25 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %9, align 8
  %26 = and i64 %18, 4294967295
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %25, i8* %24, i64 %26) #13
  %27 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %9, align 8
  %28 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %27, i64 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = icmp ult i64 %29, 4294967296
  br i1 %30, label %31, label %33

31:                                               ; preds = %23
  %32 = load i64, i64* %5, align 8
  br label %51

33:                                               ; preds = %23
  %34 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %8, align 8
  %35 = bitcast %"class.blink::BytesConsumer"* %34 to i32 (%"class.blink::BytesConsumer"*, i64)***
  %36 = load i32 (%"class.blink::BytesConsumer"*, i64)**, i32 (%"class.blink::BytesConsumer"*, i64)*** %35, align 8
  %37 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*, i64)*, i32 (%"class.blink::BytesConsumer"*, i64)** %36, i64 3
  %38 = load i32 (%"class.blink::BytesConsumer"*, i64)*, i32 (%"class.blink::BytesConsumer"*, i64)** %37, align 8
  %39 = call i32 %38(%"class.blink::BytesConsumer"* %34, i64 0) #13
  %40 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %8, align 8
  %41 = bitcast %"class.blink::BytesConsumer"* %40 to void (%"class.blink::BytesConsumer"*)***
  %42 = load void (%"class.blink::BytesConsumer"*)**, void (%"class.blink::BytesConsumer"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %42, i64 9
  %44 = load void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %43, align 8
  call void %44(%"class.blink::BytesConsumer"* %40) #13
  %45 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer", %"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"* %0, i64 0, i32 3, i32 0, i32 0
  %46 = load %"class.blink::FetchDataLoader::Client"*, %"class.blink::FetchDataLoader::Client"** %45, align 8
  %47 = bitcast %"class.blink::FetchDataLoader::Client"* %46 to void (%"class.blink::FetchDataLoader::Client"*)***
  %48 = load void (%"class.blink::FetchDataLoader::Client"*)**, void (%"class.blink::FetchDataLoader::Client"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.blink::FetchDataLoader::Client"*)*, void (%"class.blink::FetchDataLoader::Client"*)** %48, i64 10
  %50 = load void (%"class.blink::FetchDataLoader::Client"*)*, void (%"class.blink::FetchDataLoader::Client"*)** %49, align 8
  call void %50(%"class.blink::FetchDataLoader::Client"* %46) #13
  br label %117

51:                                               ; preds = %31, %17
  %52 = phi i64 [ %32, %31 ], [ 0, %17 ]
  %53 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %8, align 8
  %54 = bitcast %"class.blink::BytesConsumer"* %53 to i32 (%"class.blink::BytesConsumer"*, i64)***
  %55 = load i32 (%"class.blink::BytesConsumer"*, i64)**, i32 (%"class.blink::BytesConsumer"*, i64)*** %54, align 8
  %56 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*, i64)*, i32 (%"class.blink::BytesConsumer"*, i64)** %55, i64 3
  %57 = load i32 (%"class.blink::BytesConsumer"*, i64)*, i32 (%"class.blink::BytesConsumer"*, i64)** %56, align 8
  %58 = call i32 %57(%"class.blink::BytesConsumer"* %53, i64 %52) #13
  br label %59

59:                                               ; preds = %10, %51
  %60 = phi i32 [ %58, %51 ], [ %16, %10 ]
  switch i32 %60, label %116 [
    i32 3, label %109
    i32 1, label %117
    i32 2, label %61
  ]

61:                                               ; preds = %59
  %62 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %9, align 8
  %63 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %62, i64 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = icmp ult i64 %64, 4294967296
  br i1 %65, label %67, label %66, !prof !19

66:                                               ; preds = %61
  call void @llvm.trap() #13
  unreachable

67:                                               ; preds = %61
  %68 = and i64 %64, 4294967295
  %69 = call %"class.blink::DOMArrayBuffer"* @_ZN5blink14DOMArrayBuffer25CreateUninitializedOrNullEmm(i64 %68, i64 1) #13
  %70 = icmp eq %"class.blink::DOMArrayBuffer"* %69, null
  br i1 %70, label %94, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::DOMArrayBuffer", %"class.blink::DOMArrayBuffer"* %69, i64 0, i32 0, i32 1, i32 0, i32 0
  %73 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %72, align 8
  %74 = icmp eq %"class.v8::BackingStore"* %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %71
  %76 = call i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"* nonnull %73) #13
  br label %77

77:                                               ; preds = %75, %71
  %78 = phi i8* [ %76, %75 ], [ null, %71 ]
  %79 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %9, align 8
  %80 = bitcast %"class.WTF::SharedBuffer::Iterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %80) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 -86, i64 32, i1 false) #13
  call void @_ZNK3WTF12SharedBuffer5beginEv(%"class.WTF::SharedBuffer::Iterator"* nonnull sret %2, %"class.WTF::SharedBuffer"* %79) #13
  %81 = bitcast %"class.WTF::SharedBuffer::Iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %81) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 -86, i64 32, i1 false) #13
  call void @_ZNK3WTF12SharedBuffer3endEv(%"class.WTF::SharedBuffer::Iterator"* nonnull sret %3, %"class.WTF::SharedBuffer"* %79) #13
  %82 = call zeroext i1 @_ZNK3WTF12SharedBuffer8IteratoreqERKS1_(%"class.WTF::SharedBuffer::Iterator"* nonnull %2, %"class.WTF::SharedBuffer::Iterator"* nonnull dereferenceable(32) %3) #13
  br i1 %82, label %101, label %83

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.WTF::SharedBuffer::Iterator", %"class.WTF::SharedBuffer::Iterator"* %2, i64 0, i32 1, i32 1
  %85 = getelementptr inbounds %"class.WTF::SharedBuffer::Iterator", %"class.WTF::SharedBuffer::Iterator"* %2, i64 0, i32 1, i32 0, i32 0
  br label %86

86:                                               ; preds = %86, %83
  %87 = phi i8* [ %78, %83 ], [ %91, %86 ]
  %88 = load i8*, i8** %84, align 8
  %89 = load i64, i64* %85, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %87, i8* align 1 %88, i64 %89, i1 false) #13
  %90 = load i64, i64* %85, align 8
  %91 = getelementptr inbounds i8, i8* %87, i64 %90
  %92 = call dereferenceable(32) %"class.WTF::SharedBuffer::Iterator"* @_ZN3WTF12SharedBuffer8IteratorppEv(%"class.WTF::SharedBuffer::Iterator"* nonnull %2) #13
  %93 = call zeroext i1 @_ZNK3WTF12SharedBuffer8IteratoreqERKS1_(%"class.WTF::SharedBuffer::Iterator"* nonnull %2, %"class.WTF::SharedBuffer::Iterator"* nonnull dereferenceable(32) %3) #13
  br i1 %93, label %101, label %86

94:                                               ; preds = %67
  %95 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer", %"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"* %0, i64 0, i32 3, i32 0, i32 0
  %96 = load %"class.blink::FetchDataLoader::Client"*, %"class.blink::FetchDataLoader::Client"** %95, align 8
  %97 = bitcast %"class.blink::FetchDataLoader::Client"* %96 to void (%"class.blink::FetchDataLoader::Client"*)***
  %98 = load void (%"class.blink::FetchDataLoader::Client"*)**, void (%"class.blink::FetchDataLoader::Client"*)*** %97, align 8
  %99 = getelementptr inbounds void (%"class.blink::FetchDataLoader::Client"*)*, void (%"class.blink::FetchDataLoader::Client"*)** %98, i64 10
  %100 = load void (%"class.blink::FetchDataLoader::Client"*)*, void (%"class.blink::FetchDataLoader::Client"*)** %99, align 8
  call void %100(%"class.blink::FetchDataLoader::Client"* %96) #13
  br label %117

101:                                              ; preds = %86, %77
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %81) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %80) #13
  %102 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %9, align 8
  call void @_ZN3WTF12SharedBuffer5ClearEv(%"class.WTF::SharedBuffer"* %102) #13
  %103 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer", %"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"* %0, i64 0, i32 3, i32 0, i32 0
  %104 = load %"class.blink::FetchDataLoader::Client"*, %"class.blink::FetchDataLoader::Client"** %103, align 8
  %105 = bitcast %"class.blink::FetchDataLoader::Client"* %104 to void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::DOMArrayBuffer"*)***
  %106 = load void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::DOMArrayBuffer"*)**, void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::DOMArrayBuffer"*)*** %105, align 8
  %107 = getelementptr inbounds void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::DOMArrayBuffer"*)*, void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::DOMArrayBuffer"*)** %106, i64 4
  %108 = load void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::DOMArrayBuffer"*)*, void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::DOMArrayBuffer"*)** %107, align 8
  call void %108(%"class.blink::FetchDataLoader::Client"* %104, %"class.blink::DOMArrayBuffer"* nonnull %69) #13
  br label %117

109:                                              ; preds = %59
  %110 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer", %"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"* %0, i64 0, i32 3, i32 0, i32 0
  %111 = load %"class.blink::FetchDataLoader::Client"*, %"class.blink::FetchDataLoader::Client"** %110, align 8
  %112 = bitcast %"class.blink::FetchDataLoader::Client"* %111 to void (%"class.blink::FetchDataLoader::Client"*)***
  %113 = load void (%"class.blink::FetchDataLoader::Client"*)**, void (%"class.blink::FetchDataLoader::Client"*)*** %112, align 8
  %114 = getelementptr inbounds void (%"class.blink::FetchDataLoader::Client"*)*, void (%"class.blink::FetchDataLoader::Client"*)** %113, i64 10
  %115 = load void (%"class.blink::FetchDataLoader::Client"*)*, void (%"class.blink::FetchDataLoader::Client"*)** %114, align 8
  call void %115(%"class.blink::FetchDataLoader::Client"* %111) #13
  br label %117

116:                                              ; preds = %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  br label %10

117:                                              ; preds = %10, %59, %109, %33, %101, %94
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_128FetchDataLoaderAsArrayBuffer9DebugNameEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.13, i64 0, i64 0), i64 28) #13
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn8_NK5blink12_GLOBAL__N_128FetchDataLoaderAsArrayBuffer5TraceEPNS_7VisitorE(%"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer", %"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"* %0, i64 -1, i32 4
  %4 = getelementptr inbounds %class.scoped_refptr.15, %class.scoped_refptr.15* %3, i64 2
  %5 = bitcast %class.scoped_refptr.15* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13BytesConsumerEE5TraceEPNS_7VisitorEPKv) #13
  br label %14

14:                                               ; preds = %2, %8
  %15 = getelementptr inbounds %class.scoped_refptr.15, %class.scoped_refptr.15* %3, i64 3
  %16 = bitcast %class.scoped_refptr.15* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %85, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to i8*
  %21 = and i64 %17, -131072
  %22 = inttoptr i64 %21 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 4138
  %24 = load i8, i8* %23, align 2
  %25 = icmp eq i8 %24, 1
  br i1 %25, label %26, label %28

26:                                               ; preds = %19
  %27 = getelementptr inbounds i8, i8* %22, i64 4160
  br label %66

28:                                               ; preds = %19
  %29 = getelementptr inbounds i8, i8* %22, i64 4096
  %30 = bitcast i8* %29 to %"class.blink::NormalPage"*
  %31 = getelementptr inbounds i8, i8* %22, i64 4400
  %32 = bitcast i8* %31 to i8**
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %17, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %30, i64 0, i32 2, i32 0, i32 1, i64 %37
  %39 = load atomic i8, i8* %38 acquire, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 2, %41
  %43 = trunc i32 %42 to i8
  %44 = add i8 %43, -1
  %45 = and i8 %44, %39
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %53

47:                                               ; preds = %28, %47
  %48 = phi i64 [ %49, %47 ], [ %37, %28 ]
  %49 = add i64 %48, -1
  %50 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %30, i64 0, i32 2, i32 0, i32 1, i64 %49
  %51 = load atomic i8, i8* %50 acquire, align 1
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %47, label %53

53:                                               ; preds = %47, %28
  %54 = phi i64 [ %37, %28 ], [ %49, %47 ]
  %55 = phi i8 [ %45, %28 ], [ %51, %47 ]
  %56 = zext i8 %55 to i32
  %57 = tail call i32 @llvm.ctlz.i32(i32 %56, i1 true) #13, !range !17
  %58 = add nsw i32 %57, -24
  %59 = shl i64 %54, 3
  %60 = or i64 %59, 7
  %61 = sext i32 %58 to i64
  %62 = sub i64 %60, %61
  %63 = shl i64 %62, 3
  %64 = load i8*, i8** %32, align 16
  %65 = getelementptr inbounds i8, i8* %64, i64 %63
  br label %66

66:                                               ; preds = %53, %26
  %67 = phi i8* [ %27, %26 ], [ %65, %53 ]
  %68 = getelementptr inbounds i8, i8* %67, i64 8
  %69 = getelementptr inbounds i8, i8* %67, i64 4
  %70 = bitcast i8* %69 to i16*
  %71 = load atomic i16, i16* %70 acquire, align 2
  %72 = lshr i16 %71, 2
  %73 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %74 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %73, i64 0, i32 0
  %75 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %74, align 8
  %76 = zext i16 %72 to i64
  %77 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %75, i64 %76
  %78 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %77, align 8
  %79 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %78, i64 0, i32 0
  %80 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %79, align 8
  %81 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %82 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %82, i64 5
  %84 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %83, align 8
  tail call void %84(%"class.blink::Visitor"* %1, i8* nonnull %20, i8* %68, void (%"class.blink::Visitor"*, i8*)* %80) #13
  br label %85

85:                                               ; preds = %14, %66
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZThn8_N5blink12_GLOBAL__N_128FetchDataLoaderAsArrayBufferD1Ev(%"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer", %"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"* %0, i64 -1, i32 4
  %3 = bitcast %class.scoped_refptr.15* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_128FetchDataLoaderAsArrayBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_128FetchDataLoaderAsArrayBufferE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %class.scoped_refptr.15, %class.scoped_refptr.15* %2, i64 4, i32 0
  %5 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %4, align 8
  %6 = icmp eq %"class.WTF::SharedBuffer"* %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %5, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #13
  %9 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %7
  tail call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %5) #13
  %13 = bitcast %"class.WTF::SharedBuffer"* %5 to i8*
  tail call void @free(i8* %13) #13
  br label %14

14:                                               ; preds = %1, %7, %12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZThn8_N5blink12_GLOBAL__N_128FetchDataLoaderAsArrayBufferD0Ev(%"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer", %"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"* %0, i64 -1, i32 4
  %3 = bitcast %class.scoped_refptr.15* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_128FetchDataLoaderAsArrayBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_128FetchDataLoaderAsArrayBufferE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %class.scoped_refptr.15, %class.scoped_refptr.15* %2, i64 4, i32 0
  %5 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %4, align 8
  %6 = icmp eq %"class.WTF::SharedBuffer"* %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %5, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #13
  %9 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %7
  tail call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %5) #13
  %13 = bitcast %"class.WTF::SharedBuffer"* %5 to i8*
  tail call void @free(i8* %13) #13
  br label %14

14:                                               ; preds = %1, %7, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn8_N5blink12_GLOBAL__N_128FetchDataLoaderAsArrayBuffer13OnStateChangeEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer", %"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"* %0, i64 -1, i32 4
  %3 = bitcast %class.scoped_refptr.15* %2 to %"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"*
  tail call void @_ZN5blink12_GLOBAL__N_128FetchDataLoaderAsArrayBuffer13OnStateChangeEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.WTF::StringImpl"* @_ZThn8_NK5blink12_GLOBAL__N_128FetchDataLoaderAsArrayBuffer9DebugNameEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsArrayBuffer"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3)
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.13, i64 0, i64 0), i64 28) #13
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3)
  ret %"class.WTF::StringImpl"* %5
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"*) unnamed_addr #4

declare void @_ZN3WTF12SharedBufferC1Ev(%"class.WTF::SharedBuffer"*) unnamed_addr #1

declare void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"*, i8*, i64) local_unnamed_addr #1

declare %"class.blink::DOMArrayBuffer"* @_ZN5blink14DOMArrayBuffer25CreateUninitializedOrNullEmm(i64, i64) local_unnamed_addr #1

declare void @_ZNK3WTF12SharedBuffer5beginEv(%"class.WTF::SharedBuffer::Iterator"* sret, %"class.WTF::SharedBuffer"*) local_unnamed_addr #1

declare void @_ZNK3WTF12SharedBuffer3endEv(%"class.WTF::SharedBuffer::Iterator"* sret, %"class.WTF::SharedBuffer"*) local_unnamed_addr #1

declare dereferenceable(32) %"class.WTF::SharedBuffer::Iterator"* @_ZN3WTF12SharedBuffer8IteratorppEv(%"class.WTF::SharedBuffer::Iterator"*) local_unnamed_addr #1

declare void @_ZN3WTF12SharedBuffer5ClearEv(%"class.WTF::SharedBuffer"*) local_unnamed_addr #1

declare i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3WTF12SharedBuffer8IteratoreqERKS1_(%"class.WTF::SharedBuffer::Iterator"*, %"class.WTF::SharedBuffer::Iterator"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::CheckedContiguousIterator", align 8
  %4 = alloca %"class.base::CheckedContiguousIterator", align 8
  %5 = alloca %"class.base::CheckedContiguousIterator", align 8
  %6 = alloca %"class.base::CheckedContiguousIterator", align 8
  %7 = getelementptr inbounds %"class.WTF::SharedBuffer::Iterator", %"class.WTF::SharedBuffer::Iterator"* %0, i64 0, i32 1, i32 1
  %8 = load i8*, i8** %7, align 8, !noalias !20
  %9 = getelementptr inbounds %"class.WTF::SharedBuffer::Iterator", %"class.WTF::SharedBuffer::Iterator"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load i64, i64* %9, align 8, !noalias !20
  %11 = getelementptr inbounds i8, i8* %8, i64 %10
  call void @_ZN4base25CheckedContiguousIteratorIKcEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %3, i8* %8, i8* %8, i8* %11) #13
  %12 = load i8*, i8** %7, align 8, !noalias !23
  %13 = load i64, i64* %9, align 8, !noalias !23
  %14 = getelementptr inbounds i8, i8* %12, i64 %13
  call void @_ZN4base25CheckedContiguousIteratorIKcEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %4, i8* %12, i8* %14, i8* %14) #13
  %15 = getelementptr inbounds %"class.WTF::SharedBuffer::Iterator", %"class.WTF::SharedBuffer::Iterator"* %1, i64 0, i32 1, i32 1
  %16 = load i8*, i8** %15, align 8, !noalias !26
  %17 = getelementptr inbounds %"class.WTF::SharedBuffer::Iterator", %"class.WTF::SharedBuffer::Iterator"* %1, i64 0, i32 1, i32 0, i32 0
  %18 = load i64, i64* %17, align 8, !noalias !26
  %19 = getelementptr inbounds i8, i8* %16, i64 %18
  call void @_ZN4base25CheckedContiguousIteratorIKcEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %5, i8* %16, i8* %16, i8* %19) #13
  %20 = load i8*, i8** %15, align 8, !noalias !29
  %21 = load i64, i64* %17, align 8, !noalias !29
  %22 = getelementptr inbounds i8, i8* %20, i64 %21
  call void @_ZN4base25CheckedContiguousIteratorIKcEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %6, i8* %20, i8* %22, i8* %22) #13
  %23 = call zeroext i1 @_ZNSt3__15equalIN4base25CheckedContiguousIteratorIKcEES4_EEbT_S5_T0_S6_(%"class.base::CheckedContiguousIterator"* nonnull byval(%"class.base::CheckedContiguousIterator") align 8 %3, %"class.base::CheckedContiguousIterator"* nonnull byval(%"class.base::CheckedContiguousIterator") align 8 %4, %"class.base::CheckedContiguousIterator"* nonnull byval(%"class.base::CheckedContiguousIterator") align 8 %5, %"class.base::CheckedContiguousIterator"* nonnull byval(%"class.base::CheckedContiguousIterator") align 8 %6)
  br i1 %23, label %24, label %30

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.WTF::SharedBuffer::Iterator", %"class.WTF::SharedBuffer::Iterator"* %0, i64 0, i32 2
  %26 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %25, align 8
  %27 = getelementptr inbounds %"class.WTF::SharedBuffer::Iterator", %"class.WTF::SharedBuffer::Iterator"* %1, i64 0, i32 2
  %28 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %27, align 8
  %29 = icmp eq %"class.WTF::SharedBuffer"* %26, %28
  br label %30

30:                                               ; preds = %24, %2
  %31 = phi i1 [ false, %2 ], [ %29, %24 ]
  ret i1 %31
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__15equalIN4base25CheckedContiguousIteratorIKcEES4_EEbT_S5_T0_S6_(%"class.base::CheckedContiguousIterator"* byval(%"class.base::CheckedContiguousIterator") align 8, %"class.base::CheckedContiguousIterator"* byval(%"class.base::CheckedContiguousIterator") align 8, %"class.base::CheckedContiguousIterator"* byval(%"class.base::CheckedContiguousIterator") align 8, %"class.base::CheckedContiguousIterator"* byval(%"class.base::CheckedContiguousIterator") align 8) local_unnamed_addr #3 comdat {
  %5 = alloca %"class.base::CheckedContiguousIterator", align 8
  %6 = alloca %"class.base::CheckedContiguousIterator", align 8
  %7 = alloca %"class.base::CheckedContiguousIterator", align 8
  %8 = alloca %"class.base::CheckedContiguousIterator", align 8
  %9 = alloca %"class.base::CheckedContiguousIterator", align 8
  %10 = alloca %"class.base::CheckedContiguousIterator", align 8
  %11 = alloca %"class.base::CheckedContiguousIterator", align 8
  %12 = alloca %"class.base::CheckedContiguousIterator", align 8
  %13 = alloca %"class.base::CheckedContiguousIterator", align 8
  %14 = alloca %"class.base::CheckedContiguousIterator", align 8
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i8*
  %16 = bitcast %"class.base::CheckedContiguousIterator"* %1 to i8*
  %17 = bitcast %"class.base::CheckedContiguousIterator"* %2 to i8*
  %18 = bitcast %"class.base::CheckedContiguousIterator"* %3 to i8*
  %19 = bitcast %"class.base::CheckedContiguousIterator"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19)
  %20 = bitcast %"class.base::CheckedContiguousIterator"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20)
  %21 = bitcast %"class.base::CheckedContiguousIterator"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* nonnull align 8 %17, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* nonnull align 8 %16, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* nonnull align 8 %15, i64 24, i1 false)
  %22 = bitcast %"class.base::CheckedContiguousIterator"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #13
  %23 = bitcast %"class.base::CheckedContiguousIterator"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* nonnull align 8 %16, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %15, i64 24, i1 false)
  call void @_ZNK4base25CheckedContiguousIteratorIKcE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"* nonnull %10, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %11) #13
  %24 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %10, i64 0, i32 1
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %11, i64 0, i32 1
  %28 = bitcast i8** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %26, %29
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #13
  %31 = bitcast %"class.base::CheckedContiguousIterator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = bitcast %"class.base::CheckedContiguousIterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %18, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* nonnull align 8 %17, i64 24, i1 false)
  call void @_ZNK4base25CheckedContiguousIteratorIKcE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"* nonnull %8, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %9) #13
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %8, i64 0, i32 1
  %34 = bitcast i8** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %9, i64 0, i32 1
  %37 = bitcast i8** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %35, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #13
  %40 = icmp eq i64 %30, %39
  br i1 %40, label %41, label %64

41:                                               ; preds = %4
  %42 = bitcast %"class.base::CheckedContiguousIterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #13
  %43 = bitcast %"class.base::CheckedContiguousIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #13
  %44 = bitcast %"class.base::CheckedContiguousIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* nonnull align 8 %21, i64 24, i1 false) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %43, i8* nonnull align 8 %20, i64 24, i1 false) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %42, i8* nonnull align 8 %19, i64 24, i1 false) #13
  call void @_ZNK4base25CheckedContiguousIteratorIKcE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"* nonnull %7, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %6) #13
  %45 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %7, i64 0, i32 1
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %6, i64 0, i32 1
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %46, %48
  br i1 %49, label %62, label %50

50:                                               ; preds = %41, %56
  %51 = call dereferenceable(1) i8* @_ZNK4base25CheckedContiguousIteratorIKcEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %7) #13
  %52 = call dereferenceable(1) i8* @_ZNK4base25CheckedContiguousIteratorIKcEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %5) #13
  %53 = load i8, i8* %51, align 1
  %54 = load i8, i8* %52, align 1
  %55 = icmp eq i8 %53, %54
  br i1 %55, label %56, label %62

56:                                               ; preds = %50
  %57 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKcEppEv(%"class.base::CheckedContiguousIterator"* nonnull %7) #13
  %58 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKcEppEv(%"class.base::CheckedContiguousIterator"* nonnull %5) #13
  call void @_ZNK4base25CheckedContiguousIteratorIKcE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"* nonnull %7, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %6) #13
  %59 = load i8*, i8** %45, align 8
  %60 = load i8*, i8** %47, align 8
  %61 = icmp eq i8* %59, %60
  br i1 %61, label %62, label %50

62:                                               ; preds = %56, %50, %41
  %63 = phi i1 [ true, %41 ], [ true, %56 ], [ false, %50 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #13
  br label %64

64:                                               ; preds = %4, %62
  %65 = phi i1 [ %63, %62 ], [ false, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21)
  ret i1 %65
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base25CheckedContiguousIteratorIKcE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"*, %"class.base::CheckedContiguousIterator"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 0
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = load i8*, i8** %11, align 8
  %15 = load i8*, i8** %12, align 8
  %16 = icmp eq i8* %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %10, align 8
  br label %29

18:                                               ; preds = %2
  %19 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i8*
  %20 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %19, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  %21 = bitcast %"class.base::CheckedContiguousIterator"* %1 to i8*
  %22 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %21, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* %20, i8* %22) #13
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %24, i8** %10, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7, i64 0, i64 0), i32 206, %"class.logging::CheckOpResult"* nonnull %5) #13
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #13
  br label %29

29:                                               ; preds = %17, %18, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %30 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #13
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 2
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = load i8*, i8** %32, align 8
  %36 = load i8*, i8** %33, align 8
  %37 = icmp eq i8* %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %31, align 8
  br label %50

39:                                               ; preds = %29
  %40 = bitcast i8** %32 to i8*
  %41 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %40, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  %42 = bitcast i8** %33 to i8*
  %43 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %42, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.8, i64 0, i64 0), i8* %41, i8* %43) #13
  %44 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %45, i8** %31, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7, i64 0, i64 0), i32 207, %"class.logging::CheckOpResult"* nonnull %7) #13
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #13
  br label %50

50:                                               ; preds = %38, %39, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #13
  ret void
}

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #3 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call i64 @strlen(i8* %4) #13
  %6 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* %4, i64 %5) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #13
  %7 = load i8, i8* %6, align 8, !range !18
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #13
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #13
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #13
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #13
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #13
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #14
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #13
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #13
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #14
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #13
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(1) i8* @_ZNK4base25CheckedContiguousIteratorIKcEdeEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load i8*, i8** %7, align 8
  %11 = load i8*, i8** %8, align 8
  %12 = icmp eq i8* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast i8** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  %17 = bitcast i8** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* %16, i8* %18) #13
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #13
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %26 = load i8*, i8** %7, align 8
  ret i8* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKcEppEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load i8*, i8** %7, align 8
  %11 = load i8*, i8** %8, align 8
  %12 = icmp eq i8* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast i8** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  %17 = bitcast i8** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* %16, i8* %18) #13
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %3) #13
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %26 = load i8*, i8** %7, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 1
  store i8* %27, i8** %7, align 8
  ret %"class.base::CheckedContiguousIterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIKcEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"*, i8*, i8*, i8*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store i8* %1, i8** %7, align 8
  store i8* %2, i8** %8, align 8
  store i8* %3, i8** %9, align 8
  %14 = ptrtoint i8* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = ptrtoint i8* %2 to i64
  %18 = bitcast i8** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %20 = ptrtoint i8* %3 to i64
  %21 = bitcast i8** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt i8* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast i8** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  %30 = bitcast i8** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* %29, i8* %31) #13
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #13
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #13
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load i8*, i8** %8, align 8
  %43 = load i8*, i8** %9, align 8
  %44 = icmp ugt i8* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast i8** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  %49 = bitcast i8** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i64 0, i64 0), i8* %48, i8* %50) #13
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #13
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #13
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  ret void
}

; Function Attrs: inlinehint norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_124FetchDataLoaderAsFailureD2Ev(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure"* nocapture) unnamed_addr #12 align 2 {
  ret void
}

; Function Attrs: inlinehint norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_124FetchDataLoaderAsFailureD0Ev(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure"* nocapture) unnamed_addr #12 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_124FetchDataLoaderAsFailure5StartEPNS_13BytesConsumerEPNS_15FetchDataLoader6ClientE(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure"*, %"class.blink::BytesConsumer"*, %"class.blink::FetchDataLoader::Client"*) unnamed_addr #0 align 2 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure"* %0, i64 0, i32 3
  %7 = ptrtoint %"class.blink::FetchDataLoader::Client"* %2 to i64
  %8 = bitcast %"class.blink::Member.9"* %6 to i64*
  store atomic i64 %7, i64* %8 monotonic, align 8
  %9 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = bitcast %"class.blink::FetchDataLoader::Client"* %2 to i8*
  %13 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %12) #13
  br label %14

14:                                               ; preds = %3, %11
  %15 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure"* %0, i64 0, i32 2
  %16 = ptrtoint %"class.blink::BytesConsumer"* %1 to i64
  %17 = bitcast %"class.blink::Member"* %15 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.blink::BytesConsumer"* %1 to i8*
  %22 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %21) #13
  %23 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %15, i64 0, i32 0, i32 0
  %24 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %23, align 8
  br label %25

25:                                               ; preds = %14, %20
  %26 = phi %"class.blink::BytesConsumer"* [ %1, %14 ], [ %24, %20 ]
  %27 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure"* %0, i64 0, i32 1
  %28 = bitcast %"class.blink::BytesConsumer"* %26 to void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)***
  %29 = load void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)**, void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)** %29, i64 7
  %31 = load void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)** %30, align 8
  tail call void %31(%"class.blink::BytesConsumer"* %26, %"class.blink::BytesConsumer::Client"* %27) #13
  %32 = bitcast i8** %4 to i8*
  %33 = bitcast i64* %5 to i8*
  %34 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure"* %0, i64 0, i32 2, i32 0, i32 0
  br label %35

35:                                               ; preds = %59, %25
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  store i64 -6148914691236517206, i64* %5, align 8
  %36 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %34, align 8
  %37 = bitcast %"class.blink::BytesConsumer"* %36 to i32 (%"class.blink::BytesConsumer"*, i8**, i64*)***
  %38 = load i32 (%"class.blink::BytesConsumer"*, i8**, i64*)**, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*** %37, align 8
  %39 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)** %38, i64 2
  %40 = load i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)** %39, align 8
  %41 = call i32 %40(%"class.blink::BytesConsumer"* %36, i8** nonnull %4, i64* nonnull %5) #13
  switch i32 %41, label %50 [
    i32 1, label %60
    i32 0, label %42
  ]

42:                                               ; preds = %35
  %43 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %34, align 8
  %44 = load i64, i64* %5, align 8
  %45 = bitcast %"class.blink::BytesConsumer"* %43 to i32 (%"class.blink::BytesConsumer"*, i64)***
  %46 = load i32 (%"class.blink::BytesConsumer"*, i64)**, i32 (%"class.blink::BytesConsumer"*, i64)*** %45, align 8
  %47 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*, i64)*, i32 (%"class.blink::BytesConsumer"*, i64)** %46, i64 3
  %48 = load i32 (%"class.blink::BytesConsumer"*, i64)*, i32 (%"class.blink::BytesConsumer"*, i64)** %47, align 8
  %49 = call i32 %48(%"class.blink::BytesConsumer"* %43, i64 %44) #13
  br label %50

50:                                               ; preds = %42, %35
  %51 = phi i32 [ %49, %42 ], [ %41, %35 ]
  switch i32 %51, label %59 [
    i32 3, label %52
    i32 1, label %60
    i32 2, label %52
  ]

52:                                               ; preds = %50, %50
  %53 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure"* %0, i64 0, i32 3, i32 0, i32 0
  %54 = load %"class.blink::FetchDataLoader::Client"*, %"class.blink::FetchDataLoader::Client"** %53, align 8
  %55 = bitcast %"class.blink::FetchDataLoader::Client"* %54 to void (%"class.blink::FetchDataLoader::Client"*)***
  %56 = load void (%"class.blink::FetchDataLoader::Client"*)**, void (%"class.blink::FetchDataLoader::Client"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.blink::FetchDataLoader::Client"*)*, void (%"class.blink::FetchDataLoader::Client"*)** %56, i64 10
  %58 = load void (%"class.blink::FetchDataLoader::Client"*)*, void (%"class.blink::FetchDataLoader::Client"*)** %57, align 8
  call void %58(%"class.blink::FetchDataLoader::Client"* %54) #13
  br label %60

59:                                               ; preds = %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #13
  br label %35

60:                                               ; preds = %35, %50, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_124FetchDataLoaderAsFailure6CancelEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %2, align 8
  %4 = bitcast %"class.blink::BytesConsumer"* %3 to void (%"class.blink::BytesConsumer"*)***
  %5 = load void (%"class.blink::BytesConsumer"*)**, void (%"class.blink::BytesConsumer"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %5, i64 9
  %7 = load void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %6, align 8
  tail call void %7(%"class.blink::BytesConsumer"* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK5blink12_GLOBAL__N_124FetchDataLoaderAsFailure5TraceEPNS_7VisitorE(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13BytesConsumerEE5TraceEPNS_7VisitorEPKv) #13
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure"* %0, i64 0, i32 3
  tail call void @_ZN5blink7Visitor5TraceINS_15FetchDataLoader6ClientEEEvRKNS_6MemberIT_EE(%"class.blink::Visitor"* %1, %"class.blink::Member.9"* dereferenceable(8) %14)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_124FetchDataLoaderAsFailure13OnStateChangeEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %4 = bitcast i8** %2 to i8*
  %5 = bitcast i64* %3 to i8*
  %6 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure"* %0, i64 0, i32 2, i32 0, i32 0
  br label %7

7:                                                ; preds = %31, %1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %2, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  store i64 -6148914691236517206, i64* %3, align 8
  %8 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %6, align 8
  %9 = bitcast %"class.blink::BytesConsumer"* %8 to i32 (%"class.blink::BytesConsumer"*, i8**, i64*)***
  %10 = load i32 (%"class.blink::BytesConsumer"*, i8**, i64*)**, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*** %9, align 8
  %11 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)** %10, i64 2
  %12 = load i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)** %11, align 8
  %13 = call i32 %12(%"class.blink::BytesConsumer"* %8, i8** nonnull %2, i64* nonnull %3) #13
  switch i32 %13, label %22 [
    i32 1, label %32
    i32 0, label %14
  ]

14:                                               ; preds = %7
  %15 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %6, align 8
  %16 = load i64, i64* %3, align 8
  %17 = bitcast %"class.blink::BytesConsumer"* %15 to i32 (%"class.blink::BytesConsumer"*, i64)***
  %18 = load i32 (%"class.blink::BytesConsumer"*, i64)**, i32 (%"class.blink::BytesConsumer"*, i64)*** %17, align 8
  %19 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*, i64)*, i32 (%"class.blink::BytesConsumer"*, i64)** %18, i64 3
  %20 = load i32 (%"class.blink::BytesConsumer"*, i64)*, i32 (%"class.blink::BytesConsumer"*, i64)** %19, align 8
  %21 = call i32 %20(%"class.blink::BytesConsumer"* %15, i64 %16) #13
  br label %22

22:                                               ; preds = %7, %14
  %23 = phi i32 [ %21, %14 ], [ %13, %7 ]
  switch i32 %23, label %31 [
    i32 3, label %24
    i32 1, label %32
    i32 2, label %24
  ]

24:                                               ; preds = %22, %22
  %25 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load %"class.blink::FetchDataLoader::Client"*, %"class.blink::FetchDataLoader::Client"** %25, align 8
  %27 = bitcast %"class.blink::FetchDataLoader::Client"* %26 to void (%"class.blink::FetchDataLoader::Client"*)***
  %28 = load void (%"class.blink::FetchDataLoader::Client"*)**, void (%"class.blink::FetchDataLoader::Client"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::FetchDataLoader::Client"*)*, void (%"class.blink::FetchDataLoader::Client"*)** %28, i64 10
  %30 = load void (%"class.blink::FetchDataLoader::Client"*)*, void (%"class.blink::FetchDataLoader::Client"*)** %29, align 8
  call void %30(%"class.blink::FetchDataLoader::Client"* %26) #13
  br label %32

31:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #13
  br label %7

32:                                               ; preds = %22, %7, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_124FetchDataLoaderAsFailure9DebugNameEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.14, i64 0, i64 0), i64 24) #13
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn8_NK5blink12_GLOBAL__N_124FetchDataLoaderAsFailure5TraceEPNS_7VisitorE(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure"* %0, i64 -1, i32 3
  %4 = getelementptr inbounds %"class.blink::Member.9", %"class.blink::Member.9"* %3, i64 2
  %5 = bitcast %"class.blink::Member.9"* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13BytesConsumerEE5TraceEPNS_7VisitorEPKv) #13
  br label %14

14:                                               ; preds = %2, %8
  %15 = getelementptr inbounds %"class.blink::Member.9", %"class.blink::Member.9"* %3, i64 3
  %16 = bitcast %"class.blink::Member.9"* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %85, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to i8*
  %21 = and i64 %17, -131072
  %22 = inttoptr i64 %21 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 4138
  %24 = load i8, i8* %23, align 2
  %25 = icmp eq i8 %24, 1
  br i1 %25, label %26, label %28

26:                                               ; preds = %19
  %27 = getelementptr inbounds i8, i8* %22, i64 4160
  br label %66

28:                                               ; preds = %19
  %29 = getelementptr inbounds i8, i8* %22, i64 4096
  %30 = bitcast i8* %29 to %"class.blink::NormalPage"*
  %31 = getelementptr inbounds i8, i8* %22, i64 4400
  %32 = bitcast i8* %31 to i8**
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %17, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %30, i64 0, i32 2, i32 0, i32 1, i64 %37
  %39 = load atomic i8, i8* %38 acquire, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 2, %41
  %43 = trunc i32 %42 to i8
  %44 = add i8 %43, -1
  %45 = and i8 %44, %39
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %53

47:                                               ; preds = %28, %47
  %48 = phi i64 [ %49, %47 ], [ %37, %28 ]
  %49 = add i64 %48, -1
  %50 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %30, i64 0, i32 2, i32 0, i32 1, i64 %49
  %51 = load atomic i8, i8* %50 acquire, align 1
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %47, label %53

53:                                               ; preds = %47, %28
  %54 = phi i64 [ %37, %28 ], [ %49, %47 ]
  %55 = phi i8 [ %45, %28 ], [ %51, %47 ]
  %56 = zext i8 %55 to i32
  %57 = tail call i32 @llvm.ctlz.i32(i32 %56, i1 true) #13, !range !17
  %58 = add nsw i32 %57, -24
  %59 = shl i64 %54, 3
  %60 = or i64 %59, 7
  %61 = sext i32 %58 to i64
  %62 = sub i64 %60, %61
  %63 = shl i64 %62, 3
  %64 = load i8*, i8** %32, align 16
  %65 = getelementptr inbounds i8, i8* %64, i64 %63
  br label %66

66:                                               ; preds = %53, %26
  %67 = phi i8* [ %27, %26 ], [ %65, %53 ]
  %68 = getelementptr inbounds i8, i8* %67, i64 8
  %69 = getelementptr inbounds i8, i8* %67, i64 4
  %70 = bitcast i8* %69 to i16*
  %71 = load atomic i16, i16* %70 acquire, align 2
  %72 = lshr i16 %71, 2
  %73 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %74 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %73, i64 0, i32 0
  %75 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %74, align 8
  %76 = zext i16 %72 to i64
  %77 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %75, i64 %76
  %78 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %77, align 8
  %79 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %78, i64 0, i32 0
  %80 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %79, align 8
  %81 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %82 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %82, i64 5
  %84 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %83, align 8
  tail call void %84(%"class.blink::Visitor"* %1, i8* nonnull %20, i8* %68, void (%"class.blink::Visitor"*, i8*)* %80) #13
  br label %85

85:                                               ; preds = %14, %66
  ret void
}

; Function Attrs: inlinehint norecurse nounwind readnone ssp uwtable
define internal void @_ZThn8_N5blink12_GLOBAL__N_124FetchDataLoaderAsFailureD1Ev(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure"* nocapture) unnamed_addr #12 align 2 {
  ret void
}

; Function Attrs: inlinehint norecurse nounwind readnone ssp uwtable
define internal void @_ZThn8_N5blink12_GLOBAL__N_124FetchDataLoaderAsFailureD0Ev(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure"* nocapture) unnamed_addr #12 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn8_N5blink12_GLOBAL__N_124FetchDataLoaderAsFailure13OnStateChangeEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure"* %0, i64 -1, i32 3
  %5 = bitcast i8** %2 to i8*
  %6 = bitcast i64* %3 to i8*
  %7 = getelementptr inbounds %"class.blink::Member.9", %"class.blink::Member.9"* %4, i64 2
  %8 = bitcast %"class.blink::Member.9"* %7 to %"class.blink::BytesConsumer"**
  br label %9

9:                                                ; preds = %33, %1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %2, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  store i64 -6148914691236517206, i64* %3, align 8
  %10 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %8, align 8
  %11 = bitcast %"class.blink::BytesConsumer"* %10 to i32 (%"class.blink::BytesConsumer"*, i8**, i64*)***
  %12 = load i32 (%"class.blink::BytesConsumer"*, i8**, i64*)**, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*** %11, align 8
  %13 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)** %12, i64 2
  %14 = load i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)** %13, align 8
  %15 = call i32 %14(%"class.blink::BytesConsumer"* %10, i8** nonnull %2, i64* nonnull %3) #13
  switch i32 %15, label %24 [
    i32 1, label %34
    i32 0, label %16
  ]

16:                                               ; preds = %9
  %17 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %8, align 8
  %18 = load i64, i64* %3, align 8
  %19 = bitcast %"class.blink::BytesConsumer"* %17 to i32 (%"class.blink::BytesConsumer"*, i64)***
  %20 = load i32 (%"class.blink::BytesConsumer"*, i64)**, i32 (%"class.blink::BytesConsumer"*, i64)*** %19, align 8
  %21 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*, i64)*, i32 (%"class.blink::BytesConsumer"*, i64)** %20, i64 3
  %22 = load i32 (%"class.blink::BytesConsumer"*, i64)*, i32 (%"class.blink::BytesConsumer"*, i64)** %21, align 8
  %23 = call i32 %22(%"class.blink::BytesConsumer"* %17, i64 %18) #13
  br label %24

24:                                               ; preds = %16, %9
  %25 = phi i32 [ %23, %16 ], [ %15, %9 ]
  switch i32 %25, label %33 [
    i32 3, label %26
    i32 1, label %34
    i32 2, label %26
  ]

26:                                               ; preds = %24, %24
  %27 = getelementptr inbounds %"class.blink::Member.9", %"class.blink::Member.9"* %4, i64 3, i32 0, i32 0
  %28 = load %"class.blink::FetchDataLoader::Client"*, %"class.blink::FetchDataLoader::Client"** %27, align 8
  %29 = bitcast %"class.blink::FetchDataLoader::Client"* %28 to void (%"class.blink::FetchDataLoader::Client"*)***
  %30 = load void (%"class.blink::FetchDataLoader::Client"*)**, void (%"class.blink::FetchDataLoader::Client"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::FetchDataLoader::Client"*)*, void (%"class.blink::FetchDataLoader::Client"*)** %30, i64 10
  %32 = load void (%"class.blink::FetchDataLoader::Client"*)*, void (%"class.blink::FetchDataLoader::Client"*)** %31, align 8
  call void %32(%"class.blink::FetchDataLoader::Client"* %28) #13
  br label %34

33:                                               ; preds = %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  br label %9

34:                                               ; preds = %9, %24, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.WTF::StringImpl"* @_ZThn8_NK5blink12_GLOBAL__N_124FetchDataLoaderAsFailure9DebugNameEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFailure"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3)
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.14, i64 0, i64 0), i64 24) #13
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3)
  ret %"class.WTF::StringImpl"* %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsFormDataD2Ev(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* nocapture) unnamed_addr #3 align 2 {
  %2 = bitcast %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [7 x i8*], [8 x i8*] }, { [12 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink12_GLOBAL__N_125FetchDataLoaderAsFormDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [7 x i8*], [8 x i8*] }, { [12 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink12_GLOBAL__N_125FetchDataLoaderAsFormDataE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [7 x i8*], [8 x i8*] }, { [12 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink12_GLOBAL__N_125FetchDataLoaderAsFormDataE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 8, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  br i1 %11, label %14, label %16

14:                                               ; preds = %7
  %15 = add i32 %13, -1
  store i32 %15, i32* %12, align 4
  br label %16

16:                                               ; preds = %14, %7
  %17 = phi i32 [ %15, %14 ], [ %13, %7 ]
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #13
  br label %20

20:                                               ; preds = %1, %16, %19
  %21 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 7, i32 4, i32 0, i32 0, i32 0
  %22 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %21, align 8
  store %"class.blink::TextResourceDecoder"* null, %"class.blink::TextResourceDecoder"** %21, align 8
  %23 = icmp eq %"class.blink::TextResourceDecoder"* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  tail call void @_ZN5blink19TextResourceDecoderD1Ev(%"class.blink::TextResourceDecoder"* nonnull %22) #13
  %25 = bitcast %"class.blink::TextResourceDecoder"* %22 to i8*
  tail call void @free(i8* %25) #13
  br label %26

26:                                               ; preds = %24, %20
  %27 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 7, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringBuilder"*, %"class.WTF::StringBuilder"** %27, align 8
  store %"class.WTF::StringBuilder"* null, %"class.WTF::StringBuilder"** %27, align 8
  %29 = icmp eq %"class.WTF::StringBuilder"* %28, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %26
  tail call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %28) #13
  %31 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %28, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #13
  br label %47

47:                                               ; preds = %46, %43, %30
  %48 = bitcast %"class.WTF::StringBuilder"* %28 to i8*
  tail call void @free(i8* %48) #13
  br label %49

49:                                               ; preds = %47, %26
  %50 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 7, i32 2, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #13
  br label %66

66:                                               ; preds = %65, %62, %49
  %67 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 7, i32 1, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #13
  br label %83

83:                                               ; preds = %82, %79, %66
  %84 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %85 = load %"class.blink::BlobData"*, %"class.blink::BlobData"** %84, align 8
  store %"class.blink::BlobData"* null, %"class.blink::BlobData"** %84, align 8
  %86 = icmp eq %"class.blink::BlobData"* %85, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %83
  tail call void @_ZN5blink8BlobDataD1Ev(%"class.blink::BlobData"* nonnull %85) #13
  %88 = bitcast %"class.blink::BlobData"* %85 to i8*
  tail call void @free(i8* %88) #13
  br label %89

89:                                               ; preds = %83, %87
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsFormDataD0Ev(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* nocapture) unnamed_addr #3 align 2 {
  tail call void @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsFormDataD2Ev(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsFormData5StartEPNS_13BytesConsumerEPNS_15FetchDataLoader6ClientE(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"*, %"class.blink::BytesConsumer"*, %"class.blink::FetchDataLoader::Client"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::Vector", align 8
  %5 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %6 = alloca %"class.WTF::Vector", align 8
  %7 = bitcast %"class.WTF::StringUTF8Adaptor"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 40, i1 false)
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 8
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %8, i32 0) #13
  %9 = bitcast %"class.WTF::Vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #13
  %13 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %5, i64 0, i32 1
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %5, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  call void @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE6AppendIcEEvPKT_j(%"class.WTF::Vector"* nonnull %6, i8* %14, i32 %16)
  %17 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 4
  %18 = ptrtoint %"class.blink::FetchDataLoader::Client"* %2 to i64
  %19 = bitcast %"class.blink::Member.9"* %17 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %3
  %23 = bitcast %"class.blink::FetchDataLoader::Client"* %2 to i8*
  %24 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %23) #13
  br label %25

25:                                               ; preds = %3, %22
  %26 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 56) #13
  %27 = bitcast i8* %26 to %"class.blink::FormData"*
  call void @_ZN5blink8FormDataC1Ev(%"class.blink::FormData"* %27) #13
  %28 = getelementptr inbounds i8, i8* %26, i64 -4
  %29 = bitcast i8* %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = or i16 %30, 1
  store atomic i16 %31, i16* %29 release, align 2
  %32 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 5
  %33 = ptrtoint i8* %26 to i64
  %34 = bitcast %"class.blink::Member.21"* %32 to i64*
  store atomic i64 %33, i64* %34 monotonic, align 8
  %35 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %25
  %38 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #13
  br label %39

39:                                               ; preds = %25, %37
  %40 = bitcast %"class.WTF::Vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #13
  %41 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15MultipartParserEEEPhm(i64 72) #13
  %42 = bitcast i8* %41 to %"class.blink::MultipartParser"*
  %43 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 1
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 2
  %45 = bitcast %"class.WTF::Vector"* %6 to i64*
  %46 = bitcast %"class.WTF::Vector"* %4 to i64*
  store i64 0, i64* %46, align 8
  %47 = load i64, i64* %45, align 8
  store atomic i64 0, i64* %45 monotonic, align 8
  store atomic i64 %47, i64* %46 monotonic, align 8
  %48 = load i32, i32* %11, align 8
  store i32 %48, i32* %43, align 8
  store i32 0, i32* %11, align 8
  %49 = load i32, i32* %12, align 4
  store i32 %49, i32* %44, align 4
  store i32 0, i32* %12, align 4
  %50 = icmp eq %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, null
  %51 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 2
  %52 = select i1 %50, %"class.blink::MultipartParser::Client"* null, %"class.blink::MultipartParser::Client"* %51
  call void @_ZN5blink15MultipartParserC1EN3WTF6VectorIcLj0ENS1_18PartitionAllocatorEEEPNS0_6ClientE(%"class.blink::MultipartParser"* %42, %"class.WTF::Vector"* nonnull %4, %"class.blink::MultipartParser::Client"* %52) #13
  %53 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = icmp eq i8* %54, null
  br i1 %55, label %61, label %56, !prof !19

56:                                               ; preds = %39
  %57 = load i32, i32* %44, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %60, label %59, !prof !2

59:                                               ; preds = %56
  store i32 0, i32* %44, align 4
  br label %60

60:                                               ; preds = %59, %56
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %54) #13
  store i8* null, i8** %53, align 8
  br label %61

61:                                               ; preds = %39, %60
  %62 = getelementptr inbounds i8, i8* %41, i64 -4
  %63 = bitcast i8* %62 to i16*
  %64 = load atomic i16, i16* %63 monotonic, align 2
  %65 = or i16 %64, 1
  store atomic i16 %65, i16* %63 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #13
  %66 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 6
  %67 = ptrtoint i8* %41 to i64
  %68 = bitcast %"class.blink::Member.32"* %66 to i64*
  store atomic i64 %67, i64* %68 monotonic, align 8
  %69 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %73, label %71

71:                                               ; preds = %61
  %72 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %41) #13
  br label %73

73:                                               ; preds = %61, %71
  %74 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 3
  %75 = ptrtoint %"class.blink::BytesConsumer"* %1 to i64
  %76 = bitcast %"class.blink::Member"* %74 to i64*
  store atomic i64 %75, i64* %76 monotonic, align 8
  %77 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %84, label %79

79:                                               ; preds = %73
  %80 = bitcast %"class.blink::BytesConsumer"* %1 to i8*
  %81 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %80) #13
  %82 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %74, i64 0, i32 0, i32 0
  %83 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %82, align 8
  br label %84

84:                                               ; preds = %73, %79
  %85 = phi %"class.blink::BytesConsumer"* [ %1, %73 ], [ %83, %79 ]
  %86 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 1
  %87 = bitcast %"class.blink::BytesConsumer"* %85 to void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)***
  %88 = load void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)**, void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*** %87, align 8
  %89 = getelementptr inbounds void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)** %88, i64 7
  %90 = load void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)** %89, align 8
  call void %90(%"class.blink::BytesConsumer"* %85, %"class.blink::BytesConsumer::Client"* %86) #13
  call void @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsFormData13OnStateChangeEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0)
  %91 = load i8*, i8** %10, align 8
  %92 = icmp eq i8* %91, null
  br i1 %92, label %98, label %93, !prof !19

93:                                               ; preds = %84
  %94 = load i32, i32* %12, align 4
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %97, label %96, !prof !2

96:                                               ; preds = %93
  store i32 0, i32* %12, align 4
  br label %97

97:                                               ; preds = %96, %93
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %91) #13
  store i8* null, i8** %10, align 8
  br label %98

98:                                               ; preds = %84, %97
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #13
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsFormData6CancelEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %2, align 8
  %4 = bitcast %"class.blink::BytesConsumer"* %3 to void (%"class.blink::BytesConsumer"*)***
  %5 = load void (%"class.blink::BytesConsumer"*)**, void (%"class.blink::BytesConsumer"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %5, i64 9
  %7 = load void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %6, align 8
  tail call void %7(%"class.blink::BytesConsumer"* %3) #13
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 6, i32 0, i32 0
  %9 = load %"class.blink::MultipartParser"*, %"class.blink::MultipartParser"** %8, align 8
  tail call void @_ZN5blink15MultipartParser6CancelEv(%"class.blink::MultipartParser"* %9) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK5blink12_GLOBAL__N_125FetchDataLoaderAsFormData5TraceEPNS_7VisitorE(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 3
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13BytesConsumerEE5TraceEPNS_7VisitorEPKv) #13
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 4
  %15 = bitcast %"class.blink::Member.9"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %84, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = and i64 %16, -131072
  %21 = inttoptr i64 %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 4138
  %23 = load i8, i8* %22, align 2
  %24 = icmp eq i8 %23, 1
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = getelementptr inbounds i8, i8* %21, i64 4160
  br label %65

27:                                               ; preds = %18
  %28 = getelementptr inbounds i8, i8* %21, i64 4096
  %29 = bitcast i8* %28 to %"class.blink::NormalPage"*
  %30 = getelementptr inbounds i8, i8* %21, i64 4400
  %31 = bitcast i8* %30 to i8**
  %32 = bitcast i8* %30 to i64*
  %33 = load i64, i64* %32, align 16
  %34 = sub i64 %16, %33
  %35 = lshr i64 %34, 3
  %36 = lshr i64 %34, 6
  %37 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %29, i64 0, i32 2, i32 0, i32 1, i64 %36
  %38 = load atomic i8, i8* %37 acquire, align 1
  %39 = trunc i64 %35 to i32
  %40 = and i32 %39, 7
  %41 = shl i32 2, %40
  %42 = trunc i32 %41 to i8
  %43 = add i8 %42, -1
  %44 = and i8 %43, %38
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %52

46:                                               ; preds = %27, %46
  %47 = phi i64 [ %48, %46 ], [ %36, %27 ]
  %48 = add i64 %47, -1
  %49 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %29, i64 0, i32 2, i32 0, i32 1, i64 %48
  %50 = load atomic i8, i8* %49 acquire, align 1
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %46, label %52

52:                                               ; preds = %46, %27
  %53 = phi i64 [ %36, %27 ], [ %48, %46 ]
  %54 = phi i8 [ %44, %27 ], [ %50, %46 ]
  %55 = zext i8 %54 to i32
  %56 = tail call i32 @llvm.ctlz.i32(i32 %55, i1 true) #13, !range !17
  %57 = add nsw i32 %56, -24
  %58 = shl i64 %53, 3
  %59 = or i64 %58, 7
  %60 = sext i32 %57 to i64
  %61 = sub i64 %59, %60
  %62 = shl i64 %61, 3
  %63 = load i8*, i8** %31, align 16
  %64 = getelementptr inbounds i8, i8* %63, i64 %62
  br label %65

65:                                               ; preds = %52, %25
  %66 = phi i8* [ %26, %25 ], [ %64, %52 ]
  %67 = getelementptr inbounds i8, i8* %66, i64 8
  %68 = getelementptr inbounds i8, i8* %66, i64 4
  %69 = bitcast i8* %68 to i16*
  %70 = load atomic i16, i16* %69 acquire, align 2
  %71 = lshr i16 %70, 2
  %72 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %73 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %72, i64 0, i32 0
  %74 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %73, align 8
  %75 = zext i16 %71 to i64
  %76 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %74, i64 %75
  %77 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %76, align 8
  %78 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %77, i64 0, i32 0
  %79 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %78, align 8
  %80 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %81 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %81, i64 5
  %83 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %82, align 8
  tail call void %83(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* %67, void (%"class.blink::Visitor"*, i8*)* %79) #13
  br label %84

84:                                               ; preds = %13, %65
  %85 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 5
  %86 = bitcast %"class.blink::Member.21"* %85 to i64*
  %87 = load atomic i64, i64* %86 monotonic, align 8
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %95, label %89

89:                                               ; preds = %84
  %90 = inttoptr i64 %87 to i8*
  %91 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %92 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %91, align 8
  %93 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %92, i64 5
  %94 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %93, align 8
  tail call void %94(%"class.blink::Visitor"* %1, i8* nonnull %90, i8* nonnull %90, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8FormDataEE5TraceEPNS_7VisitorEPKv) #13
  br label %95

95:                                               ; preds = %84, %89
  %96 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 6
  %97 = bitcast %"class.blink::Member.32"* %96 to i64*
  %98 = load atomic i64, i64* %97 monotonic, align 8
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %106, label %100

100:                                              ; preds = %95
  %101 = inttoptr i64 %98 to i8*
  %102 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %103 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %102, align 8
  %104 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %103, i64 5
  %105 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %104, align 8
  tail call void %105(%"class.blink::Visitor"* %1, i8* nonnull %101, i8* nonnull %101, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15MultipartParserEE5TraceEPNS_7VisitorEPKv) #13
  br label %106

106:                                              ; preds = %95, %100
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsFormData13OnStateChangeEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %4 = bitcast i8** %2 to i8*
  %5 = bitcast i64* %3 to i8*
  %6 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 6, i32 0, i32 0
  br label %8

8:                                                ; preds = %59, %1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %2, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  store i64 -6148914691236517206, i64* %3, align 8
  %9 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %6, align 8
  %10 = bitcast %"class.blink::BytesConsumer"* %9 to i32 (%"class.blink::BytesConsumer"*, i8**, i64*)***
  %11 = load i32 (%"class.blink::BytesConsumer"*, i8**, i64*)**, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*** %10, align 8
  %12 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)** %11, i64 2
  %13 = load i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)** %12, align 8
  %14 = call i32 %13(%"class.blink::BytesConsumer"* %9, i8** nonnull %2, i64* nonnull %3) #13
  switch i32 %14, label %33 [
    i32 1, label %60
    i32 0, label %15
  ]

15:                                               ; preds = %8
  %16 = load %"class.blink::MultipartParser"*, %"class.blink::MultipartParser"** %7, align 8
  %17 = load i8*, i8** %2, align 8
  %18 = load i64, i64* %3, align 8
  %19 = call zeroext i1 @_ZN5blink15MultipartParser10AppendDataEPKcm(%"class.blink::MultipartParser"* %16, i8* %17, i64 %18) #13
  %20 = load %"class.blink::MultipartParser"*, %"class.blink::MultipartParser"** %7, align 8
  %21 = getelementptr inbounds %"class.blink::MultipartParser", %"class.blink::MultipartParser"* %20, i64 0, i32 4
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 7
  %24 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %6, align 8
  %25 = load i64, i64* %3, align 8
  %26 = bitcast %"class.blink::BytesConsumer"* %24 to i32 (%"class.blink::BytesConsumer"*, i64)***
  %27 = load i32 (%"class.blink::BytesConsumer"*, i64)**, i32 (%"class.blink::BytesConsumer"*, i64)*** %26, align 8
  %28 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*, i64)*, i32 (%"class.blink::BytesConsumer"*, i64)** %27, i64 3
  %29 = load i32 (%"class.blink::BytesConsumer"*, i64)*, i32 (%"class.blink::BytesConsumer"*, i64)** %28, align 8
  %30 = call i32 %29(%"class.blink::BytesConsumer"* %24, i64 %25) #13
  %31 = xor i1 %19, true
  %32 = or i1 %23, %31
  br i1 %32, label %52, label %33

33:                                               ; preds = %15, %8
  %34 = phi i32 [ %14, %8 ], [ %30, %15 ]
  switch i32 %34, label %59 [
    i32 3, label %52
    i32 1, label %60
    i32 2, label %35
  ]

35:                                               ; preds = %33
  %36 = load %"class.blink::MultipartParser"*, %"class.blink::MultipartParser"** %7, align 8
  %37 = call zeroext i1 @_ZN5blink15MultipartParser6FinishEv(%"class.blink::MultipartParser"* %36) #13
  %38 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 4, i32 0, i32 0
  %39 = load %"class.blink::FetchDataLoader::Client"*, %"class.blink::FetchDataLoader::Client"** %38, align 8
  br i1 %37, label %40, label %47

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 5, i32 0, i32 0
  %42 = load %"class.blink::FormData"*, %"class.blink::FormData"** %41, align 8
  %43 = bitcast %"class.blink::FetchDataLoader::Client"* %39 to void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::FormData"*)***
  %44 = load void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::FormData"*)**, void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::FormData"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::FormData"*)*, void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::FormData"*)** %44, i64 5
  %46 = load void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::FormData"*)*, void (%"class.blink::FetchDataLoader::Client"*, %"class.blink::FormData"*)** %45, align 8
  call void %46(%"class.blink::FetchDataLoader::Client"* %39, %"class.blink::FormData"* %42) #13
  br label %60

47:                                               ; preds = %35
  %48 = bitcast %"class.blink::FetchDataLoader::Client"* %39 to void (%"class.blink::FetchDataLoader::Client"*)***
  %49 = load void (%"class.blink::FetchDataLoader::Client"*)**, void (%"class.blink::FetchDataLoader::Client"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::FetchDataLoader::Client"*)*, void (%"class.blink::FetchDataLoader::Client"*)** %49, i64 10
  %51 = load void (%"class.blink::FetchDataLoader::Client"*)*, void (%"class.blink::FetchDataLoader::Client"*)** %50, align 8
  call void %51(%"class.blink::FetchDataLoader::Client"* %39) #13
  br label %60

52:                                               ; preds = %15, %33
  %53 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 4, i32 0, i32 0
  %54 = load %"class.blink::FetchDataLoader::Client"*, %"class.blink::FetchDataLoader::Client"** %53, align 8
  %55 = bitcast %"class.blink::FetchDataLoader::Client"* %54 to void (%"class.blink::FetchDataLoader::Client"*)***
  %56 = load void (%"class.blink::FetchDataLoader::Client"*)**, void (%"class.blink::FetchDataLoader::Client"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.blink::FetchDataLoader::Client"*)*, void (%"class.blink::FetchDataLoader::Client"*)** %56, i64 10
  %58 = load void (%"class.blink::FetchDataLoader::Client"*)*, void (%"class.blink::FetchDataLoader::Client"*)** %57, align 8
  call void %58(%"class.blink::FetchDataLoader::Client"* %54) #13
  br label %60

59:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #13
  br label %8

60:                                               ; preds = %33, %8, %40, %47, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_125FetchDataLoaderAsFormData9DebugNameEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.20, i64 0, i64 0), i64 25) #13
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsFormData35PartHeaderFieldsInMultipartReceivedERKNS_13HTTPHeaderMapE(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* nocapture, %"class.blink::HTTPHeaderMap"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.blink::ParsedContentDisposition", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = alloca %"class.blink::TextResourceDecoderOptions", align 8
  %9 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 7
  %10 = bitcast %"class.blink::ParsedContentDisposition"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false) #13
  %11 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names19kContentDispositionE, align 8
  %12 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %1, i64 0, i32 0, i32 0
  %13 = tail call %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6LookupERKS1_(%"class.WTF::HashTable"* %12, %"class.WTF::AtomicString"* dereferenceable(8) %11) #13
  %14 = icmp eq %"struct.WTF::KeyValuePair"* %13, null
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 0, i32 1
  %16 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %17 = select i1 %14, %"class.WTF::AtomicString"* %16, %"class.WTF::AtomicString"* %15
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %17, i64 0, i32 0
  call void @_ZN5blink24ParsedContentDispositionC1ERKN3WTF6StringENS_34ParsedContentHeaderFieldParameters4ModeE(%"class.blink::ParsedContentDisposition"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %18, i32 0) #13
  %19 = getelementptr inbounds %"class.blink::ParsedContentDisposition", %"class.blink::ParsedContentDisposition"* %5, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %39, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %39

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i33
  %31 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %30, i33 1) #13
  %32 = extractvalue { i33, i1 } %31, 1
  %33 = extractvalue { i33, i1 } %31, 0
  %34 = icmp slt i33 %33, 0
  %35 = or i1 %32, %34
  br i1 %35, label %36, label %37, !prof !2

36:                                               ; preds = %27
  call void @llvm.trap() #13
  unreachable

37:                                               ; preds = %27
  %38 = trunc i33 %33 to i32
  store i32 %38, i32* %28, align 4
  br label %39

39:                                               ; preds = %37, %22, %2
  %40 = call %"class.WTF::StringImpl"* @_ZNK5blink24ParsedContentDisposition8FilenameEv(%"class.blink::ParsedContentDisposition"* nonnull %5) #13
  %41 = ptrtoint %"class.WTF::StringImpl"* %40 to i64
  %42 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 7, i32 1
  %43 = bitcast %"class.WTF::String"* %42 to i64*
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %42, i64 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  store i64 %41, i64* %43, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %39
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #13
  br label %60

60:                                               ; preds = %59, %56, %39
  %61 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i64 0, i64 0), i64 4) #13
  %62 = getelementptr inbounds %"class.blink::ParsedContentDisposition", %"class.blink::ParsedContentDisposition"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %63 = load i8, i8* %62, align 8, !range !18
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %68, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.blink::ParsedContentDisposition", %"class.blink::ParsedContentDisposition"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %67 = call %"class.WTF::StringImpl"* @_ZNK5blink34ParsedContentHeaderFieldParameters21ParameterValueForNameERKN3WTF6StringE(%"class.blink::ParsedContentHeaderFieldParameters"* %66, %"class.WTF::String"* nonnull dereferenceable(8) %6) #13
  br label %68

68:                                               ; preds = %65, %60
  %69 = phi %"class.WTF::StringImpl"* [ %67, %65 ], [ null, %60 ]
  %70 = ptrtoint %"class.WTF::StringImpl"* %69 to i64
  %71 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 7, i32 2
  %72 = bitcast %"class.WTF::String"* %71 to i64*
  %73 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %71, i64 0, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  store i64 %70, i64* %72, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %68
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %85

83:                                               ; preds = %76
  %84 = add i32 %82, -1
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi i32 [ %84, %83 ], [ %82, %76 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #13
  br label %89

89:                                               ; preds = %88, %85, %68
  %90 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #13
  br label %106

106:                                              ; preds = %105, %102, %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #13
  %107 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData::Entry", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData::Entry"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %108 = load %"class.blink::BlobData"*, %"class.blink::BlobData"** %107, align 8
  store %"class.blink::BlobData"* null, %"class.blink::BlobData"** %107, align 8
  %109 = icmp eq %"class.blink::BlobData"* %108, null
  br i1 %109, label %112, label %110

110:                                              ; preds = %106
  call void @_ZN5blink8BlobDataD1Ev(%"class.blink::BlobData"* nonnull %108) #13
  %111 = bitcast %"class.blink::BlobData"* %108 to i8*
  call void @free(i8* %111) #13
  br label %112

112:                                              ; preds = %110, %106
  %113 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 7, i32 3
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = load %"class.WTF::StringBuilder"*, %"class.WTF::StringBuilder"** %114, align 8
  store %"class.WTF::StringBuilder"* null, %"class.WTF::StringBuilder"** %114, align 8
  %116 = icmp eq %"class.WTF::StringBuilder"* %115, null
  br i1 %116, label %136, label %117

117:                                              ; preds = %112
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %115) #13
  %118 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %115, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  %120 = icmp eq %"class.WTF::StringImpl"* %119, null
  br i1 %120, label %134, label %121

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  br i1 %125, label %128, label %130

128:                                              ; preds = %121
  %129 = add i32 %127, -1
  store i32 %129, i32* %126, align 4
  br label %130

130:                                              ; preds = %128, %121
  %131 = phi i32 [ %129, %128 ], [ %127, %121 ]
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %134

133:                                              ; preds = %130
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %119) #13
  br label %134

134:                                              ; preds = %133, %130, %117
  %135 = bitcast %"class.WTF::StringBuilder"* %115 to i8*
  call void @free(i8* %135) #13
  br label %136

136:                                              ; preds = %134, %112
  %137 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %137) #13
  br i1 %21, label %138, label %142

138:                                              ; preds = %136
  %139 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %139, align 8
  %140 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %141 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %140, i64* %141, align 8
  br label %150

142:                                              ; preds = %136
  %143 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %143, align 8
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 1
  %145 = load i32, i32* %144, align 4
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 1
  %147 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %148 = bitcast i8** %147 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %146, %"class.WTF::StringImpl"** %148, align 8
  %149 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %150

150:                                              ; preds = %142, %138
  %151 = phi i64 [ %149, %142 ], [ %140, %138 ]
  %152 = phi i32 [ %145, %142 ], [ 0, %138 ]
  %153 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %152, i32* %153, align 8
  %154 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %154) #13
  %155 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %151, i64* %155, align 8
  %156 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i64 0, i64 0), i8** %156, align 8
  %157 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 9, i32* %157, align 8
  %158 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %154) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %137) #13
  br i1 %158, label %159, label %271

159:                                              ; preds = %150
  %160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %161 = icmp eq %"class.WTF::StringImpl"* %160, null
  br i1 %161, label %271, label %162

162:                                              ; preds = %159
  %163 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %164 = icmp eq %"class.WTF::StringImpl"* %163, null
  br i1 %164, label %223, label %165

165:                                              ; preds = %162
  %166 = call noalias i8* @malloc(i64 48) #13
  %167 = bitcast i8* %166 to %"class.blink::BlobData"*
  call void @_ZN5blink8BlobDataC1ENS0_21FileCompositionStatusE(%"class.blink::BlobData"* %167, i32 1) #13
  %168 = ptrtoint i8* %166 to i64
  %169 = load %"class.blink::BlobData"*, %"class.blink::BlobData"** %107, align 8
  %170 = bitcast %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData::Entry"* %9 to i64*
  store i64 %168, i64* %170, align 8
  %171 = icmp eq %"class.blink::BlobData"* %169, null
  br i1 %171, label %174, label %172

172:                                              ; preds = %165
  call void @_ZN5blink8BlobDataD1Ev(%"class.blink::BlobData"* nonnull %169) #13
  %173 = bitcast %"class.blink::BlobData"* %169 to i8*
  call void @free(i8* %173) #13
  br label %174

174:                                              ; preds = %172, %165
  %175 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names12kContentTypeE, align 8
  %176 = call %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6LookupERKS1_(%"class.WTF::HashTable"* %12, %"class.WTF::AtomicString"* dereferenceable(8) %175) #13
  %177 = icmp eq %"struct.WTF::KeyValuePair"* %176, null
  %178 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %176, i64 0, i32 1
  %179 = select i1 %177, %"class.WTF::AtomicString"* %16, %"class.WTF::AtomicString"* %178
  %180 = load %"class.blink::BlobData"*, %"class.blink::BlobData"** %107, align 8
  %181 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %181) #13
  %182 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %179, i64 0, i32 0, i32 0, i32 0
  %183 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %182, align 8
  %184 = icmp eq %"class.WTF::StringImpl"* %183, null
  br i1 %184, label %185, label %186

185:                                              ; preds = %174
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23, i64 0, i64 0), i64 10) #13
  br label %204

186:                                              ; preds = %174
  %187 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %183, %"class.WTF::StringImpl"** %187, align 8
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %183, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = load atomic i32, i32* %188 monotonic, align 4
  %190 = and i32 %189, 2
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %204

192:                                              ; preds = %186
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %183, i64 0, i32 0
  %194 = load i32, i32* %193, align 4
  %195 = zext i32 %194 to i33
  %196 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %195, i33 1) #13
  %197 = extractvalue { i33, i1 } %196, 1
  %198 = extractvalue { i33, i1 } %196, 0
  %199 = icmp slt i33 %198, 0
  %200 = or i1 %197, %199
  br i1 %200, label %201, label %202, !prof !2

201:                                              ; preds = %192
  call void @llvm.trap() #13
  unreachable

202:                                              ; preds = %192
  %203 = trunc i33 %198 to i32
  store i32 %203, i32* %193, align 4
  br label %204

204:                                              ; preds = %202, %186, %185
  %205 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0
  call void @_ZN5blink8BlobData14SetContentTypeERKN3WTF6StringE(%"class.blink::BlobData"* %180, %"class.WTF::String"* nonnull dereferenceable(8) %205) #13
  %206 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %207 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %206, align 8
  %208 = icmp eq %"class.WTF::StringImpl"* %207, null
  br i1 %208, label %222, label %209

209:                                              ; preds = %204
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = load atomic i32, i32* %210 monotonic, align 4
  %212 = and i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 0
  %215 = load i32, i32* %214, align 4
  br i1 %213, label %216, label %218

216:                                              ; preds = %209
  %217 = add i32 %215, -1
  store i32 %217, i32* %214, align 4
  br label %218

218:                                              ; preds = %216, %209
  %219 = phi i32 [ %217, %216 ], [ %215, %209 ]
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %222

221:                                              ; preds = %218
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %207) #13
  br label %222

222:                                              ; preds = %221, %218, %204
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %181) #13
  br label %271

223:                                              ; preds = %162
  %224 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 7, i32 4
  %225 = getelementptr inbounds %"class.std::__1::unique_ptr.116", %"class.std::__1::unique_ptr.116"* %224, i64 0, i32 0, i32 0, i32 0
  %226 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %225, align 8
  %227 = icmp eq %"class.blink::TextResourceDecoder"* %226, null
  br i1 %227, label %228, label %240

228:                                              ; preds = %223
  %229 = bitcast %"class.blink::TextResourceDecoderOptions"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %229) #13
  call void @_ZN5blink26TextResourceDecoderOptions26CreateUTF8DecodeWithoutBOMEv(%"class.blink::TextResourceDecoderOptions"* nonnull sret %8) #13
  %230 = call noalias i8* @malloc(i64 208) #13
  %231 = bitcast i8* %230 to %"class.blink::TextResourceDecoder"*
  call void @_ZN5blink19TextResourceDecoderC1ERKNS_26TextResourceDecoderOptionsE(%"class.blink::TextResourceDecoder"* %231, %"class.blink::TextResourceDecoderOptions"* nonnull dereferenceable(152) %8) #13
  %232 = ptrtoint i8* %230 to i64
  %233 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %225, align 8
  %234 = bitcast %"class.std::__1::unique_ptr.116"* %224 to i64*
  store i64 %232, i64* %234, align 8
  %235 = icmp eq %"class.blink::TextResourceDecoder"* %233, null
  br i1 %235, label %238, label %236

236:                                              ; preds = %228
  call void @_ZN5blink19TextResourceDecoderD1Ev(%"class.blink::TextResourceDecoder"* nonnull %233) #13
  %237 = bitcast %"class.blink::TextResourceDecoder"* %233 to i8*
  call void @free(i8* %237) #13
  br label %238

238:                                              ; preds = %236, %228
  %239 = getelementptr inbounds %"class.blink::TextResourceDecoderOptions", %"class.blink::TextResourceDecoderOptions"* %8, i64 0, i32 7
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %239) #13
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %229) #13
  br label %240

240:                                              ; preds = %238, %223
  %241 = call noalias i8* @malloc(i64 48) #13
  %242 = bitcast i8* %241 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %242, align 8
  %243 = getelementptr inbounds i8, i8* %241, i64 8
  store i8 0, i8* %243, align 8
  %244 = getelementptr inbounds i8, i8* %241, i64 40
  %245 = bitcast i8* %244 to i32*
  store i32 0, i32* %245, align 8
  %246 = getelementptr inbounds i8, i8* %241, i64 44
  store i8 1, i8* %246, align 4
  %247 = getelementptr inbounds i8, i8* %241, i64 45
  store i8 0, i8* %247, align 1
  %248 = ptrtoint i8* %241 to i64
  %249 = load %"class.WTF::StringBuilder"*, %"class.WTF::StringBuilder"** %114, align 8
  %250 = bitcast %"class.std::__1::unique_ptr.100"* %113 to i64*
  store i64 %248, i64* %250, align 8
  %251 = icmp eq %"class.WTF::StringBuilder"* %249, null
  br i1 %251, label %271, label %252

252:                                              ; preds = %240
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %249) #13
  %253 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %249, i64 0, i32 0, i32 0, i32 0
  %254 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %253, align 8
  %255 = icmp eq %"class.WTF::StringImpl"* %254, null
  br i1 %255, label %269, label %256

256:                                              ; preds = %252
  %257 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %254, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %258 = load atomic i32, i32* %257 monotonic, align 4
  %259 = and i32 %258, 2
  %260 = icmp eq i32 %259, 0
  %261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %254, i64 0, i32 0
  %262 = load i32, i32* %261, align 4
  br i1 %260, label %263, label %265

263:                                              ; preds = %256
  %264 = add i32 %262, -1
  store i32 %264, i32* %261, align 4
  br label %265

265:                                              ; preds = %263, %256
  %266 = phi i32 [ %264, %263 ], [ %262, %256 ]
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %268, label %269

268:                                              ; preds = %265
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %254) #13
  br label %269

269:                                              ; preds = %268, %265, %252
  %270 = bitcast %"class.WTF::StringBuilder"* %249 to i8*
  call void @free(i8* %270) #13
  br label %271

271:                                              ; preds = %269, %240, %222, %159, %150
  %272 = phi i1 [ false, %159 ], [ false, %150 ], [ true, %222 ], [ true, %269 ], [ true, %240 ]
  br i1 %21, label %286, label %273

273:                                              ; preds = %271
  %274 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %275 = load atomic i32, i32* %274 monotonic, align 4
  %276 = and i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %279 = load i32, i32* %278, align 4
  br i1 %277, label %280, label %282

280:                                              ; preds = %273
  %281 = add i32 %279, -1
  store i32 %281, i32* %278, align 4
  br label %282

282:                                              ; preds = %280, %273
  %283 = phi i32 [ %281, %280 ], [ %279, %273 ]
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %285, label %286

285:                                              ; preds = %282
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #13
  br label %286

286:                                              ; preds = %271, %282, %285
  call void @_ZN5blink24ParsedContentDispositionD2Ev(%"class.blink::ParsedContentDisposition"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #13
  br i1 %272, label %290, label %287

287:                                              ; preds = %286
  %288 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 6, i32 0, i32 0
  %289 = load %"class.blink::MultipartParser"*, %"class.blink::MultipartParser"** %288, align 8
  call void @_ZN5blink15MultipartParser6CancelEv(%"class.blink::MultipartParser"* %289) #13
  br label %290

290:                                              ; preds = %287, %286
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsFormData27PartDataInMultipartReceivedEPKcm(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* nocapture readonly, i8*, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::BlobData"*, %"class.blink::BlobData"** %5, align 8
  %7 = icmp eq %"class.blink::BlobData"* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %3
  tail call void @_ZN5blink8BlobData11AppendBytesEPKvm(%"class.blink::BlobData"* nonnull %6, i8* %1, i64 %2) #13
  br label %9

9:                                                ; preds = %8, %3
  %10 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 7, i32 3, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringBuilder"*, %"class.WTF::StringBuilder"** %10, align 8
  %12 = icmp eq %"class.WTF::StringBuilder"* %11, null
  br i1 %12, label %52, label %13

13:                                               ; preds = %9
  %14 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 7, i32 4, i32 0, i32 0, i32 0
  %16 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %15, align 8
  %17 = tail call %"class.WTF::StringImpl"* @_ZN5blink19TextResourceDecoder6DecodeEPKcm(%"class.blink::TextResourceDecoder"* %16, i8* %1, i64 %2) #13
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %19, label %24

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %20, align 8
  %21 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %22 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 0, i32* %23, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %11, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #13
  br label %44

24:                                               ; preds = %13
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %25, align 8
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 1
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %30 = bitcast i8** %29 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"** %30, align 8
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %27, i32* %31, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %11, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #13
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %24
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %24
  %41 = phi i32 [ %39, %38 ], [ %37, %24 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #13
  br label %44

44:                                               ; preds = %43, %40, %19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #13
  %45 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %15, align 8
  %46 = getelementptr inbounds %"class.blink::TextResourceDecoder", %"class.blink::TextResourceDecoder"* %45, i64 0, i32 9
  %47 = load i8, i8* %46, align 4, !range !18
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 6, i32 0, i32 0
  %51 = load %"class.blink::MultipartParser"*, %"class.blink::MultipartParser"** %50, align 8
  call void @_ZN5blink15MultipartParser6CancelEv(%"class.blink::MultipartParser"* %51) #13
  br label %52

52:                                               ; preds = %44, %9, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsFormData32PartDataInMultipartFullyReceivedEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.absl::optional.64", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 5, i32 0, i32 0
  %6 = load %"class.blink::FormData"*, %"class.blink::FormData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::BlobData"*, %"class.blink::BlobData"** %7, align 8
  %9 = icmp eq %"class.blink::BlobData"* %8, null
  br i1 %9, label %25, label %10

10:                                               ; preds = %1
  %11 = tail call i64 @_ZNK5blink8BlobData6lengthEv(%"class.blink::BlobData"* nonnull %8) #13
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 7, i32 1
  %13 = load %"class.blink::BlobData"*, %"class.blink::BlobData"** %7, align 8
  store %"class.blink::BlobData"* null, %"class.blink::BlobData"** %7, align 8
  %14 = tail call noalias i8* @malloc(i64 88) #13
  %15 = bitcast i8* %14 to %"class.blink::BlobDataHandle"*
  tail call void @_ZN5blink14BlobDataHandleC1ENSt3__110unique_ptrINS_8BlobDataENS1_14default_deleteIS3_EEEEm(%"class.blink::BlobDataHandle"* %15, %"class.blink::BlobData"* %13, i64 %11) #13
  %16 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 216) #13
  %17 = bitcast i8* %16 to %"class.blink::File"*
  %18 = getelementptr inbounds %"class.absl::optional.64", %"class.absl::optional.64"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #13
  store i8 0, i8* %18, align 8
  call void @_ZN5blink4FileC1ERKN3WTF6StringERKN4absl8optionalIN4base4TimeEEE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::File"* %17, %"class.WTF::String"* dereferenceable(8) %12, %"class.absl::optional.64"* nonnull dereferenceable(16) %2, %"class.blink::BlobDataHandle"* %15) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #13
  %19 = getelementptr inbounds i8, i8* %16, i64 -4
  %20 = bitcast i8* %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = or i16 %21, 1
  store atomic i16 %22, i16* %20 release, align 2
  %23 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 7, i32 2
  %24 = bitcast i8* %16 to %"class.blink::Blob"*
  call void @_ZN5blink8FormData6appendERKN3WTF6StringEPNS_4BlobES4_(%"class.blink::FormData"* %6, %"class.WTF::String"* dereferenceable(8) %23, %"class.blink::Blob"* %24, %"class.WTF::String"* dereferenceable(8) %12) #13
  br label %88

25:                                               ; preds = %1
  %26 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 7, i32 3, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringBuilder"*, %"class.WTF::StringBuilder"** %26, align 8
  %28 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #13
  %29 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 7, i32 4, i32 0, i32 0, i32 0
  %30 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %29, align 8
  %31 = tail call %"class.WTF::StringImpl"* @_ZN5blink19TextResourceDecoder5FlushEv(%"class.blink::TextResourceDecoder"* %30) #13
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %38

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %34, align 8
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %36 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 0, i32* %37, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %27, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #13
  br label %58

38:                                               ; preds = %25
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %39, align 8
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %44 = bitcast i8** %43 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %42, %"class.WTF::StringImpl"** %44, align 8
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %41, i32* %45, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %27, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #13
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %38
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %38
  %55 = phi i32 [ %53, %52 ], [ %51, %38 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #13
  br label %58

58:                                               ; preds = %57, %54, %33
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #13
  %59 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %29, align 8
  %60 = getelementptr inbounds %"class.blink::TextResourceDecoder", %"class.blink::TextResourceDecoder"* %59, i64 0, i32 9
  %61 = load i8, i8* %60, align 4, !range !18
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %63, label %85

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 7, i32 2
  %65 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #13
  %66 = load %"class.WTF::StringBuilder"*, %"class.WTF::StringBuilder"** %26, align 8
  %67 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* %66) #13
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"** %68, align 8
  call void @_ZN5blink8FormData6appendERKN3WTF6StringES4_(%"class.blink::FormData"* %6, %"class.WTF::String"* dereferenceable(8) %64, %"class.WTF::String"* nonnull dereferenceable(8) %4) #13
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %84, label %71

71:                                               ; preds = %63
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %69) #13
  br label %84

84:                                               ; preds = %83, %80, %63
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #13
  br label %88

85:                                               ; preds = %58
  %86 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 0, i32 6, i32 0, i32 0
  %87 = load %"class.blink::MultipartParser"*, %"class.blink::MultipartParser"** %86, align 8
  call void @_ZN5blink15MultipartParser6CancelEv(%"class.blink::MultipartParser"* %87) #13
  br label %88

88:                                               ; preds = %84, %10, %85
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn8_NK5blink12_GLOBAL__N_125FetchDataLoaderAsFormData5TraceEPNS_7VisitorE(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 -1, i32 8
  %4 = bitcast %"class.WTF::String"* %3 to %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"*
  tail call void @_ZNK5blink12_GLOBAL__N_125FetchDataLoaderAsFormData5TraceEPNS_7VisitorE(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %4, %"class.blink::Visitor"* %1)
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZThn8_N5blink12_GLOBAL__N_125FetchDataLoaderAsFormDataD1Ev(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 -1, i32 8
  %3 = bitcast %"class.WTF::String"* %2 to %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"*
  tail call void @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsFormDataD2Ev(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %3) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZThn8_N5blink12_GLOBAL__N_125FetchDataLoaderAsFormDataD0Ev(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 -1, i32 8
  %3 = bitcast %"class.WTF::String"* %2 to %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"*
  tail call void @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsFormDataD2Ev(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn8_N5blink12_GLOBAL__N_125FetchDataLoaderAsFormData13OnStateChangeEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 -1, i32 8
  %3 = bitcast %"class.WTF::String"* %2 to %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"*
  tail call void @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsFormData13OnStateChangeEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.WTF::StringImpl"* @_ZThn8_NK5blink12_GLOBAL__N_125FetchDataLoaderAsFormData9DebugNameEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3)
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.20, i64 0, i64 0), i64 25) #13
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3)
  ret %"class.WTF::StringImpl"* %5
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn16_NK5blink12_GLOBAL__N_125FetchDataLoaderAsFormData5TraceEPNS_7VisitorE(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 -1, i32 7, i32 4
  %4 = bitcast %"class.std::__1::unique_ptr.116"* %3 to %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"*
  tail call void @_ZNK5blink12_GLOBAL__N_125FetchDataLoaderAsFormData5TraceEPNS_7VisitorE(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %4, %"class.blink::Visitor"* %1)
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZThn16_N5blink12_GLOBAL__N_125FetchDataLoaderAsFormDataD1Ev(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 -1, i32 7, i32 4
  %3 = bitcast %"class.std::__1::unique_ptr.116"* %2 to %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"*
  tail call void @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsFormDataD2Ev(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %3) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZThn16_N5blink12_GLOBAL__N_125FetchDataLoaderAsFormDataD0Ev(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 -1, i32 7, i32 4
  %3 = bitcast %"class.std::__1::unique_ptr.116"* %2 to %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"*
  tail call void @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsFormDataD2Ev(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn16_N5blink12_GLOBAL__N_125FetchDataLoaderAsFormData35PartHeaderFieldsInMultipartReceivedERKNS_13HTTPHeaderMapE(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* nocapture, %"class.blink::HTTPHeaderMap"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 -1, i32 7, i32 4
  %4 = bitcast %"class.std::__1::unique_ptr.116"* %3 to %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"*
  tail call void @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsFormData35PartHeaderFieldsInMultipartReceivedERKNS_13HTTPHeaderMapE(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %4, %"class.blink::HTTPHeaderMap"* dereferenceable(24) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn16_N5blink12_GLOBAL__N_125FetchDataLoaderAsFormData27PartDataInMultipartReceivedEPKcm(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* nocapture readonly, i8*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 -1, i32 7, i32 4
  %5 = bitcast %"class.std::__1::unique_ptr.116"* %4 to %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"*
  tail call void @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsFormData27PartDataInMultipartReceivedEPKcm(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %5, i8* %1, i64 %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn16_N5blink12_GLOBAL__N_125FetchDataLoaderAsFormData32PartDataInMultipartFullyReceivedEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData", %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %0, i64 -1, i32 7, i32 4
  %3 = bitcast %"class.std::__1::unique_ptr.116"* %2 to %"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"*
  tail call void @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsFormData32PartDataInMultipartFullyReceivedEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsFormData"* %3)
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink19TextResourceDecoderD1Ev(%"class.blink::TextResourceDecoder"*) unnamed_addr #4

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

declare void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"*, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE6AppendIcEEvPKT_j(%"class.WTF::Vector"*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %87

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = icmp ugt i8* %15, %1
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds i8, i8* %15, i64 %18
  %20 = icmp ugt i8* %19, %1
  br i1 %20, label %52, label %21

21:                                               ; preds = %17, %13
  %22 = lshr i32 %11, 2
  %23 = add nuw i32 %11, 1
  %24 = add i32 %23, %22
  %25 = icmp ugt i32 %24, 4
  %26 = select i1 %25, i32 %24, i32 4
  %27 = icmp ugt i32 %26, %9
  %28 = select i1 %27, i32 %26, i32 %9
  %29 = icmp ult i32 %11, %28
  br i1 %29, label %30, label %87, !prof !19

30:                                               ; preds = %21
  %31 = icmp eq i8* %15, null
  %32 = zext i32 %28 to i64
  %33 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %32) #13
  %34 = tail call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %33) #13
  %35 = ptrtoint i8* %34 to i64
  br i1 %31, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %35, i64* %37 monotonic, align 8
  %38 = trunc i64 %33 to i32
  store i32 %38, i32* %10, align 8
  br label %87

39:                                               ; preds = %30
  %40 = load i8*, i8** %14, align 8
  %41 = icmp ne i8* %34, null
  %42 = icmp ne i8* %40, null
  %43 = and i1 %41, %42
  br i1 %43, label %44, label %48, !prof !19

44:                                               ; preds = %39
  %45 = load i32, i32* %7, align 4
  %46 = zext i32 %45 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %34, i8* nonnull align 1 %40, i64 %46, i1 false) #13
  %47 = load i8*, i8** %14, align 8
  br label %48

48:                                               ; preds = %44, %39
  %49 = phi i8* [ %40, %39 ], [ %47, %44 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #13
  %50 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %35, i64* %50 monotonic, align 8
  %51 = trunc i64 %33 to i32
  store i32 %51, i32* %10, align 8
  br label %87

52:                                               ; preds = %17
  %53 = ptrtoint i8* %1 to i64
  %54 = ptrtoint i8* %15 to i64
  %55 = sub i64 %53, %54
  %56 = lshr i32 %11, 2
  %57 = add nuw i32 %11, 1
  %58 = add i32 %57, %56
  %59 = icmp ugt i32 %58, 4
  %60 = select i1 %59, i32 %58, i32 4
  %61 = icmp ugt i32 %60, %9
  %62 = select i1 %61, i32 %60, i32 %9
  %63 = icmp ult i32 %11, %62
  br i1 %63, label %64, label %84, !prof !19

64:                                               ; preds = %52
  %65 = icmp eq i8* %15, null
  %66 = zext i32 %62 to i64
  %67 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %66) #13
  %68 = tail call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %67) #13
  %69 = ptrtoint i8* %68 to i64
  br i1 %65, label %81, label %70

70:                                               ; preds = %64
  %71 = load i8*, i8** %14, align 8
  %72 = icmp ne i8* %68, null
  %73 = icmp ne i8* %71, null
  %74 = and i1 %72, %73
  br i1 %74, label %75, label %79, !prof !19

75:                                               ; preds = %70
  %76 = load i32, i32* %7, align 4
  %77 = zext i32 %76 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %68, i8* nonnull align 1 %71, i64 %77, i1 false) #13
  %78 = load i8*, i8** %14, align 8
  br label %79

79:                                               ; preds = %75, %70
  %80 = phi i8* [ %71, %70 ], [ %78, %75 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %80) #13
  br label %81

81:                                               ; preds = %64, %79
  %82 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %69, i64* %82 monotonic, align 8
  %83 = trunc i64 %67 to i32
  store i32 %83, i32* %10, align 8
  br label %84

84:                                               ; preds = %81, %52
  %85 = phi i8* [ %15, %52 ], [ %68, %81 ]
  %86 = getelementptr inbounds i8, i8* %85, i64 %55
  br label %87

87:                                               ; preds = %84, %21, %36, %48, %3
  %88 = phi i8* [ %1, %3 ], [ %86, %84 ], [ %1, %21 ], [ %1, %36 ], [ %1, %48 ]
  %89 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #13
  %90 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %90, align 8
  %91 = load i32, i32* %7, align 4
  %92 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92)
  %93 = icmp ult i32 %9, %91
  br i1 %93, label %95, label %94

94:                                               ; preds = %87
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92)
  store i8* null, i8** %90, align 8
  br label %104

95:                                               ; preds = %87
  %96 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  %97 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %91) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i64 0, i64 0), i8* %96, i8* %97) #13
  %98 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %99 = load i8*, i8** %98, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92)
  store i8* %99, i8** %90, align 8
  %100 = icmp eq i8* %99, null
  br i1 %100, label %104, label %101

101:                                              ; preds = %95
  %102 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.16, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #13
  %103 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #13
  br label %104

104:                                              ; preds = %94, %95, %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #13
  %105 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  %107 = load i32, i32* %7, align 4
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i8, i8* %106, i64 %108
  %110 = icmp ne i8* %109, null
  %111 = icmp ne i8* %88, null
  %112 = and i1 %111, %110
  br i1 %112, label %113, label %115, !prof !19

113:                                              ; preds = %104
  %114 = zext i32 %2 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %109, i8* nonnull align 1 %88, i64 %114, i1 false) #13
  br label %115

115:                                              ; preds = %104, %113
  store i32 %9, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"*) unnamed_addr #4

declare i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.18, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.19, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #13
  ret i64 %20
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN5blink8FormDataC1Ev(%"class.blink::FormData"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #13
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare void @_ZN5blink15MultipartParserC1EN3WTF6VectorIcLj0ENS1_18PartitionAllocatorEEEPNS0_6ClientE(%"class.blink::MultipartParser"*, %"class.WTF::Vector"*, %"class.blink::MultipartParser::Client"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15MultipartParserEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15MultipartParserEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15MultipartParserEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15MultipartParserEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15MultipartParserEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15MultipartParserEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::MultipartParser"*
  tail call void @_ZNK5blink15MultipartParser5TraceEPNS_7VisitorE(%"class.blink::MultipartParser"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15MultipartParserEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 48
  %3 = bitcast i8* %2 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %13, label %6, !prof !19

6:                                                ; preds = %1
  %7 = getelementptr inbounds i8, i8* %0, i64 60
  %8 = bitcast i8* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !2

11:                                               ; preds = %6
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %11, %6
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %4) #13
  store i8* null, i8** %3, align 8
  br label %13

13:                                               ; preds = %12, %1
  %14 = getelementptr inbounds i8, i8* %0, i64 24
  %15 = bitcast i8* %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %25, label %18, !prof !19

18:                                               ; preds = %13
  %19 = getelementptr inbounds i8, i8* %0, i64 36
  %20 = bitcast i8* %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %24, label %23, !prof !2

23:                                               ; preds = %18
  store i32 0, i32* %20, align 4
  br label %24

24:                                               ; preds = %23, %18
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %16) #13
  store i8* null, i8** %15, align 8
  br label %25

25:                                               ; preds = %13, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15MultipartParserEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink15MultipartParser5TraceEPNS_7VisitorE(%"class.blink::MultipartParser"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZN5blink15MultipartParser6CancelEv(%"class.blink::MultipartParser"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8FormDataEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::FormData"*
  tail call void @_ZNK5blink8FormData5TraceEPNS_7VisitorE(%"class.blink::FormData"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

declare void @_ZNK5blink8FormData5TraceEPNS_7VisitorE(%"class.blink::FormData"*, %"class.blink::Visitor"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink15MultipartParser10AppendDataEPKcm(%"class.blink::MultipartParser"*, i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink15MultipartParser6FinishEv(%"class.blink::MultipartParser"*) local_unnamed_addr #1

declare void @_ZN5blink24ParsedContentDispositionC1ERKN3WTF6StringENS_34ParsedContentHeaderFieldParameters4ModeE(%"class.blink::ParsedContentDisposition"*, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink24ParsedContentDisposition8FilenameEv(%"class.blink::ParsedContentDisposition"*) local_unnamed_addr #1

declare void @_ZN5blink26TextResourceDecoderOptions26CreateUTF8DecodeWithoutBOMEv(%"class.blink::TextResourceDecoderOptions"* sret) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24ParsedContentDispositionD2Ev(%"class.blink::ParsedContentDisposition"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ParsedContentDisposition", %"class.blink::ParsedContentDisposition"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !18
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %62, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ParsedContentDisposition", %"class.blink::ParsedContentDisposition"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.blink::ParsedContentHeaderFieldParameters", %"class.blink::ParsedContentHeaderFieldParameters"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"*, %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"** %7, align 8
  %9 = icmp eq %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* %8, null
  br i1 %9, label %61, label %10, !prof !19

10:                                               ; preds = %5
  %11 = bitcast %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* %8 to i8*
  %12 = getelementptr inbounds %"class.blink::ParsedContentDisposition", %"class.blink::ParsedContentDisposition"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %59, label %15, !prof !2

15:                                               ; preds = %10
  %16 = zext i32 %13 to i64
  %17 = getelementptr inbounds %"struct.blink::ParsedContentHeaderFieldParameters::NameValue", %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* %8, i64 %16
  br label %18

18:                                               ; preds = %53, %15
  %19 = phi %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* [ %54, %53 ], [ %8, %15 ]
  %20 = getelementptr inbounds %"struct.blink::ParsedContentHeaderFieldParameters::NameValue", %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* %19, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #13
  br label %36

36:                                               ; preds = %35, %32, %18
  %37 = getelementptr inbounds %"struct.blink::ParsedContentHeaderFieldParameters::NameValue", %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* %19, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #13
  br label %53

53:                                               ; preds = %52, %49, %36
  %54 = getelementptr inbounds %"struct.blink::ParsedContentHeaderFieldParameters::NameValue", %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* %19, i64 1
  %55 = icmp eq %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* %54, %17
  br i1 %55, label %56, label %18

56:                                               ; preds = %53
  store i32 0, i32* %12, align 4
  %57 = bitcast %"class.blink::ParsedContentHeaderFieldParameters"* %6 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %10
  %60 = phi i8* [ %58, %56 ], [ %11, %10 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %60) #13
  store %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* null, %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"** %7, align 8
  br label %61

61:                                               ; preds = %5, %59
  store i8 0, i8* %2, align 8
  br label %62

62:                                               ; preds = %1, %61
  %63 = getelementptr inbounds %"class.blink::ParsedContentDisposition", %"class.blink::ParsedContentDisposition"* %0, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %79, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %64) #13
  br label %79

79:                                               ; preds = %62, %75, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6LookupERKS1_(%"class.WTF::HashTable"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair"* %6, null
  br i1 %7, label %74, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, -1
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = tail call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %14) #13
  %16 = and i32 %15, %11
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %17
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %74, label %22

22:                                               ; preds = %8
  %23 = bitcast %"class.WTF::StringView"* %3 to i8*
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %26 = bitcast %"class.WTF::StringView"* %4 to i8*
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %29 = bitcast i8** %28 to %"class.WTF::StringImpl"**
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %31 = xor i32 %15, -1
  %32 = lshr i32 %15, 23
  %33 = add i32 %32, %31
  %34 = shl i32 %33, 12
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 7
  %37 = xor i32 %36, %35
  %38 = shl i32 %37, 2
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 20
  %41 = xor i32 %40, %39
  %42 = or i32 %41, 1
  %43 = zext i32 %42 to i64
  %44 = bitcast %"class.WTF::StringView"* %3 to i8**
  br label %45

45:                                               ; preds = %65, %22
  %46 = phi %"struct.WTF::KeyValuePair"* [ %18, %22 ], [ %70, %65 ]
  %47 = phi i64 [ %17, %22 ], [ %69, %65 ]
  %48 = phi i64 [ 0, %22 ], [ %67, %65 ]
  %49 = bitcast %"struct.WTF::KeyValuePair"* %46 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = icmp eq i8* %50, inttoptr (i64 -1 to i8*)
  br i1 %51, label %65, label %52

52:                                               ; preds = %45
  %53 = bitcast i8* %50 to %"class.WTF::StringImpl"*
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, %53
  br i1 %55, label %74, label %56

56:                                               ; preds = %52
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #13
  store i8* %50, i8** %44, align 8
  %57 = getelementptr inbounds i8, i8* %50, i64 12
  store i8* %57, i8** %24, align 8
  %58 = getelementptr inbounds i8, i8* %50, i64 4
  %59 = bitcast i8* %58 to i32*
  %60 = load i32, i32* %59, align 4
  store i32 %60, i32* %25, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #13
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %27, align 8
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 1
  store %"class.WTF::StringImpl"* %61, %"class.WTF::StringImpl"** %29, align 8
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  store i32 %63, i32* %30, align 8
  %64 = call zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #13
  br i1 %64, label %74, label %65

65:                                               ; preds = %56, %45
  %66 = icmp eq i64 %48, 0
  %67 = select i1 %66, i64 %43, i64 %48
  %68 = add i64 %67, %47
  %69 = and i64 %68, %12
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %69
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %70, i64 0, i32 0, i32 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %74, label %45

74:                                               ; preds = %52, %56, %65, %2, %8
  %75 = phi %"struct.WTF::KeyValuePair"* [ null, %2 ], [ null, %8 ], [ %46, %52 ], [ %46, %56 ], [ null, %65 ]
  ret %"struct.WTF::KeyValuePair"* %75
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i32, i32* %3 monotonic, align 4
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 1
  br i1 %6, label %77, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.WTF::StringImpl"* %7 to i8*
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = lshr i32 %11, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %48, label %16

16:                                               ; preds = %8
  %17 = add nsw i32 %14, -1
  %18 = zext i32 %17 to i64
  br label %19

19:                                               ; preds = %19, %16
  %20 = phi i32 [ %41, %19 ], [ -1640531527, %16 ]
  %21 = phi i32 [ %23, %19 ], [ %14, %16 ]
  %22 = phi i8* [ %42, %19 ], [ %9, %16 ]
  %23 = add nsw i32 %21, -1
  %24 = load i8, i8* %22, align 1
  %25 = zext i8 %24 to i64
  %26 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %25
  %27 = load i16, i16* %26, align 2
  %28 = getelementptr inbounds i8, i8* %22, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i64
  %31 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %30
  %32 = load i16, i16* %31, align 2
  %33 = zext i16 %27 to i32
  %34 = add i32 %20, %33
  %35 = shl i32 %34, 16
  %36 = zext i16 %32 to i32
  %37 = shl nuw nsw i32 %36, 11
  %38 = xor i32 %35, %34
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 11
  %41 = add i32 %40, %39
  %42 = getelementptr inbounds i8, i8* %22, i64 2
  %43 = icmp eq i32 %23, 0
  br i1 %43, label %44, label %19

44:                                               ; preds = %19
  %45 = shl nuw nsw i64 %18, 1
  %46 = add nuw nsw i64 %45, 2
  %47 = getelementptr i8, i8* %9, i64 %46
  br label %48

48:                                               ; preds = %44, %8
  %49 = phi i32 [ -1640531527, %8 ], [ %41, %44 ]
  %50 = phi i8* [ %9, %8 ], [ %47, %44 ]
  br i1 %13, label %62, label %51

51:                                               ; preds = %48
  %52 = load i8, i8* %50, align 1
  %53 = zext i8 %52 to i64
  %54 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %53
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = add i32 %49, %56
  %58 = shl i32 %57, 11
  %59 = xor i32 %58, %57
  %60 = lshr i32 %59, 17
  %61 = add i32 %60, %59
  br label %62

62:                                               ; preds = %48, %51
  %63 = phi i32 [ %61, %51 ], [ %49, %48 ]
  %64 = shl i32 %63, 3
  %65 = xor i32 %64, %63
  %66 = lshr i32 %65, 5
  %67 = add i32 %66, %65
  %68 = shl i32 %67, 2
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 15
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 10
  %73 = xor i32 %72, %71
  %74 = and i32 %73, 16777215
  %75 = icmp eq i32 %74, 0
  %76 = select i1 %75, i32 8388608, i32 %74
  br label %112

77:                                               ; preds = %1
  %78 = bitcast %"class.WTF::StringImpl"* %7 to i16*
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = bitcast i64* %2 to %"class.WTF::StringHasher"*
  %82 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #13
  store i64 186919631157689, i64* %2, align 8
  %83 = bitcast i64* %2 to i32*
  %84 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %81, i64 0, i32 1
  call void @_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j(%"class.WTF::StringHasher"* nonnull %81, i16* %78, i32 %80) #13
  %85 = load i32, i32* %83, align 8
  %86 = load i8, i8* %84, align 4, !range !18
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %97, label %88

88:                                               ; preds = %77
  %89 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %81, i64 0, i32 2
  %90 = load i16, i16* %89, align 2
  %91 = zext i16 %90 to i32
  %92 = add i32 %85, %91
  %93 = shl i32 %92, 11
  %94 = xor i32 %93, %92
  %95 = lshr i32 %94, 17
  %96 = add i32 %95, %94
  br label %97

97:                                               ; preds = %77, %88
  %98 = phi i32 [ %96, %88 ], [ %85, %77 ]
  %99 = shl i32 %98, 3
  %100 = xor i32 %99, %98
  %101 = lshr i32 %100, 5
  %102 = add i32 %101, %100
  %103 = shl i32 %102, 2
  %104 = xor i32 %103, %102
  %105 = lshr i32 %104, 15
  %106 = add i32 %105, %104
  %107 = shl i32 %106, 10
  %108 = xor i32 %107, %106
  %109 = and i32 %108, 16777215
  %110 = icmp eq i32 %109, 0
  %111 = select i1 %110, i32 8388608, i32 %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #13
  br label %112

112:                                              ; preds = %97, %62
  %113 = phi i32 [ %76, %62 ], [ %111, %97 ]
  ret i32 %113
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j(%"class.WTF::StringHasher"*, i16*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = and i32 %2, 1
  %5 = icmp eq i32 %4, 0
  %6 = lshr i32 %2, 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %33, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 0
  br label %10

10:                                               ; preds = %8, %10
  %11 = phi i32 [ %6, %8 ], [ %13, %10 ]
  %12 = phi i16* [ %1, %8 ], [ %31, %10 ]
  %13 = add nsw i32 %11, -1
  %14 = load i16, i16* %12, align 2
  %15 = zext i16 %14 to i32
  %16 = tail call i32 @u_foldCase_69(i32 %15, i32 0) #13
  %17 = getelementptr inbounds i16, i16* %12, i64 1
  %18 = load i16, i16* %17, align 2
  %19 = zext i16 %18 to i32
  %20 = tail call i32 @u_foldCase_69(i32 %19, i32 0) #13
  %21 = and i32 %16, 65535
  %22 = load i32, i32* %9, align 4
  %23 = add i32 %22, %21
  %24 = shl i32 %23, 16
  %25 = shl i32 %20, 11
  %26 = and i32 %25, 134215680
  %27 = xor i32 %23, %26
  %28 = xor i32 %27, %24
  %29 = lshr i32 %28, 11
  %30 = add i32 %29, %28
  store i32 %30, i32* %9, align 4
  %31 = getelementptr inbounds i16, i16* %12, i64 2
  %32 = icmp eq i32 %13, 0
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %3
  %34 = phi i16* [ %1, %3 ], [ %31, %10 ]
  br i1 %5, label %59, label %35

35:                                               ; preds = %33
  %36 = load i16, i16* %34, align 2
  %37 = zext i16 %36 to i32
  %38 = tail call i32 @u_foldCase_69(i32 %37, i32 0) #13
  %39 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 1
  %40 = load i8, i8* %39, align 4, !range !18
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %56, label %42

42:                                               ; preds = %35
  store i8 0, i8* %39, align 4
  %43 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 2
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i32
  %46 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = add i32 %47, %45
  %49 = shl i32 %48, 16
  %50 = shl i32 %38, 11
  %51 = and i32 %50, 134215680
  %52 = xor i32 %48, %51
  %53 = xor i32 %52, %49
  %54 = lshr i32 %53, 11
  %55 = add i32 %54, %53
  store i32 %55, i32* %46, align 4
  br label %59

56:                                               ; preds = %35
  %57 = trunc i32 %38 to i16
  %58 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 2
  store i16 %57, i16* %58, align 2
  store i8 1, i8* %39, align 4
  br label %59

59:                                               ; preds = %56, %42, %33
  ret void
}

declare i32 @u_foldCase_69(i32, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink34ParsedContentHeaderFieldParameters21ParameterValueForNameERKN3WTF6StringE(%"class.blink::ParsedContentHeaderFieldParameters"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #1

declare void @_ZN5blink19TextResourceDecoderC1ERKNS_26TextResourceDecoderOptionsE(%"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoderOptions"* dereferenceable(152)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #4

declare void @_ZN5blink8BlobData11AppendBytesEPKvm(%"class.blink::BlobData"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !18
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #13
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %37
  tail call void @llvm.trap() #13
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #13
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #13
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #13
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink19TextResourceDecoder6DecodeEPKcm(%"class.blink::TextResourceDecoder"*, i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #1

declare i64 @_ZNK5blink8BlobData6lengthEv(%"class.blink::BlobData"*) local_unnamed_addr #1

declare void @_ZN5blink8FormData6appendERKN3WTF6StringEPNS_4BlobES4_(%"class.blink::FormData"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::Blob"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink19TextResourceDecoder5FlushEv(%"class.blink::TextResourceDecoder"*) local_unnamed_addr #1

declare void @_ZN5blink8FormData6appendERKN3WTF6StringES4_(%"class.blink::FormData"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

declare void @_ZN5blink4FileC1ERKN3WTF6StringERKN4absl8optionalIN4base4TimeEEE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::File"*, %"class.WTF::String"* dereferenceable(8), %"class.absl::optional.64"* dereferenceable(16), %"class.blink::BlobDataHandle"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_123FetchDataLoaderAsStringD2Ev(%"class.blink::(anonymous namespace)::FetchDataLoaderAsString"*) unnamed_addr #3 align 2 {
  %2 = bitcast %"class.blink::(anonymous namespace)::FetchDataLoaderAsString"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_123FetchDataLoaderAsStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_123FetchDataLoaderAsStringE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsString", %"class.blink::(anonymous namespace)::FetchDataLoaderAsString"* %0, i64 0, i32 6
  tail call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* %3) #13
  %4 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  br i1 %11, label %14, label %16

14:                                               ; preds = %7
  %15 = add i32 %13, -1
  store i32 %15, i32* %12, align 4
  br label %16

16:                                               ; preds = %14, %7
  %17 = phi i32 [ %15, %14 ], [ %13, %7 ]
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #13
  br label %20

20:                                               ; preds = %1, %16, %19
  %21 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsString", %"class.blink::(anonymous namespace)::FetchDataLoaderAsString"* %0, i64 0, i32 5, i32 7
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %21) #13
  %22 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsString", %"class.blink::(anonymous namespace)::FetchDataLoaderAsString"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %23 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %22, align 8
  store %"class.blink::TextResourceDecoder"* null, %"class.blink::TextResourceDecoder"** %22, align 8
  %24 = icmp eq %"class.blink::TextResourceDecoder"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  tail call void @_ZN5blink19TextResourceDecoderD1Ev(%"class.blink::TextResourceDecoder"* nonnull %23) #13
  %26 = bitcast %"class.blink::TextResourceDecoder"* %23 to i8*
  tail call void @free(i8* %26) #13
  br label %27

27:                                               ; preds = %20, %25
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_123FetchDataLoaderAsStringD0Ev(%"class.blink::(anonymous namespace)::FetchDataLoaderAsString"*) unnamed_addr #3 align 2 {
  %2 = bitcast %"class.blink::(anonymous namespace)::FetchDataLoaderAsString"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_123FetchDataLoaderAsStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_123FetchDataLoaderAsStringE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsString", %"class.blink::(anonymous namespace)::FetchDataLoaderAsString"* %0, i64 0, i32 6
  tail call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* %3) #13
  %4 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  br i1 %11, label %14, label %16

14:                                               ; preds = %7
  %15 = add i32 %13, -1
  store i32 %15, i32* %12, align 4
  br label %16

16:                                               ; preds = %14, %7
  %17 = phi i32 [ %15, %14 ], [ %13, %7 ]
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #13
  br label %20

20:                                               ; preds = %19, %16, %1
  %21 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsString", %"class.blink::(anonymous namespace)::FetchDataLoaderAsString"* %0, i64 0, i32 5, i32 7
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %21) #13
  %22 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsString", %"class.blink::(anonymous namespace)::FetchDataLoaderAsString"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %23 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %22, align 8
  store %"class.blink::TextResourceDecoder"* null, %"class.blink::TextResourceDecoder"** %22, align 8
  %24 = icmp eq %"class.blink::TextResourceDecoder"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  tail call void @_ZN5blink19TextResourceDecoderD1Ev(%"class.blink::TextResourceDecoder"* nonnull %23) #13
  %26 = bitcast %"class.blink::TextResourceDecoder"* %23 to i8*
  tail call void @free(i8* %26) #13
  br label %27

27:                                               ; preds = %20, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_123FetchDataLoaderAsString5StartEPNS_13BytesConsumerEPNS_15FetchDataLoader6ClientE(%"class.blink::(anonymous namespace)::FetchDataLoaderAsString"*, %"class.blink::BytesConsumer"*, %"class.blink::FetchDataLoader::Client"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsString", %"class.blink::(anonymous namespace)::FetchDataLoaderAsString"* %0, i64 0, i32 3
  %5 = ptrtoint %"class.blink::FetchDataLoader::Client"* %2 to i64
  %6 = bitcast %"class.blink::Member.9"* %4 to i64*
  store atomic i64 %5, i64* %6 monotonic, align 8
  %7 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.blink::FetchDataLoader::Client"* %2 to i8*
  %11 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %10) #13
  br label %12

12:                                               ; preds = %3, %9
  %13 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsString", %"class.blink::(anonymous namespace)::FetchDataLoaderAsString"* %0, i64 0, i32 5
  %14 = tail call noalias i8* @malloc(i64 208) #13
  %15 = bitcast i8* %14 to %"class.blink::TextResourceDecoder"*
  tail call void @_ZN5blink19TextResourceDecoderC1ERKNS_26TextResourceDecoderOptionsE(%"class.blink::TextResourceDecoder"* %15, %"class.blink::TextResourceDecoderOptions"* dereferenceable(152) %13) #13
  %16 = ptrtoint i8* %14 to i64
  %17 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsString", %"class.blink::(anonymous namespace)::FetchDataLoaderAsString"* %0, i64 0, i32 4
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.116", %"class.std::__1::unique_ptr.116"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %18, align 8
  %20 = bitcast %"class.std::__1::unique_ptr.116"* %17 to i64*
  store i64 %16, i64* %20, align 8
  %21 = icmp eq %"class.blink::TextResourceDecoder"* %19, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %12
  tail call void @_ZN5blink19TextResourceDecoderD1Ev(%"class.blink::TextResourceDecoder"* nonnull %19) #13
  %23 = bitcast %"class.blink::TextResourceDecoder"* %19 to i8*
  tail call void @free(i8* %23) #13
  br label %24

24:                                               ; preds = %22, %12
  %25 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsString", %"class.blink::(anonymous namespace)::FetchDataLoaderAsString"* %0, i64 0, i32 2
  %26 = ptrtoint %"class.blink::BytesConsumer"* %1 to i64
  %27 = bitcast %"class.blink::Member"* %25 to i64*
  store atomic i64 %26, i64* %27 monotonic, align 8
  %28 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.blink::BytesConsumer"* %1 to i8*
  %32 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %31) #13
  %33 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %25, i64 0, i32 0, i32 0
  %34 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %33, align 8
  br label %35

35:                                               ; preds = %24, %30
  %36 = phi %"class.blink::BytesConsumer"* [ %1, %24 ], [ %34, %30 ]
  %37 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsString", %"class.blink::(anonymous namespace)::FetchDataLoaderAsString"* %0, i64 0, i32 1
  %38 = bitcast %"class.blink::BytesConsumer"* %36 to void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)***
  %39 = load void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)**, void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)** %39, i64 7
  %41 = load void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)** %40, align 8
  tail call void %41(%"class.blink::BytesConsumer"* %36, %"class.blink::BytesConsumer::Client"* %37) #13
  tail call void @_ZN5blink12_GLOBAL__N_123FetchDataLoaderAsString13OnStateChangeEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsString"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_123FetchDataLoaderAsString6CancelEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsString"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsString", %"class.blink::(anonymous namespace)::FetchDataLoaderAsString"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %2, align 8
  %4 = bitcast %"class.blink::BytesConsumer"* %3 to void (%"class.blink::BytesConsumer"*)***
  %5 = load void (%"class.blink::BytesConsumer"*)**, void (%"class.blink::BytesConsumer"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %5, i64 9
  %7 = load void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %6, align 8
  tail call void %7(%"class.blink::BytesConsumer"* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK5blink12_GLOBAL__N_123FetchDataLoaderAsString5TraceEPNS_7VisitorE(%"class.blink::(anonymous namespace)::FetchDataLoaderAsString"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsString", %"class.blink::(anonymous namespace)::FetchDataLoaderAsString"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13BytesConsumerEE5TraceEPNS_7VisitorEPKv) #13
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsString", %"class.blink::(anonymous namespace)::FetchDataLoaderAsString"* %0, i64 0, i32 3
  tail call void @_ZN5blink7Visitor5TraceINS_15FetchDataLoader6ClientEEEvRKNS_6MemberIT_EE(%"class.blink::Visitor"* %1, %"class.blink::Member.9"* dereferenceable(8) %14)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_123FetchDataLoaderAsString13OnStateChangeEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsString"*) unnamed_addr #0 align 2 {
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = bitcast i8** %2 to i8*
  %8 = bitcast i64* %3 to i8*
  %9 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsString", %"class.blink::(anonymous namespace)::FetchDataLoaderAsString"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsString", %"class.blink::(anonymous namespace)::FetchDataLoaderAsString"* %0, i64 0, i32 6
  %11 = bitcast %"class.WTF::StringView"* %4 to i8*
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsString", %"class.blink::(anonymous namespace)::FetchDataLoaderAsString"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %14 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %15 = bitcast i8** %14 to %"class.WTF::StringImpl"**
  %16 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %17 = bitcast %"class.WTF::StringView"* %4 to i64*
  br label %18

18:                                               ; preds = %126, %1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %2, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #13
  store i64 -6148914691236517206, i64* %3, align 8
  %19 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %9, align 8
  %20 = bitcast %"class.blink::BytesConsumer"* %19 to i32 (%"class.blink::BytesConsumer"*, i8**, i64*)***
  %21 = load i32 (%"class.blink::BytesConsumer"*, i8**, i64*)**, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*** %20, align 8
  %22 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)** %21, i64 2
  %23 = load i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)** %22, align 8
  %24 = call i32 %23(%"class.blink::BytesConsumer"* %19, i8** nonnull %2, i64* nonnull %3) #13
  switch i32 %24, label %61 [
    i32 1, label %127
    i32 0, label %25
  ]

25:                                               ; preds = %18
  %26 = load i64, i64* %3, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %53, label %28

28:                                               ; preds = %25
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #13
  %29 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %12, align 8
  %30 = load i8*, i8** %2, align 8
  %31 = call %"class.WTF::StringImpl"* @_ZN5blink19TextResourceDecoder6DecodeEPKcm(%"class.blink::TextResourceDecoder"* %29, i8* %30, i64 %26) #13
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %28
  store i8* null, i8** %14, align 8
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %34, i64* %17, align 8
  store i32 0, i32* %16, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  br label %51

35:                                               ; preds = %28
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %13, align 8
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %15, align 8
  store i32 %37, i32* %16, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %35
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %35
  %48 = phi i32 [ %46, %45 ], [ %44, %35 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #13
  br label %51

51:                                               ; preds = %33, %47, %50
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #13
  %52 = load i64, i64* %3, align 8
  br label %53

53:                                               ; preds = %25, %51
  %54 = phi i64 [ 0, %25 ], [ %52, %51 ]
  %55 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %9, align 8
  %56 = bitcast %"class.blink::BytesConsumer"* %55 to i32 (%"class.blink::BytesConsumer"*, i64)***
  %57 = load i32 (%"class.blink::BytesConsumer"*, i64)**, i32 (%"class.blink::BytesConsumer"*, i64)*** %56, align 8
  %58 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*, i64)*, i32 (%"class.blink::BytesConsumer"*, i64)** %57, i64 3
  %59 = load i32 (%"class.blink::BytesConsumer"*, i64)*, i32 (%"class.blink::BytesConsumer"*, i64)** %58, align 8
  %60 = call i32 %59(%"class.blink::BytesConsumer"* %55, i64 %54) #13
  br label %61

61:                                               ; preds = %18, %53
  %62 = phi i32 [ %60, %53 ], [ %24, %18 ]
  switch i32 %62, label %126 [
    i32 3, label %119
    i32 1, label %127
    i32 2, label %63
  ]

63:                                               ; preds = %61
  %64 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #13
  %65 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %12, align 8
  %66 = call %"class.WTF::StringImpl"* @_ZN5blink19TextResourceDecoder5FlushEv(%"class.blink::TextResourceDecoder"* %65) #13
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %73

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %69, align 8
  %70 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %71 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 0, i32* %72, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  br label %93

73:                                               ; preds = %63
  %74 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %66, %"class.WTF::StringImpl"** %74, align 8
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 1
  %78 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %79 = bitcast i8** %78 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %77, %"class.WTF::StringImpl"** %79, align 8
  %80 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %76, i32* %80, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %73
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %73
  %90 = phi i32 [ %88, %87 ], [ %86, %73 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #13
  br label %93

93:                                               ; preds = %68, %89, %92
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #13
  %94 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsString", %"class.blink::(anonymous namespace)::FetchDataLoaderAsString"* %0, i64 0, i32 3, i32 0, i32 0
  %95 = load %"class.blink::FetchDataLoader::Client"*, %"class.blink::FetchDataLoader::Client"** %94, align 8
  %96 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #13
  %97 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* %10) #13
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %97, %"class.WTF::StringImpl"** %98, align 8
  %99 = bitcast %"class.blink::FetchDataLoader::Client"* %95 to void (%"class.blink::FetchDataLoader::Client"*, %"class.WTF::String"*)***
  %100 = load void (%"class.blink::FetchDataLoader::Client"*, %"class.WTF::String"*)**, void (%"class.blink::FetchDataLoader::Client"*, %"class.WTF::String"*)*** %99, align 8
  %101 = getelementptr inbounds void (%"class.blink::FetchDataLoader::Client"*, %"class.WTF::String"*)*, void (%"class.blink::FetchDataLoader::Client"*, %"class.WTF::String"*)** %100, i64 6
  %102 = load void (%"class.blink::FetchDataLoader::Client"*, %"class.WTF::String"*)*, void (%"class.blink::FetchDataLoader::Client"*, %"class.WTF::String"*)** %101, align 8
  call void %102(%"class.blink::FetchDataLoader::Client"* %95, %"class.WTF::String"* nonnull dereferenceable(8) %6) #13
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %93
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #13
  br label %118

118:                                              ; preds = %93, %114, %117
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #13
  br label %127

119:                                              ; preds = %61
  %120 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsString", %"class.blink::(anonymous namespace)::FetchDataLoaderAsString"* %0, i64 0, i32 3, i32 0, i32 0
  %121 = load %"class.blink::FetchDataLoader::Client"*, %"class.blink::FetchDataLoader::Client"** %120, align 8
  %122 = bitcast %"class.blink::FetchDataLoader::Client"* %121 to void (%"class.blink::FetchDataLoader::Client"*)***
  %123 = load void (%"class.blink::FetchDataLoader::Client"*)**, void (%"class.blink::FetchDataLoader::Client"*)*** %122, align 8
  %124 = getelementptr inbounds void (%"class.blink::FetchDataLoader::Client"*)*, void (%"class.blink::FetchDataLoader::Client"*)** %123, i64 10
  %125 = load void (%"class.blink::FetchDataLoader::Client"*)*, void (%"class.blink::FetchDataLoader::Client"*)** %124, align 8
  call void %125(%"class.blink::FetchDataLoader::Client"* %121) #13
  br label %127

126:                                              ; preds = %61
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  br label %18

127:                                              ; preds = %61, %18, %119, %118
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_123FetchDataLoaderAsString9DebugNameEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsString"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.24, i64 0, i64 0), i64 23) #13
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn8_NK5blink12_GLOBAL__N_123FetchDataLoaderAsString5TraceEPNS_7VisitorE(%"class.blink::(anonymous namespace)::FetchDataLoaderAsString"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsString", %"class.blink::(anonymous namespace)::FetchDataLoaderAsString"* %0, i64 -1, i32 6, i32 2
  %4 = getelementptr inbounds i32, i32* %3, i64 4
  %5 = bitcast i32* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13BytesConsumerEE5TraceEPNS_7VisitorEPKv) #13
  br label %14

14:                                               ; preds = %2, %8
  %15 = getelementptr inbounds i32, i32* %3, i64 6
  %16 = bitcast i32* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %85, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to i8*
  %21 = and i64 %17, -131072
  %22 = inttoptr i64 %21 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 4138
  %24 = load i8, i8* %23, align 2
  %25 = icmp eq i8 %24, 1
  br i1 %25, label %26, label %28

26:                                               ; preds = %19
  %27 = getelementptr inbounds i8, i8* %22, i64 4160
  br label %66

28:                                               ; preds = %19
  %29 = getelementptr inbounds i8, i8* %22, i64 4096
  %30 = bitcast i8* %29 to %"class.blink::NormalPage"*
  %31 = getelementptr inbounds i8, i8* %22, i64 4400
  %32 = bitcast i8* %31 to i8**
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %17, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %30, i64 0, i32 2, i32 0, i32 1, i64 %37
  %39 = load atomic i8, i8* %38 acquire, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 2, %41
  %43 = trunc i32 %42 to i8
  %44 = add i8 %43, -1
  %45 = and i8 %44, %39
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %53

47:                                               ; preds = %28, %47
  %48 = phi i64 [ %49, %47 ], [ %37, %28 ]
  %49 = add i64 %48, -1
  %50 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %30, i64 0, i32 2, i32 0, i32 1, i64 %49
  %51 = load atomic i8, i8* %50 acquire, align 1
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %47, label %53

53:                                               ; preds = %47, %28
  %54 = phi i64 [ %37, %28 ], [ %49, %47 ]
  %55 = phi i8 [ %45, %28 ], [ %51, %47 ]
  %56 = zext i8 %55 to i32
  %57 = tail call i32 @llvm.ctlz.i32(i32 %56, i1 true) #13, !range !17
  %58 = add nsw i32 %57, -24
  %59 = shl i64 %54, 3
  %60 = or i64 %59, 7
  %61 = sext i32 %58 to i64
  %62 = sub i64 %60, %61
  %63 = shl i64 %62, 3
  %64 = load i8*, i8** %32, align 16
  %65 = getelementptr inbounds i8, i8* %64, i64 %63
  br label %66

66:                                               ; preds = %53, %26
  %67 = phi i8* [ %27, %26 ], [ %65, %53 ]
  %68 = getelementptr inbounds i8, i8* %67, i64 8
  %69 = getelementptr inbounds i8, i8* %67, i64 4
  %70 = bitcast i8* %69 to i16*
  %71 = load atomic i16, i16* %70 acquire, align 2
  %72 = lshr i16 %71, 2
  %73 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %74 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %73, i64 0, i32 0
  %75 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %74, align 8
  %76 = zext i16 %72 to i64
  %77 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %75, i64 %76
  %78 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %77, align 8
  %79 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %78, i64 0, i32 0
  %80 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %79, align 8
  %81 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %82 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %82, i64 5
  %84 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %83, align 8
  tail call void %84(%"class.blink::Visitor"* %1, i8* nonnull %20, i8* %68, void (%"class.blink::Visitor"*, i8*)* %80) #13
  br label %85

85:                                               ; preds = %14, %66
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZThn8_N5blink12_GLOBAL__N_123FetchDataLoaderAsStringD1Ev(%"class.blink::(anonymous namespace)::FetchDataLoaderAsString"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsString", %"class.blink::(anonymous namespace)::FetchDataLoaderAsString"* %0, i64 -1, i32 6, i32 2
  %3 = bitcast i32* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_123FetchDataLoaderAsStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_123FetchDataLoaderAsStringE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds i32, i32* %2, i64 48
  %5 = bitcast i32* %4 to %"class.WTF::StringBuilder"*
  tail call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* %5) #13
  %6 = bitcast i32* %4 to %"class.WTF::StringImpl"**
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #13
  br label %22

22:                                               ; preds = %21, %18, %1
  %23 = getelementptr inbounds i32, i32* %2, i64 18
  %24 = bitcast i32* %23 to %"class.blink::KURL"*
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %24) #13
  %25 = getelementptr inbounds i32, i32* %2, i64 8
  %26 = bitcast i32* %25 to %"class.blink::TextResourceDecoder"**
  %27 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %26, align 8
  store %"class.blink::TextResourceDecoder"* null, %"class.blink::TextResourceDecoder"** %26, align 8
  %28 = icmp eq %"class.blink::TextResourceDecoder"* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %22
  tail call void @_ZN5blink19TextResourceDecoderD1Ev(%"class.blink::TextResourceDecoder"* nonnull %27) #13
  %30 = bitcast %"class.blink::TextResourceDecoder"* %27 to i8*
  tail call void @free(i8* %30) #13
  br label %31

31:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZThn8_N5blink12_GLOBAL__N_123FetchDataLoaderAsStringD0Ev(%"class.blink::(anonymous namespace)::FetchDataLoaderAsString"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsString", %"class.blink::(anonymous namespace)::FetchDataLoaderAsString"* %0, i64 -1, i32 6, i32 2
  %3 = bitcast i32* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_123FetchDataLoaderAsStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_123FetchDataLoaderAsStringE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds i32, i32* %2, i64 48
  %5 = bitcast i32* %4 to %"class.WTF::StringBuilder"*
  tail call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* %5) #13
  %6 = bitcast i32* %4 to %"class.WTF::StringImpl"**
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #13
  br label %22

22:                                               ; preds = %21, %18, %1
  %23 = getelementptr inbounds i32, i32* %2, i64 18
  %24 = bitcast i32* %23 to %"class.blink::KURL"*
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %24) #13
  %25 = getelementptr inbounds i32, i32* %2, i64 8
  %26 = bitcast i32* %25 to %"class.blink::TextResourceDecoder"**
  %27 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %26, align 8
  store %"class.blink::TextResourceDecoder"* null, %"class.blink::TextResourceDecoder"** %26, align 8
  %28 = icmp eq %"class.blink::TextResourceDecoder"* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %22
  tail call void @_ZN5blink19TextResourceDecoderD1Ev(%"class.blink::TextResourceDecoder"* nonnull %27) #13
  %30 = bitcast %"class.blink::TextResourceDecoder"* %27 to i8*
  tail call void @free(i8* %30) #13
  br label %31

31:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn8_N5blink12_GLOBAL__N_123FetchDataLoaderAsString13OnStateChangeEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsString"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsString", %"class.blink::(anonymous namespace)::FetchDataLoaderAsString"* %0, i64 -1, i32 6, i32 2
  %3 = bitcast i32* %2 to %"class.blink::(anonymous namespace)::FetchDataLoaderAsString"*
  tail call void @_ZN5blink12_GLOBAL__N_123FetchDataLoaderAsString13OnStateChangeEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsString"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.WTF::StringImpl"* @_ZThn8_NK5blink12_GLOBAL__N_123FetchDataLoaderAsString9DebugNameEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsString"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3)
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.24, i64 0, i64 0), i64 23) #13
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3)
  ret %"class.WTF::StringImpl"* %5
}

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

declare void @_ZN4mojo13SimpleWatcherC1ERKN4base8LocationENS0_12ArmingPolicyE13scoped_refptrINS1_19SequencedTaskRunnerEEPKc(%"class.mojo::SimpleWatcher"*, %"class.base::Location"* dereferenceable(32), i32, %"class.base::SequencedTaskRunner"*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipeD2Ev(%"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipeE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe", %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* %0, i64 0, i32 6
  tail call void @_ZN4mojo13SimpleWatcherD1Ev(%"class.mojo::SimpleWatcher"* %3) #13
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe", %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = tail call i32 @MojoClose(i32 %5) #13
  br label %9

9:                                                ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipeD0Ev(%"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipeE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe", %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* %0, i64 0, i32 6
  tail call void @_ZN4mojo13SimpleWatcherD1Ev(%"class.mojo::SimpleWatcher"* %3) #13
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe", %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = tail call i32 @MojoClose(i32 %5) #13
  br label %9

9:                                                ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipe5StartEPNS_13BytesConsumerEPNS_15FetchDataLoader6ClientE(%"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"*, %"class.blink::BytesConsumer"*, %"class.blink::FetchDataLoader::Client"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.mojo::Handle", align 4
  %5 = alloca %"class.base::RepeatingCallback", align 8
  %6 = alloca %"class.mojo::DataPipeProducerHandle", align 4
  %7 = alloca %"class.mojo::DataPipeConsumerHandle", align 4
  %8 = alloca %"class.mojo::ScopedHandleBase.351", align 4
  %9 = alloca <4 x i32>, align 16
  %10 = bitcast <4 x i32>* %9 to %struct.MojoCreateDataPipeOptions*
  %11 = alloca %"class.base::RepeatingCallback.402", align 8
  %12 = alloca %"class.blink::WeakPersistent.403", align 8
  %13 = alloca %"class.mojo::ScopedHandleBase.351", align 4
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe", %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* %0, i64 0, i32 4
  %15 = ptrtoint %"class.blink::FetchDataLoader::Client"* %2 to i64
  %16 = bitcast %"class.blink::Member.9"* %14 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %3
  %20 = bitcast %"class.blink::FetchDataLoader::Client"* %2 to i8*
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #13
  br label %22

22:                                               ; preds = %3, %19
  %23 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe", %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* %0, i64 0, i32 3
  %24 = ptrtoint %"class.blink::BytesConsumer"* %1 to i64
  %25 = bitcast %"class.blink::Member"* %23 to i64*
  store atomic i64 %24, i64* %25 monotonic, align 8
  %26 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.blink::BytesConsumer"* %1 to i8*
  %30 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %29) #13
  %31 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %23, i64 0, i32 0, i32 0
  %32 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %31, align 8
  br label %33

33:                                               ; preds = %22, %28
  %34 = phi %"class.blink::BytesConsumer"* [ %1, %22 ], [ %32, %28 ]
  %35 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe", %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* %0, i64 0, i32 1
  %36 = bitcast %"class.blink::BytesConsumer"* %34 to void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)***
  %37 = load void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)**, void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)** %37, i64 7
  %39 = load void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)** %38, align 8
  tail call void %39(%"class.blink::BytesConsumer"* %34, %"class.blink::BytesConsumer::Client"* %35) #13
  %40 = bitcast %"class.mojo::ScopedHandleBase.351"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #13
  %41 = getelementptr inbounds %"class.mojo::ScopedHandleBase.351", %"class.mojo::ScopedHandleBase.351"* %8, i64 0, i32 0, i32 0, i32 0
  store i32 -1431655766, i32* %41, align 4
  %42 = bitcast %"class.blink::BytesConsumer"* %1 to void (%"class.mojo::ScopedHandleBase.351"*, %"class.blink::BytesConsumer"*)***
  %43 = load void (%"class.mojo::ScopedHandleBase.351"*, %"class.blink::BytesConsumer"*)**, void (%"class.mojo::ScopedHandleBase.351"*, %"class.blink::BytesConsumer"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.mojo::ScopedHandleBase.351"*, %"class.blink::BytesConsumer"*)*, void (%"class.mojo::ScopedHandleBase.351"*, %"class.blink::BytesConsumer"*)** %43, i64 6
  %45 = load void (%"class.mojo::ScopedHandleBase.351"*, %"class.blink::BytesConsumer"*)*, void (%"class.mojo::ScopedHandleBase.351"*, %"class.blink::BytesConsumer"*)** %44, align 8
  call void %45(%"class.mojo::ScopedHandleBase.351"* nonnull sret %8, %"class.blink::BytesConsumer"* %1) #13
  %46 = load i32, i32* %41, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %199

48:                                               ; preds = %33
  %49 = bitcast <4 x i32>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #13
  store <4 x i32> <i32 16, i32 0, i32 1, i32 0>, <4 x i32>* %9, align 16
  %50 = bitcast %"class.mojo::DataPipeProducerHandle"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50) #13
  %51 = getelementptr inbounds %"class.mojo::DataPipeProducerHandle", %"class.mojo::DataPipeProducerHandle"* %6, i64 0, i32 0, i32 0
  store i32 0, i32* %51, align 4
  %52 = bitcast %"class.mojo::DataPipeConsumerHandle"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %52) #13
  %53 = getelementptr inbounds %"class.mojo::DataPipeConsumerHandle", %"class.mojo::DataPipeConsumerHandle"* %7, i64 0, i32 0, i32 0
  store i32 0, i32* %53, align 4
  %54 = call i32 @MojoCreateDataPipe(%struct.MojoCreateDataPipeOptions* nonnull %10, i32* nonnull %51, i32* nonnull %53) #13
  %55 = load i32, i32* %51, align 4
  %56 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe", %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %48
  %60 = call i32 @MojoClose(i32 %57) #13
  br label %61

61:                                               ; preds = %59, %48
  store i32 %55, i32* %56, align 4
  %62 = load i32, i32* %53, align 4
  %63 = load i32, i32* %41, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %67, label %65

65:                                               ; preds = %61
  %66 = call i32 @MojoClose(i32 %63) #13
  br label %67

67:                                               ; preds = %61, %65
  store i32 %62, i32* %41, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %52) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #13
  %68 = icmp eq i32 %54, 0
  br i1 %68, label %89, label %69

69:                                               ; preds = %67
  %70 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe", %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* %0, i64 0, i32 3, i32 0, i32 0
  %71 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %70, align 8
  %72 = bitcast %"class.blink::BytesConsumer"* %71 to void (%"class.blink::BytesConsumer"*)***
  %73 = load void (%"class.blink::BytesConsumer"*)**, void (%"class.blink::BytesConsumer"*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %73, i64 9
  %75 = load void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %74, align 8
  call void %75(%"class.blink::BytesConsumer"* %71) #13
  %76 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe", %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* %0, i64 0, i32 6
  call void @_ZN4mojo13SimpleWatcher6CancelEv(%"class.mojo::SimpleWatcher"* %76) #13
  %77 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe", %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %82, label %80

80:                                               ; preds = %69
  %81 = call i32 @MojoClose(i32 %78) #13
  br label %82

82:                                               ; preds = %69, %80
  store i32 0, i32* %77, align 4
  %83 = getelementptr inbounds %"class.blink::Member.9", %"class.blink::Member.9"* %14, i64 0, i32 0, i32 0
  %84 = load %"class.blink::FetchDataLoader::Client"*, %"class.blink::FetchDataLoader::Client"** %83, align 8
  %85 = bitcast %"class.blink::FetchDataLoader::Client"* %84 to void (%"class.blink::FetchDataLoader::Client"*)***
  %86 = load void (%"class.blink::FetchDataLoader::Client"*)**, void (%"class.blink::FetchDataLoader::Client"*)*** %85, align 8
  %87 = getelementptr inbounds void (%"class.blink::FetchDataLoader::Client"*)*, void (%"class.blink::FetchDataLoader::Client"*)** %86, i64 10
  %88 = load void (%"class.blink::FetchDataLoader::Client"*)*, void (%"class.blink::FetchDataLoader::Client"*)** %87, align 8
  call void %88(%"class.blink::FetchDataLoader::Client"* %84) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #13
  br label %220

89:                                               ; preds = %67
  %90 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe", %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* %0, i64 0, i32 6
  %91 = load i32, i32* %56, align 4
  %92 = bitcast %"class.blink::WeakPersistent.403"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %92) #13
  %93 = getelementptr inbounds %"class.blink::WeakPersistent.403", %"class.blink::WeakPersistent.403"* %12, i64 0, i32 0
  %94 = getelementptr inbounds %"class.blink::WeakPersistent.403", %"class.blink::WeakPersistent.403"* %12, i64 0, i32 0, i32 0
  store %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* %0, %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"** %94, align 8, !alias.scope !32
  %95 = getelementptr inbounds %"class.blink::WeakPersistent.403", %"class.blink::WeakPersistent.403"* %12, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %95, align 8, !alias.scope !32
  %96 = ptrtoint %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* %0 to i64
  switch i64 %96, label %97 [
    i64 0, label %123
    i64 -1, label %123
  ]

97:                                               ; preds = %89
  %98 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !32
  %99 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %98, i64 0, i32 1
  %100 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %99) #13, !noalias !32
  %101 = icmp eq i8* %100, null
  br i1 %101, label %102, label %104, !prof !2

102:                                              ; preds = %97
  %103 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %99, i8* %103) #13
  br label %104

104:                                              ; preds = %102, %97
  %105 = phi i8* [ %103, %102 ], [ %100, %97 ]
  %106 = bitcast i8* %105 to %"class.blink::ThreadState"**
  %107 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %106, align 8, !noalias !32
  %108 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %107, i64 0, i32 4, i32 0, i32 0, i32 0
  %109 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %108, align 8, !noalias !32
  %110 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %109, i64 0, i32 0, i32 0
  %111 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %110, align 8, !noalias !32
  %112 = icmp eq %"class.blink::PersistentNode"* %111, null
  br i1 %112, label %113, label %116, !prof !2

113:                                              ; preds = %104
  %114 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %109, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %114) #13
  %115 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %110, align 8
  br label %116

116:                                              ; preds = %113, %104
  %117 = phi %"class.blink::PersistentNode"* [ %115, %113 ], [ %111, %104 ]
  %118 = bitcast %"class.blink::PersistentNode"* %117 to i64*
  %119 = load i64, i64* %118, align 8, !noalias !32
  %120 = bitcast %"class.blink::PersistentRegion"* %109 to i64*
  store i64 %119, i64* %120, align 8, !noalias !32
  %121 = bitcast %"class.blink::PersistentNode"* %117 to %"class.blink::PersistentBase.404"**
  store %"class.blink::PersistentBase.404"* %93, %"class.blink::PersistentBase.404"** %121, align 8, !noalias !32
  %122 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %117, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12_GLOBAL__N_125FetchDataLoaderAsDataPipeELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %122, align 8
  store %"class.blink::PersistentNode"* %117, %"class.blink::PersistentNode"** %95, align 8, !alias.scope !32
  br label %123

123:                                              ; preds = %89, %89, %116
  %124 = getelementptr inbounds %"class.base::RepeatingCallback.402", %"class.base::RepeatingCallback.402"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %124, align 8, !alias.scope !35
  %125 = call i8* @_Znwm(i64 64) #14, !noalias !38
  %126 = bitcast i8* %125 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %126, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipeEFvjEJNS3_14WeakPersistentIS5_EEEEEFvjEE3RunEPNS0_13BindStateBaseEj to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipeEFvjEJNS2_14WeakPersistentIS4_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipeEFvjEJNS3_14WeakPersistentIS5_EEEEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE) #13, !noalias !38
  %127 = getelementptr inbounds i8, i8* %125, i64 32
  %128 = bitcast i8* %127 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"*, i32)* @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipe10OnWritableEj to i64), i64 0>, <2 x i64>* %128, align 8, !noalias !38
  %129 = getelementptr inbounds i8, i8* %125, i64 48
  %130 = bitcast %"class.blink::WeakPersistent.403"* %12 to i64*
  %131 = load i64, i64* %130, align 8, !noalias !38
  %132 = bitcast i8* %129 to i64*
  store i64 %131, i64* %132, align 8, !noalias !38
  %133 = getelementptr inbounds i8, i8* %125, i64 56
  %134 = bitcast i8* %133 to %"class.blink::PersistentNode"**
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %134, align 8, !noalias !38
  switch i64 %131, label %135 [
    i64 0, label %161
    i64 -1, label %161
  ]

135:                                              ; preds = %123
  %136 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !38
  %137 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %136, i64 0, i32 1
  %138 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %137) #13, !noalias !38
  %139 = icmp eq i8* %138, null
  br i1 %139, label %140, label %142, !prof !2

140:                                              ; preds = %135
  %141 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13, !noalias !38
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %137, i8* %141) #13, !noalias !38
  br label %142

142:                                              ; preds = %140, %135
  %143 = phi i8* [ %141, %140 ], [ %138, %135 ]
  %144 = bitcast i8* %143 to %"class.blink::ThreadState"**
  %145 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %144, align 8, !noalias !38
  %146 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %145, i64 0, i32 4, i32 0, i32 0, i32 0
  %147 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %146, align 8, !noalias !38
  %148 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %147, i64 0, i32 0, i32 0
  %149 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %148, align 8, !noalias !38
  %150 = icmp eq %"class.blink::PersistentNode"* %149, null
  br i1 %150, label %151, label %154, !prof !2

151:                                              ; preds = %142
  %152 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %147, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %152) #13, !noalias !38
  %153 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %148, align 8, !noalias !38
  br label %154

154:                                              ; preds = %151, %142
  %155 = phi %"class.blink::PersistentNode"* [ %153, %151 ], [ %149, %142 ]
  %156 = bitcast %"class.blink::PersistentNode"* %155 to i64*
  %157 = load i64, i64* %156, align 8, !noalias !38
  %158 = bitcast %"class.blink::PersistentRegion"* %147 to i64*
  store i64 %157, i64* %158, align 8, !noalias !38
  %159 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %155, i64 0, i32 0
  store i8* %129, i8** %159, align 8, !noalias !38
  %160 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %155, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12_GLOBAL__N_125FetchDataLoaderAsDataPipeELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %160, align 8, !noalias !38
  store %"class.blink::PersistentNode"* %155, %"class.blink::PersistentNode"** %134, align 8, !noalias !38
  br label %161

161:                                              ; preds = %123, %123, %154
  %162 = bitcast %"class.mojo::Handle"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %162)
  %163 = bitcast %"class.base::RepeatingCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %163)
  %164 = getelementptr inbounds %"class.mojo::Handle", %"class.mojo::Handle"* %4, i64 0, i32 0
  store i32 %91, i32* %164, align 4
  %165 = call i8* @_Znwm(i64 48) #14, !noalias !43
  %166 = bitcast i8* %165 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %166, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %"struct.mojo::HandleSignalsState"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvRKNS_17RepeatingCallbackIFvjEEEjRKN4mojo18HandleSignalsStateEEJS5_EEEFvjSB_EE3RunEPNS0_13BindStateBaseEjSB_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvRKNS_17RepeatingCallbackIFvjEEEjRKN4mojo18HandleSignalsStateEEJS4_EE7DestroyEPKNS0_13BindStateBaseE) #13, !noalias !43
  %167 = getelementptr inbounds i8, i8* %165, i64 32
  %168 = bitcast i8* %167 to i64*
  store i64 ptrtoint (void (%"class.base::RepeatingCallback.402"*, i32, %"struct.mojo::HandleSignalsState"*)* @_ZN4mojo13SimpleWatcher17DiscardReadyStateERKN4base17RepeatingCallbackIFvjEEEjRKNS_18HandleSignalsStateE to i64), i64* %168, align 8, !noalias !43
  %169 = getelementptr inbounds i8, i8* %165, i64 40
  %170 = ptrtoint i8* %125 to i64
  %171 = bitcast i8* %169 to i64*
  store i64 %170, i64* %171, align 8, !noalias !43
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %124, align 8, !noalias !43
  %172 = bitcast %"class.base::RepeatingCallback"* %5 to i8**
  store i8* %165, i8** %172, align 8, !alias.scope !43
  %173 = call i32 @_ZN4mojo13SimpleWatcher5WatchENS_6HandleEjjN4base17RepeatingCallbackIFvjRKNS_18HandleSignalsStateEEEE(%"class.mojo::SimpleWatcher"* %90, %"class.mojo::Handle"* nonnull %4, i32 2, i32 1, %"class.base::RepeatingCallback"* nonnull %5) #13
  %174 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %174) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %162)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %163)
  %175 = getelementptr inbounds %"class.base::RepeatingCallback.402", %"class.base::RepeatingCallback.402"* %11, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %175) #13
  %176 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %95, align 8
  %177 = icmp eq %"class.blink::PersistentNode"* %176, null
  br i1 %177, label %197, label %178

178:                                              ; preds = %161
  %179 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %180 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %179, i64 0, i32 1
  %181 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %180) #13
  %182 = icmp eq i8* %181, null
  br i1 %182, label %183, label %185, !prof !2

183:                                              ; preds = %178
  %184 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %180, i8* %184) #13
  br label %185

185:                                              ; preds = %183, %178
  %186 = phi i8* [ %184, %183 ], [ %181, %178 ]
  %187 = bitcast i8* %186 to %"class.blink::ThreadState"**
  %188 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %187, align 8
  %189 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %188, i64 0, i32 4, i32 0, i32 0, i32 0
  %190 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %189, align 8
  %191 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %95, align 8
  %192 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %190, i64 0, i32 0, i32 0
  %193 = bitcast %"class.blink::PersistentRegion"* %190 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = bitcast %"class.blink::PersistentNode"* %191 to i64*
  store i64 %194, i64* %195, align 8
  %196 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %191, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %196, align 8
  store %"class.blink::PersistentNode"* %191, %"class.blink::PersistentNode"** %192, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %95, align 8
  br label %197

197:                                              ; preds = %161, %185
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92) #13
  call void @_ZN4mojo13SimpleWatcher11ArmOrNotifyEv(%"class.mojo::SimpleWatcher"* %90) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #13
  %198 = load i32, i32* %41, align 4, !noalias !48
  br label %199

199:                                              ; preds = %33, %197
  %200 = phi i32 [ %46, %33 ], [ %198, %197 ]
  %201 = getelementptr inbounds %"class.blink::Member.9", %"class.blink::Member.9"* %14, i64 0, i32 0, i32 0
  %202 = load %"class.blink::FetchDataLoader::Client"*, %"class.blink::FetchDataLoader::Client"** %201, align 8
  %203 = getelementptr inbounds %"class.mojo::ScopedHandleBase.351", %"class.mojo::ScopedHandleBase.351"* %13, i64 0, i32 0, i32 0, i32 0
  store i32 %200, i32* %203, align 4, !alias.scope !48
  store i32 0, i32* %41, align 4, !noalias !48
  %204 = bitcast %"class.blink::FetchDataLoader::Client"* %202 to void (%"class.blink::FetchDataLoader::Client"*, %"class.mojo::ScopedHandleBase.351"*)***
  %205 = load void (%"class.blink::FetchDataLoader::Client"*, %"class.mojo::ScopedHandleBase.351"*)**, void (%"class.blink::FetchDataLoader::Client"*, %"class.mojo::ScopedHandleBase.351"*)*** %204, align 8
  %206 = getelementptr inbounds void (%"class.blink::FetchDataLoader::Client"*, %"class.mojo::ScopedHandleBase.351"*)*, void (%"class.blink::FetchDataLoader::Client"*, %"class.mojo::ScopedHandleBase.351"*)** %205, i64 7
  %207 = load void (%"class.blink::FetchDataLoader::Client"*, %"class.mojo::ScopedHandleBase.351"*)*, void (%"class.blink::FetchDataLoader::Client"*, %"class.mojo::ScopedHandleBase.351"*)** %206, align 8
  call void %207(%"class.blink::FetchDataLoader::Client"* %202, %"class.mojo::ScopedHandleBase.351"* nonnull %13) #13
  %208 = load i32, i32* %203, align 4
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %212, label %210

210:                                              ; preds = %199
  %211 = call i32 @MojoClose(i32 %208) #13
  br label %212

212:                                              ; preds = %199, %210
  %213 = bitcast %"class.blink::BytesConsumer"* %1 to i32 (%"class.blink::BytesConsumer"*)***
  %214 = load i32 (%"class.blink::BytesConsumer"*)**, i32 (%"class.blink::BytesConsumer"*)*** %213, align 8
  %215 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*)*, i32 (%"class.blink::BytesConsumer"*)** %214, i64 10
  %216 = load i32 (%"class.blink::BytesConsumer"*)*, i32 (%"class.blink::BytesConsumer"*)** %215, align 8
  %217 = call i32 %216(%"class.blink::BytesConsumer"* %1) #13
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %220, label %219

219:                                              ; preds = %212
  call void @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipe13OnStateChangeEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* %0)
  br label %220

220:                                              ; preds = %219, %212, %82
  %221 = load i32, i32* %41, align 4
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %225, label %223

223:                                              ; preds = %220
  %224 = call i32 @MojoClose(i32 %221) #13
  br label %225

225:                                              ; preds = %220, %223
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipe6CancelEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe", %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %2, align 8
  %4 = bitcast %"class.blink::BytesConsumer"* %3 to void (%"class.blink::BytesConsumer"*)***
  %5 = load void (%"class.blink::BytesConsumer"*)**, void (%"class.blink::BytesConsumer"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %5, i64 9
  %7 = load void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %6, align 8
  tail call void %7(%"class.blink::BytesConsumer"* %3) #13
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe", %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* %0, i64 0, i32 6
  tail call void @_ZN4mojo13SimpleWatcher6CancelEv(%"class.mojo::SimpleWatcher"* %8) #13
  %9 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe", %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %1
  %13 = tail call i32 @MojoClose(i32 %10) #13
  br label %14

14:                                               ; preds = %1, %12
  store i32 0, i32* %9, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipe5TraceEPNS_7VisitorE(%"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe", %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* %0, i64 0, i32 3
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13BytesConsumerEE5TraceEPNS_7VisitorEPKv) #13
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe", %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* %0, i64 0, i32 4
  tail call void @_ZN5blink7Visitor5TraceINS_15FetchDataLoader6ClientEEEvRKNS_6MemberIT_EE(%"class.blink::Visitor"* %1, %"class.blink::Member.9"* dereferenceable(8) %14)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipe13OnStateChangeEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"*) unnamed_addr #0 align 2 {
  %2 = alloca %struct.MojoWriteDataOptions, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = bitcast i8** %3 to i8*
  %7 = bitcast i64* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe", %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* %0, i64 0, i32 3, i32 0, i32 0
  %9 = bitcast i32* %5 to i8*
  %10 = bitcast %struct.MojoWriteDataOptions* %2 to i8*
  %11 = getelementptr inbounds %struct.MojoWriteDataOptions, %struct.MojoWriteDataOptions* %2, i64 0, i32 0
  %12 = getelementptr inbounds %struct.MojoWriteDataOptions, %struct.MojoWriteDataOptions* %2, i64 0, i32 1
  %13 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe", %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe", %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* %0, i64 0, i32 6
  br label %15

15:                                               ; preds = %1, %118
  %16 = phi i8 [ 0, %1 ], [ %81, %118 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  store i64 -6148914691236517206, i64* %4, align 8
  %17 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %8, align 8
  %18 = bitcast %"class.blink::BytesConsumer"* %17 to i32 (%"class.blink::BytesConsumer"*, i8**, i64*)***
  %19 = load i32 (%"class.blink::BytesConsumer"*, i8**, i64*)**, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*** %18, align 8
  %20 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)** %19, i64 2
  %21 = load i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)** %20, align 8
  %22 = call i32 %21(%"class.blink::BytesConsumer"* %17, i8** nonnull %3, i64* nonnull %4) #13
  switch i32 %22, label %80 [
    i32 1, label %117
    i32 0, label %23
  ]

23:                                               ; preds = %15
  %24 = load i64, i64* %4, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %23
  %27 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %8, align 8
  %28 = bitcast %"class.blink::BytesConsumer"* %27 to i32 (%"class.blink::BytesConsumer"*, i64)***
  %29 = load i32 (%"class.blink::BytesConsumer"*, i64)**, i32 (%"class.blink::BytesConsumer"*, i64)*** %28, align 8
  %30 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*, i64)*, i32 (%"class.blink::BytesConsumer"*, i64)** %29, i64 3
  %31 = load i32 (%"class.blink::BytesConsumer"*, i64)*, i32 (%"class.blink::BytesConsumer"*, i64)** %30, align 8
  %32 = call i32 %31(%"class.blink::BytesConsumer"* %27, i64 0) #13
  br label %80

33:                                               ; preds = %23
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #13
  store i32 -1431655766, i32* %5, align 4
  %34 = icmp ult i64 %24, 4294967296
  br i1 %34, label %36, label %35, !prof !19

35:                                               ; preds = %33
  call void @llvm.trap() #13
  unreachable

36:                                               ; preds = %33
  %37 = trunc i64 %24 to i32
  store i32 %37, i32* %5, align 4
  %38 = load i8*, i8** %3, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #13
  store i32 8, i32* %11, align 8
  store i32 0, i32* %12, align 4
  %39 = load i32, i32* %13, align 4
  %40 = call i32 @MojoWriteData(i32 %39, i8* %38, i32* nonnull %5, %struct.MojoWriteDataOptions* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #13
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %51

42:                                               ; preds = %36
  %43 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %8, align 8
  %44 = load i32, i32* %5, align 4
  %45 = zext i32 %44 to i64
  %46 = bitcast %"class.blink::BytesConsumer"* %43 to i32 (%"class.blink::BytesConsumer"*, i64)***
  %47 = load i32 (%"class.blink::BytesConsumer"*, i64)**, i32 (%"class.blink::BytesConsumer"*, i64)*** %46, align 8
  %48 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*, i64)*, i32 (%"class.blink::BytesConsumer"*, i64)** %47, i64 3
  %49 = load i32 (%"class.blink::BytesConsumer"*, i64)*, i32 (%"class.blink::BytesConsumer"*, i64)** %48, align 8
  %50 = call i32 %49(%"class.blink::BytesConsumer"* %43, i64 %45) #13
  br label %70

51:                                               ; preds = %36
  %52 = icmp eq i32 %40, 17
  %53 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %8, align 8
  %54 = bitcast %"class.blink::BytesConsumer"* %53 to i32 (%"class.blink::BytesConsumer"*, i64)***
  %55 = load i32 (%"class.blink::BytesConsumer"*, i64)**, i32 (%"class.blink::BytesConsumer"*, i64)*** %54, align 8
  %56 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*, i64)*, i32 (%"class.blink::BytesConsumer"*, i64)** %55, i64 3
  %57 = load i32 (%"class.blink::BytesConsumer"*, i64)*, i32 (%"class.blink::BytesConsumer"*, i64)** %56, align 8
  %58 = call i32 %57(%"class.blink::BytesConsumer"* %53, i64 0) #13
  br i1 %52, label %59, label %60

59:                                               ; preds = %51
  call void @_ZN4mojo13SimpleWatcher11ArmOrNotifyEv(%"class.mojo::SimpleWatcher"* %14) #13
  br label %70

60:                                               ; preds = %51
  %61 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %8, align 8
  %62 = bitcast %"class.blink::BytesConsumer"* %61 to void (%"class.blink::BytesConsumer"*)***
  %63 = load void (%"class.blink::BytesConsumer"*)**, void (%"class.blink::BytesConsumer"*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %63, i64 9
  %65 = load void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %64, align 8
  call void %65(%"class.blink::BytesConsumer"* %61) #13
  call void @_ZN4mojo13SimpleWatcher6CancelEv(%"class.mojo::SimpleWatcher"* %14) #13
  %66 = load i32, i32* %13, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %73, label %68

68:                                               ; preds = %60
  %69 = call i32 @MojoClose(i32 %66) #13
  br label %73

70:                                               ; preds = %59, %42
  %71 = phi i8 [ 1, %59 ], [ %16, %42 ]
  %72 = phi i32 [ %58, %59 ], [ %50, %42 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #13
  br label %80

73:                                               ; preds = %68, %60
  store i32 0, i32* %13, align 4
  %74 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe", %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* %0, i64 0, i32 4, i32 0, i32 0
  %75 = load %"class.blink::FetchDataLoader::Client"*, %"class.blink::FetchDataLoader::Client"** %74, align 8
  %76 = bitcast %"class.blink::FetchDataLoader::Client"* %75 to void (%"class.blink::FetchDataLoader::Client"*)***
  %77 = load void (%"class.blink::FetchDataLoader::Client"*)**, void (%"class.blink::FetchDataLoader::Client"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.blink::FetchDataLoader::Client"*)*, void (%"class.blink::FetchDataLoader::Client"*)** %77, i64 10
  %79 = load void (%"class.blink::FetchDataLoader::Client"*)*, void (%"class.blink::FetchDataLoader::Client"*)** %78, align 8
  call void %79(%"class.blink::FetchDataLoader::Client"* %75) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #13
  br label %117

80:                                               ; preds = %70, %15, %26
  %81 = phi i8 [ %16, %26 ], [ %16, %15 ], [ %71, %70 ]
  %82 = phi i32 [ %32, %26 ], [ %22, %15 ], [ %72, %70 ]
  switch i32 %82, label %118 [
    i32 3, label %100
    i32 1, label %117
    i32 2, label %83
  ]

83:                                               ; preds = %80
  %84 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %8, align 8
  %85 = bitcast %"class.blink::BytesConsumer"* %84 to void (%"class.blink::BytesConsumer"*)***
  %86 = load void (%"class.blink::BytesConsumer"*)**, void (%"class.blink::BytesConsumer"*)*** %85, align 8
  %87 = getelementptr inbounds void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %86, i64 9
  %88 = load void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %87, align 8
  call void %88(%"class.blink::BytesConsumer"* %84) #13
  call void @_ZN4mojo13SimpleWatcher6CancelEv(%"class.mojo::SimpleWatcher"* %14) #13
  %89 = load i32, i32* %13, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %93, label %91

91:                                               ; preds = %83
  %92 = call i32 @MojoClose(i32 %89) #13
  br label %93

93:                                               ; preds = %83, %91
  store i32 0, i32* %13, align 4
  %94 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe", %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* %0, i64 0, i32 4, i32 0, i32 0
  %95 = load %"class.blink::FetchDataLoader::Client"*, %"class.blink::FetchDataLoader::Client"** %94, align 8
  %96 = bitcast %"class.blink::FetchDataLoader::Client"* %95 to void (%"class.blink::FetchDataLoader::Client"*)***
  %97 = load void (%"class.blink::FetchDataLoader::Client"*)**, void (%"class.blink::FetchDataLoader::Client"*)*** %96, align 8
  %98 = getelementptr inbounds void (%"class.blink::FetchDataLoader::Client"*)*, void (%"class.blink::FetchDataLoader::Client"*)** %97, i64 8
  %99 = load void (%"class.blink::FetchDataLoader::Client"*)*, void (%"class.blink::FetchDataLoader::Client"*)** %98, align 8
  call void %99(%"class.blink::FetchDataLoader::Client"* %95) #13
  br label %117

100:                                              ; preds = %80
  %101 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %8, align 8
  %102 = bitcast %"class.blink::BytesConsumer"* %101 to void (%"class.blink::BytesConsumer"*)***
  %103 = load void (%"class.blink::BytesConsumer"*)**, void (%"class.blink::BytesConsumer"*)*** %102, align 8
  %104 = getelementptr inbounds void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %103, i64 9
  %105 = load void (%"class.blink::BytesConsumer"*)*, void (%"class.blink::BytesConsumer"*)** %104, align 8
  call void %105(%"class.blink::BytesConsumer"* %101) #13
  call void @_ZN4mojo13SimpleWatcher6CancelEv(%"class.mojo::SimpleWatcher"* %14) #13
  %106 = load i32, i32* %13, align 4
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %110, label %108

108:                                              ; preds = %100
  %109 = call i32 @MojoClose(i32 %106) #13
  br label %110

110:                                              ; preds = %100, %108
  store i32 0, i32* %13, align 4
  %111 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe", %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* %0, i64 0, i32 4, i32 0, i32 0
  %112 = load %"class.blink::FetchDataLoader::Client"*, %"class.blink::FetchDataLoader::Client"** %111, align 8
  %113 = bitcast %"class.blink::FetchDataLoader::Client"* %112 to void (%"class.blink::FetchDataLoader::Client"*)***
  %114 = load void (%"class.blink::FetchDataLoader::Client"*)**, void (%"class.blink::FetchDataLoader::Client"*)*** %113, align 8
  %115 = getelementptr inbounds void (%"class.blink::FetchDataLoader::Client"*)*, void (%"class.blink::FetchDataLoader::Client"*)** %114, i64 10
  %116 = load void (%"class.blink::FetchDataLoader::Client"*)*, void (%"class.blink::FetchDataLoader::Client"*)** %115, align 8
  call void %116(%"class.blink::FetchDataLoader::Client"* %112) #13
  br label %117

117:                                              ; preds = %15, %80, %93, %110, %73
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  br label %121

118:                                              ; preds = %80
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %119 = and i8 %81, 1
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %15, label %121

121:                                              ; preds = %118, %117
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipe9DebugNameEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i64 0, i64 0), i64 25) #13
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn8_NK5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipe5TraceEPNS_7VisitorE(%"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe", %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* %0, i64 -1, i32 6, i32 9, i32 0, i32 1
  %4 = getelementptr inbounds i64, i64* %3, i64 3
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13BytesConsumerEE5TraceEPNS_7VisitorEPKv) #13
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds i64, i64* %3, i64 4
  %15 = load atomic i64, i64* %14 monotonic, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %83, label %17

17:                                               ; preds = %13
  %18 = inttoptr i64 %15 to i8*
  %19 = and i64 %15, -131072
  %20 = inttoptr i64 %19 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 4138
  %22 = load i8, i8* %21, align 2
  %23 = icmp eq i8 %22, 1
  br i1 %23, label %24, label %26

24:                                               ; preds = %17
  %25 = getelementptr inbounds i8, i8* %20, i64 4160
  br label %64

26:                                               ; preds = %17
  %27 = getelementptr inbounds i8, i8* %20, i64 4096
  %28 = bitcast i8* %27 to %"class.blink::NormalPage"*
  %29 = getelementptr inbounds i8, i8* %20, i64 4400
  %30 = bitcast i8* %29 to i8**
  %31 = bitcast i8* %29 to i64*
  %32 = load i64, i64* %31, align 16
  %33 = sub i64 %15, %32
  %34 = lshr i64 %33, 3
  %35 = lshr i64 %33, 6
  %36 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %28, i64 0, i32 2, i32 0, i32 1, i64 %35
  %37 = load atomic i8, i8* %36 acquire, align 1
  %38 = trunc i64 %34 to i32
  %39 = and i32 %38, 7
  %40 = shl i32 2, %39
  %41 = trunc i32 %40 to i8
  %42 = add i8 %41, -1
  %43 = and i8 %42, %37
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %51

45:                                               ; preds = %26, %45
  %46 = phi i64 [ %47, %45 ], [ %35, %26 ]
  %47 = add i64 %46, -1
  %48 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %28, i64 0, i32 2, i32 0, i32 1, i64 %47
  %49 = load atomic i8, i8* %48 acquire, align 1
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %45, label %51

51:                                               ; preds = %45, %26
  %52 = phi i64 [ %35, %26 ], [ %47, %45 ]
  %53 = phi i8 [ %43, %26 ], [ %49, %45 ]
  %54 = zext i8 %53 to i32
  %55 = tail call i32 @llvm.ctlz.i32(i32 %54, i1 true) #13, !range !17
  %56 = add nsw i32 %55, -24
  %57 = shl i64 %52, 3
  %58 = or i64 %57, 7
  %59 = sext i32 %56 to i64
  %60 = sub i64 %58, %59
  %61 = shl i64 %60, 3
  %62 = load i8*, i8** %30, align 16
  %63 = getelementptr inbounds i8, i8* %62, i64 %61
  br label %64

64:                                               ; preds = %51, %24
  %65 = phi i8* [ %25, %24 ], [ %63, %51 ]
  %66 = getelementptr inbounds i8, i8* %65, i64 8
  %67 = getelementptr inbounds i8, i8* %65, i64 4
  %68 = bitcast i8* %67 to i16*
  %69 = load atomic i16, i16* %68 acquire, align 2
  %70 = lshr i16 %69, 2
  %71 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %72 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %71, i64 0, i32 0
  %73 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %72, align 8
  %74 = zext i16 %70 to i64
  %75 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %73, i64 %74
  %76 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %75, align 8
  %77 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %76, i64 0, i32 0
  %78 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %77, align 8
  %79 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %80 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %80, i64 5
  %82 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %81, align 8
  tail call void %82(%"class.blink::Visitor"* %1, i8* nonnull %18, i8* %66, void (%"class.blink::Visitor"*, i8*)* %78) #13
  br label %83

83:                                               ; preds = %13, %64
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn8_N5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipeD1Ev(%"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe", %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* %0, i64 -1, i32 6, i32 9, i32 0, i32 1
  %3 = bitcast i64* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipeE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds i64, i64* %2, i64 6
  %5 = bitcast i64* %4 to %"class.mojo::SimpleWatcher"*
  tail call void @_ZN4mojo13SimpleWatcherD1Ev(%"class.mojo::SimpleWatcher"* %5) #13
  %6 = getelementptr inbounds i64, i64* %2, i64 5
  %7 = bitcast i64* %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  %11 = tail call i32 @MojoClose(i32 %8) #13
  br label %12

12:                                               ; preds = %1, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn8_N5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipeD0Ev(%"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe", %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* %0, i64 -1, i32 6, i32 9, i32 0, i32 1
  %3 = bitcast i64* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*], [7 x i8*] }, { [9 x i8*], [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipeE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds i64, i64* %2, i64 6
  %5 = bitcast i64* %4 to %"class.mojo::SimpleWatcher"*
  tail call void @_ZN4mojo13SimpleWatcherD1Ev(%"class.mojo::SimpleWatcher"* %5) #13
  %6 = getelementptr inbounds i64, i64* %2, i64 5
  %7 = bitcast i64* %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  %11 = tail call i32 @MojoClose(i32 %8) #13
  br label %12

12:                                               ; preds = %1, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn8_N5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipe13OnStateChangeEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe", %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* %0, i64 -1, i32 6, i32 9, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"*
  tail call void @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipe13OnStateChangeEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.WTF::StringImpl"* @_ZThn8_NK5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipe9DebugNameEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3)
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i64 0, i64 0), i64 25) #13
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3)
  ret %"class.WTF::StringImpl"* %5
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipe18InvokePreFinalizerERKNS_14LivenessBrokerEPv(%"class.blink::LivenessBroker"* nocapture readnone dereferenceable(1), i8*) #0 align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %25, label %4

4:                                                ; preds = %2
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #13
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #13
  br label %11

11:                                               ; preds = %9, %4
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = icmp eq %"class.blink::ThreadState"* %14, null
  br i1 %15, label %25, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds i8, i8* %1, i64 -2
  %18 = bitcast i8* %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = and i16 %19, 1
  %21 = icmp eq i16 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %16
  %23 = getelementptr inbounds i8, i8* %1, i64 48
  %24 = bitcast i8* %23 to %"class.mojo::SimpleWatcher"*
  tail call void @_ZN4mojo13SimpleWatcher6CancelEv(%"class.mojo::SimpleWatcher"* %24) #13
  br label %25

25:                                               ; preds = %16, %11, %2, %22
  %26 = phi i1 [ true, %22 ], [ false, %16 ], [ false, %2 ], [ false, %11 ]
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %6 = lshr i32 %3, 2
  %7 = add i32 %3, 1
  %8 = add i32 %7, %6
  %9 = icmp ugt i32 %8, 16
  %10 = select i1 %9, i32 %8, i32 16
  %11 = zext i32 %10 to i64
  %12 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm(i64 %11) #13
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm(i64 %11) #13
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([119 x i8], [119 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEEEEPKcv, i64 0, i64 0)) #13
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Deque"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 4
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %2, align 8
  %19 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp ugt i32 %20, %22
  %24 = bitcast i8* %14 to %"struct.std::__1::pair"*
  br i1 %23, label %40, label %25

25:                                               ; preds = %1
  %26 = zext i32 %20 to i64
  %27 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 %26
  %28 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 %26
  %29 = icmp ne %"struct.std::__1::pair"* %28, null
  %30 = icmp ne %"struct.std::__1::pair"* %27, null
  %31 = and i1 %30, %29
  br i1 %31, label %32, label %73, !prof !19

32:                                               ; preds = %25
  %33 = zext i32 %22 to i64
  %34 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 %33
  %35 = bitcast %"struct.std::__1::pair"* %27 to i8*
  %36 = ptrtoint %"struct.std::__1::pair"* %34 to i64
  %37 = ptrtoint %"struct.std::__1::pair"* %27 to i64
  %38 = sub i64 %36, %37
  %39 = bitcast %"struct.std::__1::pair"* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* nonnull align 8 %35, i64 %38, i1 false) #13
  br label %73

40:                                               ; preds = %1
  %41 = icmp ne i8* %14, null
  %42 = icmp ne %"struct.std::__1::pair"* %5, null
  %43 = and i1 %42, %41
  br i1 %43, label %44, label %51, !prof !19

44:                                               ; preds = %40
  %45 = zext i32 %22 to i64
  %46 = bitcast %"struct.std::__1::pair"* %5 to i8*
  %47 = shl nuw nsw i64 %45, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* nonnull align 8 %46, i64 %47, i1 false) #13
  %48 = load i32, i32* %2, align 8
  %49 = load i32, i32* %19, align 8
  %50 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  br label %51

51:                                               ; preds = %40, %44
  %52 = phi %"struct.std::__1::pair"* [ %24, %40 ], [ %50, %44 ]
  %53 = phi i32 [ %20, %40 ], [ %49, %44 ]
  %54 = phi i32 [ %18, %40 ], [ %48, %44 ]
  %55 = sub i32 %53, %3
  %56 = add i32 %55, %54
  %57 = zext i32 %53 to i64
  %58 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 %57
  %59 = zext i32 %56 to i64
  %60 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %52, i64 %59
  %61 = icmp ne %"struct.std::__1::pair"* %60, null
  %62 = icmp ne %"struct.std::__1::pair"* %58, null
  %63 = and i1 %62, %61
  br i1 %63, label %64, label %72, !prof !19

64:                                               ; preds = %51
  %65 = zext i32 %3 to i64
  %66 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 %65
  %67 = bitcast %"struct.std::__1::pair"* %58 to i8*
  %68 = ptrtoint %"struct.std::__1::pair"* %66 to i64
  %69 = ptrtoint %"struct.std::__1::pair"* %58 to i64
  %70 = sub i64 %68, %69
  %71 = bitcast %"struct.std::__1::pair"* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* nonnull align 8 %67, i64 %70, i1 false) #13
  br label %72

72:                                               ; preds = %51, %64
  store i32 %56, i32* %19, align 8
  br label %73

73:                                               ; preds = %32, %25, %72
  %74 = bitcast %"struct.std::__1::pair"* %5 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %74) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.18, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.19, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

declare void @_ZN4mojo13SimpleWatcher6CancelEv(%"class.mojo::SimpleWatcher"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4mojo13SimpleWatcherD1Ev(%"class.mojo::SimpleWatcher"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipe10OnWritableEj(%"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"*, i32) #0 align 2 {
  tail call void @_ZN5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipe13OnStateChangeEv(%"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* %0)
  ret void
}

declare void @_ZN4mojo13SimpleWatcher11ArmOrNotifyEv(%"class.mojo::SimpleWatcher"*) local_unnamed_addr #1

declare i32 @MojoCreateDataPipe(%struct.MojoCreateDataPipeOptions*, i32*, i32*) local_unnamed_addr #1

declare i32 @_ZN4mojo13SimpleWatcher5WatchENS_6HandleEjjN4base17RepeatingCallbackIFvjRKNS_18HandleSignalsStateEEEE(%"class.mojo::SimpleWatcher"*, %"class.mojo::Handle"*, i32, i32, %"class.base::RepeatingCallback"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo13SimpleWatcher17DiscardReadyStateERKN4base17RepeatingCallbackIFvjEEEjRKNS_18HandleSignalsStateE(%"class.base::RepeatingCallback.402"* dereferenceable(8), i32, %"struct.mojo::HandleSignalsState"* dereferenceable(8)) #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::RepeatingCallback.402", %"class.base::RepeatingCallback.402"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %5, i64 0, i32 1
  %7 = bitcast void ()** %6 to void (%"class.base::internal::BindStateBase"*, i32)**
  %8 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %7, align 8
  tail call void %8(%"class.base::internal::BindStateBase"* %5, i32 %1) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvRKNS_17RepeatingCallbackIFvjEEEjRKN4mojo18HandleSignalsStateEEJS5_EEEFvjSB_EE3RunEPNS0_13BindStateBaseEjSB_(%"class.base::internal::BindStateBase"*, i32, %"struct.mojo::HandleSignalsState"* dereferenceable(8)) #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.base::RepeatingCallback.402"*, i32, %"struct.mojo::HandleSignalsState"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to %"class.base::RepeatingCallback.402"*
  %8 = load void (%"class.base::RepeatingCallback.402"*, i32, %"struct.mojo::HandleSignalsState"*)*, void (%"class.base::RepeatingCallback.402"*, i32, %"struct.mojo::HandleSignalsState"*)** %5, align 8
  tail call void %8(%"class.base::RepeatingCallback.402"* dereferenceable(8) %7, i32 %1, %"struct.mojo::HandleSignalsState"* dereferenceable(8) %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvRKNS_17RepeatingCallbackIFvjEEEjRKN4mojo18HandleSignalsStateEEJS4_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #13
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #14
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipeEFvjEJNS3_14WeakPersistentIS5_EEEEEFvjEE3RunEPNS0_13BindStateBaseEj(%"class.base::internal::BindStateBase"* nocapture readonly, i32) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"**
  %5 = load %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"*, %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"** %4, align 8
  %6 = icmp eq %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %9 = bitcast %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* %5 to i8*
  %10 = bitcast %"class.base::internal::BindStateBase"* %8 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %13 = bitcast void ()** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds i8, i8* %9, i64 %14
  %16 = bitcast i8* %15 to %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"*
  %17 = and i64 %11, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %7
  %20 = bitcast i8* %15 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = add i64 %11, -1
  %23 = getelementptr i8, i8* %21, i64 %22
  %24 = bitcast i8* %23 to void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"*, i32)**
  %25 = load void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"*, i32)*, void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"*, i32)** %24, align 8
  br label %28

26:                                               ; preds = %7
  %27 = inttoptr i64 %11 to void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"*, i32)*
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi void (%"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"*, i32)* [ %25, %19 ], [ %27, %26 ]
  tail call void %29(%"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* %16, i32 %1) #13
  br label %30

30:                                               ; preds = %2, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipeEFvjEJNS2_14WeakPersistentIS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #13
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !2

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #13
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::PersistentNode"* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %21, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %21, %"class.blink::PersistentNode"** %22, align 8
  br label %27

27:                                               ; preds = %3, %15
  %28 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #14
  br label %29

29:                                               ; preds = %27, %1
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipeEFvjEJNS3_14WeakPersistentIS5_EEEEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE(%"class.base::internal::BindStateBase"* nocapture readonly, i32) #10 {
  switch i32 %1, label %9 [
    i32 0, label %3
    i32 1, label %8
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"**
  %6 = load %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"*, %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"** %5, align 8
  %7 = icmp eq %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* %6, null
  br label %9

8:                                                ; preds = %2
  br label %9

9:                                                ; preds = %2, %3, %8
  %10 = phi i1 [ true, %8 ], [ %7, %3 ], [ false, %2 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12_GLOBAL__N_125FetchDataLoaderAsDataPipeELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv(%"class.blink::Visitor"*, i8*) #0 align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseINS_12_GLOBAL__N_125FetchDataLoaderAsDataPipeELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink14PersistentBaseINS_12_GLOBAL__N_125FetchDataLoaderAsDataPipeELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* nocapture readnone dereferenceable(1), i8* nocapture) #0 align 2 {
  %3 = bitcast i8* %1 to %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"**
  %4 = load %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"*, %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"** %3, align 8
  %5 = icmp eq %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* %4, null
  br i1 %5, label %49, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #13
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #13
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe", %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* %4, i64 -1, i32 6, i32 9, i32 0, i32 1
  %20 = bitcast i64* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %18
  store %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"* null, %"class.blink::(anonymous namespace)::FetchDataLoaderAsDataPipe"** %3, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 8
  %27 = bitcast i8* %26 to %"class.blink::PersistentNode"**
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %25
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #13
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !2

35:                                               ; preds = %30
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #13
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i8* [ %36, %35 ], [ %33, %30 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %41, align 8
  %43 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0, i32 0
  %45 = bitcast %"class.blink::PersistentRegion"* %42 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::PersistentNode"* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %48, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %44, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %27, align 8
  br label %49

49:                                               ; preds = %18, %13, %37, %25, %2
  ret void
}

declare i32 @MojoWriteData(i32, i8*, i32*, %struct.MojoWriteDataOptions*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { inlinehint norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeConsumerHandleEE7releaseEv: argument 0"}
!5 = distinct !{!5, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeConsumerHandleEE7releaseEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN5blink18WrapWeakPersistentINS_12_GLOBAL__N_127FetchDataLoaderAsBlobHandleEEENS_14WeakPersistentIT_EEPS4_: argument 0"}
!8 = distinct !{!8, !"_ZN5blink18WrapWeakPersistentINS_12_GLOBAL__N_127FetchDataLoaderAsBlobHandleEEENS_14WeakPersistentIT_EEPS4_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN3WTF4BindIMN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandleEFvRK13scoped_refptrINS1_14BlobDataHandleEEEJNS1_14WeakPersistentIS3_EEEFvS8_EEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!11 = distinct !{!11, !"_ZN3WTF4BindIMN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandleEFvRK13scoped_refptrINS1_14BlobDataHandleEEEJNS1_14WeakPersistentIS3_EEEFvS8_EEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!12 = !{!13, !15, !10}
!13 = distinct !{!13, !14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandleEFvRK13scoped_refptrINS3_14BlobDataHandleEEEJNS3_14WeakPersistentIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!14 = distinct !{!14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandleEFvRK13scoped_refptrINS3_14BlobDataHandleEEEJNS3_14WeakPersistentIS5_EEEEEDcOT0_DpOT1_"}
!15 = distinct !{!15, !16, !"_ZN4base8BindOnceIMN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandleEFvRK13scoped_refptrINS1_14BlobDataHandleEEEJNS1_14WeakPersistentIS3_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8BindOnceIMN5blink12_GLOBAL__N_127FetchDataLoaderAsBlobHandleEFvRK13scoped_refptrINS1_14BlobDataHandleEEEJNS1_14WeakPersistentIS3_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_"}
!17 = !{i32 24, i32 33}
!18 = !{i8 0, i8 2}
!19 = !{!"branch_weights", i32 2000, i32 1}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK4base4spanIKcLm18446744073709551615EE5beginEv: argument 0"}
!22 = distinct !{!22, !"_ZNK4base4spanIKcLm18446744073709551615EE5beginEv"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK4base4spanIKcLm18446744073709551615EE3endEv: argument 0"}
!25 = distinct !{!25, !"_ZNK4base4spanIKcLm18446744073709551615EE3endEv"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNK4base4spanIKcLm18446744073709551615EE5beginEv: argument 0"}
!28 = distinct !{!28, !"_ZNK4base4spanIKcLm18446744073709551615EE5beginEv"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNK4base4spanIKcLm18446744073709551615EE3endEv: argument 0"}
!31 = distinct !{!31, !"_ZNK4base4spanIKcLm18446744073709551615EE3endEv"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN5blink18WrapWeakPersistentINS_12_GLOBAL__N_125FetchDataLoaderAsDataPipeEEENS_14WeakPersistentIT_EEPS4_: argument 0"}
!34 = distinct !{!34, !"_ZN5blink18WrapWeakPersistentINS_12_GLOBAL__N_125FetchDataLoaderAsDataPipeEEENS_14WeakPersistentIT_EEPS4_"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN3WTF13BindRepeatingIMN5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipeEFvjEJNS1_14WeakPersistentIS3_EEEFvjEEEN4base17RepeatingCallbackIT1_EET_DpOT0_: argument 0"}
!37 = distinct !{!37, !"_ZN3WTF13BindRepeatingIMN5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipeEFvjEJNS1_14WeakPersistentIS3_EEEFvjEEEN4base17RepeatingCallbackIT1_EET_DpOT0_"}
!38 = !{!39, !41, !36}
!39 = distinct !{!39, !40, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERMN5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipeEFvjEJNS3_14WeakPersistentIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!40 = distinct !{!40, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERMN5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipeEFvjEJNS3_14WeakPersistentIS5_EEEEEDcOT0_DpOT1_"}
!41 = distinct !{!41, !42, !"_ZN4base13BindRepeatingIRMN5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipeEFvjEJNS1_14WeakPersistentIS3_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!42 = distinct !{!42, !"_ZN4base13BindRepeatingIRMN5blink12_GLOBAL__N_125FetchDataLoaderAsDataPipeEFvjEJNS1_14WeakPersistentIS3_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!43 = !{!44, !46}
!44 = distinct !{!44, !45, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFvRKNS2_IFvjEEEjRKN4mojo18HandleSignalsStateEEJS4_EEEDcOT0_DpOT1_: argument 0"}
!45 = distinct !{!45, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFvRKNS2_IFvjEEEjRKN4mojo18HandleSignalsStateEEJS4_EEEDcOT0_DpOT1_"}
!46 = distinct !{!46, !47, !"_ZN4base13BindRepeatingIPFvRKNS_17RepeatingCallbackIFvjEEEjRKN4mojo18HandleSignalsStateEEJS3_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!47 = distinct !{!47, !"_ZN4base13BindRepeatingIPFvRKNS_17RepeatingCallbackIFvjEEEjRKN4mojo18HandleSignalsStateEEJS3_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeConsumerHandleEE7releaseEv: argument 0"}
!50 = distinct !{!50, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeConsumerHandleEE7releaseEv"}
