; ModuleID = '../../third_party/blink/renderer/platform/loader/fetch/fetch_client_settings_object_snapshot.cc'
source_filename = "../../third_party/blink/renderer/platform/loader/fetch/fetch_client_settings_object_snapshot.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::FetchClientSettingsObjectSnapshot" = type { %"class.blink::FetchClientSettingsObject", %"class.blink::KURL", %"class.blink::KURL", %class.scoped_refptr.2, i32, %"class.WTF::String", i32, i32, i32, i32, %"class.WTF::HashSet" }
%"class.blink::FetchClientSettingsObject" = type { i32 (...)** }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%class.scoped_refptr.2 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.2 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"struct.blink::CrossThreadFetchClientSettingsObjectData" = type { %"class.blink::KURL", %"class.blink::KURL", %class.scoped_refptr.2, i32, %"class.WTF::String", i32, i32, i32, i32, %"class.WTF::HashSet" }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.9", i32, [4 x i8], %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.147", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.159", %"class.std::__1::unique_ptr.165", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.172", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.120", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type opaque
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.blink::Worklist.51"* }
%"class.blink::Worklist.51" = type opaque
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.blink::Worklist.58"* }
%"class.blink::Worklist.58" = type opaque
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::Worklist.65"* }
%"class.blink::Worklist.65" = type opaque
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.blink::Worklist.72"* }
%"class.blink::Worklist.72" = type opaque
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.blink::Worklist.79"* }
%"class.blink::Worklist.79" = type opaque
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.blink::Worklist.86"* }
%"class.blink::Worklist.86" = type opaque
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.blink::Worklist.93"* }
%"class.blink::Worklist.93" = type opaque
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.100", %"class.std::__1::__compressed_pair.107", %"class.std::__1::__compressed_pair.112", %"class.std::__1::__compressed_pair.114", [4 x i8] }>
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102", %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { i64 }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { float }
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type opaque
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.139" }
%"class.WTF::VectorBuffer.139" = type { %"class.WTF::VectorBufferBase.140" }
%"class.WTF::VectorBufferBase.140" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.153" }
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.171 }
%class.scoped_refptr.171 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.172" = type { %"struct.std::__1::__atomic_base.173" }
%"struct.std::__1::__atomic_base.173" = type { %"struct.std::__1::__cxx_atomic_impl.174" }
%"struct.std::__1::__cxx_atomic_impl.174" = type { %"struct.std::__1::__cxx_atomic_base_impl.175" }
%"struct.std::__1::__cxx_atomic_base_impl.175" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.178 }
%union.anon.178 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN5blink33FetchClientSettingsObjectSnapshotD2Ev = comdat any

$_ZN5blink33FetchClientSettingsObjectSnapshotD0Ev = comdat any

$_ZNK5blink33FetchClientSettingsObjectSnapshot15GlobalObjectUrlEv = comdat any

$_ZNK5blink33FetchClientSettingsObjectSnapshot7BaseUrlEv = comdat any

$_ZNK5blink33FetchClientSettingsObjectSnapshot17GetSecurityOriginEv = comdat any

$_ZNK5blink33FetchClientSettingsObjectSnapshot17GetReferrerPolicyEv = comdat any

$_ZNK5blink33FetchClientSettingsObjectSnapshot19GetOutgoingReferrerEv = comdat any

$_ZNK5blink33FetchClientSettingsObjectSnapshot13GetHttpsStateEv = comdat any

$_ZNK5blink33FetchClientSettingsObjectSnapshot35MimeTypeCheckForClassicWorkerScriptEv = comdat any

$_ZNK5blink33FetchClientSettingsObjectSnapshot15GetAddressSpaceEv = comdat any

$_ZNK5blink33FetchClientSettingsObjectSnapshot25GetInsecureRequestsPolicyEv = comdat any

$_ZNK5blink33FetchClientSettingsObjectSnapshot32GetUpgradeInsecureNavigationsSetEv = comdat any

$_ZNK5blink25FetchClientSettingsObject5TraceEPNS_7VisitorE = comdat any

$_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE8RehashToEPjjS7_ = comdat any

$_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS2_S4_S5_EERKjSB_EENS_18HashTableAddResultIS6_jEEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE6ExpandEPj = comdat any

$_ZN5blink14SecurityOriginD2Ev = comdat any

$_ZTVN5blink33FetchClientSettingsObjectSnapshotE = comdat any

@_ZTVN5blink33FetchClientSettingsObjectSnapshotE = linkonce_odr hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::FetchClientSettingsObjectSnapshot"*)* @_ZN5blink33FetchClientSettingsObjectSnapshotD2Ev to i8*), i8* bitcast (void (%"class.blink::FetchClientSettingsObjectSnapshot"*)* @_ZN5blink33FetchClientSettingsObjectSnapshotD0Ev to i8*), i8* bitcast (%"class.blink::KURL"* (%"class.blink::FetchClientSettingsObjectSnapshot"*)* @_ZNK5blink33FetchClientSettingsObjectSnapshot15GlobalObjectUrlEv to i8*), i8* bitcast (%"class.blink::KURL"* (%"class.blink::FetchClientSettingsObjectSnapshot"*)* @_ZNK5blink33FetchClientSettingsObjectSnapshot7BaseUrlEv to i8*), i8* bitcast (%"class.blink::SecurityOrigin"* (%"class.blink::FetchClientSettingsObjectSnapshot"*)* @_ZNK5blink33FetchClientSettingsObjectSnapshot17GetSecurityOriginEv to i8*), i8* bitcast (i32 (%"class.blink::FetchClientSettingsObjectSnapshot"*)* @_ZNK5blink33FetchClientSettingsObjectSnapshot17GetReferrerPolicyEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::FetchClientSettingsObjectSnapshot"*)* @_ZNK5blink33FetchClientSettingsObjectSnapshot19GetOutgoingReferrerEv to i8*), i8* bitcast (i32 (%"class.blink::FetchClientSettingsObjectSnapshot"*)* @_ZNK5blink33FetchClientSettingsObjectSnapshot13GetHttpsStateEv to i8*), i8* bitcast (i32 (%"class.blink::FetchClientSettingsObjectSnapshot"*)* @_ZNK5blink33FetchClientSettingsObjectSnapshot35MimeTypeCheckForClassicWorkerScriptEv to i8*), i8* bitcast (i32 (%"class.blink::FetchClientSettingsObjectSnapshot"*)* @_ZNK5blink33FetchClientSettingsObjectSnapshot15GetAddressSpaceEv to i8*), i8* bitcast (i32 (%"class.blink::FetchClientSettingsObjectSnapshot"*)* @_ZNK5blink33FetchClientSettingsObjectSnapshot25GetInsecureRequestsPolicyEv to i8*), i8* bitcast (%"class.WTF::HashSet"* (%"class.blink::FetchClientSettingsObjectSnapshot"*)* @_ZNK5blink33FetchClientSettingsObjectSnapshot32GetUpgradeInsecureNavigationsSetEv to i8*), i8* bitcast (void (%"class.blink::FetchClientSettingsObject"*, %"class.blink::Visitor"*)* @_ZNK5blink25FetchClientSettingsObject5TraceEPNS_7VisitorE to i8*)] }, comdat, align 8
@.str = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.1 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv = private unnamed_addr constant [60 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned int]\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1

@_ZN5blink33FetchClientSettingsObjectSnapshotC1ERKNS_25FetchClientSettingsObjectE = hidden unnamed_addr alias void (%"class.blink::FetchClientSettingsObjectSnapshot"*, %"class.blink::FetchClientSettingsObject"*), void (%"class.blink::FetchClientSettingsObjectSnapshot"*, %"class.blink::FetchClientSettingsObject"*)* @_ZN5blink33FetchClientSettingsObjectSnapshotC2ERKNS_25FetchClientSettingsObjectE
@_ZN5blink33FetchClientSettingsObjectSnapshotC1ENSt3__110unique_ptrINS_40CrossThreadFetchClientSettingsObjectDataENS1_14default_deleteIS3_EEEE = hidden unnamed_addr alias void (%"class.blink::FetchClientSettingsObjectSnapshot"*, %"struct.blink::CrossThreadFetchClientSettingsObjectData"*), void (%"class.blink::FetchClientSettingsObjectSnapshot"*, %"struct.blink::CrossThreadFetchClientSettingsObjectData"*)* @_ZN5blink33FetchClientSettingsObjectSnapshotC2ENSt3__110unique_ptrINS_40CrossThreadFetchClientSettingsObjectDataENS1_14default_deleteIS3_EEEE
@_ZN5blink33FetchClientSettingsObjectSnapshotC1ERKNS_4KURLES3_13scoped_refptrIKNS_14SecurityOriginEEN7network5mojom14ReferrerPolicyERKN3WTF6StringENS_10HttpsStateENS_16AllowedByNosniff13MimeTypeCheckENS9_14IPAddressSpaceENS_5mojom21InsecureRequestPolicyENSB_7HashSetIjNSB_13AlreadyHashedENSB_10HashTraitsIjEENSB_18PartitionAllocatorEEE = hidden unnamed_addr alias void (%"class.blink::FetchClientSettingsObjectSnapshot"*, %"class.blink::KURL"*, %"class.blink::KURL"*, %"class.blink::SecurityOrigin"*, i32, %"class.WTF::String"*, i32, i32, i32, i32, %"class.WTF::HashSet"*), void (%"class.blink::FetchClientSettingsObjectSnapshot"*, %"class.blink::KURL"*, %"class.blink::KURL"*, %"class.blink::SecurityOrigin"*, i32, %"class.WTF::String"*, i32, i32, i32, i32, %"class.WTF::HashSet"*)* @_ZN5blink33FetchClientSettingsObjectSnapshotC2ERKNS_4KURLES3_13scoped_refptrIKNS_14SecurityOriginEEN7network5mojom14ReferrerPolicyERKN3WTF6StringENS_10HttpsStateENS_16AllowedByNosniff13MimeTypeCheckENS9_14IPAddressSpaceENS_5mojom21InsecureRequestPolicyENSB_7HashSetIjNSB_13AlreadyHashedENSB_10HashTraitsIjEENSB_18PartitionAllocatorEEE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink33FetchClientSettingsObjectSnapshotC2ERKNS_25FetchClientSettingsObjectE(%"class.blink::FetchClientSettingsObjectSnapshot"*, %"class.blink::FetchClientSettingsObject"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::HashSet", align 8
  %5 = bitcast %"class.blink::FetchClientSettingsObject"* %1 to %"class.blink::KURL"* (%"class.blink::FetchClientSettingsObject"*)***
  %6 = load %"class.blink::KURL"* (%"class.blink::FetchClientSettingsObject"*)**, %"class.blink::KURL"* (%"class.blink::FetchClientSettingsObject"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::KURL"* (%"class.blink::FetchClientSettingsObject"*)*, %"class.blink::KURL"* (%"class.blink::FetchClientSettingsObject"*)** %6, i64 2
  %8 = load %"class.blink::KURL"* (%"class.blink::FetchClientSettingsObject"*)*, %"class.blink::KURL"* (%"class.blink::FetchClientSettingsObject"*)** %7, align 8
  %9 = tail call dereferenceable(112) %"class.blink::KURL"* %8(%"class.blink::FetchClientSettingsObject"* %1) #7
  %10 = load %"class.blink::KURL"* (%"class.blink::FetchClientSettingsObject"*)**, %"class.blink::KURL"* (%"class.blink::FetchClientSettingsObject"*)*** %5, align 8
  %11 = getelementptr inbounds %"class.blink::KURL"* (%"class.blink::FetchClientSettingsObject"*)*, %"class.blink::KURL"* (%"class.blink::FetchClientSettingsObject"*)** %10, i64 3
  %12 = load %"class.blink::KURL"* (%"class.blink::FetchClientSettingsObject"*)*, %"class.blink::KURL"* (%"class.blink::FetchClientSettingsObject"*)** %11, align 8
  %13 = tail call dereferenceable(112) %"class.blink::KURL"* %12(%"class.blink::FetchClientSettingsObject"* %1) #7
  %14 = bitcast %"class.blink::FetchClientSettingsObject"* %1 to %"class.blink::SecurityOrigin"* (%"class.blink::FetchClientSettingsObject"*)***
  %15 = load %"class.blink::SecurityOrigin"* (%"class.blink::FetchClientSettingsObject"*)**, %"class.blink::SecurityOrigin"* (%"class.blink::FetchClientSettingsObject"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.blink::SecurityOrigin"* (%"class.blink::FetchClientSettingsObject"*)*, %"class.blink::SecurityOrigin"* (%"class.blink::FetchClientSettingsObject"*)** %15, i64 4
  %17 = load %"class.blink::SecurityOrigin"* (%"class.blink::FetchClientSettingsObject"*)*, %"class.blink::SecurityOrigin"* (%"class.blink::FetchClientSettingsObject"*)** %16, align 8
  %18 = tail call %"class.blink::SecurityOrigin"* %17(%"class.blink::FetchClientSettingsObject"* %1) #7
  %19 = icmp eq %"class.blink::SecurityOrigin"* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %18, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %21) #7
  br label %22

22:                                               ; preds = %2, %20
  %23 = bitcast %"class.blink::FetchClientSettingsObject"* %1 to i32 (%"class.blink::FetchClientSettingsObject"*)***
  %24 = load i32 (%"class.blink::FetchClientSettingsObject"*)**, i32 (%"class.blink::FetchClientSettingsObject"*)*** %23, align 8
  %25 = getelementptr inbounds i32 (%"class.blink::FetchClientSettingsObject"*)*, i32 (%"class.blink::FetchClientSettingsObject"*)** %24, i64 5
  %26 = load i32 (%"class.blink::FetchClientSettingsObject"*)*, i32 (%"class.blink::FetchClientSettingsObject"*)** %25, align 8
  %27 = tail call i32 %26(%"class.blink::FetchClientSettingsObject"* %1) #7
  %28 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #7
  %29 = bitcast %"class.blink::FetchClientSettingsObject"* %1 to %"class.WTF::StringImpl"* (%"class.blink::FetchClientSettingsObject"*)***
  %30 = load %"class.WTF::StringImpl"* (%"class.blink::FetchClientSettingsObject"*)**, %"class.WTF::StringImpl"* (%"class.blink::FetchClientSettingsObject"*)*** %29, align 8
  %31 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::FetchClientSettingsObject"*)*, %"class.WTF::StringImpl"* (%"class.blink::FetchClientSettingsObject"*)** %30, i64 6
  %32 = load %"class.WTF::StringImpl"* (%"class.blink::FetchClientSettingsObject"*)*, %"class.WTF::StringImpl"* (%"class.blink::FetchClientSettingsObject"*)** %31, align 8
  %33 = tail call %"class.WTF::StringImpl"* %32(%"class.blink::FetchClientSettingsObject"* %1) #7
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %33, %"class.WTF::StringImpl"** %34, align 8
  %35 = load i32 (%"class.blink::FetchClientSettingsObject"*)**, i32 (%"class.blink::FetchClientSettingsObject"*)*** %23, align 8
  %36 = getelementptr inbounds i32 (%"class.blink::FetchClientSettingsObject"*)*, i32 (%"class.blink::FetchClientSettingsObject"*)** %35, i64 7
  %37 = load i32 (%"class.blink::FetchClientSettingsObject"*)*, i32 (%"class.blink::FetchClientSettingsObject"*)** %36, align 8
  %38 = tail call i32 %37(%"class.blink::FetchClientSettingsObject"* %1) #7
  %39 = load i32 (%"class.blink::FetchClientSettingsObject"*)**, i32 (%"class.blink::FetchClientSettingsObject"*)*** %23, align 8
  %40 = getelementptr inbounds i32 (%"class.blink::FetchClientSettingsObject"*)*, i32 (%"class.blink::FetchClientSettingsObject"*)** %39, i64 8
  %41 = load i32 (%"class.blink::FetchClientSettingsObject"*)*, i32 (%"class.blink::FetchClientSettingsObject"*)** %40, align 8
  %42 = tail call i32 %41(%"class.blink::FetchClientSettingsObject"* %1) #7
  %43 = load i32 (%"class.blink::FetchClientSettingsObject"*)**, i32 (%"class.blink::FetchClientSettingsObject"*)*** %23, align 8
  %44 = getelementptr inbounds i32 (%"class.blink::FetchClientSettingsObject"*)*, i32 (%"class.blink::FetchClientSettingsObject"*)** %43, i64 9
  %45 = load i32 (%"class.blink::FetchClientSettingsObject"*)*, i32 (%"class.blink::FetchClientSettingsObject"*)** %44, align 8
  %46 = tail call i32 %45(%"class.blink::FetchClientSettingsObject"* %1) #7
  %47 = load i32 (%"class.blink::FetchClientSettingsObject"*)**, i32 (%"class.blink::FetchClientSettingsObject"*)*** %23, align 8
  %48 = getelementptr inbounds i32 (%"class.blink::FetchClientSettingsObject"*)*, i32 (%"class.blink::FetchClientSettingsObject"*)** %47, i64 10
  %49 = load i32 (%"class.blink::FetchClientSettingsObject"*)*, i32 (%"class.blink::FetchClientSettingsObject"*)** %48, align 8
  %50 = tail call i32 %49(%"class.blink::FetchClientSettingsObject"* %1) #7
  %51 = bitcast %"class.blink::FetchClientSettingsObject"* %1 to %"class.WTF::HashSet"* (%"class.blink::FetchClientSettingsObject"*)***
  %52 = load %"class.WTF::HashSet"* (%"class.blink::FetchClientSettingsObject"*)**, %"class.WTF::HashSet"* (%"class.blink::FetchClientSettingsObject"*)*** %51, align 8
  %53 = getelementptr inbounds %"class.WTF::HashSet"* (%"class.blink::FetchClientSettingsObject"*)*, %"class.WTF::HashSet"* (%"class.blink::FetchClientSettingsObject"*)** %52, i64 11
  %54 = load %"class.WTF::HashSet"* (%"class.blink::FetchClientSettingsObject"*)*, %"class.WTF::HashSet"* (%"class.blink::FetchClientSettingsObject"*)** %53, align 8
  %55 = tail call dereferenceable(24) %"class.WTF::HashSet"* %54(%"class.blink::FetchClientSettingsObject"* %1) #7
  %56 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %4, i64 0, i32 0
  %57 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %55, i64 0, i32 0, i32 2
  %58 = bitcast %"class.WTF::HashSet"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 0, i64 20, i1 false) #7
  %59 = load i32, i32* %57, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %98, label %61

61:                                               ; preds = %22
  call void @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* nonnull %56, i32 %59) #7
  %62 = load i32, i32* %57, align 4
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %55, i64 0, i32 0, i32 0
  %65 = load i32*, i32** %64, align 8
  %66 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %55, i64 0, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds i32, i32* %65, i64 %68
  br i1 %63, label %98, label %70

70:                                               ; preds = %61
  %71 = icmp eq i32 %67, 0
  br i1 %71, label %80, label %72

72:                                               ; preds = %70, %77
  %73 = phi i32* [ %78, %77 ], [ %65, %70 ]
  %74 = load i32, i32* %73, align 4
  %75 = add i32 %74, 1
  %76 = icmp ult i32 %75, 2
  br i1 %76, label %77, label %80

77:                                               ; preds = %72
  %78 = getelementptr inbounds i32, i32* %73, i64 1
  %79 = icmp eq i32* %78, %69
  br i1 %79, label %98, label %72

80:                                               ; preds = %72, %70
  %81 = phi i32* [ %65, %70 ], [ %73, %72 ]
  %82 = icmp eq i32* %81, %69
  br i1 %82, label %98, label %83

83:                                               ; preds = %80, %96
  %84 = phi i32* [ %89, %96 ], [ %81, %80 ]
  %85 = call { i32*, i8 } @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS2_S4_S5_EERKjSB_EENS_18HashTableAddResultIS6_jEEOT0_OT1_(%"class.WTF::HashTable"* nonnull %56, i32* dereferenceable(4) %84, i32* dereferenceable(4) %84) #7
  %86 = getelementptr inbounds i32, i32* %84, i64 1
  %87 = icmp eq i32* %86, %69
  br i1 %87, label %98, label %88

88:                                               ; preds = %83, %93
  %89 = phi i32* [ %94, %93 ], [ %86, %83 ]
  %90 = load i32, i32* %89, align 4
  %91 = add i32 %90, 1
  %92 = icmp ult i32 %91, 2
  br i1 %92, label %93, label %96

93:                                               ; preds = %88
  %94 = getelementptr inbounds i32, i32* %89, i64 1
  %95 = icmp eq i32* %94, %69
  br i1 %95, label %98, label %88

96:                                               ; preds = %88
  %97 = icmp eq i32* %89, %69
  br i1 %97, label %98, label %83

98:                                               ; preds = %77, %83, %96, %93, %22, %61, %80
  call void @_ZN5blink33FetchClientSettingsObjectSnapshotC2ERKNS_4KURLES3_13scoped_refptrIKNS_14SecurityOriginEEN7network5mojom14ReferrerPolicyERKN3WTF6StringENS_10HttpsStateENS_16AllowedByNosniff13MimeTypeCheckENS9_14IPAddressSpaceENS_5mojom21InsecureRequestPolicyENSB_7HashSetIjNSB_13AlreadyHashedENSB_10HashTraitsIjEENSB_18PartitionAllocatorEEE(%"class.blink::FetchClientSettingsObjectSnapshot"* %0, %"class.blink::KURL"* dereferenceable(112) %9, %"class.blink::KURL"* dereferenceable(112) %13, %"class.blink::SecurityOrigin"* %18, i32 %27, %"class.WTF::String"* nonnull dereferenceable(8) %3, i32 %38, i32 %42, i32 %46, i32 %50, %"class.WTF::HashSet"* nonnull %4)
  %99 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %4, i64 0, i32 0, i32 0
  %100 = load i32*, i32** %99, align 8
  %101 = icmp eq i32* %100, null
  br i1 %101, label %104, label %102, !prof !2

102:                                              ; preds = %98
  %103 = bitcast i32* %100 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %103) #7
  store i32* null, i32** %99, align 8
  br label %104

104:                                              ; preds = %98, %102
  %105 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %104
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #7
  br label %119

119:                                              ; preds = %104, %115, %118
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink33FetchClientSettingsObjectSnapshotC2ERKNS_4KURLES3_13scoped_refptrIKNS_14SecurityOriginEEN7network5mojom14ReferrerPolicyERKN3WTF6StringENS_10HttpsStateENS_16AllowedByNosniff13MimeTypeCheckENS9_14IPAddressSpaceENS_5mojom21InsecureRequestPolicyENSB_7HashSetIjNSB_13AlreadyHashedENSB_10HashTraitsIjEENSB_18PartitionAllocatorEEE(%"class.blink::FetchClientSettingsObjectSnapshot"*, %"class.blink::KURL"* dereferenceable(112), %"class.blink::KURL"* dereferenceable(112), %"class.blink::SecurityOrigin"*, i32, %"class.WTF::String"* nocapture readonly dereferenceable(8), i32, i32, i32, i32, %"class.WTF::HashSet"* nocapture) unnamed_addr #0 align 2 {
  %12 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink33FetchClientSettingsObjectSnapshotE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 1
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %13, %"class.blink::KURL"* dereferenceable(112) %1) #7
  %14 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 2
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %14, %"class.blink::KURL"* dereferenceable(112) %2) #7
  %15 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 3, i32 0
  store %"class.blink::SecurityOrigin"* %3, %"class.blink::SecurityOrigin"** %15, align 8
  %16 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %18) #7
  br label %19

19:                                               ; preds = %11, %17
  %20 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 4
  store i32 %4, i32* %20, align 8
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 5, i32 0, i32 0
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %23, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %24, label %42, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %42

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i33
  %34 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %33, i33 1) #7
  %35 = extractvalue { i33, i1 } %34, 1
  %36 = extractvalue { i33, i1 } %34, 0
  %37 = icmp slt i33 %36, 0
  %38 = or i1 %35, %37
  br i1 %38, label %39, label %40, !prof !3

39:                                               ; preds = %30
  tail call void @llvm.trap() #7
  unreachable

40:                                               ; preds = %30
  %41 = trunc i33 %36 to i32
  store i32 %41, i32* %31, align 4
  br label %42

42:                                               ; preds = %19, %25, %40
  %43 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 6
  store i32 %6, i32* %43, align 8
  %44 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 7
  store i32 %7, i32* %44, align 4
  %45 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 8
  store i32 %8, i32* %45, align 8
  %46 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 9
  store i32 %9, i32* %46, align 4
  %47 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 10
  %48 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 10, i32 0, i32 1
  %49 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 10, i32 0, i32 2
  %50 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 10, i32 0, i32 3
  %51 = bitcast %"class.WTF::HashSet"* %10 to i64*
  %52 = bitcast %"class.WTF::HashSet"* %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 20, i1 false) #7
  %53 = load i64, i64* %51, align 8
  %54 = bitcast %"class.WTF::HashSet"* %47 to i64*
  store atomic i64 0, i64* %51 monotonic, align 8
  store atomic i64 %53, i64* %54 monotonic, align 8
  %55 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %10, i64 0, i32 0, i32 1
  %56 = load i32, i32* %48, align 4
  %57 = load i32, i32* %55, align 4
  store i32 %57, i32* %48, align 4
  store i32 %56, i32* %55, align 4
  %58 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %10, i64 0, i32 0, i32 2
  %59 = load i32, i32* %49, align 4
  %60 = load i32, i32* %58, align 4
  store i32 %60, i32* %49, align 4
  store i32 %59, i32* %58, align 4
  %61 = load i32, i32* %50, align 8
  %62 = and i32 %61, 2147483647
  %63 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %10, i64 0, i32 0, i32 3
  %64 = load i32, i32* %63, align 8
  %65 = and i32 %64, 2147483647
  %66 = and i32 %61, -2147483648
  %67 = or i32 %65, %66
  store i32 %67, i32* %50, align 8
  %68 = load i32, i32* %63, align 8
  %69 = and i32 %68, -2147483648
  %70 = or i32 %69, %62
  store i32 %70, i32* %63, align 8
  br i1 %16, label %78, label %71

71:                                               ; preds = %42
  %72 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %72) #7
  %73 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %78

76:                                               ; preds = %71
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #7
  %77 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %77) #7
  br label %78

78:                                               ; preds = %42, %71, %76
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink33FetchClientSettingsObjectSnapshotC2ENSt3__110unique_ptrINS_40CrossThreadFetchClientSettingsObjectDataENS1_14default_deleteIS3_EEEE(%"class.blink::FetchClientSettingsObjectSnapshot"*, %"struct.blink::CrossThreadFetchClientSettingsObjectData"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::HashSet", align 8
  %4 = getelementptr inbounds %"struct.blink::CrossThreadFetchClientSettingsObjectData", %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %1, i64 0, i32 0
  %5 = getelementptr inbounds %"struct.blink::CrossThreadFetchClientSettingsObjectData", %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.blink::CrossThreadFetchClientSettingsObjectData", %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %1, i64 0, i32 2, i32 0
  %7 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %6, align 8
  %8 = icmp eq %"class.blink::SecurityOrigin"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %7, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %10) #7
  br label %11

11:                                               ; preds = %2, %9
  %12 = getelementptr inbounds %"struct.blink::CrossThreadFetchClientSettingsObjectData", %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %1, i64 0, i32 3
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"struct.blink::CrossThreadFetchClientSettingsObjectData", %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %1, i64 0, i32 4
  %15 = getelementptr inbounds %"struct.blink::CrossThreadFetchClientSettingsObjectData", %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %1, i64 0, i32 5
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"struct.blink::CrossThreadFetchClientSettingsObjectData", %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %1, i64 0, i32 6
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"struct.blink::CrossThreadFetchClientSettingsObjectData", %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %1, i64 0, i32 7
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"struct.blink::CrossThreadFetchClientSettingsObjectData", %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %1, i64 0, i32 8
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %3, i64 0, i32 0
  %24 = getelementptr inbounds %"struct.blink::CrossThreadFetchClientSettingsObjectData", %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %1, i64 0, i32 9, i32 0, i32 2
  %25 = bitcast %"class.WTF::HashSet"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 20, i1 false) #7
  %26 = load i32, i32* %24, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %65, label %28

28:                                               ; preds = %11
  call void @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* nonnull %23, i32 %26) #7
  %29 = load i32, i32* %24, align 4
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"struct.blink::CrossThreadFetchClientSettingsObjectData", %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %1, i64 0, i32 9, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = getelementptr inbounds %"struct.blink::CrossThreadFetchClientSettingsObjectData", %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %1, i64 0, i32 9, i32 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i32, i32* %32, i64 %35
  br i1 %30, label %65, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %47, label %39

39:                                               ; preds = %37, %44
  %40 = phi i32* [ %45, %44 ], [ %32, %37 ]
  %41 = load i32, i32* %40, align 4
  %42 = add i32 %41, 1
  %43 = icmp ult i32 %42, 2
  br i1 %43, label %44, label %47

44:                                               ; preds = %39
  %45 = getelementptr inbounds i32, i32* %40, i64 1
  %46 = icmp eq i32* %45, %36
  br i1 %46, label %65, label %39

47:                                               ; preds = %39, %37
  %48 = phi i32* [ %32, %37 ], [ %40, %39 ]
  %49 = icmp eq i32* %48, %36
  br i1 %49, label %65, label %50

50:                                               ; preds = %47, %63
  %51 = phi i32* [ %56, %63 ], [ %48, %47 ]
  %52 = call { i32*, i8 } @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS2_S4_S5_EERKjSB_EENS_18HashTableAddResultIS6_jEEOT0_OT1_(%"class.WTF::HashTable"* nonnull %23, i32* dereferenceable(4) %51, i32* dereferenceable(4) %51) #7
  %53 = getelementptr inbounds i32, i32* %51, i64 1
  %54 = icmp eq i32* %53, %36
  br i1 %54, label %65, label %55

55:                                               ; preds = %50, %60
  %56 = phi i32* [ %61, %60 ], [ %53, %50 ]
  %57 = load i32, i32* %56, align 4
  %58 = add i32 %57, 1
  %59 = icmp ult i32 %58, 2
  br i1 %59, label %60, label %63

60:                                               ; preds = %55
  %61 = getelementptr inbounds i32, i32* %56, i64 1
  %62 = icmp eq i32* %61, %36
  br i1 %62, label %65, label %55

63:                                               ; preds = %55
  %64 = icmp eq i32* %56, %36
  br i1 %64, label %65, label %50

65:                                               ; preds = %44, %50, %63, %60, %11, %28, %47
  call void @_ZN5blink33FetchClientSettingsObjectSnapshotC2ERKNS_4KURLES3_13scoped_refptrIKNS_14SecurityOriginEEN7network5mojom14ReferrerPolicyERKN3WTF6StringENS_10HttpsStateENS_16AllowedByNosniff13MimeTypeCheckENS9_14IPAddressSpaceENS_5mojom21InsecureRequestPolicyENSB_7HashSetIjNSB_13AlreadyHashedENSB_10HashTraitsIjEENSB_18PartitionAllocatorEEE(%"class.blink::FetchClientSettingsObjectSnapshot"* %0, %"class.blink::KURL"* dereferenceable(112) %4, %"class.blink::KURL"* dereferenceable(112) %5, %"class.blink::SecurityOrigin"* %7, i32 %13, %"class.WTF::String"* dereferenceable(8) %14, i32 %16, i32 %18, i32 %20, i32 %22, %"class.WTF::HashSet"* nonnull %3)
  %66 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %3, i64 0, i32 0, i32 0
  %67 = load i32*, i32** %66, align 8
  %68 = icmp eq i32* %67, null
  br i1 %68, label %71, label %69, !prof !2

69:                                               ; preds = %65
  %70 = bitcast i32* %67 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %70) #7
  store i32* null, i32** %66, align 8
  br label %71

71:                                               ; preds = %65, %69
  %72 = icmp eq %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %1, null
  br i1 %72, label %108, label %73

73:                                               ; preds = %71
  %74 = getelementptr inbounds %"struct.blink::CrossThreadFetchClientSettingsObjectData", %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %1, i64 0, i32 9, i32 0, i32 0
  %75 = load i32*, i32** %74, align 8
  %76 = icmp eq i32* %75, null
  br i1 %76, label %79, label %77, !prof !2

77:                                               ; preds = %73
  %78 = bitcast i32* %75 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %78) #7
  store i32* null, i32** %74, align 8
  br label %79

79:                                               ; preds = %77, %73
  %80 = getelementptr inbounds %"struct.blink::CrossThreadFetchClientSettingsObjectData", %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %1, i64 0, i32 4, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %96, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #7
  br label %96

96:                                               ; preds = %95, %92, %79
  %97 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %6, align 8
  %98 = icmp eq %"class.blink::SecurityOrigin"* %97, null
  br i1 %98, label %106, label %99

99:                                               ; preds = %96
  %100 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %97, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %100) #7
  %101 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %106

104:                                              ; preds = %99
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %97) #7
  %105 = bitcast %"class.blink::SecurityOrigin"* %97 to i8*
  call void @free(i8* %105) #7
  br label %106

106:                                              ; preds = %96, %99, %104
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %5) #7
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %4) #7
  %107 = getelementptr inbounds %"struct.blink::CrossThreadFetchClientSettingsObjectData", %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %1, i64 0, i32 0, i32 0
  call void @free(i8* %107) #7
  br label %108

108:                                              ; preds = %71, %106
  ret void
}

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink33FetchClientSettingsObjectSnapshotD2Ev(%"class.blink::FetchClientSettingsObjectSnapshot"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink33FetchClientSettingsObjectSnapshotE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 10, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %1
  %7 = bitcast i32* %4 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %7) #7
  store i32* null, i32** %3, align 8
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 5, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #7
  br label %25

25:                                               ; preds = %8, %21, %24
  %26 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 3, i32 0
  %27 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %26, align 8
  %28 = icmp eq %"class.blink::SecurityOrigin"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #7
  %31 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %27) #7
  %35 = bitcast %"class.blink::SecurityOrigin"* %27 to i8*
  tail call void @free(i8* %35) #7
  br label %36

36:                                               ; preds = %25, %29, %34
  %37 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 2
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %37) #7
  %38 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 1
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %38) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink33FetchClientSettingsObjectSnapshotD0Ev(%"class.blink::FetchClientSettingsObjectSnapshot"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5blink33FetchClientSettingsObjectSnapshotD2Ev(%"class.blink::FetchClientSettingsObjectSnapshot"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink33FetchClientSettingsObjectSnapshot15GlobalObjectUrlEv(%"class.blink::FetchClientSettingsObjectSnapshot"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 1
  ret %"class.blink::KURL"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink33FetchClientSettingsObjectSnapshot7BaseUrlEv(%"class.blink::FetchClientSettingsObjectSnapshot"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 2
  ret %"class.blink::KURL"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::SecurityOrigin"* @_ZNK5blink33FetchClientSettingsObjectSnapshot17GetSecurityOriginEv(%"class.blink::FetchClientSettingsObjectSnapshot"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 3, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  ret %"class.blink::SecurityOrigin"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink33FetchClientSettingsObjectSnapshot17GetReferrerPolicyEv(%"class.blink::FetchClientSettingsObjectSnapshot"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink33FetchClientSettingsObjectSnapshot19GetOutgoingReferrerEv(%"class.blink::FetchClientSettingsObjectSnapshot"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #7
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !3

19:                                               ; preds = %10
  tail call void @llvm.trap() #7
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %1, %5, %20
  ret %"class.WTF::StringImpl"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink33FetchClientSettingsObjectSnapshot13GetHttpsStateEv(%"class.blink::FetchClientSettingsObjectSnapshot"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 6
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink33FetchClientSettingsObjectSnapshot35MimeTypeCheckForClassicWorkerScriptEv(%"class.blink::FetchClientSettingsObjectSnapshot"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 7
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink33FetchClientSettingsObjectSnapshot15GetAddressSpaceEv(%"class.blink::FetchClientSettingsObjectSnapshot"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 8
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink33FetchClientSettingsObjectSnapshot25GetInsecureRequestsPolicyEv(%"class.blink::FetchClientSettingsObjectSnapshot"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 9
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.WTF::HashSet"* @_ZNK5blink33FetchClientSettingsObjectSnapshot32GetUpgradeInsecureNavigationsSetEv(%"class.blink::FetchClientSettingsObjectSnapshot"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 10
  ret %"class.WTF::HashSet"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink25FetchClientSettingsObject5TraceEPNS_7VisitorE(%"class.blink::FetchClientSettingsObject"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %32

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0)) #7
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #7
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 2
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #7
  call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 0, i64 %28, i1 false) #7
  %30 = bitcast i8* %29 to i32*
  %31 = call i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE8RehashToEPjjS7_(%"class.WTF::HashTable"* %0, i32* %30, i32 %17, i32* null) #7
  br label %32

32:                                               ; preds = %26, %16
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE8RehashToEPjjS7_(%"class.WTF::HashTable"*, i32*, i32, i32*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i32* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load i32*, i32** %9, align 8
  %17 = ptrtoint i32* %16 to i64
  br label %31

18:                                               ; preds = %99
  %19 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %100, %18 ]
  %23 = phi i32* [ null, %10 ], [ %103, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #7
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret i32* %23

31:                                               ; preds = %13, %99
  %32 = phi i64 [ %17, %13 ], [ %100, %99 ]
  %33 = phi i32 [ %7, %13 ], [ %101, %99 ]
  %34 = phi i32* [ %16, %13 ], [ %102, %99 ]
  %35 = phi i32* [ null, %13 ], [ %103, %99 ]
  %36 = phi i32 [ 0, %13 ], [ %104, %99 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i32, i32* %34, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %39, 1
  %41 = icmp ult i32 %40, 2
  br i1 %41, label %99, label %42

42:                                               ; preds = %31
  %43 = and i32 %39, %14
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds i32, i32* %1, i64 %44
  %46 = ptrtoint i32* %45 to i64
  %47 = load i32, i32* %45, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %66, label %49

49:                                               ; preds = %42
  %50 = xor i32 %39, -1
  %51 = lshr i32 %39, 23
  %52 = add i32 %51, %50
  %53 = shl i32 %52, 12
  %54 = xor i32 %53, %52
  %55 = lshr i32 %54, 7
  %56 = xor i32 %55, %54
  %57 = shl i32 %56, 2
  %58 = xor i32 %57, %56
  %59 = lshr i32 %58, 20
  %60 = xor i32 %59, %58
  %61 = or i32 %60, 1
  %62 = zext i32 %61 to i64
  br label %72

63:                                               ; preds = %79
  %64 = ptrtoint i32* %86 to i64
  %65 = inttoptr i64 %81 to i32*
  br label %66

66:                                               ; preds = %63, %42
  %67 = phi i64 [ %64, %63 ], [ %46, %42 ]
  %68 = phi i32* [ %65, %63 ], [ null, %42 ]
  %69 = icmp eq i32* %68, null
  %70 = ptrtoint i32* %68 to i64
  %71 = select i1 %69, i64 %67, i64 %70
  br label %90

72:                                               ; preds = %79, %49
  %73 = phi i64 [ 0, %49 ], [ %81, %79 ]
  %74 = phi i32 [ %47, %49 ], [ %88, %79 ]
  %75 = phi i64 [ %46, %49 ], [ %87, %79 ]
  %76 = phi i64 [ %44, %49 ], [ %85, %79 ]
  %77 = phi i64 [ 0, %49 ], [ %83, %79 ]
  %78 = icmp eq i32 %74, %39
  br i1 %78, label %90, label %79

79:                                               ; preds = %72
  %80 = icmp eq i32 %74, -1
  %81 = select i1 %80, i64 %75, i64 %73
  %82 = icmp eq i64 %77, 0
  %83 = select i1 %82, i64 %62, i64 %77
  %84 = add i64 %83, %76
  %85 = and i64 %84, %15
  %86 = getelementptr inbounds i32, i32* %1, i64 %85
  %87 = ptrtoint i32* %86 to i64
  %88 = load i32, i32* %86, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %63, label %72

90:                                               ; preds = %72, %66
  %91 = phi i64 [ %71, %66 ], [ %75, %72 ]
  %92 = inttoptr i64 %91 to i32*
  store i32 %39, i32* %92, align 4
  %93 = load i32*, i32** %9, align 8
  %94 = getelementptr inbounds i32, i32* %93, i64 %37
  %95 = icmp eq i32* %94, %3
  %96 = select i1 %95, i32* %92, i32* %35
  %97 = load i32, i32* %6, align 8
  %98 = ptrtoint i32* %93 to i64
  br label %99

99:                                               ; preds = %31, %90
  %100 = phi i64 [ %32, %31 ], [ %98, %90 ]
  %101 = phi i32 [ %33, %31 ], [ %97, %90 ]
  %102 = phi i32* [ %34, %31 ], [ %93, %90 ]
  %103 = phi i32* [ %35, %31 ], [ %96, %90 ]
  %104 = add i32 %36, 1
  %105 = icmp eq i32 %104, %101
  br i1 %105, label %18, label %31
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i32*, i8 } @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS2_S4_S5_EERKjSB_EENS_18HashTableAddResultIS6_jEEOT0_OT1_(%"class.WTF::HashTable"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = icmp eq i32* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE6ExpandEPj(%"class.WTF::HashTable"* %0, i32* null)
  %9 = load i32*, i32** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi i32* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = and i32 %16, %14
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds i32, i32* %11, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %62, label %22

22:                                               ; preds = %10
  %23 = xor i32 %16, -1
  %24 = lshr i32 %16, 23
  %25 = add i32 %24, %23
  %26 = shl i32 %25, 12
  %27 = xor i32 %26, %25
  %28 = lshr i32 %27, 7
  %29 = xor i32 %28, %27
  %30 = shl i32 %29, 2
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 20
  %33 = xor i32 %32, %31
  %34 = or i32 %33, 1
  %35 = zext i32 %34 to i64
  br label %36

36:                                               ; preds = %22, %43
  %37 = phi i32 [ %20, %22 ], [ %51, %43 ]
  %38 = phi i32* [ %19, %22 ], [ %50, %43 ]
  %39 = phi i32* [ null, %22 ], [ %45, %43 ]
  %40 = phi i64 [ %18, %22 ], [ %49, %43 ]
  %41 = phi i64 [ 0, %22 ], [ %47, %43 ]
  %42 = icmp eq i32 %37, %16
  br i1 %42, label %76, label %43

43:                                               ; preds = %36
  %44 = icmp eq i32 %37, -1
  %45 = select i1 %44, i32* %38, i32* %39
  %46 = icmp eq i64 %41, 0
  %47 = select i1 %46, i64 %35, i64 %41
  %48 = add i64 %47, %40
  %49 = and i64 %48, %15
  %50 = getelementptr inbounds i32, i32* %11, i64 %49
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %36

53:                                               ; preds = %43
  %54 = icmp eq i32* %45, null
  br i1 %54, label %62, label %55

55:                                               ; preds = %53
  store i32 0, i32* %45, align 4
  %56 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 2147483647
  %59 = and i32 %58, 2147483647
  %60 = and i32 %57, -2147483648
  %61 = or i32 %59, %60
  store i32 %61, i32* %56, align 8
  br label %62

62:                                               ; preds = %10, %53, %55
  %63 = phi i32* [ %45, %55 ], [ %50, %53 ], [ %19, %10 ]
  %64 = load i32, i32* %2, align 4
  store i32 %64, i32* %63, align 4
  %65 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = add i32 %66, 1
  store i32 %67, i32* %65, align 4
  %68 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = add i32 %69, %67
  %71 = shl i32 %70, 1
  %72 = load i32, i32* %12, align 8
  %73 = icmp ult i32 %71, %72
  br i1 %73, label %76, label %74

74:                                               ; preds = %62
  %75 = tail call i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE6ExpandEPj(%"class.WTF::HashTable"* %0, i32* %63)
  br label %76

76:                                               ; preds = %36, %62, %74
  %77 = phi i8 [ 1, %62 ], [ 1, %74 ], [ 0, %36 ]
  %78 = phi i32* [ %63, %62 ], [ %75, %74 ], [ %38, %36 ]
  %79 = insertvalue { i32*, i8 } undef, i32* %78, 0
  %80 = insertvalue { i32*, i8 } %79, i8 %77, 1
  ret { i32*, i8 } %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE6ExpandEPj(%"class.WTF::HashTable"*, i32*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #7
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #7
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %22, i8* %23) #7
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #7
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #7
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #7
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 2
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #7
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #7
  %36 = bitcast i8* %35 to i32*
  %37 = call i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE8RehashToEPjjS7_(%"class.WTF::HashTable"* %0, i32* %36, i32 %32, i32* %1) #7
  ret i32* %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #7
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #7
  %11 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %11) #7
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #7
  br label %29

29:                                               ; preds = %12, %25, %28
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #7
  br label %46

46:                                               ; preds = %29, %42, %45
  %47 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #7
  br label %63

63:                                               ; preds = %46, %59, %62
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
