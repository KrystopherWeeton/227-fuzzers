; ModuleID = '../../third_party/skia/src/effects/SkOpPathEffect.cpp'
source_filename = "../../third_party/skia/src/effects/SkOpPathEffect.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkOpPE = type <{ %class.SkPathEffectBase.base, [4 x i8], %class.sk_sp, %class.sk_sp, i32, [4 x i8] }>
%class.SkPathEffectBase.base = type { %class.SkPathEffect.base }
%class.SkPathEffect.base = type { %class.SkFlattenable.base }
%class.sk_sp = type { %class.SkPathEffect* }
%class.SkMatrixPE = type { %class.SkPathEffectBase.base, %class.SkMatrix, [4 x i8] }
%class.SkMatrix = type { [9 x float], i32 }
%class.SkStrokePE = type { %class.SkPathEffectBase.base, float, float, i8, i32, [4 x i8] }
%class.SkPath = type <{ %class.sk_sp.1, i32, %"struct.std::__1::atomic.4", %"struct.std::__1::atomic.4", i8, i8 }>
%class.sk_sp.1 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.2, %class.SkTDArray.3, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.2 = type { i8*, i32, i32 }
%class.SkTDArray.3 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.9 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.4" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.9 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.10", [3 x i8] }
%"struct.std::__1::atomic.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl.12" }
%"struct.std::__1::__cxx_atomic_impl.12" = type { %"struct.std::__1::__cxx_atomic_base_impl.13" }
%"struct.std::__1::__cxx_atomic_base_impl.13" = type { i8 }
%"struct.std::__1::atomic.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl.7" }
%"struct.std::__1::__cxx_atomic_impl.7" = type { %"struct.std::__1::__cxx_atomic_base_impl.8" }
%"struct.std::__1::__cxx_atomic_base_impl.8" = type { i8 }
%class.SkStrokeRec = type { float, float, float, i32 }
%class.SkPathEffectBase = type { %class.SkPathEffect.base, [4 x i8] }
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp.14*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.14*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.14*, %class.SkTypeface*, i8*)*, i8* }
%class.sk_sp.14 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.15, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.15 = type { %"struct.std::__1::atomic" }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.10", [7 x i8] }>
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.16, i32, i32 }
%class.sk_sp.16 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.17, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.17 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.22 = type { %class.SkFlattenable* }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap, i32, [4 x i8], %class.sk_sp.19*, i32, [4 x i8], {}**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, void (%class.sk_sp.22*, %class.SkReadBuffer*)* }
%class.sk_sp.19 = type { %class.SkTypeface* }
%struct.SkDeserialProcs = type { {}*, i8*, {}*, i8*, void (%class.sk_sp.19*, i8*, i64, i8*)*, i8* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkStrokeAndFillPE = type { %class.SkPathEffectBase.base, [4 x i8] }
%"class.SkPathEffectBase::PointData" = type { i32, %struct.SkPoint*, i32, %struct.SkPoint, %struct.SkRect, [4 x i8], %class.SkPath, %class.SkPath, %class.SkPath }
%"struct.SkPathEffect::DashInfo" = type { float*, i32, float }

$_ZN17SkStrokeAndFillPED0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK17SkStrokeAndFillPE10getFactoryEv = comdat any

$_ZNK17SkStrokeAndFillPE11getTypeNameEv = comdat any

$_ZNK16SkPathEffectBase18getFlattenableTypeEv = comdat any

$_ZNK16SkPathEffectBase10onAsPointsEPNS_9PointDataERK6SkPathRK11SkStrokeRecRK8SkMatrixPK6SkRect = comdat any

$_ZNK16SkPathEffectBase9onAsADashEPN12SkPathEffect8DashInfoE = comdat any

$_ZNK17SkStrokeAndFillPE17computeFastBoundsEP6SkRect = comdat any

$_ZN6SkOpPED2Ev = comdat any

$_ZN6SkOpPED0Ev = comdat any

$_ZNK6SkOpPE10getFactoryEv = comdat any

$_ZNK6SkOpPE11getTypeNameEv = comdat any

$_ZN10SkMatrixPED0Ev = comdat any

$_ZNK10SkMatrixPE10getFactoryEv = comdat any

$_ZNK10SkMatrixPE11getTypeNameEv = comdat any

$_ZNK10SkMatrixPE17computeFastBoundsEP6SkRect = comdat any

$_ZN10SkStrokePED0Ev = comdat any

$_ZNK10SkStrokePE10getFactoryEv = comdat any

$_ZNK10SkStrokePE11getTypeNameEv = comdat any

$_ZN12SkRefCntBaseD2Ev = comdat any

@_ZTV6SkOpPE = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkOpPE*)* @_ZN6SkOpPED2Ev to i8*), i8* bitcast (void (%class.SkOpPE*)* @_ZN6SkOpPED0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.22*, %class.SkReadBuffer*)* (%class.SkOpPE*)* @_ZNK6SkOpPE10getFactoryEv to i8*), i8* bitcast (i8* (%class.SkOpPE*)* @_ZNK6SkOpPE11getTypeNameEv to i8*), i8* bitcast (void (%class.SkOpPE*, %class.SkWriteBuffer*)* @_ZNK6SkOpPE7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkPathEffectBase*)* @_ZNK16SkPathEffectBase18getFlattenableTypeEv to i8*), i8* bitcast (i1 (%class.SkOpPE*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)* @_ZNK6SkOpPE12onFilterPathEP6SkPathRKS0_P11SkStrokeRecPK6SkRect to i8*), i8* bitcast (i1 (%class.SkPathEffectBase*, %"class.SkPathEffectBase::PointData"*, %class.SkPath*, %class.SkStrokeRec*, %class.SkMatrix*, %struct.SkRect*)* @_ZNK16SkPathEffectBase10onAsPointsEPNS_9PointDataERK6SkPathRK11SkStrokeRecRK8SkMatrixPK6SkRect to i8*), i8* bitcast (i32 (%class.SkPathEffectBase*, %"struct.SkPathEffect::DashInfo"*)* @_ZNK16SkPathEffectBase9onAsADashEPN12SkPathEffect8DashInfoE to i8*), i8* bitcast (i1 (%class.SkOpPE*, %struct.SkRect*)* @_ZNK6SkOpPE17computeFastBoundsEP6SkRect to i8*)] }, align 8
@_ZTV10SkMatrixPE = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRefCntBase*)* @_ZN12SkRefCntBaseD2Ev to i8*), i8* bitcast (void (%class.SkMatrixPE*)* @_ZN10SkMatrixPED0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.22*, %class.SkReadBuffer*)* (%class.SkMatrixPE*)* @_ZNK10SkMatrixPE10getFactoryEv to i8*), i8* bitcast (i8* (%class.SkMatrixPE*)* @_ZNK10SkMatrixPE11getTypeNameEv to i8*), i8* bitcast (void (%class.SkMatrixPE*, %class.SkWriteBuffer*)* @_ZNK10SkMatrixPE7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkPathEffectBase*)* @_ZNK16SkPathEffectBase18getFlattenableTypeEv to i8*), i8* bitcast (i1 (%class.SkMatrixPE*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)* @_ZNK10SkMatrixPE12onFilterPathEP6SkPathRKS0_P11SkStrokeRecPK6SkRect to i8*), i8* bitcast (i1 (%class.SkPathEffectBase*, %"class.SkPathEffectBase::PointData"*, %class.SkPath*, %class.SkStrokeRec*, %class.SkMatrix*, %struct.SkRect*)* @_ZNK16SkPathEffectBase10onAsPointsEPNS_9PointDataERK6SkPathRK11SkStrokeRecRK8SkMatrixPK6SkRect to i8*), i8* bitcast (i32 (%class.SkPathEffectBase*, %"struct.SkPathEffect::DashInfo"*)* @_ZNK16SkPathEffectBase9onAsADashEPN12SkPathEffect8DashInfoE to i8*), i8* bitcast (i1 (%class.SkMatrixPE*, %struct.SkRect*)* @_ZNK10SkMatrixPE17computeFastBoundsEP6SkRect to i8*)] }, align 8
@_ZTV10SkStrokePE = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRefCntBase*)* @_ZN12SkRefCntBaseD2Ev to i8*), i8* bitcast (void (%class.SkStrokePE*)* @_ZN10SkStrokePED0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.22*, %class.SkReadBuffer*)* (%class.SkStrokePE*)* @_ZNK10SkStrokePE10getFactoryEv to i8*), i8* bitcast (i8* (%class.SkStrokePE*)* @_ZNK10SkStrokePE11getTypeNameEv to i8*), i8* bitcast (void (%class.SkStrokePE*, %class.SkWriteBuffer*)* @_ZNK10SkStrokePE7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkPathEffectBase*)* @_ZNK16SkPathEffectBase18getFlattenableTypeEv to i8*), i8* bitcast (i1 (%class.SkStrokePE*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)* @_ZNK10SkStrokePE12onFilterPathEP6SkPathRKS0_P11SkStrokeRecPK6SkRect to i8*), i8* bitcast (i1 (%class.SkPathEffectBase*, %"class.SkPathEffectBase::PointData"*, %class.SkPath*, %class.SkStrokeRec*, %class.SkMatrix*, %struct.SkRect*)* @_ZNK16SkPathEffectBase10onAsPointsEPNS_9PointDataERK6SkPathRK11SkStrokeRecRK8SkMatrixPK6SkRect to i8*), i8* bitcast (i32 (%class.SkPathEffectBase*, %"struct.SkPathEffect::DashInfo"*)* @_ZNK16SkPathEffectBase9onAsADashEPN12SkPathEffect8DashInfoE to i8*), i8* bitcast (i1 (%class.SkStrokePE*, %struct.SkRect*)* @_ZNK10SkStrokePE17computeFastBoundsEP6SkRect to i8*)] }, align 8
@_ZZN25SkStrokeAndFillPathEffect4MakeEvE13strokeAndFill = internal unnamed_addr global %class.SkPathEffect* null, align 8
@_ZGVZN25SkStrokeAndFillPathEffect4MakeEvE13strokeAndFill = internal global i64 0, align 8
@_ZTV17SkStrokeAndFillPE = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRefCntBase*)* @_ZN12SkRefCntBaseD2Ev to i8*), i8* bitcast (void (%class.SkStrokeAndFillPE*)* @_ZN17SkStrokeAndFillPED0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.22*, %class.SkReadBuffer*)* (%class.SkStrokeAndFillPE*)* @_ZNK17SkStrokeAndFillPE10getFactoryEv to i8*), i8* bitcast (i8* (%class.SkStrokeAndFillPE*)* @_ZNK17SkStrokeAndFillPE11getTypeNameEv to i8*), i8* bitcast (void (%class.SkStrokeAndFillPE*, %class.SkWriteBuffer*)* @_ZNK17SkStrokeAndFillPE7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkPathEffectBase*)* @_ZNK16SkPathEffectBase18getFlattenableTypeEv to i8*), i8* bitcast (i1 (%class.SkStrokeAndFillPE*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)* @_ZNK17SkStrokeAndFillPE12onFilterPathEP6SkPathRKS0_P11SkStrokeRecPK6SkRect to i8*), i8* bitcast (i1 (%class.SkPathEffectBase*, %"class.SkPathEffectBase::PointData"*, %class.SkPath*, %class.SkStrokeRec*, %class.SkMatrix*, %struct.SkRect*)* @_ZNK16SkPathEffectBase10onAsPointsEPNS_9PointDataERK6SkPathRK11SkStrokeRecRK8SkMatrixPK6SkRect to i8*), i8* bitcast (i32 (%class.SkPathEffectBase*, %"struct.SkPathEffect::DashInfo"*)* @_ZNK16SkPathEffectBase9onAsADashEPN12SkPathEffect8DashInfoE to i8*), i8* bitcast (i1 (%class.SkStrokeAndFillPE*, %struct.SkRect*)* @_ZNK17SkStrokeAndFillPE17computeFastBoundsEP6SkRect to i8*)] }, align 8
@.str = private unnamed_addr constant [18 x i8] c"SkStrokeAndFillPE\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"SkOpPE\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"SkMatrixPE\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"SkStrokePE\00", align 1

@_ZN6SkOpPEC1E5sk_spI12SkPathEffectES2_8SkPathOp = hidden unnamed_addr alias void (%class.SkOpPE*, %class.sk_sp*, %class.sk_sp*, i32), void (%class.SkOpPE*, %class.sk_sp*, %class.sk_sp*, i32)* @_ZN6SkOpPEC2E5sk_spI12SkPathEffectES2_8SkPathOp
@_ZN10SkMatrixPEC1ERK8SkMatrix = hidden unnamed_addr alias void (%class.SkMatrixPE*, %class.SkMatrix*), void (%class.SkMatrixPE*, %class.SkMatrix*)* @_ZN10SkMatrixPEC2ERK8SkMatrix
@_ZN10SkStrokePEC1EfN7SkPaint4JoinENS0_3CapEf = hidden unnamed_addr alias void (%class.SkStrokePE*, float, i8, i32, float), void (%class.SkStrokePE*, float, i8, i32, float)* @_ZN10SkStrokePEC2EfN7SkPaint4JoinENS0_3CapEf

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkMergePathEffect4MakeE5sk_spI12SkPathEffectES2_8SkPathOp(%class.sk_sp* noalias nocapture sret, %class.sk_sp* nocapture, %class.sk_sp* nocapture, i32) local_unnamed_addr #0 align 2 {
  %5 = tail call i8* @_Znwm(i64 40) #12
  %6 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %7 = bitcast %class.sk_sp* %1 to i64*
  %8 = load i64, i64* %7, align 8
  store %class.SkPathEffect* null, %class.SkPathEffect** %6, align 8
  %9 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %2, i64 0, i32 0
  %10 = bitcast %class.sk_sp* %2 to i64*
  %11 = load i64, i64* %10, align 8
  store %class.SkPathEffect* null, %class.SkPathEffect** %9, align 8
  %12 = getelementptr inbounds i8, i8* %5, i64 8
  %13 = bitcast i8* %12 to i32*
  store i32 1, i32* %13, align 4
  %14 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV6SkOpPE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds i8, i8* %5, i64 16
  %16 = bitcast i8* %15 to i64*
  store i64 %8, i64* %16, align 8
  %17 = getelementptr inbounds i8, i8* %5, i64 24
  %18 = bitcast i8* %17 to i64*
  store i64 %11, i64* %18, align 8
  %19 = getelementptr inbounds i8, i8* %5, i64 32
  %20 = bitcast i8* %19 to i32*
  store i32 %3, i32* %20, align 8
  %21 = bitcast %class.sk_sp* %0 to i8**
  store i8* %5, i8** %21, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6SkOpPEC2E5sk_spI12SkPathEffectES2_8SkPathOp(%class.SkOpPE* nocapture, %class.sk_sp* nocapture, %class.sk_sp* nocapture, i32) unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %class.SkOpPE, %class.SkOpPE* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %5, align 4
  %6 = getelementptr inbounds %class.SkOpPE, %class.SkOpPE* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV6SkOpPE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %class.SkOpPE, %class.SkOpPE* %0, i64 0, i32 2
  %8 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %9 = bitcast %class.sk_sp* %1 to i64*
  %10 = load i64, i64* %9, align 8
  store %class.SkPathEffect* null, %class.SkPathEffect** %8, align 8
  %11 = bitcast %class.sk_sp* %7 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %class.SkOpPE, %class.SkOpPE* %0, i64 0, i32 3
  %13 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %2, i64 0, i32 0
  %14 = bitcast %class.sk_sp* %2 to i64*
  %15 = load i64, i64* %14, align 8
  store %class.SkPathEffect* null, %class.SkPathEffect** %13, align 8
  %16 = bitcast %class.sk_sp* %12 to i64*
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %class.SkOpPE, %class.SkOpPE* %0, i64 0, i32 4
  store i32 %3, i32* %17, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6SkOpPE12onFilterPathEP6SkPathRKS0_P11SkStrokeRecPK6SkRect(%class.SkOpPE* nocapture readonly, %class.SkPath*, %class.SkPath* dereferenceable(16), %class.SkStrokeRec*, %struct.SkRect*) unnamed_addr #0 align 2 {
  %6 = alloca %class.SkPath, align 8
  %7 = alloca %class.SkPath, align 8
  %8 = bitcast %class.SkPath* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #13
  %9 = bitcast %class.SkPath* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %6) #13
  %10 = bitcast %class.SkPath* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #13
  %11 = bitcast %class.SkPath* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %7) #13
  %12 = getelementptr inbounds %class.SkOpPE, %class.SkOpPE* %0, i64 0, i32 2, i32 0
  %13 = load %class.SkPathEffect*, %class.SkPathEffect** %12, align 8
  %14 = icmp eq %class.SkPathEffect* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %5
  %16 = call zeroext i1 @_ZNK12SkPathEffect10filterPathEP6SkPathRKS0_P11SkStrokeRecPK6SkRect(%class.SkPathEffect* nonnull %13, %class.SkPath* nonnull %6, %class.SkPath* dereferenceable(16) %2, %class.SkStrokeRec* %3, %struct.SkRect* %4) #13
  br i1 %16, label %19, label %31

17:                                               ; preds = %5
  %18 = call dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath* nonnull %6, %class.SkPath* dereferenceable(16) %2) #13
  br label %19

19:                                               ; preds = %15, %17
  %20 = getelementptr inbounds %class.SkOpPE, %class.SkOpPE* %0, i64 0, i32 3, i32 0
  %21 = load %class.SkPathEffect*, %class.SkPathEffect** %20, align 8
  %22 = icmp eq %class.SkPathEffect* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = call zeroext i1 @_ZNK12SkPathEffect10filterPathEP6SkPathRKS0_P11SkStrokeRecPK6SkRect(%class.SkPathEffect* nonnull %21, %class.SkPath* nonnull %7, %class.SkPath* dereferenceable(16) %2, %class.SkStrokeRec* %3, %struct.SkRect* %4) #13
  br i1 %24, label %27, label %31

25:                                               ; preds = %19
  %26 = call dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath* nonnull %7, %class.SkPath* dereferenceable(16) %2) #13
  br label %27

27:                                               ; preds = %23, %25
  %28 = getelementptr inbounds %class.SkOpPE, %class.SkOpPE* %0, i64 0, i32 4
  %29 = load i32, i32* %28, align 8
  %30 = call zeroext i1 @_Z2OpRK6SkPathS1_8SkPathOpPS_(%class.SkPath* nonnull dereferenceable(16) %6, %class.SkPath* nonnull dereferenceable(16) %7, i32 %29, %class.SkPath* %1) #13
  br label %31

31:                                               ; preds = %23, %15, %27
  %32 = phi i1 [ %30, %27 ], [ false, %15 ], [ false, %23 ]
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #13
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #13
  ret i1 %32
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN6SkPathC1Ev(%class.SkPath*) unnamed_addr #4

declare zeroext i1 @_ZNK12SkPathEffect10filterPathEP6SkPathRKS0_P11SkStrokeRecPK6SkRect(%class.SkPathEffect*, %class.SkPath*, %class.SkPath* dereferenceable(16), %class.SkStrokeRec*, %struct.SkRect*) local_unnamed_addr #4

declare dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) local_unnamed_addr #4

declare zeroext i1 @_Z2OpRK6SkPathS1_8SkPathOpPS_(%class.SkPath* dereferenceable(16), %class.SkPath* dereferenceable(16), i32, %class.SkPath*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6SkOpPE17computeFastBoundsEP6SkRect(%class.SkOpPE* nocapture readonly, %struct.SkRect*) unnamed_addr #0 align 2 {
  %3 = alloca %struct.SkRect, align 4
  %4 = icmp eq %struct.SkRect* %1, null
  br i1 %4, label %5, label %27

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.SkOpPE, %class.SkOpPE* %0, i64 0, i32 2, i32 0
  %7 = load %class.SkPathEffect*, %class.SkPathEffect** %6, align 8
  %8 = icmp eq %class.SkPathEffect* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %5
  %10 = bitcast %class.SkPathEffect* %7 to %class.SkPathEffectBase*
  %11 = bitcast %class.SkPathEffect* %7 to i1 (%class.SkPathEffectBase*, %struct.SkRect*)***
  %12 = load i1 (%class.SkPathEffectBase*, %struct.SkRect*)**, i1 (%class.SkPathEffectBase*, %struct.SkRect*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%class.SkPathEffectBase*, %struct.SkRect*)*, i1 (%class.SkPathEffectBase*, %struct.SkRect*)** %12, i64 10
  %14 = load i1 (%class.SkPathEffectBase*, %struct.SkRect*)*, i1 (%class.SkPathEffectBase*, %struct.SkRect*)** %13, align 8
  %15 = tail call zeroext i1 %14(%class.SkPathEffectBase* nonnull %10, %struct.SkRect* null) #13
  br i1 %15, label %16, label %61

16:                                               ; preds = %5, %9
  %17 = getelementptr inbounds %class.SkOpPE, %class.SkOpPE* %0, i64 0, i32 3, i32 0
  %18 = load %class.SkPathEffect*, %class.SkPathEffect** %17, align 8
  %19 = icmp eq %class.SkPathEffect* %18, null
  br i1 %19, label %61, label %20

20:                                               ; preds = %16
  %21 = bitcast %class.SkPathEffect* %18 to %class.SkPathEffectBase*
  %22 = bitcast %class.SkPathEffect* %18 to i1 (%class.SkPathEffectBase*, %struct.SkRect*)***
  %23 = load i1 (%class.SkPathEffectBase*, %struct.SkRect*)**, i1 (%class.SkPathEffectBase*, %struct.SkRect*)*** %22, align 8
  %24 = getelementptr inbounds i1 (%class.SkPathEffectBase*, %struct.SkRect*)*, i1 (%class.SkPathEffectBase*, %struct.SkRect*)** %23, i64 10
  %25 = load i1 (%class.SkPathEffectBase*, %struct.SkRect*)*, i1 (%class.SkPathEffectBase*, %struct.SkRect*)** %24, align 8
  %26 = tail call zeroext i1 %25(%class.SkPathEffectBase* nonnull %21, %struct.SkRect* null) #13
  br label %61

27:                                               ; preds = %2
  %28 = bitcast %struct.SkRect* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #13
  %29 = bitcast %struct.SkRect* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %29, i64 16, i1 false)
  %30 = getelementptr inbounds %class.SkOpPE, %class.SkOpPE* %0, i64 0, i32 2, i32 0
  %31 = load %class.SkPathEffect*, %class.SkPathEffect** %30, align 8
  %32 = icmp eq %class.SkPathEffect* %31, null
  br i1 %32, label %40, label %33

33:                                               ; preds = %27
  %34 = bitcast %class.SkPathEffect* %31 to %class.SkPathEffectBase*
  %35 = bitcast %class.SkPathEffect* %31 to i1 (%class.SkPathEffectBase*, %struct.SkRect*)***
  %36 = load i1 (%class.SkPathEffectBase*, %struct.SkRect*)**, i1 (%class.SkPathEffectBase*, %struct.SkRect*)*** %35, align 8
  %37 = getelementptr inbounds i1 (%class.SkPathEffectBase*, %struct.SkRect*)*, i1 (%class.SkPathEffectBase*, %struct.SkRect*)** %36, i64 10
  %38 = load i1 (%class.SkPathEffectBase*, %struct.SkRect*)*, i1 (%class.SkPathEffectBase*, %struct.SkRect*)** %37, align 8
  %39 = tail call zeroext i1 %38(%class.SkPathEffectBase* nonnull %34, %struct.SkRect* nonnull %1) #13
  br i1 %39, label %40, label %59

40:                                               ; preds = %27, %33
  %41 = getelementptr inbounds %class.SkOpPE, %class.SkOpPE* %0, i64 0, i32 3, i32 0
  %42 = load %class.SkPathEffect*, %class.SkPathEffect** %41, align 8
  %43 = icmp eq %class.SkPathEffect* %42, null
  br i1 %43, label %51, label %44

44:                                               ; preds = %40
  %45 = bitcast %class.SkPathEffect* %42 to %class.SkPathEffectBase*
  %46 = bitcast %class.SkPathEffect* %42 to i1 (%class.SkPathEffectBase*, %struct.SkRect*)***
  %47 = load i1 (%class.SkPathEffectBase*, %struct.SkRect*)**, i1 (%class.SkPathEffectBase*, %struct.SkRect*)*** %46, align 8
  %48 = getelementptr inbounds i1 (%class.SkPathEffectBase*, %struct.SkRect*)*, i1 (%class.SkPathEffectBase*, %struct.SkRect*)** %47, i64 10
  %49 = load i1 (%class.SkPathEffectBase*, %struct.SkRect*)*, i1 (%class.SkPathEffectBase*, %struct.SkRect*)** %48, align 8
  %50 = call zeroext i1 %49(%class.SkPathEffectBase* nonnull %45, %struct.SkRect* nonnull %3) #13
  br i1 %50, label %51, label %59

51:                                               ; preds = %40, %44
  %52 = getelementptr inbounds %class.SkOpPE, %class.SkOpPE* %0, i64 0, i32 4
  %53 = load i32, i32* %52, align 8
  switch i32 %53, label %59 [
    i32 1, label %54
    i32 2, label %58
    i32 4, label %57
    i32 3, label %58
  ]

54:                                               ; preds = %51
  %55 = call zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect* nonnull %1, %struct.SkRect* nonnull dereferenceable(16) %3) #13
  br i1 %55, label %59, label %56

56:                                               ; preds = %54
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %29, i8 0, i64 16, i1 false) #13
  br label %59

57:                                               ; preds = %51
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %29, i8* nonnull align 4 %28, i64 16, i1 false)
  br label %59

58:                                               ; preds = %51, %51
  call void @_ZN6SkRect4joinERKS_(%struct.SkRect* nonnull %1, %struct.SkRect* nonnull dereferenceable(16) %3) #13
  br label %59

59:                                               ; preds = %57, %58, %51, %56, %54, %44, %33
  %60 = phi i1 [ false, %33 ], [ false, %44 ], [ true, %54 ], [ true, %56 ], [ true, %51 ], [ true, %58 ], [ true, %57 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #13
  br label %61

61:                                               ; preds = %16, %9, %20, %59
  %62 = phi i1 [ %60, %59 ], [ false, %9 ], [ true, %16 ], [ %26, %20 ]
  ret i1 %62
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZN6SkRect4joinERKS_(%struct.SkRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6SkOpPE7flattenER13SkWriteBuffer(%class.SkOpPE* nocapture readonly, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkOpPE, %class.SkOpPE* %0, i64 0, i32 2, i32 0
  %4 = bitcast %class.SkPathEffect** %3 to %class.SkFlattenable**
  %5 = load %class.SkFlattenable*, %class.SkFlattenable** %4, align 8
  %6 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, %class.SkFlattenable*)***
  %7 = load void (%class.SkWriteBuffer*, %class.SkFlattenable*)**, void (%class.SkWriteBuffer*, %class.SkFlattenable*)*** %6, align 8
  %8 = getelementptr inbounds void (%class.SkWriteBuffer*, %class.SkFlattenable*)*, void (%class.SkWriteBuffer*, %class.SkFlattenable*)** %7, i64 11
  %9 = load void (%class.SkWriteBuffer*, %class.SkFlattenable*)*, void (%class.SkWriteBuffer*, %class.SkFlattenable*)** %8, align 8
  tail call void %9(%class.SkWriteBuffer* %1, %class.SkFlattenable* %5) #13
  %10 = getelementptr inbounds %class.SkOpPE, %class.SkOpPE* %0, i64 0, i32 3, i32 0
  %11 = bitcast %class.SkPathEffect** %10 to %class.SkFlattenable**
  %12 = load %class.SkFlattenable*, %class.SkFlattenable** %11, align 8
  %13 = load void (%class.SkWriteBuffer*, %class.SkFlattenable*)**, void (%class.SkWriteBuffer*, %class.SkFlattenable*)*** %6, align 8
  %14 = getelementptr inbounds void (%class.SkWriteBuffer*, %class.SkFlattenable*)*, void (%class.SkWriteBuffer*, %class.SkFlattenable*)** %13, i64 11
  %15 = load void (%class.SkWriteBuffer*, %class.SkFlattenable*)*, void (%class.SkWriteBuffer*, %class.SkFlattenable*)** %14, align 8
  tail call void %15(%class.SkWriteBuffer* %1, %class.SkFlattenable* %12) #13
  %16 = getelementptr inbounds %class.SkOpPE, %class.SkOpPE* %0, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i32)***
  %19 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %18, align 8
  %20 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %19, i64 7
  %21 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %20, align 8
  tail call void %21(%class.SkWriteBuffer* %1, i32 %17) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkOpPE10CreateProcER12SkReadBuffer(%class.sk_sp.22* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) #0 align 2 {
  %3 = tail call %class.SkFlattenable* @_ZN12SkReadBuffer15readFlattenableEN13SkFlattenable4TypeE(%class.SkReadBuffer* %1, i32 5) #13, !noalias !2
  %4 = ptrtoint %class.SkFlattenable* %3 to i64
  %5 = tail call %class.SkFlattenable* @_ZN12SkReadBuffer15readFlattenableEN13SkFlattenable4TypeE(%class.SkReadBuffer* %1, i32 5) #13, !noalias !7
  %6 = ptrtoint %class.SkFlattenable* %5 to i64
  %7 = tail call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %1) #13
  %8 = icmp ugt i32 %7, 4
  br i1 %8, label %9, label %10

9:                                                ; preds = %2
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #13
  br label %10

10:                                               ; preds = %2, %9
  %11 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %12 = load i8, i8* %11, align 8, !range !12
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %27

14:                                               ; preds = %10
  %15 = tail call i8* @_Znwm(i64 40) #12, !noalias !13
  %16 = getelementptr inbounds i8, i8* %15, i64 8
  %17 = bitcast i8* %16 to i32*
  store i32 1, i32* %17, align 4, !noalias !13
  %18 = bitcast i8* %15 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV6SkOpPE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8, !noalias !13
  %19 = getelementptr inbounds i8, i8* %15, i64 16
  %20 = bitcast i8* %19 to i64*
  store i64 %4, i64* %20, align 8, !noalias !13
  %21 = getelementptr inbounds i8, i8* %15, i64 24
  %22 = bitcast i8* %21 to i64*
  store i64 %6, i64* %22, align 8, !noalias !13
  %23 = getelementptr inbounds i8, i8* %15, i64 32
  %24 = bitcast i8* %23 to i32*
  store i32 %7, i32* %24, align 8, !noalias !13
  %25 = ptrtoint i8* %15 to i64
  %26 = bitcast %class.sk_sp.22* %0 to i64*
  store i64 %25, i64* %26, align 8
  br label %52

27:                                               ; preds = %10
  %28 = bitcast %class.sk_sp.22* %0 to i64*
  store i64 0, i64* %28, align 8
  %29 = icmp eq %class.SkFlattenable* %5, null
  br i1 %29, label %40, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %class.SkFlattenable, %class.SkFlattenable* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %40

34:                                               ; preds = %30
  %35 = bitcast %class.SkFlattenable* %5 to %class.SkRefCntBase*
  %36 = bitcast %class.SkFlattenable* %5 to void (%class.SkRefCntBase*)***
  %37 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %36, align 8
  %38 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %37, i64 2
  %39 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, align 8
  tail call void %39(%class.SkRefCntBase* nonnull %35) #13
  br label %40

40:                                               ; preds = %27, %30, %34
  %41 = icmp eq %class.SkFlattenable* %3, null
  br i1 %41, label %52, label %42

42:                                               ; preds = %40
  %43 = getelementptr inbounds %class.SkFlattenable, %class.SkFlattenable* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw add i32* %43, i32 -1 acq_rel
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %52

46:                                               ; preds = %42
  %47 = bitcast %class.SkFlattenable* %3 to %class.SkRefCntBase*
  %48 = bitcast %class.SkFlattenable* %3 to void (%class.SkRefCntBase*)***
  %49 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %48, align 8
  %50 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %49, i64 2
  %51 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %50, align 8
  tail call void %51(%class.SkRefCntBase* nonnull %47) #13
  br label %52

52:                                               ; preds = %14, %40, %42, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkMatrixPathEffect13MakeTranslateEff(%class.sk_sp* noalias nocapture sret, float, float) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkMatrix, align 16
  %5 = bitcast float %1 to i32
  %6 = and i32 %5, 2139095040
  %7 = icmp eq i32 %6, 2139095040
  br i1 %7, label %12, label %8

8:                                                ; preds = %3
  %9 = bitcast float %2 to i32
  %10 = and i32 %9, 2139095040
  %11 = icmp eq i32 %10, 2139095040
  br i1 %11, label %12, label %14

12:                                               ; preds = %8, %3
  %13 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkPathEffect* null, %class.SkPathEffect** %13, align 8
  br label %28

14:                                               ; preds = %8
  %15 = tail call i8* @_Znwm(i64 56) #12
  %16 = bitcast %class.SkMatrix* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #13
  %17 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 1
  %18 = bitcast %class.SkMatrix* %4 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %18, align 16, !alias.scope !16
  %19 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 4
  %20 = bitcast float* %19 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %20, align 16, !alias.scope !16
  %21 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %21, align 16, !alias.scope !16
  store i32 16, i32* %17, align 4, !alias.scope !16
  %22 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix* nonnull %4, float %1, float %2) #13
  %23 = getelementptr inbounds i8, i8* %15, i64 8
  %24 = bitcast i8* %23 to i32*
  store i32 1, i32* %24, align 4
  %25 = bitcast i8* %15 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV10SkMatrixPE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %26 = getelementptr inbounds i8, i8* %15, i64 12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %26, i8* nonnull align 16 %16, i64 40, i1 false) #13
  %27 = bitcast %class.sk_sp* %0 to i8**
  store i8* %15, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #13
  br label %28

28:                                               ; preds = %14, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkMatrixPathEffect4MakeERK8SkMatrix(%class.sk_sp* noalias nocapture sret, %class.SkMatrix* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 0
  %4 = load float, float* %3, align 4
  %5 = fmul float %4, 0.000000e+00
  %6 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 1
  %7 = load float, float* %6, align 4
  %8 = fmul float %5, %7
  %9 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 2
  %10 = load float, float* %9, align 4
  %11 = fmul float %8, %10
  %12 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 3
  %13 = load float, float* %12, align 4
  %14 = fmul float %11, %13
  %15 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 4
  %16 = load float, float* %15, align 4
  %17 = fmul float %14, %16
  %18 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 5
  %19 = load float, float* %18, align 4
  %20 = fmul float %17, %19
  %21 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 6
  %22 = load float, float* %21, align 4
  %23 = fmul float %20, %22
  %24 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 7
  %25 = load float, float* %24, align 4
  %26 = fmul float %23, %25
  %27 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 8
  %28 = load float, float* %27, align 4
  %29 = fmul float %26, %28
  %30 = fcmp oeq float %29, 0.000000e+00
  br i1 %30, label %33, label %31

31:                                               ; preds = %2
  %32 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkPathEffect* null, %class.SkPathEffect** %32, align 8
  br label %41

33:                                               ; preds = %2
  %34 = tail call i8* @_Znwm(i64 56) #12
  %35 = getelementptr inbounds i8, i8* %34, i64 8
  %36 = bitcast i8* %35 to i32*
  store i32 1, i32* %36, align 4
  %37 = bitcast i8* %34 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV10SkMatrixPE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds i8, i8* %34, i64 12
  %39 = bitcast %class.SkMatrix* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %38, i8* align 4 %39, i64 40, i1 false) #13
  %40 = bitcast %class.sk_sp* %0 to i8**
  store i8* %34, i8** %40, align 8
  br label %41

41:                                               ; preds = %33, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkMatrixPEC2ERK8SkMatrix(%class.SkMatrixPE* nocapture, %class.SkMatrix* nocapture readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkMatrixPE, %class.SkMatrixPE* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %3, align 4
  %4 = getelementptr inbounds %class.SkMatrixPE, %class.SkMatrixPE* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV10SkMatrixPE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.SkMatrixPE, %class.SkMatrixPE* %0, i64 0, i32 1
  %6 = bitcast %class.SkMatrix* %5 to i8*
  %7 = bitcast %class.SkMatrix* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 40, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10SkMatrixPE12onFilterPathEP6SkPathRKS0_P11SkStrokeRecPK6SkRect(%class.SkMatrixPE*, %class.SkPath*, %class.SkPath* dereferenceable(16), %class.SkStrokeRec* nocapture readnone, %struct.SkRect* nocapture readnone) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.SkMatrixPE, %class.SkMatrixPE* %0, i64 0, i32 1
  tail call void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath* %2, %class.SkMatrix* dereferenceable(40) %6, %class.SkPath* %1, i32 1) #13
  ret i1 true
}

declare void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath*, %class.SkMatrix* dereferenceable(40), %class.SkPath*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10SkMatrixPE7flattenER13SkWriteBuffer(%class.SkMatrixPE*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkMatrixPE, %class.SkMatrixPE* %0, i64 0, i32 1
  %4 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, %class.SkMatrix*)***
  %5 = load void (%class.SkWriteBuffer*, %class.SkMatrix*)**, void (%class.SkWriteBuffer*, %class.SkMatrix*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkWriteBuffer*, %class.SkMatrix*)*, void (%class.SkWriteBuffer*, %class.SkMatrix*)** %5, i64 20
  %7 = load void (%class.SkWriteBuffer*, %class.SkMatrix*)*, void (%class.SkWriteBuffer*, %class.SkMatrix*)** %6, align 8
  tail call void %7(%class.SkWriteBuffer* %1, %class.SkMatrix* dereferenceable(40) %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkMatrixPE10CreateProcER12SkReadBuffer(%class.sk_sp.22* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) #0 align 2 {
  %3 = alloca %class.SkMatrix, align 16
  %4 = bitcast %class.SkMatrix* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #13
  %5 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 1
  %6 = bitcast %class.SkMatrix* %3 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %6, align 16
  %7 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 4
  %8 = bitcast float* %7 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %8, align 16
  %9 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %9, align 16
  store i32 16, i32* %5, align 4
  call void @_ZN12SkReadBuffer10readMatrixEP8SkMatrix(%class.SkReadBuffer* %1, %class.SkMatrix* nonnull %3) #13
  %10 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %11 = load i8, i8* %10, align 8, !range !12
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %47

13:                                               ; preds = %2
  %14 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 7
  %15 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 6
  %16 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 5
  %17 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 0
  %18 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 3
  %19 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 2
  %20 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 1
  %21 = load float, float* %17, align 16, !noalias !19
  %22 = fmul float %21, 0.000000e+00
  %23 = load float, float* %20, align 4, !noalias !19
  %24 = fmul float %22, %23
  %25 = load float, float* %19, align 8, !noalias !19
  %26 = fmul float %24, %25
  %27 = load float, float* %18, align 4, !noalias !19
  %28 = fmul float %26, %27
  %29 = load float, float* %7, align 16, !noalias !19
  %30 = fmul float %28, %29
  %31 = load float, float* %16, align 4, !noalias !19
  %32 = fmul float %30, %31
  %33 = load float, float* %15, align 8, !noalias !19
  %34 = fmul float %32, %33
  %35 = load float, float* %14, align 4, !noalias !19
  %36 = fmul float %34, %35
  %37 = load float, float* %9, align 16, !noalias !19
  %38 = fmul float %36, %37
  %39 = fcmp oeq float %38, 0.000000e+00
  br i1 %39, label %40, label %47

40:                                               ; preds = %13
  %41 = call i8* @_Znwm(i64 56) #12, !noalias !19
  %42 = getelementptr inbounds i8, i8* %41, i64 8
  %43 = bitcast i8* %42 to i32*
  store i32 1, i32* %43, align 4, !noalias !19
  %44 = bitcast i8* %41 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV10SkMatrixPE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8, !noalias !19
  %45 = getelementptr inbounds i8, i8* %41, i64 12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %45, i8* nonnull align 16 %4, i64 40, i1 false) #13, !noalias !19
  %46 = ptrtoint i8* %41 to i64
  br label %47

47:                                               ; preds = %13, %40, %2
  %48 = phi i64 [ %46, %40 ], [ 0, %13 ], [ 0, %2 ]
  %49 = bitcast %class.sk_sp.22* %0 to i64*
  store i64 %48, i64* %49, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN12SkReadBuffer10readMatrixEP8SkMatrix(%class.SkReadBuffer*, %class.SkMatrix*) local_unnamed_addr #4

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN18SkStrokePathEffect4MakeEfN7SkPaint4JoinENS0_3CapEf(%class.sk_sp* noalias nocapture sret, float, i8 zeroext, i32, float) local_unnamed_addr #6 align 2 {
  %6 = bitcast float %1 to i32
  %7 = and i32 %6, 2139095040
  %8 = icmp eq i32 %7, 2139095040
  br i1 %8, label %17, label %9

9:                                                ; preds = %5
  %10 = bitcast float %4 to i32
  %11 = and i32 %10, 2139095040
  %12 = icmp eq i32 %11, 2139095040
  %13 = fcmp olt float %1, 0.000000e+00
  %14 = or i1 %13, %12
  %15 = fcmp olt float %4, 0.000000e+00
  %16 = or i1 %15, %14
  br i1 %16, label %17, label %19

17:                                               ; preds = %5, %9
  %18 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkPathEffect* null, %class.SkPathEffect** %18, align 8
  br label %32

19:                                               ; preds = %9
  %20 = tail call i8* @_Znwm(i64 32) #12
  %21 = getelementptr inbounds i8, i8* %20, i64 8
  %22 = bitcast i8* %21 to i32*
  store i32 1, i32* %22, align 4
  %23 = bitcast i8* %20 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV10SkStrokePE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds i8, i8* %20, i64 12
  %25 = bitcast i8* %24 to float*
  store float %1, float* %25, align 4
  %26 = getelementptr inbounds i8, i8* %20, i64 16
  %27 = bitcast i8* %26 to float*
  store float %4, float* %27, align 8
  %28 = getelementptr inbounds i8, i8* %20, i64 20
  store i8 %2, i8* %28, align 4
  %29 = getelementptr inbounds i8, i8* %20, i64 24
  %30 = bitcast i8* %29 to i32*
  store i32 %3, i32* %30, align 8
  %31 = bitcast %class.sk_sp* %0 to i8**
  store i8* %20, i8** %31, align 8
  br label %32

32:                                               ; preds = %19, %17
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10SkStrokePEC2EfN7SkPaint4JoinENS0_3CapEf(%class.SkStrokePE* nocapture, float, i8 zeroext, i32, float) unnamed_addr #7 align 2 {
  %6 = getelementptr inbounds %class.SkStrokePE, %class.SkStrokePE* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %6, align 4
  %7 = getelementptr inbounds %class.SkStrokePE, %class.SkStrokePE* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV10SkStrokePE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %class.SkStrokePE, %class.SkStrokePE* %0, i64 0, i32 1
  store float %1, float* %8, align 4
  %9 = getelementptr inbounds %class.SkStrokePE, %class.SkStrokePE* %0, i64 0, i32 2
  store float %4, float* %9, align 8
  %10 = getelementptr inbounds %class.SkStrokePE, %class.SkStrokePE* %0, i64 0, i32 3
  store i8 %2, i8* %10, align 4
  %11 = getelementptr inbounds %class.SkStrokePE, %class.SkStrokePE* %0, i64 0, i32 4
  store i32 %3, i32* %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10SkStrokePE12onFilterPathEP6SkPathRKS0_P11SkStrokeRecPK6SkRect(%class.SkStrokePE* nocapture readonly, %class.SkPath*, %class.SkPath* dereferenceable(16), %class.SkStrokeRec* nocapture readnone, %struct.SkRect* nocapture readnone) unnamed_addr #0 align 2 {
  %6 = alloca %class.SkStrokeRec, align 4
  %7 = bitcast %class.SkStrokeRec* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #13
  %8 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %6, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %8, align 4
  %9 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %6, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %9, align 4
  %10 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %6, i64 0, i32 2
  store float 0xFFFFFFFFE0000000, float* %10, align 4
  %11 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %6, i64 0, i32 3
  store i32 -1431655766, i32* %11, align 4
  call void @_ZN11SkStrokeRecC1ENS_9InitStyleE(%class.SkStrokeRec* nonnull %6, i32 1) #13
  %12 = getelementptr inbounds %class.SkStrokePE, %class.SkStrokePE* %0, i64 0, i32 1
  %13 = load float, float* %12, align 4
  call void @_ZN11SkStrokeRec14setStrokeStyleEfb(%class.SkStrokeRec* nonnull %6, float %13, i1 zeroext false) #13
  %14 = getelementptr inbounds %class.SkStrokePE, %class.SkStrokePE* %0, i64 0, i32 4
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %class.SkStrokePE, %class.SkStrokePE* %0, i64 0, i32 3
  %17 = load i8, i8* %16, align 4
  %18 = getelementptr inbounds %class.SkStrokePE, %class.SkStrokePE* %0, i64 0, i32 2
  %19 = bitcast float* %18 to i32*
  %20 = load i32, i32* %19, align 8
  %21 = load i32, i32* %11, align 4
  %22 = and i32 %15, 65535
  %23 = and i32 %21, -2147483648
  %24 = zext i8 %17 to i32
  %25 = shl nuw nsw i32 %24, 16
  %26 = or i32 %25, %22
  %27 = or i32 %26, %23
  store i32 %27, i32* %11, align 4
  %28 = bitcast float* %10 to i32*
  store i32 %20, i32* %28, align 4
  %29 = call zeroext i1 @_ZNK11SkStrokeRec11applyToPathEP6SkPathRKS0_(%class.SkStrokeRec* nonnull %6, %class.SkPath* %1, %class.SkPath* dereferenceable(16) %2) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #13
  ret i1 %29
}

declare void @_ZN11SkStrokeRecC1ENS_9InitStyleE(%class.SkStrokeRec*, i32) unnamed_addr #4

declare void @_ZN11SkStrokeRec14setStrokeStyleEfb(%class.SkStrokeRec*, float, i1 zeroext) local_unnamed_addr #4

declare zeroext i1 @_ZNK11SkStrokeRec11applyToPathEP6SkPathRKS0_(%class.SkStrokeRec*, %class.SkPath*, %class.SkPath* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10SkStrokePE17computeFastBoundsEP6SkRect(%class.SkStrokePE* nocapture readonly, %struct.SkRect*) unnamed_addr #0 align 2 {
  %3 = alloca %class.SkStrokeRec, align 4
  %4 = icmp eq %struct.SkRect* %1, null
  br i1 %4, label %39, label %5

5:                                                ; preds = %2
  %6 = bitcast %class.SkStrokeRec* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  %7 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %3, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %7, align 4
  %8 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %3, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %8, align 4
  %9 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %3, i64 0, i32 2
  store float 0xFFFFFFFFE0000000, float* %9, align 4
  %10 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %3, i64 0, i32 3
  store i32 -1431655766, i32* %10, align 4
  call void @_ZN11SkStrokeRecC1ENS_9InitStyleE(%class.SkStrokeRec* nonnull %3, i32 1) #13
  %11 = getelementptr inbounds %class.SkStrokePE, %class.SkStrokePE* %0, i64 0, i32 1
  %12 = load float, float* %11, align 4
  call void @_ZN11SkStrokeRec14setStrokeStyleEfb(%class.SkStrokeRec* nonnull %3, float %12, i1 zeroext false) #13
  %13 = getelementptr inbounds %class.SkStrokePE, %class.SkStrokePE* %0, i64 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %class.SkStrokePE, %class.SkStrokePE* %0, i64 0, i32 3
  %16 = load i8, i8* %15, align 4
  %17 = getelementptr inbounds %class.SkStrokePE, %class.SkStrokePE* %0, i64 0, i32 2
  %18 = bitcast float* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = load i32, i32* %10, align 4
  %21 = and i32 %14, 65535
  %22 = and i32 %20, -2147483648
  %23 = zext i8 %16 to i32
  %24 = shl nuw nsw i32 %23, 16
  %25 = or i32 %24, %21
  %26 = or i32 %25, %22
  store i32 %26, i32* %10, align 4
  %27 = bitcast float* %9 to i32*
  store i32 %19, i32* %27, align 4
  %28 = call float @_ZNK11SkStrokeRec18getInflationRadiusEv(%class.SkStrokeRec* nonnull %3) #13
  %29 = call float @_ZNK11SkStrokeRec18getInflationRadiusEv(%class.SkStrokeRec* nonnull %3) #13
  %30 = bitcast %struct.SkRect* %1 to <4 x float>*
  %31 = load <4 x float>, <4 x float>* %30, align 4
  %32 = insertelement <2 x float> undef, float %28, i32 0
  %33 = insertelement <2 x float> %32, float %29, i32 1
  %34 = shufflevector <2 x float> %33, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %35 = fsub <4 x float> %31, %34
  %36 = fadd <4 x float> %31, %34
  %37 = shufflevector <4 x float> %35, <4 x float> %36, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %38 = bitcast %struct.SkRect* %1 to <4 x float>*
  store <4 x float> %37, <4 x float>* %38, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  br label %39

39:                                               ; preds = %2, %5
  ret i1 true
}

declare float @_ZNK11SkStrokeRec18getInflationRadiusEv(%class.SkStrokeRec*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10SkStrokePE7flattenER13SkWriteBuffer(%class.SkStrokePE* nocapture readonly, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkStrokePE, %class.SkStrokePE* %0, i64 0, i32 1
  %4 = load float, float* %3, align 4
  %5 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, float)***
  %6 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %5, align 8
  %7 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %6, i64 5
  %8 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %7, align 8
  tail call void %8(%class.SkWriteBuffer* %1, float %4) #13
  %9 = getelementptr inbounds %class.SkStrokePE, %class.SkStrokePE* %0, i64 0, i32 2
  %10 = load float, float* %9, align 8
  %11 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %5, align 8
  %12 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %11, i64 5
  %13 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %12, align 8
  tail call void %13(%class.SkWriteBuffer* %1, float %10) #13
  %14 = getelementptr inbounds %class.SkStrokePE, %class.SkStrokePE* %0, i64 0, i32 3
  %15 = load i8, i8* %14, align 4
  %16 = zext i8 %15 to i32
  %17 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i32)***
  %18 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %18, i64 7
  %20 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %19, align 8
  tail call void %20(%class.SkWriteBuffer* %1, i32 %16) #13
  %21 = getelementptr inbounds %class.SkStrokePE, %class.SkStrokePE* %0, i64 0, i32 4
  %22 = load i32, i32* %21, align 8
  %23 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %17, align 8
  %24 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %23, i64 7
  %25 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %24, align 8
  tail call void %25(%class.SkWriteBuffer* %1, i32 %22) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkStrokePE10CreateProcER12SkReadBuffer(%class.sk_sp.22* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) #0 align 2 {
  %3 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #13
  %4 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #13
  %5 = tail call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %1) #13
  %6 = icmp ugt i32 %5, 2
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #13
  br label %8

8:                                                ; preds = %2, %7
  %9 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %10 = load i8, i8* %9, align 8, !range !12
  %11 = icmp eq i8 %10, 0
  %12 = trunc i32 %5 to i8
  %13 = select i1 %11, i8 %12, i8 0
  %14 = tail call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %1) #13
  %15 = icmp ugt i32 %14, 2
  br i1 %15, label %16, label %17

16:                                               ; preds = %8
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #13
  br label %17

17:                                               ; preds = %8, %16
  %18 = load i8, i8* %9, align 8, !range !12
  %19 = icmp eq i8 %18, 0
  %20 = select i1 %19, i32 %14, i32 0
  br i1 %19, label %21, label %46

21:                                               ; preds = %17
  %22 = bitcast float %3 to i32
  %23 = and i32 %22, 2139095040
  %24 = icmp eq i32 %23, 2139095040
  br i1 %24, label %46, label %25

25:                                               ; preds = %21
  %26 = bitcast float %4 to i32
  %27 = and i32 %26, 2139095040
  %28 = icmp eq i32 %27, 2139095040
  %29 = fcmp olt float %3, 0.000000e+00
  %30 = or i1 %29, %28
  %31 = fcmp olt float %4, 0.000000e+00
  %32 = or i1 %31, %30
  br i1 %32, label %46, label %33

33:                                               ; preds = %25
  %34 = tail call i8* @_Znwm(i64 32) #12, !noalias !22
  %35 = getelementptr inbounds i8, i8* %34, i64 8
  %36 = bitcast i8* %35 to i32*
  store i32 1, i32* %36, align 4, !noalias !22
  %37 = bitcast i8* %34 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV10SkStrokePE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8, !noalias !22
  %38 = getelementptr inbounds i8, i8* %34, i64 12
  %39 = bitcast i8* %38 to float*
  store float %3, float* %39, align 4, !noalias !22
  %40 = getelementptr inbounds i8, i8* %34, i64 16
  %41 = bitcast i8* %40 to float*
  store float %4, float* %41, align 8, !noalias !22
  %42 = getelementptr inbounds i8, i8* %34, i64 20
  store i8 %13, i8* %42, align 4, !noalias !22
  %43 = getelementptr inbounds i8, i8* %34, i64 24
  %44 = bitcast i8* %43 to i32*
  store i32 %20, i32* %44, align 8, !noalias !22
  %45 = ptrtoint i8* %34 to i64
  br label %46

46:                                               ; preds = %21, %25, %33, %17
  %47 = phi i64 [ %45, %33 ], [ 0, %25 ], [ 0, %21 ], [ 0, %17 ]
  %48 = bitcast %class.sk_sp.22* %0 to i64*
  store i64 %47, i64* %48, align 8
  ret void
}

declare float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer*) local_unnamed_addr #4

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN25SkStrokeAndFillPathEffect4MakeEv(%class.sk_sp* noalias nocapture sret) local_unnamed_addr #6 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN25SkStrokeAndFillPathEffect4MakeEvE13strokeAndFill to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %12, !prof !25

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN25SkStrokeAndFillPathEffect4MakeEvE13strokeAndFill) #13
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %4
  %8 = tail call i8* @_Znwm(i64 16) #12
  %9 = getelementptr inbounds i8, i8* %8, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 1, i32* %10, align 4
  %11 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV17SkStrokeAndFillPE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  store i8* %8, i8** bitcast (%class.SkPathEffect** @_ZZN25SkStrokeAndFillPathEffect4MakeEvE13strokeAndFill to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN25SkStrokeAndFillPathEffect4MakeEvE13strokeAndFill) #13
  br label %12

12:                                               ; preds = %4, %7, %1
  %13 = load %class.SkPathEffect*, %class.SkPathEffect** @_ZZN25SkStrokeAndFillPathEffect4MakeEvE13strokeAndFill, align 8
  %14 = icmp eq %class.SkPathEffect* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 1 monotonic, !noalias !26
  br label %18

18:                                               ; preds = %12, %15
  %19 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkPathEffect* %13, %class.SkPathEffect** %19, align 8, !alias.scope !26
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK17SkStrokeAndFillPE7flattenER13SkWriteBuffer(%class.SkStrokeAndFillPE* nocapture, %class.SkWriteBuffer* nocapture dereferenceable(56)) unnamed_addr #9 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK17SkStrokeAndFillPE12onFilterPathEP6SkPathRKS0_P11SkStrokeRecPK6SkRect(%class.SkStrokeAndFillPE* nocapture readnone, %class.SkPath*, %class.SkPath* dereferenceable(16), %class.SkStrokeRec*, %struct.SkRect* nocapture readnone) unnamed_addr #0 align 2 {
  %6 = alloca %class.SkMatrix, align 16
  %7 = tail call i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec* %3) #13
  %8 = icmp eq i32 %7, 3
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  %10 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath* %1, %class.SkPath* dereferenceable(16) %2) #13
  br label %40

11:                                               ; preds = %5
  %12 = tail call i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec* %3) #13
  %13 = icmp eq i32 %12, 2
  br i1 %13, label %14, label %37

14:                                               ; preds = %11
  %15 = tail call zeroext i1 @_ZNK11SkStrokeRec11applyToPathEP6SkPathRKS0_(%class.SkStrokeRec* %3, %class.SkPath* %1, %class.SkPath* dereferenceable(16) %2) #13
  br i1 %15, label %16, label %40

16:                                               ; preds = %14
  %17 = tail call i32 @_ZN10SkPathPriv21ComputeFirstDirectionERK6SkPath(%class.SkPath* dereferenceable(16) %2) #13
  %18 = tail call i32 @_ZN10SkPathPriv21ComputeFirstDirectionERK6SkPath(%class.SkPath* dereferenceable(16) %1) #13
  %19 = icmp eq i32 %17, 1
  %20 = icmp eq i32 %18, 0
  %21 = and i1 %19, %20
  br i1 %21, label %26, label %22

22:                                               ; preds = %16
  %23 = icmp eq i32 %17, 0
  %24 = icmp eq i32 %18, 1
  %25 = and i1 %23, %24
  br i1 %25, label %26, label %28

26:                                               ; preds = %16, %22
  %27 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath14reverseAddPathERKS_(%class.SkPath* %1, %class.SkPath* dereferenceable(16) %2) #13
  br label %39

28:                                               ; preds = %22
  %29 = bitcast %class.SkMatrix* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %29) #13
  %30 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 1
  %31 = bitcast %class.SkMatrix* %6 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %31, align 16
  %32 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 4
  %33 = bitcast float* %32 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %33, align 16
  %34 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %34, align 16
  store i32 16, i32* %30, align 4
  %35 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %6) #13
  %36 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7addPathERKS_RK8SkMatrixNS_11AddPathModeE(%class.SkPath* %1, %class.SkPath* dereferenceable(16) %2, %class.SkMatrix* nonnull dereferenceable(40) %6, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %29) #13
  br label %39

37:                                               ; preds = %11
  %38 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath* %1, %class.SkPath* dereferenceable(16) %2) #13
  br label %39

39:                                               ; preds = %26, %28, %37
  call void @_ZN11SkStrokeRec12setFillStyleEv(%class.SkStrokeRec* %3) #13
  br label %40

40:                                               ; preds = %14, %39, %9
  %41 = phi i1 [ true, %9 ], [ true, %39 ], [ false, %14 ]
  ret i1 %41
}

declare i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec*) local_unnamed_addr #4

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath14reverseAddPathERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZN11SkStrokeRec12setFillStyleEv(%class.SkStrokeRec*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkStrokeAndFillPE10CreateProcER12SkReadBuffer(%class.sk_sp.22* noalias nocapture sret, %class.SkReadBuffer* nocapture readnone dereferenceable(136)) #0 align 2 {
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN25SkStrokeAndFillPathEffect4MakeEvE13strokeAndFill to i8*) acquire, align 8, !noalias !29
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %13, !prof !25

5:                                                ; preds = %2
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN25SkStrokeAndFillPathEffect4MakeEvE13strokeAndFill) #13, !noalias !29
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %5
  %9 = tail call i8* @_Znwm(i64 16) #12, !noalias !29
  %10 = getelementptr inbounds i8, i8* %9, i64 8
  %11 = bitcast i8* %10 to i32*
  store i32 1, i32* %11, align 4, !noalias !29
  %12 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV17SkStrokeAndFillPE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8, !noalias !29
  store i8* %9, i8** bitcast (%class.SkPathEffect** @_ZZN25SkStrokeAndFillPathEffect4MakeEvE13strokeAndFill to i8**), align 8, !noalias !29
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN25SkStrokeAndFillPathEffect4MakeEvE13strokeAndFill) #13, !noalias !29
  br label %13

13:                                               ; preds = %8, %5, %2
  %14 = load %class.SkPathEffect*, %class.SkPathEffect** @_ZZN25SkStrokeAndFillPathEffect4MakeEvE13strokeAndFill, align 8, !noalias !29
  %15 = icmp eq %class.SkPathEffect* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 1 monotonic, !noalias !32
  br label %19

19:                                               ; preds = %16, %13
  %20 = ptrtoint %class.SkPathEffect* %14 to i64
  %21 = bitcast %class.sk_sp.22* %0 to i64*
  store i64 %20, i64* %21, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17SkStrokeAndFillPED0Ev(%class.SkStrokeAndFillPE*) unnamed_addr #10 comdat align 2 {
  %2 = bitcast %class.SkStrokeAndFillPE* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #13
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void (%class.sk_sp.22*, %class.SkReadBuffer*)* @_ZNK17SkStrokeAndFillPE10getFactoryEv(%class.SkStrokeAndFillPE*) unnamed_addr #0 comdat align 2 {
  ret void (%class.sk_sp.22*, %class.SkReadBuffer*)* @_ZN17SkStrokeAndFillPE10CreateProcER12SkReadBuffer
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK17SkStrokeAndFillPE11getTypeNameEv(%class.SkStrokeAndFillPE*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK16SkPathEffectBase18getFlattenableTypeEv(%class.SkPathEffectBase*) unnamed_addr #0 comdat align 2 {
  ret i32 5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK16SkPathEffectBase10onAsPointsEPNS_9PointDataERK6SkPathRK11SkStrokeRecRK8SkMatrixPK6SkRect(%class.SkPathEffectBase*, %"class.SkPathEffectBase::PointData"*, %class.SkPath* dereferenceable(16), %class.SkStrokeRec* dereferenceable(16), %class.SkMatrix* dereferenceable(40), %struct.SkRect*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK16SkPathEffectBase9onAsADashEPN12SkPathEffect8DashInfoE(%class.SkPathEffectBase*, %"struct.SkPathEffect::DashInfo"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK17SkStrokeAndFillPE17computeFastBoundsEP6SkRect(%class.SkStrokeAndFillPE*, %struct.SkRect*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6SkOpPED2Ev(%class.SkOpPE*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %class.SkOpPE, %class.SkOpPE* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV6SkOpPE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkOpPE, %class.SkOpPE* %0, i64 0, i32 3, i32 0
  %4 = load %class.SkPathEffect*, %class.SkPathEffect** %3, align 8
  %5 = icmp eq %class.SkPathEffect* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkPathEffect* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkPathEffect* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #13
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %class.SkOpPE, %class.SkOpPE* %0, i64 0, i32 2, i32 0
  %18 = load %class.SkPathEffect*, %class.SkPathEffect** %17, align 8
  %19 = icmp eq %class.SkPathEffect* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkPathEffect* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkPathEffect* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #13
  br label %30

30:                                               ; preds = %16, %20, %24
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6SkOpPED0Ev(%class.SkOpPE*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %class.SkOpPE, %class.SkOpPE* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV6SkOpPE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkOpPE, %class.SkOpPE* %0, i64 0, i32 3, i32 0
  %4 = load %class.SkPathEffect*, %class.SkPathEffect** %3, align 8
  %5 = icmp eq %class.SkPathEffect* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkPathEffect* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkPathEffect* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #13
  br label %16

16:                                               ; preds = %10, %6, %1
  %17 = getelementptr inbounds %class.SkOpPE, %class.SkOpPE* %0, i64 0, i32 2, i32 0
  %18 = load %class.SkPathEffect*, %class.SkPathEffect** %17, align 8
  %19 = icmp eq %class.SkPathEffect* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkPathEffect* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkPathEffect* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #13
  br label %30

30:                                               ; preds = %16, %20, %24
  %31 = bitcast %class.SkOpPE* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void (%class.sk_sp.22*, %class.SkReadBuffer*)* @_ZNK6SkOpPE10getFactoryEv(%class.SkOpPE*) unnamed_addr #0 comdat align 2 {
  ret void (%class.sk_sp.22*, %class.SkReadBuffer*)* @_ZN6SkOpPE10CreateProcER12SkReadBuffer
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK6SkOpPE11getTypeNameEv(%class.SkOpPE*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10SkMatrixPED0Ev(%class.SkMatrixPE*) unnamed_addr #10 comdat align 2 {
  %2 = bitcast %class.SkMatrixPE* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void (%class.sk_sp.22*, %class.SkReadBuffer*)* @_ZNK10SkMatrixPE10getFactoryEv(%class.SkMatrixPE*) unnamed_addr #0 comdat align 2 {
  ret void (%class.sk_sp.22*, %class.SkReadBuffer*)* @_ZN10SkMatrixPE10CreateProcER12SkReadBuffer
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK10SkMatrixPE11getTypeNameEv(%class.SkMatrixPE*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK10SkMatrixPE17computeFastBoundsEP6SkRect(%class.SkMatrixPE*, %struct.SkRect*) unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %struct.SkRect* %1, null
  br i1 %3, label %7, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkMatrixPE, %class.SkMatrixPE* %0, i64 0, i32 1
  %6 = tail call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %5, %struct.SkRect* nonnull %1, %struct.SkRect* nonnull dereferenceable(16) %1, i32 1) #13
  br label %7

7:                                                ; preds = %2, %4
  ret i1 true
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10SkStrokePED0Ev(%class.SkStrokePE*) unnamed_addr #10 comdat align 2 {
  %2 = bitcast %class.SkStrokePE* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void (%class.sk_sp.22*, %class.SkReadBuffer*)* @_ZNK10SkStrokePE10getFactoryEv(%class.SkStrokePE*) unnamed_addr #0 comdat align 2 {
  ret void (%class.sk_sp.22*, %class.SkReadBuffer*)* @_ZN10SkStrokePE10CreateProcER12SkReadBuffer
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK10SkStrokePE11getTypeNameEv(%class.SkStrokePE*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkRefCntBaseD2Ev(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

declare %class.SkFlattenable* @_ZN12SkReadBuffer15readFlattenableEN13SkFlattenable4TypeE(%class.SkReadBuffer*, i32) local_unnamed_addr #4

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #4

declare i32 @_ZN10SkPathPriv21ComputeFirstDirectionERK6SkPath(%class.SkPath* dereferenceable(16)) local_unnamed_addr #4

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix*) local_unnamed_addr #4

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath7addPathERKS_RK8SkMatrixNS_11AddPathModeE(%class.SkPath*, %class.SkPath* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32) local_unnamed_addr #4

declare zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix*, %struct.SkRect*, %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #4

declare i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer*) local_unnamed_addr #4

declare void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind }
attributes #9 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN12SkReadBuffer15readFlattenableI12SkPathEffectEE5sk_spIT_Ev: argument 0"}
!4 = distinct !{!4, !"_ZN12SkReadBuffer15readFlattenableI12SkPathEffectEE5sk_spIT_Ev"}
!5 = distinct !{!5, !6, !"_ZN12SkReadBuffer14readPathEffectEv: argument 0"}
!6 = distinct !{!6, !"_ZN12SkReadBuffer14readPathEffectEv"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN12SkReadBuffer15readFlattenableI12SkPathEffectEE5sk_spIT_Ev: argument 0"}
!9 = distinct !{!9, !"_ZN12SkReadBuffer15readFlattenableI12SkPathEffectEE5sk_spIT_Ev"}
!10 = distinct !{!10, !11, !"_ZN12SkReadBuffer14readPathEffectEv: argument 0"}
!11 = distinct !{!11, !"_ZN12SkReadBuffer14readPathEffectEv"}
!12 = !{i8 0, i8 2}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN17SkMergePathEffect4MakeE5sk_spI12SkPathEffectES2_8SkPathOp: argument 0"}
!15 = distinct !{!15, !"_ZN17SkMergePathEffect4MakeE5sk_spI12SkPathEffectES2_8SkPathOp"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN8SkMatrix9TranslateEff: argument 0"}
!18 = distinct !{!18, !"_ZN8SkMatrix9TranslateEff"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN18SkMatrixPathEffect4MakeERK8SkMatrix: argument 0"}
!21 = distinct !{!21, !"_ZN18SkMatrixPathEffect4MakeERK8SkMatrix"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN18SkStrokePathEffect4MakeEfN7SkPaint4JoinENS0_3CapEf: argument 0"}
!24 = distinct !{!24, !"_ZN18SkStrokePathEffect4MakeEfN7SkPaint4JoinENS0_3CapEf"}
!25 = !{!"branch_weights", i32 1, i32 1048575}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_Z9sk_ref_spI12SkPathEffectE5sk_spIT_EPS2_: argument 0"}
!28 = distinct !{!28, !"_Z9sk_ref_spI12SkPathEffectE5sk_spIT_EPS2_"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN25SkStrokeAndFillPathEffect4MakeEv: argument 0"}
!31 = distinct !{!31, !"_ZN25SkStrokeAndFillPathEffect4MakeEv"}
!32 = !{!33, !30}
!33 = distinct !{!33, !34, !"_Z9sk_ref_spI12SkPathEffectE5sk_spIT_EPS2_: argument 0"}
!34 = distinct !{!34, !"_Z9sk_ref_spI12SkPathEffectE5sk_spIT_EPS2_"}
