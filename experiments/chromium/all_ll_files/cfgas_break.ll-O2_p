; ModuleID = '../../third_party/pdfium/xfa/fgas/layout/cfgas_break.cpp'
source_filename = "../../third_party/pdfium/xfa/fgas/layout/cfgas_break.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CFGAS_Break = type { i32 (...)**, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.fxcrt::RetainPtr", %"class.fxcrt::UnownedPtr.46", i8, [7 x i8], [2 x %class.CFGAS_BreakLine] }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CFGAS_GEFont* }
%class.CFGAS_GEFont = type { %"class.fxcrt::Retainable", %"class.pdfium::Optional", %"class.fxcrt::RetainPtr.0", %"class.fxcrt::MaybeOwned", %"class.std::__1::unique_ptr.9", %"class.std::__1::map", %"class.std::__1::map.21", %"class.std::__1::vector", %"class.std::__1::map.35" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.pdfium::Optional" = type { %"class.pdfium::internal::OptionalBase" }
%"class.pdfium::internal::OptionalBase" = type { %"struct.pdfium::internal::OptionalStorage" }
%"struct.pdfium::internal::OptionalStorage" = type { %"struct.pdfium::internal::OptionalStorageBase" }
%"struct.pdfium::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.fxcrt::RetainPtr.0" = type { %"class.std::__1::unique_ptr.1" }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %class.CPDF_Font* }
%class.CPDF_Font = type opaque
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.5", %"class.fxcrt::UnownedPtr" }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %class.CFX_Font* }
%class.CFX_Font = type opaque
%"class.fxcrt::UnownedPtr" = type { %class.CFX_Font* }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %class.CFX_UnicodeEncodingEx* }
%class.CFX_UnicodeEncodingEx = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.15", %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { i64 }
%"class.std::__1::map.21" = type { %"class.std::__1::__tree.22" }
%"class.std::__1::__tree.22" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.23", %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"*, %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.fxcrt::RetainPtr"* }
%"class.std::__1::map.35" = type { %"class.std::__1::__tree.36" }
%"class.std::__1::__tree.36" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.fxcrt::UnownedPtr.46" = type { %class.CFGAS_BreakLine* }
%class.CFGAS_BreakLine = type <{ %"class.std::__1::vector.47", %"class.std::__1::vector.72", i32, i32, i32, [4 x i8] }>
%"class.std::__1::vector.47" = type { %"class.std::__1::__vector_base.48" }
%"class.std::__1::__vector_base.48" = type { %class.CFGAS_Char*, %class.CFGAS_Char*, %"class.std::__1::__compressed_pair.67" }
%class.CFGAS_Char = type <{ i8, i8, i8, i8, i32, i32, i16, i16, i16, [2 x i8], i32, i32, [4 x i8], %"class.fxcrt::RetainPtr.49", i16, [2 x i8], i32, i32, [4 x i8] }>
%"class.fxcrt::RetainPtr.49" = type { %"class.std::__1::unique_ptr.50" }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %class.CFGAS_TextUserData* }
%class.CFGAS_TextUserData = type { %"class.fxcrt::Retainable", %"class.fxcrt::RetainPtr.53", %"class.fxcrt::RetainPtr.59" }
%"class.fxcrt::RetainPtr.53" = type { %"class.std::__1::unique_ptr.54" }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %class.CFX_CSSComputedStyle* }
%class.CFX_CSSComputedStyle = type opaque
%"class.fxcrt::RetainPtr.59" = type { %"class.std::__1::unique_ptr.60" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %class.CFGAS_LinkUserData* }
%class.CFGAS_LinkUserData = type opaque
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %class.CFGAS_Char* }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %class.CFGAS_BreakPiece*, %class.CFGAS_BreakPiece*, %"class.std::__1::__compressed_pair.75" }
%class.CFGAS_BreakPiece = type { i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.fxcrt::UnownedPtr.74", %"class.fxcrt::RetainPtr.49" }
%"class.fxcrt::UnownedPtr.74" = type { %"class.std::__1::vector.47"* }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %class.CFGAS_BreakPiece* }

@_ZN11CFGAS_Break17kConversionFactorE = hidden local_unnamed_addr constant float 2.000000e+04, align 4
@_ZN11CFGAS_Break16kMinimumTabWidthE = hidden local_unnamed_addr constant i32 160000, align 4
@_ZTV11CFGAS_Break = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CFGAS_Break*)* @_ZN11CFGAS_BreakD2Ev to i8*), i8* bitcast (void (%class.CFGAS_Break*)* @_ZN11CFGAS_BreakD0Ev to i8*)] }, align 8

@_ZN11CFGAS_BreakC1Ej = hidden unnamed_addr alias void (%class.CFGAS_Break*, i32), void (%class.CFGAS_Break*, i32)* @_ZN11CFGAS_BreakC2Ej
@_ZN11CFGAS_BreakD1Ev = hidden unnamed_addr alias void (%class.CFGAS_Break*), void (%class.CFGAS_Break*)* @_ZN11CFGAS_BreakD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CFGAS_BreakC2Ej(%class.CFGAS_Break*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV11CFGAS_Break, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 1
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 2
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 3
  store i8 0, i8* %6, align 2
  %7 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 4
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 5
  store i32 %1, i32* %8, align 8
  %9 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 6
  %10 = bitcast i32* %9 to <4 x i32>*
  store <4 x i32> <i32 0, i32 2000000, i32 10, i32 240>, <4 x i32>* %10, align 4
  %11 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 10
  store i32 720000, i32* %11, align 4
  %12 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 11
  store i32 100, i32* %12, align 8
  %13 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 12
  store i32 100, i32* %13, align 4
  %14 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 13
  %15 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 19, i64 0
  %16 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 16, i32 0
  %17 = bitcast i32* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false)
  store %class.CFGAS_BreakLine* %15, %class.CFGAS_BreakLine** %16, align 8
  %18 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 17
  store i8 -1, i8* %18, align 8
  tail call void @_ZN15CFGAS_BreakLineC1Ev(%class.CFGAS_BreakLine* %15) #9
  %19 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 19, i64 1
  tail call void @_ZN15CFGAS_BreakLineC1Ev(%class.CFGAS_BreakLine* %19) #9
  ret void
}

declare void @_ZN15CFGAS_BreakLineC1Ev(%class.CFGAS_BreakLine*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CFGAS_BreakD2Ev(%class.CFGAS_Break*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV11CFGAS_Break, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 19, i64 1
  tail call void @_ZN15CFGAS_BreakLineD1Ev(%class.CFGAS_BreakLine* %3) #9
  %4 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 19, i64 0
  tail call void @_ZN15CFGAS_BreakLineD1Ev(%class.CFGAS_BreakLine* %4) #9
  %5 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  %6 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %5, align 8
  store %class.CFGAS_GEFont* null, %class.CFGAS_GEFont** %5, align 8
  %7 = icmp eq %class.CFGAS_GEFont* %6, null
  br i1 %7, label %19, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %6, i64 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add nsw i64 %10, -1
  store i64 %11, i64* %9, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %19

13:                                               ; preds = %8
  %14 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %6, i64 0, i32 0
  %15 = bitcast %class.CFGAS_GEFont* %6 to void (%"class.fxcrt::Retainable"*)***
  %16 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %16, i64 1
  %18 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %17, align 8
  tail call void %18(%"class.fxcrt::Retainable"* nonnull %14) #9
  br label %19

19:                                               ; preds = %1, %8, %13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN15CFGAS_BreakLineD1Ev(%class.CFGAS_BreakLine*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CFGAS_BreakD0Ev(%class.CFGAS_Break*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV11CFGAS_Break, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 19, i64 1
  tail call void @_ZN15CFGAS_BreakLineD1Ev(%class.CFGAS_BreakLine* %3) #9
  %4 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 19, i64 0
  tail call void @_ZN15CFGAS_BreakLineD1Ev(%class.CFGAS_BreakLine* %4) #9
  %5 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  %6 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %5, align 8
  store %class.CFGAS_GEFont* null, %class.CFGAS_GEFont** %5, align 8
  %7 = icmp eq %class.CFGAS_GEFont* %6, null
  br i1 %7, label %19, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %6, i64 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add nsw i64 %10, -1
  store i64 %11, i64* %9, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %19

13:                                               ; preds = %8
  %14 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %6, i64 0, i32 0
  %15 = bitcast %class.CFGAS_GEFont* %6 to void (%"class.fxcrt::Retainable"*)***
  %16 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %16, i64 1
  %18 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %17, align 8
  tail call void %18(%"class.fxcrt::Retainable"* nonnull %14) #9
  br label %19

19:                                               ; preds = %1, %8, %13
  %20 = bitcast %class.CFGAS_Break* %0 to i8*
  tail call void @_ZdlPv(i8* %20) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CFGAS_Break5ResetEv(%class.CFGAS_Break*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 1
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 19, i64 0
  tail call void @_ZN15CFGAS_BreakLine5ClearEv(%class.CFGAS_BreakLine* %3) #9
  %4 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 19, i64 1
  tail call void @_ZN15CFGAS_BreakLine5ClearEv(%class.CFGAS_BreakLine* %4) #9
  ret void
}

declare void @_ZN15CFGAS_BreakLine5ClearEv(%class.CFGAS_BreakLine*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN11CFGAS_Break15SetLayoutStylesEj(%class.CFGAS_Break* nocapture, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 5
  store i32 %1, i32* %3, align 8
  %4 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 2
  %5 = lshr i32 %1, 9
  %6 = trunc i32 %5 to i8
  %7 = and i8 %6, 1
  store i8 %7, i8* %4, align 1
  %8 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 3
  %9 = lshr i32 %1, 10
  %10 = trunc i32 %9 to i8
  %11 = and i8 %10, 1
  store i8 %11, i8* %8, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CFGAS_Break18SetHorizontalScaleEi(%class.CFGAS_Break* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp sgt i32 %1, 0
  %4 = select i1 %3, i32 %1, i32 0
  %5 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 11
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, %4
  br i1 %7, label %32, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 4
  %10 = load i32, i32* %9, align 4
  %11 = add i32 %10, 1
  store i32 %11, i32* %9, align 4
  %12 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 16, i32 0
  %13 = load %class.CFGAS_BreakLine*, %class.CFGAS_BreakLine** %12, align 8
  %14 = getelementptr inbounds %class.CFGAS_BreakLine, %class.CFGAS_BreakLine* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %class.CFGAS_Char*, %class.CFGAS_Char** %14, align 8
  %16 = getelementptr inbounds %class.CFGAS_BreakLine, %class.CFGAS_BreakLine* %13, i64 0, i32 0, i32 0, i32 1
  %17 = load %class.CFGAS_Char*, %class.CFGAS_Char** %16, align 8
  %18 = icmp eq %class.CFGAS_Char* %15, %17
  br i1 %18, label %31, label %19

19:                                               ; preds = %8
  %20 = ptrtoint %class.CFGAS_Char* %15 to i64
  %21 = ptrtoint %class.CFGAS_Char* %17 to i64
  %22 = sub i64 %21, %20
  %23 = sdiv exact i64 %22, 56
  %24 = trunc i64 %23 to i32
  %25 = add i32 %24, -1
  %26 = tail call %class.CFGAS_Char* @_ZN15CFGAS_BreakLine7GetCharEi(%class.CFGAS_BreakLine* %13, i32 %25) #9
  %27 = getelementptr inbounds %class.CFGAS_Char, %class.CFGAS_Char* %26, i64 0, i32 0
  %28 = load i8, i8* %27, align 8
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %19
  store i8 1, i8* %27, align 8
  br label %31

31:                                               ; preds = %8, %19, %30
  store i32 %4, i32* %5, align 8
  br label %32

32:                                               ; preds = %2, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CFGAS_Break14SetBreakStatusEv(%class.CFGAS_Break* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, 1
  store i32 %4, i32* %2, align 4
  %5 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 16, i32 0
  %6 = load %class.CFGAS_BreakLine*, %class.CFGAS_BreakLine** %5, align 8
  %7 = getelementptr inbounds %class.CFGAS_BreakLine, %class.CFGAS_BreakLine* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %class.CFGAS_Char*, %class.CFGAS_Char** %7, align 8
  %9 = getelementptr inbounds %class.CFGAS_BreakLine, %class.CFGAS_BreakLine* %6, i64 0, i32 0, i32 0, i32 1
  %10 = load %class.CFGAS_Char*, %class.CFGAS_Char** %9, align 8
  %11 = icmp eq %class.CFGAS_Char* %8, %10
  br i1 %11, label %24, label %12

12:                                               ; preds = %1
  %13 = ptrtoint %class.CFGAS_Char* %8 to i64
  %14 = ptrtoint %class.CFGAS_Char* %10 to i64
  %15 = sub i64 %14, %13
  %16 = sdiv exact i64 %15, 56
  %17 = trunc i64 %16 to i32
  %18 = add i32 %17, -1
  %19 = tail call %class.CFGAS_Char* @_ZN15CFGAS_BreakLine7GetCharEi(%class.CFGAS_BreakLine* %6, i32 %18) #9
  %20 = getelementptr inbounds %class.CFGAS_Char, %class.CFGAS_Char* %19, i64 0, i32 0
  %21 = load i8, i8* %20, align 8
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %12
  store i8 1, i8* %20, align 8
  br label %24

24:                                               ; preds = %12, %23, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CFGAS_Break16SetVerticalScaleEi(%class.CFGAS_Break* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp sgt i32 %1, 0
  %4 = select i1 %3, i32 %1, i32 0
  %5 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 12
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, %4
  br i1 %7, label %32, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 4
  %10 = load i32, i32* %9, align 4
  %11 = add i32 %10, 1
  store i32 %11, i32* %9, align 4
  %12 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 16, i32 0
  %13 = load %class.CFGAS_BreakLine*, %class.CFGAS_BreakLine** %12, align 8
  %14 = getelementptr inbounds %class.CFGAS_BreakLine, %class.CFGAS_BreakLine* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %class.CFGAS_Char*, %class.CFGAS_Char** %14, align 8
  %16 = getelementptr inbounds %class.CFGAS_BreakLine, %class.CFGAS_BreakLine* %13, i64 0, i32 0, i32 0, i32 1
  %17 = load %class.CFGAS_Char*, %class.CFGAS_Char** %16, align 8
  %18 = icmp eq %class.CFGAS_Char* %15, %17
  br i1 %18, label %31, label %19

19:                                               ; preds = %8
  %20 = ptrtoint %class.CFGAS_Char* %15 to i64
  %21 = ptrtoint %class.CFGAS_Char* %17 to i64
  %22 = sub i64 %21, %20
  %23 = sdiv exact i64 %22, 56
  %24 = trunc i64 %23 to i32
  %25 = add i32 %24, -1
  %26 = tail call %class.CFGAS_Char* @_ZN15CFGAS_BreakLine7GetCharEi(%class.CFGAS_BreakLine* %13, i32 %25) #9
  %27 = getelementptr inbounds %class.CFGAS_Char, %class.CFGAS_Char* %26, i64 0, i32 0
  %28 = load i8, i8* %27, align 8
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %19
  store i8 1, i8* %27, align 8
  br label %31

31:                                               ; preds = %8, %19, %30
  store i32 %4, i32* %5, align 4
  br label %32

32:                                               ; preds = %2, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CFGAS_Break7SetFontERKN5fxcrt9RetainPtrI12CFGAS_GEFontEE(%class.CFGAS_Break* nocapture, %"class.fxcrt::RetainPtr"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %3, align 8
  %5 = icmp eq %class.CFGAS_GEFont* %4, null
  br i1 %5, label %58, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  %8 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %7, align 8
  %9 = icmp eq %class.CFGAS_GEFont* %4, %8
  br i1 %9, label %58, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 4
  %12 = load i32, i32* %11, align 4
  %13 = add i32 %12, 1
  store i32 %13, i32* %11, align 4
  %14 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 16, i32 0
  %15 = load %class.CFGAS_BreakLine*, %class.CFGAS_BreakLine** %14, align 8
  %16 = getelementptr inbounds %class.CFGAS_BreakLine, %class.CFGAS_BreakLine* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %class.CFGAS_Char*, %class.CFGAS_Char** %16, align 8
  %18 = getelementptr inbounds %class.CFGAS_BreakLine, %class.CFGAS_BreakLine* %15, i64 0, i32 0, i32 0, i32 1
  %19 = load %class.CFGAS_Char*, %class.CFGAS_Char** %18, align 8
  %20 = icmp eq %class.CFGAS_Char* %17, %19
  br i1 %20, label %33, label %21

21:                                               ; preds = %10
  %22 = ptrtoint %class.CFGAS_Char* %17 to i64
  %23 = ptrtoint %class.CFGAS_Char* %19 to i64
  %24 = sub i64 %23, %22
  %25 = sdiv exact i64 %24, 56
  %26 = trunc i64 %25 to i32
  %27 = add i32 %26, -1
  %28 = tail call %class.CFGAS_Char* @_ZN15CFGAS_BreakLine7GetCharEi(%class.CFGAS_BreakLine* %15, i32 %27) #9
  %29 = getelementptr inbounds %class.CFGAS_Char, %class.CFGAS_Char* %28, i64 0, i32 0
  %30 = load i8, i8* %29, align 8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %21
  store i8 1, i8* %29, align 8
  br label %33

33:                                               ; preds = %10, %21, %32
  %34 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %7, align 8
  %35 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %3, align 8
  %36 = icmp eq %class.CFGAS_GEFont* %34, %35
  br i1 %36, label %58, label %37

37:                                               ; preds = %33
  %38 = icmp eq %class.CFGAS_GEFont* %35, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %37
  %40 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %35, i64 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = add nsw i64 %41, 1
  store i64 %42, i64* %40, align 8
  %43 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %7, align 8
  br label %44

44:                                               ; preds = %39, %37
  %45 = phi %class.CFGAS_GEFont* [ %43, %39 ], [ %34, %37 ]
  store %class.CFGAS_GEFont* %35, %class.CFGAS_GEFont** %7, align 8
  %46 = icmp eq %class.CFGAS_GEFont* %45, null
  br i1 %46, label %58, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %45, i64 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = add nsw i64 %49, -1
  store i64 %50, i64* %48, align 8
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %58

52:                                               ; preds = %47
  %53 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %45, i64 0, i32 0
  %54 = bitcast %class.CFGAS_GEFont* %45 to void (%"class.fxcrt::Retainable"*)***
  %55 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %55, i64 1
  %57 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %56, align 8
  tail call void %57(%"class.fxcrt::Retainable"* nonnull %53) #9
  br label %58

58:                                               ; preds = %2, %52, %47, %44, %33, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CFGAS_Break11SetFontSizeEf(%class.CFGAS_Break* nocapture, float) local_unnamed_addr #0 align 2 {
  %3 = fmul float %1, 2.000000e+01
  %4 = tail call i32 @FXSYS_roundf(float %3) #9
  %5 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 9
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, %4
  br i1 %7, label %32, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 4
  %10 = load i32, i32* %9, align 4
  %11 = add i32 %10, 1
  store i32 %11, i32* %9, align 4
  %12 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 16, i32 0
  %13 = load %class.CFGAS_BreakLine*, %class.CFGAS_BreakLine** %12, align 8
  %14 = getelementptr inbounds %class.CFGAS_BreakLine, %class.CFGAS_BreakLine* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %class.CFGAS_Char*, %class.CFGAS_Char** %14, align 8
  %16 = getelementptr inbounds %class.CFGAS_BreakLine, %class.CFGAS_BreakLine* %13, i64 0, i32 0, i32 0, i32 1
  %17 = load %class.CFGAS_Char*, %class.CFGAS_Char** %16, align 8
  %18 = icmp eq %class.CFGAS_Char* %15, %17
  br i1 %18, label %31, label %19

19:                                               ; preds = %8
  %20 = ptrtoint %class.CFGAS_Char* %15 to i64
  %21 = ptrtoint %class.CFGAS_Char* %17 to i64
  %22 = sub i64 %21, %20
  %23 = sdiv exact i64 %22, 56
  %24 = trunc i64 %23 to i32
  %25 = add i32 %24, -1
  %26 = tail call %class.CFGAS_Char* @_ZN15CFGAS_BreakLine7GetCharEi(%class.CFGAS_BreakLine* %13, i32 %25) #9
  %27 = getelementptr inbounds %class.CFGAS_Char, %class.CFGAS_Char* %26, i64 0, i32 0
  %28 = load i8, i8* %27, align 8
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %19
  store i8 1, i8* %27, align 8
  br label %31

31:                                               ; preds = %8, %19, %30
  store i32 %4, i32* %5, align 8
  br label %32

32:                                               ; preds = %2, %31
  ret void
}

declare i32 @FXSYS_roundf(float) local_unnamed_addr #1

declare %class.CFGAS_Char* @_ZN15CFGAS_BreakLine7GetCharEi(%class.CFGAS_BreakLine*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK11CFGAS_Break22IsGreaterThanLineWidthEi(%class.CFGAS_Break* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 7
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 13
  %6 = load i32, i32* %5, align 8
  %7 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %4, i32 %6) #9
  %8 = extractvalue { i32, i1 } %7, 1
  %9 = extractvalue { i32, i1 } %7, 0
  %10 = xor i1 %8, true
  %11 = icmp slt i32 %9, %1
  %12 = and i1 %11, %10
  ret i1 %12
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i8 @_ZNK11CFGAS_Break18GetUnifiedCharTypeE11FX_CHARTYPE(%class.CFGAS_Break* nocapture readnone, i8 zeroext) local_unnamed_addr #5 align 2 {
  %3 = icmp ugt i8 %1, 6
  %4 = select i1 %3, i8 12, i8 %1
  ret i8 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CFGAS_Break11SetTabWidthEf(%class.CFGAS_Break* nocapture, float) local_unnamed_addr #0 align 2 {
  %3 = fmul float %1, 2.000000e+04
  %4 = tail call i32 @FXSYS_roundf(float %3) #9
  %5 = icmp sgt i32 %4, 160000
  %6 = select i1 %5, i32 %4, i32 160000
  %7 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 10
  store i32 %6, i32* %7, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN11CFGAS_Break21SetParagraphBreakCharEw(%class.CFGAS_Break* nocapture, i32 signext) local_unnamed_addr #4 align 2 {
  switch i32 %1, label %5 [
    i32 13, label %3
    i32 10, label %3
  ]

3:                                                ; preds = %2, %2
  %4 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 8
  store i32 %1, i32* %4, align 4
  br label %5

5:                                                ; preds = %2, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CFGAS_Break21SetLineBreakToleranceEf(%class.CFGAS_Break* nocapture, float) local_unnamed_addr #0 align 2 {
  %3 = fmul float %1, 2.000000e+04
  %4 = tail call i32 @FXSYS_roundf(float %3) #9
  %5 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 13
  store i32 %4, i32* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CFGAS_Break12SetCharSpaceEf(%class.CFGAS_Break* nocapture, float) local_unnamed_addr #0 align 2 {
  %3 = fmul float %1, 2.000000e+04
  %4 = tail call i32 @FXSYS_roundf(float %3) #9
  %5 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 14
  store i32 %4, i32* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CFGAS_Break15SetLineBoundaryEff(%class.CFGAS_Break* nocapture, float, float) local_unnamed_addr #0 align 2 {
  %4 = fcmp ogt float %1, %2
  br i1 %4, label %24, label %5

5:                                                ; preds = %3
  %6 = fmul float %1, 2.000000e+04
  %7 = tail call i32 @FXSYS_roundf(float %6) #9
  %8 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 6
  store i32 %7, i32* %8, align 4
  %9 = fmul float %2, 2.000000e+04
  %10 = tail call i32 @FXSYS_roundf(float %9) #9
  %11 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 7
  store i32 %10, i32* %11, align 8
  %12 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 16, i32 0
  %13 = load %class.CFGAS_BreakLine*, %class.CFGAS_BreakLine** %12, align 8
  %14 = getelementptr inbounds %class.CFGAS_BreakLine, %class.CFGAS_BreakLine* %13, i64 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp slt i32 %10, %15
  %17 = select i1 %16, i32 %10, i32 %15
  store i32 %17, i32* %14, align 8
  %18 = load %class.CFGAS_BreakLine*, %class.CFGAS_BreakLine** %12, align 8
  %19 = getelementptr inbounds %class.CFGAS_BreakLine, %class.CFGAS_BreakLine* %18, i64 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = load i32, i32* %8, align 4
  %22 = icmp slt i32 %20, %21
  %23 = select i1 %22, i32 %21, i32 %20
  store i32 %23, i32* %19, align 8
  br label %24

24:                                               ; preds = %3, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.CFGAS_Char* @_ZNK11CFGAS_Break11GetLastCharEibb(%class.CFGAS_Break* nocapture readonly, i32, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 16, i32 0
  %6 = load %class.CFGAS_BreakLine*, %class.CFGAS_BreakLine** %5, align 8
  %7 = icmp sgt i32 %1, -1
  br i1 %7, label %8, label %51

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.CFGAS_BreakLine, %class.CFGAS_BreakLine* %6, i64 0, i32 0, i32 0, i32 1
  %10 = bitcast %class.CFGAS_Char** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %class.CFGAS_BreakLine* %6 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = sdiv exact i64 %14, 56
  %16 = icmp ult i64 %15, 2147483648
  %17 = inttoptr i64 %13 to %class.CFGAS_Char*
  br i1 %16, label %19, label %18, !prof !2

18:                                               ; preds = %8
  tail call void @llvm.trap() #9
  unreachable

19:                                               ; preds = %8
  %20 = trunc i64 %15 to i32
  %21 = icmp sgt i32 %20, %1
  %22 = icmp sgt i32 %20, 0
  %23 = and i1 %21, %22
  br i1 %23, label %24, label %51

24:                                               ; preds = %19
  %25 = getelementptr inbounds %class.CFGAS_BreakLine, %class.CFGAS_BreakLine* %6, i64 0, i32 0, i32 0, i32 0
  %26 = shl i64 %15, 32
  %27 = ashr exact i64 %26, 32
  br label %28

28:                                               ; preds = %49, %24
  %29 = phi %class.CFGAS_Char* [ %17, %24 ], [ %50, %49 ]
  %30 = phi i64 [ %27, %24 ], [ %32, %49 ]
  %31 = phi i32 [ %1, %24 ], [ %47, %49 ]
  %32 = add nsw i64 %30, -1
  %33 = getelementptr inbounds %class.CFGAS_Char, %class.CFGAS_Char* %29, i64 %32
  br i1 %3, label %34, label %39

34:                                               ; preds = %28
  %35 = getelementptr inbounds %class.CFGAS_Char, %class.CFGAS_Char* %29, i64 %32, i32 5
  %36 = load i32, i32* %35, align 8
  %37 = icmp slt i32 %36, 0
  %38 = or i1 %37, %2
  br i1 %38, label %40, label %43

39:                                               ; preds = %28
  br i1 %2, label %40, label %43

40:                                               ; preds = %34, %39
  %41 = tail call zeroext i8 @_ZNK10CFGAS_Char11GetCharTypeEv(%class.CFGAS_Char* %33) #9
  %42 = icmp eq i8 %41, 4
  br i1 %42, label %46, label %43

43:                                               ; preds = %34, %40, %39
  %44 = add nsw i32 %31, -1
  %45 = icmp slt i32 %31, 1
  br i1 %45, label %51, label %46

46:                                               ; preds = %43, %40
  %47 = phi i32 [ %31, %40 ], [ %44, %43 ]
  %48 = icmp sgt i64 %32, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %46
  %50 = load %class.CFGAS_Char*, %class.CFGAS_Char** %25, align 8
  br label %28

51:                                               ; preds = %46, %43, %4, %19
  %52 = phi %class.CFGAS_Char* [ null, %19 ], [ null, %4 ], [ null, %46 ], [ %33, %43 ]
  ret %class.CFGAS_Char* %52
}

declare zeroext i8 @_ZNK10CFGAS_Char11GetCharTypeEv(%class.CFGAS_Char*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK11CFGAS_Break16CountBreakPiecesEv(%class.CFGAS_Break* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 17
  %3 = load i8, i8* %2, align 8
  %4 = icmp sgt i8 %3, -1
  br i1 %4, label %5, label %19

5:                                                ; preds = %1
  %6 = sext i8 %3 to i64
  %7 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 19, i64 %6, i32 1
  %8 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 19, i64 %6, i32 1, i32 0, i32 1
  %9 = bitcast %class.CFGAS_BreakPiece** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.72"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 6
  %15 = icmp ult i64 %14, 2147483648
  br i1 %15, label %17, label %16, !prof !2

16:                                               ; preds = %5
  tail call void @llvm.trap() #9
  unreachable

17:                                               ; preds = %5
  %18 = trunc i64 %14 to i32
  br label %19

19:                                               ; preds = %1, %17
  %20 = phi i32 [ %18, %17 ], [ 0, %1 ]
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.CFGAS_BreakPiece* @_ZNK11CFGAS_Break21GetBreakPieceUnstableEi(%class.CFGAS_Break* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 17
  %4 = load i8, i8* %3, align 8
  %5 = icmp sgt i8 %4, -1
  br i1 %5, label %6, label %27

6:                                                ; preds = %2
  %7 = sext i8 %4 to i64
  %8 = icmp sgt i32 %1, -1
  br i1 %8, label %9, label %27

9:                                                ; preds = %6
  %10 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 19, i64 %7, i32 1
  %11 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 19, i64 %7, i32 1, i32 0, i32 1
  %12 = bitcast %class.CFGAS_BreakPiece** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.72"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = ashr exact i64 %16, 6
  %18 = icmp ult i64 %17, 2147483648
  %19 = inttoptr i64 %15 to %class.CFGAS_BreakPiece*
  br i1 %18, label %21, label %20, !prof !2

20:                                               ; preds = %9
  tail call void @llvm.trap() #9
  unreachable

21:                                               ; preds = %9
  %22 = trunc i64 %17 to i32
  %23 = icmp sgt i32 %22, %1
  br i1 %23, label %24, label %27

24:                                               ; preds = %21
  %25 = sext i32 %1 to i64
  %26 = getelementptr inbounds %class.CFGAS_BreakPiece, %class.CFGAS_BreakPiece* %19, i64 %25
  br label %27

27:                                               ; preds = %6, %21, %2, %24
  %28 = phi %class.CFGAS_BreakPiece* [ %26, %24 ], [ null, %2 ], [ null, %21 ], [ null, %6 ]
  ret %class.CFGAS_BreakPiece* %28
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CFGAS_Break16ClearBreakPiecesEv(%class.CFGAS_Break*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 17
  %3 = load i8, i8* %2, align 8
  %4 = icmp sgt i8 %3, -1
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = sext i8 %3 to i64
  %7 = getelementptr inbounds %class.CFGAS_Break, %class.CFGAS_Break* %0, i64 0, i32 19, i64 %6
  tail call void @_ZN15CFGAS_BreakLine5ClearEv(%class.CFGAS_BreakLine* %7) #9
  br label %8

8:                                                ; preds = %5, %1
  store i8 -1, i8* %2, align 8
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { argmemonly nounwind }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
