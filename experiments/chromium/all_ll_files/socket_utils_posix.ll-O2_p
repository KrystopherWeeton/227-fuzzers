; ModuleID = '../../mojo/public/cpp/platform/socket_utils_posix.cc'
source_filename = "../../mojo/public/cpp/platform/socket_utils_posix.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%struct.iovec = type { i8*, i64 }
%struct.msghdr = type { i8*, i32, %struct.iovec*, i64, i8*, i64, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::ScopedGeneric"*, %"class.base::ScopedGeneric"*, %"class.std::__1::__compressed_pair" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::ScopedGeneric"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%struct.cmsghdr = type { i64, i32, i32, [0 x i8] }
%struct.ucred = type { i32, i32, i32 }
%"class.logging::ErrnoLogMessage" = type <{ %"class.logging::LogMessage", i32, [4 x i8] }>
%struct.sockaddr = type { i16, [14 x i8] }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED0Ev = comdat any

$_ZNSt3__16vectorIN4base13ScopedGenericIiNS1_8internal19ScopedFDCloseTraitsEEENS_9allocatorIS5_EEE24__emplace_back_slow_pathIJS5_EEEvDpOT_ = comdat any

$_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE = comdat any

@.str = private unnamed_addr constant [41 x i8] c"descriptors.size() <= kMaxSendmsgHandles\00", align 1
@.str.1 = private unnamed_addr constant [53 x i8] c"../../mojo/public/cpp/platform/socket_utils_posix.cc\00", align 1
@.str.2 = private unnamed_addr constant [31 x i8] c"base::SetNonBlocking() failed \00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"getsockopt \00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::ScopedGeneric"*)* @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev to i8*), i8* bitcast (void (%"class.base::ScopedGeneric"*)* @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED0Ev to i8*)] }, comdat, align 8
@.str.5 = private unnamed_addr constant [28 x i8] c"../../base/scoped_generic.h\00", align 1
@.str.6 = private unnamed_addr constant [12 x i8] c"!receiving_\00", align 1
@.str.7 = private unnamed_addr constant [45 x i8] c"ScopedGeneric destroyed with active receiver\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4mojo11SocketWriteEiPKvm(i32, i8*, i64) local_unnamed_addr #0 {
  %4 = tail call i64 @send(i32 %0, i8* %1, i64 %2, i32 16384) #10
  ret i64 %4
}

declare i64 @send(i32, i8*, i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4mojo12SocketWritevEiP5iovecm(i32, %struct.iovec*, i64) local_unnamed_addr #0 {
  %4 = alloca %struct.msghdr, align 8
  %5 = bitcast %struct.msghdr* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 56, i1 false)
  %6 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i64 0, i32 2
  store %struct.iovec* %1, %struct.iovec** %6, align 8
  %7 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i64 0, i32 3
  store i64 %2, i64* %7, align 8
  br label %8

8:                                                ; preds = %11, %3
  %9 = call i64 @sendmsg(i32 %0, %struct.msghdr* nonnull %4, i32 16384) #10
  %10 = icmp eq i64 %9, -1
  br i1 %10, label %11, label %15

11:                                               ; preds = %8
  %12 = tail call i32* @__errno_location() #11
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 4
  br i1 %14, label %8, label %15

15:                                               ; preds = %8, %11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #10
  ret i64 %9
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i64 @sendmsg(i32, %struct.msghdr*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4mojo18SendmsgWithHandlesEiP5iovecmRKNSt3__16vectorIN4base13ScopedGenericIiNS4_8internal19ScopedFDCloseTraitsEEENS2_9allocatorIS8_EEEE(i32, %struct.iovec*, i64, %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca [528 x i8], align 16
  %9 = alloca %struct.msghdr, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %13 = bitcast %"class.base::ScopedGeneric"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector"* %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = ashr exact i64 %17, 4
  %19 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i64 %18, 128
  br i1 %20, label %22, label %21

21:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %11, align 8
  br label %31

22:                                               ; preds = %4
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %18) #10
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 128) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0), i8* %23, i8* %24) #10
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %11, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #10
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #10
  br label %31

31:                                               ; preds = %21, %22, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #10
  %32 = getelementptr inbounds [528 x i8], [528 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 528, i8* nonnull %32) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %32, i8 -86, i64 528, i1 false)
  %33 = bitcast %struct.msghdr* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %33) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 56, i1 false)
  %34 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %9, i64 0, i32 2
  store %struct.iovec* %1, %struct.iovec** %34, align 8
  %35 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %9, i64 0, i32 3
  store i64 %2, i64* %35, align 8
  %36 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %9, i64 0, i32 4
  store i8* %32, i8** %36, align 8
  %37 = load i64, i64* %13, align 8
  %38 = load i64, i64* %15, align 8
  %39 = sub i64 %37, %38
  %40 = ashr exact i64 %39, 2
  %41 = add nsw i64 %40, 16
  %42 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %9, i64 0, i32 5
  store i64 %41, i64* %42, align 8
  %43 = icmp ugt i64 %41, 15
  %44 = bitcast [528 x i8]* %8 to %struct.cmsghdr*
  %45 = select i1 %43, %struct.cmsghdr* %44, %struct.cmsghdr* null
  %46 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %45, i64 0, i32 1
  store i32 1, i32* %46, align 8
  %47 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %45, i64 0, i32 2
  store i32 1, i32* %47, align 4
  %48 = load i64, i64* %13, align 8
  %49 = load i64, i64* %15, align 8
  %50 = sub i64 %48, %49
  %51 = ashr exact i64 %50, 2
  %52 = add nsw i64 %51, 16
  %53 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %45, i64 0, i32 0
  store i64 %52, i64* %53, align 16
  %54 = load i64, i64* %13, align 8
  %55 = load i64, i64* %15, align 8
  %56 = icmp eq i64 %54, %55
  br i1 %56, label %73, label %57

57:                                               ; preds = %31
  %58 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %45, i64 0, i32 3, i64 0
  %59 = bitcast i8* %58 to i32*
  br label %60

60:                                               ; preds = %57, %60
  %61 = phi i64 [ %55, %57 ], [ %69, %60 ]
  %62 = phi i64 [ 0, %57 ], [ %67, %60 ]
  %63 = inttoptr i64 %61 to %"class.base::ScopedGeneric"*
  %64 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %63, i64 %62, i32 1, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds i32, i32* %59, i64 %62
  store i32 %65, i32* %66, align 4
  %67 = add nuw i64 %62, 1
  %68 = load i64, i64* %13, align 8
  %69 = load i64, i64* %15, align 8
  %70 = sub i64 %68, %69
  %71 = ashr exact i64 %70, 4
  %72 = icmp ult i64 %67, %71
  br i1 %72, label %60, label %73

73:                                               ; preds = %60, %31
  br label %74

74:                                               ; preds = %73, %77
  %75 = call i64 @sendmsg(i32 %0, %struct.msghdr* nonnull %9, i32 16384) #10
  %76 = icmp eq i64 %75, -1
  br i1 %76, label %77, label %81

77:                                               ; preds = %74
  %78 = tail call i32* @__errno_location() #11
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 4
  br i1 %80, label %74, label %81

81:                                               ; preds = %74, %77
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %33) #10
  call void @llvm.lifetime.end.p0i8(i64 528, i8* nonnull %32) #10
  ret i64 %75
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4mojo13SocketRecvmsgEiPvmPNSt3__16vectorIN4base13ScopedGenericIiNS3_8internal19ScopedFDCloseTraitsEEENS1_9allocatorIS7_EEEEb(i32, i8*, i64, %"class.std::__1::vector"*, i1 zeroext) local_unnamed_addr #0 {
  %6 = alloca %struct.iovec, align 8
  %7 = alloca [528 x i8], align 16
  %8 = alloca %struct.msghdr, align 8
  %9 = alloca %"class.base::ScopedGeneric", align 8
  %10 = bitcast %struct.iovec* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #10
  %11 = getelementptr inbounds %struct.iovec, %struct.iovec* %6, i64 0, i32 0
  %12 = getelementptr inbounds %struct.iovec, %struct.iovec* %6, i64 0, i32 1
  store i8* %1, i8** %11, align 8
  store i64 %2, i64* %12, align 8
  %13 = getelementptr inbounds [528 x i8], [528 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 528, i8* nonnull %13) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -86, i64 528, i1 false)
  %14 = bitcast %struct.msghdr* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 56, i1 false)
  %15 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %8, i64 0, i32 2
  store %struct.iovec* %6, %struct.iovec** %15, align 8
  %16 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %8, i64 0, i32 3
  store i64 1, i64* %16, align 8
  %17 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %8, i64 0, i32 4
  store i8* %13, i8** %17, align 8
  %18 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %8, i64 0, i32 5
  store i64 528, i64* %18, align 8
  %19 = select i1 %4, i32 0, i32 64
  br label %20

20:                                               ; preds = %23, %5
  %21 = call i64 @recvmsg(i32 %0, %struct.msghdr* nonnull %8, i32 %19) #10
  %22 = icmp eq i64 %21, -1
  br i1 %22, label %23, label %27

23:                                               ; preds = %20
  %24 = tail call i32* @__errno_location() #11
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 4
  br i1 %26, label %20, label %132

27:                                               ; preds = %20
  %28 = icmp slt i64 %21, 0
  %29 = load i64, i64* %18, align 8
  %30 = icmp eq i64 %29, 0
  %31 = or i1 %28, %30
  br i1 %31, label %132, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %34 = load %"class.base::ScopedGeneric"*, %"class.base::ScopedGeneric"** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %36 = load %"class.base::ScopedGeneric"*, %"class.base::ScopedGeneric"** %35, align 8
  %37 = icmp eq %"class.base::ScopedGeneric"* %36, %34
  br i1 %37, label %47, label %38

38:                                               ; preds = %32, %38
  %39 = phi %"class.base::ScopedGeneric"* [ %40, %38 ], [ %36, %32 ]
  %40 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %39, i64 -1
  %41 = bitcast %"class.base::ScopedGeneric"* %40 to void (%"class.base::ScopedGeneric"*)***
  %42 = load void (%"class.base::ScopedGeneric"*)**, void (%"class.base::ScopedGeneric"*)*** %41, align 8
  %43 = load void (%"class.base::ScopedGeneric"*)*, void (%"class.base::ScopedGeneric"*)** %42, align 8
  call void %43(%"class.base::ScopedGeneric"* %40) #10
  %44 = icmp eq %"class.base::ScopedGeneric"* %40, %34
  br i1 %44, label %45, label %38

45:                                               ; preds = %38
  %46 = load i64, i64* %18, align 8
  br label %47

47:                                               ; preds = %45, %32
  %48 = phi i64 [ %46, %45 ], [ %29, %32 ]
  store %"class.base::ScopedGeneric"* %34, %"class.base::ScopedGeneric"** %35, align 8
  %49 = icmp ult i64 %48, 16
  %50 = bitcast i8** %17 to %struct.cmsghdr**
  %51 = load %struct.cmsghdr*, %struct.cmsghdr** %50, align 8
  %52 = icmp eq %struct.cmsghdr* %51, null
  %53 = or i1 %52, %49
  br i1 %53, label %132, label %54

54:                                               ; preds = %47
  %55 = bitcast %"class.base::ScopedGeneric"* %9 to i8*
  %56 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %9, i64 0, i32 0
  %57 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %9, i64 0, i32 1, i32 0
  %58 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %9, i64 0, i32 2
  %59 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %60 = bitcast %"class.base::ScopedGeneric"** %35 to i64*
  %61 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %9, i64 0, i32 1
  %62 = bitcast %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data"* %61 to i64*
  br label %63

63:                                               ; preds = %122, %54
  %64 = phi %struct.cmsghdr* [ %51, %54 ], [ %123, %122 ]
  %65 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %64, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %68, label %108

68:                                               ; preds = %63
  %69 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %64, i64 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %108

72:                                               ; preds = %68
  %73 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %64, i64 0, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, -16
  %76 = lshr i64 %75, 2
  %77 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %64, i64 0, i32 3, i64 0
  %78 = bitcast i8* %77 to i32*
  %79 = icmp eq i64 %76, 0
  br i1 %79, label %108, label %80

80:                                               ; preds = %72, %105
  %81 = phi i64 [ %106, %105 ], [ 0, %72 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55) #10
  %82 = getelementptr inbounds i32, i32* %78, i64 %81
  store i64 -6148914691236517206, i64* %62, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %83 = load i32, i32* %82, align 4
  store i32 %83, i32* %57, align 8
  store i8 0, i8* %58, align 4
  %84 = icmp eq i32 %83, -1
  br i1 %84, label %86, label %85

85:                                               ; preds = %80
  call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %9, i32 %83) #10
  br label %86

86:                                               ; preds = %80, %85
  %87 = load %"class.base::ScopedGeneric"*, %"class.base::ScopedGeneric"** %35, align 8
  %88 = load %"class.base::ScopedGeneric"*, %"class.base::ScopedGeneric"** %59, align 8
  %89 = icmp ult %"class.base::ScopedGeneric"* %87, %88
  br i1 %89, label %90, label %104

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %87, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %91, align 8
  %92 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %87, i64 0, i32 1
  %93 = load i32, i32* %57, align 8
  store i32 -1, i32* %57, align 8
  %94 = icmp eq i32 %93, -1
  br i1 %94, label %95, label %98

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data"* %92, i64 0, i32 0
  store i32 -1, i32* %96, align 4
  %97 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %87, i64 0, i32 2
  store i8 0, i8* %97, align 4
  br label %101

98:                                               ; preds = %90
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %9, i32 %93) #10
  %99 = getelementptr inbounds %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data"* %92, i64 0, i32 0
  store i32 %93, i32* %99, align 4
  %100 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %87, i64 0, i32 2
  store i8 0, i8* %100, align 4
  call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %87, i32 %93) #10
  br label %101

101:                                              ; preds = %98, %95
  %102 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %87, i64 1
  %103 = ptrtoint %"class.base::ScopedGeneric"* %102 to i64
  store i64 %103, i64* %60, align 8
  br label %105

104:                                              ; preds = %86
  call void @_ZNSt3__16vectorIN4base13ScopedGenericIiNS1_8internal19ScopedFDCloseTraitsEEENS_9allocatorIS5_EEE24__emplace_back_slow_pathIJS5_EEEvDpOT_(%"class.std::__1::vector"* %3, %"class.base::ScopedGeneric"* nonnull dereferenceable(16) %9) #10
  br label %105

105:                                              ; preds = %101, %104
  call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #10
  %106 = add nuw nsw i64 %81, 1
  %107 = icmp eq i64 %106, %76
  br i1 %107, label %108, label %80

108:                                              ; preds = %105, %72, %63, %68
  %109 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %64, i64 0, i32 0
  %110 = load i64, i64* %109, align 8
  %111 = icmp ult i64 %110, 16
  br i1 %111, label %132, label %112

112:                                              ; preds = %108
  %113 = bitcast %struct.cmsghdr* %64 to i8*
  %114 = add i64 %110, 7
  %115 = and i64 %114, -8
  %116 = getelementptr inbounds i8, i8* %113, i64 %115
  %117 = getelementptr inbounds i8, i8* %116, i64 16
  %118 = load i8*, i8** %17, align 8
  %119 = load i64, i64* %18, align 8
  %120 = getelementptr inbounds i8, i8* %118, i64 %119
  %121 = icmp ugt i8* %117, %120
  br i1 %121, label %132, label %122

122:                                              ; preds = %112
  %123 = bitcast i8* %116 to %struct.cmsghdr*
  %124 = bitcast i8* %116 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = add i64 %125, 7
  %127 = and i64 %126, -8
  %128 = getelementptr inbounds i8, i8* %116, i64 %127
  %129 = icmp ugt i8* %128, %120
  %130 = icmp eq i8* %116, null
  %131 = or i1 %129, %130
  br i1 %131, label %132, label %63

132:                                              ; preds = %23, %122, %108, %112, %47, %27
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 528, i8* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #10
  ret i64 %21
}

declare i64 @recvmsg(i32, %struct.msghdr*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i32 128, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0)) #10
  %9 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %9, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.7, i64 0, i64 0), i64 44) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #10
  br label %11

11:                                               ; preds = %1, %7
  %12 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %0, i32 %13) #10
  %16 = load i32, i32* %12, align 8
  call void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32 %16) #10
  store i32 -1, i32* %12, align 8
  br label %17

17:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo22AcceptSocketConnectionEiPN4base13ScopedGenericIiNS0_8internal19ScopedFDCloseTraitsEEEb(i32, %"class.base::ScopedGeneric"*, i1 zeroext) local_unnamed_addr #0 {
  %4 = alloca %struct.ucred, align 4
  %5 = alloca i32, align 4
  %6 = alloca %"class.logging::ErrnoLogMessage", align 8
  %7 = alloca %"class.base::ScopedGeneric", align 8
  %8 = alloca %"class.logging::ErrnoLogMessage", align 8
  %9 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %1, i64 0, i32 1, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %14, label %12

12:                                               ; preds = %3
  tail call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %1, i32 %10) #10
  %13 = load i32, i32* %9, align 8
  tail call void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32 %13) #10
  store i32 -1, i32* %9, align 8
  br label %14

14:                                               ; preds = %3, %12
  store i32 -1, i32* %9, align 8
  %15 = bitcast %"class.base::ScopedGeneric"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %7, i64 0, i32 0
  %17 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %7, i64 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %7, i64 0, i32 2
  %19 = bitcast %"class.base::ScopedGeneric"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 16, i1 false)
  br label %20

20:                                               ; preds = %23, %14
  %21 = tail call i32 @accept(i32 %0, %struct.sockaddr* null, i32* null) #10
  %22 = icmp eq i32 %21, -1
  br i1 %22, label %23, label %28

23:                                               ; preds = %20
  %24 = tail call i32* @__errno_location() #11
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 4
  br i1 %26, label %20, label %27

27:                                               ; preds = %23
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  store i32 -1, i32* %17, align 8
  store i8 0, i8* %18, align 4
  br label %33

28:                                               ; preds = %20
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  store i32 %21, i32* %17, align 8
  store i8 0, i8* %18, align 4
  call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %7, i32 %21) #10
  %29 = load i32, i32* %17, align 8
  %30 = icmp eq i32 %29, -1
  br i1 %30, label %31, label %37

31:                                               ; preds = %28
  %32 = tail call i32* @__errno_location() #11
  br label %33

33:                                               ; preds = %31, %27
  %34 = phi i32* [ %32, %31 ], [ %24, %27 ]
  %35 = load i32, i32* %34, align 4
  switch i32 %35, label %36 [
    i32 103, label %92
    i32 24, label %92
    i32 23, label %92
    i32 12, label %92
    i32 105, label %92
  ]

36:                                               ; preds = %33
  br label %92

37:                                               ; preds = %28
  br i1 %2, label %38, label %65

38:                                               ; preds = %37
  %39 = bitcast %struct.ucred* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %39) #10
  %40 = getelementptr inbounds %struct.ucred, %struct.ucred* %4, i64 0, i32 0
  store i32 -1431655766, i32* %40, align 4
  %41 = getelementptr inbounds %struct.ucred, %struct.ucred* %4, i64 0, i32 1
  store i32 -1431655766, i32* %41, align 4
  %42 = getelementptr inbounds %struct.ucred, %struct.ucred* %4, i64 0, i32 2
  store i32 -1431655766, i32* %42, align 4
  %43 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %43) #10
  store i32 12, i32* %5, align 4
  %44 = call i32 @getsockopt(i32 %29, i32 1, i32 17, i8* nonnull %39, i32* nonnull %5) #10
  %45 = icmp slt i32 %44, 0
  br i1 %45, label %46, label %55

46:                                               ; preds = %38
  %47 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #10
  br i1 %47, label %48, label %58

48:                                               ; preds = %46
  %49 = bitcast %"class.logging::ErrnoLogMessage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 312, i8* nonnull %49) #10
  %50 = call i32 @_ZN7logging22GetLastSystemErrorCodeEv() #10
  call void @_ZN7logging15ErrnoLogMessageC1EPKciii(%"class.logging::ErrnoLogMessage"* nonnull %6, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1, i64 0, i64 0), i32 45, i32 2, i32 %50) #10
  %51 = getelementptr inbounds %"class.logging::ErrnoLogMessage", %"class.logging::ErrnoLogMessage"* %6, i64 0, i32 0, i32 2
  %52 = bitcast %"class.std::__1::basic_ostringstream"* %51 to %"class.std::__1::basic_ostream"*
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %52, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0), i64 11) #10
  %54 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %53, i32 %29) #10
  call void @_ZN7logging15ErrnoLogMessageD1Ev(%"class.logging::ErrnoLogMessage"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 312, i8* nonnull %49) #10
  br label %58

55:                                               ; preds = %38
  %56 = load i32, i32* %5, align 4
  %57 = icmp ult i32 %56, 12
  br i1 %57, label %58, label %59

58:                                               ; preds = %46, %48, %55
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %39) #10
  br label %92

59:                                               ; preds = %55
  %60 = load i32, i32* %41, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %39) #10
  %61 = call i32 @geteuid() #10
  %62 = icmp eq i32 %60, %61
  br i1 %62, label %63, label %92

63:                                               ; preds = %59
  %64 = load i32, i32* %17, align 8
  br label %65

65:                                               ; preds = %63, %37
  %66 = phi i32 [ %64, %63 ], [ %29, %37 ]
  %67 = call zeroext i1 @_ZN4base14SetNonBlockingEi(i32 %66) #10
  br i1 %67, label %78, label %68

68:                                               ; preds = %65
  %69 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #10
  br i1 %69, label %70, label %92

70:                                               ; preds = %68
  %71 = bitcast %"class.logging::ErrnoLogMessage"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 312, i8* nonnull %71) #10
  %72 = call i32 @_ZN7logging22GetLastSystemErrorCodeEv() #10
  call void @_ZN7logging15ErrnoLogMessageC1EPKciii(%"class.logging::ErrnoLogMessage"* nonnull %8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1, i64 0, i64 0), i32 184, i32 2, i32 %72) #10
  %73 = getelementptr inbounds %"class.logging::ErrnoLogMessage", %"class.logging::ErrnoLogMessage"* %8, i64 0, i32 0, i32 2
  %74 = bitcast %"class.std::__1::basic_ostringstream"* %73 to %"class.std::__1::basic_ostream"*
  %75 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %74, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), i64 30) #10
  %76 = load i32, i32* %17, align 8
  %77 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %75, i32 %76) #10
  call void @_ZN7logging15ErrnoLogMessageD1Ev(%"class.logging::ErrnoLogMessage"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 312, i8* nonnull %71) #10
  br label %92

78:                                               ; preds = %65
  %79 = load i32, i32* %17, align 8
  store i32 -1, i32* %17, align 8
  %80 = icmp eq i32 %79, -1
  br i1 %80, label %82, label %81

81:                                               ; preds = %78
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %7, i32 %79) #10
  br label %82

82:                                               ; preds = %81, %78
  %83 = load i32, i32* %9, align 8
  %84 = icmp eq i32 %83, -1
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = icmp eq i32 %83, %79
  br i1 %86, label %87, label %88

87:                                               ; preds = %85
  call void @abort() #12
  unreachable

88:                                               ; preds = %85
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %1, i32 %83) #10
  %89 = load i32, i32* %9, align 8
  call void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32 %89) #10
  store i32 -1, i32* %9, align 8
  br label %90

90:                                               ; preds = %88, %82
  store i32 %79, i32* %9, align 8
  br i1 %80, label %92, label %91

91:                                               ; preds = %90
  call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %1, i32 %79) #10
  br label %92

92:                                               ; preds = %91, %90, %70, %68, %58, %36, %33, %33, %33, %33, %33, %59
  %93 = phi i1 [ true, %59 ], [ true, %33 ], [ false, %36 ], [ true, %33 ], [ true, %33 ], [ true, %33 ], [ true, %33 ], [ true, %58 ], [ true, %68 ], [ true, %70 ], [ true, %90 ], [ true, %91 ]
  call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #10
  ret i1 %93
}

declare i32 @accept(i32, %struct.sockaddr*, i32*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base14SetNonBlockingEi(i32) local_unnamed_addr #1

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #1

declare i32 @_ZN7logging22GetLastSystemErrorCodeEv() local_unnamed_addr #1

declare void @_ZN7logging15ErrnoLogMessageC1EPKciii(%"class.logging::ErrnoLogMessage"*, i8*, i32, i32, i32) unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging15ErrnoLogMessageD1Ev(%"class.logging::ErrnoLogMessage"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind
declare i32 @geteuid() local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @getsockopt(i32, i32, i32, i8*, i32*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #13
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #10
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED0Ev(%"class.base::ScopedGeneric"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* %0) #10
  %2 = bitcast %"class.base::ScopedGeneric"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

declare void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16), i32) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32) local_unnamed_addr #1

declare void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16), i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base13ScopedGenericIiNS1_8internal19ScopedFDCloseTraitsEEENS_9allocatorIS5_EEE24__emplace_back_slow_pathIJS5_EEEvDpOT_(%"class.std::__1::vector"*, %"class.base::ScopedGeneric"* dereferenceable(16)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.base::ScopedGeneric"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 4
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 1152921504606846975
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.base::ScopedGeneric"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 4
  %20 = icmp ult i64 %19, 576460752303423487
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 3
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 1152921504606846975
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 1152921504606846975, %14 ]
  %31 = shl i64 %30, 4
  %32 = tail call i8* @_Znwm(i64 %31) #13
  %33 = bitcast i8* %32 to %"class.base::ScopedGeneric"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.base::ScopedGeneric"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %36, i64 %9
  %38 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %36, i64 %35
  %39 = ptrtoint %"class.base::ScopedGeneric"* %38 to i64
  %40 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %37, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %41 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %36, i64 %9, i32 1
  %42 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %1, i64 0, i32 1, i32 0
  %43 = load i32, i32* %42, align 8
  store i32 -1, i32* %42, align 8
  %44 = icmp eq i32 %43, -1
  br i1 %44, label %45, label %48

45:                                               ; preds = %34
  %46 = getelementptr inbounds %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data"* %41, i64 0, i32 0
  store i32 -1, i32* %46, align 4
  %47 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %36, i64 %9, i32 2
  store i8 0, i8* %47, align 4
  br label %51

48:                                               ; preds = %34
  tail call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %1, i32 %43) #10
  %49 = getelementptr inbounds %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data"* %41, i64 0, i32 0
  store i32 %43, i32* %49, align 4
  %50 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %36, i64 %9, i32 2
  store i8 0, i8* %50, align 4
  tail call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %37, i32 %43) #10
  br label %51

51:                                               ; preds = %45, %48
  %52 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %37, i64 1
  %53 = ptrtoint %"class.base::ScopedGeneric"* %52 to i64
  %54 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %55 = load %"class.base::ScopedGeneric"*, %"class.base::ScopedGeneric"** %54, align 8
  %56 = load %"class.base::ScopedGeneric"*, %"class.base::ScopedGeneric"** %3, align 8
  %57 = icmp eq %"class.base::ScopedGeneric"* %56, %55
  br i1 %57, label %58, label %60

58:                                               ; preds = %51
  %59 = ptrtoint %"class.base::ScopedGeneric"* %55 to i64
  br label %81

60:                                               ; preds = %51, %76
  %61 = phi %"class.base::ScopedGeneric"* [ %63, %76 ], [ %37, %51 ]
  %62 = phi %"class.base::ScopedGeneric"* [ %64, %76 ], [ %56, %51 ]
  %63 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %61, i64 -1
  %64 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %62, i64 -1
  %65 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %63, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %65, align 8
  %66 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %61, i64 -1, i32 1
  %67 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %62, i64 -1, i32 1, i32 0
  %68 = load i32, i32* %67, align 8
  store i32 -1, i32* %67, align 8
  %69 = icmp eq i32 %68, -1
  br i1 %69, label %70, label %73

70:                                               ; preds = %60
  %71 = getelementptr inbounds %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data"* %66, i64 0, i32 0
  store i32 -1, i32* %71, align 4
  %72 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %61, i64 -1, i32 2
  store i8 0, i8* %72, align 4
  br label %76

73:                                               ; preds = %60
  tail call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %64, i32 %68) #10
  %74 = getelementptr inbounds %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data"* %66, i64 0, i32 0
  store i32 %68, i32* %74, align 4
  %75 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %61, i64 -1, i32 2
  store i8 0, i8* %75, align 4
  tail call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %63, i32 %68) #10
  br label %76

76:                                               ; preds = %73, %70
  %77 = icmp eq %"class.base::ScopedGeneric"* %64, %55
  br i1 %77, label %78, label %60

78:                                               ; preds = %76
  %79 = load i64, i64* %6, align 8
  %80 = load %"class.base::ScopedGeneric"*, %"class.base::ScopedGeneric"** %3, align 8
  br label %81

81:                                               ; preds = %58, %78
  %82 = phi %"class.base::ScopedGeneric"* [ %55, %58 ], [ %80, %78 ]
  %83 = phi %"class.base::ScopedGeneric"* [ %37, %58 ], [ %63, %78 ]
  %84 = phi i64 [ %59, %58 ], [ %79, %78 ]
  %85 = ptrtoint %"class.base::ScopedGeneric"* %83 to i64
  store i64 %85, i64* %6, align 8
  store i64 %53, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %86 = inttoptr i64 %84 to %"class.base::ScopedGeneric"*
  %87 = icmp eq %"class.base::ScopedGeneric"* %82, %86
  br i1 %87, label %95, label %88

88:                                               ; preds = %81, %88
  %89 = phi %"class.base::ScopedGeneric"* [ %90, %88 ], [ %82, %81 ]
  %90 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %89, i64 -1
  %91 = bitcast %"class.base::ScopedGeneric"* %90 to void (%"class.base::ScopedGeneric"*)***
  %92 = load void (%"class.base::ScopedGeneric"*)**, void (%"class.base::ScopedGeneric"*)*** %91, align 8
  %93 = load void (%"class.base::ScopedGeneric"*)*, void (%"class.base::ScopedGeneric"*)** %92, align 8
  tail call void %93(%"class.base::ScopedGeneric"* %90) #10
  %94 = icmp eq %"class.base::ScopedGeneric"* %90, %86
  br i1 %94, label %95, label %88

95:                                               ; preds = %88, %81
  %96 = icmp eq i64 %84, 0
  br i1 %96, label %99, label %97

97:                                               ; preds = %95
  %98 = inttoptr i64 %84 to i8*
  tail call void @_ZdlPv(i8* %98) #13
  br label %99

99:                                               ; preds = %95, %97
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { nounwind readnone }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
