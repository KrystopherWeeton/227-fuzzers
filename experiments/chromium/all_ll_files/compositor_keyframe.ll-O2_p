; ModuleID = '../../third_party/blink/renderer/platform/animation/compositor_keyframe.cc'
source_filename = "../../third_party/blink/renderer/platform/animation/compositor_keyframe.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::CompositorKeyframe" = type { i32 (...)** }
%"class.gfx::TimingFunction" = type { i32 (...)** }

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::TimingFunction"* @_ZNK5blink18CompositorKeyframe27GetTimingFunctionForTestingEv(%"class.blink::CompositorKeyframe"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::CompositorKeyframe"* %0 to %"class.gfx::TimingFunction"* (%"class.blink::CompositorKeyframe"*)***
  %3 = load %"class.gfx::TimingFunction"* (%"class.blink::CompositorKeyframe"*)**, %"class.gfx::TimingFunction"* (%"class.blink::CompositorKeyframe"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.gfx::TimingFunction"* (%"class.blink::CompositorKeyframe"*)*, %"class.gfx::TimingFunction"* (%"class.blink::CompositorKeyframe"*)** %3, i64 3
  %5 = load %"class.gfx::TimingFunction"* (%"class.blink::CompositorKeyframe"*)*, %"class.gfx::TimingFunction"* (%"class.blink::CompositorKeyframe"*)** %4, align 8
  %6 = tail call %"class.gfx::TimingFunction"* %5(%"class.blink::CompositorKeyframe"* %0) #2
  %7 = tail call %"class.blink::TimingFunction"* @_ZN5blink36CreateCompositorTimingFunctionFromCCEPKN3gfx14TimingFunctionE(%"class.gfx::TimingFunction"* %6) #2
  ret %"class.blink::TimingFunction"* %7
}

declare %"class.blink::TimingFunction"* @_ZN5blink36CreateCompositorTimingFunctionFromCCEPKN3gfx14TimingFunctionE(%"class.gfx::TimingFunction"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
