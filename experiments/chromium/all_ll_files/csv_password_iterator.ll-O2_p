; ModuleID = '../../components/password_manager/core/browser/import/csv_password_iterator.cc'
source_filename = "../../components/password_manager/core/browser/import/csv_password_iterator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.password_manager::CSVPasswordIterator" = type { %"class.base::flat_map"*, %"class.base::BasicStringPiece", %"class.base::BasicStringPiece", %"class.absl::optional" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type <{ i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.password_manager::CSVPassword" }
%"class.password_manager::CSVPassword" = type { %"class.base::flat_map"*, %"class.base::BasicStringPiece" }

@_ZN16password_manager19CSVPasswordIteratorC1Ev = hidden unnamed_addr alias void (%"class.password_manager::CSVPasswordIterator"*), void (%"class.password_manager::CSVPasswordIterator"*)* @_ZN16password_manager19CSVPasswordIteratorC2Ev
@_ZN16password_manager19CSVPasswordIteratorC1ERKN4base8flat_mapImNS_11CSVPassword5LabelENSt3__14lessIvEENS5_6vectorINS5_4pairImS4_EENS5_9allocatorISA_EEEEEENS1_16BasicStringPieceIcNS5_11char_traitsIcEEEE = hidden unnamed_addr alias void (%"class.password_manager::CSVPasswordIterator"*, %"class.base::flat_map"*, i8*, i64), void (%"class.password_manager::CSVPasswordIterator"*, %"class.base::flat_map"*, i8*, i64)* @_ZN16password_manager19CSVPasswordIteratorC2ERKN4base8flat_mapImNS_11CSVPassword5LabelENSt3__14lessIvEENS5_6vectorINS5_4pairImS4_EENS5_9allocatorISA_EEEEEENS1_16BasicStringPieceIcNS5_11char_traitsIcEEEE
@_ZN16password_manager19CSVPasswordIteratorC1ERKS0_ = hidden unnamed_addr alias void (%"class.password_manager::CSVPasswordIterator"*, %"class.password_manager::CSVPasswordIterator"*), void (%"class.password_manager::CSVPasswordIterator"*, %"class.password_manager::CSVPasswordIterator"*)* @_ZN16password_manager19CSVPasswordIteratorC2ERKS0_
@_ZN16password_manager19CSVPasswordIteratorD1Ev = hidden unnamed_addr alias void (%"class.password_manager::CSVPasswordIterator"*), void (%"class.password_manager::CSVPasswordIterator"*)* @_ZN16password_manager19CSVPasswordIteratorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16password_manager19CSVPasswordIteratorC2Ev(%"class.password_manager::CSVPasswordIterator"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %3 = bitcast %union.anon* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #6
  %4 = bitcast %"class.password_manager::CSVPasswordIterator"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 41, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16password_manager19CSVPasswordIteratorC2ERKN4base8flat_mapImNS_11CSVPassword5LabelENSt3__14lessIvEENS5_6vectorINS5_4pairImS4_EENS5_9allocatorISA_EEEEEENS1_16BasicStringPieceIcNS5_11char_traitsIcEEEE(%"class.password_manager::CSVPasswordIterator"*, %"class.base::flat_map"* dereferenceable(24), i8*, i64) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %0, i64 0, i32 0
  store %"class.base::flat_map"* %1, %"class.base::flat_map"** %5, align 8
  %6 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %0, i64 0, i32 1, i32 0
  store i8* %2, i8** %6, align 8
  %7 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %0, i64 0, i32 1, i32 1
  store i64 %3, i64* %7, align 8
  %8 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %union.anon* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #6
  %11 = bitcast %"class.base::BasicStringPiece"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 17, i1 false)
  tail call void @_ZN16password_manager19CSVPasswordIterator18SeekToNextValidRowEv(%"class.password_manager::CSVPasswordIterator"* %0)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16password_manager19CSVPasswordIterator18SeekToNextValidRowEv(%"class.password_manager::CSVPasswordIterator"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %0, i64 0, i32 1, i32 1
  %3 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %0, i64 0, i32 2, i32 0
  %5 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %0, i64 0, i32 2, i32 1
  %6 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  br label %9

9:                                                ; preds = %33, %1
  %10 = load i64, i64* %2, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %9
  %13 = tail call { i8*, i64 } @_ZN16password_manager14ConsumeCSVLineEPN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* %3) #6
  %14 = extractvalue { i8*, i64 } %13, 0
  %15 = extractvalue { i8*, i64 } %13, 1
  br label %16

16:                                               ; preds = %9, %12
  %17 = phi i8* [ %14, %12 ], [ null, %9 ]
  %18 = phi i64 [ %15, %12 ], [ 0, %9 ]
  store i8* %17, i8** %4, align 8
  store i64 %18, i64* %5, align 8
  %19 = load %"class.base::flat_map"*, %"class.base::flat_map"** %6, align 8
  %20 = load i8, i8* %7, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %16
  tail call void @_ZN16password_manager11CSVPasswordD1Ev(%"class.password_manager::CSVPassword"* %8) #6
  store i8 0, i8* %7, align 8
  %23 = load i8*, i8** %4, align 8
  %24 = load i64, i64* %5, align 8
  br label %25

25:                                               ; preds = %16, %22
  %26 = phi i64 [ %18, %16 ], [ %24, %22 ]
  %27 = phi i8* [ %17, %16 ], [ %23, %22 ]
  tail call void @_ZN16password_manager11CSVPasswordC1ERKN4base8flat_mapImNS0_5LabelENSt3__14lessIvEENS4_6vectorINS4_4pairImS3_EENS4_9allocatorIS9_EEEEEENS1_16BasicStringPieceIcNS4_11char_traitsIcEEEE(%"class.password_manager::CSVPassword"* %8, %"class.base::flat_map"* dereferenceable(24) %19, i8* %27, i64 %26) #6
  store i8 1, i8* %7, align 8
  %28 = load i64, i64* %5, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %25
  %31 = load i64, i64* %2, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %30, %34
  br label %9

34:                                               ; preds = %25
  %35 = tail call i32 @_ZNK16password_manager11CSVPassword8TryParseEv(%"class.password_manager::CSVPassword"* %8) #6
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %33

37:                                               ; preds = %30, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16password_manager19CSVPasswordIteratorC2ERKS0_(%"class.password_manager::CSVPasswordIterator"*, %"class.password_manager::CSVPasswordIterator"* nocapture readonly dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %0, i64 0, i32 1
  %4 = bitcast %"class.base::BasicStringPiece"* %3 to i8*
  %5 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %0, i64 0, i32 2
  %6 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  %7 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %union.anon* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #6
  %9 = bitcast %"class.password_manager::CSVPasswordIterator"* %1 to i64*
  %10 = bitcast %"class.password_manager::CSVPasswordIterator"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 41, i1 false)
  %11 = load i64, i64* %9, align 8
  %12 = bitcast %"class.password_manager::CSVPasswordIterator"* %0 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %1, i64 0, i32 1
  %14 = bitcast %"class.base::BasicStringPiece"* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %14, i64 16, i1 false) #6
  %15 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %1, i64 0, i32 2
  %16 = bitcast %"class.base::BasicStringPiece"* %15 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %16, i64 16, i1 false) #6
  %17 = icmp eq i64 %11, 0
  br i1 %17, label %26, label %18

18:                                               ; preds = %2
  %19 = inttoptr i64 %11 to %"class.base::flat_map"*
  %20 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %0, i64 0, i32 2, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN16password_manager11CSVPasswordC1ERKN4base8flat_mapImNS0_5LabelENSt3__14lessIvEENS4_6vectorINS4_4pairImS3_EENS4_9allocatorIS9_EEEEEENS1_16BasicStringPieceIcNS4_11char_traitsIcEEEE(%"class.password_manager::CSVPassword"* %25, %"class.base::flat_map"* nonnull dereferenceable(24) %19, i8* %22, i64 %24) #6
  store i8 1, i8* %20, align 8
  br label %26

26:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(72) %"class.password_manager::CSVPasswordIterator"* @_ZN16password_manager19CSVPasswordIteratoraSERKS0_(%"class.password_manager::CSVPasswordIterator"* returned, %"class.password_manager::CSVPasswordIterator"* nocapture readonly dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.password_manager::CSVPasswordIterator"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.password_manager::CSVPasswordIterator"* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %1, i64 0, i32 1
  %7 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %0, i64 0, i32 1
  %8 = bitcast %"class.base::BasicStringPiece"* %7 to i8*
  %9 = bitcast %"class.base::BasicStringPiece"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 16, i1 false)
  %10 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %1, i64 0, i32 2
  %11 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %0, i64 0, i32 2
  %12 = bitcast %"class.base::BasicStringPiece"* %11 to i8*
  %13 = bitcast %"class.base::BasicStringPiece"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 16, i1 false)
  %14 = inttoptr i64 %4 to %"class.base::flat_map"*
  %15 = icmp eq i64 %4, 0
  %16 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %15, label %28, label %19

19:                                               ; preds = %2
  br i1 %18, label %22, label %20

20:                                               ; preds = %19
  %21 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN16password_manager11CSVPasswordD1Ev(%"class.password_manager::CSVPassword"* %21) #6
  store i8 0, i8* %16, align 8
  br label %22

22:                                               ; preds = %19, %20
  %23 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %24 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %11, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %0, i64 0, i32 2, i32 1
  %27 = load i64, i64* %26, align 8
  tail call void @_ZN16password_manager11CSVPasswordC1ERKN4base8flat_mapImNS0_5LabelENSt3__14lessIvEENS4_6vectorINS4_4pairImS3_EENS4_9allocatorIS9_EEEEEENS1_16BasicStringPieceIcNS4_11char_traitsIcEEEE(%"class.password_manager::CSVPassword"* %23, %"class.base::flat_map"* nonnull dereferenceable(24) %14, i8* %25, i64 %27) #6
  br label %31

28:                                               ; preds = %2
  br i1 %18, label %33, label %29

29:                                               ; preds = %28
  %30 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN16password_manager11CSVPasswordD1Ev(%"class.password_manager::CSVPassword"* %30) #6
  br label %31

31:                                               ; preds = %22, %29
  %32 = phi i8 [ 0, %29 ], [ 1, %22 ]
  store i8 %32, i8* %16, align 8
  br label %33

33:                                               ; preds = %31, %28
  ret %"class.password_manager::CSVPasswordIterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16password_manager19CSVPasswordIteratorD2Ev(%"class.password_manager::CSVPasswordIterator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN16password_manager11CSVPasswordD1Ev(%"class.password_manager::CSVPassword"* %6) #6
  store i8 0, i8* %2, align 8
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(72) %"class.password_manager::CSVPasswordIterator"* @_ZN16password_manager19CSVPasswordIteratorppEv(%"class.password_manager::CSVPasswordIterator"* returned) local_unnamed_addr #0 align 2 {
  tail call void @_ZN16password_manager19CSVPasswordIterator18SeekToNextValidRowEv(%"class.password_manager::CSVPasswordIterator"* %0)
  ret %"class.password_manager::CSVPasswordIterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16password_manager19CSVPasswordIteratorppEi(%"class.password_manager::CSVPasswordIterator"* noalias sret, %"class.password_manager::CSVPasswordIterator"*, i32) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.password_manager::CSVPasswordIterator"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 -86, i64 48, i1 false)
  %5 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %0, i64 0, i32 1
  %6 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  %7 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %0, i64 0, i32 2
  %8 = bitcast %"class.base::BasicStringPiece"* %7 to i8*
  %9 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %union.anon* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #6
  %11 = bitcast %"class.password_manager::CSVPasswordIterator"* %1 to i64*
  %12 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %12, align 8
  %13 = load i64, i64* %11, align 8
  %14 = bitcast %"class.password_manager::CSVPasswordIterator"* %0 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %1, i64 0, i32 1
  %16 = bitcast %"class.base::BasicStringPiece"* %15 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %16, i64 16, i1 false) #6
  %17 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %1, i64 0, i32 2
  %18 = bitcast %"class.base::BasicStringPiece"* %17 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %18, i64 16, i1 false) #6
  %19 = icmp eq i64 %13, 0
  br i1 %19, label %28, label %20

20:                                               ; preds = %3
  %21 = inttoptr i64 %13 to %"class.base::flat_map"*
  %22 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %0, i64 0, i32 2, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN16password_manager11CSVPasswordC1ERKN4base8flat_mapImNS0_5LabelENSt3__14lessIvEENS4_6vectorINS4_4pairImS3_EENS4_9allocatorIS9_EEEEEENS1_16BasicStringPieceIcNS4_11char_traitsIcEEEE(%"class.password_manager::CSVPassword"* %27, %"class.base::flat_map"* nonnull dereferenceable(24) %21, i8* %24, i64 %26) #6
  store i8 1, i8* %22, align 8
  br label %28

28:                                               ; preds = %3, %20
  tail call void @_ZN16password_manager19CSVPasswordIterator18SeekToNextValidRowEv(%"class.password_manager::CSVPasswordIterator"* %1) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK16password_manager19CSVPasswordIteratoreqERKS0_(%"class.password_manager::CSVPasswordIterator"* nocapture readonly, %"class.password_manager::CSVPasswordIterator"* nocapture readonly dereferenceable(72)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %0, i64 0, i32 2, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %1, i64 0, i32 2, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %34

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %1, i64 0, i32 2, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %0, i64 0, i32 2, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = tail call i32 @bcmp(i8* %12, i8* %10, i64 %4) #6
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %34

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %0, i64 0, i32 1, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %1, i64 0, i32 1, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %17, %19
  br i1 %20, label %21, label %34

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %1, i64 0, i32 1, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %0, i64 0, i32 1, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = tail call i32 @bcmp(i8* %25, i8* %23, i64 %17) #6
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %34

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %0, i64 0, i32 0
  %30 = load %"class.base::flat_map"*, %"class.base::flat_map"** %29, align 8
  %31 = getelementptr inbounds %"class.password_manager::CSVPasswordIterator", %"class.password_manager::CSVPasswordIterator"* %1, i64 0, i32 0
  %32 = load %"class.base::flat_map"*, %"class.base::flat_map"** %31, align 8
  %33 = icmp eq %"class.base::flat_map"* %30, %32
  br label %34

34:                                               ; preds = %15, %2, %28, %21, %8
  %35 = phi i1 [ false, %21 ], [ false, %8 ], [ %33, %28 ], [ false, %2 ], [ false, %15 ]
  ret i1 %35
}

declare i32 @_ZNK16password_manager11CSVPassword8TryParseEv(%"class.password_manager::CSVPassword"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i64 } @_ZN16password_manager14ConsumeCSVLineEPN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %35, label %5

5:                                                ; preds = %1, %18
  %6 = phi i8 [ %19, %18 ], [ 0, %1 ]
  %7 = phi i64 [ %21, %18 ], [ 0, %1 ]
  %8 = phi i64 [ %22, %18 ], [ 0, %1 ]
  %9 = tail call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* %0, i64 %7) #6
  %10 = load i8, i8* %9, align 1
  %11 = sext i8 %10 to i32
  switch i32 %11, label %18 [
    i32 10, label %12
    i32 34, label %15
  ]

12:                                               ; preds = %5
  %13 = and i8 %6, 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %25, label %18

15:                                               ; preds = %5
  %16 = and i8 %6, 1
  %17 = xor i8 %16, 1
  br label %18

18:                                               ; preds = %15, %5, %12
  %19 = phi i8 [ %6, %5 ], [ %17, %15 ], [ %6, %12 ]
  %20 = icmp eq i8 %10, 13
  %21 = add nuw i64 %7, 1
  %22 = zext i1 %20 to i64
  %23 = load i64, i64* %2, align 8
  %24 = icmp ult i64 %21, %23
  br i1 %24, label %5, label %35

25:                                               ; preds = %12
  %26 = sub i64 %7, %8
  %27 = tail call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* %0, i64 0, i64 %26)
  %28 = extractvalue { i8*, i64 } %27, 0
  %29 = extractvalue { i8*, i64 } %27, 1
  %30 = add nuw i64 %7, 1
  %31 = tail call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* %0, i64 %30, i64 -1)
  %32 = extractvalue { i8*, i64 } %31, 0
  %33 = extractvalue { i8*, i64 } %31, 1
  %34 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 0
  store i8* %32, i8** %34, align 8
  store i64 %33, i64* %2, align 8
  br label %40

35:                                               ; preds = %18, %1
  %36 = phi i64 [ 0, %1 ], [ %23, %18 ]
  %37 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = bitcast %"class.base::BasicStringPiece"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false)
  br label %40

40:                                               ; preds = %25, %35
  %41 = phi i8* [ %38, %35 ], [ %28, %25 ]
  %42 = phi i64 [ %36, %35 ], [ %29, %25 ]
  %43 = insertvalue { i8*, i64 } undef, i8* %41, 0
  %44 = insertvalue { i8*, i64 } %43, i64 %42, 1
  ret { i8*, i64 } %44
}

; Function Attrs: nounwind ssp uwtable
declare { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"*, i64, i64) local_unnamed_addr #0 align 2

; Function Attrs: nounwind
declare void @_ZN16password_manager11CSVPasswordD1Ev(%"class.password_manager::CSVPassword"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
declare dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #0 align 2

declare void @_ZN16password_manager11CSVPasswordC1ERKN4base8flat_mapImNS0_5LabelENSt3__14lessIvEENS4_6vectorINS4_4pairImS3_EENS4_9allocatorIS9_EEEEEENS1_16BasicStringPieceIcNS4_11char_traitsIcEEEE(%"class.password_manager::CSVPassword"*, %"class.base::flat_map"* dereferenceable(24), i8*, i64) unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind readonly }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
