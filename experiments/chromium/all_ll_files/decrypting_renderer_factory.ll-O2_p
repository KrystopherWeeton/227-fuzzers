; ModuleID = '../../media/renderers/decrypting_renderer_factory.cc'
source_filename = "../../media/renderers/decrypting_renderer_factory.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::DecryptingRendererFactory" = type { %"class.media::RendererFactory", %"class.media::MediaLog"*, %"class.std::__1::unique_ptr" }
%"class.media::RendererFactory" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.media::RendererFactory"* }
%"class.media::MediaLog" = type { i32 (...)**, %class.scoped_refptr }
%class.scoped_refptr = type { %"struct.media::MediaLog::ParentLogRecord"* }
%"struct.media::MediaLog::ParentLogRecord" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", i32, %"class.base::Lock", %"class.media::MediaLog"* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.media::Renderer" = type { i32 (...)** }
%class.scoped_refptr.8 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.9" }>
%"class.base::RefCountedThreadSafe.9" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.10 = type opaque
%"class.media::AudioRendererSink" = type opaque
%"class.media::VideoRendererSink" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.11 }
%class.scoped_refptr.11 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.12", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.12" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.media::DecryptingRenderer" = type { %"class.media::Renderer", %"class.std::__1::unique_ptr.2", %"class.media::MediaLog"*, %class.scoped_refptr.8, i8, %"class.media::CdmContext"*, %"class.media::RendererClient"*, %"class.media::MediaResource"*, %"class.base::OnceCallback", %"class.std::__1::unique_ptr.16", %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.media::Renderer"* }
%"class.media::CdmContext" = type opaque
%"class.media::RendererClient" = type opaque
%"class.media::MediaResource" = type { i32 (...)** }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.media::DecryptingMediaResource"* }
%"class.media::DecryptingMediaResource" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.22 }
%class.scoped_refptr.22 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.23", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.23" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.24" }
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { i8 }

@_ZTVN5media25DecryptingRendererFactoryE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media::DecryptingRendererFactory"*)* @_ZN5media25DecryptingRendererFactoryD2Ev to i8*), i8* bitcast (void (%"class.media::DecryptingRendererFactory"*)* @_ZN5media25DecryptingRendererFactoryD0Ev to i8*), i8* bitcast (%"class.media::Renderer"* (%"class.media::DecryptingRendererFactory"*, %class.scoped_refptr.8*, %class.scoped_refptr.10*, %"class.media::AudioRendererSink"*, %"class.media::VideoRendererSink"*, %"class.base::RepeatingCallback"*, %"class.gfx::ColorSpace"*)* @_ZN5media25DecryptingRendererFactory14CreateRendererERK13scoped_refptrIN4base22SingleThreadTaskRunnerEERKS1_INS2_10TaskRunnerEEPNS_17AudioRendererSinkEPNS_17VideoRendererSinkENS2_17RepeatingCallbackIFvbNSF_IFvRKNS_11OverlayInfoEEEEEEERKN3gfx10ColorSpaceE to i8*), i8* bitcast (i32 (%"class.media::RendererFactory"*)* @_ZN5media15RendererFactory28GetRequiredMediaResourceTypeEv to i8*)] }, align 8

@_ZN5media25DecryptingRendererFactoryC1EPNS_8MediaLogENSt3__110unique_ptrINS_15RendererFactoryENS3_14default_deleteIS5_EEEE = hidden unnamed_addr alias void (%"class.media::DecryptingRendererFactory"*, %"class.media::MediaLog"*, %"class.media::RendererFactory"*), void (%"class.media::DecryptingRendererFactory"*, %"class.media::MediaLog"*, %"class.media::RendererFactory"*)* @_ZN5media25DecryptingRendererFactoryC2EPNS_8MediaLogENSt3__110unique_ptrINS_15RendererFactoryENS3_14default_deleteIS5_EEEE
@_ZN5media25DecryptingRendererFactoryD1Ev = hidden unnamed_addr alias void (%"class.media::DecryptingRendererFactory"*), void (%"class.media::DecryptingRendererFactory"*)* @_ZN5media25DecryptingRendererFactoryD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media25DecryptingRendererFactoryC2EPNS_8MediaLogENSt3__110unique_ptrINS_15RendererFactoryENS3_14default_deleteIS5_EEEE(%"class.media::DecryptingRendererFactory"*, %"class.media::MediaLog"*, %"class.media::RendererFactory"*) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.media::RendererFactory"* %2 to i64
  %5 = getelementptr inbounds %"class.media::DecryptingRendererFactory", %"class.media::DecryptingRendererFactory"* %0, i64 0, i32 0
  tail call void @_ZN5media15RendererFactoryC2Ev(%"class.media::RendererFactory"* %5) #5
  %6 = getelementptr inbounds %"class.media::DecryptingRendererFactory", %"class.media::DecryptingRendererFactory"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5media25DecryptingRendererFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.media::DecryptingRendererFactory", %"class.media::DecryptingRendererFactory"* %0, i64 0, i32 1
  store %"class.media::MediaLog"* %1, %"class.media::MediaLog"** %7, align 8
  %8 = getelementptr inbounds %"class.media::DecryptingRendererFactory", %"class.media::DecryptingRendererFactory"* %0, i64 0, i32 2
  %9 = bitcast %"class.std::__1::unique_ptr"* %8 to i64*
  store i64 %4, i64* %9, align 8
  ret void
}

declare void @_ZN5media15RendererFactoryC2Ev(%"class.media::RendererFactory"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media25DecryptingRendererFactoryD2Ev(%"class.media::DecryptingRendererFactory"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::DecryptingRendererFactory", %"class.media::DecryptingRendererFactory"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5media25DecryptingRendererFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.media::DecryptingRendererFactory", %"class.media::DecryptingRendererFactory"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.media::RendererFactory"*, %"class.media::RendererFactory"** %3, align 8
  store %"class.media::RendererFactory"* null, %"class.media::RendererFactory"** %3, align 8
  %5 = icmp eq %"class.media::RendererFactory"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.media::RendererFactory"* %4 to void (%"class.media::RendererFactory"*)***
  %8 = load void (%"class.media::RendererFactory"*)**, void (%"class.media::RendererFactory"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.media::RendererFactory"*)*, void (%"class.media::RendererFactory"*)** %8, i64 1
  %10 = load void (%"class.media::RendererFactory"*)*, void (%"class.media::RendererFactory"*)** %9, align 8
  tail call void %10(%"class.media::RendererFactory"* nonnull %4) #5
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.media::DecryptingRendererFactory", %"class.media::DecryptingRendererFactory"* %0, i64 0, i32 0
  tail call void @_ZN5media15RendererFactoryD2Ev(%"class.media::RendererFactory"* %12) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5media15RendererFactoryD2Ev(%"class.media::RendererFactory"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media25DecryptingRendererFactoryD0Ev(%"class.media::DecryptingRendererFactory"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::DecryptingRendererFactory", %"class.media::DecryptingRendererFactory"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5media25DecryptingRendererFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.media::DecryptingRendererFactory", %"class.media::DecryptingRendererFactory"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.media::RendererFactory"*, %"class.media::RendererFactory"** %3, align 8
  store %"class.media::RendererFactory"* null, %"class.media::RendererFactory"** %3, align 8
  %5 = icmp eq %"class.media::RendererFactory"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.media::RendererFactory"* %4 to void (%"class.media::RendererFactory"*)***
  %8 = load void (%"class.media::RendererFactory"*)**, void (%"class.media::RendererFactory"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.media::RendererFactory"*)*, void (%"class.media::RendererFactory"*)** %8, i64 1
  %10 = load void (%"class.media::RendererFactory"*)*, void (%"class.media::RendererFactory"*)** %9, align 8
  tail call void %10(%"class.media::RendererFactory"* nonnull %4) #5
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.media::DecryptingRendererFactory", %"class.media::DecryptingRendererFactory"* %0, i64 0, i32 0
  tail call void @_ZN5media15RendererFactoryD2Ev(%"class.media::RendererFactory"* %12) #5
  %13 = bitcast %"class.media::DecryptingRendererFactory"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.media::Renderer"* @_ZN5media25DecryptingRendererFactory14CreateRendererERK13scoped_refptrIN4base22SingleThreadTaskRunnerEERKS1_INS2_10TaskRunnerEEPNS_17AudioRendererSinkEPNS_17VideoRendererSinkENS2_17RepeatingCallbackIFvbNSF_IFvRKNS_11OverlayInfoEEEEEEERKN3gfx10ColorSpaceE(%"class.media::DecryptingRendererFactory"* nocapture readonly, %class.scoped_refptr.8* dereferenceable(8), %class.scoped_refptr.10*, %"class.media::AudioRendererSink"*, %"class.media::VideoRendererSink"*, %"class.base::RepeatingCallback"* nocapture, %"class.gfx::ColorSpace"* dereferenceable(68)) unnamed_addr #0 align 2 {
  %8 = alloca %"class.base::RepeatingCallback", align 8
  %9 = getelementptr inbounds %"class.media::DecryptingRendererFactory", %"class.media::DecryptingRendererFactory"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %10 = load %"class.media::RendererFactory"*, %"class.media::RendererFactory"** %9, align 8
  %11 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::RepeatingCallback"* %5 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::RepeatingCallback"* %8 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %15 = bitcast %"class.media::RendererFactory"* %10 to %"class.media::Renderer"* (%"class.media::RendererFactory"*, %class.scoped_refptr.8*, %class.scoped_refptr.10*, %"class.media::AudioRendererSink"*, %"class.media::VideoRendererSink"*, %"class.base::RepeatingCallback"*, %"class.gfx::ColorSpace"*)***
  %16 = load %"class.media::Renderer"* (%"class.media::RendererFactory"*, %class.scoped_refptr.8*, %class.scoped_refptr.10*, %"class.media::AudioRendererSink"*, %"class.media::VideoRendererSink"*, %"class.base::RepeatingCallback"*, %"class.gfx::ColorSpace"*)**, %"class.media::Renderer"* (%"class.media::RendererFactory"*, %class.scoped_refptr.8*, %class.scoped_refptr.10*, %"class.media::AudioRendererSink"*, %"class.media::VideoRendererSink"*, %"class.base::RepeatingCallback"*, %"class.gfx::ColorSpace"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.media::Renderer"* (%"class.media::RendererFactory"*, %class.scoped_refptr.8*, %class.scoped_refptr.10*, %"class.media::AudioRendererSink"*, %"class.media::VideoRendererSink"*, %"class.base::RepeatingCallback"*, %"class.gfx::ColorSpace"*)*, %"class.media::Renderer"* (%"class.media::RendererFactory"*, %class.scoped_refptr.8*, %class.scoped_refptr.10*, %"class.media::AudioRendererSink"*, %"class.media::VideoRendererSink"*, %"class.base::RepeatingCallback"*, %"class.gfx::ColorSpace"*)** %16, i64 2
  %18 = load %"class.media::Renderer"* (%"class.media::RendererFactory"*, %class.scoped_refptr.8*, %class.scoped_refptr.10*, %"class.media::AudioRendererSink"*, %"class.media::VideoRendererSink"*, %"class.base::RepeatingCallback"*, %"class.gfx::ColorSpace"*)*, %"class.media::Renderer"* (%"class.media::RendererFactory"*, %class.scoped_refptr.8*, %class.scoped_refptr.10*, %"class.media::AudioRendererSink"*, %"class.media::VideoRendererSink"*, %"class.base::RepeatingCallback"*, %"class.gfx::ColorSpace"*)** %17, align 8
  %19 = call %"class.media::Renderer"* %18(%"class.media::RendererFactory"* %10, %class.scoped_refptr.8* dereferenceable(8) %1, %class.scoped_refptr.10* %2, %"class.media::AudioRendererSink"* %3, %"class.media::VideoRendererSink"* %4, %"class.base::RepeatingCallback"* nonnull %8, %"class.gfx::ColorSpace"* dereferenceable(68) %6) #5
  %20 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %20) #5
  %21 = getelementptr inbounds %"class.media::DecryptingRendererFactory", %"class.media::DecryptingRendererFactory"* %0, i64 0, i32 1
  %22 = call i8* @_Znwm(i64 96) #6
  %23 = bitcast i8* %22 to %"class.media::DecryptingRenderer"*
  %24 = load %"class.media::MediaLog"*, %"class.media::MediaLog"** %21, align 8
  %25 = getelementptr inbounds %class.scoped_refptr.8, %class.scoped_refptr.8* %1, i64 0, i32 0
  %26 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %25, align 8
  %27 = icmp eq %"class.base::SingleThreadTaskRunner"* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %7
  %29 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %26, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i32* %29, i32 1 monotonic
  br label %31

31:                                               ; preds = %7, %28
  call void @_ZN5media18DecryptingRendererC1ENSt3__110unique_ptrINS_8RendererENS1_14default_deleteIS3_EEEEPNS_8MediaLogE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.media::DecryptingRenderer"* nonnull %23, %"class.media::Renderer"* %19, %"class.media::MediaLog"* %24, %"class.base::SingleThreadTaskRunner"* %26) #5
  %32 = bitcast i8* %22 to %"class.media::Renderer"*
  ret %"class.media::Renderer"* %32
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

declare i32 @_ZN5media15RendererFactory28GetRequiredMediaResourceTypeEv(%"class.media::RendererFactory"*) unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN5media18DecryptingRendererC1ENSt3__110unique_ptrINS_8RendererENS1_14default_deleteIS3_EEEEPNS_8MediaLogE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.media::DecryptingRenderer"*, %"class.media::Renderer"*, %"class.media::MediaLog"*, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
