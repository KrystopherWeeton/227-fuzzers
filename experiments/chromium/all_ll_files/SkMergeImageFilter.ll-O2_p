; ModuleID = '../../third_party/skia/src/effects/imagefilters/SkMergeImageFilter.cpp'
source_filename = "../../third_party/skia/src/effects/imagefilters/SkMergeImageFilter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkRect = type { float, float, float, float }
%"class.SkImageFilter_Base::CropRect" = type { %struct.SkRect, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [16 x i8] }
%class.SkTArray = type { %class.sk_sp*, i64 }
%class.sk_sp = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.SkImageFilters::CropRect" = type { %struct.SkRect }
%class.SkImageFilter_Base = type <{ %class.SkImageFilter.base, [4 x i8], %class.SkAutoSTArray, i8, [3 x i8], %"class.SkImageFilter_Base::CropRect", i32, [4 x i8] }>
%class.SkImageFilter.base = type { %class.SkFlattenable.base }
%class.SkAutoSTArray = type { i32, %class.sk_sp*, [16 x i8] }
%class.sk_sp.15 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap, i32, [4 x i8], %class.sk_sp.2*, i32, [4 x i8], {}**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, void (%class.sk_sp.15*, %class.SkReadBuffer*)* }
%class.sk_sp.2 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%struct.SkDeserialProcs = type { void (%class.sk_sp.8*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.13*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.2*, i8*, i64, i8*)*, i8* }
%class.sk_sp.8 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.9", [7 x i8] }>
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%class.sk_sp.13 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.14, i32, i32 }
%class.sk_sp.14 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%"class.SkImageFilter_Base::Common" = type { %"class.SkImageFilter_Base::CropRect", %class.SkSTArray }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.(anonymous namespace)::SkMergeImageFilter" = type { %class.SkImageFilter_Base.base, [4 x i8] }
%class.SkImageFilter_Base.base = type <{ %class.SkImageFilter.base, [4 x i8], %class.SkAutoSTArray, i8, [3 x i8], %"class.SkImageFilter_Base::CropRect", i32 }>
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp.16*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.16*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.16*, %class.SkTypeface*, i8*)*, i8* }
%class.sk_sp.16 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.17, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.17 = type { %"struct.std::__1::atomic" }
%class.sk_sp.18 = type { %class.SkSpecialImage* }
%class.SkSpecialImage = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, i32 }
%class.SkSurfaceProps = type { i32, i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.skif::Context" = type { %"class.skif::Mapping", %"class.skif::LayerSpace", %class.SkImageFilterCache*, i32, %class.SkColorSpace*, %"class.skif::FilterResult" }
%"class.skif::Mapping" = type { %class.SkMatrix, %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%"class.skif::LayerSpace" = type { %struct.SkIRect }
%class.SkImageFilterCache = type opaque
%"class.skif::FilterResult" = type { %class.sk_sp.18, %"class.skif::LayerSpace.19" }
%"class.skif::LayerSpace.19" = type { %struct.SkIPoint }
%struct.SkIPoint = type { i32, i32 }
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%class.sk_sp.32 = type { %class.SkSpecialSurface* }
%class.SkSpecialSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, [4 x i8] }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.33, [384 x i64], %class.sk_sp.34, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.35", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.41" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.33 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.34 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%struct.SkRGBA4f = type { float, float, float, float }
%class.SkPaint = type <{ %class.sk_sp.47, %class.sk_sp.48, %class.sk_sp.49, %class.sk_sp.50, %class.sk_sp, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.47 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.48 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.49 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.50 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK13SkImageFilter18getFlattenableTypeEv = comdat any

$_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter = comdat any

$_ZNK18SkImageFilter_Base23affectsTransparentBlackEv = comdat any

@.str = private unnamed_addr constant [19 x i8] c"SkMergeImageFilter\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"SkMergeImageFilterImpl\00", align 1
@_ZN4skifL11kNoCropRectE = internal unnamed_addr constant %struct.SkRect { float 0xFFF0000000000000, float 0xFFF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000 }, align 4
@_ZTVN12_GLOBAL__N_118SkMergeImageFilterE = internal unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkImageFilter_Base*)* @_ZN18SkImageFilter_BaseD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SkMergeImageFilter"*)* @_ZN12_GLOBAL__N_118SkMergeImageFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.15*, %class.SkReadBuffer*)* (%"class.(anonymous namespace)::SkMergeImageFilter"*)* @_ZNK12_GLOBAL__N_118SkMergeImageFilter10getFactoryEv to i8*), i8* bitcast (i8* (%"class.(anonymous namespace)::SkMergeImageFilter"*)* @_ZNK12_GLOBAL__N_118SkMergeImageFilter11getTypeNameEv to i8*), i8* bitcast (void (%class.SkImageFilter_Base*, %class.SkWriteBuffer*)* @_ZNK18SkImageFilter_Base7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkImageFilter*)* @_ZNK13SkImageFilter18getFlattenableTypeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.SkImageFilter*, %struct.SkRect*)* @_ZNK13SkImageFilter17computeFastBoundsERK6SkRect to i8*), i8* bitcast (void (%class.sk_sp.18*, %"class.(anonymous namespace)::SkMergeImageFilter"*, %"class.skif::Context"*, %struct.SkIPoint*)* @_ZNK12_GLOBAL__N_118SkMergeImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK18SkImageFilter_Base14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_ to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK18SkImageFilter_Base18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_ to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*, %class.SkColorFilter**)* @_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter to i8*), i8* bitcast (i1 (%"class.(anonymous namespace)::SkMergeImageFilter"*)* @_ZNK12_GLOBAL__N_118SkMergeImageFilter21onCanHandleComplexCTMEv to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*)* @_ZNK18SkImageFilter_Base23affectsTransparentBlackEv to i8*), i8* bitcast (void ()* @_ZNK18SkImageFilter_Base13onFilterImageERKN4skif7ContextE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)* @_ZNK18SkImageFilter_Base21onGetInputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEES8_NS_13VisitChildrenE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)* @_ZNK18SkImageFilter_Base22onGetOutputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEE to i8*)] }, align 8
@__const._ZN12_GLOBAL__N_118SkMergeImageFilter10CreateProcER12SkReadBuffer.common = private unnamed_addr constant { %"class.SkImageFilter_Base::CropRect", [4 x i8], %class.SkSTArray } { %"class.SkImageFilter_Base::CropRect" { %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", %class.SkSTArray { %class.SkAlignedSTStorage { [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }, %class.SkTArray { %class.sk_sp* inttoptr (i64 -6148914691236517206 to %class.sk_sp*), i64 -6148914691236517206 } } }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkImageFilters5MergeEP5sk_spI13SkImageFilterEiRKNS_8CropRectE(%class.sk_sp* noalias nocapture sret, %class.sk_sp*, i32, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %5 = tail call i8* @_Znwm(i64 80) #8
  %6 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %3, i64 0, i32 0, i32 0
  %8 = load float, float* %7, align 4
  %9 = fcmp une float %8, 0xFFF0000000000000
  br i1 %9, label %22, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds float, float* %7, i64 1
  %12 = load float, float* %11, align 4
  %13 = fcmp une float %12, 0xFFF0000000000000
  br i1 %13, label %22, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds float, float* %7, i64 2
  %16 = load float, float* %15, align 4
  %17 = fcmp une float %16, 0x7FF0000000000000
  br i1 %17, label %22, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds float, float* %7, i64 3
  %20 = load float, float* %19, align 4
  %21 = fcmp une float %20, 0x7FF0000000000000
  br i1 %21, label %22, label %23

22:                                               ; preds = %18, %14, %10, %4
  br label %23

23:                                               ; preds = %18, %22
  %24 = phi %struct.SkRect* [ %6, %22 ], [ null, %18 ]
  %25 = bitcast i8* %5 to %class.SkImageFilter_Base*
  tail call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %25, %class.sk_sp* %1, i32 %2, %struct.SkRect* %24) #9
  %26 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN12_GLOBAL__N_118SkMergeImageFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %27 = bitcast %class.sk_sp* %0 to i8**
  store i8* %5, i8** %27, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z37SkRegisterMergeImageFilterFlattenablev() local_unnamed_addr #0 {
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), void (%class.sk_sp.15*, %class.SkReadBuffer*)* nonnull @_ZN12_GLOBAL__N_118SkMergeImageFilter10CreateProcER12SkReadBuffer) #9
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), void (%class.sk_sp.15*, %class.SkReadBuffer*)* nonnull @_ZN12_GLOBAL__N_118SkMergeImageFilter10CreateProcER12SkReadBuffer) #9
  ret void
}

declare void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8*, void (%class.sk_sp.15*, %class.SkReadBuffer*)*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_118SkMergeImageFilter10CreateProcER12SkReadBuffer(%class.sk_sp.15* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) #0 align 2 {
  %3 = alloca %"class.SkImageFilter_Base::Common", align 8
  %4 = alloca %"struct.SkImageFilters::CropRect", align 4
  %5 = bitcast %"class.SkImageFilter_Base::Common"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast ({ %"class.SkImageFilter_Base::CropRect", [4 x i8], %class.SkSTArray }* @__const._ZN12_GLOBAL__N_118SkMergeImageFilter10CreateProcER12SkReadBuffer.common to i8*), i64 40, i1 false)
  %6 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %3, i64 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %3, i64 0, i32 1, i32 0, i32 0, i64 16
  %8 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %3, i64 0, i32 1, i32 0, i32 0, i64 0
  %9 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %3, i64 0, i32 1, i32 0, i32 0, i64 24
  %10 = bitcast i8* %9 to i64*
  %11 = bitcast i8* %7 to i8**
  store i8* %8, i8** %11, align 8
  store i64 17179869184, i64* %10, align 8
  %12 = call zeroext i1 @_ZN18SkImageFilter_Base6Common9unflattenER12SkReadBufferi(%"class.SkImageFilter_Base::Common"* nonnull %3, %class.SkReadBuffer* dereferenceable(136) %1, i32 -1) #9
  br i1 %12, label %13, label %17

13:                                               ; preds = %2
  %14 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %13, %2
  %18 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %0, i64 0, i32 0
  store %class.SkFlattenable* null, %class.SkFlattenable** %18, align 8
  br label %54

19:                                               ; preds = %13
  %20 = bitcast i8* %7 to %class.sk_sp**
  %21 = load %class.sk_sp*, %class.sk_sp** %20, align 8
  %22 = load i64, i64* %10, align 8
  %23 = lshr i64 %22, 1
  %24 = trunc i64 %23 to i32
  %25 = and i32 %24, 2147483647
  %26 = bitcast %"struct.SkImageFilters::CropRect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #9
  %27 = load i32, i32* %6, align 8
  %28 = icmp eq i32 %27, 0
  %29 = select i1 %28, i8* bitcast (%struct.SkRect* @_ZN4skifL11kNoCropRectE to i8*), i8* %5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %26, i8* align 4 %29, i64 16, i1 false) #9
  %30 = call i8* @_Znwm(i64 80) #8, !noalias !3
  %31 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %4, i64 0, i32 0
  %32 = getelementptr inbounds %"struct.SkImageFilters::CropRect", %"struct.SkImageFilters::CropRect"* %4, i64 0, i32 0, i32 0
  %33 = load float, float* %32, align 4, !noalias !3
  %34 = fcmp une float %33, 0xFFF0000000000000
  br i1 %34, label %47, label %35

35:                                               ; preds = %19
  %36 = getelementptr inbounds float, float* %32, i64 1
  %37 = load float, float* %36, align 4, !noalias !3
  %38 = fcmp une float %37, 0xFFF0000000000000
  br i1 %38, label %47, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds float, float* %32, i64 2
  %41 = load float, float* %40, align 4, !noalias !3
  %42 = fcmp une float %41, 0x7FF0000000000000
  br i1 %42, label %47, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds float, float* %32, i64 3
  %45 = load float, float* %44, align 4, !noalias !3
  %46 = fcmp une float %45, 0x7FF0000000000000
  br i1 %46, label %47, label %48

47:                                               ; preds = %43, %39, %35, %19
  br label %48

48:                                               ; preds = %47, %43
  %49 = phi %struct.SkRect* [ %31, %47 ], [ null, %43 ]
  %50 = bitcast i8* %30 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %50, %class.sk_sp* %21, i32 %25, %struct.SkRect* %49) #9, !noalias !3
  %51 = bitcast i8* %30 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN12_GLOBAL__N_118SkMergeImageFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %51, align 8, !noalias !3
  %52 = ptrtoint i8* %30 to i64
  %53 = bitcast %class.sk_sp.15* %0 to i64*
  store i64 %52, i64* %53, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #9
  br label %54

54:                                               ; preds = %48, %17
  %55 = load i64, i64* %10, align 8
  %56 = and i64 %55, 4294967294
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %54
  %59 = bitcast i8* %7 to %class.sk_sp**
  br label %64

60:                                               ; preds = %80, %54
  %61 = phi i64 [ %55, %54 ], [ %82, %80 ]
  %62 = and i64 %61, 1
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %88, label %86

64:                                               ; preds = %80, %58
  %65 = phi i64 [ 0, %58 ], [ %81, %80 ]
  %66 = load %class.sk_sp*, %class.sk_sp** %59, align 8
  %67 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %66, i64 %65, i32 0
  %68 = load %class.SkImageFilter*, %class.SkImageFilter** %67, align 8
  %69 = icmp eq %class.SkImageFilter* %68, null
  br i1 %69, label %80, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %68, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = atomicrmw add i32* %71, i32 -1 acq_rel
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %74, label %80

74:                                               ; preds = %70
  %75 = bitcast %class.SkImageFilter* %68 to %class.SkRefCntBase*
  %76 = bitcast %class.SkImageFilter* %68 to void (%class.SkRefCntBase*)***
  %77 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %76, align 8
  %78 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %77, i64 2
  %79 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %78, align 8
  call void %79(%class.SkRefCntBase* nonnull %75) #9
  br label %80

80:                                               ; preds = %74, %70, %64
  %81 = add nuw nsw i64 %65, 1
  %82 = load i64, i64* %10, align 8
  %83 = lshr i64 %82, 1
  %84 = and i64 %83, 2147483647
  %85 = icmp ult i64 %81, %84
  br i1 %85, label %64, label %60

86:                                               ; preds = %60
  %87 = load i8*, i8** %11, align 8
  call void @_Z7sk_freePv(i8* %87) #9
  br label %88

88:                                               ; preds = %60, %86
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base*, %class.sk_sp*, i32, %struct.SkRect*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_118SkMergeImageFilterD0Ev(%"class.(anonymous namespace)::SkMergeImageFilter"*) unnamed_addr #5 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::SkMergeImageFilter"* %0 to %class.SkImageFilter_Base*
  tail call void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base* %2) #9
  %3 = bitcast %"class.(anonymous namespace)::SkMergeImageFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #9
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal nonnull void (%class.sk_sp.15*, %class.SkReadBuffer*)* @_ZNK12_GLOBAL__N_118SkMergeImageFilter10getFactoryEv(%"class.(anonymous namespace)::SkMergeImageFilter"* nocapture readnone) unnamed_addr #6 align 2 {
  ret void (%class.sk_sp.15*, %class.SkReadBuffer*)* @_ZN12_GLOBAL__N_118SkMergeImageFilter10CreateProcER12SkReadBuffer
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK12_GLOBAL__N_118SkMergeImageFilter11getTypeNameEv(%"class.(anonymous namespace)::SkMergeImageFilter"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0)
}

declare void @_ZNK18SkImageFilter_Base7flattenER13SkWriteBuffer(%class.SkImageFilter_Base*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK13SkImageFilter18getFlattenableTypeEv(%class.SkImageFilter*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

declare { <2 x float>, <2 x float> } @_ZNK13SkImageFilter17computeFastBoundsERK6SkRect(%class.SkImageFilter*, %struct.SkRect* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_118SkMergeImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint(%class.sk_sp.18* noalias sret, %"class.(anonymous namespace)::SkMergeImageFilter"*, %"class.skif::Context"* dereferenceable(136), %struct.SkIPoint* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.skif::FilterResult", align 8
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = alloca %struct.SkSamplingOptions, align 4
  %8 = alloca %struct.SkIRect, align 4
  %9 = alloca { i64, i64 }, align 8
  %10 = bitcast { i64, i64 }* %9 to %struct.SkIRect*
  %11 = alloca %"class.SkImageFilter_Base::CropRect", align 4
  %12 = alloca %class.sk_sp.32, align 8
  %13 = alloca i64, align 8
  %14 = bitcast i64* %13 to %struct.SkISize*
  %15 = bitcast %"class.(anonymous namespace)::SkMergeImageFilter"* %1 to %class.SkImageFilter*
  %16 = tail call i32 @_ZNK13SkImageFilter11countInputsEv(%class.SkImageFilter* %15) #9
  %17 = icmp slt i32 %16, 1
  br i1 %17, label %18, label %20

18:                                               ; preds = %4
  %19 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %19, align 8
  br label %255

20:                                               ; preds = %4
  %21 = bitcast %struct.SkIRect* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #9
  %22 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 0
  %23 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 1
  %24 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 2
  %25 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %21, i8 0, i64 16, i1 false) #9
  %26 = sext i32 %16 to i64
  %27 = shl nsw i64 %26, 3
  %28 = add nuw nsw i64 %27, 8
  %29 = tail call i8* @_Znam(i64 %28) #8
  %30 = bitcast i8* %29 to i64*
  store i64 %26, i64* %30, align 8
  %31 = getelementptr inbounds i8, i8* %29, i64 8
  %32 = bitcast i8* %31 to %class.sk_sp.18*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 %27, i1 false)
  %33 = tail call i8* @_Znam(i64 %27) #8
  %34 = bitcast i8* %33 to %struct.SkIPoint*
  %35 = bitcast %"class.(anonymous namespace)::SkMergeImageFilter"* %1 to %class.SkImageFilter_Base*
  %36 = bitcast %"class.skif::FilterResult"* %5 to i8*
  %37 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %5, i64 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %5, i64 0, i32 1, i32 0
  %39 = bitcast %struct.SkIPoint* %38 to i64*
  %40 = bitcast { i64, i64 }* %9 to i8*
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  %43 = zext i32 %16 to i64
  br label %62

44:                                               ; preds = %142
  %45 = load i32, i32* %24, align 4
  %46 = load i32, i32* %22, align 4
  %47 = load i32, i32* %25, align 4
  %48 = load i32, i32* %23, align 4
  %49 = sext i32 %45 to i64
  %50 = sext i32 %46 to i64
  %51 = sext i32 %47 to i64
  %52 = sext i32 %48 to i64
  %53 = sub nsw i64 %49, %50
  %54 = sub nsw i64 %51, %52
  %55 = icmp slt i64 %53, 1
  %56 = icmp slt i64 %54, 1
  %57 = or i1 %55, %56
  br i1 %57, label %145, label %58

58:                                               ; preds = %44
  %59 = or i64 %54, %53
  %60 = add nsw i64 %59, 2147483648
  %61 = icmp ugt i64 %60, 4294967295
  br i1 %61, label %145, label %147

62:                                               ; preds = %142, %20
  %63 = phi i64 [ 0, %20 ], [ %143, %142 ]
  %64 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %34, i64 %63
  %65 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %64, i64 0, i32 0
  store i32 0, i32* %65, align 4
  %66 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %34, i64 %63, i32 1
  store i32 0, i32* %66, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #9, !noalias !6
  %67 = trunc i64 %63 to i32
  call void @_ZNK18SkImageFilter_Base11filterInputILN4skif5UsageE0EEENS1_12FilterResultIXT_EEEiRKNS1_7ContextE(%"class.skif::FilterResult"* nonnull sret %5, %class.SkImageFilter_Base* %35, i32 %67, %"class.skif::Context"* dereferenceable(136) %2) #9, !noalias !6
  %68 = load %class.SkSpecialImage*, %class.SkSpecialImage** %37, align 8, !noalias !9
  %69 = icmp eq %class.SkSpecialImage* %68, null
  br i1 %69, label %70, label %71

70:                                               ; preds = %62
  store i32 0, i32* %65, align 4, !noalias !9
  store i32 0, i32* %66, align 4, !noalias !9
  br label %85

71:                                               ; preds = %62
  %72 = load i64, i64* %39, align 8, !noalias !9
  %73 = bitcast %struct.SkIPoint* %64 to i64*
  store i64 %72, i64* %73, align 4, !noalias !9
  %74 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %68, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = atomicrmw add i32* %74, i32 1 monotonic, !noalias !9
  %76 = ptrtoint %class.SkSpecialImage* %68 to i64
  %77 = atomicrmw add i32* %74, i32 -1 acq_rel, !noalias !6
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %79, label %85

79:                                               ; preds = %71
  %80 = bitcast %class.SkSpecialImage* %68 to %class.SkRefCntBase*
  %81 = bitcast %class.SkSpecialImage* %68 to void (%class.SkRefCntBase*)***
  %82 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %81, align 8, !noalias !6
  %83 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %82, i64 2
  %84 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %83, align 8, !noalias !6
  call void %84(%class.SkRefCntBase* nonnull %80) #9, !noalias !6
  br label %85

85:                                               ; preds = %70, %71, %79
  %86 = phi i64 [ 0, %70 ], [ %76, %79 ], [ %76, %71 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #9, !noalias !6
  %87 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %32, i64 %63
  %88 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %87, i64 0, i32 0
  %89 = load %class.SkSpecialImage*, %class.SkSpecialImage** %88, align 8
  %90 = bitcast %class.sk_sp.18* %87 to i64*
  store i64 %86, i64* %90, align 8
  %91 = icmp eq %class.SkSpecialImage* %89, null
  %92 = inttoptr i64 %86 to %class.SkSpecialImage*
  br i1 %91, label %105, label %93

93:                                               ; preds = %85
  %94 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %89, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = atomicrmw add i32* %94, i32 -1 acq_rel
  %96 = icmp eq i32 %95, 1
  br i1 %96, label %97, label %103

97:                                               ; preds = %93
  %98 = bitcast %class.SkSpecialImage* %89 to %class.SkRefCntBase*
  %99 = bitcast %class.SkSpecialImage* %89 to void (%class.SkRefCntBase*)***
  %100 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %99, align 8
  %101 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %100, i64 2
  %102 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %101, align 8
  call void %102(%class.SkRefCntBase* nonnull %98) #9
  br label %103

103:                                              ; preds = %93, %97
  %104 = load %class.SkSpecialImage*, %class.SkSpecialImage** %88, align 8
  br label %105

105:                                              ; preds = %103, %85
  %106 = phi %class.SkSpecialImage* [ %104, %103 ], [ %92, %85 ]
  %107 = icmp eq %class.SkSpecialImage* %106, null
  br i1 %107, label %142, label %108

108:                                              ; preds = %105
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #9
  %109 = load i32, i32* %65, align 4
  %110 = load i32, i32* %66, align 4
  %111 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %106, i64 0, i32 2, i32 2
  %112 = load i32, i32* %111, align 4
  %113 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %106, i64 0, i32 2, i32 0
  %114 = load i32, i32* %113, align 4
  %115 = sub i32 %112, %114
  %116 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %106, i64 0, i32 2, i32 3
  %117 = load i32, i32* %116, align 4
  %118 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %106, i64 0, i32 2, i32 1
  %119 = load i32, i32* %118, align 4
  %120 = sub i32 %117, %119
  %121 = sext i32 %109 to i64
  %122 = sext i32 %115 to i64
  %123 = add nsw i64 %122, %121
  %124 = icmp slt i64 %123, 2147483647
  %125 = select i1 %124, i64 %123, i64 2147483647
  %126 = icmp sgt i64 %125, -2147483647
  %127 = select i1 %126, i64 %125, i64 -2147483647
  %128 = sext i32 %110 to i64
  %129 = sext i32 %120 to i64
  %130 = add nsw i64 %129, %128
  %131 = icmp slt i64 %130, 2147483647
  %132 = select i1 %131, i64 %130, i64 2147483647
  %133 = icmp sgt i64 %132, -2147483647
  %134 = select i1 %133, i64 %132, i64 -2147483647
  %135 = zext i32 %110 to i64
  %136 = shl nuw i64 %135, 32
  %137 = zext i32 %109 to i64
  %138 = or i64 %136, %137
  %139 = shl nsw i64 %134, 32
  %140 = and i64 %127, 4294967295
  %141 = or i64 %139, %140
  store i64 %138, i64* %42, align 8
  store i64 %141, i64* %41, align 8
  call void @_ZN7SkIRect4joinERKS_(%struct.SkIRect* nonnull %8, %struct.SkIRect* nonnull dereferenceable(16) %10) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #9
  br label %142

142:                                              ; preds = %105, %108
  %143 = add nuw nsw i64 %63, 1
  %144 = icmp eq i64 %143, %43
  br i1 %144, label %44, label %62

145:                                              ; preds = %44, %58
  %146 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %146, align 8
  br label %228

147:                                              ; preds = %58
  %148 = bitcast %"class.SkImageFilter_Base::CropRect"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %148) #9
  %149 = getelementptr inbounds %"class.(anonymous namespace)::SkMergeImageFilter", %"class.(anonymous namespace)::SkMergeImageFilter"* %1, i64 0, i32 0, i32 5
  %150 = bitcast %"class.SkImageFilter_Base::CropRect"* %149 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %148, i8* align 4 %150, i64 20, i1 false) #9
  %151 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 0, i32 1
  call void @_ZNK18SkImageFilter_Base8CropRect7applyToERK7SkIRectRK8SkMatrixbPS1_(%"class.SkImageFilter_Base::CropRect"* nonnull %11, %struct.SkIRect* nonnull dereferenceable(16) %8, %class.SkMatrix* dereferenceable(40) %151, i1 zeroext false, %struct.SkIRect* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %148) #9
  %152 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 1, i32 0
  %153 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %8, %struct.SkIRect* nonnull dereferenceable(16) %8, %struct.SkIRect* dereferenceable(16) %152) #9
  br i1 %153, label %156, label %154

154:                                              ; preds = %147
  %155 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %155, align 8
  br label %228

156:                                              ; preds = %147
  %157 = load i32, i32* %22, align 4
  %158 = load i32, i32* %23, align 4
  %159 = bitcast %class.sk_sp.32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %159) #9
  %160 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %12, i64 0, i32 0
  store %class.SkSpecialSurface* inttoptr (i64 -6148914691236517206 to %class.SkSpecialSurface*), %class.SkSpecialSurface** %160, align 8
  %161 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %161) #9
  %162 = load i32, i32* %24, align 4
  %163 = sub i32 %162, %157
  %164 = load i32, i32* %25, align 4
  %165 = sub i32 %164, %158
  %166 = zext i32 %165 to i64
  %167 = shl nuw i64 %166, 32
  %168 = zext i32 %163 to i64
  %169 = or i64 %167, %168
  store i64 %169, i64* %13, align 8
  %170 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 5, i32 0, i32 0
  %171 = load %class.SkSpecialImage*, %class.SkSpecialImage** %170, align 8, !noalias !12
  %172 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %171, i64 0, i32 1
  %173 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 3
  %174 = load i32, i32* %173, align 8, !noalias !12
  %175 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 4
  %176 = load %class.SkColorSpace*, %class.SkColorSpace** %175, align 8, !noalias !12
  call void @_ZNK14SkSpecialImage11makeSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaTypeRK14SkSurfaceProps(%class.sk_sp.32* nonnull sret %12, %class.SkSpecialImage* %171, i32 %174, %class.SkColorSpace* %176, %struct.SkISize* nonnull dereferenceable(8) %14, i32 2, %class.SkSurfaceProps* dereferenceable(8) %172) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %161) #9
  %177 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %160, align 8
  %178 = icmp eq %class.SkSpecialSurface* %177, null
  br i1 %178, label %179, label %181

179:                                              ; preds = %156
  %180 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %180, align 8
  br label %227

181:                                              ; preds = %156
  %182 = call %class.SkCanvas* @_ZN16SkSpecialSurface9getCanvasEv(%class.SkSpecialSurface* nonnull %177) #9
  %183 = bitcast { <2 x float>, <2 x float> }* %6 to %struct.SkRGBA4f*
  %184 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %184) #9
  %185 = call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 0) #9
  %186 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  %187 = extractvalue { <2 x float>, <2 x float> } %185, 0
  store <2 x float> %187, <2 x float>* %186, align 8
  %188 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  %189 = extractvalue { <2 x float>, <2 x float> } %185, 1
  store <2 x float> %189, <2 x float>* %188, align 8
  call void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas* %182, %struct.SkRGBA4f* nonnull dereferenceable(16) %183, i32 1) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %184) #9
  %190 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %7, i64 0, i32 0
  %191 = zext i32 %16 to i64
  br label %192

192:                                              ; preds = %206, %181
  %193 = phi i64 [ 0, %181 ], [ %207, %206 ]
  %194 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %32, i64 %193, i32 0
  %195 = load %class.SkSpecialImage*, %class.SkSpecialImage** %194, align 8
  %196 = icmp eq %class.SkSpecialImage* %195, null
  br i1 %196, label %206, label %197

197:                                              ; preds = %192
  %198 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %34, i64 %193, i32 0
  %199 = load i32, i32* %198, align 4
  %200 = sub nsw i32 %199, %157
  %201 = sitofp i32 %200 to float
  %202 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %34, i64 %193, i32 1
  %203 = load i32, i32* %202, align 4
  %204 = sub nsw i32 %203, %158
  %205 = sitofp i32 %204 to float
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %190) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %190, i8 0, i64 20, i1 false) #9
  call void @_ZNK14SkSpecialImage4drawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint(%class.SkSpecialImage* nonnull %195, %class.SkCanvas* %182, float %201, float %205, %struct.SkSamplingOptions* nonnull dereferenceable(20) %7, %class.SkPaint* null) #9
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %190) #9
  br label %206

206:                                              ; preds = %192, %197
  %207 = add nuw nsw i64 %193, 1
  %208 = icmp eq i64 %207, %191
  br i1 %208, label %209, label %192

209:                                              ; preds = %206
  %210 = load i32, i32* %22, align 4
  %211 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 0
  store i32 %210, i32* %211, align 4
  %212 = load i32, i32* %23, align 4
  %213 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 1
  store i32 %212, i32* %213, align 4
  %214 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %160, align 8
  call void @_ZN16SkSpecialSurface17makeImageSnapshotEv(%class.sk_sp.18* sret %0, %class.SkSpecialSurface* %214) #9
  %215 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %160, align 8
  %216 = icmp eq %class.SkSpecialSurface* %215, null
  br i1 %216, label %227, label %217

217:                                              ; preds = %209
  %218 = getelementptr inbounds %class.SkSpecialSurface, %class.SkSpecialSurface* %215, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = atomicrmw add i32* %218, i32 -1 acq_rel
  %220 = icmp eq i32 %219, 1
  br i1 %220, label %221, label %227

221:                                              ; preds = %217
  %222 = bitcast %class.SkSpecialSurface* %215 to %class.SkRefCntBase*
  %223 = bitcast %class.SkSpecialSurface* %215 to void (%class.SkRefCntBase*)***
  %224 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %223, align 8
  %225 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %224, i64 2
  %226 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %225, align 8
  call void %226(%class.SkRefCntBase* nonnull %222) #9
  br label %227

227:                                              ; preds = %179, %209, %217, %221
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %159) #9
  br label %228

228:                                              ; preds = %154, %227, %145
  call void @_ZdaPv(i8* nonnull %33) #8
  %229 = icmp eq i8* %31, null
  br i1 %229, label %254, label %230

230:                                              ; preds = %228
  %231 = load i64, i64* %30, align 8
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %253, label %233

233:                                              ; preds = %230
  %234 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %32, i64 %231
  br label %235

235:                                              ; preds = %251, %233
  %236 = phi %class.sk_sp.18* [ %237, %251 ], [ %234, %233 ]
  %237 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %236, i64 -1
  %238 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %237, i64 0, i32 0
  %239 = load %class.SkSpecialImage*, %class.SkSpecialImage** %238, align 8
  %240 = icmp eq %class.SkSpecialImage* %239, null
  br i1 %240, label %251, label %241

241:                                              ; preds = %235
  %242 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %239, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %243 = atomicrmw add i32* %242, i32 -1 acq_rel
  %244 = icmp eq i32 %243, 1
  br i1 %244, label %245, label %251

245:                                              ; preds = %241
  %246 = bitcast %class.SkSpecialImage* %239 to %class.SkRefCntBase*
  %247 = bitcast %class.SkSpecialImage* %239 to void (%class.SkRefCntBase*)***
  %248 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %247, align 8
  %249 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %248, i64 2
  %250 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %249, align 8
  call void %250(%class.SkRefCntBase* nonnull %246) #9
  br label %251

251:                                              ; preds = %245, %241, %235
  %252 = icmp eq %class.sk_sp.18* %237, %32
  br i1 %252, label %253, label %235

253:                                              ; preds = %251, %230
  call void @_ZdaPv(i8* nonnull %29) #8
  br label %254

254:                                              ; preds = %228, %253
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #9
  br label %255

255:                                              ; preds = %254, %18
  ret void
}

declare { i64, i64 } @_ZNK18SkImageFilter_Base14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_(%class.SkImageFilter_Base*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) unnamed_addr #2

declare { i64, i64 } @_ZNK18SkImageFilter_Base18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS1_(%class.SkImageFilter_Base*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter(%class.SkImageFilter_Base*, %class.SkColorFilter**) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZNK12_GLOBAL__N_118SkMergeImageFilter21onCanHandleComplexCTMEv(%"class.(anonymous namespace)::SkMergeImageFilter"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base23affectsTransparentBlackEv(%class.SkImageFilter_Base*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK18SkImageFilter_Base13onFilterImageERKN4skif7ContextE() unnamed_addr

declare { i64, i64 } @_ZNK18SkImageFilter_Base21onGetInputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEES8_NS_13VisitChildrenE(%class.SkImageFilter_Base*, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::LayerSpace"* dereferenceable(16), %"class.skif::LayerSpace"* dereferenceable(16), i1 zeroext) unnamed_addr #2

declare { i64, i64 } @_ZNK18SkImageFilter_Base22onGetOutputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEE(%class.SkImageFilter_Base*, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::LayerSpace"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare i32 @_ZNK13SkImageFilter11countInputsEv(%class.SkImageFilter*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN7SkIRect4joinERKS_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNK18SkImageFilter_Base8CropRect7applyToERK7SkIRectRK8SkMatrixbPS1_(%"class.SkImageFilter_Base::CropRect"*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i1 zeroext, %struct.SkIRect*) local_unnamed_addr #2

declare %class.SkCanvas* @_ZN16SkSpecialSurface9getCanvasEv(%class.SkSpecialSurface*) local_unnamed_addr #2

declare void @_ZN16SkSpecialSurface17makeImageSnapshotEv(%class.sk_sp.18* sret, %class.SkSpecialSurface*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZNK18SkImageFilter_Base11filterInputILN4skif5UsageE0EEENS1_12FilterResultIXT_EEEiRKNS1_7ContextE(%"class.skif::FilterResult"* sret, %class.SkImageFilter_Base*, i32, %"class.skif::Context"* dereferenceable(136)) local_unnamed_addr #2

declare zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNK14SkSpecialImage11makeSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaTypeRK14SkSurfaceProps(%class.sk_sp.32* sret, %class.SkSpecialImage*, i32, %class.SkColorSpace*, %struct.SkISize* dereferenceable(8), i32, %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32) local_unnamed_addr #2

declare void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas*, %struct.SkRGBA4f* dereferenceable(16), i32) local_unnamed_addr #2

declare void @_ZNK14SkSpecialImage4drawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint(%class.SkSpecialImage*, %class.SkCanvas*, float, float, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #7

declare zeroext i1 @_ZN18SkImageFilter_Base6Common9unflattenER12SkReadBufferi(%"class.SkImageFilter_Base::Common"*, %class.SkReadBuffer* dereferenceable(136), i32) local_unnamed_addr #2

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN14SkImageFilters5MergeEP5sk_spI13SkImageFilterEiRKNS_8CropRectE: argument 0"}
!5 = distinct !{!5, !"_ZN14SkImageFilters5MergeEP5sk_spI13SkImageFilterEiRKNS_8CropRectE"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK18SkImageFilter_Base11filterInputEiRKN4skif7ContextEP8SkIPoint: argument 0"}
!8 = distinct !{!8, !"_ZNK18SkImageFilter_Base11filterInputEiRKN4skif7ContextEP8SkIPoint"}
!9 = !{!10, !7}
!10 = distinct !{!10, !11, !"_ZNK4skif12FilterResultILNS_5UsageE0EE14imageAndOffsetEP8SkIPoint: argument 0"}
!11 = distinct !{!11, !"_ZNK4skif12FilterResultILNS_5UsageE0EE14imageAndOffsetEP8SkIPoint"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK4skif7Context11makeSurfaceERK7SkISizePK14SkSurfaceProps: argument 0"}
!14 = distinct !{!14, !"_ZNK4skif7Context11makeSurfaceERK7SkISizePK14SkSurfaceProps"}
